// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: public_msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "public_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class C_RequestPublicKeyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C_RequestPublicKey> {
} _C_RequestPublicKey_default_instance_;
class C_PublicKeyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C_PublicKey> {
} _C_PublicKey_default_instance_;
class CL_RegAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CL_RegAccount> {
} _CL_RegAccount_default_instance_;
class CL_LoginDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CL_Login> {
} _CL_Login_default_instance_;
class LoginValidateboxDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginValidatebox> {
} _LoginValidatebox_default_instance_;
class LC_LoginDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LC_Login> {
} _LC_Login_default_instance_;
class CL_LoginBySmsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CL_LoginBySms> {
} _CL_LoginBySms_default_instance_;
class SC_KickClientDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_KickClient> {
} _SC_KickClient_default_instance_;
class CL_LoginAllDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CL_LoginAll> {
} _CL_LoginAll_default_instance_;
class CS_RequestSmsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_RequestSms> {
} _CS_RequestSms_default_instance_;
class SC_RequestSmsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_RequestSms> {
} _SC_RequestSms_default_instance_;
class CS_ResetAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ResetAccount> {
} _CS_ResetAccount_default_instance_;
class SC_ResetAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ResetAccount> {
} _SC_ResetAccount_default_instance_;
class CS_SetPasswordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_SetPassword> {
} _CS_SetPassword_default_instance_;
class SC_SetPasswordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_SetPassword> {
} _SC_SetPassword_default_instance_;
class CS_SetPasswordBySmsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_SetPasswordBySms> {
} _CS_SetPasswordBySms_default_instance_;
class CS_SetNicknameDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_SetNickname> {
} _CS_SetNickname_default_instance_;
class SC_SetNicknameDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_SetNickname> {
} _SC_SetNickname_default_instance_;
class CS_ChangeHeaderIconDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ChangeHeaderIcon> {
} _CS_ChangeHeaderIcon_default_instance_;
class SC_ChangeHeaderIconDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ChangeHeaderIcon> {
} _SC_ChangeHeaderIcon_default_instance_;
class InviterInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InviterInfo> {
} _InviterInfo_default_instance_;
class CL_GetInviterInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CL_GetInviterInfo> {
} _CL_GetInviterInfo_default_instance_;
class LC_GetInviterInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LC_GetInviterInfo> {
} _LC_GetInviterInfo_default_instance_;
class CS_RequestPlayerInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_RequestPlayerInfo> {
} _CS_RequestPlayerInfo_default_instance_;
class SC_ReplyPlayerInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ReplyPlayerInfo> {
} _SC_ReplyPlayerInfo_default_instance_;
class GameMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GameMsg> {
} _GameMsg_default_instance_;
class SC_ReplyPlayerInfoCompleteDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ReplyPlayerInfoComplete> {
} _SC_ReplyPlayerInfoComplete_default_instance_;
class CS_LoginValidateboxDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_LoginValidatebox> {
} _CS_LoginValidatebox_default_instance_;
class SC_LoginValidateboxDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_LoginValidatebox> {
} _SC_LoginValidatebox_default_instance_;
class CS_ChangeGameDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ChangeGame> {
} _CS_ChangeGame_default_instance_;
class CS_JoinPrivateRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_JoinPrivateRoom> {
} _CS_JoinPrivateRoom_default_instance_;
class SC_JoinPrivateRoomFailedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_JoinPrivateRoomFailed> {
} _SC_JoinPrivateRoomFailed_default_instance_;
class CS_PrivateRoomInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_PrivateRoomInfo> {
} _CS_PrivateRoomInfo_default_instance_;
class PrivateRoomInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PrivateRoomInfo> {
} _PrivateRoomInfo_default_instance_;
class SC_PrivateRoomInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_PrivateRoomInfo> {
} _SC_PrivateRoomInfo_default_instance_;
class GC_GameServerCfgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GC_GameServerCfg> {
} _GC_GameServerCfg_default_instance_;
class CG_GameServerCfgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CG_GameServerCfg> {
} _CG_GameServerCfg_default_instance_;
class CS_BankSetPasswordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_BankSetPassword> {
} _CS_BankSetPassword_default_instance_;
class SC_BankSetPasswordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_BankSetPassword> {
} _SC_BankSetPassword_default_instance_;
class CS_BankChangePasswordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_BankChangePassword> {
} _CS_BankChangePassword_default_instance_;
class SC_BankChangePasswordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_BankChangePassword> {
} _SC_BankChangePassword_default_instance_;
class CS_BankLoginDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_BankLogin> {
} _CS_BankLogin_default_instance_;
class SC_BankLoginDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_BankLogin> {
} _SC_BankLogin_default_instance_;
class CS_BankDepositDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_BankDeposit> {
} _CS_BankDeposit_default_instance_;
class SC_BankDepositDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_BankDeposit> {
} _SC_BankDeposit_default_instance_;
class CS_BankDrawDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_BankDraw> {
} _CS_BankDraw_default_instance_;
class SC_BankDrawDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_BankDraw> {
} _SC_BankDraw_default_instance_;
class SC_NotifyBankStatementDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_NotifyBankStatement> {
} _SC_NotifyBankStatement_default_instance_;
class CS_BankStatementDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_BankStatement> {
} _CS_BankStatement_default_instance_;
class SC_BankStatementDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_BankStatement> {
} _SC_BankStatement_default_instance_;
class CS_BankTransferDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_BankTransfer> {
} _CS_BankTransfer_default_instance_;
class SC_BankTransferDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_BankTransfer> {
} _SC_BankTransfer_default_instance_;
class SC_NotifyMoneyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_NotifyMoney> {
} _SC_NotifyMoney_default_instance_;
class CS_BankTransferByGuidDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_BankTransferByGuid> {
} _CS_BankTransferByGuid_default_instance_;
class CS_BuyItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_BuyItem> {
} _CS_BuyItem_default_instance_;
class SC_BuyItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_BuyItem> {
} _SC_BuyItem_default_instance_;
class CS_DelItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_DelItem> {
} _CS_DelItem_default_instance_;
class SC_DelItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_DelItem> {
} _SC_DelItem_default_instance_;
class CS_UseItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_UseItem> {
} _CS_UseItem_default_instance_;
class SC_UseItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_UseItem> {
} _SC_UseItem_default_instance_;
class CS_ChatWorldDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ChatWorld> {
} _CS_ChatWorld_default_instance_;
class SC_ChatWorldDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ChatWorld> {
} _SC_ChatWorld_default_instance_;
class CS_ChatPrivateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ChatPrivate> {
} _CS_ChatPrivate_default_instance_;
class SC_ChatPrivateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ChatPrivate> {
} _SC_ChatPrivate_default_instance_;
class CS_ChatServerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ChatServer> {
} _CS_ChatServer_default_instance_;
class SC_ChatServerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ChatServer> {
} _SC_ChatServer_default_instance_;
class CS_ChatRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ChatRoom> {
} _CS_ChatRoom_default_instance_;
class SC_ChatRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ChatRoom> {
} _SC_ChatRoom_default_instance_;
class CS_ChatTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ChatTable> {
} _CS_ChatTable_default_instance_;
class SC_ChatTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ChatTable> {
} _SC_ChatTable_default_instance_;
class SC_MarqueeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_Marquee> {
} _SC_Marquee_default_instance_;
class CS_QueryPlayerMarqueeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_QueryPlayerMarquee> {
} _CS_QueryPlayerMarquee_default_instance_;
class SC_QueryPlayerMarqueeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_QueryPlayerMarquee> {
} _SC_QueryPlayerMarquee_default_instance_;
class SC_NewMarqueeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_NewMarquee> {
} _SC_NewMarquee_default_instance_;
class CS_SendMailDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_SendMail> {
} _CS_SendMail_default_instance_;
class SC_SendMailDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_SendMail> {
} _SC_SendMail_default_instance_;
class SC_RecviceMailDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_RecviceMail> {
} _SC_RecviceMail_default_instance_;
class CS_DelMailDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_DelMail> {
} _CS_DelMail_default_instance_;
class SC_DelMailDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_DelMail> {
} _SC_DelMail_default_instance_;
class CS_ReceiveMailAttachmentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ReceiveMailAttachment> {
} _CS_ReceiveMailAttachment_default_instance_;
class SC_ReceiveMailAttachmentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ReceiveMailAttachment> {
} _SC_ReceiveMailAttachment_default_instance_;
class CS_ReceiveRewardLoginDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ReceiveRewardLogin> {
} _CS_ReceiveRewardLogin_default_instance_;
class SC_ReceiveRewardLoginDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ReceiveRewardLogin> {
} _SC_ReceiveRewardLogin_default_instance_;
class CS_ReceiveRewardOnlineDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ReceiveRewardOnline> {
} _CS_ReceiveRewardOnline_default_instance_;
class SC_ReceiveRewardOnlineDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ReceiveRewardOnline> {
} _SC_ReceiveRewardOnline_default_instance_;
class CS_ReceiveReliefPaymentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ReceiveReliefPayment> {
} _CS_ReceiveReliefPayment_default_instance_;
class SC_ReceiveReliefPaymentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ReceiveReliefPayment> {
} _SC_ReceiveReliefPayment_default_instance_;
class CE_RequestRankDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CE_RequestRank> {
} _CE_RequestRank_default_instance_;
class EC_ReplyRankDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EC_ReplyRank> {
} _EC_ReplyRank_default_instance_;
class CS_EnterRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_EnterRoom> {
} _CS_EnterRoom_default_instance_;
class SC_EnterRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_EnterRoom> {
} _SC_EnterRoom_default_instance_;
class SC_NotifyEnterRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_NotifyEnterRoom> {
} _SC_NotifyEnterRoom_default_instance_;
class CS_ExitRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ExitRoom> {
} _CS_ExitRoom_default_instance_;
class SC_ExitRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ExitRoom> {
} _SC_ExitRoom_default_instance_;
class SC_NotifyExitRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_NotifyExitRoom> {
} _SC_NotifyExitRoom_default_instance_;
class CS_AutoEnterRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_AutoEnterRoom> {
} _CS_AutoEnterRoom_default_instance_;
class CS_AutoSitDownDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_AutoSitDown> {
} _CS_AutoSitDown_default_instance_;
class CS_SitDownDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_SitDown> {
} _CS_SitDown_default_instance_;
class SC_SitDownDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_SitDown> {
} _SC_SitDown_default_instance_;
class SC_NotifySitDownDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_NotifySitDown> {
} _SC_NotifySitDown_default_instance_;
class CS_StandUpDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_StandUp> {
} _CS_StandUp_default_instance_;
class SC_StandUpDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_StandUp> {
} _SC_StandUp_default_instance_;
class SC_NotifyStandUpDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_NotifyStandUp> {
} _SC_NotifyStandUp_default_instance_;
class CS_EnterRoomAndSitDownDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_EnterRoomAndSitDown> {
} _CS_EnterRoomAndSitDown_default_instance_;
class SC_EnterRoomAndSitDownDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_EnterRoomAndSitDown> {
} _SC_EnterRoomAndSitDown_default_instance_;
class CS_StandUpAndExitRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_StandUpAndExitRoom> {
} _CS_StandUpAndExitRoom_default_instance_;
class SC_StandUpAndExitRoomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_StandUpAndExitRoom> {
} _SC_StandUpAndExitRoom_default_instance_;
class CS_ChangeChairDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ChangeChair> {
} _CS_ChangeChair_default_instance_;
class SC_ChangeChairDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ChangeChair> {
} _SC_ChangeChair_default_instance_;
class CS_ChangeTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ChangeTable> {
} _CS_ChangeTable_default_instance_;
class CS_ReadyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_Ready> {
} _CS_Ready_default_instance_;
class SC_ReadyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_Ready> {
} _SC_Ready_default_instance_;
class CS_ExitDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_Exit> {
} _CS_Exit_default_instance_;
class SC_ReadyFailedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ReadyFailed> {
} _SC_ReadyFailed_default_instance_;
class SC_GamefinishDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_Gamefinish> {
} _SC_Gamefinish_default_instance_;
class SC_PlayerReconnectionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_PlayerReconnection> {
} _SC_PlayerReconnection_default_instance_;
class SC_ChangeTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ChangeTable> {
} _SC_ChangeTable_default_instance_;
class SC_HEARTBEATDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_HEARTBEAT> {
} _SC_HEARTBEAT_default_instance_;
class CS_HEARTBEATDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_HEARTBEAT> {
} _CS_HEARTBEAT_default_instance_;
class CS_ReconnectionPlayDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ReconnectionPlay> {
} _CS_ReconnectionPlay_default_instance_;
class SC_ReconnectionPlayDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ReconnectionPlay> {
} _SC_ReconnectionPlay_default_instance_;
class SC_SimpleResponsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_SimpleRespons> {
} _SC_SimpleRespons_default_instance_;
class CS_QueryPlayerMsgDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_QueryPlayerMsgData> {
} _CS_QueryPlayerMsgData_default_instance_;
class SC_QueryPlayerMsgDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_QueryPlayerMsgData> {
} _SC_QueryPlayerMsgData_default_instance_;
class SC_NewMsgDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_NewMsgData> {
} _SC_NewMsgData_default_instance_;
class CS_SetMsgReadFlagDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_SetMsgReadFlag> {
} _CS_SetMsgReadFlag_default_instance_;
class SC_FeedBackUpDateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_FeedBackUpDate> {
} _SC_FeedBackUpDate_default_instance_;
class SC_DeletMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_DeletMsg> {
} _SC_DeletMsg_default_instance_;
class CS_CashMoneyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_CashMoney> {
} _CS_CashMoney_default_instance_;
class SC_CashMoneyResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_CashMoneyResult> {
} _SC_CashMoneyResult_default_instance_;
class CS_CashMoneyTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_CashMoneyType> {
} _CS_CashMoneyType_default_instance_;
class SC_CashMoneyTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_CashMoneyType> {
} _SC_CashMoneyType_default_instance_;
class SC_NotifyBankDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_NotifyBank> {
} _SC_NotifyBank_default_instance_;
class CS_BandAlipayDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_BandAlipay> {
} _CS_BandAlipay_default_instance_;
class SC_BandAlipayDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_BandAlipay> {
} _SC_BandAlipay_default_instance_;
class CS_TrusteeshipDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_Trusteeship> {
} _CS_Trusteeship_default_instance_;
class SC_ShowTaxDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ShowTax> {
} _SC_ShowTax_default_instance_;
class SD_Delonline_playerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SD_Delonline_player> {
} _SD_Delonline_player_default_instance_;
class SC_AlipayEditDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_AlipayEdit> {
} _SC_AlipayEdit_default_instance_;
class SC_BrocastClientUpdateInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_BrocastClientUpdateInfo> {
} _SC_BrocastClientUpdateInfo_default_instance_;
class SC_FreezeAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_FreezeAccount> {
} _SC_FreezeAccount_default_instance_;
class SC_GameMaintainDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_GameMaintain> {
} _SC_GameMaintain_default_instance_;
class SC_CashMaintainDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_CashMaintain> {
} _SC_CashMaintain_default_instance_;
class CS_GetHelpMoneyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_GetHelpMoney> {
} _CS_GetHelpMoney_default_instance_;
class SC_GetHelpMoneyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_GetHelpMoney> {
} _SC_GetHelpMoney_default_instance_;
class CS_Agent_CashMoneyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_Agent_CashMoney> {
} _CS_Agent_CashMoney_default_instance_;
class SC_Agent_CashMoneyResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_Agent_CashMoneyResult> {
} _SC_Agent_CashMoneyResult_default_instance_;
class CS_RequestNewAwardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_RequestNewAward> {
} _CS_RequestNewAward_default_instance_;
class SC_RequestNewAwardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_RequestNewAward> {
} _SC_RequestNewAward_default_instance_;
class CS_RequestCheckInAwardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_RequestCheckInAward> {
} _CS_RequestCheckInAward_default_instance_;
class SC_RequestCheckInAwardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_RequestCheckInAward> {
} _SC_RequestCheckInAward_default_instance_;
class CS_BindBankCardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_BindBankCard> {
} _CS_BindBankCard_default_instance_;
class SC_BindBankCardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_BindBankCard> {
} _SC_BindBankCard_default_instance_;
class CS_GetBankCardInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_GetBankCardInfo> {
} _CS_GetBankCardInfo_default_instance_;
class SC_GetBankCardInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_GetBankCardInfo> {
} _SC_GetBankCardInfo_default_instance_;
class CS_NewGameMaintainDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_NewGameMaintain> {
} _CS_NewGameMaintain_default_instance_;
class SC_NewGameMaintainDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_NewGameMaintain> {
} _SC_NewGameMaintain_default_instance_;
class CS_PlayerPromotionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_PlayerPromotion> {
} _CS_PlayerPromotion_default_instance_;
class SC_PlayerPromotionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_PlayerPromotion> {
} _SC_PlayerPromotion_default_instance_;

namespace protobuf_public_5fmsg_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[159];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[154];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C_RequestPublicKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C_RequestPublicKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C_RequestPublicKey, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C_RequestPublicKey, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C_RequestPublicKey, re_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C_RequestPublicKey, android_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C_RequestPublicKey, android_pid_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C_PublicKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C_PublicKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C_PublicKey, public_key_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_RegAccount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_RegAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_RegAccount, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_RegAccount, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_RegAccount, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_RegAccount, phone_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_RegAccount, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_RegAccount, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_RegAccount, package_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_RegAccount, imei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_RegAccount, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_RegAccount, ip_area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_RegAccount, android_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_RegAccount, android_pid_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_Login, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_Login, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_Login, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_Login, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_Login, phone_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_Login, imei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_Login, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_Login, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_Login, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_Login, package_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_Login, ip_area_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginValidatebox, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginValidatebox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginValidatebox, question_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginValidatebox, answer_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, is_guest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, alipay_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, alipay_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, is_validatebox_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, pb_validatebox_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, change_alipay_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, ip_area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, enable_transfer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_Login, is_first_),
  7,
  8,
  0,
  9,
  1,
  10,
  2,
  3,
  4,
  11,
  6,
  13,
  5,
  12,
  14,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginBySms, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginBySms, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginBySms, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginBySms, sms_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginBySms, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginBySms, phone_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginBySms, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginBySms, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginBySms, package_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginBySms, imei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginBySms, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginBySms, ip_area_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_KickClient, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_KickClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_KickClient, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginAll, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginAll, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginAll, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginAll, reg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginAll, login_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginAll, sms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_LoginAll, gate_id_),
  3,
  0,
  1,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_RequestSms, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_RequestSms, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_RequestSms, tel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_RequestSms, intention_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_RequestSms, gate_session_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RequestSms, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RequestSms, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RequestSms, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RequestSms, sms_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RequestSms, tel_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ResetAccount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ResetAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ResetAccount, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ResetAccount, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ResetAccount, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ResetAccount, sms_no_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ResetAccount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ResetAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ResetAccount, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ResetAccount, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ResetAccount, nickname_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SetPassword, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SetPassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SetPassword, old_password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SetPassword, password_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SetPassword, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SetPassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SetPassword, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SetPasswordBySms, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SetPasswordBySms, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SetPasswordBySms, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SetPasswordBySms, sms_no_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SetNickname, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SetNickname, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SetNickname, nickname_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SetNickname, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SetNickname, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SetNickname, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SetNickname, result_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChangeHeaderIcon, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChangeHeaderIcon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChangeHeaderIcon, header_icon_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeHeaderIcon, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeHeaderIcon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeHeaderIcon, header_icon_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviterInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviterInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviterInfo, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviterInfo, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviterInfo, alipay_name_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviterInfo, alipay_account_y_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_GetInviterInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_GetInviterInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_GetInviterInfo, invite_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_GetInviterInfo, gate_session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_GetInviterInfo, gate_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CL_GetInviterInfo, guid_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_GetInviterInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_GetInviterInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_GetInviterInfo, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_GetInviterInfo, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_GetInviterInfo, alipay_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_GetInviterInfo, alipay_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_GetInviterInfo, gate_session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_GetInviterInfo, gate_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LC_GetInviterInfo, guid_self_),
  3,
  0,
  1,
  2,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_RequestPlayerInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_RequestPlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReplyPlayerInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReplyPlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReplyPlayerInfo, pb_base_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReplyPlayerInfo, pb_item_bag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReplyPlayerInfo, pb_mail_list_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMsg, first_game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMsg, second_game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMsg, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMsg, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMsg, chair_id_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReplyPlayerInfoComplete, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReplyPlayerInfoComplete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReplyPlayerInfoComplete, pb_gmmessage_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_LoginValidatebox, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_LoginValidatebox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_LoginValidatebox, answer_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_LoginValidatebox, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_LoginValidatebox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_LoginValidatebox, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_LoginValidatebox, pb_validatebox_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChangeGame, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChangeGame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChangeGame, first_game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChangeGame, second_game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChangeGame, private_room_opt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChangeGame, owner_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChangeGame, private_room_chair_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChangeGame, private_room_score_type_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_JoinPrivateRoom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_JoinPrivateRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_JoinPrivateRoom, owner_guid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_JoinPrivateRoomFailed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_JoinPrivateRoomFailed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_JoinPrivateRoomFailed, owner_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_JoinPrivateRoomFailed, result_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_PrivateRoomInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_PrivateRoomInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateRoomInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateRoomInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateRoomInfo, first_game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateRoomInfo, table_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrivateRoomInfo, cell_money_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PrivateRoomInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PrivateRoomInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PrivateRoomInfo, pb_info_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GC_GameServerCfg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GC_GameServerCfg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GC_GameServerCfg, pb_cfg_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CG_GameServerCfg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CG_GameServerCfg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankSetPassword, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankSetPassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankSetPassword, password_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankSetPassword, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankSetPassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankSetPassword, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankChangePassword, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankChangePassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankChangePassword, old_password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankChangePassword, password_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankChangePassword, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankChangePassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankChangePassword, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankLogin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankLogin, password_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankLogin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankLogin, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankDeposit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankDeposit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankDeposit, money_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankDeposit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankDeposit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankDeposit, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankDeposit, money_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankDraw, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankDraw, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankDraw, money_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankDraw, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankDraw, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankDraw, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankDraw, money_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyBankStatement, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyBankStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyBankStatement, pb_statement_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankStatement, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankStatement, cur_serial_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankStatement, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankStatement, pb_statement_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankTransfer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankTransfer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankTransfer, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankTransfer, money_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankTransfer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankTransfer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankTransfer, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankTransfer, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BankTransfer, bank_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyMoney, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyMoney, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyMoney, opt_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyMoney, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyMoney, change_money_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankTransferByGuid, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankTransferByGuid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankTransferByGuid, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BankTransferByGuid, money_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BuyItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BuyItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BuyItem, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BuyItem, item_num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BuyItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BuyItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BuyItem, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BuyItem, item_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BuyItem, result_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_DelItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_DelItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_DelItem, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_DelItem, item_num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_DelItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_DelItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_DelItem, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_DelItem, item_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_DelItem, result_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_UseItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_UseItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_UseItem, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_UseItem, item_num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_UseItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_UseItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_UseItem, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_UseItem, item_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_UseItem, result_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatWorld, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatWorld, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatWorld, chat_content_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatWorld, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatWorld, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatWorld, chat_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatWorld, chat_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatWorld, chat_name_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatPrivate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatPrivate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatPrivate, chat_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatPrivate, private_name_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatPrivate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatPrivate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatPrivate, chat_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatPrivate, private_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatPrivate, chat_name_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatServer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatServer, chat_content_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatServer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatServer, chat_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatServer, chat_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatServer, chat_name_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatRoom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatRoom, chat_content_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatRoom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatRoom, chat_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatRoom, chat_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatRoom, chat_name_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatTable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChatTable, chat_content_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatTable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatTable, chat_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatTable, chat_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChatTable, chat_name_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Marquee, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Marquee, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Marquee, content_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_QueryPlayerMarquee, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_QueryPlayerMarquee, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_QueryPlayerMarquee, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_QueryPlayerMarquee, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_QueryPlayerMarquee, pb_msg_data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NewMarquee, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NewMarquee, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NewMarquee, pb_msg_data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SendMail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SendMail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SendMail, pb_mail_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SendMail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SendMail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SendMail, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SendMail, pb_mail_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RecviceMail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RecviceMail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RecviceMail, pb_mail_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_DelMail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_DelMail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_DelMail, mail_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_DelMail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_DelMail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_DelMail, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_DelMail, mail_id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ReceiveMailAttachment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ReceiveMailAttachment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ReceiveMailAttachment, mail_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveMailAttachment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveMailAttachment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveMailAttachment, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveMailAttachment, mail_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveMailAttachment, pb_attachment_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ReceiveRewardLogin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ReceiveRewardLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveRewardLogin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveRewardLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveRewardLogin, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveRewardLogin, money_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ReceiveRewardOnline, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ReceiveRewardOnline, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveRewardOnline, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveRewardOnline, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveRewardOnline, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveRewardOnline, money_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ReceiveReliefPayment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ReceiveReliefPayment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveReliefPayment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveReliefPayment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveReliefPayment, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReceiveReliefPayment, money_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CE_RequestRank, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CE_RequestRank, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CE_RequestRank, rank_type_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EC_ReplyRank, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EC_ReplyRank, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EC_ReplyRank, rank_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EC_ReplyRank, pb_rank_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_EnterRoom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_EnterRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_EnterRoom, room_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoom, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoom, result_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyEnterRoom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyEnterRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyEnterRoom, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyEnterRoom, guid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ExitRoom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ExitRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ExitRoom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ExitRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ExitRoom, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ExitRoom, result_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyExitRoom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyExitRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyExitRoom, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyExitRoom, guid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_AutoEnterRoom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_AutoEnterRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_AutoSitDown, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_AutoSitDown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SitDown, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SitDown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SitDown, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SitDown, chair_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SitDown, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SitDown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SitDown, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SitDown, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SitDown, result_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifySitDown, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifySitDown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifySitDown, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifySitDown, pb_visual_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifySitDown, is_onfline_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_StandUp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_StandUp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_StandUp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_StandUp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_StandUp, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_StandUp, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_StandUp, result_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyStandUp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyStandUp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyStandUp, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyStandUp, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyStandUp, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyStandUp, is_offline_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_EnterRoomAndSitDown, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_EnterRoomAndSitDown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, pb_visual_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, first_game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, second_game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, ip_area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, private_room_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, balance_money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, private_room_score_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, private_room_cell_money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_EnterRoomAndSitDown, private_room_id_),
  1,
  2,
  3,
  4,
  ~0u,
  5,
  6,
  7,
  0,
  8,
  9,
  10,
  11,
  12,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_StandUpAndExitRoom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_StandUpAndExitRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_StandUpAndExitRoom, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_StandUpAndExitRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_StandUpAndExitRoom, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_StandUpAndExitRoom, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_StandUpAndExitRoom, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_StandUpAndExitRoom, result_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChangeChair, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChangeChair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeChair, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeChair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeChair, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeChair, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeChair, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeChair, pb_visual_info_),
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChangeTable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ChangeTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Ready, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Ready, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Ready, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Ready, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Ready, ready_chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Ready, is_ready_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Exit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Exit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReadyFailed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReadyFailed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReadyFailed, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReadyFailed, money_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Gamefinish, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Gamefinish, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Gamefinish, money_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, pb_visual_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, first_game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, second_game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, ip_area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, is_ready_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, private_room_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, private_room_score_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, private_room_cell_money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, private_room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerReconnection, private_room_has_start_),
  1,
  2,
  3,
  4,
  ~0u,
  5,
  6,
  7,
  0,
  8,
  9,
  10,
  11,
  12,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeTable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeTable, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeTable, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeTable, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeTable, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeTable, pb_visual_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeTable, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeTable, first_game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeTable, second_game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ChangeTable, ip_area_),
  1,
  2,
  3,
  4,
  ~0u,
  5,
  6,
  7,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_HEARTBEAT, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_HEARTBEAT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_HEARTBEAT, severtime_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_HEARTBEAT, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_HEARTBEAT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ReconnectionPlay, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ReconnectionPlay, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReconnectionPlay, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReconnectionPlay, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ReconnectionPlay, find_table_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SimpleRespons, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SimpleRespons, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_SimpleRespons, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_QueryPlayerMsgData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_QueryPlayerMsgData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_QueryPlayerMsgData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_QueryPlayerMsgData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_QueryPlayerMsgData, pb_msg_data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NewMsgData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NewMsgData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NewMsgData, pb_msg_data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SetMsgReadFlag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SetMsgReadFlag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SetMsgReadFlag, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_SetMsgReadFlag, msg_type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_FeedBackUpDate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_FeedBackUpDate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_FeedBackUpDate, feedbackid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_FeedBackUpDate, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_FeedBackUpDate, updatetime_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_DeletMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_DeletMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_DeletMsg, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_DeletMsg, msg_type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_CashMoney, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_CashMoney, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_CashMoney, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_CashMoney, cash_type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_CashMoneyResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_CashMoneyResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_CashMoneyResult, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_CashMoneyResult, bank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_CashMoneyResult, money_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_CashMoneyType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_CashMoneyType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_CashMoneyType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_CashMoneyType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_CashMoneyType, pb_cash_info_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyBank, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyBank, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyBank, opt_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyBank, bank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NotifyBank, change_bank_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BandAlipay, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BandAlipay, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BandAlipay, alipay_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BandAlipay, alipay_name_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BandAlipay, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BandAlipay, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BandAlipay, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BandAlipay, alipay_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BandAlipay, alipay_name_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Trusteeship, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Trusteeship, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Trusteeship, flag_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ShowTax, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ShowTax, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ShowTax, flag_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SD_Delonline_player, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SD_Delonline_player, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SD_Delonline_player, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SD_Delonline_player, game_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_AlipayEdit, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_AlipayEdit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_AlipayEdit, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_AlipayEdit, alipay_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_AlipayEdit, alipay_name_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_AlipayEdit, alipay_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_AlipayEdit, alipay_account_y_),
  4,
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BrocastClientUpdateInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BrocastClientUpdateInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BrocastClientUpdateInfo, update_info_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_FreezeAccount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_FreezeAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_FreezeAccount, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_FreezeAccount, status_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_GameMaintain, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_GameMaintain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_GameMaintain, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_GameMaintain, first_game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_GameMaintain, second_game_type_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_CashMaintain, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_CashMaintain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_CashMaintain, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_GetHelpMoney, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_GetHelpMoney, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_GetHelpMoney, get_rightnow_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_GetHelpMoney, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_GetHelpMoney, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_GetHelpMoney, result_cash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_GetHelpMoney, left_times_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_GetHelpMoney, cash_money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_GetHelpMoney, money_must_less_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Agent_CashMoney, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Agent_CashMoney, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Agent_CashMoney, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Agent_CashMoney, agent_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Agent_CashMoneyResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Agent_CashMoneyResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Agent_CashMoneyResult, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Agent_CashMoneyResult, bank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Agent_CashMoneyResult, money_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_RequestNewAward, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_RequestNewAward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RequestNewAward, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RequestNewAward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RequestNewAward, newaward_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RequestNewAward, money_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_RequestCheckInAward, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_RequestCheckInAward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RequestCheckInAward, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RequestCheckInAward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RequestCheckInAward, checkin_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_RequestCheckInAward, money_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BindBankCard, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BindBankCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_BindBankCard, pb_info_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BindBankCard, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BindBankCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_BindBankCard, bind_result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_GetBankCardInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_GetBankCardInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_GetBankCardInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_GetBankCardInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_GetBankCardInfo, pb_info_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_NewGameMaintain, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_NewGameMaintain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NewGameMaintain, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NewGameMaintain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_NewGameMaintain, first_game_type_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_PlayerPromotion, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_PlayerPromotion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_PlayerPromotion, index_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerPromotion, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerPromotion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_PlayerPromotion, promotion_result_),
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 10, sizeof(C_RequestPublicKey)},
  { 15, 21, sizeof(C_PublicKey)},
  { 22, 39, sizeof(CL_RegAccount)},
  { 51, 66, sizeof(CL_Login)},
  { 76, 83, sizeof(LoginValidatebox)},
  { 85, 105, sizeof(LC_Login)},
  { 120, 135, sizeof(CL_LoginBySms)},
  { 145, 151, sizeof(SC_KickClient)},
  { 152, 162, sizeof(CL_LoginAll)},
  { 167, 175, sizeof(CS_RequestSms)},
  { 178, 186, sizeof(SC_RequestSms)},
  { 189, 198, sizeof(CS_ResetAccount)},
  { 202, 210, sizeof(SC_ResetAccount)},
  { 213, 220, sizeof(CS_SetPassword)},
  { 222, 228, sizeof(SC_SetPassword)},
  { 229, 236, sizeof(CS_SetPasswordBySms)},
  { 238, 244, sizeof(CS_SetNickname)},
  { 245, 252, sizeof(SC_SetNickname)},
  { 254, 260, sizeof(CS_ChangeHeaderIcon)},
  { 261, 267, sizeof(SC_ChangeHeaderIcon)},
  { 268, 277, sizeof(InviterInfo)},
  { 281, 290, sizeof(CL_GetInviterInfo)},
  { 294, 306, sizeof(LC_GetInviterInfo)},
  { 313, 318, sizeof(CS_RequestPlayerInfo)},
  { 318, 326, sizeof(SC_ReplyPlayerInfo)},
  { 329, 339, sizeof(GameMsg)},
  { 344, 350, sizeof(SC_ReplyPlayerInfoComplete)},
  { 351, 357, sizeof(CS_LoginValidatebox)},
  { 358, 365, sizeof(SC_LoginValidatebox)},
  { 367, 378, sizeof(CS_ChangeGame)},
  { 384, 390, sizeof(CS_JoinPrivateRoom)},
  { 391, 398, sizeof(SC_JoinPrivateRoomFailed)},
  { 400, 405, sizeof(CS_PrivateRoomInfo)},
  { 405, 413, sizeof(PrivateRoomInfo)},
  { 416, 422, sizeof(SC_PrivateRoomInfo)},
  { 423, 429, sizeof(GC_GameServerCfg)},
  { 430, 435, sizeof(CG_GameServerCfg)},
  { 435, 441, sizeof(CS_BankSetPassword)},
  { 442, 448, sizeof(SC_BankSetPassword)},
  { 449, 456, sizeof(CS_BankChangePassword)},
  { 458, 464, sizeof(SC_BankChangePassword)},
  { 465, 471, sizeof(CS_BankLogin)},
  { 472, 478, sizeof(SC_BankLogin)},
  { 479, 485, sizeof(CS_BankDeposit)},
  { 486, 493, sizeof(SC_BankDeposit)},
  { 495, 501, sizeof(CS_BankDraw)},
  { 502, 509, sizeof(SC_BankDraw)},
  { 511, 517, sizeof(SC_NotifyBankStatement)},
  { 518, 524, sizeof(CS_BankStatement)},
  { 525, 531, sizeof(SC_BankStatement)},
  { 532, 539, sizeof(CS_BankTransfer)},
  { 541, 549, sizeof(SC_BankTransfer)},
  { 552, 560, sizeof(SC_NotifyMoney)},
  { 563, 570, sizeof(CS_BankTransferByGuid)},
  { 572, 579, sizeof(CS_BuyItem)},
  { 581, 589, sizeof(SC_BuyItem)},
  { 592, 599, sizeof(CS_DelItem)},
  { 601, 609, sizeof(SC_DelItem)},
  { 612, 619, sizeof(CS_UseItem)},
  { 621, 629, sizeof(SC_UseItem)},
  { 632, 638, sizeof(CS_ChatWorld)},
  { 639, 647, sizeof(SC_ChatWorld)},
  { 650, 657, sizeof(CS_ChatPrivate)},
  { 659, 667, sizeof(SC_ChatPrivate)},
  { 670, 676, sizeof(CS_ChatServer)},
  { 677, 685, sizeof(SC_ChatServer)},
  { 688, 694, sizeof(CS_ChatRoom)},
  { 695, 703, sizeof(SC_ChatRoom)},
  { 706, 712, sizeof(CS_ChatTable)},
  { 713, 721, sizeof(SC_ChatTable)},
  { 724, 730, sizeof(SC_Marquee)},
  { 731, 736, sizeof(CS_QueryPlayerMarquee)},
  { 736, 742, sizeof(SC_QueryPlayerMarquee)},
  { 743, 749, sizeof(SC_NewMarquee)},
  { 750, 756, sizeof(CS_SendMail)},
  { 757, 764, sizeof(SC_SendMail)},
  { 766, 772, sizeof(SC_RecviceMail)},
  { 773, 779, sizeof(CS_DelMail)},
  { 780, 787, sizeof(SC_DelMail)},
  { 789, 795, sizeof(CS_ReceiveMailAttachment)},
  { 796, 804, sizeof(SC_ReceiveMailAttachment)},
  { 807, 812, sizeof(CS_ReceiveRewardLogin)},
  { 812, 819, sizeof(SC_ReceiveRewardLogin)},
  { 821, 826, sizeof(CS_ReceiveRewardOnline)},
  { 826, 833, sizeof(SC_ReceiveRewardOnline)},
  { 835, 840, sizeof(CS_ReceiveReliefPayment)},
  { 840, 847, sizeof(SC_ReceiveReliefPayment)},
  { 849, 855, sizeof(CE_RequestRank)},
  { 856, 863, sizeof(EC_ReplyRank)},
  { 865, 871, sizeof(CS_EnterRoom)},
  { 872, 879, sizeof(SC_EnterRoom)},
  { 881, 888, sizeof(SC_NotifyEnterRoom)},
  { 890, 895, sizeof(CS_ExitRoom)},
  { 895, 902, sizeof(SC_ExitRoom)},
  { 904, 911, sizeof(SC_NotifyExitRoom)},
  { 913, 918, sizeof(CS_AutoEnterRoom)},
  { 918, 923, sizeof(CS_AutoSitDown)},
  { 923, 930, sizeof(CS_SitDown)},
  { 932, 940, sizeof(SC_SitDown)},
  { 943, 951, sizeof(SC_NotifySitDown)},
  { 954, 959, sizeof(CS_StandUp)},
  { 959, 967, sizeof(SC_StandUp)},
  { 970, 979, sizeof(SC_NotifyStandUp)},
  { 983, 988, sizeof(CS_EnterRoomAndSitDown)},
  { 988, 1007, sizeof(SC_EnterRoomAndSitDown)},
  { 1021, 1026, sizeof(CS_StandUpAndExitRoom)},
  { 1026, 1035, sizeof(SC_StandUpAndExitRoom)},
  { 1039, 1044, sizeof(CS_ChangeChair)},
  { 1044, 1053, sizeof(SC_ChangeChair)},
  { 1057, 1062, sizeof(CS_ChangeTable)},
  { 1062, 1067, sizeof(CS_Ready)},
  { 1067, 1074, sizeof(SC_Ready)},
  { 1076, 1081, sizeof(CS_Exit)},
  { 1081, 1088, sizeof(SC_ReadyFailed)},
  { 1090, 1096, sizeof(SC_Gamefinish)},
  { 1097, 1117, sizeof(SC_PlayerReconnection)},
  { 1132, 1146, sizeof(SC_ChangeTable)},
  { 1155, 1161, sizeof(SC_HEARTBEAT)},
  { 1162, 1167, sizeof(CS_HEARTBEAT)},
  { 1167, 1172, sizeof(CS_ReconnectionPlay)},
  { 1172, 1178, sizeof(SC_ReconnectionPlay)},
  { 1179, 1185, sizeof(SC_SimpleRespons)},
  { 1186, 1191, sizeof(CS_QueryPlayerMsgData)},
  { 1191, 1197, sizeof(SC_QueryPlayerMsgData)},
  { 1198, 1204, sizeof(SC_NewMsgData)},
  { 1205, 1212, sizeof(CS_SetMsgReadFlag)},
  { 1214, 1222, sizeof(SC_FeedBackUpDate)},
  { 1225, 1232, sizeof(SC_DeletMsg)},
  { 1234, 1241, sizeof(CS_CashMoney)},
  { 1243, 1251, sizeof(SC_CashMoneyResult)},
  { 1254, 1259, sizeof(CS_CashMoneyType)},
  { 1259, 1265, sizeof(SC_CashMoneyType)},
  { 1266, 1274, sizeof(SC_NotifyBank)},
  { 1277, 1284, sizeof(CS_BandAlipay)},
  { 1286, 1294, sizeof(SC_BandAlipay)},
  { 1297, 1303, sizeof(CS_Trusteeship)},
  { 1304, 1310, sizeof(SC_ShowTax)},
  { 1311, 1318, sizeof(SD_Delonline_player)},
  { 1320, 1330, sizeof(SC_AlipayEdit)},
  { 1335, 1341, sizeof(SC_BrocastClientUpdateInfo)},
  { 1342, 1349, sizeof(SC_FreezeAccount)},
  { 1351, 1359, sizeof(SC_GameMaintain)},
  { 1362, 1368, sizeof(SC_CashMaintain)},
  { 1369, 1375, sizeof(CS_GetHelpMoney)},
  { 1376, 1385, sizeof(SC_GetHelpMoney)},
  { 1389, 1396, sizeof(CS_Agent_CashMoney)},
  { 1398, 1406, sizeof(SC_Agent_CashMoneyResult)},
  { 1409, 1414, sizeof(CS_RequestNewAward)},
  { 1414, 1421, sizeof(SC_RequestNewAward)},
  { 1423, 1428, sizeof(CS_RequestCheckInAward)},
  { 1428, 1435, sizeof(SC_RequestCheckInAward)},
  { 1437, 1443, sizeof(CS_BindBankCard)},
  { 1444, 1450, sizeof(SC_BindBankCard)},
  { 1451, 1456, sizeof(CS_GetBankCardInfo)},
  { 1456, 1462, sizeof(SC_GetBankCardInfo)},
  { 1463, 1468, sizeof(CS_NewGameMaintain)},
  { 1468, 1474, sizeof(SC_NewGameMaintain)},
  { 1475, 1481, sizeof(CS_PlayerPromotion)},
  { 1482, 1488, sizeof(SC_PlayerPromotion)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_C_RequestPublicKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C_PublicKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CL_RegAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CL_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginValidatebox_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LC_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CL_LoginBySms_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_KickClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CL_LoginAll_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_RequestSms_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_RequestSms_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ResetAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ResetAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_SetPassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_SetPassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_SetPasswordBySms_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_SetNickname_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_SetNickname_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ChangeHeaderIcon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ChangeHeaderIcon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InviterInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CL_GetInviterInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LC_GetInviterInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_RequestPlayerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ReplyPlayerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ReplyPlayerInfoComplete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_LoginValidatebox_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_LoginValidatebox_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ChangeGame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_JoinPrivateRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_JoinPrivateRoomFailed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_PrivateRoomInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PrivateRoomInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_PrivateRoomInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GC_GameServerCfg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CG_GameServerCfg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_BankSetPassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_BankSetPassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_BankChangePassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_BankChangePassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_BankLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_BankLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_BankDeposit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_BankDeposit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_BankDraw_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_BankDraw_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_NotifyBankStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_BankStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_BankStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_BankTransfer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_BankTransfer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_NotifyMoney_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_BankTransferByGuid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_BuyItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_BuyItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_DelItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_DelItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_UseItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_UseItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ChatWorld_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ChatWorld_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ChatPrivate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ChatPrivate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ChatServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ChatServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ChatRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ChatRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ChatTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ChatTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_Marquee_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_QueryPlayerMarquee_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_QueryPlayerMarquee_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_NewMarquee_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_SendMail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_SendMail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_RecviceMail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_DelMail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_DelMail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ReceiveMailAttachment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ReceiveMailAttachment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ReceiveRewardLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ReceiveRewardLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ReceiveRewardOnline_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ReceiveRewardOnline_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ReceiveReliefPayment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ReceiveReliefPayment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CE_RequestRank_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EC_ReplyRank_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_EnterRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_EnterRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_NotifyEnterRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ExitRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ExitRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_NotifyExitRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_AutoEnterRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_AutoSitDown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_SitDown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_SitDown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_NotifySitDown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_StandUp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_StandUp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_NotifyStandUp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_EnterRoomAndSitDown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_EnterRoomAndSitDown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_StandUpAndExitRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_StandUpAndExitRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ChangeChair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ChangeChair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ChangeTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_Ready_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_Ready_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_Exit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ReadyFailed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_Gamefinish_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_PlayerReconnection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ChangeTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_HEARTBEAT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_HEARTBEAT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ReconnectionPlay_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ReconnectionPlay_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_SimpleRespons_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_QueryPlayerMsgData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_QueryPlayerMsgData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_NewMsgData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_SetMsgReadFlag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_FeedBackUpDate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_DeletMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_CashMoney_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_CashMoneyResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_CashMoneyType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_CashMoneyType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_NotifyBank_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_BandAlipay_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_BandAlipay_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_Trusteeship_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ShowTax_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SD_Delonline_player_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_AlipayEdit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_BrocastClientUpdateInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_FreezeAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_GameMaintain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_CashMaintain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_GetHelpMoney_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_GetHelpMoney_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_Agent_CashMoney_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_Agent_CashMoneyResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_RequestNewAward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_RequestNewAward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_RequestCheckInAward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_RequestCheckInAward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_BindBankCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_BindBankCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_GetBankCardInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_GetBankCardInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_NewGameMaintain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_NewGameMaintain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_PlayerPromotion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_PlayerPromotion_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "public_msg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 159);
}

}  // namespace

void TableStruct::Shutdown() {
  _C_RequestPublicKey_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _C_PublicKey_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CL_RegAccount_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CL_Login_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _LoginValidatebox_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _LC_Login_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _CL_LoginBySms_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _SC_KickClient_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _CL_LoginAll_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _CS_RequestSms_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _SC_RequestSms_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _CS_ResetAccount_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _SC_ResetAccount_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _CS_SetPassword_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _SC_SetPassword_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _CS_SetPasswordBySms_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _CS_SetNickname_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _SC_SetNickname_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _CS_ChangeHeaderIcon_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _SC_ChangeHeaderIcon_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _InviterInfo_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _CL_GetInviterInfo_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _LC_GetInviterInfo_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _CS_RequestPlayerInfo_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _SC_ReplyPlayerInfo_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _GameMsg_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _SC_ReplyPlayerInfoComplete_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _CS_LoginValidatebox_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _SC_LoginValidatebox_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _CS_ChangeGame_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _CS_JoinPrivateRoom_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _SC_JoinPrivateRoomFailed_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _CS_PrivateRoomInfo_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _PrivateRoomInfo_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _SC_PrivateRoomInfo_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _GC_GameServerCfg_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _CG_GameServerCfg_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _CS_BankSetPassword_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _SC_BankSetPassword_default_instance_.Shutdown();
  delete file_level_metadata[38].reflection;
  _CS_BankChangePassword_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _SC_BankChangePassword_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _CS_BankLogin_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _SC_BankLogin_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
  _CS_BankDeposit_default_instance_.Shutdown();
  delete file_level_metadata[43].reflection;
  _SC_BankDeposit_default_instance_.Shutdown();
  delete file_level_metadata[44].reflection;
  _CS_BankDraw_default_instance_.Shutdown();
  delete file_level_metadata[45].reflection;
  _SC_BankDraw_default_instance_.Shutdown();
  delete file_level_metadata[46].reflection;
  _SC_NotifyBankStatement_default_instance_.Shutdown();
  delete file_level_metadata[47].reflection;
  _CS_BankStatement_default_instance_.Shutdown();
  delete file_level_metadata[48].reflection;
  _SC_BankStatement_default_instance_.Shutdown();
  delete file_level_metadata[49].reflection;
  _CS_BankTransfer_default_instance_.Shutdown();
  delete file_level_metadata[50].reflection;
  _SC_BankTransfer_default_instance_.Shutdown();
  delete file_level_metadata[51].reflection;
  _SC_NotifyMoney_default_instance_.Shutdown();
  delete file_level_metadata[52].reflection;
  _CS_BankTransferByGuid_default_instance_.Shutdown();
  delete file_level_metadata[53].reflection;
  _CS_BuyItem_default_instance_.Shutdown();
  delete file_level_metadata[54].reflection;
  _SC_BuyItem_default_instance_.Shutdown();
  delete file_level_metadata[55].reflection;
  _CS_DelItem_default_instance_.Shutdown();
  delete file_level_metadata[56].reflection;
  _SC_DelItem_default_instance_.Shutdown();
  delete file_level_metadata[57].reflection;
  _CS_UseItem_default_instance_.Shutdown();
  delete file_level_metadata[58].reflection;
  _SC_UseItem_default_instance_.Shutdown();
  delete file_level_metadata[59].reflection;
  _CS_ChatWorld_default_instance_.Shutdown();
  delete file_level_metadata[60].reflection;
  _SC_ChatWorld_default_instance_.Shutdown();
  delete file_level_metadata[61].reflection;
  _CS_ChatPrivate_default_instance_.Shutdown();
  delete file_level_metadata[62].reflection;
  _SC_ChatPrivate_default_instance_.Shutdown();
  delete file_level_metadata[63].reflection;
  _CS_ChatServer_default_instance_.Shutdown();
  delete file_level_metadata[64].reflection;
  _SC_ChatServer_default_instance_.Shutdown();
  delete file_level_metadata[65].reflection;
  _CS_ChatRoom_default_instance_.Shutdown();
  delete file_level_metadata[66].reflection;
  _SC_ChatRoom_default_instance_.Shutdown();
  delete file_level_metadata[67].reflection;
  _CS_ChatTable_default_instance_.Shutdown();
  delete file_level_metadata[68].reflection;
  _SC_ChatTable_default_instance_.Shutdown();
  delete file_level_metadata[69].reflection;
  _SC_Marquee_default_instance_.Shutdown();
  delete file_level_metadata[70].reflection;
  _CS_QueryPlayerMarquee_default_instance_.Shutdown();
  delete file_level_metadata[71].reflection;
  _SC_QueryPlayerMarquee_default_instance_.Shutdown();
  delete file_level_metadata[72].reflection;
  _SC_NewMarquee_default_instance_.Shutdown();
  delete file_level_metadata[73].reflection;
  _CS_SendMail_default_instance_.Shutdown();
  delete file_level_metadata[74].reflection;
  _SC_SendMail_default_instance_.Shutdown();
  delete file_level_metadata[75].reflection;
  _SC_RecviceMail_default_instance_.Shutdown();
  delete file_level_metadata[76].reflection;
  _CS_DelMail_default_instance_.Shutdown();
  delete file_level_metadata[77].reflection;
  _SC_DelMail_default_instance_.Shutdown();
  delete file_level_metadata[78].reflection;
  _CS_ReceiveMailAttachment_default_instance_.Shutdown();
  delete file_level_metadata[79].reflection;
  _SC_ReceiveMailAttachment_default_instance_.Shutdown();
  delete file_level_metadata[80].reflection;
  _CS_ReceiveRewardLogin_default_instance_.Shutdown();
  delete file_level_metadata[81].reflection;
  _SC_ReceiveRewardLogin_default_instance_.Shutdown();
  delete file_level_metadata[82].reflection;
  _CS_ReceiveRewardOnline_default_instance_.Shutdown();
  delete file_level_metadata[83].reflection;
  _SC_ReceiveRewardOnline_default_instance_.Shutdown();
  delete file_level_metadata[84].reflection;
  _CS_ReceiveReliefPayment_default_instance_.Shutdown();
  delete file_level_metadata[85].reflection;
  _SC_ReceiveReliefPayment_default_instance_.Shutdown();
  delete file_level_metadata[86].reflection;
  _CE_RequestRank_default_instance_.Shutdown();
  delete file_level_metadata[87].reflection;
  _EC_ReplyRank_default_instance_.Shutdown();
  delete file_level_metadata[88].reflection;
  _CS_EnterRoom_default_instance_.Shutdown();
  delete file_level_metadata[89].reflection;
  _SC_EnterRoom_default_instance_.Shutdown();
  delete file_level_metadata[90].reflection;
  _SC_NotifyEnterRoom_default_instance_.Shutdown();
  delete file_level_metadata[91].reflection;
  _CS_ExitRoom_default_instance_.Shutdown();
  delete file_level_metadata[92].reflection;
  _SC_ExitRoom_default_instance_.Shutdown();
  delete file_level_metadata[93].reflection;
  _SC_NotifyExitRoom_default_instance_.Shutdown();
  delete file_level_metadata[94].reflection;
  _CS_AutoEnterRoom_default_instance_.Shutdown();
  delete file_level_metadata[95].reflection;
  _CS_AutoSitDown_default_instance_.Shutdown();
  delete file_level_metadata[96].reflection;
  _CS_SitDown_default_instance_.Shutdown();
  delete file_level_metadata[97].reflection;
  _SC_SitDown_default_instance_.Shutdown();
  delete file_level_metadata[98].reflection;
  _SC_NotifySitDown_default_instance_.Shutdown();
  delete file_level_metadata[99].reflection;
  _CS_StandUp_default_instance_.Shutdown();
  delete file_level_metadata[100].reflection;
  _SC_StandUp_default_instance_.Shutdown();
  delete file_level_metadata[101].reflection;
  _SC_NotifyStandUp_default_instance_.Shutdown();
  delete file_level_metadata[102].reflection;
  _CS_EnterRoomAndSitDown_default_instance_.Shutdown();
  delete file_level_metadata[103].reflection;
  _SC_EnterRoomAndSitDown_default_instance_.Shutdown();
  delete file_level_metadata[104].reflection;
  _CS_StandUpAndExitRoom_default_instance_.Shutdown();
  delete file_level_metadata[105].reflection;
  _SC_StandUpAndExitRoom_default_instance_.Shutdown();
  delete file_level_metadata[106].reflection;
  _CS_ChangeChair_default_instance_.Shutdown();
  delete file_level_metadata[107].reflection;
  _SC_ChangeChair_default_instance_.Shutdown();
  delete file_level_metadata[108].reflection;
  _CS_ChangeTable_default_instance_.Shutdown();
  delete file_level_metadata[109].reflection;
  _CS_Ready_default_instance_.Shutdown();
  delete file_level_metadata[110].reflection;
  _SC_Ready_default_instance_.Shutdown();
  delete file_level_metadata[111].reflection;
  _CS_Exit_default_instance_.Shutdown();
  delete file_level_metadata[112].reflection;
  _SC_ReadyFailed_default_instance_.Shutdown();
  delete file_level_metadata[113].reflection;
  _SC_Gamefinish_default_instance_.Shutdown();
  delete file_level_metadata[114].reflection;
  _SC_PlayerReconnection_default_instance_.Shutdown();
  delete file_level_metadata[115].reflection;
  _SC_ChangeTable_default_instance_.Shutdown();
  delete file_level_metadata[116].reflection;
  _SC_HEARTBEAT_default_instance_.Shutdown();
  delete file_level_metadata[117].reflection;
  _CS_HEARTBEAT_default_instance_.Shutdown();
  delete file_level_metadata[118].reflection;
  _CS_ReconnectionPlay_default_instance_.Shutdown();
  delete file_level_metadata[119].reflection;
  _SC_ReconnectionPlay_default_instance_.Shutdown();
  delete file_level_metadata[120].reflection;
  _SC_SimpleRespons_default_instance_.Shutdown();
  delete file_level_metadata[121].reflection;
  _CS_QueryPlayerMsgData_default_instance_.Shutdown();
  delete file_level_metadata[122].reflection;
  _SC_QueryPlayerMsgData_default_instance_.Shutdown();
  delete file_level_metadata[123].reflection;
  _SC_NewMsgData_default_instance_.Shutdown();
  delete file_level_metadata[124].reflection;
  _CS_SetMsgReadFlag_default_instance_.Shutdown();
  delete file_level_metadata[125].reflection;
  _SC_FeedBackUpDate_default_instance_.Shutdown();
  delete file_level_metadata[126].reflection;
  _SC_DeletMsg_default_instance_.Shutdown();
  delete file_level_metadata[127].reflection;
  _CS_CashMoney_default_instance_.Shutdown();
  delete file_level_metadata[128].reflection;
  _SC_CashMoneyResult_default_instance_.Shutdown();
  delete file_level_metadata[129].reflection;
  _CS_CashMoneyType_default_instance_.Shutdown();
  delete file_level_metadata[130].reflection;
  _SC_CashMoneyType_default_instance_.Shutdown();
  delete file_level_metadata[131].reflection;
  _SC_NotifyBank_default_instance_.Shutdown();
  delete file_level_metadata[132].reflection;
  _CS_BandAlipay_default_instance_.Shutdown();
  delete file_level_metadata[133].reflection;
  _SC_BandAlipay_default_instance_.Shutdown();
  delete file_level_metadata[134].reflection;
  _CS_Trusteeship_default_instance_.Shutdown();
  delete file_level_metadata[135].reflection;
  _SC_ShowTax_default_instance_.Shutdown();
  delete file_level_metadata[136].reflection;
  _SD_Delonline_player_default_instance_.Shutdown();
  delete file_level_metadata[137].reflection;
  _SC_AlipayEdit_default_instance_.Shutdown();
  delete file_level_metadata[138].reflection;
  _SC_BrocastClientUpdateInfo_default_instance_.Shutdown();
  delete file_level_metadata[139].reflection;
  _SC_FreezeAccount_default_instance_.Shutdown();
  delete file_level_metadata[140].reflection;
  _SC_GameMaintain_default_instance_.Shutdown();
  delete file_level_metadata[141].reflection;
  _SC_CashMaintain_default_instance_.Shutdown();
  delete file_level_metadata[142].reflection;
  _CS_GetHelpMoney_default_instance_.Shutdown();
  delete file_level_metadata[143].reflection;
  _SC_GetHelpMoney_default_instance_.Shutdown();
  delete file_level_metadata[144].reflection;
  _CS_Agent_CashMoney_default_instance_.Shutdown();
  delete file_level_metadata[145].reflection;
  _SC_Agent_CashMoneyResult_default_instance_.Shutdown();
  delete file_level_metadata[146].reflection;
  _CS_RequestNewAward_default_instance_.Shutdown();
  delete file_level_metadata[147].reflection;
  _SC_RequestNewAward_default_instance_.Shutdown();
  delete file_level_metadata[148].reflection;
  _CS_RequestCheckInAward_default_instance_.Shutdown();
  delete file_level_metadata[149].reflection;
  _SC_RequestCheckInAward_default_instance_.Shutdown();
  delete file_level_metadata[150].reflection;
  _CS_BindBankCard_default_instance_.Shutdown();
  delete file_level_metadata[151].reflection;
  _SC_BindBankCard_default_instance_.Shutdown();
  delete file_level_metadata[152].reflection;
  _CS_GetBankCardInfo_default_instance_.Shutdown();
  delete file_level_metadata[153].reflection;
  _SC_GetBankCardInfo_default_instance_.Shutdown();
  delete file_level_metadata[154].reflection;
  _CS_NewGameMaintain_default_instance_.Shutdown();
  delete file_level_metadata[155].reflection;
  _SC_NewGameMaintain_default_instance_.Shutdown();
  delete file_level_metadata[156].reflection;
  _CS_PlayerPromotion_default_instance_.Shutdown();
  delete file_level_metadata[157].reflection;
  _SC_PlayerPromotion_default_instance_.Shutdown();
  delete file_level_metadata[158].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_public_5fplayer_2eproto::InitDefaults();
  _C_RequestPublicKey_default_instance_.DefaultConstruct();
  _C_PublicKey_default_instance_.DefaultConstruct();
  _CL_RegAccount_default_instance_.DefaultConstruct();
  _CL_Login_default_instance_.DefaultConstruct();
  _LoginValidatebox_default_instance_.DefaultConstruct();
  _LC_Login_default_instance_.DefaultConstruct();
  _CL_LoginBySms_default_instance_.DefaultConstruct();
  _SC_KickClient_default_instance_.DefaultConstruct();
  _CL_LoginAll_default_instance_.DefaultConstruct();
  _CS_RequestSms_default_instance_.DefaultConstruct();
  _SC_RequestSms_default_instance_.DefaultConstruct();
  _CS_ResetAccount_default_instance_.DefaultConstruct();
  _SC_ResetAccount_default_instance_.DefaultConstruct();
  _CS_SetPassword_default_instance_.DefaultConstruct();
  _SC_SetPassword_default_instance_.DefaultConstruct();
  _CS_SetPasswordBySms_default_instance_.DefaultConstruct();
  _CS_SetNickname_default_instance_.DefaultConstruct();
  _SC_SetNickname_default_instance_.DefaultConstruct();
  _CS_ChangeHeaderIcon_default_instance_.DefaultConstruct();
  _SC_ChangeHeaderIcon_default_instance_.DefaultConstruct();
  _InviterInfo_default_instance_.DefaultConstruct();
  _CL_GetInviterInfo_default_instance_.DefaultConstruct();
  _LC_GetInviterInfo_default_instance_.DefaultConstruct();
  _CS_RequestPlayerInfo_default_instance_.DefaultConstruct();
  _SC_ReplyPlayerInfo_default_instance_.DefaultConstruct();
  _GameMsg_default_instance_.DefaultConstruct();
  _SC_ReplyPlayerInfoComplete_default_instance_.DefaultConstruct();
  _CS_LoginValidatebox_default_instance_.DefaultConstruct();
  _SC_LoginValidatebox_default_instance_.DefaultConstruct();
  _CS_ChangeGame_default_instance_.DefaultConstruct();
  _CS_JoinPrivateRoom_default_instance_.DefaultConstruct();
  _SC_JoinPrivateRoomFailed_default_instance_.DefaultConstruct();
  _CS_PrivateRoomInfo_default_instance_.DefaultConstruct();
  _PrivateRoomInfo_default_instance_.DefaultConstruct();
  _SC_PrivateRoomInfo_default_instance_.DefaultConstruct();
  _GC_GameServerCfg_default_instance_.DefaultConstruct();
  _CG_GameServerCfg_default_instance_.DefaultConstruct();
  _CS_BankSetPassword_default_instance_.DefaultConstruct();
  _SC_BankSetPassword_default_instance_.DefaultConstruct();
  _CS_BankChangePassword_default_instance_.DefaultConstruct();
  _SC_BankChangePassword_default_instance_.DefaultConstruct();
  _CS_BankLogin_default_instance_.DefaultConstruct();
  _SC_BankLogin_default_instance_.DefaultConstruct();
  _CS_BankDeposit_default_instance_.DefaultConstruct();
  _SC_BankDeposit_default_instance_.DefaultConstruct();
  _CS_BankDraw_default_instance_.DefaultConstruct();
  _SC_BankDraw_default_instance_.DefaultConstruct();
  _SC_NotifyBankStatement_default_instance_.DefaultConstruct();
  _CS_BankStatement_default_instance_.DefaultConstruct();
  _SC_BankStatement_default_instance_.DefaultConstruct();
  _CS_BankTransfer_default_instance_.DefaultConstruct();
  _SC_BankTransfer_default_instance_.DefaultConstruct();
  _SC_NotifyMoney_default_instance_.DefaultConstruct();
  _CS_BankTransferByGuid_default_instance_.DefaultConstruct();
  _CS_BuyItem_default_instance_.DefaultConstruct();
  _SC_BuyItem_default_instance_.DefaultConstruct();
  _CS_DelItem_default_instance_.DefaultConstruct();
  _SC_DelItem_default_instance_.DefaultConstruct();
  _CS_UseItem_default_instance_.DefaultConstruct();
  _SC_UseItem_default_instance_.DefaultConstruct();
  _CS_ChatWorld_default_instance_.DefaultConstruct();
  _SC_ChatWorld_default_instance_.DefaultConstruct();
  _CS_ChatPrivate_default_instance_.DefaultConstruct();
  _SC_ChatPrivate_default_instance_.DefaultConstruct();
  _CS_ChatServer_default_instance_.DefaultConstruct();
  _SC_ChatServer_default_instance_.DefaultConstruct();
  _CS_ChatRoom_default_instance_.DefaultConstruct();
  _SC_ChatRoom_default_instance_.DefaultConstruct();
  _CS_ChatTable_default_instance_.DefaultConstruct();
  _SC_ChatTable_default_instance_.DefaultConstruct();
  _SC_Marquee_default_instance_.DefaultConstruct();
  _CS_QueryPlayerMarquee_default_instance_.DefaultConstruct();
  _SC_QueryPlayerMarquee_default_instance_.DefaultConstruct();
  _SC_NewMarquee_default_instance_.DefaultConstruct();
  _CS_SendMail_default_instance_.DefaultConstruct();
  _SC_SendMail_default_instance_.DefaultConstruct();
  _SC_RecviceMail_default_instance_.DefaultConstruct();
  _CS_DelMail_default_instance_.DefaultConstruct();
  _SC_DelMail_default_instance_.DefaultConstruct();
  _CS_ReceiveMailAttachment_default_instance_.DefaultConstruct();
  _SC_ReceiveMailAttachment_default_instance_.DefaultConstruct();
  _CS_ReceiveRewardLogin_default_instance_.DefaultConstruct();
  _SC_ReceiveRewardLogin_default_instance_.DefaultConstruct();
  _CS_ReceiveRewardOnline_default_instance_.DefaultConstruct();
  _SC_ReceiveRewardOnline_default_instance_.DefaultConstruct();
  _CS_ReceiveReliefPayment_default_instance_.DefaultConstruct();
  _SC_ReceiveReliefPayment_default_instance_.DefaultConstruct();
  _CE_RequestRank_default_instance_.DefaultConstruct();
  _EC_ReplyRank_default_instance_.DefaultConstruct();
  _CS_EnterRoom_default_instance_.DefaultConstruct();
  _SC_EnterRoom_default_instance_.DefaultConstruct();
  _SC_NotifyEnterRoom_default_instance_.DefaultConstruct();
  _CS_ExitRoom_default_instance_.DefaultConstruct();
  _SC_ExitRoom_default_instance_.DefaultConstruct();
  _SC_NotifyExitRoom_default_instance_.DefaultConstruct();
  _CS_AutoEnterRoom_default_instance_.DefaultConstruct();
  _CS_AutoSitDown_default_instance_.DefaultConstruct();
  _CS_SitDown_default_instance_.DefaultConstruct();
  _SC_SitDown_default_instance_.DefaultConstruct();
  _SC_NotifySitDown_default_instance_.DefaultConstruct();
  _CS_StandUp_default_instance_.DefaultConstruct();
  _SC_StandUp_default_instance_.DefaultConstruct();
  _SC_NotifyStandUp_default_instance_.DefaultConstruct();
  _CS_EnterRoomAndSitDown_default_instance_.DefaultConstruct();
  _SC_EnterRoomAndSitDown_default_instance_.DefaultConstruct();
  _CS_StandUpAndExitRoom_default_instance_.DefaultConstruct();
  _SC_StandUpAndExitRoom_default_instance_.DefaultConstruct();
  _CS_ChangeChair_default_instance_.DefaultConstruct();
  _SC_ChangeChair_default_instance_.DefaultConstruct();
  _CS_ChangeTable_default_instance_.DefaultConstruct();
  _CS_Ready_default_instance_.DefaultConstruct();
  _SC_Ready_default_instance_.DefaultConstruct();
  _CS_Exit_default_instance_.DefaultConstruct();
  _SC_ReadyFailed_default_instance_.DefaultConstruct();
  _SC_Gamefinish_default_instance_.DefaultConstruct();
  _SC_PlayerReconnection_default_instance_.DefaultConstruct();
  _SC_ChangeTable_default_instance_.DefaultConstruct();
  _SC_HEARTBEAT_default_instance_.DefaultConstruct();
  _CS_HEARTBEAT_default_instance_.DefaultConstruct();
  _CS_ReconnectionPlay_default_instance_.DefaultConstruct();
  _SC_ReconnectionPlay_default_instance_.DefaultConstruct();
  _SC_SimpleRespons_default_instance_.DefaultConstruct();
  _CS_QueryPlayerMsgData_default_instance_.DefaultConstruct();
  _SC_QueryPlayerMsgData_default_instance_.DefaultConstruct();
  _SC_NewMsgData_default_instance_.DefaultConstruct();
  _CS_SetMsgReadFlag_default_instance_.DefaultConstruct();
  _SC_FeedBackUpDate_default_instance_.DefaultConstruct();
  _SC_DeletMsg_default_instance_.DefaultConstruct();
  _CS_CashMoney_default_instance_.DefaultConstruct();
  _SC_CashMoneyResult_default_instance_.DefaultConstruct();
  _CS_CashMoneyType_default_instance_.DefaultConstruct();
  _SC_CashMoneyType_default_instance_.DefaultConstruct();
  _SC_NotifyBank_default_instance_.DefaultConstruct();
  _CS_BandAlipay_default_instance_.DefaultConstruct();
  _SC_BandAlipay_default_instance_.DefaultConstruct();
  _CS_Trusteeship_default_instance_.DefaultConstruct();
  _SC_ShowTax_default_instance_.DefaultConstruct();
  _SD_Delonline_player_default_instance_.DefaultConstruct();
  _SC_AlipayEdit_default_instance_.DefaultConstruct();
  _SC_BrocastClientUpdateInfo_default_instance_.DefaultConstruct();
  _SC_FreezeAccount_default_instance_.DefaultConstruct();
  _SC_GameMaintain_default_instance_.DefaultConstruct();
  _SC_CashMaintain_default_instance_.DefaultConstruct();
  _CS_GetHelpMoney_default_instance_.DefaultConstruct();
  _SC_GetHelpMoney_default_instance_.DefaultConstruct();
  _CS_Agent_CashMoney_default_instance_.DefaultConstruct();
  _SC_Agent_CashMoneyResult_default_instance_.DefaultConstruct();
  _CS_RequestNewAward_default_instance_.DefaultConstruct();
  _SC_RequestNewAward_default_instance_.DefaultConstruct();
  _CS_RequestCheckInAward_default_instance_.DefaultConstruct();
  _SC_RequestCheckInAward_default_instance_.DefaultConstruct();
  _CS_BindBankCard_default_instance_.DefaultConstruct();
  _SC_BindBankCard_default_instance_.DefaultConstruct();
  _CS_GetBankCardInfo_default_instance_.DefaultConstruct();
  _SC_GetBankCardInfo_default_instance_.DefaultConstruct();
  _CS_NewGameMaintain_default_instance_.DefaultConstruct();
  _SC_NewGameMaintain_default_instance_.DefaultConstruct();
  _CS_PlayerPromotion_default_instance_.DefaultConstruct();
  _SC_PlayerPromotion_default_instance_.DefaultConstruct();
  _LC_Login_default_instance_.get_mutable()->pb_validatebox_ = const_cast< ::LoginValidatebox*>(
      ::LoginValidatebox::internal_default_instance());
  _CL_LoginAll_default_instance_.get_mutable()->reg_ = const_cast< ::CL_RegAccount*>(
      ::CL_RegAccount::internal_default_instance());
  _CL_LoginAll_default_instance_.get_mutable()->login_ = const_cast< ::CL_Login*>(
      ::CL_Login::internal_default_instance());
  _CL_LoginAll_default_instance_.get_mutable()->sms_ = const_cast< ::CL_LoginBySms*>(
      ::CL_LoginBySms::internal_default_instance());
  _SC_ReplyPlayerInfo_default_instance_.get_mutable()->pb_base_info_ = const_cast< ::PlayerBaseInfo*>(
      ::PlayerBaseInfo::internal_default_instance());
  _SC_ReplyPlayerInfo_default_instance_.get_mutable()->pb_item_bag_ = const_cast< ::ItemBagInfo*>(
      ::ItemBagInfo::internal_default_instance());
  _SC_ReplyPlayerInfo_default_instance_.get_mutable()->pb_mail_list_ = const_cast< ::MailListInfo*>(
      ::MailListInfo::internal_default_instance());
  _SC_ReplyPlayerInfoComplete_default_instance_.get_mutable()->pb_gmmessage_ = const_cast< ::GameMsg*>(
      ::GameMsg::internal_default_instance());
  _SC_LoginValidatebox_default_instance_.get_mutable()->pb_validatebox_ = const_cast< ::LoginValidatebox*>(
      ::LoginValidatebox::internal_default_instance());
  _SC_NotifyBankStatement_default_instance_.get_mutable()->pb_statement_ = const_cast< ::BankStatement*>(
      ::BankStatement::internal_default_instance());
  _CS_SendMail_default_instance_.get_mutable()->pb_mail_ = const_cast< ::MailInfo*>(
      ::MailInfo::internal_default_instance());
  _SC_SendMail_default_instance_.get_mutable()->pb_mail_ = const_cast< ::MailInfo*>(
      ::MailInfo::internal_default_instance());
  _SC_RecviceMail_default_instance_.get_mutable()->pb_mail_ = const_cast< ::MailInfo*>(
      ::MailInfo::internal_default_instance());
  _SC_NotifySitDown_default_instance_.get_mutable()->pb_visual_info_ = const_cast< ::PlayerVisualInfo*>(
      ::PlayerVisualInfo::internal_default_instance());
  _CS_BindBankCard_default_instance_.get_mutable()->pb_info_ = const_cast< ::BankCardInfo*>(
      ::BankCardInfo::internal_default_instance());
  _SC_GetBankCardInfo_default_instance_.get_mutable()->pb_info_ = const_cast< ::BankCardInfo*>(
      ::BankCardInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020public_msg.proto\032\023public_player.proto\""
      "\204\001\n\022C_RequestPublicKey\022\022\n\nchannel_id\030\001 \001"
      "(\t\022\017\n\007version\030\002 \001(\t\022\r\n\005re_ip\030\003 \001(\t\022\023\n\013an"
      "droid_uid\030\004 \001(\005\022\023\n\013android_pid\030\005 \001(\005\"\020\n\005"
      "MsgID\022\007\n\002ID\020\347\007\"3\n\013C_PublicKey\022\022\n\npublic_"
      "key\030\001 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\350\007\"\367\001\n\rCL_RegAc"
      "count\022\017\n\007account\030\001 \001(\t\022\020\n\010password\030\002 \001(\t"
      "\022\r\n\005phone\030\003 \001(\t\022\022\n\nphone_type\030\004 \001(\t\022\017\n\007v"
      "ersion\030\005 \001(\t\022\022\n\nchannel_id\030\006 \001(\t\022\024\n\014pack"
      "age_name\030\007 \001(\t\022\014\n\004imei\030\010 \001(\t\022\n\n\002ip\030\t \001(\t"
      "\022\017\n\007ip_area\030\n \001(\t\022\023\n\013android_uid\030\013 \001(\005\022\023"
      "\n\013android_pid\030\014 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\351\007\"\310\001"
      "\n\010CL_Login\022\017\n\007account\030\001 \001(\t\022\020\n\010password\030"
      "\002 \001(\t\022\r\n\005phone\030\003 \001(\t\022\022\n\nphone_type\030\004 \001(\t"
      "\022\014\n\004imei\030\005 \001(\t\022\n\n\002ip\030\006 \001(\t\022\017\n\007version\030\007 "
      "\001(\t\022\022\n\nchannel_id\030\010 \001(\t\022\024\n\014package_name\030"
      "\t \001(\t\022\017\n\007ip_area\030\n \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\353\007"
      "\"4\n\020LoginValidatebox\022\020\n\010question\030\001 \003(\005\022\016"
      "\n\006answer\030\002 \003(\005\"\337\002\n\010LC_Login\022\021\n\006result\030\001 "
      "\001(\005:\0010\022\014\n\004guid\030\002 \001(\005\022\017\n\007account\030\003 \001(\t\022\017\n"
      "\007game_id\030\004 \001(\005\022\020\n\010nickname\030\005 \001(\t\022\020\n\010is_g"
      "uest\030\006 \001(\010\022\020\n\010password\030\007 \001(\t\022\026\n\016alipay_a"
      "ccount\030\010 \001(\t\022\023\n\013alipay_name\030\t \001(\t\022\026\n\016is_"
      "validatebox\030\n \001(\010\022)\n\016pb_validatebox\030\013 \001("
      "\0132\021.LoginValidatebox\022\031\n\021change_alipay_nu"
      "m\030\014 \001(\005\022\017\n\007ip_area\030\r \001(\t\022\027\n\017enable_trans"
      "fer\030\016 \001(\010\022\023\n\010is_first\030\017 \001(\005:\0012\"\020\n\005MsgID\022"
      "\007\n\002ID\020\354\007\"\313\001\n\rCL_LoginBySms\022\017\n\007account\030\001 "
      "\001(\t\022\016\n\006sms_no\030\002 \001(\t\022\r\n\005phone\030\003 \001(\t\022\022\n\nph"
      "one_type\030\004 \001(\t\022\017\n\007version\030\005 \001(\t\022\022\n\nchann"
      "el_id\030\006 \001(\t\022\024\n\014package_name\030\007 \001(\t\022\014\n\004ime"
      "i\030\010 \001(\t\022\n\n\002ip\030\t \001(\t\022\017\n\007ip_area\030\n \001(\t\"\020\n\005"
      "MsgID\022\007\n\002ID\020\355\007\"1\n\rSC_KickClient\022\016\n\006resul"
      "t\030\001 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\356\007\"\200\001\n\013CL_LoginAl"
      "l\022\014\n\004type\030\001 \001(\005\022\033\n\003reg\030\002 \001(\0132\016.CL_RegAcc"
      "ount\022\030\n\005login\030\003 \001(\0132\t.CL_Login\022\033\n\003sms\030\004 "
      "\001(\0132\016.CL_LoginBySms\022\017\n\007gate_id\030\005 \001(\005\"Z\n\r"
      "CS_RequestSms\022\013\n\003tel\030\001 \001(\t\022\021\n\tintention\030"
      "\002 \001(\005\022\027\n\017gate_session_id\030\003 \001(\005\"\020\n\005MsgID\022"
      "\007\n\002ID\020\362\007\"N\n\rSC_RequestSms\022\016\n\006result\030\001 \001("
      "\005\022\016\n\006sms_no\030\002 \001(\t\022\013\n\003tel\030\003 \001(\t\"\020\n\005MsgID\022"
      "\007\n\002ID\020\363\007\"h\n\017CS_ResetAccount\022\017\n\007account\030\001"
      " \001(\t\022\020\n\010password\030\002 \001(\t\022\020\n\010nickname\030\003 \001(\t"
      "\022\016\n\006sms_no\030\004 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\364\007\"V\n\017SC"
      "_ResetAccount\022\016\n\006result\030\001 \001(\005\022\017\n\007account"
      "\030\002 \001(\t\022\020\n\010nickname\030\003 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020"
      "\365\007\"J\n\016CS_SetPassword\022\024\n\014old_password\030\001 \001"
      "(\t\022\020\n\010password\030\002 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\366\007\"2"
      "\n\016SC_SetPassword\022\016\n\006result\030\001 \001(\005\"\020\n\005MsgI"
      "D\022\007\n\002ID\020\367\007\"I\n\023CS_SetPasswordBySms\022\020\n\010pas"
      "sword\030\001 \001(\t\022\016\n\006sms_no\030\002 \001(\t\"\020\n\005MsgID\022\007\n\002"
      "ID\020\370\007\"4\n\016CS_SetNickname\022\020\n\010nickname\030\001 \001("
      "\t\"\020\n\005MsgID\022\007\n\002ID\020\374\007\"D\n\016SC_SetNickname\022\020\n"
      "\010nickname\030\001 \001(\t\022\016\n\006result\030\002 \001(\005\"\020\n\005MsgID"
      "\022\007\n\002ID\020\375\007\"\?\n\023CS_ChangeHeaderIcon\022\026\n\013head"
      "er_icon\030\001 \001(\005:\0010\"\020\n\005MsgID\022\007\n\002ID\020\376\007\"\?\n\023SC"
      "_ChangeHeaderIcon\022\026\n\013header_icon\030\001 \001(\005:\001"
      "0\"\020\n\005MsgID\022\007\n\002ID\020\377\007\"]\n\013InviterInfo\022\014\n\004gu"
      "id\030\001 \001(\005\022\017\n\007account\030\002 \001(\t\022\025\n\ralipay_name"
      "_y\030\003 \001(\t\022\030\n\020alipay_account_y\030\004 \001(\t\"r\n\021CL"
      "_GetInviterInfo\022\023\n\013invite_code\030\001 \001(\t\022\027\n\017"
      "gate_session_id\030\002 \001(\005\022\017\n\007gate_id\030\003 \001(\005\022\014"
      "\n\004guid\030\004 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\200\010\"\256\001\n\021LC_Ge"
      "tInviterInfo\022\014\n\004guid\030\001 \001(\005\022\017\n\007account\030\002 "
      "\001(\t\022\026\n\016alipay_account\030\003 \001(\t\022\023\n\013alipay_na"
      "me\030\004 \001(\t\022\027\n\017gate_session_id\030\005 \001(\005\022\017\n\007gat"
      "e_id\030\006 \001(\005\022\021\n\tguid_self\030\007 \001(\005\"\020\n\005MsgID\022\007"
      "\n\002ID\020\201\010\"(\n\024CS_RequestPlayerInfo\"\020\n\005MsgID"
      "\022\007\n\002ID\020\314\010\"\225\001\n\022SC_ReplyPlayerInfo\022%\n\014pb_b"
      "ase_info\030\001 \001(\0132\017.PlayerBaseInfo\022!\n\013pb_it"
      "em_bag\030\002 \001(\0132\014.ItemBagInfo\022#\n\014pb_mail_li"
      "st\030\003 \001(\0132\r.MailListInfo\"\020\n\005MsgID\022\007\n\002ID\020\315"
      "\010\"q\n\007GameMsg\022\027\n\017first_game_type\030\001 \001(\005\022\030\n"
      "\020second_game_type\030\002 \001(\005\022\017\n\007room_id\030\003 \001(\005"
      "\022\020\n\010table_id\030\004 \001(\005\022\020\n\010chair_id\030\005 \001(\005\"N\n\032"
      "SC_ReplyPlayerInfoComplete\022\036\n\014pb_gmMessa"
      "ge\030\001 \001(\0132\010.GameMsg\"\020\n\005MsgID\022\007\n\002ID\020\316\010\"7\n\023"
      "CS_LoginValidatebox\022\016\n\006answer\030\002 \003(\005\"\020\n\005M"
      "sgID\022\007\n\002ID\020\317\010\"b\n\023SC_LoginValidatebox\022\016\n\006"
      "result\030\001 \001(\005\022)\n\016pb_validatebox\030\002 \001(\0132\021.L"
      "oginValidatebox\"\020\n\005MsgID\022\007\n\002ID\020\320\010\"\305\001\n\rCS"
      "_ChangeGame\022\027\n\017first_game_type\030\001 \001(\005\022\030\n\020"
      "second_game_type\030\002 \001(\005\022\030\n\020private_room_o"
      "pt\030\003 \001(\005\022\022\n\nowner_guid\030\004 \001(\005\022 \n\030private_"
      "room_chair_count\030\005 \001(\005\022\037\n\027private_room_s"
      "core_type\030\006 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\376\010\":\n\022CS_"
      "JoinPrivateRoom\022\022\n\nowner_guid\030\001 \001(\005\"\020\n\005M"
      "sgID\022\007\n\002ID\020\377\010\"P\n\030SC_JoinPrivateRoomFaile"
      "d\022\022\n\nowner_guid\030\001 \001(\005\022\016\n\006result\030\002 \001(\005\"\020\n"
      "\005MsgID\022\007\n\002ID\020\200\t\"&\n\022CS_PrivateRoomInfo\"\020\n"
      "\005MsgID\022\007\n\002ID\020\201\t\"S\n\017PrivateRoomInfo\022\027\n\017fi"
      "rst_game_type\030\001 \001(\005\022\023\n\013table_count\030\002 \003(\005"
      "\022\022\n\ncell_money\030\003 \003(\005\"I\n\022SC_PrivateRoomIn"
      "fo\022!\n\007pb_info\030\001 \003(\0132\020.PrivateRoomInfo\"\020\n"
      "\005MsgID\022\007\n\002ID\020\202\t\"L\n\020GC_GameServerCfg\022&\n\006p"
      "b_cfg\030\001 \003(\0132\026.GameClientRoomListCfg\"\020\n\005M"
      "sgID\022\007\n\002ID\020\260\t\"$\n\020CG_GameServerCfg\"\020\n\005Msg"
      "ID\022\007\n\002ID\020\261\t\"8\n\022CS_BankSetPassword\022\020\n\010pas"
      "sword\030\001 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\320\017\"6\n\022SC_Bank"
      "SetPassword\022\016\n\006result\030\001 \001(\005\"\020\n\005MsgID\022\007\n\002"
      "ID\020\321\017\"Q\n\025CS_BankChangePassword\022\024\n\014old_pa"
      "ssword\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"\020\n\005MsgID\022"
      "\007\n\002ID\020\322\017\"9\n\025SC_BankChangePassword\022\016\n\006res"
      "ult\030\001 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\323\017\"2\n\014CS_BankLo"
      "gin\022\020\n\010password\030\001 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\324\017\""
      "0\n\014SC_BankLogin\022\016\n\006result\030\001 \001(\005\"\020\n\005MsgID"
      "\022\007\n\002ID\020\325\017\"1\n\016CS_BankDeposit\022\r\n\005money\030\001 \001"
      "(\003\"\020\n\005MsgID\022\007\n\002ID\020\332\017\"A\n\016SC_BankDeposit\022\016"
      "\n\006result\030\001 \001(\005\022\r\n\005money\030\002 \001(\003\"\020\n\005MsgID\022\007"
      "\n\002ID\020\333\017\".\n\013CS_BankDraw\022\r\n\005money\030\001 \001(\003\"\020\n"
      "\005MsgID\022\007\n\002ID\020\334\017\">\n\013SC_BankDraw\022\016\n\006result"
      "\030\001 \001(\005\022\r\n\005money\030\002 \001(\003\"\020\n\005MsgID\022\007\n\002ID\020\335\017\""
      "P\n\026SC_NotifyBankStatement\022$\n\014pb_statemen"
      "t\030\001 \001(\0132\016.BankStatement\"\020\n\005MsgID\022\007\n\002ID\020\336"
      "\017\"8\n\020CS_BankStatement\022\022\n\ncur_serial\030\001 \001("
      "\003\"\020\n\005MsgID\022\007\n\002ID\020\337\017\"J\n\020SC_BankStatement\022"
      "$\n\014pb_statement\030\001 \003(\0132\016.BankStatement\"\020\n"
      "\005MsgID\022\007\n\002ID\020\340\017\"C\n\017CS_BankTransfer\022\017\n\007ac"
      "count\030\001 \001(\t\022\r\n\005money\030\002 \001(\003\"\020\n\005MsgID\022\007\n\002I"
      "D\020\341\017\"P\n\017SC_BankTransfer\022\016\n\006result\030\001 \001(\005\022"
      "\r\n\005money\030\002 \001(\003\022\014\n\004bank\030\003 \001(\003\"\020\n\005MsgID\022\007\n"
      "\002ID\020\342\017\"Y\n\016SC_NotifyMoney\022\020\n\010opt_type\030\001 \001"
      "(\005\022\r\n\005money\030\002 \001(\003\022\024\n\014change_money\030\003 \001(\003\""
      "\020\n\005MsgID\022\007\n\002ID\020\343\017\"F\n\025CS_BankTransferByGu"
      "id\022\014\n\004guid\030\001 \001(\005\022\r\n\005money\030\002 \001(\003\"\020\n\005MsgID"
      "\022\007\n\002ID\020\344\017\"A\n\nCS_BuyItem\022\017\n\007item_id\030\001 \001(\005"
      "\022\020\n\010item_num\030\002 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\264\020\"Q\n\n"
      "SC_BuyItem\022\017\n\007item_id\030\001 \001(\005\022\020\n\010item_num\030"
      "\002 \001(\005\022\016\n\006result\030\003 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\265\020\""
      "A\n\nCS_DelItem\022\017\n\007item_id\030\001 \001(\005\022\020\n\010item_n"
      "um\030\002 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\266\020\"Q\n\nSC_DelItem"
      "\022\017\n\007item_id\030\001 \001(\005\022\020\n\010item_num\030\002 \001(\005\022\016\n\006r"
      "esult\030\003 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\267\020\"A\n\nCS_UseI"
      "tem\022\017\n\007item_id\030\001 \001(\005\022\020\n\010item_num\030\002 \001(\005\"\020"
      "\n\005MsgID\022\007\n\002ID\020\270\020\"Q\n\nSC_UseItem\022\017\n\007item_i"
      "d\030\001 \001(\005\022\020\n\010item_num\030\002 \001(\005\022\016\n\006result\030\003 \001("
      "\005\"\020\n\005MsgID\022\007\n\002ID\020\271\020\"6\n\014CS_ChatWorld\022\024\n\014c"
      "hat_content\030\001 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\230\021\"\\\n\014S"
      "C_ChatWorld\022\024\n\014chat_content\030\001 \001(\t\022\021\n\tcha"
      "t_guid\030\002 \001(\005\022\021\n\tchat_name\030\003 \001(\t\"\020\n\005MsgID"
      "\022\007\n\002ID\020\231\021\"N\n\016CS_ChatPrivate\022\024\n\014chat_cont"
      "ent\030\001 \001(\t\022\024\n\014private_name\030\002 \001(\t\"\020\n\005MsgID"
      "\022\007\n\002ID\020\232\021\"a\n\016SC_ChatPrivate\022\024\n\014chat_cont"
      "ent\030\001 \001(\t\022\024\n\014private_name\030\002 \001(\t\022\021\n\tchat_"
      "name\030\003 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\233\021\"7\n\rCS_ChatS"
      "erver\022\024\n\014chat_content\030\001 \001(\t\"\020\n\005MsgID\022\007\n\002"
      "ID\020\234\021\"]\n\rSC_ChatServer\022\024\n\014chat_content\030\001"
      " \001(\t\022\021\n\tchat_guid\030\002 \001(\005\022\021\n\tchat_name\030\003 \001"
      "(\t\"\020\n\005MsgID\022\007\n\002ID\020\235\021\"5\n\013CS_ChatRoom\022\024\n\014c"
      "hat_content\030\001 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\236\021\"[\n\013S"
      "C_ChatRoom\022\024\n\014chat_content\030\001 \001(\t\022\021\n\tchat"
      "_guid\030\002 \001(\005\022\021\n\tchat_name\030\003 \001(\t\"\020\n\005MsgID\022"
      "\007\n\002ID\020\237\021\"6\n\014CS_ChatTable\022\024\n\014chat_content"
      "\030\001 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\240\021\"\\\n\014SC_ChatTable"
      "\022\024\n\014chat_content\030\001 \001(\t\022\021\n\tchat_guid\030\002 \001("
      "\005\022\021\n\tchat_name\030\003 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\241\021\"/"
      "\n\nSC_Marquee\022\017\n\007content\030\001 \001(\t\"\020\n\005MsgID\022\007"
      "\n\002ID\020\242\021\")\n\025CS_QueryPlayerMarquee\"\020\n\005MsgI"
      "D\022\007\n\002ID\020\243\021\"H\n\025SC_QueryPlayerMarquee\022\035\n\013p"
      "b_msg_data\030\001 \003(\0132\010.Marquee\"\020\n\005MsgID\022\007\n\002I"
      "D\020\244\021\"@\n\rSC_NewMarquee\022\035\n\013pb_msg_data\030\001 \003"
      "(\0132\010.Marquee\"\020\n\005MsgID\022\007\n\002ID\020\245\021\";\n\013CS_Sen"
      "dMail\022\032\n\007pb_mail\030\001 \001(\0132\t.MailInfo\"\020\n\005Msg"
      "ID\022\007\n\002ID\020\350\021\"H\n\013SC_SendMail\022\013\n\003ret\030\001 \001(\005\022"
      "\032\n\007pb_mail\030\002 \001(\0132\t.MailInfo\"\020\n\005MsgID\022\007\n\002"
      "ID\020\351\021\">\n\016SC_RecviceMail\022\032\n\007pb_mail\030\001 \001(\013"
      "2\t.MailInfo\"\020\n\005MsgID\022\007\n\002ID\020\352\021\"/\n\nCS_DelM"
      "ail\022\017\n\007mail_id\030\001 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\355\021\"\?"
      "\n\nSC_DelMail\022\016\n\006result\030\001 \001(\005\022\017\n\007mail_id\030"
      "\002 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\356\021\"=\n\030CS_ReceiveMai"
      "lAttachment\022\017\n\007mail_id\030\001 \001(\t\"\020\n\005MsgID\022\007\n"
      "\002ID\020\357\021\"o\n\030SC_ReceiveMailAttachment\022\016\n\006re"
      "sult\030\001 \001(\005\022\017\n\007mail_id\030\002 \001(\t\022 \n\rpb_attach"
      "ment\030\003 \003(\0132\t.ItemInfo\"\020\n\005MsgID\022\007\n\002ID\020\360\021\""
      ")\n\025CS_ReceiveRewardLogin\"\020\n\005MsgID\022\007\n\002ID\020"
      "\374\021\"H\n\025SC_ReceiveRewardLogin\022\016\n\006result\030\001 "
      "\001(\005\022\r\n\005money\030\002 \001(\003\"\020\n\005MsgID\022\007\n\002ID\020\375\021\"*\n\026"
      "CS_ReceiveRewardOnline\"\020\n\005MsgID\022\007\n\002ID\020\376\021"
      "\"I\n\026SC_ReceiveRewardOnline\022\016\n\006result\030\001 \001"
      "(\005\022\r\n\005money\030\002 \001(\003\"\020\n\005MsgID\022\007\n\002ID\020\377\021\"+\n\027C"
      "S_ReceiveReliefPayment\"\020\n\005MsgID\022\007\n\002ID\020\200\022"
      "\"J\n\027SC_ReceiveReliefPayment\022\016\n\006result\030\001 "
      "\001(\005\022\r\n\005money\030\002 \001(\003\"\020\n\005MsgID\022\007\n\002ID\020\201\022\"5\n\016"
      "CE_RequestRank\022\021\n\trank_type\030\001 \001(\005\"\020\n\005Msg"
      "ID\022\007\n\002ID\020\340\022\"O\n\014EC_ReplyRank\022\021\n\trank_type"
      "\030\001 \001(\005\022\032\n\007pb_rank\030\002 \003(\0132\t.RankItem\"\020\n\005Ms"
      "gID\022\007\n\002ID\020\341\022\"1\n\014CS_EnterRoom\022\017\n\007room_id\030"
      "\001 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\370U\"A\n\014SC_EnterRoom\022"
      "\017\n\007room_id\030\001 \001(\005\022\016\n\006result\030\002 \001(\005\"\020\n\005MsgI"
      "D\022\007\n\002ID\020\371U\"E\n\022SC_NotifyEnterRoom\022\017\n\007room"
      "_id\030\001 \001(\005\022\014\n\004guid\030\002 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\372"
      "U\"\037\n\013CS_ExitRoom\"\020\n\005MsgID\022\007\n\002ID\020\373U\"@\n\013SC"
      "_ExitRoom\022\017\n\007room_id\030\001 \001(\005\022\016\n\006result\030\002 \001"
      "(\005\"\020\n\005MsgID\022\007\n\002ID\020\374U\"D\n\021SC_NotifyExitRoo"
      "m\022\017\n\007room_id\030\001 \001(\005\022\014\n\004guid\030\002 \001(\005\"\020\n\005MsgI"
      "D\022\007\n\002ID\020\375U\"$\n\020CS_AutoEnterRoom\"\020\n\005MsgID\022"
      "\007\n\002ID\020\376U\"\"\n\016CS_AutoSitDown\"\020\n\005MsgID\022\007\n\002I"
      "D\020\202V\"B\n\nCS_SitDown\022\020\n\010table_id\030\001 \001(\005\022\020\n\010"
      "chair_id\030\002 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\203V\"R\n\nSC_S"
      "itDown\022\020\n\010table_id\030\001 \001(\005\022\020\n\010chair_id\030\002 \001"
      "(\005\022\016\n\006result\030\003 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\204V\"u\n\020"
      "SC_NotifySitDown\022\020\n\010table_id\030\001 \001(\005\022)\n\016pb"
      "_visual_info\030\002 \001(\0132\021.PlayerVisualInfo\022\022\n"
      "\nis_onfline\030\004 \001(\010\"\020\n\005MsgID\022\007\n\002ID\020\205V\"\036\n\nC"
      "S_StandUp\"\020\n\005MsgID\022\007\n\002ID\020\214V\"R\n\nSC_StandU"
      "p\022\020\n\010table_id\030\001 \001(\005\022\020\n\010chair_id\030\002 \001(\005\022\016\n"
      "\006result\030\003 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\215V\"j\n\020SC_No"
      "tifyStandUp\022\020\n\010table_id\030\001 \001(\005\022\020\n\010chair_i"
      "d\030\002 \001(\005\022\014\n\004guid\030\003 \001(\005\022\022\n\nis_offline\030\004 \001("
      "\010\"\020\n\005MsgID\022\007\n\002ID\020\216V\"*\n\026CS_EnterRoomAndSi"
      "tDown\"\020\n\005MsgID\022\007\n\002ID\020\226V\"\367\002\n\026SC_EnterRoom"
      "AndSitDown\022\017\n\007room_id\030\001 \001(\005\022\020\n\010table_id\030"
      "\002 \001(\005\022\020\n\010chair_id\030\003 \001(\005\022\016\n\006result\030\004 \001(\005\022"
      ")\n\016pb_visual_info\030\005 \003(\0132\021.PlayerVisualIn"
      "fo\022\017\n\007game_id\030\006 \001(\005\022\027\n\017first_game_type\030\007"
      " \001(\005\022\030\n\020second_game_type\030\010 \001(\005\022\017\n\007ip_are"
      "a\030\t \001(\t\022\024\n\014private_room\030\n \001(\010\022\025\n\rbalance"
      "_money\030\013 \001(\005\022\037\n\027private_room_score_type\030"
      "\014 \001(\005\022\037\n\027private_room_cell_money\030\r \001(\005\022\027"
      "\n\017private_room_id\030\016 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\227"
      "V\")\n\025CS_StandUpAndExitRoom\"\020\n\005MsgID\022\007\n\002I"
      "D\020\230V\"n\n\025SC_StandUpAndExitRoom\022\017\n\007room_id"
      "\030\001 \001(\005\022\020\n\010table_id\030\002 \001(\005\022\020\n\010chair_id\030\003 \001"
      "(\005\022\016\n\006result\030\004 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\231V\"\"\n\016"
      "CS_ChangeChair\"\020\n\005MsgID\022\007\n\002ID\020\232V\"\201\001\n\016SC_"
      "ChangeChair\022\020\n\010table_id\030\001 \001(\005\022\020\n\010chair_i"
      "d\030\002 \001(\005\022\016\n\006result\030\003 \001(\005\022)\n\016pb_visual_inf"
      "o\030\004 \003(\0132\021.PlayerVisualInfo\"\020\n\005MsgID\022\007\n\002I"
      "D\020\233V\"\"\n\016CS_ChangeTable\"\020\n\005MsgID\022\007\n\002ID\020\234V"
      "\"\034\n\010CS_Ready\"\020\n\005MsgID\022\007\n\002ID\020\252V\"F\n\010SC_Rea"
      "dy\022\026\n\016ready_chair_id\030\001 \001(\005\022\020\n\010is_ready\030\002"
      " \001(\010\"\020\n\005MsgID\022\007\n\002ID\020\253V\"\033\n\007CS_Exit\"\020\n\005Msg"
      "ID\022\007\n\002ID\020\254V\"A\n\016SC_ReadyFailed\022\016\n\006result\030"
      "\001 \001(\005\022\r\n\005money\030\002 \001(\003\"\020\n\005MsgID\022\007\n\002ID\020\255V\"0"
      "\n\rSC_Gamefinish\022\r\n\005money\030\001 \001(\003\"\020\n\005MsgID\022"
      "\007\n\002ID\020\256V\"\221\003\n\025SC_PlayerReconnection\022\017\n\007ro"
      "om_id\030\001 \001(\005\022\020\n\010table_id\030\002 \001(\005\022\020\n\010chair_i"
      "d\030\003 \001(\005\022\016\n\006result\030\004 \001(\005\022)\n\016pb_visual_inf"
      "o\030\005 \003(\0132\021.PlayerVisualInfo\022\017\n\007game_id\030\006 "
      "\001(\005\022\027\n\017first_game_type\030\007 \001(\005\022\030\n\020second_g"
      "ame_type\030\010 \001(\005\022\017\n\007ip_area\030\t \001(\t\022\020\n\010is_re"
      "ady\030\n \001(\010\022\024\n\014private_room\030\013 \001(\010\022\037\n\027priva"
      "te_room_score_type\030\014 \001(\005\022\037\n\027private_room"
      "_cell_money\030\r \001(\005\022\027\n\017private_room_id\030\016 \001"
      "(\005\022\036\n\026private_room_has_start\030\017 \001(\005\"\020\n\005Ms"
      "gID\022\007\n\002ID\020\257V\"\347\001\n\016SC_ChangeTable\022\017\n\007room_"
      "id\030\001 \001(\005\022\020\n\010table_id\030\002 \001(\005\022\020\n\010chair_id\030\003"
      " \001(\005\022\016\n\006result\030\004 \001(\005\022)\n\016pb_visual_info\030\005"
      " \003(\0132\021.PlayerVisualInfo\022\017\n\007game_id\030\006 \001(\005"
      "\022\027\n\017first_game_type\030\007 \001(\005\022\030\n\020second_game"
      "_type\030\010 \001(\005\022\017\n\007ip_area\030\t \001(\t\"\020\n\005MsgID\022\007\n"
      "\002ID\020\260V\"3\n\014SC_HEARTBEAT\022\021\n\tseverTime\030\001 \001("
      "\005\"\020\n\005MsgID\022\007\n\002ID\020\261V\" \n\014CS_HEARTBEAT\"\020\n\005M"
      "sgID\022\007\n\002ID\020\262V\"\'\n\023CS_ReconnectionPlay\"\020\n\005"
      "MsgID\022\007\n\002ID\020\263V\";\n\023SC_ReconnectionPlay\022\022\n"
      "\nfind_table\030\001 \001(\010\"\020\n\005MsgID\022\007\n\002ID\020\273V\"4\n\020S"
      "C_SimpleRespons\022\016\n\006status\030\001 \001(\005\"\020\n\005MsgID"
      "\022\007\n\002ID\020\264V\")\n\025CS_QueryPlayerMsgData\"\020\n\005Ms"
      "gID\022\007\n\002ID\020\265V\"M\n\025SC_QueryPlayerMsgData\022\"\n"
      "\013pb_msg_data\030\001 \003(\0132\r.Msg_DataInfo\"\020\n\005Msg"
      "ID\022\007\n\002ID\020\266V\"E\n\rSC_NewMsgData\022\"\n\013pb_msg_d"
      "ata\030\001 \003(\0132\r.Msg_DataInfo\"\020\n\005MsgID\022\007\n\002ID\020"
      "\267V\"C\n\021CS_SetMsgReadFlag\022\n\n\002id\030\001 \001(\005\022\020\n\010m"
      "sg_type\030\002 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\270V\"[\n\021SC_Fe"
      "edBackUpDate\022\022\n\nfeedbackid\030\001 \001(\005\022\014\n\004type"
      "\030\002 \001(\005\022\022\n\nupdateTime\030\003 \001(\005\"\020\n\005MsgID\022\007\n\002I"
      "D\020\271V\"A\n\013SC_DeletMsg\022\016\n\006msg_id\030\001 \001(\005\022\020\n\010m"
      "sg_type\030\002 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\272V\"B\n\014CS_Ca"
      "shMoney\022\r\n\005money\030\001 \001(\005\022\021\n\tcash_type\030\002 \001("
      "\005\"\020\n\005MsgID\022\007\n\002ID\020\276V\"S\n\022SC_CashMoneyResul"
      "t\022\016\n\006result\030\001 \001(\005\022\014\n\004bank\030\002 \001(\003\022\r\n\005money"
      "\030\003 \001(\003\"\020\n\005MsgID\022\007\n\002ID\020\277V\"$\n\020CS_CashMoney"
      "Type\"\020\n\005MsgID\022\007\n\002ID\020\300V\"J\n\020SC_CashMoneyTy"
      "pe\022$\n\014pb_cash_info\030\001 \003(\0132\016.CashMoneyType"
      "\"\020\n\005MsgID\022\007\n\002ID\020\301V\"V\n\rSC_NotifyBank\022\020\n\010o"
      "pt_type\030\001 \001(\005\022\014\n\004bank\030\002 \001(\003\022\023\n\013change_ba"
      "nk\030\003 \001(\003\"\020\n\005MsgID\022\007\n\002ID\020\302V\"N\n\rCS_BandAli"
      "pay\022\026\n\016alipay_account\030\001 \001(\t\022\023\n\013alipay_na"
      "me\030\002 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\305V\"^\n\rSC_BandAli"
      "pay\022\016\n\006result\030\001 \001(\005\022\026\n\016alipay_account\030\002 "
      "\001(\t\022\023\n\013alipay_name\030\003 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020"
      "\306V\"0\n\016CS_Trusteeship\022\014\n\004flag\030\001 \001(\005\"\020\n\005Ms"
      "gID\022\007\n\002ID\020\307V\",\n\nSC_ShowTax\022\014\n\004flag\030\001 \001(\005"
      "\"\020\n\005MsgID\022\007\n\002ID\020\310V\"F\n\023SD_Delonline_playe"
      "r\022\014\n\004guid\030\001 \001(\005\022\017\n\007game_id\030\002 \001(\005\"\020\n\005MsgI"
      "D\022\007\n\002ID\020\311V\"\215\001\n\rSC_AlipayEdit\022\014\n\004guid\030\001 \001"
      "(\005\022\023\n\013alipay_name\030\002 \001(\t\022\025\n\ralipay_name_y"
      "\030\003 \001(\t\022\026\n\016alipay_account\030\004 \001(\t\022\030\n\020alipay"
      "_account_y\030\005 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\312V\"C\n\032SC"
      "_BrocastClientUpdateInfo\022\023\n\013update_info\030"
      "\001 \001(\t\"\020\n\005MsgID\022\007\n\002ID\020\313V\"B\n\020SC_FreezeAcco"
      "unt\022\014\n\004guid\030\001 \001(\005\022\016\n\006status\030\002 \001(\005\"\020\n\005Msg"
      "ID\022\007\n\002ID\020\314V\"f\n\017SC_GameMaintain\022\016\n\006result"
      "\030\001 \001(\005\022\027\n\017first_game_type\030\002 \001(\005\022\030\n\020secon"
      "d_game_type\030\003 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\315V\"3\n\017S"
      "C_CashMaintain\022\016\n\006result\030\001 \001(\005\"\020\n\005MsgID\022"
      "\007\n\002ID\020\316V\"9\n\017CS_GetHelpMoney\022\024\n\014get_right"
      "now\030\001 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\317V\"y\n\017SC_GetHel"
      "pMoney\022\023\n\013result_cash\030\001 \001(\005\022\022\n\nleft_time"
      "s\030\002 \001(\005\022\022\n\ncash_money\030\003 \001(\005\022\027\n\017money_mus"
      "t_less\030\004 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\320V\"G\n\022CS_Age"
      "nt_CashMoney\022\r\n\005money\030\001 \001(\005\022\020\n\010agent_id\030"
      "\002 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\321V\"Y\n\030SC_Agent_Cash"
      "MoneyResult\022\016\n\006result\030\001 \001(\005\022\014\n\004bank\030\002 \001("
      "\003\022\r\n\005money\030\003 \001(\003\"\020\n\005MsgID\022\007\n\002ID\020\322V\"&\n\022CS"
      "_RequestNewAward\"\020\n\005MsgID\022\007\n\002ID\020\323V\"Q\n\022SC"
      "_RequestNewAward\022\027\n\017newaward_result\030\001 \001("
      "\005\022\020\n\005money\030\002 \001(\005:\0010\"\020\n\005MsgID\022\007\n\002ID\020\324V\"*\n"
      "\026CS_RequestCheckInAward\"\020\n\005MsgID\022\007\n\002ID\020\325"
      "V\"T\n\026SC_RequestCheckInAward\022\026\n\016checkin_r"
      "esult\030\001 \001(\005\022\020\n\005money\030\002 \001(\005:\0010\"\020\n\005MsgID\022\007"
      "\n\002ID\020\326V\"C\n\017CS_BindBankCard\022\036\n\007pb_info\030\001 "
      "\001(\0132\r.BankCardInfo\"\020\n\005MsgID\022\007\n\002ID\020\327V\"8\n\017"
      "SC_BindBankCard\022\023\n\013bind_result\030\001 \001(\005\"\020\n\005"
      "MsgID\022\007\n\002ID\020\330V\"&\n\022CS_GetBankCardInfo\"\020\n\005"
      "MsgID\022\007\n\002ID\020\331V\"F\n\022SC_GetBankCardInfo\022\036\n\007"
      "pb_info\030\001 \001(\0132\r.BankCardInfo\"\020\n\005MsgID\022\007\n"
      "\002ID\020\332V\"&\n\022CS_NewGameMaintain\"\020\n\005MsgID\022\007\n"
      "\002ID\020\333V\"\?\n\022SC_NewGameMaintain\022\027\n\017first_ga"
      "me_type\030\001 \003(\005\"\020\n\005MsgID\022\007\n\002ID\020\334V\"5\n\022CS_Pl"
      "ayerPromotion\022\r\n\005index\030\001 \001(\005\"\020\n\005MsgID\022\007\n"
      "\002ID\020\335V\"@\n\022SC_PlayerPromotion\022\030\n\020promotio"
      "n_result\030\001 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\336V"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 12912);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "public_msg.proto", &protobuf_RegisterTypes);
  ::protobuf_public_5fplayer_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_public_5fmsg_2eproto

const ::google::protobuf::EnumDescriptor* C_RequestPublicKey_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[0];
}
bool C_RequestPublicKey_MsgID_IsValid(int value) {
  switch (value) {
    case 999:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const C_RequestPublicKey_MsgID C_RequestPublicKey::ID;
const C_RequestPublicKey_MsgID C_RequestPublicKey::MsgID_MIN;
const C_RequestPublicKey_MsgID C_RequestPublicKey::MsgID_MAX;
const int C_RequestPublicKey::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* C_PublicKey_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[1];
}
bool C_PublicKey_MsgID_IsValid(int value) {
  switch (value) {
    case 1000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const C_PublicKey_MsgID C_PublicKey::ID;
const C_PublicKey_MsgID C_PublicKey::MsgID_MIN;
const C_PublicKey_MsgID C_PublicKey::MsgID_MAX;
const int C_PublicKey::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CL_RegAccount_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[2];
}
bool CL_RegAccount_MsgID_IsValid(int value) {
  switch (value) {
    case 1001:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CL_RegAccount_MsgID CL_RegAccount::ID;
const CL_RegAccount_MsgID CL_RegAccount::MsgID_MIN;
const CL_RegAccount_MsgID CL_RegAccount::MsgID_MAX;
const int CL_RegAccount::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CL_Login_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[3];
}
bool CL_Login_MsgID_IsValid(int value) {
  switch (value) {
    case 1003:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CL_Login_MsgID CL_Login::ID;
const CL_Login_MsgID CL_Login::MsgID_MIN;
const CL_Login_MsgID CL_Login::MsgID_MAX;
const int CL_Login::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LC_Login_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[4];
}
bool LC_Login_MsgID_IsValid(int value) {
  switch (value) {
    case 1004:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LC_Login_MsgID LC_Login::ID;
const LC_Login_MsgID LC_Login::MsgID_MIN;
const LC_Login_MsgID LC_Login::MsgID_MAX;
const int LC_Login::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CL_LoginBySms_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[5];
}
bool CL_LoginBySms_MsgID_IsValid(int value) {
  switch (value) {
    case 1005:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CL_LoginBySms_MsgID CL_LoginBySms::ID;
const CL_LoginBySms_MsgID CL_LoginBySms::MsgID_MIN;
const CL_LoginBySms_MsgID CL_LoginBySms::MsgID_MAX;
const int CL_LoginBySms::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_KickClient_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[6];
}
bool SC_KickClient_MsgID_IsValid(int value) {
  switch (value) {
    case 1006:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_KickClient_MsgID SC_KickClient::ID;
const SC_KickClient_MsgID SC_KickClient::MsgID_MIN;
const SC_KickClient_MsgID SC_KickClient::MsgID_MAX;
const int SC_KickClient::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_RequestSms_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[7];
}
bool CS_RequestSms_MsgID_IsValid(int value) {
  switch (value) {
    case 1010:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_RequestSms_MsgID CS_RequestSms::ID;
const CS_RequestSms_MsgID CS_RequestSms::MsgID_MIN;
const CS_RequestSms_MsgID CS_RequestSms::MsgID_MAX;
const int CS_RequestSms::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_RequestSms_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[8];
}
bool SC_RequestSms_MsgID_IsValid(int value) {
  switch (value) {
    case 1011:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_RequestSms_MsgID SC_RequestSms::ID;
const SC_RequestSms_MsgID SC_RequestSms::MsgID_MIN;
const SC_RequestSms_MsgID SC_RequestSms::MsgID_MAX;
const int SC_RequestSms::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ResetAccount_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[9];
}
bool CS_ResetAccount_MsgID_IsValid(int value) {
  switch (value) {
    case 1012:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ResetAccount_MsgID CS_ResetAccount::ID;
const CS_ResetAccount_MsgID CS_ResetAccount::MsgID_MIN;
const CS_ResetAccount_MsgID CS_ResetAccount::MsgID_MAX;
const int CS_ResetAccount::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ResetAccount_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[10];
}
bool SC_ResetAccount_MsgID_IsValid(int value) {
  switch (value) {
    case 1013:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ResetAccount_MsgID SC_ResetAccount::ID;
const SC_ResetAccount_MsgID SC_ResetAccount::MsgID_MIN;
const SC_ResetAccount_MsgID SC_ResetAccount::MsgID_MAX;
const int SC_ResetAccount::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_SetPassword_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[11];
}
bool CS_SetPassword_MsgID_IsValid(int value) {
  switch (value) {
    case 1014:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_SetPassword_MsgID CS_SetPassword::ID;
const CS_SetPassword_MsgID CS_SetPassword::MsgID_MIN;
const CS_SetPassword_MsgID CS_SetPassword::MsgID_MAX;
const int CS_SetPassword::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_SetPassword_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[12];
}
bool SC_SetPassword_MsgID_IsValid(int value) {
  switch (value) {
    case 1015:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_SetPassword_MsgID SC_SetPassword::ID;
const SC_SetPassword_MsgID SC_SetPassword::MsgID_MIN;
const SC_SetPassword_MsgID SC_SetPassword::MsgID_MAX;
const int SC_SetPassword::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_SetPasswordBySms_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[13];
}
bool CS_SetPasswordBySms_MsgID_IsValid(int value) {
  switch (value) {
    case 1016:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_SetPasswordBySms_MsgID CS_SetPasswordBySms::ID;
const CS_SetPasswordBySms_MsgID CS_SetPasswordBySms::MsgID_MIN;
const CS_SetPasswordBySms_MsgID CS_SetPasswordBySms::MsgID_MAX;
const int CS_SetPasswordBySms::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_SetNickname_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[14];
}
bool CS_SetNickname_MsgID_IsValid(int value) {
  switch (value) {
    case 1020:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_SetNickname_MsgID CS_SetNickname::ID;
const CS_SetNickname_MsgID CS_SetNickname::MsgID_MIN;
const CS_SetNickname_MsgID CS_SetNickname::MsgID_MAX;
const int CS_SetNickname::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_SetNickname_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[15];
}
bool SC_SetNickname_MsgID_IsValid(int value) {
  switch (value) {
    case 1021:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_SetNickname_MsgID SC_SetNickname::ID;
const SC_SetNickname_MsgID SC_SetNickname::MsgID_MIN;
const SC_SetNickname_MsgID SC_SetNickname::MsgID_MAX;
const int SC_SetNickname::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ChangeHeaderIcon_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[16];
}
bool CS_ChangeHeaderIcon_MsgID_IsValid(int value) {
  switch (value) {
    case 1022:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ChangeHeaderIcon_MsgID CS_ChangeHeaderIcon::ID;
const CS_ChangeHeaderIcon_MsgID CS_ChangeHeaderIcon::MsgID_MIN;
const CS_ChangeHeaderIcon_MsgID CS_ChangeHeaderIcon::MsgID_MAX;
const int CS_ChangeHeaderIcon::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ChangeHeaderIcon_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[17];
}
bool SC_ChangeHeaderIcon_MsgID_IsValid(int value) {
  switch (value) {
    case 1023:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ChangeHeaderIcon_MsgID SC_ChangeHeaderIcon::ID;
const SC_ChangeHeaderIcon_MsgID SC_ChangeHeaderIcon::MsgID_MIN;
const SC_ChangeHeaderIcon_MsgID SC_ChangeHeaderIcon::MsgID_MAX;
const int SC_ChangeHeaderIcon::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CL_GetInviterInfo_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[18];
}
bool CL_GetInviterInfo_MsgID_IsValid(int value) {
  switch (value) {
    case 1024:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CL_GetInviterInfo_MsgID CL_GetInviterInfo::ID;
const CL_GetInviterInfo_MsgID CL_GetInviterInfo::MsgID_MIN;
const CL_GetInviterInfo_MsgID CL_GetInviterInfo::MsgID_MAX;
const int CL_GetInviterInfo::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LC_GetInviterInfo_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[19];
}
bool LC_GetInviterInfo_MsgID_IsValid(int value) {
  switch (value) {
    case 1025:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LC_GetInviterInfo_MsgID LC_GetInviterInfo::ID;
const LC_GetInviterInfo_MsgID LC_GetInviterInfo::MsgID_MIN;
const LC_GetInviterInfo_MsgID LC_GetInviterInfo::MsgID_MAX;
const int LC_GetInviterInfo::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_RequestPlayerInfo_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[20];
}
bool CS_RequestPlayerInfo_MsgID_IsValid(int value) {
  switch (value) {
    case 1100:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_RequestPlayerInfo_MsgID CS_RequestPlayerInfo::ID;
const CS_RequestPlayerInfo_MsgID CS_RequestPlayerInfo::MsgID_MIN;
const CS_RequestPlayerInfo_MsgID CS_RequestPlayerInfo::MsgID_MAX;
const int CS_RequestPlayerInfo::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ReplyPlayerInfo_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[21];
}
bool SC_ReplyPlayerInfo_MsgID_IsValid(int value) {
  switch (value) {
    case 1101:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ReplyPlayerInfo_MsgID SC_ReplyPlayerInfo::ID;
const SC_ReplyPlayerInfo_MsgID SC_ReplyPlayerInfo::MsgID_MIN;
const SC_ReplyPlayerInfo_MsgID SC_ReplyPlayerInfo::MsgID_MAX;
const int SC_ReplyPlayerInfo::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ReplyPlayerInfoComplete_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[22];
}
bool SC_ReplyPlayerInfoComplete_MsgID_IsValid(int value) {
  switch (value) {
    case 1102:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ReplyPlayerInfoComplete_MsgID SC_ReplyPlayerInfoComplete::ID;
const SC_ReplyPlayerInfoComplete_MsgID SC_ReplyPlayerInfoComplete::MsgID_MIN;
const SC_ReplyPlayerInfoComplete_MsgID SC_ReplyPlayerInfoComplete::MsgID_MAX;
const int SC_ReplyPlayerInfoComplete::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_LoginValidatebox_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[23];
}
bool CS_LoginValidatebox_MsgID_IsValid(int value) {
  switch (value) {
    case 1103:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_LoginValidatebox_MsgID CS_LoginValidatebox::ID;
const CS_LoginValidatebox_MsgID CS_LoginValidatebox::MsgID_MIN;
const CS_LoginValidatebox_MsgID CS_LoginValidatebox::MsgID_MAX;
const int CS_LoginValidatebox::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_LoginValidatebox_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[24];
}
bool SC_LoginValidatebox_MsgID_IsValid(int value) {
  switch (value) {
    case 1104:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_LoginValidatebox_MsgID SC_LoginValidatebox::ID;
const SC_LoginValidatebox_MsgID SC_LoginValidatebox::MsgID_MIN;
const SC_LoginValidatebox_MsgID SC_LoginValidatebox::MsgID_MAX;
const int SC_LoginValidatebox::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ChangeGame_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[25];
}
bool CS_ChangeGame_MsgID_IsValid(int value) {
  switch (value) {
    case 1150:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ChangeGame_MsgID CS_ChangeGame::ID;
const CS_ChangeGame_MsgID CS_ChangeGame::MsgID_MIN;
const CS_ChangeGame_MsgID CS_ChangeGame::MsgID_MAX;
const int CS_ChangeGame::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_JoinPrivateRoom_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[26];
}
bool CS_JoinPrivateRoom_MsgID_IsValid(int value) {
  switch (value) {
    case 1151:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_JoinPrivateRoom_MsgID CS_JoinPrivateRoom::ID;
const CS_JoinPrivateRoom_MsgID CS_JoinPrivateRoom::MsgID_MIN;
const CS_JoinPrivateRoom_MsgID CS_JoinPrivateRoom::MsgID_MAX;
const int CS_JoinPrivateRoom::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_JoinPrivateRoomFailed_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[27];
}
bool SC_JoinPrivateRoomFailed_MsgID_IsValid(int value) {
  switch (value) {
    case 1152:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_JoinPrivateRoomFailed_MsgID SC_JoinPrivateRoomFailed::ID;
const SC_JoinPrivateRoomFailed_MsgID SC_JoinPrivateRoomFailed::MsgID_MIN;
const SC_JoinPrivateRoomFailed_MsgID SC_JoinPrivateRoomFailed::MsgID_MAX;
const int SC_JoinPrivateRoomFailed::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_PrivateRoomInfo_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[28];
}
bool CS_PrivateRoomInfo_MsgID_IsValid(int value) {
  switch (value) {
    case 1153:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_PrivateRoomInfo_MsgID CS_PrivateRoomInfo::ID;
const CS_PrivateRoomInfo_MsgID CS_PrivateRoomInfo::MsgID_MIN;
const CS_PrivateRoomInfo_MsgID CS_PrivateRoomInfo::MsgID_MAX;
const int CS_PrivateRoomInfo::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_PrivateRoomInfo_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[29];
}
bool SC_PrivateRoomInfo_MsgID_IsValid(int value) {
  switch (value) {
    case 1154:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_PrivateRoomInfo_MsgID SC_PrivateRoomInfo::ID;
const SC_PrivateRoomInfo_MsgID SC_PrivateRoomInfo::MsgID_MIN;
const SC_PrivateRoomInfo_MsgID SC_PrivateRoomInfo::MsgID_MAX;
const int SC_PrivateRoomInfo::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GC_GameServerCfg_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[30];
}
bool GC_GameServerCfg_MsgID_IsValid(int value) {
  switch (value) {
    case 1200:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GC_GameServerCfg_MsgID GC_GameServerCfg::ID;
const GC_GameServerCfg_MsgID GC_GameServerCfg::MsgID_MIN;
const GC_GameServerCfg_MsgID GC_GameServerCfg::MsgID_MAX;
const int GC_GameServerCfg::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CG_GameServerCfg_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[31];
}
bool CG_GameServerCfg_MsgID_IsValid(int value) {
  switch (value) {
    case 1201:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CG_GameServerCfg_MsgID CG_GameServerCfg::ID;
const CG_GameServerCfg_MsgID CG_GameServerCfg::MsgID_MIN;
const CG_GameServerCfg_MsgID CG_GameServerCfg::MsgID_MAX;
const int CG_GameServerCfg::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_BankSetPassword_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[32];
}
bool CS_BankSetPassword_MsgID_IsValid(int value) {
  switch (value) {
    case 2000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_BankSetPassword_MsgID CS_BankSetPassword::ID;
const CS_BankSetPassword_MsgID CS_BankSetPassword::MsgID_MIN;
const CS_BankSetPassword_MsgID CS_BankSetPassword::MsgID_MAX;
const int CS_BankSetPassword::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_BankSetPassword_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[33];
}
bool SC_BankSetPassword_MsgID_IsValid(int value) {
  switch (value) {
    case 2001:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_BankSetPassword_MsgID SC_BankSetPassword::ID;
const SC_BankSetPassword_MsgID SC_BankSetPassword::MsgID_MIN;
const SC_BankSetPassword_MsgID SC_BankSetPassword::MsgID_MAX;
const int SC_BankSetPassword::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_BankChangePassword_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[34];
}
bool CS_BankChangePassword_MsgID_IsValid(int value) {
  switch (value) {
    case 2002:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_BankChangePassword_MsgID CS_BankChangePassword::ID;
const CS_BankChangePassword_MsgID CS_BankChangePassword::MsgID_MIN;
const CS_BankChangePassword_MsgID CS_BankChangePassword::MsgID_MAX;
const int CS_BankChangePassword::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_BankChangePassword_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[35];
}
bool SC_BankChangePassword_MsgID_IsValid(int value) {
  switch (value) {
    case 2003:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_BankChangePassword_MsgID SC_BankChangePassword::ID;
const SC_BankChangePassword_MsgID SC_BankChangePassword::MsgID_MIN;
const SC_BankChangePassword_MsgID SC_BankChangePassword::MsgID_MAX;
const int SC_BankChangePassword::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_BankLogin_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[36];
}
bool CS_BankLogin_MsgID_IsValid(int value) {
  switch (value) {
    case 2004:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_BankLogin_MsgID CS_BankLogin::ID;
const CS_BankLogin_MsgID CS_BankLogin::MsgID_MIN;
const CS_BankLogin_MsgID CS_BankLogin::MsgID_MAX;
const int CS_BankLogin::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_BankLogin_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[37];
}
bool SC_BankLogin_MsgID_IsValid(int value) {
  switch (value) {
    case 2005:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_BankLogin_MsgID SC_BankLogin::ID;
const SC_BankLogin_MsgID SC_BankLogin::MsgID_MIN;
const SC_BankLogin_MsgID SC_BankLogin::MsgID_MAX;
const int SC_BankLogin::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_BankDeposit_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[38];
}
bool CS_BankDeposit_MsgID_IsValid(int value) {
  switch (value) {
    case 2010:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_BankDeposit_MsgID CS_BankDeposit::ID;
const CS_BankDeposit_MsgID CS_BankDeposit::MsgID_MIN;
const CS_BankDeposit_MsgID CS_BankDeposit::MsgID_MAX;
const int CS_BankDeposit::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_BankDeposit_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[39];
}
bool SC_BankDeposit_MsgID_IsValid(int value) {
  switch (value) {
    case 2011:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_BankDeposit_MsgID SC_BankDeposit::ID;
const SC_BankDeposit_MsgID SC_BankDeposit::MsgID_MIN;
const SC_BankDeposit_MsgID SC_BankDeposit::MsgID_MAX;
const int SC_BankDeposit::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_BankDraw_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[40];
}
bool CS_BankDraw_MsgID_IsValid(int value) {
  switch (value) {
    case 2012:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_BankDraw_MsgID CS_BankDraw::ID;
const CS_BankDraw_MsgID CS_BankDraw::MsgID_MIN;
const CS_BankDraw_MsgID CS_BankDraw::MsgID_MAX;
const int CS_BankDraw::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_BankDraw_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[41];
}
bool SC_BankDraw_MsgID_IsValid(int value) {
  switch (value) {
    case 2013:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_BankDraw_MsgID SC_BankDraw::ID;
const SC_BankDraw_MsgID SC_BankDraw::MsgID_MIN;
const SC_BankDraw_MsgID SC_BankDraw::MsgID_MAX;
const int SC_BankDraw::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_NotifyBankStatement_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[42];
}
bool SC_NotifyBankStatement_MsgID_IsValid(int value) {
  switch (value) {
    case 2014:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_NotifyBankStatement_MsgID SC_NotifyBankStatement::ID;
const SC_NotifyBankStatement_MsgID SC_NotifyBankStatement::MsgID_MIN;
const SC_NotifyBankStatement_MsgID SC_NotifyBankStatement::MsgID_MAX;
const int SC_NotifyBankStatement::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_BankStatement_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[43];
}
bool CS_BankStatement_MsgID_IsValid(int value) {
  switch (value) {
    case 2015:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_BankStatement_MsgID CS_BankStatement::ID;
const CS_BankStatement_MsgID CS_BankStatement::MsgID_MIN;
const CS_BankStatement_MsgID CS_BankStatement::MsgID_MAX;
const int CS_BankStatement::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_BankStatement_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[44];
}
bool SC_BankStatement_MsgID_IsValid(int value) {
  switch (value) {
    case 2016:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_BankStatement_MsgID SC_BankStatement::ID;
const SC_BankStatement_MsgID SC_BankStatement::MsgID_MIN;
const SC_BankStatement_MsgID SC_BankStatement::MsgID_MAX;
const int SC_BankStatement::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_BankTransfer_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[45];
}
bool CS_BankTransfer_MsgID_IsValid(int value) {
  switch (value) {
    case 2017:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_BankTransfer_MsgID CS_BankTransfer::ID;
const CS_BankTransfer_MsgID CS_BankTransfer::MsgID_MIN;
const CS_BankTransfer_MsgID CS_BankTransfer::MsgID_MAX;
const int CS_BankTransfer::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_BankTransfer_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[46];
}
bool SC_BankTransfer_MsgID_IsValid(int value) {
  switch (value) {
    case 2018:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_BankTransfer_MsgID SC_BankTransfer::ID;
const SC_BankTransfer_MsgID SC_BankTransfer::MsgID_MIN;
const SC_BankTransfer_MsgID SC_BankTransfer::MsgID_MAX;
const int SC_BankTransfer::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_NotifyMoney_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[47];
}
bool SC_NotifyMoney_MsgID_IsValid(int value) {
  switch (value) {
    case 2019:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_NotifyMoney_MsgID SC_NotifyMoney::ID;
const SC_NotifyMoney_MsgID SC_NotifyMoney::MsgID_MIN;
const SC_NotifyMoney_MsgID SC_NotifyMoney::MsgID_MAX;
const int SC_NotifyMoney::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_BankTransferByGuid_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[48];
}
bool CS_BankTransferByGuid_MsgID_IsValid(int value) {
  switch (value) {
    case 2020:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_BankTransferByGuid_MsgID CS_BankTransferByGuid::ID;
const CS_BankTransferByGuid_MsgID CS_BankTransferByGuid::MsgID_MIN;
const CS_BankTransferByGuid_MsgID CS_BankTransferByGuid::MsgID_MAX;
const int CS_BankTransferByGuid::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_BuyItem_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[49];
}
bool CS_BuyItem_MsgID_IsValid(int value) {
  switch (value) {
    case 2100:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_BuyItem_MsgID CS_BuyItem::ID;
const CS_BuyItem_MsgID CS_BuyItem::MsgID_MIN;
const CS_BuyItem_MsgID CS_BuyItem::MsgID_MAX;
const int CS_BuyItem::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_BuyItem_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[50];
}
bool SC_BuyItem_MsgID_IsValid(int value) {
  switch (value) {
    case 2101:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_BuyItem_MsgID SC_BuyItem::ID;
const SC_BuyItem_MsgID SC_BuyItem::MsgID_MIN;
const SC_BuyItem_MsgID SC_BuyItem::MsgID_MAX;
const int SC_BuyItem::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_DelItem_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[51];
}
bool CS_DelItem_MsgID_IsValid(int value) {
  switch (value) {
    case 2102:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_DelItem_MsgID CS_DelItem::ID;
const CS_DelItem_MsgID CS_DelItem::MsgID_MIN;
const CS_DelItem_MsgID CS_DelItem::MsgID_MAX;
const int CS_DelItem::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_DelItem_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[52];
}
bool SC_DelItem_MsgID_IsValid(int value) {
  switch (value) {
    case 2103:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_DelItem_MsgID SC_DelItem::ID;
const SC_DelItem_MsgID SC_DelItem::MsgID_MIN;
const SC_DelItem_MsgID SC_DelItem::MsgID_MAX;
const int SC_DelItem::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_UseItem_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[53];
}
bool CS_UseItem_MsgID_IsValid(int value) {
  switch (value) {
    case 2104:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_UseItem_MsgID CS_UseItem::ID;
const CS_UseItem_MsgID CS_UseItem::MsgID_MIN;
const CS_UseItem_MsgID CS_UseItem::MsgID_MAX;
const int CS_UseItem::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_UseItem_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[54];
}
bool SC_UseItem_MsgID_IsValid(int value) {
  switch (value) {
    case 2105:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_UseItem_MsgID SC_UseItem::ID;
const SC_UseItem_MsgID SC_UseItem::MsgID_MIN;
const SC_UseItem_MsgID SC_UseItem::MsgID_MAX;
const int SC_UseItem::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ChatWorld_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[55];
}
bool CS_ChatWorld_MsgID_IsValid(int value) {
  switch (value) {
    case 2200:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ChatWorld_MsgID CS_ChatWorld::ID;
const CS_ChatWorld_MsgID CS_ChatWorld::MsgID_MIN;
const CS_ChatWorld_MsgID CS_ChatWorld::MsgID_MAX;
const int CS_ChatWorld::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ChatWorld_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[56];
}
bool SC_ChatWorld_MsgID_IsValid(int value) {
  switch (value) {
    case 2201:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ChatWorld_MsgID SC_ChatWorld::ID;
const SC_ChatWorld_MsgID SC_ChatWorld::MsgID_MIN;
const SC_ChatWorld_MsgID SC_ChatWorld::MsgID_MAX;
const int SC_ChatWorld::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ChatPrivate_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[57];
}
bool CS_ChatPrivate_MsgID_IsValid(int value) {
  switch (value) {
    case 2202:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ChatPrivate_MsgID CS_ChatPrivate::ID;
const CS_ChatPrivate_MsgID CS_ChatPrivate::MsgID_MIN;
const CS_ChatPrivate_MsgID CS_ChatPrivate::MsgID_MAX;
const int CS_ChatPrivate::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ChatPrivate_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[58];
}
bool SC_ChatPrivate_MsgID_IsValid(int value) {
  switch (value) {
    case 2203:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ChatPrivate_MsgID SC_ChatPrivate::ID;
const SC_ChatPrivate_MsgID SC_ChatPrivate::MsgID_MIN;
const SC_ChatPrivate_MsgID SC_ChatPrivate::MsgID_MAX;
const int SC_ChatPrivate::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ChatServer_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[59];
}
bool CS_ChatServer_MsgID_IsValid(int value) {
  switch (value) {
    case 2204:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ChatServer_MsgID CS_ChatServer::ID;
const CS_ChatServer_MsgID CS_ChatServer::MsgID_MIN;
const CS_ChatServer_MsgID CS_ChatServer::MsgID_MAX;
const int CS_ChatServer::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ChatServer_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[60];
}
bool SC_ChatServer_MsgID_IsValid(int value) {
  switch (value) {
    case 2205:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ChatServer_MsgID SC_ChatServer::ID;
const SC_ChatServer_MsgID SC_ChatServer::MsgID_MIN;
const SC_ChatServer_MsgID SC_ChatServer::MsgID_MAX;
const int SC_ChatServer::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ChatRoom_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[61];
}
bool CS_ChatRoom_MsgID_IsValid(int value) {
  switch (value) {
    case 2206:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ChatRoom_MsgID CS_ChatRoom::ID;
const CS_ChatRoom_MsgID CS_ChatRoom::MsgID_MIN;
const CS_ChatRoom_MsgID CS_ChatRoom::MsgID_MAX;
const int CS_ChatRoom::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ChatRoom_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[62];
}
bool SC_ChatRoom_MsgID_IsValid(int value) {
  switch (value) {
    case 2207:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ChatRoom_MsgID SC_ChatRoom::ID;
const SC_ChatRoom_MsgID SC_ChatRoom::MsgID_MIN;
const SC_ChatRoom_MsgID SC_ChatRoom::MsgID_MAX;
const int SC_ChatRoom::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ChatTable_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[63];
}
bool CS_ChatTable_MsgID_IsValid(int value) {
  switch (value) {
    case 2208:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ChatTable_MsgID CS_ChatTable::ID;
const CS_ChatTable_MsgID CS_ChatTable::MsgID_MIN;
const CS_ChatTable_MsgID CS_ChatTable::MsgID_MAX;
const int CS_ChatTable::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ChatTable_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[64];
}
bool SC_ChatTable_MsgID_IsValid(int value) {
  switch (value) {
    case 2209:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ChatTable_MsgID SC_ChatTable::ID;
const SC_ChatTable_MsgID SC_ChatTable::MsgID_MIN;
const SC_ChatTable_MsgID SC_ChatTable::MsgID_MAX;
const int SC_ChatTable::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_Marquee_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[65];
}
bool SC_Marquee_MsgID_IsValid(int value) {
  switch (value) {
    case 2210:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_Marquee_MsgID SC_Marquee::ID;
const SC_Marquee_MsgID SC_Marquee::MsgID_MIN;
const SC_Marquee_MsgID SC_Marquee::MsgID_MAX;
const int SC_Marquee::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_QueryPlayerMarquee_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[66];
}
bool CS_QueryPlayerMarquee_MsgID_IsValid(int value) {
  switch (value) {
    case 2211:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_QueryPlayerMarquee_MsgID CS_QueryPlayerMarquee::ID;
const CS_QueryPlayerMarquee_MsgID CS_QueryPlayerMarquee::MsgID_MIN;
const CS_QueryPlayerMarquee_MsgID CS_QueryPlayerMarquee::MsgID_MAX;
const int CS_QueryPlayerMarquee::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_QueryPlayerMarquee_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[67];
}
bool SC_QueryPlayerMarquee_MsgID_IsValid(int value) {
  switch (value) {
    case 2212:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_QueryPlayerMarquee_MsgID SC_QueryPlayerMarquee::ID;
const SC_QueryPlayerMarquee_MsgID SC_QueryPlayerMarquee::MsgID_MIN;
const SC_QueryPlayerMarquee_MsgID SC_QueryPlayerMarquee::MsgID_MAX;
const int SC_QueryPlayerMarquee::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_NewMarquee_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[68];
}
bool SC_NewMarquee_MsgID_IsValid(int value) {
  switch (value) {
    case 2213:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_NewMarquee_MsgID SC_NewMarquee::ID;
const SC_NewMarquee_MsgID SC_NewMarquee::MsgID_MIN;
const SC_NewMarquee_MsgID SC_NewMarquee::MsgID_MAX;
const int SC_NewMarquee::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_SendMail_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[69];
}
bool CS_SendMail_MsgID_IsValid(int value) {
  switch (value) {
    case 2280:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_SendMail_MsgID CS_SendMail::ID;
const CS_SendMail_MsgID CS_SendMail::MsgID_MIN;
const CS_SendMail_MsgID CS_SendMail::MsgID_MAX;
const int CS_SendMail::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_SendMail_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[70];
}
bool SC_SendMail_MsgID_IsValid(int value) {
  switch (value) {
    case 2281:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_SendMail_MsgID SC_SendMail::ID;
const SC_SendMail_MsgID SC_SendMail::MsgID_MIN;
const SC_SendMail_MsgID SC_SendMail::MsgID_MAX;
const int SC_SendMail::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_RecviceMail_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[71];
}
bool SC_RecviceMail_MsgID_IsValid(int value) {
  switch (value) {
    case 2282:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_RecviceMail_MsgID SC_RecviceMail::ID;
const SC_RecviceMail_MsgID SC_RecviceMail::MsgID_MIN;
const SC_RecviceMail_MsgID SC_RecviceMail::MsgID_MAX;
const int SC_RecviceMail::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_DelMail_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[72];
}
bool CS_DelMail_MsgID_IsValid(int value) {
  switch (value) {
    case 2285:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_DelMail_MsgID CS_DelMail::ID;
const CS_DelMail_MsgID CS_DelMail::MsgID_MIN;
const CS_DelMail_MsgID CS_DelMail::MsgID_MAX;
const int CS_DelMail::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_DelMail_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[73];
}
bool SC_DelMail_MsgID_IsValid(int value) {
  switch (value) {
    case 2286:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_DelMail_MsgID SC_DelMail::ID;
const SC_DelMail_MsgID SC_DelMail::MsgID_MIN;
const SC_DelMail_MsgID SC_DelMail::MsgID_MAX;
const int SC_DelMail::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ReceiveMailAttachment_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[74];
}
bool CS_ReceiveMailAttachment_MsgID_IsValid(int value) {
  switch (value) {
    case 2287:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ReceiveMailAttachment_MsgID CS_ReceiveMailAttachment::ID;
const CS_ReceiveMailAttachment_MsgID CS_ReceiveMailAttachment::MsgID_MIN;
const CS_ReceiveMailAttachment_MsgID CS_ReceiveMailAttachment::MsgID_MAX;
const int CS_ReceiveMailAttachment::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ReceiveMailAttachment_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[75];
}
bool SC_ReceiveMailAttachment_MsgID_IsValid(int value) {
  switch (value) {
    case 2288:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ReceiveMailAttachment_MsgID SC_ReceiveMailAttachment::ID;
const SC_ReceiveMailAttachment_MsgID SC_ReceiveMailAttachment::MsgID_MIN;
const SC_ReceiveMailAttachment_MsgID SC_ReceiveMailAttachment::MsgID_MAX;
const int SC_ReceiveMailAttachment::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ReceiveRewardLogin_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[76];
}
bool CS_ReceiveRewardLogin_MsgID_IsValid(int value) {
  switch (value) {
    case 2300:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ReceiveRewardLogin_MsgID CS_ReceiveRewardLogin::ID;
const CS_ReceiveRewardLogin_MsgID CS_ReceiveRewardLogin::MsgID_MIN;
const CS_ReceiveRewardLogin_MsgID CS_ReceiveRewardLogin::MsgID_MAX;
const int CS_ReceiveRewardLogin::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ReceiveRewardLogin_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[77];
}
bool SC_ReceiveRewardLogin_MsgID_IsValid(int value) {
  switch (value) {
    case 2301:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ReceiveRewardLogin_MsgID SC_ReceiveRewardLogin::ID;
const SC_ReceiveRewardLogin_MsgID SC_ReceiveRewardLogin::MsgID_MIN;
const SC_ReceiveRewardLogin_MsgID SC_ReceiveRewardLogin::MsgID_MAX;
const int SC_ReceiveRewardLogin::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ReceiveRewardOnline_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[78];
}
bool CS_ReceiveRewardOnline_MsgID_IsValid(int value) {
  switch (value) {
    case 2302:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ReceiveRewardOnline_MsgID CS_ReceiveRewardOnline::ID;
const CS_ReceiveRewardOnline_MsgID CS_ReceiveRewardOnline::MsgID_MIN;
const CS_ReceiveRewardOnline_MsgID CS_ReceiveRewardOnline::MsgID_MAX;
const int CS_ReceiveRewardOnline::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ReceiveRewardOnline_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[79];
}
bool SC_ReceiveRewardOnline_MsgID_IsValid(int value) {
  switch (value) {
    case 2303:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ReceiveRewardOnline_MsgID SC_ReceiveRewardOnline::ID;
const SC_ReceiveRewardOnline_MsgID SC_ReceiveRewardOnline::MsgID_MIN;
const SC_ReceiveRewardOnline_MsgID SC_ReceiveRewardOnline::MsgID_MAX;
const int SC_ReceiveRewardOnline::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ReceiveReliefPayment_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[80];
}
bool CS_ReceiveReliefPayment_MsgID_IsValid(int value) {
  switch (value) {
    case 2304:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ReceiveReliefPayment_MsgID CS_ReceiveReliefPayment::ID;
const CS_ReceiveReliefPayment_MsgID CS_ReceiveReliefPayment::MsgID_MIN;
const CS_ReceiveReliefPayment_MsgID CS_ReceiveReliefPayment::MsgID_MAX;
const int CS_ReceiveReliefPayment::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ReceiveReliefPayment_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[81];
}
bool SC_ReceiveReliefPayment_MsgID_IsValid(int value) {
  switch (value) {
    case 2305:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ReceiveReliefPayment_MsgID SC_ReceiveReliefPayment::ID;
const SC_ReceiveReliefPayment_MsgID SC_ReceiveReliefPayment::MsgID_MIN;
const SC_ReceiveReliefPayment_MsgID SC_ReceiveReliefPayment::MsgID_MAX;
const int SC_ReceiveReliefPayment::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CE_RequestRank_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[82];
}
bool CE_RequestRank_MsgID_IsValid(int value) {
  switch (value) {
    case 2400:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CE_RequestRank_MsgID CE_RequestRank::ID;
const CE_RequestRank_MsgID CE_RequestRank::MsgID_MIN;
const CE_RequestRank_MsgID CE_RequestRank::MsgID_MAX;
const int CE_RequestRank::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EC_ReplyRank_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[83];
}
bool EC_ReplyRank_MsgID_IsValid(int value) {
  switch (value) {
    case 2401:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EC_ReplyRank_MsgID EC_ReplyRank::ID;
const EC_ReplyRank_MsgID EC_ReplyRank::MsgID_MIN;
const EC_ReplyRank_MsgID EC_ReplyRank::MsgID_MAX;
const int EC_ReplyRank::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_EnterRoom_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[84];
}
bool CS_EnterRoom_MsgID_IsValid(int value) {
  switch (value) {
    case 11000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_EnterRoom_MsgID CS_EnterRoom::ID;
const CS_EnterRoom_MsgID CS_EnterRoom::MsgID_MIN;
const CS_EnterRoom_MsgID CS_EnterRoom::MsgID_MAX;
const int CS_EnterRoom::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_EnterRoom_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[85];
}
bool SC_EnterRoom_MsgID_IsValid(int value) {
  switch (value) {
    case 11001:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_EnterRoom_MsgID SC_EnterRoom::ID;
const SC_EnterRoom_MsgID SC_EnterRoom::MsgID_MIN;
const SC_EnterRoom_MsgID SC_EnterRoom::MsgID_MAX;
const int SC_EnterRoom::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_NotifyEnterRoom_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[86];
}
bool SC_NotifyEnterRoom_MsgID_IsValid(int value) {
  switch (value) {
    case 11002:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_NotifyEnterRoom_MsgID SC_NotifyEnterRoom::ID;
const SC_NotifyEnterRoom_MsgID SC_NotifyEnterRoom::MsgID_MIN;
const SC_NotifyEnterRoom_MsgID SC_NotifyEnterRoom::MsgID_MAX;
const int SC_NotifyEnterRoom::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ExitRoom_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[87];
}
bool CS_ExitRoom_MsgID_IsValid(int value) {
  switch (value) {
    case 11003:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ExitRoom_MsgID CS_ExitRoom::ID;
const CS_ExitRoom_MsgID CS_ExitRoom::MsgID_MIN;
const CS_ExitRoom_MsgID CS_ExitRoom::MsgID_MAX;
const int CS_ExitRoom::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ExitRoom_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[88];
}
bool SC_ExitRoom_MsgID_IsValid(int value) {
  switch (value) {
    case 11004:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ExitRoom_MsgID SC_ExitRoom::ID;
const SC_ExitRoom_MsgID SC_ExitRoom::MsgID_MIN;
const SC_ExitRoom_MsgID SC_ExitRoom::MsgID_MAX;
const int SC_ExitRoom::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_NotifyExitRoom_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[89];
}
bool SC_NotifyExitRoom_MsgID_IsValid(int value) {
  switch (value) {
    case 11005:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_NotifyExitRoom_MsgID SC_NotifyExitRoom::ID;
const SC_NotifyExitRoom_MsgID SC_NotifyExitRoom::MsgID_MIN;
const SC_NotifyExitRoom_MsgID SC_NotifyExitRoom::MsgID_MAX;
const int SC_NotifyExitRoom::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_AutoEnterRoom_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[90];
}
bool CS_AutoEnterRoom_MsgID_IsValid(int value) {
  switch (value) {
    case 11006:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_AutoEnterRoom_MsgID CS_AutoEnterRoom::ID;
const CS_AutoEnterRoom_MsgID CS_AutoEnterRoom::MsgID_MIN;
const CS_AutoEnterRoom_MsgID CS_AutoEnterRoom::MsgID_MAX;
const int CS_AutoEnterRoom::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_AutoSitDown_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[91];
}
bool CS_AutoSitDown_MsgID_IsValid(int value) {
  switch (value) {
    case 11010:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_AutoSitDown_MsgID CS_AutoSitDown::ID;
const CS_AutoSitDown_MsgID CS_AutoSitDown::MsgID_MIN;
const CS_AutoSitDown_MsgID CS_AutoSitDown::MsgID_MAX;
const int CS_AutoSitDown::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_SitDown_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[92];
}
bool CS_SitDown_MsgID_IsValid(int value) {
  switch (value) {
    case 11011:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_SitDown_MsgID CS_SitDown::ID;
const CS_SitDown_MsgID CS_SitDown::MsgID_MIN;
const CS_SitDown_MsgID CS_SitDown::MsgID_MAX;
const int CS_SitDown::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_SitDown_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[93];
}
bool SC_SitDown_MsgID_IsValid(int value) {
  switch (value) {
    case 11012:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_SitDown_MsgID SC_SitDown::ID;
const SC_SitDown_MsgID SC_SitDown::MsgID_MIN;
const SC_SitDown_MsgID SC_SitDown::MsgID_MAX;
const int SC_SitDown::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_NotifySitDown_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[94];
}
bool SC_NotifySitDown_MsgID_IsValid(int value) {
  switch (value) {
    case 11013:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_NotifySitDown_MsgID SC_NotifySitDown::ID;
const SC_NotifySitDown_MsgID SC_NotifySitDown::MsgID_MIN;
const SC_NotifySitDown_MsgID SC_NotifySitDown::MsgID_MAX;
const int SC_NotifySitDown::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_StandUp_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[95];
}
bool CS_StandUp_MsgID_IsValid(int value) {
  switch (value) {
    case 11020:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_StandUp_MsgID CS_StandUp::ID;
const CS_StandUp_MsgID CS_StandUp::MsgID_MIN;
const CS_StandUp_MsgID CS_StandUp::MsgID_MAX;
const int CS_StandUp::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_StandUp_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[96];
}
bool SC_StandUp_MsgID_IsValid(int value) {
  switch (value) {
    case 11021:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_StandUp_MsgID SC_StandUp::ID;
const SC_StandUp_MsgID SC_StandUp::MsgID_MIN;
const SC_StandUp_MsgID SC_StandUp::MsgID_MAX;
const int SC_StandUp::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_NotifyStandUp_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[97];
}
bool SC_NotifyStandUp_MsgID_IsValid(int value) {
  switch (value) {
    case 11022:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_NotifyStandUp_MsgID SC_NotifyStandUp::ID;
const SC_NotifyStandUp_MsgID SC_NotifyStandUp::MsgID_MIN;
const SC_NotifyStandUp_MsgID SC_NotifyStandUp::MsgID_MAX;
const int SC_NotifyStandUp::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_EnterRoomAndSitDown_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[98];
}
bool CS_EnterRoomAndSitDown_MsgID_IsValid(int value) {
  switch (value) {
    case 11030:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_EnterRoomAndSitDown_MsgID CS_EnterRoomAndSitDown::ID;
const CS_EnterRoomAndSitDown_MsgID CS_EnterRoomAndSitDown::MsgID_MIN;
const CS_EnterRoomAndSitDown_MsgID CS_EnterRoomAndSitDown::MsgID_MAX;
const int CS_EnterRoomAndSitDown::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_EnterRoomAndSitDown_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[99];
}
bool SC_EnterRoomAndSitDown_MsgID_IsValid(int value) {
  switch (value) {
    case 11031:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_EnterRoomAndSitDown_MsgID SC_EnterRoomAndSitDown::ID;
const SC_EnterRoomAndSitDown_MsgID SC_EnterRoomAndSitDown::MsgID_MIN;
const SC_EnterRoomAndSitDown_MsgID SC_EnterRoomAndSitDown::MsgID_MAX;
const int SC_EnterRoomAndSitDown::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_StandUpAndExitRoom_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[100];
}
bool CS_StandUpAndExitRoom_MsgID_IsValid(int value) {
  switch (value) {
    case 11032:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_StandUpAndExitRoom_MsgID CS_StandUpAndExitRoom::ID;
const CS_StandUpAndExitRoom_MsgID CS_StandUpAndExitRoom::MsgID_MIN;
const CS_StandUpAndExitRoom_MsgID CS_StandUpAndExitRoom::MsgID_MAX;
const int CS_StandUpAndExitRoom::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_StandUpAndExitRoom_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[101];
}
bool SC_StandUpAndExitRoom_MsgID_IsValid(int value) {
  switch (value) {
    case 11033:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_StandUpAndExitRoom_MsgID SC_StandUpAndExitRoom::ID;
const SC_StandUpAndExitRoom_MsgID SC_StandUpAndExitRoom::MsgID_MIN;
const SC_StandUpAndExitRoom_MsgID SC_StandUpAndExitRoom::MsgID_MAX;
const int SC_StandUpAndExitRoom::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ChangeChair_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[102];
}
bool CS_ChangeChair_MsgID_IsValid(int value) {
  switch (value) {
    case 11034:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ChangeChair_MsgID CS_ChangeChair::ID;
const CS_ChangeChair_MsgID CS_ChangeChair::MsgID_MIN;
const CS_ChangeChair_MsgID CS_ChangeChair::MsgID_MAX;
const int CS_ChangeChair::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ChangeChair_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[103];
}
bool SC_ChangeChair_MsgID_IsValid(int value) {
  switch (value) {
    case 11035:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ChangeChair_MsgID SC_ChangeChair::ID;
const SC_ChangeChair_MsgID SC_ChangeChair::MsgID_MIN;
const SC_ChangeChair_MsgID SC_ChangeChair::MsgID_MAX;
const int SC_ChangeChair::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ChangeTable_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[104];
}
bool CS_ChangeTable_MsgID_IsValid(int value) {
  switch (value) {
    case 11036:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ChangeTable_MsgID CS_ChangeTable::ID;
const CS_ChangeTable_MsgID CS_ChangeTable::MsgID_MIN;
const CS_ChangeTable_MsgID CS_ChangeTable::MsgID_MAX;
const int CS_ChangeTable::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_Ready_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[105];
}
bool CS_Ready_MsgID_IsValid(int value) {
  switch (value) {
    case 11050:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_Ready_MsgID CS_Ready::ID;
const CS_Ready_MsgID CS_Ready::MsgID_MIN;
const CS_Ready_MsgID CS_Ready::MsgID_MAX;
const int CS_Ready::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_Ready_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[106];
}
bool SC_Ready_MsgID_IsValid(int value) {
  switch (value) {
    case 11051:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_Ready_MsgID SC_Ready::ID;
const SC_Ready_MsgID SC_Ready::MsgID_MIN;
const SC_Ready_MsgID SC_Ready::MsgID_MAX;
const int SC_Ready::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_Exit_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[107];
}
bool CS_Exit_MsgID_IsValid(int value) {
  switch (value) {
    case 11052:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_Exit_MsgID CS_Exit::ID;
const CS_Exit_MsgID CS_Exit::MsgID_MIN;
const CS_Exit_MsgID CS_Exit::MsgID_MAX;
const int CS_Exit::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ReadyFailed_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[108];
}
bool SC_ReadyFailed_MsgID_IsValid(int value) {
  switch (value) {
    case 11053:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ReadyFailed_MsgID SC_ReadyFailed::ID;
const SC_ReadyFailed_MsgID SC_ReadyFailed::MsgID_MIN;
const SC_ReadyFailed_MsgID SC_ReadyFailed::MsgID_MAX;
const int SC_ReadyFailed::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_Gamefinish_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[109];
}
bool SC_Gamefinish_MsgID_IsValid(int value) {
  switch (value) {
    case 11054:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_Gamefinish_MsgID SC_Gamefinish::ID;
const SC_Gamefinish_MsgID SC_Gamefinish::MsgID_MIN;
const SC_Gamefinish_MsgID SC_Gamefinish::MsgID_MAX;
const int SC_Gamefinish::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_PlayerReconnection_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[110];
}
bool SC_PlayerReconnection_MsgID_IsValid(int value) {
  switch (value) {
    case 11055:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_PlayerReconnection_MsgID SC_PlayerReconnection::ID;
const SC_PlayerReconnection_MsgID SC_PlayerReconnection::MsgID_MIN;
const SC_PlayerReconnection_MsgID SC_PlayerReconnection::MsgID_MAX;
const int SC_PlayerReconnection::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ChangeTable_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[111];
}
bool SC_ChangeTable_MsgID_IsValid(int value) {
  switch (value) {
    case 11056:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ChangeTable_MsgID SC_ChangeTable::ID;
const SC_ChangeTable_MsgID SC_ChangeTable::MsgID_MIN;
const SC_ChangeTable_MsgID SC_ChangeTable::MsgID_MAX;
const int SC_ChangeTable::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_HEARTBEAT_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[112];
}
bool SC_HEARTBEAT_MsgID_IsValid(int value) {
  switch (value) {
    case 11057:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_HEARTBEAT_MsgID SC_HEARTBEAT::ID;
const SC_HEARTBEAT_MsgID SC_HEARTBEAT::MsgID_MIN;
const SC_HEARTBEAT_MsgID SC_HEARTBEAT::MsgID_MAX;
const int SC_HEARTBEAT::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_HEARTBEAT_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[113];
}
bool CS_HEARTBEAT_MsgID_IsValid(int value) {
  switch (value) {
    case 11058:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_HEARTBEAT_MsgID CS_HEARTBEAT::ID;
const CS_HEARTBEAT_MsgID CS_HEARTBEAT::MsgID_MIN;
const CS_HEARTBEAT_MsgID CS_HEARTBEAT::MsgID_MAX;
const int CS_HEARTBEAT::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ReconnectionPlay_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[114];
}
bool CS_ReconnectionPlay_MsgID_IsValid(int value) {
  switch (value) {
    case 11059:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ReconnectionPlay_MsgID CS_ReconnectionPlay::ID;
const CS_ReconnectionPlay_MsgID CS_ReconnectionPlay::MsgID_MIN;
const CS_ReconnectionPlay_MsgID CS_ReconnectionPlay::MsgID_MAX;
const int CS_ReconnectionPlay::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ReconnectionPlay_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[115];
}
bool SC_ReconnectionPlay_MsgID_IsValid(int value) {
  switch (value) {
    case 11067:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ReconnectionPlay_MsgID SC_ReconnectionPlay::ID;
const SC_ReconnectionPlay_MsgID SC_ReconnectionPlay::MsgID_MIN;
const SC_ReconnectionPlay_MsgID SC_ReconnectionPlay::MsgID_MAX;
const int SC_ReconnectionPlay::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_SimpleRespons_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[116];
}
bool SC_SimpleRespons_MsgID_IsValid(int value) {
  switch (value) {
    case 11060:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_SimpleRespons_MsgID SC_SimpleRespons::ID;
const SC_SimpleRespons_MsgID SC_SimpleRespons::MsgID_MIN;
const SC_SimpleRespons_MsgID SC_SimpleRespons::MsgID_MAX;
const int SC_SimpleRespons::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_QueryPlayerMsgData_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[117];
}
bool CS_QueryPlayerMsgData_MsgID_IsValid(int value) {
  switch (value) {
    case 11061:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_QueryPlayerMsgData_MsgID CS_QueryPlayerMsgData::ID;
const CS_QueryPlayerMsgData_MsgID CS_QueryPlayerMsgData::MsgID_MIN;
const CS_QueryPlayerMsgData_MsgID CS_QueryPlayerMsgData::MsgID_MAX;
const int CS_QueryPlayerMsgData::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_QueryPlayerMsgData_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[118];
}
bool SC_QueryPlayerMsgData_MsgID_IsValid(int value) {
  switch (value) {
    case 11062:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_QueryPlayerMsgData_MsgID SC_QueryPlayerMsgData::ID;
const SC_QueryPlayerMsgData_MsgID SC_QueryPlayerMsgData::MsgID_MIN;
const SC_QueryPlayerMsgData_MsgID SC_QueryPlayerMsgData::MsgID_MAX;
const int SC_QueryPlayerMsgData::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_NewMsgData_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[119];
}
bool SC_NewMsgData_MsgID_IsValid(int value) {
  switch (value) {
    case 11063:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_NewMsgData_MsgID SC_NewMsgData::ID;
const SC_NewMsgData_MsgID SC_NewMsgData::MsgID_MIN;
const SC_NewMsgData_MsgID SC_NewMsgData::MsgID_MAX;
const int SC_NewMsgData::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_SetMsgReadFlag_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[120];
}
bool CS_SetMsgReadFlag_MsgID_IsValid(int value) {
  switch (value) {
    case 11064:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_SetMsgReadFlag_MsgID CS_SetMsgReadFlag::ID;
const CS_SetMsgReadFlag_MsgID CS_SetMsgReadFlag::MsgID_MIN;
const CS_SetMsgReadFlag_MsgID CS_SetMsgReadFlag::MsgID_MAX;
const int CS_SetMsgReadFlag::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_FeedBackUpDate_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[121];
}
bool SC_FeedBackUpDate_MsgID_IsValid(int value) {
  switch (value) {
    case 11065:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_FeedBackUpDate_MsgID SC_FeedBackUpDate::ID;
const SC_FeedBackUpDate_MsgID SC_FeedBackUpDate::MsgID_MIN;
const SC_FeedBackUpDate_MsgID SC_FeedBackUpDate::MsgID_MAX;
const int SC_FeedBackUpDate::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_DeletMsg_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[122];
}
bool SC_DeletMsg_MsgID_IsValid(int value) {
  switch (value) {
    case 11066:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_DeletMsg_MsgID SC_DeletMsg::ID;
const SC_DeletMsg_MsgID SC_DeletMsg::MsgID_MIN;
const SC_DeletMsg_MsgID SC_DeletMsg::MsgID_MAX;
const int SC_DeletMsg::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_CashMoney_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[123];
}
bool CS_CashMoney_MsgID_IsValid(int value) {
  switch (value) {
    case 11070:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_CashMoney_MsgID CS_CashMoney::ID;
const CS_CashMoney_MsgID CS_CashMoney::MsgID_MIN;
const CS_CashMoney_MsgID CS_CashMoney::MsgID_MAX;
const int CS_CashMoney::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_CashMoneyResult_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[124];
}
bool SC_CashMoneyResult_MsgID_IsValid(int value) {
  switch (value) {
    case 11071:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_CashMoneyResult_MsgID SC_CashMoneyResult::ID;
const SC_CashMoneyResult_MsgID SC_CashMoneyResult::MsgID_MIN;
const SC_CashMoneyResult_MsgID SC_CashMoneyResult::MsgID_MAX;
const int SC_CashMoneyResult::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_CashMoneyType_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[125];
}
bool CS_CashMoneyType_MsgID_IsValid(int value) {
  switch (value) {
    case 11072:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_CashMoneyType_MsgID CS_CashMoneyType::ID;
const CS_CashMoneyType_MsgID CS_CashMoneyType::MsgID_MIN;
const CS_CashMoneyType_MsgID CS_CashMoneyType::MsgID_MAX;
const int CS_CashMoneyType::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_CashMoneyType_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[126];
}
bool SC_CashMoneyType_MsgID_IsValid(int value) {
  switch (value) {
    case 11073:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_CashMoneyType_MsgID SC_CashMoneyType::ID;
const SC_CashMoneyType_MsgID SC_CashMoneyType::MsgID_MIN;
const SC_CashMoneyType_MsgID SC_CashMoneyType::MsgID_MAX;
const int SC_CashMoneyType::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_NotifyBank_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[127];
}
bool SC_NotifyBank_MsgID_IsValid(int value) {
  switch (value) {
    case 11074:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_NotifyBank_MsgID SC_NotifyBank::ID;
const SC_NotifyBank_MsgID SC_NotifyBank::MsgID_MIN;
const SC_NotifyBank_MsgID SC_NotifyBank::MsgID_MAX;
const int SC_NotifyBank::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_BandAlipay_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[128];
}
bool CS_BandAlipay_MsgID_IsValid(int value) {
  switch (value) {
    case 11077:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_BandAlipay_MsgID CS_BandAlipay::ID;
const CS_BandAlipay_MsgID CS_BandAlipay::MsgID_MIN;
const CS_BandAlipay_MsgID CS_BandAlipay::MsgID_MAX;
const int CS_BandAlipay::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_BandAlipay_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[129];
}
bool SC_BandAlipay_MsgID_IsValid(int value) {
  switch (value) {
    case 11078:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_BandAlipay_MsgID SC_BandAlipay::ID;
const SC_BandAlipay_MsgID SC_BandAlipay::MsgID_MIN;
const SC_BandAlipay_MsgID SC_BandAlipay::MsgID_MAX;
const int SC_BandAlipay::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_Trusteeship_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[130];
}
bool CS_Trusteeship_MsgID_IsValid(int value) {
  switch (value) {
    case 11079:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_Trusteeship_MsgID CS_Trusteeship::ID;
const CS_Trusteeship_MsgID CS_Trusteeship::MsgID_MIN;
const CS_Trusteeship_MsgID CS_Trusteeship::MsgID_MAX;
const int CS_Trusteeship::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ShowTax_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[131];
}
bool SC_ShowTax_MsgID_IsValid(int value) {
  switch (value) {
    case 11080:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ShowTax_MsgID SC_ShowTax::ID;
const SC_ShowTax_MsgID SC_ShowTax::MsgID_MIN;
const SC_ShowTax_MsgID SC_ShowTax::MsgID_MAX;
const int SC_ShowTax::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SD_Delonline_player_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[132];
}
bool SD_Delonline_player_MsgID_IsValid(int value) {
  switch (value) {
    case 11081:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SD_Delonline_player_MsgID SD_Delonline_player::ID;
const SD_Delonline_player_MsgID SD_Delonline_player::MsgID_MIN;
const SD_Delonline_player_MsgID SD_Delonline_player::MsgID_MAX;
const int SD_Delonline_player::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_AlipayEdit_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[133];
}
bool SC_AlipayEdit_MsgID_IsValid(int value) {
  switch (value) {
    case 11082:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_AlipayEdit_MsgID SC_AlipayEdit::ID;
const SC_AlipayEdit_MsgID SC_AlipayEdit::MsgID_MIN;
const SC_AlipayEdit_MsgID SC_AlipayEdit::MsgID_MAX;
const int SC_AlipayEdit::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_BrocastClientUpdateInfo_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[134];
}
bool SC_BrocastClientUpdateInfo_MsgID_IsValid(int value) {
  switch (value) {
    case 11083:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_BrocastClientUpdateInfo_MsgID SC_BrocastClientUpdateInfo::ID;
const SC_BrocastClientUpdateInfo_MsgID SC_BrocastClientUpdateInfo::MsgID_MIN;
const SC_BrocastClientUpdateInfo_MsgID SC_BrocastClientUpdateInfo::MsgID_MAX;
const int SC_BrocastClientUpdateInfo::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_FreezeAccount_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[135];
}
bool SC_FreezeAccount_MsgID_IsValid(int value) {
  switch (value) {
    case 11084:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_FreezeAccount_MsgID SC_FreezeAccount::ID;
const SC_FreezeAccount_MsgID SC_FreezeAccount::MsgID_MIN;
const SC_FreezeAccount_MsgID SC_FreezeAccount::MsgID_MAX;
const int SC_FreezeAccount::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_GameMaintain_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[136];
}
bool SC_GameMaintain_MsgID_IsValid(int value) {
  switch (value) {
    case 11085:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_GameMaintain_MsgID SC_GameMaintain::ID;
const SC_GameMaintain_MsgID SC_GameMaintain::MsgID_MIN;
const SC_GameMaintain_MsgID SC_GameMaintain::MsgID_MAX;
const int SC_GameMaintain::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_CashMaintain_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[137];
}
bool SC_CashMaintain_MsgID_IsValid(int value) {
  switch (value) {
    case 11086:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_CashMaintain_MsgID SC_CashMaintain::ID;
const SC_CashMaintain_MsgID SC_CashMaintain::MsgID_MIN;
const SC_CashMaintain_MsgID SC_CashMaintain::MsgID_MAX;
const int SC_CashMaintain::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_GetHelpMoney_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[138];
}
bool CS_GetHelpMoney_MsgID_IsValid(int value) {
  switch (value) {
    case 11087:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_GetHelpMoney_MsgID CS_GetHelpMoney::ID;
const CS_GetHelpMoney_MsgID CS_GetHelpMoney::MsgID_MIN;
const CS_GetHelpMoney_MsgID CS_GetHelpMoney::MsgID_MAX;
const int CS_GetHelpMoney::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_GetHelpMoney_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[139];
}
bool SC_GetHelpMoney_MsgID_IsValid(int value) {
  switch (value) {
    case 11088:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_GetHelpMoney_MsgID SC_GetHelpMoney::ID;
const SC_GetHelpMoney_MsgID SC_GetHelpMoney::MsgID_MIN;
const SC_GetHelpMoney_MsgID SC_GetHelpMoney::MsgID_MAX;
const int SC_GetHelpMoney::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_Agent_CashMoney_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[140];
}
bool CS_Agent_CashMoney_MsgID_IsValid(int value) {
  switch (value) {
    case 11089:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_Agent_CashMoney_MsgID CS_Agent_CashMoney::ID;
const CS_Agent_CashMoney_MsgID CS_Agent_CashMoney::MsgID_MIN;
const CS_Agent_CashMoney_MsgID CS_Agent_CashMoney::MsgID_MAX;
const int CS_Agent_CashMoney::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_Agent_CashMoneyResult_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[141];
}
bool SC_Agent_CashMoneyResult_MsgID_IsValid(int value) {
  switch (value) {
    case 11090:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_Agent_CashMoneyResult_MsgID SC_Agent_CashMoneyResult::ID;
const SC_Agent_CashMoneyResult_MsgID SC_Agent_CashMoneyResult::MsgID_MIN;
const SC_Agent_CashMoneyResult_MsgID SC_Agent_CashMoneyResult::MsgID_MAX;
const int SC_Agent_CashMoneyResult::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_RequestNewAward_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[142];
}
bool CS_RequestNewAward_MsgID_IsValid(int value) {
  switch (value) {
    case 11091:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_RequestNewAward_MsgID CS_RequestNewAward::ID;
const CS_RequestNewAward_MsgID CS_RequestNewAward::MsgID_MIN;
const CS_RequestNewAward_MsgID CS_RequestNewAward::MsgID_MAX;
const int CS_RequestNewAward::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_RequestNewAward_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[143];
}
bool SC_RequestNewAward_MsgID_IsValid(int value) {
  switch (value) {
    case 11092:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_RequestNewAward_MsgID SC_RequestNewAward::ID;
const SC_RequestNewAward_MsgID SC_RequestNewAward::MsgID_MIN;
const SC_RequestNewAward_MsgID SC_RequestNewAward::MsgID_MAX;
const int SC_RequestNewAward::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_RequestCheckInAward_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[144];
}
bool CS_RequestCheckInAward_MsgID_IsValid(int value) {
  switch (value) {
    case 11093:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_RequestCheckInAward_MsgID CS_RequestCheckInAward::ID;
const CS_RequestCheckInAward_MsgID CS_RequestCheckInAward::MsgID_MIN;
const CS_RequestCheckInAward_MsgID CS_RequestCheckInAward::MsgID_MAX;
const int CS_RequestCheckInAward::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_RequestCheckInAward_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[145];
}
bool SC_RequestCheckInAward_MsgID_IsValid(int value) {
  switch (value) {
    case 11094:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_RequestCheckInAward_MsgID SC_RequestCheckInAward::ID;
const SC_RequestCheckInAward_MsgID SC_RequestCheckInAward::MsgID_MIN;
const SC_RequestCheckInAward_MsgID SC_RequestCheckInAward::MsgID_MAX;
const int SC_RequestCheckInAward::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_BindBankCard_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[146];
}
bool CS_BindBankCard_MsgID_IsValid(int value) {
  switch (value) {
    case 11095:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_BindBankCard_MsgID CS_BindBankCard::ID;
const CS_BindBankCard_MsgID CS_BindBankCard::MsgID_MIN;
const CS_BindBankCard_MsgID CS_BindBankCard::MsgID_MAX;
const int CS_BindBankCard::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_BindBankCard_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[147];
}
bool SC_BindBankCard_MsgID_IsValid(int value) {
  switch (value) {
    case 11096:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_BindBankCard_MsgID SC_BindBankCard::ID;
const SC_BindBankCard_MsgID SC_BindBankCard::MsgID_MIN;
const SC_BindBankCard_MsgID SC_BindBankCard::MsgID_MAX;
const int SC_BindBankCard::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_GetBankCardInfo_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[148];
}
bool CS_GetBankCardInfo_MsgID_IsValid(int value) {
  switch (value) {
    case 11097:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_GetBankCardInfo_MsgID CS_GetBankCardInfo::ID;
const CS_GetBankCardInfo_MsgID CS_GetBankCardInfo::MsgID_MIN;
const CS_GetBankCardInfo_MsgID CS_GetBankCardInfo::MsgID_MAX;
const int CS_GetBankCardInfo::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_GetBankCardInfo_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[149];
}
bool SC_GetBankCardInfo_MsgID_IsValid(int value) {
  switch (value) {
    case 11098:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_GetBankCardInfo_MsgID SC_GetBankCardInfo::ID;
const SC_GetBankCardInfo_MsgID SC_GetBankCardInfo::MsgID_MIN;
const SC_GetBankCardInfo_MsgID SC_GetBankCardInfo::MsgID_MAX;
const int SC_GetBankCardInfo::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_NewGameMaintain_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[150];
}
bool CS_NewGameMaintain_MsgID_IsValid(int value) {
  switch (value) {
    case 11099:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_NewGameMaintain_MsgID CS_NewGameMaintain::ID;
const CS_NewGameMaintain_MsgID CS_NewGameMaintain::MsgID_MIN;
const CS_NewGameMaintain_MsgID CS_NewGameMaintain::MsgID_MAX;
const int CS_NewGameMaintain::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_NewGameMaintain_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[151];
}
bool SC_NewGameMaintain_MsgID_IsValid(int value) {
  switch (value) {
    case 11100:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_NewGameMaintain_MsgID SC_NewGameMaintain::ID;
const SC_NewGameMaintain_MsgID SC_NewGameMaintain::MsgID_MIN;
const SC_NewGameMaintain_MsgID SC_NewGameMaintain::MsgID_MAX;
const int SC_NewGameMaintain::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_PlayerPromotion_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[152];
}
bool CS_PlayerPromotion_MsgID_IsValid(int value) {
  switch (value) {
    case 11101:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_PlayerPromotion_MsgID CS_PlayerPromotion::ID;
const CS_PlayerPromotion_MsgID CS_PlayerPromotion::MsgID_MIN;
const CS_PlayerPromotion_MsgID CS_PlayerPromotion::MsgID_MAX;
const int CS_PlayerPromotion::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_PlayerPromotion_MsgID_descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_enum_descriptors[153];
}
bool SC_PlayerPromotion_MsgID_IsValid(int value) {
  switch (value) {
    case 11102:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_PlayerPromotion_MsgID SC_PlayerPromotion::ID;
const SC_PlayerPromotion_MsgID SC_PlayerPromotion::MsgID_MIN;
const SC_PlayerPromotion_MsgID SC_PlayerPromotion::MsgID_MAX;
const int SC_PlayerPromotion::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_RequestPublicKey::kChannelIdFieldNumber;
const int C_RequestPublicKey::kVersionFieldNumber;
const int C_RequestPublicKey::kReIpFieldNumber;
const int C_RequestPublicKey::kAndroidUidFieldNumber;
const int C_RequestPublicKey::kAndroidPidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_RequestPublicKey::C_RequestPublicKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:C_RequestPublicKey)
}
C_RequestPublicKey::C_RequestPublicKey(const C_RequestPublicKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel_id()) {
    channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  re_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_re_ip()) {
    re_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.re_ip_);
  }
  ::memcpy(&android_uid_, &from.android_uid_,
    reinterpret_cast<char*>(&android_pid_) -
    reinterpret_cast<char*>(&android_uid_) + sizeof(android_pid_));
  // @@protoc_insertion_point(copy_constructor:C_RequestPublicKey)
}

void C_RequestPublicKey::SharedCtor() {
  _cached_size_ = 0;
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  re_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&android_uid_, 0, reinterpret_cast<char*>(&android_pid_) -
    reinterpret_cast<char*>(&android_uid_) + sizeof(android_pid_));
}

C_RequestPublicKey::~C_RequestPublicKey() {
  // @@protoc_insertion_point(destructor:C_RequestPublicKey)
  SharedDtor();
}

void C_RequestPublicKey::SharedDtor() {
  channel_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  re_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void C_RequestPublicKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_RequestPublicKey::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_RequestPublicKey& C_RequestPublicKey::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

C_RequestPublicKey* C_RequestPublicKey::New(::google::protobuf::Arena* arena) const {
  C_RequestPublicKey* n = new C_RequestPublicKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_RequestPublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:C_RequestPublicKey)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_channel_id()) {
      GOOGLE_DCHECK(!channel_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*channel_id_.UnsafeRawStringPointer())->clear();
    }
    if (has_version()) {
      GOOGLE_DCHECK(!version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*version_.UnsafeRawStringPointer())->clear();
    }
    if (has_re_ip()) {
      GOOGLE_DCHECK(!re_ip_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*re_ip_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&android_uid_, 0, reinterpret_cast<char*>(&android_pid_) -
      reinterpret_cast<char*>(&android_uid_) + sizeof(android_pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool C_RequestPublicKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:C_RequestPublicKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel_id().data(), this->channel_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "C_RequestPublicKey.channel_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "C_RequestPublicKey.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string re_ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_re_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->re_ip().data(), this->re_ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "C_RequestPublicKey.re_ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 android_uid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_android_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &android_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 android_pid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_android_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &android_pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:C_RequestPublicKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:C_RequestPublicKey)
  return false;
#undef DO_
}

void C_RequestPublicKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:C_RequestPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string channel_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_id().data(), this->channel_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "C_RequestPublicKey.channel_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->channel_id(), output);
  }

  // optional string version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "C_RequestPublicKey.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // optional string re_ip = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->re_ip().data(), this->re_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "C_RequestPublicKey.re_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->re_ip(), output);
  }

  // optional int32 android_uid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->android_uid(), output);
  }

  // optional int32 android_pid = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->android_pid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:C_RequestPublicKey)
}

::google::protobuf::uint8* C_RequestPublicKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:C_RequestPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string channel_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_id().data(), this->channel_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "C_RequestPublicKey.channel_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->channel_id(), target);
  }

  // optional string version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "C_RequestPublicKey.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // optional string re_ip = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->re_ip().data(), this->re_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "C_RequestPublicKey.re_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->re_ip(), target);
  }

  // optional int32 android_uid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->android_uid(), target);
  }

  // optional int32 android_pid = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->android_pid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:C_RequestPublicKey)
  return target;
}

size_t C_RequestPublicKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:C_RequestPublicKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string channel_id = 1;
    if (has_channel_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel_id());
    }

    // optional string version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional string re_ip = 3;
    if (has_re_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->re_ip());
    }

    // optional int32 android_uid = 4;
    if (has_android_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->android_uid());
    }

    // optional int32 android_pid = 5;
    if (has_android_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->android_pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_RequestPublicKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:C_RequestPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  const C_RequestPublicKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_RequestPublicKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:C_RequestPublicKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:C_RequestPublicKey)
    MergeFrom(*source);
  }
}

void C_RequestPublicKey::MergeFrom(const C_RequestPublicKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:C_RequestPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_channel_id();
      channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_re_ip();
      re_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.re_ip_);
    }
    if (cached_has_bits & 0x00000008u) {
      android_uid_ = from.android_uid_;
    }
    if (cached_has_bits & 0x00000010u) {
      android_pid_ = from.android_pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void C_RequestPublicKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:C_RequestPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_RequestPublicKey::CopyFrom(const C_RequestPublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:C_RequestPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_RequestPublicKey::IsInitialized() const {
  return true;
}

void C_RequestPublicKey::Swap(C_RequestPublicKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_RequestPublicKey::InternalSwap(C_RequestPublicKey* other) {
  channel_id_.Swap(&other->channel_id_);
  version_.Swap(&other->version_);
  re_ip_.Swap(&other->re_ip_);
  std::swap(android_uid_, other->android_uid_);
  std::swap(android_pid_, other->android_pid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_RequestPublicKey::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C_RequestPublicKey

// optional string channel_id = 1;
bool C_RequestPublicKey::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void C_RequestPublicKey::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
void C_RequestPublicKey::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void C_RequestPublicKey::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
const ::std::string& C_RequestPublicKey::channel_id() const {
  // @@protoc_insertion_point(field_get:C_RequestPublicKey.channel_id)
  return channel_id_.GetNoArena();
}
void C_RequestPublicKey::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:C_RequestPublicKey.channel_id)
}
#if LANG_CXX11
void C_RequestPublicKey::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_RequestPublicKey.channel_id)
}
#endif
void C_RequestPublicKey::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_RequestPublicKey.channel_id)
}
void C_RequestPublicKey::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_RequestPublicKey.channel_id)
}
::std::string* C_RequestPublicKey::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:C_RequestPublicKey.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C_RequestPublicKey::release_channel_id() {
  // @@protoc_insertion_point(field_release:C_RequestPublicKey.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C_RequestPublicKey::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:C_RequestPublicKey.channel_id)
}

// optional string version = 2;
bool C_RequestPublicKey::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void C_RequestPublicKey::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void C_RequestPublicKey::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void C_RequestPublicKey::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
const ::std::string& C_RequestPublicKey::version() const {
  // @@protoc_insertion_point(field_get:C_RequestPublicKey.version)
  return version_.GetNoArena();
}
void C_RequestPublicKey::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:C_RequestPublicKey.version)
}
#if LANG_CXX11
void C_RequestPublicKey::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_RequestPublicKey.version)
}
#endif
void C_RequestPublicKey::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_RequestPublicKey.version)
}
void C_RequestPublicKey::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_RequestPublicKey.version)
}
::std::string* C_RequestPublicKey::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:C_RequestPublicKey.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C_RequestPublicKey::release_version() {
  // @@protoc_insertion_point(field_release:C_RequestPublicKey.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C_RequestPublicKey::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:C_RequestPublicKey.version)
}

// optional string re_ip = 3;
bool C_RequestPublicKey::has_re_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void C_RequestPublicKey::set_has_re_ip() {
  _has_bits_[0] |= 0x00000004u;
}
void C_RequestPublicKey::clear_has_re_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
void C_RequestPublicKey::clear_re_ip() {
  re_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_re_ip();
}
const ::std::string& C_RequestPublicKey::re_ip() const {
  // @@protoc_insertion_point(field_get:C_RequestPublicKey.re_ip)
  return re_ip_.GetNoArena();
}
void C_RequestPublicKey::set_re_ip(const ::std::string& value) {
  set_has_re_ip();
  re_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:C_RequestPublicKey.re_ip)
}
#if LANG_CXX11
void C_RequestPublicKey::set_re_ip(::std::string&& value) {
  set_has_re_ip();
  re_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_RequestPublicKey.re_ip)
}
#endif
void C_RequestPublicKey::set_re_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_re_ip();
  re_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_RequestPublicKey.re_ip)
}
void C_RequestPublicKey::set_re_ip(const char* value, size_t size) {
  set_has_re_ip();
  re_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_RequestPublicKey.re_ip)
}
::std::string* C_RequestPublicKey::mutable_re_ip() {
  set_has_re_ip();
  // @@protoc_insertion_point(field_mutable:C_RequestPublicKey.re_ip)
  return re_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C_RequestPublicKey::release_re_ip() {
  // @@protoc_insertion_point(field_release:C_RequestPublicKey.re_ip)
  clear_has_re_ip();
  return re_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C_RequestPublicKey::set_allocated_re_ip(::std::string* re_ip) {
  if (re_ip != NULL) {
    set_has_re_ip();
  } else {
    clear_has_re_ip();
  }
  re_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), re_ip);
  // @@protoc_insertion_point(field_set_allocated:C_RequestPublicKey.re_ip)
}

// optional int32 android_uid = 4;
bool C_RequestPublicKey::has_android_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void C_RequestPublicKey::set_has_android_uid() {
  _has_bits_[0] |= 0x00000008u;
}
void C_RequestPublicKey::clear_has_android_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
void C_RequestPublicKey::clear_android_uid() {
  android_uid_ = 0;
  clear_has_android_uid();
}
::google::protobuf::int32 C_RequestPublicKey::android_uid() const {
  // @@protoc_insertion_point(field_get:C_RequestPublicKey.android_uid)
  return android_uid_;
}
void C_RequestPublicKey::set_android_uid(::google::protobuf::int32 value) {
  set_has_android_uid();
  android_uid_ = value;
  // @@protoc_insertion_point(field_set:C_RequestPublicKey.android_uid)
}

// optional int32 android_pid = 5;
bool C_RequestPublicKey::has_android_pid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void C_RequestPublicKey::set_has_android_pid() {
  _has_bits_[0] |= 0x00000010u;
}
void C_RequestPublicKey::clear_has_android_pid() {
  _has_bits_[0] &= ~0x00000010u;
}
void C_RequestPublicKey::clear_android_pid() {
  android_pid_ = 0;
  clear_has_android_pid();
}
::google::protobuf::int32 C_RequestPublicKey::android_pid() const {
  // @@protoc_insertion_point(field_get:C_RequestPublicKey.android_pid)
  return android_pid_;
}
void C_RequestPublicKey::set_android_pid(::google::protobuf::int32 value) {
  set_has_android_pid();
  android_pid_ = value;
  // @@protoc_insertion_point(field_set:C_RequestPublicKey.android_pid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C_PublicKey::kPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C_PublicKey::C_PublicKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:C_PublicKey)
}
C_PublicKey::C_PublicKey(const C_PublicKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_key()) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  // @@protoc_insertion_point(copy_constructor:C_PublicKey)
}

void C_PublicKey::SharedCtor() {
  _cached_size_ = 0;
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C_PublicKey::~C_PublicKey() {
  // @@protoc_insertion_point(destructor:C_PublicKey)
  SharedDtor();
}

void C_PublicKey::SharedDtor() {
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void C_PublicKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C_PublicKey::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C_PublicKey& C_PublicKey::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

C_PublicKey* C_PublicKey::New(::google::protobuf::Arena* arena) const {
  C_PublicKey* n = new C_PublicKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C_PublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:C_PublicKey)
  if (has_public_key()) {
    GOOGLE_DCHECK(!public_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*public_key_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool C_PublicKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:C_PublicKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string public_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->public_key().data(), this->public_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "C_PublicKey.public_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:C_PublicKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:C_PublicKey)
  return false;
#undef DO_
}

void C_PublicKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:C_PublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string public_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->public_key().data(), this->public_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "C_PublicKey.public_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->public_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:C_PublicKey)
}

::google::protobuf::uint8* C_PublicKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:C_PublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string public_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->public_key().data(), this->public_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "C_PublicKey.public_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->public_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:C_PublicKey)
  return target;
}

size_t C_PublicKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:C_PublicKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string public_key = 1;
  if (has_public_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->public_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C_PublicKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:C_PublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  const C_PublicKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C_PublicKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:C_PublicKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:C_PublicKey)
    MergeFrom(*source);
  }
}

void C_PublicKey::MergeFrom(const C_PublicKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:C_PublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_public_key()) {
    set_has_public_key();
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
}

void C_PublicKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:C_PublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C_PublicKey::CopyFrom(const C_PublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:C_PublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_PublicKey::IsInitialized() const {
  return true;
}

void C_PublicKey::Swap(C_PublicKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C_PublicKey::InternalSwap(C_PublicKey* other) {
  public_key_.Swap(&other->public_key_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C_PublicKey::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C_PublicKey

// optional string public_key = 1;
bool C_PublicKey::has_public_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void C_PublicKey::set_has_public_key() {
  _has_bits_[0] |= 0x00000001u;
}
void C_PublicKey::clear_has_public_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void C_PublicKey::clear_public_key() {
  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_public_key();
}
const ::std::string& C_PublicKey::public_key() const {
  // @@protoc_insertion_point(field_get:C_PublicKey.public_key)
  return public_key_.GetNoArena();
}
void C_PublicKey::set_public_key(const ::std::string& value) {
  set_has_public_key();
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:C_PublicKey.public_key)
}
#if LANG_CXX11
void C_PublicKey::set_public_key(::std::string&& value) {
  set_has_public_key();
  public_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_PublicKey.public_key)
}
#endif
void C_PublicKey::set_public_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_public_key();
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_PublicKey.public_key)
}
void C_PublicKey::set_public_key(const char* value, size_t size) {
  set_has_public_key();
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_PublicKey.public_key)
}
::std::string* C_PublicKey::mutable_public_key() {
  set_has_public_key();
  // @@protoc_insertion_point(field_mutable:C_PublicKey.public_key)
  return public_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* C_PublicKey::release_public_key() {
  // @@protoc_insertion_point(field_release:C_PublicKey.public_key)
  clear_has_public_key();
  return public_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void C_PublicKey::set_allocated_public_key(::std::string* public_key) {
  if (public_key != NULL) {
    set_has_public_key();
  } else {
    clear_has_public_key();
  }
  public_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key);
  // @@protoc_insertion_point(field_set_allocated:C_PublicKey.public_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CL_RegAccount::kAccountFieldNumber;
const int CL_RegAccount::kPasswordFieldNumber;
const int CL_RegAccount::kPhoneFieldNumber;
const int CL_RegAccount::kPhoneTypeFieldNumber;
const int CL_RegAccount::kVersionFieldNumber;
const int CL_RegAccount::kChannelIdFieldNumber;
const int CL_RegAccount::kPackageNameFieldNumber;
const int CL_RegAccount::kImeiFieldNumber;
const int CL_RegAccount::kIpFieldNumber;
const int CL_RegAccount::kIpAreaFieldNumber;
const int CL_RegAccount::kAndroidUidFieldNumber;
const int CL_RegAccount::kAndroidPidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CL_RegAccount::CL_RegAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CL_RegAccount)
}
CL_RegAccount::CL_RegAccount(const CL_RegAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phone()) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  phone_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phone_type()) {
    phone_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_type_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel_id()) {
    channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
  }
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_package_name()) {
    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_imei()) {
    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip_area()) {
    ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
  }
  ::memcpy(&android_uid_, &from.android_uid_,
    reinterpret_cast<char*>(&android_pid_) -
    reinterpret_cast<char*>(&android_uid_) + sizeof(android_pid_));
  // @@protoc_insertion_point(copy_constructor:CL_RegAccount)
}

void CL_RegAccount::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&android_uid_, 0, reinterpret_cast<char*>(&android_pid_) -
    reinterpret_cast<char*>(&android_uid_) + sizeof(android_pid_));
}

CL_RegAccount::~CL_RegAccount() {
  // @@protoc_insertion_point(destructor:CL_RegAccount)
  SharedDtor();
}

void CL_RegAccount::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CL_RegAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CL_RegAccount::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CL_RegAccount& CL_RegAccount::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CL_RegAccount* CL_RegAccount::New(::google::protobuf::Arena* arena) const {
  CL_RegAccount* n = new CL_RegAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CL_RegAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:CL_RegAccount)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_phone()) {
      GOOGLE_DCHECK(!phone_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phone_.UnsafeRawStringPointer())->clear();
    }
    if (has_phone_type()) {
      GOOGLE_DCHECK(!phone_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phone_type_.UnsafeRawStringPointer())->clear();
    }
    if (has_version()) {
      GOOGLE_DCHECK(!version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*version_.UnsafeRawStringPointer())->clear();
    }
    if (has_channel_id()) {
      GOOGLE_DCHECK(!channel_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*channel_id_.UnsafeRawStringPointer())->clear();
    }
    if (has_package_name()) {
      GOOGLE_DCHECK(!package_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*package_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_imei()) {
      GOOGLE_DCHECK(!imei_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*imei_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_ip()) {
      GOOGLE_DCHECK(!ip_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ip_.UnsafeRawStringPointer())->clear();
    }
    if (has_ip_area()) {
      GOOGLE_DCHECK(!ip_area_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ip_area_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 3072u) {
    ::memset(&android_uid_, 0, reinterpret_cast<char*>(&android_pid_) -
      reinterpret_cast<char*>(&android_uid_) + sizeof(android_pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CL_RegAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CL_RegAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_RegAccount.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_RegAccount.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phone = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_RegAccount.phone");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phone_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phone_type().data(), this->phone_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_RegAccount.phone_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_RegAccount.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel_id().data(), this->channel_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_RegAccount.channel_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string package_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package_name().data(), this->package_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_RegAccount.package_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string imei = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->imei().data(), this->imei().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_RegAccount.imei");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_RegAccount.ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip_area = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_area()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip_area().data(), this->ip_area().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_RegAccount.ip_area");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 android_uid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_android_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &android_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 android_pid = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_android_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &android_pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CL_RegAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CL_RegAccount)
  return false;
#undef DO_
}

void CL_RegAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CL_RegAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional string phone = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phone(), output);
  }

  // optional string phone_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone_type().data(), this->phone_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.phone_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->phone_type(), output);
  }

  // optional string version = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->version(), output);
  }

  // optional string channel_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_id().data(), this->channel_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.channel_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->channel_id(), output);
  }

  // optional string package_name = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), this->package_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.package_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->package_name(), output);
  }

  // optional string imei = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), this->imei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->imei(), output);
  }

  // optional string ip = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->ip(), output);
  }

  // optional string ip_area = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.ip_area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->ip_area(), output);
  }

  // optional int32 android_uid = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->android_uid(), output);
  }

  // optional int32 android_pid = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->android_pid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CL_RegAccount)
}

::google::protobuf::uint8* CL_RegAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CL_RegAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional string phone = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phone(), target);
  }

  // optional string phone_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone_type().data(), this->phone_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.phone_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->phone_type(), target);
  }

  // optional string version = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->version(), target);
  }

  // optional string channel_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_id().data(), this->channel_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.channel_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->channel_id(), target);
  }

  // optional string package_name = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), this->package_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.package_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->package_name(), target);
  }

  // optional string imei = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), this->imei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->imei(), target);
  }

  // optional string ip = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->ip(), target);
  }

  // optional string ip_area = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_RegAccount.ip_area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->ip_area(), target);
  }

  // optional int32 android_uid = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->android_uid(), target);
  }

  // optional int32 android_pid = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->android_pid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CL_RegAccount)
  return target;
}

size_t CL_RegAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CL_RegAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string phone = 3;
    if (has_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone());
    }

    // optional string phone_type = 4;
    if (has_phone_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone_type());
    }

    // optional string version = 5;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional string channel_id = 6;
    if (has_channel_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel_id());
    }

    // optional string package_name = 7;
    if (has_package_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->package_name());
    }

    // optional string imei = 8;
    if (has_imei()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imei());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional string ip = 9;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // optional string ip_area = 10;
    if (has_ip_area()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip_area());
    }

    // optional int32 android_uid = 11;
    if (has_android_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->android_uid());
    }

    // optional int32 android_pid = 12;
    if (has_android_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->android_pid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CL_RegAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CL_RegAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const CL_RegAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CL_RegAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CL_RegAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CL_RegAccount)
    MergeFrom(*source);
  }
}

void CL_RegAccount::MergeFrom(const CL_RegAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CL_RegAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_phone();
      phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_phone_type();
      phone_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_type_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_channel_id();
      channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_package_name();
      package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_imei();
      imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
    }
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_ip_area();
      ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
    }
    if (cached_has_bits & 0x00000400u) {
      android_uid_ = from.android_uid_;
    }
    if (cached_has_bits & 0x00000800u) {
      android_pid_ = from.android_pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CL_RegAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CL_RegAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CL_RegAccount::CopyFrom(const CL_RegAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CL_RegAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CL_RegAccount::IsInitialized() const {
  return true;
}

void CL_RegAccount::Swap(CL_RegAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CL_RegAccount::InternalSwap(CL_RegAccount* other) {
  account_.Swap(&other->account_);
  password_.Swap(&other->password_);
  phone_.Swap(&other->phone_);
  phone_type_.Swap(&other->phone_type_);
  version_.Swap(&other->version_);
  channel_id_.Swap(&other->channel_id_);
  package_name_.Swap(&other->package_name_);
  imei_.Swap(&other->imei_);
  ip_.Swap(&other->ip_);
  ip_area_.Swap(&other->ip_area_);
  std::swap(android_uid_, other->android_uid_);
  std::swap(android_pid_, other->android_pid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CL_RegAccount::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CL_RegAccount

// optional string account = 1;
bool CL_RegAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CL_RegAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void CL_RegAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void CL_RegAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& CL_RegAccount::account() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.account)
  return account_.GetNoArena();
}
void CL_RegAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.account)
}
#if LANG_CXX11
void CL_RegAccount::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.account)
}
#endif
void CL_RegAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.account)
}
void CL_RegAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.account)
}
::std::string* CL_RegAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_RegAccount::release_account() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_RegAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.account)
}

// optional string password = 2;
bool CL_RegAccount::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CL_RegAccount::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void CL_RegAccount::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void CL_RegAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CL_RegAccount::password() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.password)
  return password_.GetNoArena();
}
void CL_RegAccount::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.password)
}
#if LANG_CXX11
void CL_RegAccount::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.password)
}
#endif
void CL_RegAccount::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.password)
}
void CL_RegAccount::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.password)
}
::std::string* CL_RegAccount::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_RegAccount::release_password() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_RegAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.password)
}

// optional string phone = 3;
bool CL_RegAccount::has_phone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CL_RegAccount::set_has_phone() {
  _has_bits_[0] |= 0x00000004u;
}
void CL_RegAccount::clear_has_phone() {
  _has_bits_[0] &= ~0x00000004u;
}
void CL_RegAccount::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
const ::std::string& CL_RegAccount::phone() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.phone)
  return phone_.GetNoArena();
}
void CL_RegAccount::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.phone)
}
#if LANG_CXX11
void CL_RegAccount::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.phone)
}
#endif
void CL_RegAccount::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.phone)
}
void CL_RegAccount::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.phone)
}
::std::string* CL_RegAccount::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_RegAccount::release_phone() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_RegAccount::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.phone)
}

// optional string phone_type = 4;
bool CL_RegAccount::has_phone_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CL_RegAccount::set_has_phone_type() {
  _has_bits_[0] |= 0x00000008u;
}
void CL_RegAccount::clear_has_phone_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void CL_RegAccount::clear_phone_type() {
  phone_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_type();
}
const ::std::string& CL_RegAccount::phone_type() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.phone_type)
  return phone_type_.GetNoArena();
}
void CL_RegAccount::set_phone_type(const ::std::string& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.phone_type)
}
#if LANG_CXX11
void CL_RegAccount::set_phone_type(::std::string&& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.phone_type)
}
#endif
void CL_RegAccount::set_phone_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.phone_type)
}
void CL_RegAccount::set_phone_type(const char* value, size_t size) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.phone_type)
}
::std::string* CL_RegAccount::mutable_phone_type() {
  set_has_phone_type();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.phone_type)
  return phone_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_RegAccount::release_phone_type() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.phone_type)
  clear_has_phone_type();
  return phone_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_RegAccount::set_allocated_phone_type(::std::string* phone_type) {
  if (phone_type != NULL) {
    set_has_phone_type();
  } else {
    clear_has_phone_type();
  }
  phone_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_type);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.phone_type)
}

// optional string version = 5;
bool CL_RegAccount::has_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CL_RegAccount::set_has_version() {
  _has_bits_[0] |= 0x00000010u;
}
void CL_RegAccount::clear_has_version() {
  _has_bits_[0] &= ~0x00000010u;
}
void CL_RegAccount::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
const ::std::string& CL_RegAccount::version() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.version)
  return version_.GetNoArena();
}
void CL_RegAccount::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.version)
}
#if LANG_CXX11
void CL_RegAccount::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.version)
}
#endif
void CL_RegAccount::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.version)
}
void CL_RegAccount::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.version)
}
::std::string* CL_RegAccount::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_RegAccount::release_version() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_RegAccount::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.version)
}

// optional string channel_id = 6;
bool CL_RegAccount::has_channel_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CL_RegAccount::set_has_channel_id() {
  _has_bits_[0] |= 0x00000020u;
}
void CL_RegAccount::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void CL_RegAccount::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
const ::std::string& CL_RegAccount::channel_id() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.channel_id)
  return channel_id_.GetNoArena();
}
void CL_RegAccount::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.channel_id)
}
#if LANG_CXX11
void CL_RegAccount::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.channel_id)
}
#endif
void CL_RegAccount::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.channel_id)
}
void CL_RegAccount::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.channel_id)
}
::std::string* CL_RegAccount::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_RegAccount::release_channel_id() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_RegAccount::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.channel_id)
}

// optional string package_name = 7;
bool CL_RegAccount::has_package_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CL_RegAccount::set_has_package_name() {
  _has_bits_[0] |= 0x00000040u;
}
void CL_RegAccount::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000040u;
}
void CL_RegAccount::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
const ::std::string& CL_RegAccount::package_name() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.package_name)
  return package_name_.GetNoArena();
}
void CL_RegAccount::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.package_name)
}
#if LANG_CXX11
void CL_RegAccount::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.package_name)
}
#endif
void CL_RegAccount::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.package_name)
}
void CL_RegAccount::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.package_name)
}
::std::string* CL_RegAccount::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_RegAccount::release_package_name() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_RegAccount::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.package_name)
}

// optional string imei = 8;
bool CL_RegAccount::has_imei() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CL_RegAccount::set_has_imei() {
  _has_bits_[0] |= 0x00000080u;
}
void CL_RegAccount::clear_has_imei() {
  _has_bits_[0] &= ~0x00000080u;
}
void CL_RegAccount::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
const ::std::string& CL_RegAccount::imei() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.imei)
  return imei_.GetNoArena();
}
void CL_RegAccount::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.imei)
}
#if LANG_CXX11
void CL_RegAccount::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.imei)
}
#endif
void CL_RegAccount::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.imei)
}
void CL_RegAccount::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.imei)
}
::std::string* CL_RegAccount::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_RegAccount::release_imei() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_RegAccount::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.imei)
}

// optional string ip = 9;
bool CL_RegAccount::has_ip() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CL_RegAccount::set_has_ip() {
  _has_bits_[0] |= 0x00000100u;
}
void CL_RegAccount::clear_has_ip() {
  _has_bits_[0] &= ~0x00000100u;
}
void CL_RegAccount::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
const ::std::string& CL_RegAccount::ip() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.ip)
  return ip_.GetNoArena();
}
void CL_RegAccount::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.ip)
}
#if LANG_CXX11
void CL_RegAccount::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.ip)
}
#endif
void CL_RegAccount::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.ip)
}
void CL_RegAccount::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.ip)
}
::std::string* CL_RegAccount::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_RegAccount::release_ip() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_RegAccount::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.ip)
}

// optional string ip_area = 10;
bool CL_RegAccount::has_ip_area() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CL_RegAccount::set_has_ip_area() {
  _has_bits_[0] |= 0x00000200u;
}
void CL_RegAccount::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000200u;
}
void CL_RegAccount::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
const ::std::string& CL_RegAccount::ip_area() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.ip_area)
  return ip_area_.GetNoArena();
}
void CL_RegAccount::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.ip_area)
}
#if LANG_CXX11
void CL_RegAccount::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.ip_area)
}
#endif
void CL_RegAccount::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.ip_area)
}
void CL_RegAccount::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.ip_area)
}
::std::string* CL_RegAccount::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_RegAccount::release_ip_area() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_RegAccount::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.ip_area)
}

// optional int32 android_uid = 11;
bool CL_RegAccount::has_android_uid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CL_RegAccount::set_has_android_uid() {
  _has_bits_[0] |= 0x00000400u;
}
void CL_RegAccount::clear_has_android_uid() {
  _has_bits_[0] &= ~0x00000400u;
}
void CL_RegAccount::clear_android_uid() {
  android_uid_ = 0;
  clear_has_android_uid();
}
::google::protobuf::int32 CL_RegAccount::android_uid() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.android_uid)
  return android_uid_;
}
void CL_RegAccount::set_android_uid(::google::protobuf::int32 value) {
  set_has_android_uid();
  android_uid_ = value;
  // @@protoc_insertion_point(field_set:CL_RegAccount.android_uid)
}

// optional int32 android_pid = 12;
bool CL_RegAccount::has_android_pid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CL_RegAccount::set_has_android_pid() {
  _has_bits_[0] |= 0x00000800u;
}
void CL_RegAccount::clear_has_android_pid() {
  _has_bits_[0] &= ~0x00000800u;
}
void CL_RegAccount::clear_android_pid() {
  android_pid_ = 0;
  clear_has_android_pid();
}
::google::protobuf::int32 CL_RegAccount::android_pid() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.android_pid)
  return android_pid_;
}
void CL_RegAccount::set_android_pid(::google::protobuf::int32 value) {
  set_has_android_pid();
  android_pid_ = value;
  // @@protoc_insertion_point(field_set:CL_RegAccount.android_pid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CL_Login::kAccountFieldNumber;
const int CL_Login::kPasswordFieldNumber;
const int CL_Login::kPhoneFieldNumber;
const int CL_Login::kPhoneTypeFieldNumber;
const int CL_Login::kImeiFieldNumber;
const int CL_Login::kIpFieldNumber;
const int CL_Login::kVersionFieldNumber;
const int CL_Login::kChannelIdFieldNumber;
const int CL_Login::kPackageNameFieldNumber;
const int CL_Login::kIpAreaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CL_Login::CL_Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CL_Login)
}
CL_Login::CL_Login(const CL_Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phone()) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  phone_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phone_type()) {
    phone_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_type_);
  }
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_imei()) {
    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel_id()) {
    channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
  }
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_package_name()) {
    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip_area()) {
    ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
  }
  // @@protoc_insertion_point(copy_constructor:CL_Login)
}

void CL_Login::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CL_Login::~CL_Login() {
  // @@protoc_insertion_point(destructor:CL_Login)
  SharedDtor();
}

void CL_Login::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CL_Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CL_Login::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CL_Login& CL_Login::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CL_Login* CL_Login::New(::google::protobuf::Arena* arena) const {
  CL_Login* n = new CL_Login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CL_Login::Clear() {
// @@protoc_insertion_point(message_clear_start:CL_Login)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_phone()) {
      GOOGLE_DCHECK(!phone_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phone_.UnsafeRawStringPointer())->clear();
    }
    if (has_phone_type()) {
      GOOGLE_DCHECK(!phone_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phone_type_.UnsafeRawStringPointer())->clear();
    }
    if (has_imei()) {
      GOOGLE_DCHECK(!imei_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*imei_.UnsafeRawStringPointer())->clear();
    }
    if (has_ip()) {
      GOOGLE_DCHECK(!ip_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ip_.UnsafeRawStringPointer())->clear();
    }
    if (has_version()) {
      GOOGLE_DCHECK(!version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*version_.UnsafeRawStringPointer())->clear();
    }
    if (has_channel_id()) {
      GOOGLE_DCHECK(!channel_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*channel_id_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_package_name()) {
      GOOGLE_DCHECK(!package_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*package_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_ip_area()) {
      GOOGLE_DCHECK(!ip_area_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ip_area_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CL_Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CL_Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_Login.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_Login.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phone = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_Login.phone");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phone_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phone_type().data(), this->phone_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_Login.phone_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string imei = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->imei().data(), this->imei().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_Login.imei");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_Login.ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_Login.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel_id().data(), this->channel_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_Login.channel_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string package_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package_name().data(), this->package_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_Login.package_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip_area = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_area()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip_area().data(), this->ip_area().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_Login.ip_area");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CL_Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CL_Login)
  return false;
#undef DO_
}

void CL_Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CL_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional string phone = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phone(), output);
  }

  // optional string phone_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone_type().data(), this->phone_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.phone_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->phone_type(), output);
  }

  // optional string imei = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), this->imei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->imei(), output);
  }

  // optional string ip = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->ip(), output);
  }

  // optional string version = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->version(), output);
  }

  // optional string channel_id = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_id().data(), this->channel_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.channel_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->channel_id(), output);
  }

  // optional string package_name = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), this->package_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.package_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->package_name(), output);
  }

  // optional string ip_area = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.ip_area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->ip_area(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CL_Login)
}

::google::protobuf::uint8* CL_Login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CL_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional string phone = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phone(), target);
  }

  // optional string phone_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone_type().data(), this->phone_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.phone_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->phone_type(), target);
  }

  // optional string imei = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), this->imei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->imei(), target);
  }

  // optional string ip = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->ip(), target);
  }

  // optional string version = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->version(), target);
  }

  // optional string channel_id = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_id().data(), this->channel_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.channel_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->channel_id(), target);
  }

  // optional string package_name = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), this->package_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.package_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->package_name(), target);
  }

  // optional string ip_area = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_Login.ip_area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->ip_area(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CL_Login)
  return target;
}

size_t CL_Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CL_Login)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string phone = 3;
    if (has_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone());
    }

    // optional string phone_type = 4;
    if (has_phone_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone_type());
    }

    // optional string imei = 5;
    if (has_imei()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imei());
    }

    // optional string ip = 6;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // optional string version = 7;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional string channel_id = 8;
    if (has_channel_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel_id());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional string package_name = 9;
    if (has_package_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->package_name());
    }

    // optional string ip_area = 10;
    if (has_ip_area()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip_area());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CL_Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CL_Login)
  GOOGLE_DCHECK_NE(&from, this);
  const CL_Login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CL_Login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CL_Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CL_Login)
    MergeFrom(*source);
  }
}

void CL_Login::MergeFrom(const CL_Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CL_Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_phone();
      phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_phone_type();
      phone_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_type_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_imei();
      imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_channel_id();
      channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
    }
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_package_name();
      package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_ip_area();
      ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
    }
  }
}

void CL_Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CL_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CL_Login::CopyFrom(const CL_Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CL_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CL_Login::IsInitialized() const {
  return true;
}

void CL_Login::Swap(CL_Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CL_Login::InternalSwap(CL_Login* other) {
  account_.Swap(&other->account_);
  password_.Swap(&other->password_);
  phone_.Swap(&other->phone_);
  phone_type_.Swap(&other->phone_type_);
  imei_.Swap(&other->imei_);
  ip_.Swap(&other->ip_);
  version_.Swap(&other->version_);
  channel_id_.Swap(&other->channel_id_);
  package_name_.Swap(&other->package_name_);
  ip_area_.Swap(&other->ip_area_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CL_Login::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CL_Login

// optional string account = 1;
bool CL_Login::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CL_Login::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void CL_Login::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void CL_Login::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& CL_Login::account() const {
  // @@protoc_insertion_point(field_get:CL_Login.account)
  return account_.GetNoArena();
}
void CL_Login::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.account)
}
#if LANG_CXX11
void CL_Login::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.account)
}
#endif
void CL_Login::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.account)
}
void CL_Login::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.account)
}
::std::string* CL_Login::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:CL_Login.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_Login::release_account() {
  // @@protoc_insertion_point(field_release:CL_Login.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_Login::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.account)
}

// optional string password = 2;
bool CL_Login::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CL_Login::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void CL_Login::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void CL_Login::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CL_Login::password() const {
  // @@protoc_insertion_point(field_get:CL_Login.password)
  return password_.GetNoArena();
}
void CL_Login::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.password)
}
#if LANG_CXX11
void CL_Login::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.password)
}
#endif
void CL_Login::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.password)
}
void CL_Login::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.password)
}
::std::string* CL_Login::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CL_Login.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_Login::release_password() {
  // @@protoc_insertion_point(field_release:CL_Login.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_Login::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.password)
}

// optional string phone = 3;
bool CL_Login::has_phone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CL_Login::set_has_phone() {
  _has_bits_[0] |= 0x00000004u;
}
void CL_Login::clear_has_phone() {
  _has_bits_[0] &= ~0x00000004u;
}
void CL_Login::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
const ::std::string& CL_Login::phone() const {
  // @@protoc_insertion_point(field_get:CL_Login.phone)
  return phone_.GetNoArena();
}
void CL_Login::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.phone)
}
#if LANG_CXX11
void CL_Login::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.phone)
}
#endif
void CL_Login::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.phone)
}
void CL_Login::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.phone)
}
::std::string* CL_Login::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:CL_Login.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_Login::release_phone() {
  // @@protoc_insertion_point(field_release:CL_Login.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_Login::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.phone)
}

// optional string phone_type = 4;
bool CL_Login::has_phone_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CL_Login::set_has_phone_type() {
  _has_bits_[0] |= 0x00000008u;
}
void CL_Login::clear_has_phone_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void CL_Login::clear_phone_type() {
  phone_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_type();
}
const ::std::string& CL_Login::phone_type() const {
  // @@protoc_insertion_point(field_get:CL_Login.phone_type)
  return phone_type_.GetNoArena();
}
void CL_Login::set_phone_type(const ::std::string& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.phone_type)
}
#if LANG_CXX11
void CL_Login::set_phone_type(::std::string&& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.phone_type)
}
#endif
void CL_Login::set_phone_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.phone_type)
}
void CL_Login::set_phone_type(const char* value, size_t size) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.phone_type)
}
::std::string* CL_Login::mutable_phone_type() {
  set_has_phone_type();
  // @@protoc_insertion_point(field_mutable:CL_Login.phone_type)
  return phone_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_Login::release_phone_type() {
  // @@protoc_insertion_point(field_release:CL_Login.phone_type)
  clear_has_phone_type();
  return phone_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_Login::set_allocated_phone_type(::std::string* phone_type) {
  if (phone_type != NULL) {
    set_has_phone_type();
  } else {
    clear_has_phone_type();
  }
  phone_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_type);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.phone_type)
}

// optional string imei = 5;
bool CL_Login::has_imei() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CL_Login::set_has_imei() {
  _has_bits_[0] |= 0x00000010u;
}
void CL_Login::clear_has_imei() {
  _has_bits_[0] &= ~0x00000010u;
}
void CL_Login::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
const ::std::string& CL_Login::imei() const {
  // @@protoc_insertion_point(field_get:CL_Login.imei)
  return imei_.GetNoArena();
}
void CL_Login::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.imei)
}
#if LANG_CXX11
void CL_Login::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.imei)
}
#endif
void CL_Login::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.imei)
}
void CL_Login::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.imei)
}
::std::string* CL_Login::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:CL_Login.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_Login::release_imei() {
  // @@protoc_insertion_point(field_release:CL_Login.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_Login::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.imei)
}

// optional string ip = 6;
bool CL_Login::has_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CL_Login::set_has_ip() {
  _has_bits_[0] |= 0x00000020u;
}
void CL_Login::clear_has_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
void CL_Login::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
const ::std::string& CL_Login::ip() const {
  // @@protoc_insertion_point(field_get:CL_Login.ip)
  return ip_.GetNoArena();
}
void CL_Login::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.ip)
}
#if LANG_CXX11
void CL_Login::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.ip)
}
#endif
void CL_Login::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.ip)
}
void CL_Login::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.ip)
}
::std::string* CL_Login::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:CL_Login.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_Login::release_ip() {
  // @@protoc_insertion_point(field_release:CL_Login.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_Login::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.ip)
}

// optional string version = 7;
bool CL_Login::has_version() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CL_Login::set_has_version() {
  _has_bits_[0] |= 0x00000040u;
}
void CL_Login::clear_has_version() {
  _has_bits_[0] &= ~0x00000040u;
}
void CL_Login::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
const ::std::string& CL_Login::version() const {
  // @@protoc_insertion_point(field_get:CL_Login.version)
  return version_.GetNoArena();
}
void CL_Login::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.version)
}
#if LANG_CXX11
void CL_Login::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.version)
}
#endif
void CL_Login::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.version)
}
void CL_Login::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.version)
}
::std::string* CL_Login::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:CL_Login.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_Login::release_version() {
  // @@protoc_insertion_point(field_release:CL_Login.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_Login::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.version)
}

// optional string channel_id = 8;
bool CL_Login::has_channel_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CL_Login::set_has_channel_id() {
  _has_bits_[0] |= 0x00000080u;
}
void CL_Login::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000080u;
}
void CL_Login::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
const ::std::string& CL_Login::channel_id() const {
  // @@protoc_insertion_point(field_get:CL_Login.channel_id)
  return channel_id_.GetNoArena();
}
void CL_Login::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.channel_id)
}
#if LANG_CXX11
void CL_Login::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.channel_id)
}
#endif
void CL_Login::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.channel_id)
}
void CL_Login::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.channel_id)
}
::std::string* CL_Login::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:CL_Login.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_Login::release_channel_id() {
  // @@protoc_insertion_point(field_release:CL_Login.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_Login::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.channel_id)
}

// optional string package_name = 9;
bool CL_Login::has_package_name() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CL_Login::set_has_package_name() {
  _has_bits_[0] |= 0x00000100u;
}
void CL_Login::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000100u;
}
void CL_Login::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
const ::std::string& CL_Login::package_name() const {
  // @@protoc_insertion_point(field_get:CL_Login.package_name)
  return package_name_.GetNoArena();
}
void CL_Login::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.package_name)
}
#if LANG_CXX11
void CL_Login::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.package_name)
}
#endif
void CL_Login::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.package_name)
}
void CL_Login::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.package_name)
}
::std::string* CL_Login::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:CL_Login.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_Login::release_package_name() {
  // @@protoc_insertion_point(field_release:CL_Login.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_Login::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.package_name)
}

// optional string ip_area = 10;
bool CL_Login::has_ip_area() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CL_Login::set_has_ip_area() {
  _has_bits_[0] |= 0x00000200u;
}
void CL_Login::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000200u;
}
void CL_Login::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
const ::std::string& CL_Login::ip_area() const {
  // @@protoc_insertion_point(field_get:CL_Login.ip_area)
  return ip_area_.GetNoArena();
}
void CL_Login::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.ip_area)
}
#if LANG_CXX11
void CL_Login::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.ip_area)
}
#endif
void CL_Login::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.ip_area)
}
void CL_Login::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.ip_area)
}
::std::string* CL_Login::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:CL_Login.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_Login::release_ip_area() {
  // @@protoc_insertion_point(field_release:CL_Login.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_Login::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.ip_area)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginValidatebox::kQuestionFieldNumber;
const int LoginValidatebox::kAnswerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginValidatebox::LoginValidatebox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginValidatebox)
}
LoginValidatebox::LoginValidatebox(const LoginValidatebox& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      question_(from.question_),
      answer_(from.answer_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:LoginValidatebox)
}

void LoginValidatebox::SharedCtor() {
  _cached_size_ = 0;
}

LoginValidatebox::~LoginValidatebox() {
  // @@protoc_insertion_point(destructor:LoginValidatebox)
  SharedDtor();
}

void LoginValidatebox::SharedDtor() {
}

void LoginValidatebox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginValidatebox::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginValidatebox& LoginValidatebox::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginValidatebox* LoginValidatebox::New(::google::protobuf::Arena* arena) const {
  LoginValidatebox* n = new LoginValidatebox;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginValidatebox::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginValidatebox)
  question_.Clear();
  answer_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginValidatebox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginValidatebox)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 question = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_question())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_question())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 answer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_answer())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_answer())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginValidatebox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginValidatebox)
  return false;
#undef DO_
}

void LoginValidatebox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginValidatebox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 question = 1;
  for (int i = 0, n = this->question_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->question(i), output);
  }

  // repeated int32 answer = 2;
  for (int i = 0, n = this->answer_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->answer(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LoginValidatebox)
}

::google::protobuf::uint8* LoginValidatebox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoginValidatebox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 question = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->question_, target);

  // repeated int32 answer = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->answer_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginValidatebox)
  return target;
}

size_t LoginValidatebox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginValidatebox)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 question = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->question_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->question_size());
    total_size += data_size;
  }

  // repeated int32 answer = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->answer_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->answer_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginValidatebox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginValidatebox)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginValidatebox* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginValidatebox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginValidatebox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginValidatebox)
    MergeFrom(*source);
  }
}

void LoginValidatebox::MergeFrom(const LoginValidatebox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginValidatebox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  question_.MergeFrom(from.question_);
  answer_.MergeFrom(from.answer_);
}

void LoginValidatebox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginValidatebox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginValidatebox::CopyFrom(const LoginValidatebox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginValidatebox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginValidatebox::IsInitialized() const {
  return true;
}

void LoginValidatebox::Swap(LoginValidatebox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginValidatebox::InternalSwap(LoginValidatebox* other) {
  question_.InternalSwap(&other->question_);
  answer_.InternalSwap(&other->answer_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginValidatebox::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginValidatebox

// repeated int32 question = 1;
int LoginValidatebox::question_size() const {
  return question_.size();
}
void LoginValidatebox::clear_question() {
  question_.Clear();
}
::google::protobuf::int32 LoginValidatebox::question(int index) const {
  // @@protoc_insertion_point(field_get:LoginValidatebox.question)
  return question_.Get(index);
}
void LoginValidatebox::set_question(int index, ::google::protobuf::int32 value) {
  question_.Set(index, value);
  // @@protoc_insertion_point(field_set:LoginValidatebox.question)
}
void LoginValidatebox::add_question(::google::protobuf::int32 value) {
  question_.Add(value);
  // @@protoc_insertion_point(field_add:LoginValidatebox.question)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LoginValidatebox::question() const {
  // @@protoc_insertion_point(field_list:LoginValidatebox.question)
  return question_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LoginValidatebox::mutable_question() {
  // @@protoc_insertion_point(field_mutable_list:LoginValidatebox.question)
  return &question_;
}

// repeated int32 answer = 2;
int LoginValidatebox::answer_size() const {
  return answer_.size();
}
void LoginValidatebox::clear_answer() {
  answer_.Clear();
}
::google::protobuf::int32 LoginValidatebox::answer(int index) const {
  // @@protoc_insertion_point(field_get:LoginValidatebox.answer)
  return answer_.Get(index);
}
void LoginValidatebox::set_answer(int index, ::google::protobuf::int32 value) {
  answer_.Set(index, value);
  // @@protoc_insertion_point(field_set:LoginValidatebox.answer)
}
void LoginValidatebox::add_answer(::google::protobuf::int32 value) {
  answer_.Add(value);
  // @@protoc_insertion_point(field_add:LoginValidatebox.answer)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LoginValidatebox::answer() const {
  // @@protoc_insertion_point(field_list:LoginValidatebox.answer)
  return answer_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LoginValidatebox::mutable_answer() {
  // @@protoc_insertion_point(field_mutable_list:LoginValidatebox.answer)
  return &answer_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LC_Login::kResultFieldNumber;
const int LC_Login::kGuidFieldNumber;
const int LC_Login::kAccountFieldNumber;
const int LC_Login::kGameIdFieldNumber;
const int LC_Login::kNicknameFieldNumber;
const int LC_Login::kIsGuestFieldNumber;
const int LC_Login::kPasswordFieldNumber;
const int LC_Login::kAlipayAccountFieldNumber;
const int LC_Login::kAlipayNameFieldNumber;
const int LC_Login::kIsValidateboxFieldNumber;
const int LC_Login::kPbValidateboxFieldNumber;
const int LC_Login::kChangeAlipayNumFieldNumber;
const int LC_Login::kIpAreaFieldNumber;
const int LC_Login::kEnableTransferFieldNumber;
const int LC_Login::kIsFirstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LC_Login::LC_Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LC_Login)
}
LC_Login::LC_Login(const LC_Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  alipay_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_account()) {
    alipay_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_);
  }
  alipay_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_name()) {
    alipay_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_);
  }
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip_area()) {
    ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
  }
  if (from.has_pb_validatebox()) {
    pb_validatebox_ = new ::LoginValidatebox(*from.pb_validatebox_);
  } else {
    pb_validatebox_ = NULL;
  }
  ::memcpy(&result_, &from.result_,
    reinterpret_cast<char*>(&is_first_) -
    reinterpret_cast<char*>(&result_) + sizeof(is_first_));
  // @@protoc_insertion_point(copy_constructor:LC_Login)
}

void LC_Login::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pb_validatebox_, 0, reinterpret_cast<char*>(&change_alipay_num_) -
    reinterpret_cast<char*>(&pb_validatebox_) + sizeof(change_alipay_num_));
  is_first_ = 2;
}

LC_Login::~LC_Login() {
  // @@protoc_insertion_point(destructor:LC_Login)
  SharedDtor();
}

void LC_Login::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete pb_validatebox_;
  }
}

void LC_Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LC_Login::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LC_Login& LC_Login::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

LC_Login* LC_Login::New(::google::protobuf::Arena* arena) const {
  LC_Login* n = new LC_Login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LC_Login::Clear() {
// @@protoc_insertion_point(message_clear_start:LC_Login)
  if (_has_bits_[0 / 32] & 127u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_nickname()) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_alipay_account()) {
      GOOGLE_DCHECK(!alipay_account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_account_.UnsafeRawStringPointer())->clear();
    }
    if (has_alipay_name()) {
      GOOGLE_DCHECK(!alipay_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_ip_area()) {
      GOOGLE_DCHECK(!ip_area_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ip_area_.UnsafeRawStringPointer())->clear();
    }
    if (has_pb_validatebox()) {
      GOOGLE_DCHECK(pb_validatebox_ != NULL);
      pb_validatebox_->::LoginValidatebox::Clear();
    }
  }
  result_ = 0;
  if (_has_bits_[8 / 32] & 32512u) {
    ::memset(&guid_, 0, reinterpret_cast<char*>(&change_alipay_num_) -
      reinterpret_cast<char*>(&guid_) + sizeof(change_alipay_num_));
    is_first_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LC_Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LC_Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LC_Login.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 game_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LC_Login.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_guest = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_is_guest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_guest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LC_Login.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_account = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_account().data(), this->alipay_account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LC_Login.alipay_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_name().data(), this->alipay_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LC_Login.alipay_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_validatebox = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_is_validatebox();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_validatebox_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .LoginValidatebox pb_validatebox = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pb_validatebox()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 change_alipay_num = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_change_alipay_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &change_alipay_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip_area = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_area()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip_area().data(), this->ip_area().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LC_Login.ip_area");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_transfer = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_enable_transfer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_transfer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 is_first = 15 [default = 2];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          set_has_is_first();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_first_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LC_Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LC_Login)
  return false;
#undef DO_
}

void LC_Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LC_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 guid = 2;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->guid(), output);
  }

  // optional string account = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_Login.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account(), output);
  }

  // optional int32 game_id = 4;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->game_id(), output);
  }

  // optional string nickname = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_Login.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->nickname(), output);
  }

  // optional bool is_guest = 6;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_guest(), output);
  }

  // optional string password = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_Login.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->password(), output);
  }

  // optional string alipay_account = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account().data(), this->alipay_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_Login.alipay_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->alipay_account(), output);
  }

  // optional string alipay_name = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name().data(), this->alipay_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_Login.alipay_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->alipay_name(), output);
  }

  // optional bool is_validatebox = 10;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_validatebox(), output);
  }

  // optional .LoginValidatebox pb_validatebox = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->pb_validatebox_, output);
  }

  // optional int32 change_alipay_num = 12;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->change_alipay_num(), output);
  }

  // optional string ip_area = 13;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_Login.ip_area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->ip_area(), output);
  }

  // optional bool enable_transfer = 14;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->enable_transfer(), output);
  }

  // optional int32 is_first = 15 [default = 2];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->is_first(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LC_Login)
}

::google::protobuf::uint8* LC_Login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LC_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 guid = 2;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->guid(), target);
  }

  // optional string account = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_Login.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account(), target);
  }

  // optional int32 game_id = 4;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->game_id(), target);
  }

  // optional string nickname = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_Login.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->nickname(), target);
  }

  // optional bool is_guest = 6;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_guest(), target);
  }

  // optional string password = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_Login.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->password(), target);
  }

  // optional string alipay_account = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account().data(), this->alipay_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_Login.alipay_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->alipay_account(), target);
  }

  // optional string alipay_name = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name().data(), this->alipay_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_Login.alipay_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->alipay_name(), target);
  }

  // optional bool is_validatebox = 10;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_validatebox(), target);
  }

  // optional .LoginValidatebox pb_validatebox = 11;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->pb_validatebox_, deterministic, target);
  }

  // optional int32 change_alipay_num = 12;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->change_alipay_num(), target);
  }

  // optional string ip_area = 13;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_Login.ip_area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->ip_area(), target);
  }

  // optional bool enable_transfer = 14;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->enable_transfer(), target);
  }

  // optional int32 is_first = 15 [default = 2];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->is_first(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LC_Login)
  return target;
}

size_t LC_Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LC_Login)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string account = 3;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string nickname = 5;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string password = 7;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string alipay_account = 8;
    if (has_alipay_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_account());
    }

    // optional string alipay_name = 9;
    if (has_alipay_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_name());
    }

    // optional string ip_area = 13;
    if (has_ip_area()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip_area());
    }

    // optional .LoginValidatebox pb_validatebox = 11;
    if (has_pb_validatebox()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pb_validatebox_);
    }

    // optional int32 result = 1 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional int32 guid = 2;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

    // optional int32 game_id = 4;
    if (has_game_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_id());
    }

    // optional bool is_guest = 6;
    if (has_is_guest()) {
      total_size += 1 + 1;
    }

    // optional bool is_validatebox = 10;
    if (has_is_validatebox()) {
      total_size += 1 + 1;
    }

    // optional bool enable_transfer = 14;
    if (has_enable_transfer()) {
      total_size += 1 + 1;
    }

    // optional int32 change_alipay_num = 12;
    if (has_change_alipay_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->change_alipay_num());
    }

    // optional int32 is_first = 15 [default = 2];
    if (has_is_first()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_first());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LC_Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LC_Login)
  GOOGLE_DCHECK_NE(&from, this);
  const LC_Login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LC_Login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LC_Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LC_Login)
    MergeFrom(*source);
  }
}

void LC_Login::MergeFrom(const LC_Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LC_Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_alipay_account();
      alipay_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_alipay_name();
      alipay_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_ip_area();
      ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_pb_validatebox()->::LoginValidatebox::MergeFrom(from.pb_validatebox());
    }
    if (cached_has_bits & 0x00000080u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000200u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000400u) {
      is_guest_ = from.is_guest_;
    }
    if (cached_has_bits & 0x00000800u) {
      is_validatebox_ = from.is_validatebox_;
    }
    if (cached_has_bits & 0x00001000u) {
      enable_transfer_ = from.enable_transfer_;
    }
    if (cached_has_bits & 0x00002000u) {
      change_alipay_num_ = from.change_alipay_num_;
    }
    if (cached_has_bits & 0x00004000u) {
      is_first_ = from.is_first_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LC_Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LC_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LC_Login::CopyFrom(const LC_Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LC_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LC_Login::IsInitialized() const {
  return true;
}

void LC_Login::Swap(LC_Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LC_Login::InternalSwap(LC_Login* other) {
  account_.Swap(&other->account_);
  nickname_.Swap(&other->nickname_);
  password_.Swap(&other->password_);
  alipay_account_.Swap(&other->alipay_account_);
  alipay_name_.Swap(&other->alipay_name_);
  ip_area_.Swap(&other->ip_area_);
  std::swap(pb_validatebox_, other->pb_validatebox_);
  std::swap(result_, other->result_);
  std::swap(guid_, other->guid_);
  std::swap(game_id_, other->game_id_);
  std::swap(is_guest_, other->is_guest_);
  std::swap(is_validatebox_, other->is_validatebox_);
  std::swap(enable_transfer_, other->enable_transfer_);
  std::swap(change_alipay_num_, other->change_alipay_num_);
  std::swap(is_first_, other->is_first_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LC_Login::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LC_Login

// optional int32 result = 1 [default = 0];
bool LC_Login::has_result() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void LC_Login::set_has_result() {
  _has_bits_[0] |= 0x00000080u;
}
void LC_Login::clear_has_result() {
  _has_bits_[0] &= ~0x00000080u;
}
void LC_Login::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 LC_Login::result() const {
  // @@protoc_insertion_point(field_get:LC_Login.result)
  return result_;
}
void LC_Login::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.result)
}

// optional int32 guid = 2;
bool LC_Login::has_guid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void LC_Login::set_has_guid() {
  _has_bits_[0] |= 0x00000100u;
}
void LC_Login::clear_has_guid() {
  _has_bits_[0] &= ~0x00000100u;
}
void LC_Login::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 LC_Login::guid() const {
  // @@protoc_insertion_point(field_get:LC_Login.guid)
  return guid_;
}
void LC_Login::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.guid)
}

// optional string account = 3;
bool LC_Login::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LC_Login::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void LC_Login::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void LC_Login::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& LC_Login::account() const {
  // @@protoc_insertion_point(field_get:LC_Login.account)
  return account_.GetNoArena();
}
void LC_Login::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_Login.account)
}
#if LANG_CXX11
void LC_Login::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_Login.account)
}
#endif
void LC_Login::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_Login.account)
}
void LC_Login::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_Login.account)
}
::std::string* LC_Login::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:LC_Login.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LC_Login::release_account() {
  // @@protoc_insertion_point(field_release:LC_Login.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LC_Login::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:LC_Login.account)
}

// optional int32 game_id = 4;
bool LC_Login::has_game_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void LC_Login::set_has_game_id() {
  _has_bits_[0] |= 0x00000200u;
}
void LC_Login::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000200u;
}
void LC_Login::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
::google::protobuf::int32 LC_Login::game_id() const {
  // @@protoc_insertion_point(field_get:LC_Login.game_id)
  return game_id_;
}
void LC_Login::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.game_id)
}

// optional string nickname = 5;
bool LC_Login::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LC_Login::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
void LC_Login::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void LC_Login::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& LC_Login::nickname() const {
  // @@protoc_insertion_point(field_get:LC_Login.nickname)
  return nickname_.GetNoArena();
}
void LC_Login::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_Login.nickname)
}
#if LANG_CXX11
void LC_Login::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_Login.nickname)
}
#endif
void LC_Login::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_Login.nickname)
}
void LC_Login::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_Login.nickname)
}
::std::string* LC_Login::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:LC_Login.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LC_Login::release_nickname() {
  // @@protoc_insertion_point(field_release:LC_Login.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LC_Login::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:LC_Login.nickname)
}

// optional bool is_guest = 6;
bool LC_Login::has_is_guest() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void LC_Login::set_has_is_guest() {
  _has_bits_[0] |= 0x00000400u;
}
void LC_Login::clear_has_is_guest() {
  _has_bits_[0] &= ~0x00000400u;
}
void LC_Login::clear_is_guest() {
  is_guest_ = false;
  clear_has_is_guest();
}
bool LC_Login::is_guest() const {
  // @@protoc_insertion_point(field_get:LC_Login.is_guest)
  return is_guest_;
}
void LC_Login::set_is_guest(bool value) {
  set_has_is_guest();
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.is_guest)
}

// optional string password = 7;
bool LC_Login::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LC_Login::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
void LC_Login::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
void LC_Login::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& LC_Login::password() const {
  // @@protoc_insertion_point(field_get:LC_Login.password)
  return password_.GetNoArena();
}
void LC_Login::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_Login.password)
}
#if LANG_CXX11
void LC_Login::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_Login.password)
}
#endif
void LC_Login::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_Login.password)
}
void LC_Login::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_Login.password)
}
::std::string* LC_Login::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:LC_Login.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LC_Login::release_password() {
  // @@protoc_insertion_point(field_release:LC_Login.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LC_Login::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:LC_Login.password)
}

// optional string alipay_account = 8;
bool LC_Login::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LC_Login::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000008u;
}
void LC_Login::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000008u;
}
void LC_Login::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
const ::std::string& LC_Login::alipay_account() const {
  // @@protoc_insertion_point(field_get:LC_Login.alipay_account)
  return alipay_account_.GetNoArena();
}
void LC_Login::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_Login.alipay_account)
}
#if LANG_CXX11
void LC_Login::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_Login.alipay_account)
}
#endif
void LC_Login::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_Login.alipay_account)
}
void LC_Login::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_Login.alipay_account)
}
::std::string* LC_Login::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:LC_Login.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LC_Login::release_alipay_account() {
  // @@protoc_insertion_point(field_release:LC_Login.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LC_Login::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:LC_Login.alipay_account)
}

// optional string alipay_name = 9;
bool LC_Login::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LC_Login::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000010u;
}
void LC_Login::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000010u;
}
void LC_Login::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
const ::std::string& LC_Login::alipay_name() const {
  // @@protoc_insertion_point(field_get:LC_Login.alipay_name)
  return alipay_name_.GetNoArena();
}
void LC_Login::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_Login.alipay_name)
}
#if LANG_CXX11
void LC_Login::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_Login.alipay_name)
}
#endif
void LC_Login::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_Login.alipay_name)
}
void LC_Login::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_Login.alipay_name)
}
::std::string* LC_Login::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:LC_Login.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LC_Login::release_alipay_name() {
  // @@protoc_insertion_point(field_release:LC_Login.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LC_Login::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:LC_Login.alipay_name)
}

// optional bool is_validatebox = 10;
bool LC_Login::has_is_validatebox() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void LC_Login::set_has_is_validatebox() {
  _has_bits_[0] |= 0x00000800u;
}
void LC_Login::clear_has_is_validatebox() {
  _has_bits_[0] &= ~0x00000800u;
}
void LC_Login::clear_is_validatebox() {
  is_validatebox_ = false;
  clear_has_is_validatebox();
}
bool LC_Login::is_validatebox() const {
  // @@protoc_insertion_point(field_get:LC_Login.is_validatebox)
  return is_validatebox_;
}
void LC_Login::set_is_validatebox(bool value) {
  set_has_is_validatebox();
  is_validatebox_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.is_validatebox)
}

// optional .LoginValidatebox pb_validatebox = 11;
bool LC_Login::has_pb_validatebox() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void LC_Login::set_has_pb_validatebox() {
  _has_bits_[0] |= 0x00000040u;
}
void LC_Login::clear_has_pb_validatebox() {
  _has_bits_[0] &= ~0x00000040u;
}
void LC_Login::clear_pb_validatebox() {
  if (pb_validatebox_ != NULL) pb_validatebox_->::LoginValidatebox::Clear();
  clear_has_pb_validatebox();
}
const ::LoginValidatebox& LC_Login::pb_validatebox() const {
  // @@protoc_insertion_point(field_get:LC_Login.pb_validatebox)
  return pb_validatebox_ != NULL ? *pb_validatebox_
                         : *::LoginValidatebox::internal_default_instance();
}
::LoginValidatebox* LC_Login::mutable_pb_validatebox() {
  set_has_pb_validatebox();
  if (pb_validatebox_ == NULL) {
    pb_validatebox_ = new ::LoginValidatebox;
  }
  // @@protoc_insertion_point(field_mutable:LC_Login.pb_validatebox)
  return pb_validatebox_;
}
::LoginValidatebox* LC_Login::release_pb_validatebox() {
  // @@protoc_insertion_point(field_release:LC_Login.pb_validatebox)
  clear_has_pb_validatebox();
  ::LoginValidatebox* temp = pb_validatebox_;
  pb_validatebox_ = NULL;
  return temp;
}
void LC_Login::set_allocated_pb_validatebox(::LoginValidatebox* pb_validatebox) {
  delete pb_validatebox_;
  pb_validatebox_ = pb_validatebox;
  if (pb_validatebox) {
    set_has_pb_validatebox();
  } else {
    clear_has_pb_validatebox();
  }
  // @@protoc_insertion_point(field_set_allocated:LC_Login.pb_validatebox)
}

// optional int32 change_alipay_num = 12;
bool LC_Login::has_change_alipay_num() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void LC_Login::set_has_change_alipay_num() {
  _has_bits_[0] |= 0x00002000u;
}
void LC_Login::clear_has_change_alipay_num() {
  _has_bits_[0] &= ~0x00002000u;
}
void LC_Login::clear_change_alipay_num() {
  change_alipay_num_ = 0;
  clear_has_change_alipay_num();
}
::google::protobuf::int32 LC_Login::change_alipay_num() const {
  // @@protoc_insertion_point(field_get:LC_Login.change_alipay_num)
  return change_alipay_num_;
}
void LC_Login::set_change_alipay_num(::google::protobuf::int32 value) {
  set_has_change_alipay_num();
  change_alipay_num_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.change_alipay_num)
}

// optional string ip_area = 13;
bool LC_Login::has_ip_area() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LC_Login::set_has_ip_area() {
  _has_bits_[0] |= 0x00000020u;
}
void LC_Login::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000020u;
}
void LC_Login::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
const ::std::string& LC_Login::ip_area() const {
  // @@protoc_insertion_point(field_get:LC_Login.ip_area)
  return ip_area_.GetNoArena();
}
void LC_Login::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_Login.ip_area)
}
#if LANG_CXX11
void LC_Login::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_Login.ip_area)
}
#endif
void LC_Login::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_Login.ip_area)
}
void LC_Login::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_Login.ip_area)
}
::std::string* LC_Login::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:LC_Login.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LC_Login::release_ip_area() {
  // @@protoc_insertion_point(field_release:LC_Login.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LC_Login::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:LC_Login.ip_area)
}

// optional bool enable_transfer = 14;
bool LC_Login::has_enable_transfer() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void LC_Login::set_has_enable_transfer() {
  _has_bits_[0] |= 0x00001000u;
}
void LC_Login::clear_has_enable_transfer() {
  _has_bits_[0] &= ~0x00001000u;
}
void LC_Login::clear_enable_transfer() {
  enable_transfer_ = false;
  clear_has_enable_transfer();
}
bool LC_Login::enable_transfer() const {
  // @@protoc_insertion_point(field_get:LC_Login.enable_transfer)
  return enable_transfer_;
}
void LC_Login::set_enable_transfer(bool value) {
  set_has_enable_transfer();
  enable_transfer_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.enable_transfer)
}

// optional int32 is_first = 15 [default = 2];
bool LC_Login::has_is_first() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void LC_Login::set_has_is_first() {
  _has_bits_[0] |= 0x00004000u;
}
void LC_Login::clear_has_is_first() {
  _has_bits_[0] &= ~0x00004000u;
}
void LC_Login::clear_is_first() {
  is_first_ = 2;
  clear_has_is_first();
}
::google::protobuf::int32 LC_Login::is_first() const {
  // @@protoc_insertion_point(field_get:LC_Login.is_first)
  return is_first_;
}
void LC_Login::set_is_first(::google::protobuf::int32 value) {
  set_has_is_first();
  is_first_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.is_first)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CL_LoginBySms::kAccountFieldNumber;
const int CL_LoginBySms::kSmsNoFieldNumber;
const int CL_LoginBySms::kPhoneFieldNumber;
const int CL_LoginBySms::kPhoneTypeFieldNumber;
const int CL_LoginBySms::kVersionFieldNumber;
const int CL_LoginBySms::kChannelIdFieldNumber;
const int CL_LoginBySms::kPackageNameFieldNumber;
const int CL_LoginBySms::kImeiFieldNumber;
const int CL_LoginBySms::kIpFieldNumber;
const int CL_LoginBySms::kIpAreaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CL_LoginBySms::CL_LoginBySms()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CL_LoginBySms)
}
CL_LoginBySms::CL_LoginBySms(const CL_LoginBySms& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  sms_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sms_no()) {
    sms_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sms_no_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phone()) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  phone_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phone_type()) {
    phone_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_type_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel_id()) {
    channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
  }
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_package_name()) {
    package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
  }
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_imei()) {
    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip_area()) {
    ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
  }
  // @@protoc_insertion_point(copy_constructor:CL_LoginBySms)
}

void CL_LoginBySms::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sms_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CL_LoginBySms::~CL_LoginBySms() {
  // @@protoc_insertion_point(destructor:CL_LoginBySms)
  SharedDtor();
}

void CL_LoginBySms::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sms_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CL_LoginBySms::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CL_LoginBySms::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CL_LoginBySms& CL_LoginBySms::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CL_LoginBySms* CL_LoginBySms::New(::google::protobuf::Arena* arena) const {
  CL_LoginBySms* n = new CL_LoginBySms;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CL_LoginBySms::Clear() {
// @@protoc_insertion_point(message_clear_start:CL_LoginBySms)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_sms_no()) {
      GOOGLE_DCHECK(!sms_no_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sms_no_.UnsafeRawStringPointer())->clear();
    }
    if (has_phone()) {
      GOOGLE_DCHECK(!phone_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phone_.UnsafeRawStringPointer())->clear();
    }
    if (has_phone_type()) {
      GOOGLE_DCHECK(!phone_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phone_type_.UnsafeRawStringPointer())->clear();
    }
    if (has_version()) {
      GOOGLE_DCHECK(!version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*version_.UnsafeRawStringPointer())->clear();
    }
    if (has_channel_id()) {
      GOOGLE_DCHECK(!channel_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*channel_id_.UnsafeRawStringPointer())->clear();
    }
    if (has_package_name()) {
      GOOGLE_DCHECK(!package_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*package_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_imei()) {
      GOOGLE_DCHECK(!imei_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*imei_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_ip()) {
      GOOGLE_DCHECK(!ip_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ip_.UnsafeRawStringPointer())->clear();
    }
    if (has_ip_area()) {
      GOOGLE_DCHECK(!ip_area_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ip_area_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CL_LoginBySms::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CL_LoginBySms)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_LoginBySms.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sms_no = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sms_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sms_no().data(), this->sms_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_LoginBySms.sms_no");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phone = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_LoginBySms.phone");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phone_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phone_type().data(), this->phone_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_LoginBySms.phone_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_LoginBySms.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel_id().data(), this->channel_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_LoginBySms.channel_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string package_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package_name().data(), this->package_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_LoginBySms.package_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string imei = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->imei().data(), this->imei().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_LoginBySms.imei");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_LoginBySms.ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip_area = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_area()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip_area().data(), this->ip_area().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_LoginBySms.ip_area");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CL_LoginBySms)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CL_LoginBySms)
  return false;
#undef DO_
}

void CL_LoginBySms::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CL_LoginBySms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string sms_no = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sms_no().data(), this->sms_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.sms_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sms_no(), output);
  }

  // optional string phone = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phone(), output);
  }

  // optional string phone_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone_type().data(), this->phone_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.phone_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->phone_type(), output);
  }

  // optional string version = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->version(), output);
  }

  // optional string channel_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_id().data(), this->channel_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.channel_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->channel_id(), output);
  }

  // optional string package_name = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), this->package_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.package_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->package_name(), output);
  }

  // optional string imei = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), this->imei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->imei(), output);
  }

  // optional string ip = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->ip(), output);
  }

  // optional string ip_area = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.ip_area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->ip_area(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CL_LoginBySms)
}

::google::protobuf::uint8* CL_LoginBySms::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CL_LoginBySms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string sms_no = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sms_no().data(), this->sms_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.sms_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sms_no(), target);
  }

  // optional string phone = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phone(), target);
  }

  // optional string phone_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone_type().data(), this->phone_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.phone_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->phone_type(), target);
  }

  // optional string version = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->version(), target);
  }

  // optional string channel_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_id().data(), this->channel_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.channel_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->channel_id(), target);
  }

  // optional string package_name = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package_name().data(), this->package_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.package_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->package_name(), target);
  }

  // optional string imei = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imei().data(), this->imei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->imei(), target);
  }

  // optional string ip = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->ip(), target);
  }

  // optional string ip_area = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_LoginBySms.ip_area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->ip_area(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CL_LoginBySms)
  return target;
}

size_t CL_LoginBySms::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CL_LoginBySms)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string sms_no = 2;
    if (has_sms_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sms_no());
    }

    // optional string phone = 3;
    if (has_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone());
    }

    // optional string phone_type = 4;
    if (has_phone_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone_type());
    }

    // optional string version = 5;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional string channel_id = 6;
    if (has_channel_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel_id());
    }

    // optional string package_name = 7;
    if (has_package_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->package_name());
    }

    // optional string imei = 8;
    if (has_imei()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imei());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional string ip = 9;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // optional string ip_area = 10;
    if (has_ip_area()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip_area());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CL_LoginBySms::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CL_LoginBySms)
  GOOGLE_DCHECK_NE(&from, this);
  const CL_LoginBySms* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CL_LoginBySms>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CL_LoginBySms)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CL_LoginBySms)
    MergeFrom(*source);
  }
}

void CL_LoginBySms::MergeFrom(const CL_LoginBySms& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CL_LoginBySms)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sms_no();
      sms_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sms_no_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_phone();
      phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_phone_type();
      phone_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_type_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_channel_id();
      channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_package_name();
      package_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_name_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_imei();
      imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
    }
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_ip_area();
      ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
    }
  }
}

void CL_LoginBySms::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CL_LoginBySms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CL_LoginBySms::CopyFrom(const CL_LoginBySms& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CL_LoginBySms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CL_LoginBySms::IsInitialized() const {
  return true;
}

void CL_LoginBySms::Swap(CL_LoginBySms* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CL_LoginBySms::InternalSwap(CL_LoginBySms* other) {
  account_.Swap(&other->account_);
  sms_no_.Swap(&other->sms_no_);
  phone_.Swap(&other->phone_);
  phone_type_.Swap(&other->phone_type_);
  version_.Swap(&other->version_);
  channel_id_.Swap(&other->channel_id_);
  package_name_.Swap(&other->package_name_);
  imei_.Swap(&other->imei_);
  ip_.Swap(&other->ip_);
  ip_area_.Swap(&other->ip_area_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CL_LoginBySms::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CL_LoginBySms

// optional string account = 1;
bool CL_LoginBySms::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CL_LoginBySms::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void CL_LoginBySms::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void CL_LoginBySms::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& CL_LoginBySms::account() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.account)
  return account_.GetNoArena();
}
void CL_LoginBySms::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.account)
}
#if LANG_CXX11
void CL_LoginBySms::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.account)
}
#endif
void CL_LoginBySms::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.account)
}
void CL_LoginBySms::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.account)
}
::std::string* CL_LoginBySms::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_LoginBySms::release_account() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_LoginBySms::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.account)
}

// optional string sms_no = 2;
bool CL_LoginBySms::has_sms_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CL_LoginBySms::set_has_sms_no() {
  _has_bits_[0] |= 0x00000002u;
}
void CL_LoginBySms::clear_has_sms_no() {
  _has_bits_[0] &= ~0x00000002u;
}
void CL_LoginBySms::clear_sms_no() {
  sms_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sms_no();
}
const ::std::string& CL_LoginBySms::sms_no() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.sms_no)
  return sms_no_.GetNoArena();
}
void CL_LoginBySms::set_sms_no(const ::std::string& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.sms_no)
}
#if LANG_CXX11
void CL_LoginBySms::set_sms_no(::std::string&& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.sms_no)
}
#endif
void CL_LoginBySms::set_sms_no(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.sms_no)
}
void CL_LoginBySms::set_sms_no(const char* value, size_t size) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.sms_no)
}
::std::string* CL_LoginBySms::mutable_sms_no() {
  set_has_sms_no();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.sms_no)
  return sms_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_LoginBySms::release_sms_no() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.sms_no)
  clear_has_sms_no();
  return sms_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_LoginBySms::set_allocated_sms_no(::std::string* sms_no) {
  if (sms_no != NULL) {
    set_has_sms_no();
  } else {
    clear_has_sms_no();
  }
  sms_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sms_no);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.sms_no)
}

// optional string phone = 3;
bool CL_LoginBySms::has_phone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CL_LoginBySms::set_has_phone() {
  _has_bits_[0] |= 0x00000004u;
}
void CL_LoginBySms::clear_has_phone() {
  _has_bits_[0] &= ~0x00000004u;
}
void CL_LoginBySms::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
const ::std::string& CL_LoginBySms::phone() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.phone)
  return phone_.GetNoArena();
}
void CL_LoginBySms::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.phone)
}
#if LANG_CXX11
void CL_LoginBySms::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.phone)
}
#endif
void CL_LoginBySms::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.phone)
}
void CL_LoginBySms::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.phone)
}
::std::string* CL_LoginBySms::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_LoginBySms::release_phone() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_LoginBySms::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.phone)
}

// optional string phone_type = 4;
bool CL_LoginBySms::has_phone_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CL_LoginBySms::set_has_phone_type() {
  _has_bits_[0] |= 0x00000008u;
}
void CL_LoginBySms::clear_has_phone_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void CL_LoginBySms::clear_phone_type() {
  phone_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_type();
}
const ::std::string& CL_LoginBySms::phone_type() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.phone_type)
  return phone_type_.GetNoArena();
}
void CL_LoginBySms::set_phone_type(const ::std::string& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.phone_type)
}
#if LANG_CXX11
void CL_LoginBySms::set_phone_type(::std::string&& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.phone_type)
}
#endif
void CL_LoginBySms::set_phone_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.phone_type)
}
void CL_LoginBySms::set_phone_type(const char* value, size_t size) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.phone_type)
}
::std::string* CL_LoginBySms::mutable_phone_type() {
  set_has_phone_type();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.phone_type)
  return phone_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_LoginBySms::release_phone_type() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.phone_type)
  clear_has_phone_type();
  return phone_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_LoginBySms::set_allocated_phone_type(::std::string* phone_type) {
  if (phone_type != NULL) {
    set_has_phone_type();
  } else {
    clear_has_phone_type();
  }
  phone_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_type);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.phone_type)
}

// optional string version = 5;
bool CL_LoginBySms::has_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CL_LoginBySms::set_has_version() {
  _has_bits_[0] |= 0x00000010u;
}
void CL_LoginBySms::clear_has_version() {
  _has_bits_[0] &= ~0x00000010u;
}
void CL_LoginBySms::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
const ::std::string& CL_LoginBySms::version() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.version)
  return version_.GetNoArena();
}
void CL_LoginBySms::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.version)
}
#if LANG_CXX11
void CL_LoginBySms::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.version)
}
#endif
void CL_LoginBySms::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.version)
}
void CL_LoginBySms::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.version)
}
::std::string* CL_LoginBySms::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_LoginBySms::release_version() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_LoginBySms::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.version)
}

// optional string channel_id = 6;
bool CL_LoginBySms::has_channel_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CL_LoginBySms::set_has_channel_id() {
  _has_bits_[0] |= 0x00000020u;
}
void CL_LoginBySms::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void CL_LoginBySms::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
const ::std::string& CL_LoginBySms::channel_id() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.channel_id)
  return channel_id_.GetNoArena();
}
void CL_LoginBySms::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.channel_id)
}
#if LANG_CXX11
void CL_LoginBySms::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.channel_id)
}
#endif
void CL_LoginBySms::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.channel_id)
}
void CL_LoginBySms::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.channel_id)
}
::std::string* CL_LoginBySms::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_LoginBySms::release_channel_id() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_LoginBySms::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.channel_id)
}

// optional string package_name = 7;
bool CL_LoginBySms::has_package_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CL_LoginBySms::set_has_package_name() {
  _has_bits_[0] |= 0x00000040u;
}
void CL_LoginBySms::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000040u;
}
void CL_LoginBySms::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
const ::std::string& CL_LoginBySms::package_name() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.package_name)
  return package_name_.GetNoArena();
}
void CL_LoginBySms::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.package_name)
}
#if LANG_CXX11
void CL_LoginBySms::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.package_name)
}
#endif
void CL_LoginBySms::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.package_name)
}
void CL_LoginBySms::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.package_name)
}
::std::string* CL_LoginBySms::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_LoginBySms::release_package_name() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_LoginBySms::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.package_name)
}

// optional string imei = 8;
bool CL_LoginBySms::has_imei() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CL_LoginBySms::set_has_imei() {
  _has_bits_[0] |= 0x00000080u;
}
void CL_LoginBySms::clear_has_imei() {
  _has_bits_[0] &= ~0x00000080u;
}
void CL_LoginBySms::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
const ::std::string& CL_LoginBySms::imei() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.imei)
  return imei_.GetNoArena();
}
void CL_LoginBySms::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.imei)
}
#if LANG_CXX11
void CL_LoginBySms::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.imei)
}
#endif
void CL_LoginBySms::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.imei)
}
void CL_LoginBySms::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.imei)
}
::std::string* CL_LoginBySms::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_LoginBySms::release_imei() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_LoginBySms::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.imei)
}

// optional string ip = 9;
bool CL_LoginBySms::has_ip() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CL_LoginBySms::set_has_ip() {
  _has_bits_[0] |= 0x00000100u;
}
void CL_LoginBySms::clear_has_ip() {
  _has_bits_[0] &= ~0x00000100u;
}
void CL_LoginBySms::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
const ::std::string& CL_LoginBySms::ip() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.ip)
  return ip_.GetNoArena();
}
void CL_LoginBySms::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.ip)
}
#if LANG_CXX11
void CL_LoginBySms::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.ip)
}
#endif
void CL_LoginBySms::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.ip)
}
void CL_LoginBySms::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.ip)
}
::std::string* CL_LoginBySms::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_LoginBySms::release_ip() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_LoginBySms::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.ip)
}

// optional string ip_area = 10;
bool CL_LoginBySms::has_ip_area() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CL_LoginBySms::set_has_ip_area() {
  _has_bits_[0] |= 0x00000200u;
}
void CL_LoginBySms::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000200u;
}
void CL_LoginBySms::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
const ::std::string& CL_LoginBySms::ip_area() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.ip_area)
  return ip_area_.GetNoArena();
}
void CL_LoginBySms::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.ip_area)
}
#if LANG_CXX11
void CL_LoginBySms::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.ip_area)
}
#endif
void CL_LoginBySms::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.ip_area)
}
void CL_LoginBySms::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.ip_area)
}
::std::string* CL_LoginBySms::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_LoginBySms::release_ip_area() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_LoginBySms::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.ip_area)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_KickClient::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_KickClient::SC_KickClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_KickClient)
}
SC_KickClient::SC_KickClient(const SC_KickClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SC_KickClient)
}

void SC_KickClient::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
}

SC_KickClient::~SC_KickClient() {
  // @@protoc_insertion_point(destructor:SC_KickClient)
  SharedDtor();
}

void SC_KickClient::SharedDtor() {
}

void SC_KickClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_KickClient::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_KickClient& SC_KickClient::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_KickClient* SC_KickClient::New(::google::protobuf::Arena* arena) const {
  SC_KickClient* n = new SC_KickClient;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_KickClient::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_KickClient)
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_KickClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_KickClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_KickClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_KickClient)
  return false;
#undef DO_
}

void SC_KickClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_KickClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_KickClient)
}

::google::protobuf::uint8* SC_KickClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_KickClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_KickClient)
  return target;
}

size_t SC_KickClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_KickClient)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_KickClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_KickClient)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_KickClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_KickClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_KickClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_KickClient)
    MergeFrom(*source);
  }
}

void SC_KickClient::MergeFrom(const SC_KickClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_KickClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void SC_KickClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_KickClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_KickClient::CopyFrom(const SC_KickClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_KickClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_KickClient::IsInitialized() const {
  return true;
}

void SC_KickClient::Swap(SC_KickClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_KickClient::InternalSwap(SC_KickClient* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_KickClient::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_KickClient

// optional int32 result = 1;
bool SC_KickClient::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_KickClient::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_KickClient::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_KickClient::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_KickClient::result() const {
  // @@protoc_insertion_point(field_get:SC_KickClient.result)
  return result_;
}
void SC_KickClient::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_KickClient.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CL_LoginAll::kTypeFieldNumber;
const int CL_LoginAll::kRegFieldNumber;
const int CL_LoginAll::kLoginFieldNumber;
const int CL_LoginAll::kSmsFieldNumber;
const int CL_LoginAll::kGateIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CL_LoginAll::CL_LoginAll()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CL_LoginAll)
}
CL_LoginAll::CL_LoginAll(const CL_LoginAll& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_reg()) {
    reg_ = new ::CL_RegAccount(*from.reg_);
  } else {
    reg_ = NULL;
  }
  if (from.has_login()) {
    login_ = new ::CL_Login(*from.login_);
  } else {
    login_ = NULL;
  }
  if (from.has_sms()) {
    sms_ = new ::CL_LoginBySms(*from.sms_);
  } else {
    sms_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&gate_id_) -
    reinterpret_cast<char*>(&type_) + sizeof(gate_id_));
  // @@protoc_insertion_point(copy_constructor:CL_LoginAll)
}

void CL_LoginAll::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&reg_, 0, reinterpret_cast<char*>(&gate_id_) -
    reinterpret_cast<char*>(&reg_) + sizeof(gate_id_));
}

CL_LoginAll::~CL_LoginAll() {
  // @@protoc_insertion_point(destructor:CL_LoginAll)
  SharedDtor();
}

void CL_LoginAll::SharedDtor() {
  if (this != internal_default_instance()) {
    delete reg_;
  }
  if (this != internal_default_instance()) {
    delete login_;
  }
  if (this != internal_default_instance()) {
    delete sms_;
  }
}

void CL_LoginAll::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CL_LoginAll::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CL_LoginAll& CL_LoginAll::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CL_LoginAll* CL_LoginAll::New(::google::protobuf::Arena* arena) const {
  CL_LoginAll* n = new CL_LoginAll;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CL_LoginAll::Clear() {
// @@protoc_insertion_point(message_clear_start:CL_LoginAll)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_reg()) {
      GOOGLE_DCHECK(reg_ != NULL);
      reg_->::CL_RegAccount::Clear();
    }
    if (has_login()) {
      GOOGLE_DCHECK(login_ != NULL);
      login_->::CL_Login::Clear();
    }
    if (has_sms()) {
      GOOGLE_DCHECK(sms_ != NULL);
      sms_->::CL_LoginBySms::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&type_, 0, reinterpret_cast<char*>(&gate_id_) -
      reinterpret_cast<char*>(&type_) + sizeof(gate_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CL_LoginAll::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CL_LoginAll)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CL_RegAccount reg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CL_Login login = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_login()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CL_LoginBySms sms = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gate_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_gate_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gate_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CL_LoginAll)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CL_LoginAll)
  return false;
#undef DO_
}

void CL_LoginAll::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CL_LoginAll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional .CL_RegAccount reg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->reg_, output);
  }

  // optional .CL_Login login = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->login_, output);
  }

  // optional .CL_LoginBySms sms = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->sms_, output);
  }

  // optional int32 gate_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gate_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CL_LoginAll)
}

::google::protobuf::uint8* CL_LoginAll::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CL_LoginAll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional .CL_RegAccount reg = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->reg_, deterministic, target);
  }

  // optional .CL_Login login = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->login_, deterministic, target);
  }

  // optional .CL_LoginBySms sms = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->sms_, deterministic, target);
  }

  // optional int32 gate_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gate_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CL_LoginAll)
  return target;
}

size_t CL_LoginAll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CL_LoginAll)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .CL_RegAccount reg = 2;
    if (has_reg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->reg_);
    }

    // optional .CL_Login login = 3;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->login_);
    }

    // optional .CL_LoginBySms sms = 4;
    if (has_sms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->sms_);
    }

    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 gate_id = 5;
    if (has_gate_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gate_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CL_LoginAll::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CL_LoginAll)
  GOOGLE_DCHECK_NE(&from, this);
  const CL_LoginAll* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CL_LoginAll>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CL_LoginAll)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CL_LoginAll)
    MergeFrom(*source);
  }
}

void CL_LoginAll::MergeFrom(const CL_LoginAll& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CL_LoginAll)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_reg()->::CL_RegAccount::MergeFrom(from.reg());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_login()->::CL_Login::MergeFrom(from.login());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_sms()->::CL_LoginBySms::MergeFrom(from.sms());
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      gate_id_ = from.gate_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CL_LoginAll::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CL_LoginAll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CL_LoginAll::CopyFrom(const CL_LoginAll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CL_LoginAll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CL_LoginAll::IsInitialized() const {
  return true;
}

void CL_LoginAll::Swap(CL_LoginAll* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CL_LoginAll::InternalSwap(CL_LoginAll* other) {
  std::swap(reg_, other->reg_);
  std::swap(login_, other->login_);
  std::swap(sms_, other->sms_);
  std::swap(type_, other->type_);
  std::swap(gate_id_, other->gate_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CL_LoginAll::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CL_LoginAll

// optional int32 type = 1;
bool CL_LoginAll::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CL_LoginAll::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
void CL_LoginAll::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void CL_LoginAll::clear_type() {
  type_ = 0;
  clear_has_type();
}
::google::protobuf::int32 CL_LoginAll::type() const {
  // @@protoc_insertion_point(field_get:CL_LoginAll.type)
  return type_;
}
void CL_LoginAll::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CL_LoginAll.type)
}

// optional .CL_RegAccount reg = 2;
bool CL_LoginAll::has_reg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CL_LoginAll::set_has_reg() {
  _has_bits_[0] |= 0x00000001u;
}
void CL_LoginAll::clear_has_reg() {
  _has_bits_[0] &= ~0x00000001u;
}
void CL_LoginAll::clear_reg() {
  if (reg_ != NULL) reg_->::CL_RegAccount::Clear();
  clear_has_reg();
}
const ::CL_RegAccount& CL_LoginAll::reg() const {
  // @@protoc_insertion_point(field_get:CL_LoginAll.reg)
  return reg_ != NULL ? *reg_
                         : *::CL_RegAccount::internal_default_instance();
}
::CL_RegAccount* CL_LoginAll::mutable_reg() {
  set_has_reg();
  if (reg_ == NULL) {
    reg_ = new ::CL_RegAccount;
  }
  // @@protoc_insertion_point(field_mutable:CL_LoginAll.reg)
  return reg_;
}
::CL_RegAccount* CL_LoginAll::release_reg() {
  // @@protoc_insertion_point(field_release:CL_LoginAll.reg)
  clear_has_reg();
  ::CL_RegAccount* temp = reg_;
  reg_ = NULL;
  return temp;
}
void CL_LoginAll::set_allocated_reg(::CL_RegAccount* reg) {
  delete reg_;
  reg_ = reg;
  if (reg) {
    set_has_reg();
  } else {
    clear_has_reg();
  }
  // @@protoc_insertion_point(field_set_allocated:CL_LoginAll.reg)
}

// optional .CL_Login login = 3;
bool CL_LoginAll::has_login() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CL_LoginAll::set_has_login() {
  _has_bits_[0] |= 0x00000002u;
}
void CL_LoginAll::clear_has_login() {
  _has_bits_[0] &= ~0x00000002u;
}
void CL_LoginAll::clear_login() {
  if (login_ != NULL) login_->::CL_Login::Clear();
  clear_has_login();
}
const ::CL_Login& CL_LoginAll::login() const {
  // @@protoc_insertion_point(field_get:CL_LoginAll.login)
  return login_ != NULL ? *login_
                         : *::CL_Login::internal_default_instance();
}
::CL_Login* CL_LoginAll::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::CL_Login;
  }
  // @@protoc_insertion_point(field_mutable:CL_LoginAll.login)
  return login_;
}
::CL_Login* CL_LoginAll::release_login() {
  // @@protoc_insertion_point(field_release:CL_LoginAll.login)
  clear_has_login();
  ::CL_Login* temp = login_;
  login_ = NULL;
  return temp;
}
void CL_LoginAll::set_allocated_login(::CL_Login* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:CL_LoginAll.login)
}

// optional .CL_LoginBySms sms = 4;
bool CL_LoginAll::has_sms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CL_LoginAll::set_has_sms() {
  _has_bits_[0] |= 0x00000004u;
}
void CL_LoginAll::clear_has_sms() {
  _has_bits_[0] &= ~0x00000004u;
}
void CL_LoginAll::clear_sms() {
  if (sms_ != NULL) sms_->::CL_LoginBySms::Clear();
  clear_has_sms();
}
const ::CL_LoginBySms& CL_LoginAll::sms() const {
  // @@protoc_insertion_point(field_get:CL_LoginAll.sms)
  return sms_ != NULL ? *sms_
                         : *::CL_LoginBySms::internal_default_instance();
}
::CL_LoginBySms* CL_LoginAll::mutable_sms() {
  set_has_sms();
  if (sms_ == NULL) {
    sms_ = new ::CL_LoginBySms;
  }
  // @@protoc_insertion_point(field_mutable:CL_LoginAll.sms)
  return sms_;
}
::CL_LoginBySms* CL_LoginAll::release_sms() {
  // @@protoc_insertion_point(field_release:CL_LoginAll.sms)
  clear_has_sms();
  ::CL_LoginBySms* temp = sms_;
  sms_ = NULL;
  return temp;
}
void CL_LoginAll::set_allocated_sms(::CL_LoginBySms* sms) {
  delete sms_;
  sms_ = sms;
  if (sms) {
    set_has_sms();
  } else {
    clear_has_sms();
  }
  // @@protoc_insertion_point(field_set_allocated:CL_LoginAll.sms)
}

// optional int32 gate_id = 5;
bool CL_LoginAll::has_gate_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CL_LoginAll::set_has_gate_id() {
  _has_bits_[0] |= 0x00000010u;
}
void CL_LoginAll::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void CL_LoginAll::clear_gate_id() {
  gate_id_ = 0;
  clear_has_gate_id();
}
::google::protobuf::int32 CL_LoginAll::gate_id() const {
  // @@protoc_insertion_point(field_get:CL_LoginAll.gate_id)
  return gate_id_;
}
void CL_LoginAll::set_gate_id(::google::protobuf::int32 value) {
  set_has_gate_id();
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:CL_LoginAll.gate_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_RequestSms::kTelFieldNumber;
const int CS_RequestSms::kIntentionFieldNumber;
const int CS_RequestSms::kGateSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_RequestSms::CS_RequestSms()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_RequestSms)
}
CS_RequestSms::CS_RequestSms(const CS_RequestSms& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tel()) {
    tel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tel_);
  }
  ::memcpy(&intention_, &from.intention_,
    reinterpret_cast<char*>(&gate_session_id_) -
    reinterpret_cast<char*>(&intention_) + sizeof(gate_session_id_));
  // @@protoc_insertion_point(copy_constructor:CS_RequestSms)
}

void CS_RequestSms::SharedCtor() {
  _cached_size_ = 0;
  tel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&intention_, 0, reinterpret_cast<char*>(&gate_session_id_) -
    reinterpret_cast<char*>(&intention_) + sizeof(gate_session_id_));
}

CS_RequestSms::~CS_RequestSms() {
  // @@protoc_insertion_point(destructor:CS_RequestSms)
  SharedDtor();
}

void CS_RequestSms::SharedDtor() {
  tel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_RequestSms::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_RequestSms::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_RequestSms& CS_RequestSms::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_RequestSms* CS_RequestSms::New(::google::protobuf::Arena* arena) const {
  CS_RequestSms* n = new CS_RequestSms;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_RequestSms::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_RequestSms)
  if (has_tel()) {
    GOOGLE_DCHECK(!tel_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*tel_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&intention_, 0, reinterpret_cast<char*>(&gate_session_id_) -
      reinterpret_cast<char*>(&intention_) + sizeof(gate_session_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_RequestSms::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_RequestSms)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string tel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tel().data(), this->tel().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_RequestSms.tel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 intention = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_intention();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intention_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gate_session_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_gate_session_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gate_session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_RequestSms)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_RequestSms)
  return false;
#undef DO_
}

void CS_RequestSms::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_RequestSms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string tel = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tel().data(), this->tel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_RequestSms.tel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tel(), output);
  }

  // optional int32 intention = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->intention(), output);
  }

  // optional int32 gate_session_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gate_session_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_RequestSms)
}

::google::protobuf::uint8* CS_RequestSms::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_RequestSms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string tel = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tel().data(), this->tel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_RequestSms.tel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tel(), target);
  }

  // optional int32 intention = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->intention(), target);
  }

  // optional int32 gate_session_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gate_session_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_RequestSms)
  return target;
}

size_t CS_RequestSms::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_RequestSms)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string tel = 1;
    if (has_tel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tel());
    }

    // optional int32 intention = 2;
    if (has_intention()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->intention());
    }

    // optional int32 gate_session_id = 3;
    if (has_gate_session_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gate_session_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_RequestSms::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_RequestSms)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_RequestSms* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_RequestSms>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_RequestSms)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_RequestSms)
    MergeFrom(*source);
  }
}

void CS_RequestSms::MergeFrom(const CS_RequestSms& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_RequestSms)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tel();
      tel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tel_);
    }
    if (cached_has_bits & 0x00000002u) {
      intention_ = from.intention_;
    }
    if (cached_has_bits & 0x00000004u) {
      gate_session_id_ = from.gate_session_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CS_RequestSms::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_RequestSms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_RequestSms::CopyFrom(const CS_RequestSms& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_RequestSms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_RequestSms::IsInitialized() const {
  return true;
}

void CS_RequestSms::Swap(CS_RequestSms* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_RequestSms::InternalSwap(CS_RequestSms* other) {
  tel_.Swap(&other->tel_);
  std::swap(intention_, other->intention_);
  std::swap(gate_session_id_, other->gate_session_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_RequestSms::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_RequestSms

// optional string tel = 1;
bool CS_RequestSms::has_tel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_RequestSms::set_has_tel() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_RequestSms::clear_has_tel() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_RequestSms::clear_tel() {
  tel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tel();
}
const ::std::string& CS_RequestSms::tel() const {
  // @@protoc_insertion_point(field_get:CS_RequestSms.tel)
  return tel_.GetNoArena();
}
void CS_RequestSms::set_tel(const ::std::string& value) {
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_RequestSms.tel)
}
#if LANG_CXX11
void CS_RequestSms::set_tel(::std::string&& value) {
  set_has_tel();
  tel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_RequestSms.tel)
}
#endif
void CS_RequestSms::set_tel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_RequestSms.tel)
}
void CS_RequestSms::set_tel(const char* value, size_t size) {
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_RequestSms.tel)
}
::std::string* CS_RequestSms::mutable_tel() {
  set_has_tel();
  // @@protoc_insertion_point(field_mutable:CS_RequestSms.tel)
  return tel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_RequestSms::release_tel() {
  // @@protoc_insertion_point(field_release:CS_RequestSms.tel)
  clear_has_tel();
  return tel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_RequestSms::set_allocated_tel(::std::string* tel) {
  if (tel != NULL) {
    set_has_tel();
  } else {
    clear_has_tel();
  }
  tel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tel);
  // @@protoc_insertion_point(field_set_allocated:CS_RequestSms.tel)
}

// optional int32 intention = 2;
bool CS_RequestSms::has_intention() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_RequestSms::set_has_intention() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_RequestSms::clear_has_intention() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_RequestSms::clear_intention() {
  intention_ = 0;
  clear_has_intention();
}
::google::protobuf::int32 CS_RequestSms::intention() const {
  // @@protoc_insertion_point(field_get:CS_RequestSms.intention)
  return intention_;
}
void CS_RequestSms::set_intention(::google::protobuf::int32 value) {
  set_has_intention();
  intention_ = value;
  // @@protoc_insertion_point(field_set:CS_RequestSms.intention)
}

// optional int32 gate_session_id = 3;
bool CS_RequestSms::has_gate_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CS_RequestSms::set_has_gate_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CS_RequestSms::clear_has_gate_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CS_RequestSms::clear_gate_session_id() {
  gate_session_id_ = 0;
  clear_has_gate_session_id();
}
::google::protobuf::int32 CS_RequestSms::gate_session_id() const {
  // @@protoc_insertion_point(field_get:CS_RequestSms.gate_session_id)
  return gate_session_id_;
}
void CS_RequestSms::set_gate_session_id(::google::protobuf::int32 value) {
  set_has_gate_session_id();
  gate_session_id_ = value;
  // @@protoc_insertion_point(field_set:CS_RequestSms.gate_session_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_RequestSms::kResultFieldNumber;
const int SC_RequestSms::kSmsNoFieldNumber;
const int SC_RequestSms::kTelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_RequestSms::SC_RequestSms()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_RequestSms)
}
SC_RequestSms::SC_RequestSms(const SC_RequestSms& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sms_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sms_no()) {
    sms_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sms_no_);
  }
  tel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tel()) {
    tel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tel_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SC_RequestSms)
}

void SC_RequestSms::SharedCtor() {
  _cached_size_ = 0;
  sms_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

SC_RequestSms::~SC_RequestSms() {
  // @@protoc_insertion_point(destructor:SC_RequestSms)
  SharedDtor();
}

void SC_RequestSms::SharedDtor() {
  sms_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_RequestSms::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_RequestSms::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_RequestSms& SC_RequestSms::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_RequestSms* SC_RequestSms::New(::google::protobuf::Arena* arena) const {
  SC_RequestSms* n = new SC_RequestSms;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_RequestSms::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_RequestSms)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_sms_no()) {
      GOOGLE_DCHECK(!sms_no_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sms_no_.UnsafeRawStringPointer())->clear();
    }
    if (has_tel()) {
      GOOGLE_DCHECK(!tel_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tel_.UnsafeRawStringPointer())->clear();
    }
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_RequestSms::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_RequestSms)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sms_no = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sms_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sms_no().data(), this->sms_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_RequestSms.sms_no");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tel().data(), this->tel().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_RequestSms.tel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_RequestSms)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_RequestSms)
  return false;
#undef DO_
}

void SC_RequestSms::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_RequestSms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string sms_no = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sms_no().data(), this->sms_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_RequestSms.sms_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sms_no(), output);
  }

  // optional string tel = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tel().data(), this->tel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_RequestSms.tel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tel(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_RequestSms)
}

::google::protobuf::uint8* SC_RequestSms::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_RequestSms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string sms_no = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sms_no().data(), this->sms_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_RequestSms.sms_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sms_no(), target);
  }

  // optional string tel = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tel().data(), this->tel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_RequestSms.tel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tel(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_RequestSms)
  return target;
}

size_t SC_RequestSms::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_RequestSms)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string sms_no = 2;
    if (has_sms_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sms_no());
    }

    // optional string tel = 3;
    if (has_tel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tel());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_RequestSms::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_RequestSms)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_RequestSms* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_RequestSms>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_RequestSms)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_RequestSms)
    MergeFrom(*source);
  }
}

void SC_RequestSms::MergeFrom(const SC_RequestSms& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_RequestSms)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sms_no();
      sms_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sms_no_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_tel();
      tel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tel_);
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_RequestSms::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_RequestSms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_RequestSms::CopyFrom(const SC_RequestSms& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_RequestSms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_RequestSms::IsInitialized() const {
  return true;
}

void SC_RequestSms::Swap(SC_RequestSms* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_RequestSms::InternalSwap(SC_RequestSms* other) {
  sms_no_.Swap(&other->sms_no_);
  tel_.Swap(&other->tel_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_RequestSms::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_RequestSms

// optional int32 result = 1;
bool SC_RequestSms::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_RequestSms::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_RequestSms::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_RequestSms::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_RequestSms::result() const {
  // @@protoc_insertion_point(field_get:SC_RequestSms.result)
  return result_;
}
void SC_RequestSms::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_RequestSms.result)
}

// optional string sms_no = 2;
bool SC_RequestSms::has_sms_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_RequestSms::set_has_sms_no() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_RequestSms::clear_has_sms_no() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_RequestSms::clear_sms_no() {
  sms_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sms_no();
}
const ::std::string& SC_RequestSms::sms_no() const {
  // @@protoc_insertion_point(field_get:SC_RequestSms.sms_no)
  return sms_no_.GetNoArena();
}
void SC_RequestSms::set_sms_no(const ::std::string& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_RequestSms.sms_no)
}
#if LANG_CXX11
void SC_RequestSms::set_sms_no(::std::string&& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_RequestSms.sms_no)
}
#endif
void SC_RequestSms::set_sms_no(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_RequestSms.sms_no)
}
void SC_RequestSms::set_sms_no(const char* value, size_t size) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_RequestSms.sms_no)
}
::std::string* SC_RequestSms::mutable_sms_no() {
  set_has_sms_no();
  // @@protoc_insertion_point(field_mutable:SC_RequestSms.sms_no)
  return sms_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_RequestSms::release_sms_no() {
  // @@protoc_insertion_point(field_release:SC_RequestSms.sms_no)
  clear_has_sms_no();
  return sms_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_RequestSms::set_allocated_sms_no(::std::string* sms_no) {
  if (sms_no != NULL) {
    set_has_sms_no();
  } else {
    clear_has_sms_no();
  }
  sms_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sms_no);
  // @@protoc_insertion_point(field_set_allocated:SC_RequestSms.sms_no)
}

// optional string tel = 3;
bool SC_RequestSms::has_tel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_RequestSms::set_has_tel() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_RequestSms::clear_has_tel() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_RequestSms::clear_tel() {
  tel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tel();
}
const ::std::string& SC_RequestSms::tel() const {
  // @@protoc_insertion_point(field_get:SC_RequestSms.tel)
  return tel_.GetNoArena();
}
void SC_RequestSms::set_tel(const ::std::string& value) {
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_RequestSms.tel)
}
#if LANG_CXX11
void SC_RequestSms::set_tel(::std::string&& value) {
  set_has_tel();
  tel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_RequestSms.tel)
}
#endif
void SC_RequestSms::set_tel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_RequestSms.tel)
}
void SC_RequestSms::set_tel(const char* value, size_t size) {
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_RequestSms.tel)
}
::std::string* SC_RequestSms::mutable_tel() {
  set_has_tel();
  // @@protoc_insertion_point(field_mutable:SC_RequestSms.tel)
  return tel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_RequestSms::release_tel() {
  // @@protoc_insertion_point(field_release:SC_RequestSms.tel)
  clear_has_tel();
  return tel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_RequestSms::set_allocated_tel(::std::string* tel) {
  if (tel != NULL) {
    set_has_tel();
  } else {
    clear_has_tel();
  }
  tel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tel);
  // @@protoc_insertion_point(field_set_allocated:SC_RequestSms.tel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_ResetAccount::kAccountFieldNumber;
const int CS_ResetAccount::kPasswordFieldNumber;
const int CS_ResetAccount::kNicknameFieldNumber;
const int CS_ResetAccount::kSmsNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ResetAccount::CS_ResetAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ResetAccount)
}
CS_ResetAccount::CS_ResetAccount(const CS_ResetAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  sms_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sms_no()) {
    sms_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sms_no_);
  }
  // @@protoc_insertion_point(copy_constructor:CS_ResetAccount)
}

void CS_ResetAccount::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sms_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CS_ResetAccount::~CS_ResetAccount() {
  // @@protoc_insertion_point(destructor:CS_ResetAccount)
  SharedDtor();
}

void CS_ResetAccount::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sms_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_ResetAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ResetAccount::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ResetAccount& CS_ResetAccount::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ResetAccount* CS_ResetAccount::New(::google::protobuf::Arena* arena) const {
  CS_ResetAccount* n = new CS_ResetAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ResetAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ResetAccount)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_nickname()) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
    if (has_sms_no()) {
      GOOGLE_DCHECK(!sms_no_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sms_no_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ResetAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ResetAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_ResetAccount.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_ResetAccount.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_ResetAccount.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sms_no = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sms_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sms_no().data(), this->sms_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_ResetAccount.sms_no");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ResetAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ResetAccount)
  return false;
#undef DO_
}

void CS_ResetAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ResetAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ResetAccount.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ResetAccount.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional string nickname = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ResetAccount.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nickname(), output);
  }

  // optional string sms_no = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sms_no().data(), this->sms_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ResetAccount.sms_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sms_no(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ResetAccount)
}

::google::protobuf::uint8* CS_ResetAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ResetAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ResetAccount.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ResetAccount.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional string nickname = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ResetAccount.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  // optional string sms_no = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sms_no().data(), this->sms_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ResetAccount.sms_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sms_no(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ResetAccount)
  return target;
}

size_t CS_ResetAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ResetAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string nickname = 3;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string sms_no = 4;
    if (has_sms_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sms_no());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ResetAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ResetAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ResetAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ResetAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ResetAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ResetAccount)
    MergeFrom(*source);
  }
}

void CS_ResetAccount::MergeFrom(const CS_ResetAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ResetAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_sms_no();
      sms_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sms_no_);
    }
  }
}

void CS_ResetAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ResetAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ResetAccount::CopyFrom(const CS_ResetAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ResetAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ResetAccount::IsInitialized() const {
  return true;
}

void CS_ResetAccount::Swap(CS_ResetAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ResetAccount::InternalSwap(CS_ResetAccount* other) {
  account_.Swap(&other->account_);
  password_.Swap(&other->password_);
  nickname_.Swap(&other->nickname_);
  sms_no_.Swap(&other->sms_no_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ResetAccount::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ResetAccount

// optional string account = 1;
bool CS_ResetAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_ResetAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_ResetAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_ResetAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& CS_ResetAccount::account() const {
  // @@protoc_insertion_point(field_get:CS_ResetAccount.account)
  return account_.GetNoArena();
}
void CS_ResetAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ResetAccount.account)
}
#if LANG_CXX11
void CS_ResetAccount::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ResetAccount.account)
}
#endif
void CS_ResetAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ResetAccount.account)
}
void CS_ResetAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ResetAccount.account)
}
::std::string* CS_ResetAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:CS_ResetAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_ResetAccount::release_account() {
  // @@protoc_insertion_point(field_release:CS_ResetAccount.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_ResetAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:CS_ResetAccount.account)
}

// optional string password = 2;
bool CS_ResetAccount::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_ResetAccount::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_ResetAccount::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_ResetAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CS_ResetAccount::password() const {
  // @@protoc_insertion_point(field_get:CS_ResetAccount.password)
  return password_.GetNoArena();
}
void CS_ResetAccount::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ResetAccount.password)
}
#if LANG_CXX11
void CS_ResetAccount::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ResetAccount.password)
}
#endif
void CS_ResetAccount::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ResetAccount.password)
}
void CS_ResetAccount::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ResetAccount.password)
}
::std::string* CS_ResetAccount::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CS_ResetAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_ResetAccount::release_password() {
  // @@protoc_insertion_point(field_release:CS_ResetAccount.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_ResetAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CS_ResetAccount.password)
}

// optional string nickname = 3;
bool CS_ResetAccount::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CS_ResetAccount::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
void CS_ResetAccount::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
void CS_ResetAccount::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& CS_ResetAccount::nickname() const {
  // @@protoc_insertion_point(field_get:CS_ResetAccount.nickname)
  return nickname_.GetNoArena();
}
void CS_ResetAccount::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ResetAccount.nickname)
}
#if LANG_CXX11
void CS_ResetAccount::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ResetAccount.nickname)
}
#endif
void CS_ResetAccount::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ResetAccount.nickname)
}
void CS_ResetAccount::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ResetAccount.nickname)
}
::std::string* CS_ResetAccount::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:CS_ResetAccount.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_ResetAccount::release_nickname() {
  // @@protoc_insertion_point(field_release:CS_ResetAccount.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_ResetAccount::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:CS_ResetAccount.nickname)
}

// optional string sms_no = 4;
bool CS_ResetAccount::has_sms_no() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CS_ResetAccount::set_has_sms_no() {
  _has_bits_[0] |= 0x00000008u;
}
void CS_ResetAccount::clear_has_sms_no() {
  _has_bits_[0] &= ~0x00000008u;
}
void CS_ResetAccount::clear_sms_no() {
  sms_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sms_no();
}
const ::std::string& CS_ResetAccount::sms_no() const {
  // @@protoc_insertion_point(field_get:CS_ResetAccount.sms_no)
  return sms_no_.GetNoArena();
}
void CS_ResetAccount::set_sms_no(const ::std::string& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ResetAccount.sms_no)
}
#if LANG_CXX11
void CS_ResetAccount::set_sms_no(::std::string&& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ResetAccount.sms_no)
}
#endif
void CS_ResetAccount::set_sms_no(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ResetAccount.sms_no)
}
void CS_ResetAccount::set_sms_no(const char* value, size_t size) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ResetAccount.sms_no)
}
::std::string* CS_ResetAccount::mutable_sms_no() {
  set_has_sms_no();
  // @@protoc_insertion_point(field_mutable:CS_ResetAccount.sms_no)
  return sms_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_ResetAccount::release_sms_no() {
  // @@protoc_insertion_point(field_release:CS_ResetAccount.sms_no)
  clear_has_sms_no();
  return sms_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_ResetAccount::set_allocated_sms_no(::std::string* sms_no) {
  if (sms_no != NULL) {
    set_has_sms_no();
  } else {
    clear_has_sms_no();
  }
  sms_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sms_no);
  // @@protoc_insertion_point(field_set_allocated:CS_ResetAccount.sms_no)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ResetAccount::kResultFieldNumber;
const int SC_ResetAccount::kAccountFieldNumber;
const int SC_ResetAccount::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ResetAccount::SC_ResetAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ResetAccount)
}
SC_ResetAccount::SC_ResetAccount(const SC_ResetAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SC_ResetAccount)
}

void SC_ResetAccount::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

SC_ResetAccount::~SC_ResetAccount() {
  // @@protoc_insertion_point(destructor:SC_ResetAccount)
  SharedDtor();
}

void SC_ResetAccount::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_ResetAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ResetAccount::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ResetAccount& SC_ResetAccount::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ResetAccount* SC_ResetAccount::New(::google::protobuf::Arena* arena) const {
  SC_ResetAccount* n = new SC_ResetAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ResetAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ResetAccount)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_nickname()) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ResetAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ResetAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ResetAccount.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ResetAccount.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ResetAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ResetAccount)
  return false;
#undef DO_
}

void SC_ResetAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ResetAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ResetAccount.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // optional string nickname = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ResetAccount.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nickname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ResetAccount)
}

::google::protobuf::uint8* SC_ResetAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ResetAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ResetAccount.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // optional string nickname = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ResetAccount.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ResetAccount)
  return target;
}

size_t SC_ResetAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ResetAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string nickname = 3;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ResetAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ResetAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ResetAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ResetAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ResetAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ResetAccount)
    MergeFrom(*source);
  }
}

void SC_ResetAccount::MergeFrom(const SC_ResetAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ResetAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ResetAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ResetAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ResetAccount::CopyFrom(const SC_ResetAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ResetAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ResetAccount::IsInitialized() const {
  return true;
}

void SC_ResetAccount::Swap(SC_ResetAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ResetAccount::InternalSwap(SC_ResetAccount* other) {
  account_.Swap(&other->account_);
  nickname_.Swap(&other->nickname_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ResetAccount::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ResetAccount

// optional int32 result = 1;
bool SC_ResetAccount::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ResetAccount::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ResetAccount::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ResetAccount::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_ResetAccount::result() const {
  // @@protoc_insertion_point(field_get:SC_ResetAccount.result)
  return result_;
}
void SC_ResetAccount::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ResetAccount.result)
}

// optional string account = 2;
bool SC_ResetAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ResetAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ResetAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ResetAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& SC_ResetAccount::account() const {
  // @@protoc_insertion_point(field_get:SC_ResetAccount.account)
  return account_.GetNoArena();
}
void SC_ResetAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ResetAccount.account)
}
#if LANG_CXX11
void SC_ResetAccount::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ResetAccount.account)
}
#endif
void SC_ResetAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ResetAccount.account)
}
void SC_ResetAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ResetAccount.account)
}
::std::string* SC_ResetAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:SC_ResetAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ResetAccount::release_account() {
  // @@protoc_insertion_point(field_release:SC_ResetAccount.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ResetAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:SC_ResetAccount.account)
}

// optional string nickname = 3;
bool SC_ResetAccount::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ResetAccount::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ResetAccount::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ResetAccount::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& SC_ResetAccount::nickname() const {
  // @@protoc_insertion_point(field_get:SC_ResetAccount.nickname)
  return nickname_.GetNoArena();
}
void SC_ResetAccount::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ResetAccount.nickname)
}
#if LANG_CXX11
void SC_ResetAccount::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ResetAccount.nickname)
}
#endif
void SC_ResetAccount::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ResetAccount.nickname)
}
void SC_ResetAccount::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ResetAccount.nickname)
}
::std::string* SC_ResetAccount::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:SC_ResetAccount.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ResetAccount::release_nickname() {
  // @@protoc_insertion_point(field_release:SC_ResetAccount.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ResetAccount::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:SC_ResetAccount.nickname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_SetPassword::kOldPasswordFieldNumber;
const int CS_SetPassword::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_SetPassword::CS_SetPassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_SetPassword)
}
CS_SetPassword::CS_SetPassword(const CS_SetPassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  old_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_old_password()) {
    old_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_password_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:CS_SetPassword)
}

void CS_SetPassword::SharedCtor() {
  _cached_size_ = 0;
  old_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CS_SetPassword::~CS_SetPassword() {
  // @@protoc_insertion_point(destructor:CS_SetPassword)
  SharedDtor();
}

void CS_SetPassword::SharedDtor() {
  old_password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_SetPassword::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_SetPassword::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_SetPassword& CS_SetPassword::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_SetPassword* CS_SetPassword::New(::google::protobuf::Arena* arena) const {
  CS_SetPassword* n = new CS_SetPassword;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_SetPassword::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_SetPassword)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_old_password()) {
      GOOGLE_DCHECK(!old_password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*old_password_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_SetPassword::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_SetPassword)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string old_password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_old_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->old_password().data(), this->old_password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_SetPassword.old_password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_SetPassword.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_SetPassword)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_SetPassword)
  return false;
#undef DO_
}

void CS_SetPassword::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_SetPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string old_password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_password().data(), this->old_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_SetPassword.old_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->old_password(), output);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_SetPassword.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_SetPassword)
}

::google::protobuf::uint8* CS_SetPassword::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_SetPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string old_password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_password().data(), this->old_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_SetPassword.old_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->old_password(), target);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_SetPassword.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_SetPassword)
  return target;
}

size_t CS_SetPassword::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_SetPassword)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string old_password = 1;
    if (has_old_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->old_password());
    }

    // optional string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_SetPassword::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_SetPassword)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_SetPassword* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_SetPassword>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_SetPassword)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_SetPassword)
    MergeFrom(*source);
  }
}

void CS_SetPassword::MergeFrom(const CS_SetPassword& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_SetPassword)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_old_password();
      old_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_password_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
}

void CS_SetPassword::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_SetPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_SetPassword::CopyFrom(const CS_SetPassword& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_SetPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_SetPassword::IsInitialized() const {
  return true;
}

void CS_SetPassword::Swap(CS_SetPassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_SetPassword::InternalSwap(CS_SetPassword* other) {
  old_password_.Swap(&other->old_password_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_SetPassword::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_SetPassword

// optional string old_password = 1;
bool CS_SetPassword::has_old_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_SetPassword::set_has_old_password() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_SetPassword::clear_has_old_password() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_SetPassword::clear_old_password() {
  old_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_old_password();
}
const ::std::string& CS_SetPassword::old_password() const {
  // @@protoc_insertion_point(field_get:CS_SetPassword.old_password)
  return old_password_.GetNoArena();
}
void CS_SetPassword::set_old_password(const ::std::string& value) {
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_SetPassword.old_password)
}
#if LANG_CXX11
void CS_SetPassword::set_old_password(::std::string&& value) {
  set_has_old_password();
  old_password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_SetPassword.old_password)
}
#endif
void CS_SetPassword::set_old_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_SetPassword.old_password)
}
void CS_SetPassword::set_old_password(const char* value, size_t size) {
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_SetPassword.old_password)
}
::std::string* CS_SetPassword::mutable_old_password() {
  set_has_old_password();
  // @@protoc_insertion_point(field_mutable:CS_SetPassword.old_password)
  return old_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_SetPassword::release_old_password() {
  // @@protoc_insertion_point(field_release:CS_SetPassword.old_password)
  clear_has_old_password();
  return old_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_SetPassword::set_allocated_old_password(::std::string* old_password) {
  if (old_password != NULL) {
    set_has_old_password();
  } else {
    clear_has_old_password();
  }
  old_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), old_password);
  // @@protoc_insertion_point(field_set_allocated:CS_SetPassword.old_password)
}

// optional string password = 2;
bool CS_SetPassword::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_SetPassword::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_SetPassword::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_SetPassword::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CS_SetPassword::password() const {
  // @@protoc_insertion_point(field_get:CS_SetPassword.password)
  return password_.GetNoArena();
}
void CS_SetPassword::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_SetPassword.password)
}
#if LANG_CXX11
void CS_SetPassword::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_SetPassword.password)
}
#endif
void CS_SetPassword::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_SetPassword.password)
}
void CS_SetPassword::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_SetPassword.password)
}
::std::string* CS_SetPassword::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CS_SetPassword.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_SetPassword::release_password() {
  // @@protoc_insertion_point(field_release:CS_SetPassword.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_SetPassword::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CS_SetPassword.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_SetPassword::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_SetPassword::SC_SetPassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_SetPassword)
}
SC_SetPassword::SC_SetPassword(const SC_SetPassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SC_SetPassword)
}

void SC_SetPassword::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
}

SC_SetPassword::~SC_SetPassword() {
  // @@protoc_insertion_point(destructor:SC_SetPassword)
  SharedDtor();
}

void SC_SetPassword::SharedDtor() {
}

void SC_SetPassword::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_SetPassword::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_SetPassword& SC_SetPassword::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_SetPassword* SC_SetPassword::New(::google::protobuf::Arena* arena) const {
  SC_SetPassword* n = new SC_SetPassword;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_SetPassword::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_SetPassword)
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_SetPassword::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_SetPassword)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_SetPassword)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_SetPassword)
  return false;
#undef DO_
}

void SC_SetPassword::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_SetPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_SetPassword)
}

::google::protobuf::uint8* SC_SetPassword::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_SetPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_SetPassword)
  return target;
}

size_t SC_SetPassword::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_SetPassword)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_SetPassword::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_SetPassword)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_SetPassword* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_SetPassword>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_SetPassword)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_SetPassword)
    MergeFrom(*source);
  }
}

void SC_SetPassword::MergeFrom(const SC_SetPassword& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_SetPassword)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void SC_SetPassword::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_SetPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_SetPassword::CopyFrom(const SC_SetPassword& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_SetPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_SetPassword::IsInitialized() const {
  return true;
}

void SC_SetPassword::Swap(SC_SetPassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_SetPassword::InternalSwap(SC_SetPassword* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_SetPassword::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_SetPassword

// optional int32 result = 1;
bool SC_SetPassword::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_SetPassword::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_SetPassword::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_SetPassword::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_SetPassword::result() const {
  // @@protoc_insertion_point(field_get:SC_SetPassword.result)
  return result_;
}
void SC_SetPassword::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_SetPassword.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_SetPasswordBySms::kPasswordFieldNumber;
const int CS_SetPasswordBySms::kSmsNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_SetPasswordBySms::CS_SetPasswordBySms()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_SetPasswordBySms)
}
CS_SetPasswordBySms::CS_SetPasswordBySms(const CS_SetPasswordBySms& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  sms_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sms_no()) {
    sms_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sms_no_);
  }
  // @@protoc_insertion_point(copy_constructor:CS_SetPasswordBySms)
}

void CS_SetPasswordBySms::SharedCtor() {
  _cached_size_ = 0;
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sms_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CS_SetPasswordBySms::~CS_SetPasswordBySms() {
  // @@protoc_insertion_point(destructor:CS_SetPasswordBySms)
  SharedDtor();
}

void CS_SetPasswordBySms::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sms_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_SetPasswordBySms::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_SetPasswordBySms::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_SetPasswordBySms& CS_SetPasswordBySms::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_SetPasswordBySms* CS_SetPasswordBySms::New(::google::protobuf::Arena* arena) const {
  CS_SetPasswordBySms* n = new CS_SetPasswordBySms;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_SetPasswordBySms::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_SetPasswordBySms)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_sms_no()) {
      GOOGLE_DCHECK(!sms_no_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sms_no_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_SetPasswordBySms::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_SetPasswordBySms)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_SetPasswordBySms.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sms_no = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sms_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sms_no().data(), this->sms_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_SetPasswordBySms.sms_no");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_SetPasswordBySms)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_SetPasswordBySms)
  return false;
#undef DO_
}

void CS_SetPasswordBySms::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_SetPasswordBySms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_SetPasswordBySms.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional string sms_no = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sms_no().data(), this->sms_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_SetPasswordBySms.sms_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sms_no(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_SetPasswordBySms)
}

::google::protobuf::uint8* CS_SetPasswordBySms::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_SetPasswordBySms)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_SetPasswordBySms.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional string sms_no = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sms_no().data(), this->sms_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_SetPasswordBySms.sms_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sms_no(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_SetPasswordBySms)
  return target;
}

size_t CS_SetPasswordBySms::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_SetPasswordBySms)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string password = 1;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string sms_no = 2;
    if (has_sms_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sms_no());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_SetPasswordBySms::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_SetPasswordBySms)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_SetPasswordBySms* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_SetPasswordBySms>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_SetPasswordBySms)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_SetPasswordBySms)
    MergeFrom(*source);
  }
}

void CS_SetPasswordBySms::MergeFrom(const CS_SetPasswordBySms& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_SetPasswordBySms)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sms_no();
      sms_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sms_no_);
    }
  }
}

void CS_SetPasswordBySms::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_SetPasswordBySms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_SetPasswordBySms::CopyFrom(const CS_SetPasswordBySms& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_SetPasswordBySms)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_SetPasswordBySms::IsInitialized() const {
  return true;
}

void CS_SetPasswordBySms::Swap(CS_SetPasswordBySms* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_SetPasswordBySms::InternalSwap(CS_SetPasswordBySms* other) {
  password_.Swap(&other->password_);
  sms_no_.Swap(&other->sms_no_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_SetPasswordBySms::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_SetPasswordBySms

// optional string password = 1;
bool CS_SetPasswordBySms::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_SetPasswordBySms::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_SetPasswordBySms::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_SetPasswordBySms::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CS_SetPasswordBySms::password() const {
  // @@protoc_insertion_point(field_get:CS_SetPasswordBySms.password)
  return password_.GetNoArena();
}
void CS_SetPasswordBySms::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_SetPasswordBySms.password)
}
#if LANG_CXX11
void CS_SetPasswordBySms::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_SetPasswordBySms.password)
}
#endif
void CS_SetPasswordBySms::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_SetPasswordBySms.password)
}
void CS_SetPasswordBySms::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_SetPasswordBySms.password)
}
::std::string* CS_SetPasswordBySms::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CS_SetPasswordBySms.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_SetPasswordBySms::release_password() {
  // @@protoc_insertion_point(field_release:CS_SetPasswordBySms.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_SetPasswordBySms::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CS_SetPasswordBySms.password)
}

// optional string sms_no = 2;
bool CS_SetPasswordBySms::has_sms_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_SetPasswordBySms::set_has_sms_no() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_SetPasswordBySms::clear_has_sms_no() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_SetPasswordBySms::clear_sms_no() {
  sms_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sms_no();
}
const ::std::string& CS_SetPasswordBySms::sms_no() const {
  // @@protoc_insertion_point(field_get:CS_SetPasswordBySms.sms_no)
  return sms_no_.GetNoArena();
}
void CS_SetPasswordBySms::set_sms_no(const ::std::string& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_SetPasswordBySms.sms_no)
}
#if LANG_CXX11
void CS_SetPasswordBySms::set_sms_no(::std::string&& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_SetPasswordBySms.sms_no)
}
#endif
void CS_SetPasswordBySms::set_sms_no(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_SetPasswordBySms.sms_no)
}
void CS_SetPasswordBySms::set_sms_no(const char* value, size_t size) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_SetPasswordBySms.sms_no)
}
::std::string* CS_SetPasswordBySms::mutable_sms_no() {
  set_has_sms_no();
  // @@protoc_insertion_point(field_mutable:CS_SetPasswordBySms.sms_no)
  return sms_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_SetPasswordBySms::release_sms_no() {
  // @@protoc_insertion_point(field_release:CS_SetPasswordBySms.sms_no)
  clear_has_sms_no();
  return sms_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_SetPasswordBySms::set_allocated_sms_no(::std::string* sms_no) {
  if (sms_no != NULL) {
    set_has_sms_no();
  } else {
    clear_has_sms_no();
  }
  sms_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sms_no);
  // @@protoc_insertion_point(field_set_allocated:CS_SetPasswordBySms.sms_no)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_SetNickname::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_SetNickname::CS_SetNickname()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_SetNickname)
}
CS_SetNickname::CS_SetNickname(const CS_SetNickname& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  // @@protoc_insertion_point(copy_constructor:CS_SetNickname)
}

void CS_SetNickname::SharedCtor() {
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CS_SetNickname::~CS_SetNickname() {
  // @@protoc_insertion_point(destructor:CS_SetNickname)
  SharedDtor();
}

void CS_SetNickname::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_SetNickname::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_SetNickname::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_SetNickname& CS_SetNickname::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_SetNickname* CS_SetNickname::New(::google::protobuf::Arena* arena) const {
  CS_SetNickname* n = new CS_SetNickname;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_SetNickname::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_SetNickname)
  if (has_nickname()) {
    GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*nickname_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_SetNickname::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_SetNickname)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string nickname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_SetNickname.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_SetNickname)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_SetNickname)
  return false;
#undef DO_
}

void CS_SetNickname::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_SetNickname)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string nickname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_SetNickname.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nickname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_SetNickname)
}

::google::protobuf::uint8* CS_SetNickname::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_SetNickname)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string nickname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_SetNickname.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nickname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_SetNickname)
  return target;
}

size_t CS_SetNickname::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_SetNickname)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string nickname = 1;
  if (has_nickname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_SetNickname::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_SetNickname)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_SetNickname* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_SetNickname>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_SetNickname)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_SetNickname)
    MergeFrom(*source);
  }
}

void CS_SetNickname::MergeFrom(const CS_SetNickname& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_SetNickname)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_nickname()) {
    set_has_nickname();
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
}

void CS_SetNickname::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_SetNickname)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_SetNickname::CopyFrom(const CS_SetNickname& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_SetNickname)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_SetNickname::IsInitialized() const {
  return true;
}

void CS_SetNickname::Swap(CS_SetNickname* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_SetNickname::InternalSwap(CS_SetNickname* other) {
  nickname_.Swap(&other->nickname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_SetNickname::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_SetNickname

// optional string nickname = 1;
bool CS_SetNickname::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_SetNickname::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_SetNickname::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_SetNickname::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& CS_SetNickname::nickname() const {
  // @@protoc_insertion_point(field_get:CS_SetNickname.nickname)
  return nickname_.GetNoArena();
}
void CS_SetNickname::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_SetNickname.nickname)
}
#if LANG_CXX11
void CS_SetNickname::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_SetNickname.nickname)
}
#endif
void CS_SetNickname::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_SetNickname.nickname)
}
void CS_SetNickname::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_SetNickname.nickname)
}
::std::string* CS_SetNickname::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:CS_SetNickname.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_SetNickname::release_nickname() {
  // @@protoc_insertion_point(field_release:CS_SetNickname.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_SetNickname::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:CS_SetNickname.nickname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_SetNickname::kNicknameFieldNumber;
const int SC_SetNickname::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_SetNickname::SC_SetNickname()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_SetNickname)
}
SC_SetNickname::SC_SetNickname(const SC_SetNickname& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SC_SetNickname)
}

void SC_SetNickname::SharedCtor() {
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

SC_SetNickname::~SC_SetNickname() {
  // @@protoc_insertion_point(destructor:SC_SetNickname)
  SharedDtor();
}

void SC_SetNickname::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_SetNickname::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_SetNickname::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_SetNickname& SC_SetNickname::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_SetNickname* SC_SetNickname::New(::google::protobuf::Arena* arena) const {
  SC_SetNickname* n = new SC_SetNickname;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_SetNickname::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_SetNickname)
  if (has_nickname()) {
    GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*nickname_.UnsafeRawStringPointer())->clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_SetNickname::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_SetNickname)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string nickname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_SetNickname.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_SetNickname)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_SetNickname)
  return false;
#undef DO_
}

void SC_SetNickname::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_SetNickname)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string nickname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_SetNickname.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nickname(), output);
  }

  // optional int32 result = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_SetNickname)
}

::google::protobuf::uint8* SC_SetNickname::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_SetNickname)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string nickname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_SetNickname.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nickname(), target);
  }

  // optional int32 result = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_SetNickname)
  return target;
}

size_t SC_SetNickname::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_SetNickname)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string nickname = 1;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional int32 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_SetNickname::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_SetNickname)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_SetNickname* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_SetNickname>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_SetNickname)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_SetNickname)
    MergeFrom(*source);
  }
}

void SC_SetNickname::MergeFrom(const SC_SetNickname& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_SetNickname)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_SetNickname::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_SetNickname)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_SetNickname::CopyFrom(const SC_SetNickname& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_SetNickname)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_SetNickname::IsInitialized() const {
  return true;
}

void SC_SetNickname::Swap(SC_SetNickname* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_SetNickname::InternalSwap(SC_SetNickname* other) {
  nickname_.Swap(&other->nickname_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_SetNickname::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_SetNickname

// optional string nickname = 1;
bool SC_SetNickname::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_SetNickname::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_SetNickname::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_SetNickname::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& SC_SetNickname::nickname() const {
  // @@protoc_insertion_point(field_get:SC_SetNickname.nickname)
  return nickname_.GetNoArena();
}
void SC_SetNickname::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_SetNickname.nickname)
}
#if LANG_CXX11
void SC_SetNickname::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_SetNickname.nickname)
}
#endif
void SC_SetNickname::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_SetNickname.nickname)
}
void SC_SetNickname::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_SetNickname.nickname)
}
::std::string* SC_SetNickname::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:SC_SetNickname.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_SetNickname::release_nickname() {
  // @@protoc_insertion_point(field_release:SC_SetNickname.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_SetNickname::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:SC_SetNickname.nickname)
}

// optional int32 result = 2;
bool SC_SetNickname::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_SetNickname::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_SetNickname::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_SetNickname::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_SetNickname::result() const {
  // @@protoc_insertion_point(field_get:SC_SetNickname.result)
  return result_;
}
void SC_SetNickname::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_SetNickname.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_ChangeHeaderIcon::kHeaderIconFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ChangeHeaderIcon::CS_ChangeHeaderIcon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ChangeHeaderIcon)
}
CS_ChangeHeaderIcon::CS_ChangeHeaderIcon(const CS_ChangeHeaderIcon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  header_icon_ = from.header_icon_;
  // @@protoc_insertion_point(copy_constructor:CS_ChangeHeaderIcon)
}

void CS_ChangeHeaderIcon::SharedCtor() {
  _cached_size_ = 0;
  header_icon_ = 0;
}

CS_ChangeHeaderIcon::~CS_ChangeHeaderIcon() {
  // @@protoc_insertion_point(destructor:CS_ChangeHeaderIcon)
  SharedDtor();
}

void CS_ChangeHeaderIcon::SharedDtor() {
}

void CS_ChangeHeaderIcon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ChangeHeaderIcon::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ChangeHeaderIcon& CS_ChangeHeaderIcon::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ChangeHeaderIcon* CS_ChangeHeaderIcon::New(::google::protobuf::Arena* arena) const {
  CS_ChangeHeaderIcon* n = new CS_ChangeHeaderIcon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ChangeHeaderIcon::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ChangeHeaderIcon)
  header_icon_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ChangeHeaderIcon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ChangeHeaderIcon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 header_icon = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_header_icon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &header_icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ChangeHeaderIcon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ChangeHeaderIcon)
  return false;
#undef DO_
}

void CS_ChangeHeaderIcon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ChangeHeaderIcon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 header_icon = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->header_icon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ChangeHeaderIcon)
}

::google::protobuf::uint8* CS_ChangeHeaderIcon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ChangeHeaderIcon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 header_icon = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->header_icon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ChangeHeaderIcon)
  return target;
}

size_t CS_ChangeHeaderIcon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ChangeHeaderIcon)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 header_icon = 1 [default = 0];
  if (has_header_icon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->header_icon());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ChangeHeaderIcon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ChangeHeaderIcon)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ChangeHeaderIcon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ChangeHeaderIcon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ChangeHeaderIcon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ChangeHeaderIcon)
    MergeFrom(*source);
  }
}

void CS_ChangeHeaderIcon::MergeFrom(const CS_ChangeHeaderIcon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ChangeHeaderIcon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header_icon()) {
    set_header_icon(from.header_icon());
  }
}

void CS_ChangeHeaderIcon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ChangeHeaderIcon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ChangeHeaderIcon::CopyFrom(const CS_ChangeHeaderIcon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ChangeHeaderIcon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ChangeHeaderIcon::IsInitialized() const {
  return true;
}

void CS_ChangeHeaderIcon::Swap(CS_ChangeHeaderIcon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ChangeHeaderIcon::InternalSwap(CS_ChangeHeaderIcon* other) {
  std::swap(header_icon_, other->header_icon_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ChangeHeaderIcon::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ChangeHeaderIcon

// optional int32 header_icon = 1 [default = 0];
bool CS_ChangeHeaderIcon::has_header_icon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_ChangeHeaderIcon::set_has_header_icon() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_ChangeHeaderIcon::clear_has_header_icon() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_ChangeHeaderIcon::clear_header_icon() {
  header_icon_ = 0;
  clear_has_header_icon();
}
::google::protobuf::int32 CS_ChangeHeaderIcon::header_icon() const {
  // @@protoc_insertion_point(field_get:CS_ChangeHeaderIcon.header_icon)
  return header_icon_;
}
void CS_ChangeHeaderIcon::set_header_icon(::google::protobuf::int32 value) {
  set_has_header_icon();
  header_icon_ = value;
  // @@protoc_insertion_point(field_set:CS_ChangeHeaderIcon.header_icon)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ChangeHeaderIcon::kHeaderIconFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ChangeHeaderIcon::SC_ChangeHeaderIcon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ChangeHeaderIcon)
}
SC_ChangeHeaderIcon::SC_ChangeHeaderIcon(const SC_ChangeHeaderIcon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  header_icon_ = from.header_icon_;
  // @@protoc_insertion_point(copy_constructor:SC_ChangeHeaderIcon)
}

void SC_ChangeHeaderIcon::SharedCtor() {
  _cached_size_ = 0;
  header_icon_ = 0;
}

SC_ChangeHeaderIcon::~SC_ChangeHeaderIcon() {
  // @@protoc_insertion_point(destructor:SC_ChangeHeaderIcon)
  SharedDtor();
}

void SC_ChangeHeaderIcon::SharedDtor() {
}

void SC_ChangeHeaderIcon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ChangeHeaderIcon::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ChangeHeaderIcon& SC_ChangeHeaderIcon::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ChangeHeaderIcon* SC_ChangeHeaderIcon::New(::google::protobuf::Arena* arena) const {
  SC_ChangeHeaderIcon* n = new SC_ChangeHeaderIcon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ChangeHeaderIcon::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ChangeHeaderIcon)
  header_icon_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ChangeHeaderIcon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ChangeHeaderIcon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 header_icon = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_header_icon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &header_icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ChangeHeaderIcon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ChangeHeaderIcon)
  return false;
#undef DO_
}

void SC_ChangeHeaderIcon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ChangeHeaderIcon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 header_icon = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->header_icon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ChangeHeaderIcon)
}

::google::protobuf::uint8* SC_ChangeHeaderIcon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ChangeHeaderIcon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 header_icon = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->header_icon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ChangeHeaderIcon)
  return target;
}

size_t SC_ChangeHeaderIcon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ChangeHeaderIcon)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 header_icon = 1 [default = 0];
  if (has_header_icon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->header_icon());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ChangeHeaderIcon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ChangeHeaderIcon)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ChangeHeaderIcon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ChangeHeaderIcon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ChangeHeaderIcon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ChangeHeaderIcon)
    MergeFrom(*source);
  }
}

void SC_ChangeHeaderIcon::MergeFrom(const SC_ChangeHeaderIcon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ChangeHeaderIcon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header_icon()) {
    set_header_icon(from.header_icon());
  }
}

void SC_ChangeHeaderIcon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ChangeHeaderIcon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ChangeHeaderIcon::CopyFrom(const SC_ChangeHeaderIcon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ChangeHeaderIcon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ChangeHeaderIcon::IsInitialized() const {
  return true;
}

void SC_ChangeHeaderIcon::Swap(SC_ChangeHeaderIcon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ChangeHeaderIcon::InternalSwap(SC_ChangeHeaderIcon* other) {
  std::swap(header_icon_, other->header_icon_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ChangeHeaderIcon::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ChangeHeaderIcon

// optional int32 header_icon = 1 [default = 0];
bool SC_ChangeHeaderIcon::has_header_icon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ChangeHeaderIcon::set_has_header_icon() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ChangeHeaderIcon::clear_has_header_icon() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ChangeHeaderIcon::clear_header_icon() {
  header_icon_ = 0;
  clear_has_header_icon();
}
::google::protobuf::int32 SC_ChangeHeaderIcon::header_icon() const {
  // @@protoc_insertion_point(field_get:SC_ChangeHeaderIcon.header_icon)
  return header_icon_;
}
void SC_ChangeHeaderIcon::set_header_icon(::google::protobuf::int32 value) {
  set_has_header_icon();
  header_icon_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeHeaderIcon.header_icon)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InviterInfo::kGuidFieldNumber;
const int InviterInfo::kAccountFieldNumber;
const int InviterInfo::kAlipayNameYFieldNumber;
const int InviterInfo::kAlipayAccountYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InviterInfo::InviterInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:InviterInfo)
}
InviterInfo::InviterInfo(const InviterInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  alipay_name_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_name_y()) {
    alipay_name_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_y_);
  }
  alipay_account_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_account_y()) {
    alipay_account_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_y_);
  }
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:InviterInfo)
}

void InviterInfo::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_account_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_ = 0;
}

InviterInfo::~InviterInfo() {
  // @@protoc_insertion_point(destructor:InviterInfo)
  SharedDtor();
}

void InviterInfo::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_account_y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InviterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InviterInfo::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InviterInfo& InviterInfo::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

InviterInfo* InviterInfo::New(::google::protobuf::Arena* arena) const {
  InviterInfo* n = new InviterInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InviterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:InviterInfo)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_alipay_name_y()) {
      GOOGLE_DCHECK(!alipay_name_y_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_name_y_.UnsafeRawStringPointer())->clear();
    }
    if (has_alipay_account_y()) {
      GOOGLE_DCHECK(!alipay_account_y_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_account_y_.UnsafeRawStringPointer())->clear();
    }
  }
  guid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InviterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InviterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "InviterInfo.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_name_y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_name_y()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_name_y().data(), this->alipay_name_y().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "InviterInfo.alipay_name_y");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_account_y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_account_y()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_account_y().data(), this->alipay_account_y().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "InviterInfo.alipay_account_y");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InviterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InviterInfo)
  return false;
#undef DO_
}

void InviterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InviterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guid(), output);
  }

  // optional string account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InviterInfo.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // optional string alipay_name_y = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name_y().data(), this->alipay_name_y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InviterInfo.alipay_name_y");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->alipay_name_y(), output);
  }

  // optional string alipay_account_y = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account_y().data(), this->alipay_account_y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InviterInfo.alipay_account_y");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->alipay_account_y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:InviterInfo)
}

::google::protobuf::uint8* InviterInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:InviterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guid(), target);
  }

  // optional string account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InviterInfo.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // optional string alipay_name_y = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name_y().data(), this->alipay_name_y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InviterInfo.alipay_name_y");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->alipay_name_y(), target);
  }

  // optional string alipay_account_y = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account_y().data(), this->alipay_account_y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InviterInfo.alipay_account_y");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->alipay_account_y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InviterInfo)
  return target;
}

size_t InviterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InviterInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string alipay_name_y = 3;
    if (has_alipay_name_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_name_y());
    }

    // optional string alipay_account_y = 4;
    if (has_alipay_account_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_account_y());
    }

    // optional int32 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InviterInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InviterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const InviterInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InviterInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InviterInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InviterInfo)
    MergeFrom(*source);
  }
}

void InviterInfo::MergeFrom(const InviterInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InviterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_alipay_name_y();
      alipay_name_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_y_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_alipay_account_y();
      alipay_account_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_y_);
    }
    if (cached_has_bits & 0x00000008u) {
      guid_ = from.guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InviterInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InviterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InviterInfo::CopyFrom(const InviterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InviterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InviterInfo::IsInitialized() const {
  return true;
}

void InviterInfo::Swap(InviterInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InviterInfo::InternalSwap(InviterInfo* other) {
  account_.Swap(&other->account_);
  alipay_name_y_.Swap(&other->alipay_name_y_);
  alipay_account_y_.Swap(&other->alipay_account_y_);
  std::swap(guid_, other->guid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InviterInfo::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InviterInfo

// optional int32 guid = 1;
bool InviterInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void InviterInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
void InviterInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
void InviterInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 InviterInfo::guid() const {
  // @@protoc_insertion_point(field_get:InviterInfo.guid)
  return guid_;
}
void InviterInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:InviterInfo.guid)
}

// optional string account = 2;
bool InviterInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InviterInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void InviterInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void InviterInfo::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& InviterInfo::account() const {
  // @@protoc_insertion_point(field_get:InviterInfo.account)
  return account_.GetNoArena();
}
void InviterInfo::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InviterInfo.account)
}
#if LANG_CXX11
void InviterInfo::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InviterInfo.account)
}
#endif
void InviterInfo::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InviterInfo.account)
}
void InviterInfo::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InviterInfo.account)
}
::std::string* InviterInfo::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:InviterInfo.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InviterInfo::release_account() {
  // @@protoc_insertion_point(field_release:InviterInfo.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InviterInfo::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:InviterInfo.account)
}

// optional string alipay_name_y = 3;
bool InviterInfo::has_alipay_name_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InviterInfo::set_has_alipay_name_y() {
  _has_bits_[0] |= 0x00000002u;
}
void InviterInfo::clear_has_alipay_name_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void InviterInfo::clear_alipay_name_y() {
  alipay_name_y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name_y();
}
const ::std::string& InviterInfo::alipay_name_y() const {
  // @@protoc_insertion_point(field_get:InviterInfo.alipay_name_y)
  return alipay_name_y_.GetNoArena();
}
void InviterInfo::set_alipay_name_y(const ::std::string& value) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InviterInfo.alipay_name_y)
}
#if LANG_CXX11
void InviterInfo::set_alipay_name_y(::std::string&& value) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InviterInfo.alipay_name_y)
}
#endif
void InviterInfo::set_alipay_name_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InviterInfo.alipay_name_y)
}
void InviterInfo::set_alipay_name_y(const char* value, size_t size) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InviterInfo.alipay_name_y)
}
::std::string* InviterInfo::mutable_alipay_name_y() {
  set_has_alipay_name_y();
  // @@protoc_insertion_point(field_mutable:InviterInfo.alipay_name_y)
  return alipay_name_y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InviterInfo::release_alipay_name_y() {
  // @@protoc_insertion_point(field_release:InviterInfo.alipay_name_y)
  clear_has_alipay_name_y();
  return alipay_name_y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InviterInfo::set_allocated_alipay_name_y(::std::string* alipay_name_y) {
  if (alipay_name_y != NULL) {
    set_has_alipay_name_y();
  } else {
    clear_has_alipay_name_y();
  }
  alipay_name_y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name_y);
  // @@protoc_insertion_point(field_set_allocated:InviterInfo.alipay_name_y)
}

// optional string alipay_account_y = 4;
bool InviterInfo::has_alipay_account_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InviterInfo::set_has_alipay_account_y() {
  _has_bits_[0] |= 0x00000004u;
}
void InviterInfo::clear_has_alipay_account_y() {
  _has_bits_[0] &= ~0x00000004u;
}
void InviterInfo::clear_alipay_account_y() {
  alipay_account_y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account_y();
}
const ::std::string& InviterInfo::alipay_account_y() const {
  // @@protoc_insertion_point(field_get:InviterInfo.alipay_account_y)
  return alipay_account_y_.GetNoArena();
}
void InviterInfo::set_alipay_account_y(const ::std::string& value) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InviterInfo.alipay_account_y)
}
#if LANG_CXX11
void InviterInfo::set_alipay_account_y(::std::string&& value) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InviterInfo.alipay_account_y)
}
#endif
void InviterInfo::set_alipay_account_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InviterInfo.alipay_account_y)
}
void InviterInfo::set_alipay_account_y(const char* value, size_t size) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InviterInfo.alipay_account_y)
}
::std::string* InviterInfo::mutable_alipay_account_y() {
  set_has_alipay_account_y();
  // @@protoc_insertion_point(field_mutable:InviterInfo.alipay_account_y)
  return alipay_account_y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InviterInfo::release_alipay_account_y() {
  // @@protoc_insertion_point(field_release:InviterInfo.alipay_account_y)
  clear_has_alipay_account_y();
  return alipay_account_y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InviterInfo::set_allocated_alipay_account_y(::std::string* alipay_account_y) {
  if (alipay_account_y != NULL) {
    set_has_alipay_account_y();
  } else {
    clear_has_alipay_account_y();
  }
  alipay_account_y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account_y);
  // @@protoc_insertion_point(field_set_allocated:InviterInfo.alipay_account_y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CL_GetInviterInfo::kInviteCodeFieldNumber;
const int CL_GetInviterInfo::kGateSessionIdFieldNumber;
const int CL_GetInviterInfo::kGateIdFieldNumber;
const int CL_GetInviterInfo::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CL_GetInviterInfo::CL_GetInviterInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CL_GetInviterInfo)
}
CL_GetInviterInfo::CL_GetInviterInfo(const CL_GetInviterInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  invite_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_invite_code()) {
    invite_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invite_code_);
  }
  ::memcpy(&gate_session_id_, &from.gate_session_id_,
    reinterpret_cast<char*>(&guid_) -
    reinterpret_cast<char*>(&gate_session_id_) + sizeof(guid_));
  // @@protoc_insertion_point(copy_constructor:CL_GetInviterInfo)
}

void CL_GetInviterInfo::SharedCtor() {
  _cached_size_ = 0;
  invite_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gate_session_id_, 0, reinterpret_cast<char*>(&guid_) -
    reinterpret_cast<char*>(&gate_session_id_) + sizeof(guid_));
}

CL_GetInviterInfo::~CL_GetInviterInfo() {
  // @@protoc_insertion_point(destructor:CL_GetInviterInfo)
  SharedDtor();
}

void CL_GetInviterInfo::SharedDtor() {
  invite_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CL_GetInviterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CL_GetInviterInfo::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CL_GetInviterInfo& CL_GetInviterInfo::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CL_GetInviterInfo* CL_GetInviterInfo::New(::google::protobuf::Arena* arena) const {
  CL_GetInviterInfo* n = new CL_GetInviterInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CL_GetInviterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CL_GetInviterInfo)
  if (has_invite_code()) {
    GOOGLE_DCHECK(!invite_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*invite_code_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&gate_session_id_, 0, reinterpret_cast<char*>(&guid_) -
      reinterpret_cast<char*>(&gate_session_id_) + sizeof(guid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CL_GetInviterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CL_GetInviterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string invite_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invite_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->invite_code().data(), this->invite_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CL_GetInviterInfo.invite_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gate_session_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_gate_session_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gate_session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gate_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_gate_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gate_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CL_GetInviterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CL_GetInviterInfo)
  return false;
#undef DO_
}

void CL_GetInviterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CL_GetInviterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string invite_code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invite_code().data(), this->invite_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_GetInviterInfo.invite_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->invite_code(), output);
  }

  // optional int32 gate_session_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gate_session_id(), output);
  }

  // optional int32 gate_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gate_id(), output);
  }

  // optional int32 guid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CL_GetInviterInfo)
}

::google::protobuf::uint8* CL_GetInviterInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CL_GetInviterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string invite_code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invite_code().data(), this->invite_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CL_GetInviterInfo.invite_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->invite_code(), target);
  }

  // optional int32 gate_session_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gate_session_id(), target);
  }

  // optional int32 gate_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gate_id(), target);
  }

  // optional int32 guid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CL_GetInviterInfo)
  return target;
}

size_t CL_GetInviterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CL_GetInviterInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string invite_code = 1;
    if (has_invite_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invite_code());
    }

    // optional int32 gate_session_id = 2;
    if (has_gate_session_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gate_session_id());
    }

    // optional int32 gate_id = 3;
    if (has_gate_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gate_id());
    }

    // optional int32 guid = 4;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CL_GetInviterInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CL_GetInviterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CL_GetInviterInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CL_GetInviterInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CL_GetInviterInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CL_GetInviterInfo)
    MergeFrom(*source);
  }
}

void CL_GetInviterInfo::MergeFrom(const CL_GetInviterInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CL_GetInviterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_invite_code();
      invite_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invite_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      gate_session_id_ = from.gate_session_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      gate_id_ = from.gate_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      guid_ = from.guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CL_GetInviterInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CL_GetInviterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CL_GetInviterInfo::CopyFrom(const CL_GetInviterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CL_GetInviterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CL_GetInviterInfo::IsInitialized() const {
  return true;
}

void CL_GetInviterInfo::Swap(CL_GetInviterInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CL_GetInviterInfo::InternalSwap(CL_GetInviterInfo* other) {
  invite_code_.Swap(&other->invite_code_);
  std::swap(gate_session_id_, other->gate_session_id_);
  std::swap(gate_id_, other->gate_id_);
  std::swap(guid_, other->guid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CL_GetInviterInfo::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CL_GetInviterInfo

// optional string invite_code = 1;
bool CL_GetInviterInfo::has_invite_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CL_GetInviterInfo::set_has_invite_code() {
  _has_bits_[0] |= 0x00000001u;
}
void CL_GetInviterInfo::clear_has_invite_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void CL_GetInviterInfo::clear_invite_code() {
  invite_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invite_code();
}
const ::std::string& CL_GetInviterInfo::invite_code() const {
  // @@protoc_insertion_point(field_get:CL_GetInviterInfo.invite_code)
  return invite_code_.GetNoArena();
}
void CL_GetInviterInfo::set_invite_code(const ::std::string& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_GetInviterInfo.invite_code)
}
#if LANG_CXX11
void CL_GetInviterInfo::set_invite_code(::std::string&& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_GetInviterInfo.invite_code)
}
#endif
void CL_GetInviterInfo::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_GetInviterInfo.invite_code)
}
void CL_GetInviterInfo::set_invite_code(const char* value, size_t size) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_GetInviterInfo.invite_code)
}
::std::string* CL_GetInviterInfo::mutable_invite_code() {
  set_has_invite_code();
  // @@protoc_insertion_point(field_mutable:CL_GetInviterInfo.invite_code)
  return invite_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CL_GetInviterInfo::release_invite_code() {
  // @@protoc_insertion_point(field_release:CL_GetInviterInfo.invite_code)
  clear_has_invite_code();
  return invite_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CL_GetInviterInfo::set_allocated_invite_code(::std::string* invite_code) {
  if (invite_code != NULL) {
    set_has_invite_code();
  } else {
    clear_has_invite_code();
  }
  invite_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invite_code);
  // @@protoc_insertion_point(field_set_allocated:CL_GetInviterInfo.invite_code)
}

// optional int32 gate_session_id = 2;
bool CL_GetInviterInfo::has_gate_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CL_GetInviterInfo::set_has_gate_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CL_GetInviterInfo::clear_has_gate_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CL_GetInviterInfo::clear_gate_session_id() {
  gate_session_id_ = 0;
  clear_has_gate_session_id();
}
::google::protobuf::int32 CL_GetInviterInfo::gate_session_id() const {
  // @@protoc_insertion_point(field_get:CL_GetInviterInfo.gate_session_id)
  return gate_session_id_;
}
void CL_GetInviterInfo::set_gate_session_id(::google::protobuf::int32 value) {
  set_has_gate_session_id();
  gate_session_id_ = value;
  // @@protoc_insertion_point(field_set:CL_GetInviterInfo.gate_session_id)
}

// optional int32 gate_id = 3;
bool CL_GetInviterInfo::has_gate_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CL_GetInviterInfo::set_has_gate_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CL_GetInviterInfo::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CL_GetInviterInfo::clear_gate_id() {
  gate_id_ = 0;
  clear_has_gate_id();
}
::google::protobuf::int32 CL_GetInviterInfo::gate_id() const {
  // @@protoc_insertion_point(field_get:CL_GetInviterInfo.gate_id)
  return gate_id_;
}
void CL_GetInviterInfo::set_gate_id(::google::protobuf::int32 value) {
  set_has_gate_id();
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:CL_GetInviterInfo.gate_id)
}

// optional int32 guid = 4;
bool CL_GetInviterInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CL_GetInviterInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
void CL_GetInviterInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
void CL_GetInviterInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 CL_GetInviterInfo::guid() const {
  // @@protoc_insertion_point(field_get:CL_GetInviterInfo.guid)
  return guid_;
}
void CL_GetInviterInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:CL_GetInviterInfo.guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LC_GetInviterInfo::kGuidFieldNumber;
const int LC_GetInviterInfo::kAccountFieldNumber;
const int LC_GetInviterInfo::kAlipayAccountFieldNumber;
const int LC_GetInviterInfo::kAlipayNameFieldNumber;
const int LC_GetInviterInfo::kGateSessionIdFieldNumber;
const int LC_GetInviterInfo::kGateIdFieldNumber;
const int LC_GetInviterInfo::kGuidSelfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LC_GetInviterInfo::LC_GetInviterInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LC_GetInviterInfo)
}
LC_GetInviterInfo::LC_GetInviterInfo(const LC_GetInviterInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  alipay_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_account()) {
    alipay_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_);
  }
  alipay_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_name()) {
    alipay_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_);
  }
  ::memcpy(&guid_, &from.guid_,
    reinterpret_cast<char*>(&guid_self_) -
    reinterpret_cast<char*>(&guid_) + sizeof(guid_self_));
  // @@protoc_insertion_point(copy_constructor:LC_GetInviterInfo)
}

void LC_GetInviterInfo::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, reinterpret_cast<char*>(&guid_self_) -
    reinterpret_cast<char*>(&guid_) + sizeof(guid_self_));
}

LC_GetInviterInfo::~LC_GetInviterInfo() {
  // @@protoc_insertion_point(destructor:LC_GetInviterInfo)
  SharedDtor();
}

void LC_GetInviterInfo::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LC_GetInviterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LC_GetInviterInfo::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LC_GetInviterInfo& LC_GetInviterInfo::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

LC_GetInviterInfo* LC_GetInviterInfo::New(::google::protobuf::Arena* arena) const {
  LC_GetInviterInfo* n = new LC_GetInviterInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LC_GetInviterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:LC_GetInviterInfo)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_alipay_account()) {
      GOOGLE_DCHECK(!alipay_account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_account_.UnsafeRawStringPointer())->clear();
    }
    if (has_alipay_name()) {
      GOOGLE_DCHECK(!alipay_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_name_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 120u) {
    ::memset(&guid_, 0, reinterpret_cast<char*>(&guid_self_) -
      reinterpret_cast<char*>(&guid_) + sizeof(guid_self_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LC_GetInviterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LC_GetInviterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LC_GetInviterInfo.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_account().data(), this->alipay_account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LC_GetInviterInfo.alipay_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_name().data(), this->alipay_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LC_GetInviterInfo.alipay_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gate_session_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_gate_session_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gate_session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gate_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_gate_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gate_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 guid_self = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_guid_self();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_self_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LC_GetInviterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LC_GetInviterInfo)
  return false;
#undef DO_
}

void LC_GetInviterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LC_GetInviterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guid(), output);
  }

  // optional string account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_GetInviterInfo.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // optional string alipay_account = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account().data(), this->alipay_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_GetInviterInfo.alipay_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->alipay_account(), output);
  }

  // optional string alipay_name = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name().data(), this->alipay_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_GetInviterInfo.alipay_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->alipay_name(), output);
  }

  // optional int32 gate_session_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gate_session_id(), output);
  }

  // optional int32 gate_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->gate_id(), output);
  }

  // optional int32 guid_self = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->guid_self(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LC_GetInviterInfo)
}

::google::protobuf::uint8* LC_GetInviterInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LC_GetInviterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guid(), target);
  }

  // optional string account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_GetInviterInfo.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // optional string alipay_account = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account().data(), this->alipay_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_GetInviterInfo.alipay_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->alipay_account(), target);
  }

  // optional string alipay_name = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name().data(), this->alipay_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LC_GetInviterInfo.alipay_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->alipay_name(), target);
  }

  // optional int32 gate_session_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gate_session_id(), target);
  }

  // optional int32 gate_id = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->gate_id(), target);
  }

  // optional int32 guid_self = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->guid_self(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LC_GetInviterInfo)
  return target;
}

size_t LC_GetInviterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LC_GetInviterInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string alipay_account = 3;
    if (has_alipay_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_account());
    }

    // optional string alipay_name = 4;
    if (has_alipay_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_name());
    }

    // optional int32 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

    // optional int32 gate_session_id = 5;
    if (has_gate_session_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gate_session_id());
    }

    // optional int32 gate_id = 6;
    if (has_gate_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gate_id());
    }

    // optional int32 guid_self = 7;
    if (has_guid_self()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid_self());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LC_GetInviterInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LC_GetInviterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LC_GetInviterInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LC_GetInviterInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LC_GetInviterInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LC_GetInviterInfo)
    MergeFrom(*source);
  }
}

void LC_GetInviterInfo::MergeFrom(const LC_GetInviterInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LC_GetInviterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_alipay_account();
      alipay_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_alipay_name();
      alipay_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000010u) {
      gate_session_id_ = from.gate_session_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      gate_id_ = from.gate_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      guid_self_ = from.guid_self_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LC_GetInviterInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LC_GetInviterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LC_GetInviterInfo::CopyFrom(const LC_GetInviterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LC_GetInviterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LC_GetInviterInfo::IsInitialized() const {
  return true;
}

void LC_GetInviterInfo::Swap(LC_GetInviterInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LC_GetInviterInfo::InternalSwap(LC_GetInviterInfo* other) {
  account_.Swap(&other->account_);
  alipay_account_.Swap(&other->alipay_account_);
  alipay_name_.Swap(&other->alipay_name_);
  std::swap(guid_, other->guid_);
  std::swap(gate_session_id_, other->gate_session_id_);
  std::swap(gate_id_, other->gate_id_);
  std::swap(guid_self_, other->guid_self_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LC_GetInviterInfo::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LC_GetInviterInfo

// optional int32 guid = 1;
bool LC_GetInviterInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LC_GetInviterInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
void LC_GetInviterInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
void LC_GetInviterInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 LC_GetInviterInfo::guid() const {
  // @@protoc_insertion_point(field_get:LC_GetInviterInfo.guid)
  return guid_;
}
void LC_GetInviterInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LC_GetInviterInfo.guid)
}

// optional string account = 2;
bool LC_GetInviterInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LC_GetInviterInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void LC_GetInviterInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void LC_GetInviterInfo::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& LC_GetInviterInfo::account() const {
  // @@protoc_insertion_point(field_get:LC_GetInviterInfo.account)
  return account_.GetNoArena();
}
void LC_GetInviterInfo::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_GetInviterInfo.account)
}
#if LANG_CXX11
void LC_GetInviterInfo::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_GetInviterInfo.account)
}
#endif
void LC_GetInviterInfo::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_GetInviterInfo.account)
}
void LC_GetInviterInfo::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_GetInviterInfo.account)
}
::std::string* LC_GetInviterInfo::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:LC_GetInviterInfo.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LC_GetInviterInfo::release_account() {
  // @@protoc_insertion_point(field_release:LC_GetInviterInfo.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LC_GetInviterInfo::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:LC_GetInviterInfo.account)
}

// optional string alipay_account = 3;
bool LC_GetInviterInfo::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LC_GetInviterInfo::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000002u;
}
void LC_GetInviterInfo::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000002u;
}
void LC_GetInviterInfo::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
const ::std::string& LC_GetInviterInfo::alipay_account() const {
  // @@protoc_insertion_point(field_get:LC_GetInviterInfo.alipay_account)
  return alipay_account_.GetNoArena();
}
void LC_GetInviterInfo::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_GetInviterInfo.alipay_account)
}
#if LANG_CXX11
void LC_GetInviterInfo::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_GetInviterInfo.alipay_account)
}
#endif
void LC_GetInviterInfo::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_GetInviterInfo.alipay_account)
}
void LC_GetInviterInfo::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_GetInviterInfo.alipay_account)
}
::std::string* LC_GetInviterInfo::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:LC_GetInviterInfo.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LC_GetInviterInfo::release_alipay_account() {
  // @@protoc_insertion_point(field_release:LC_GetInviterInfo.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LC_GetInviterInfo::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:LC_GetInviterInfo.alipay_account)
}

// optional string alipay_name = 4;
bool LC_GetInviterInfo::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LC_GetInviterInfo::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000004u;
}
void LC_GetInviterInfo::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void LC_GetInviterInfo::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
const ::std::string& LC_GetInviterInfo::alipay_name() const {
  // @@protoc_insertion_point(field_get:LC_GetInviterInfo.alipay_name)
  return alipay_name_.GetNoArena();
}
void LC_GetInviterInfo::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_GetInviterInfo.alipay_name)
}
#if LANG_CXX11
void LC_GetInviterInfo::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_GetInviterInfo.alipay_name)
}
#endif
void LC_GetInviterInfo::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_GetInviterInfo.alipay_name)
}
void LC_GetInviterInfo::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_GetInviterInfo.alipay_name)
}
::std::string* LC_GetInviterInfo::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:LC_GetInviterInfo.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LC_GetInviterInfo::release_alipay_name() {
  // @@protoc_insertion_point(field_release:LC_GetInviterInfo.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LC_GetInviterInfo::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:LC_GetInviterInfo.alipay_name)
}

// optional int32 gate_session_id = 5;
bool LC_GetInviterInfo::has_gate_session_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LC_GetInviterInfo::set_has_gate_session_id() {
  _has_bits_[0] |= 0x00000010u;
}
void LC_GetInviterInfo::clear_has_gate_session_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void LC_GetInviterInfo::clear_gate_session_id() {
  gate_session_id_ = 0;
  clear_has_gate_session_id();
}
::google::protobuf::int32 LC_GetInviterInfo::gate_session_id() const {
  // @@protoc_insertion_point(field_get:LC_GetInviterInfo.gate_session_id)
  return gate_session_id_;
}
void LC_GetInviterInfo::set_gate_session_id(::google::protobuf::int32 value) {
  set_has_gate_session_id();
  gate_session_id_ = value;
  // @@protoc_insertion_point(field_set:LC_GetInviterInfo.gate_session_id)
}

// optional int32 gate_id = 6;
bool LC_GetInviterInfo::has_gate_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LC_GetInviterInfo::set_has_gate_id() {
  _has_bits_[0] |= 0x00000020u;
}
void LC_GetInviterInfo::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void LC_GetInviterInfo::clear_gate_id() {
  gate_id_ = 0;
  clear_has_gate_id();
}
::google::protobuf::int32 LC_GetInviterInfo::gate_id() const {
  // @@protoc_insertion_point(field_get:LC_GetInviterInfo.gate_id)
  return gate_id_;
}
void LC_GetInviterInfo::set_gate_id(::google::protobuf::int32 value) {
  set_has_gate_id();
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:LC_GetInviterInfo.gate_id)
}

// optional int32 guid_self = 7;
bool LC_GetInviterInfo::has_guid_self() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void LC_GetInviterInfo::set_has_guid_self() {
  _has_bits_[0] |= 0x00000040u;
}
void LC_GetInviterInfo::clear_has_guid_self() {
  _has_bits_[0] &= ~0x00000040u;
}
void LC_GetInviterInfo::clear_guid_self() {
  guid_self_ = 0;
  clear_has_guid_self();
}
::google::protobuf::int32 LC_GetInviterInfo::guid_self() const {
  // @@protoc_insertion_point(field_get:LC_GetInviterInfo.guid_self)
  return guid_self_;
}
void LC_GetInviterInfo::set_guid_self(::google::protobuf::int32 value) {
  set_has_guid_self();
  guid_self_ = value;
  // @@protoc_insertion_point(field_set:LC_GetInviterInfo.guid_self)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_RequestPlayerInfo::CS_RequestPlayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_RequestPlayerInfo)
}
CS_RequestPlayerInfo::CS_RequestPlayerInfo(const CS_RequestPlayerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_RequestPlayerInfo)
}

void CS_RequestPlayerInfo::SharedCtor() {
  _cached_size_ = 0;
}

CS_RequestPlayerInfo::~CS_RequestPlayerInfo() {
  // @@protoc_insertion_point(destructor:CS_RequestPlayerInfo)
  SharedDtor();
}

void CS_RequestPlayerInfo::SharedDtor() {
}

void CS_RequestPlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_RequestPlayerInfo::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_RequestPlayerInfo& CS_RequestPlayerInfo::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_RequestPlayerInfo* CS_RequestPlayerInfo::New(::google::protobuf::Arena* arena) const {
  CS_RequestPlayerInfo* n = new CS_RequestPlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_RequestPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_RequestPlayerInfo)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_RequestPlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_RequestPlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_RequestPlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_RequestPlayerInfo)
  return false;
#undef DO_
}

void CS_RequestPlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_RequestPlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_RequestPlayerInfo)
}

::google::protobuf::uint8* CS_RequestPlayerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_RequestPlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_RequestPlayerInfo)
  return target;
}

size_t CS_RequestPlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_RequestPlayerInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_RequestPlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_RequestPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_RequestPlayerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_RequestPlayerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_RequestPlayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_RequestPlayerInfo)
    MergeFrom(*source);
  }
}

void CS_RequestPlayerInfo::MergeFrom(const CS_RequestPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_RequestPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_RequestPlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_RequestPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_RequestPlayerInfo::CopyFrom(const CS_RequestPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_RequestPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_RequestPlayerInfo::IsInitialized() const {
  return true;
}

void CS_RequestPlayerInfo::Swap(CS_RequestPlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_RequestPlayerInfo::InternalSwap(CS_RequestPlayerInfo* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_RequestPlayerInfo::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_RequestPlayerInfo

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ReplyPlayerInfo::kPbBaseInfoFieldNumber;
const int SC_ReplyPlayerInfo::kPbItemBagFieldNumber;
const int SC_ReplyPlayerInfo::kPbMailListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ReplyPlayerInfo::SC_ReplyPlayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ReplyPlayerInfo)
}
SC_ReplyPlayerInfo::SC_ReplyPlayerInfo(const SC_ReplyPlayerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pb_base_info()) {
    pb_base_info_ = new ::PlayerBaseInfo(*from.pb_base_info_);
  } else {
    pb_base_info_ = NULL;
  }
  if (from.has_pb_item_bag()) {
    pb_item_bag_ = new ::ItemBagInfo(*from.pb_item_bag_);
  } else {
    pb_item_bag_ = NULL;
  }
  if (from.has_pb_mail_list()) {
    pb_mail_list_ = new ::MailListInfo(*from.pb_mail_list_);
  } else {
    pb_mail_list_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:SC_ReplyPlayerInfo)
}

void SC_ReplyPlayerInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pb_base_info_, 0, reinterpret_cast<char*>(&pb_mail_list_) -
    reinterpret_cast<char*>(&pb_base_info_) + sizeof(pb_mail_list_));
}

SC_ReplyPlayerInfo::~SC_ReplyPlayerInfo() {
  // @@protoc_insertion_point(destructor:SC_ReplyPlayerInfo)
  SharedDtor();
}

void SC_ReplyPlayerInfo::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pb_base_info_;
  }
  if (this != internal_default_instance()) {
    delete pb_item_bag_;
  }
  if (this != internal_default_instance()) {
    delete pb_mail_list_;
  }
}

void SC_ReplyPlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ReplyPlayerInfo::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ReplyPlayerInfo& SC_ReplyPlayerInfo::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ReplyPlayerInfo* SC_ReplyPlayerInfo::New(::google::protobuf::Arena* arena) const {
  SC_ReplyPlayerInfo* n = new SC_ReplyPlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ReplyPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ReplyPlayerInfo)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_pb_base_info()) {
      GOOGLE_DCHECK(pb_base_info_ != NULL);
      pb_base_info_->::PlayerBaseInfo::Clear();
    }
    if (has_pb_item_bag()) {
      GOOGLE_DCHECK(pb_item_bag_ != NULL);
      pb_item_bag_->::ItemBagInfo::Clear();
    }
    if (has_pb_mail_list()) {
      GOOGLE_DCHECK(pb_mail_list_ != NULL);
      pb_mail_list_->::MailListInfo::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ReplyPlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ReplyPlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PlayerBaseInfo pb_base_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pb_base_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ItemBagInfo pb_item_bag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pb_item_bag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MailListInfo pb_mail_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pb_mail_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ReplyPlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ReplyPlayerInfo)
  return false;
#undef DO_
}

void SC_ReplyPlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ReplyPlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .PlayerBaseInfo pb_base_info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pb_base_info_, output);
  }

  // optional .ItemBagInfo pb_item_bag = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pb_item_bag_, output);
  }

  // optional .MailListInfo pb_mail_list = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pb_mail_list_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ReplyPlayerInfo)
}

::google::protobuf::uint8* SC_ReplyPlayerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ReplyPlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .PlayerBaseInfo pb_base_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pb_base_info_, deterministic, target);
  }

  // optional .ItemBagInfo pb_item_bag = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pb_item_bag_, deterministic, target);
  }

  // optional .MailListInfo pb_mail_list = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pb_mail_list_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ReplyPlayerInfo)
  return target;
}

size_t SC_ReplyPlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ReplyPlayerInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .PlayerBaseInfo pb_base_info = 1;
    if (has_pb_base_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pb_base_info_);
    }

    // optional .ItemBagInfo pb_item_bag = 2;
    if (has_pb_item_bag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pb_item_bag_);
    }

    // optional .MailListInfo pb_mail_list = 3;
    if (has_pb_mail_list()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pb_mail_list_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ReplyPlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ReplyPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ReplyPlayerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ReplyPlayerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ReplyPlayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ReplyPlayerInfo)
    MergeFrom(*source);
  }
}

void SC_ReplyPlayerInfo::MergeFrom(const SC_ReplyPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ReplyPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pb_base_info()->::PlayerBaseInfo::MergeFrom(from.pb_base_info());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pb_item_bag()->::ItemBagInfo::MergeFrom(from.pb_item_bag());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_pb_mail_list()->::MailListInfo::MergeFrom(from.pb_mail_list());
    }
  }
}

void SC_ReplyPlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ReplyPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ReplyPlayerInfo::CopyFrom(const SC_ReplyPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ReplyPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ReplyPlayerInfo::IsInitialized() const {
  return true;
}

void SC_ReplyPlayerInfo::Swap(SC_ReplyPlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ReplyPlayerInfo::InternalSwap(SC_ReplyPlayerInfo* other) {
  std::swap(pb_base_info_, other->pb_base_info_);
  std::swap(pb_item_bag_, other->pb_item_bag_);
  std::swap(pb_mail_list_, other->pb_mail_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ReplyPlayerInfo::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ReplyPlayerInfo

// optional .PlayerBaseInfo pb_base_info = 1;
bool SC_ReplyPlayerInfo::has_pb_base_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ReplyPlayerInfo::set_has_pb_base_info() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ReplyPlayerInfo::clear_has_pb_base_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ReplyPlayerInfo::clear_pb_base_info() {
  if (pb_base_info_ != NULL) pb_base_info_->::PlayerBaseInfo::Clear();
  clear_has_pb_base_info();
}
const ::PlayerBaseInfo& SC_ReplyPlayerInfo::pb_base_info() const {
  // @@protoc_insertion_point(field_get:SC_ReplyPlayerInfo.pb_base_info)
  return pb_base_info_ != NULL ? *pb_base_info_
                         : *::PlayerBaseInfo::internal_default_instance();
}
::PlayerBaseInfo* SC_ReplyPlayerInfo::mutable_pb_base_info() {
  set_has_pb_base_info();
  if (pb_base_info_ == NULL) {
    pb_base_info_ = new ::PlayerBaseInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_ReplyPlayerInfo.pb_base_info)
  return pb_base_info_;
}
::PlayerBaseInfo* SC_ReplyPlayerInfo::release_pb_base_info() {
  // @@protoc_insertion_point(field_release:SC_ReplyPlayerInfo.pb_base_info)
  clear_has_pb_base_info();
  ::PlayerBaseInfo* temp = pb_base_info_;
  pb_base_info_ = NULL;
  return temp;
}
void SC_ReplyPlayerInfo::set_allocated_pb_base_info(::PlayerBaseInfo* pb_base_info) {
  delete pb_base_info_;
  pb_base_info_ = pb_base_info;
  if (pb_base_info) {
    set_has_pb_base_info();
  } else {
    clear_has_pb_base_info();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_ReplyPlayerInfo.pb_base_info)
}

// optional .ItemBagInfo pb_item_bag = 2;
bool SC_ReplyPlayerInfo::has_pb_item_bag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ReplyPlayerInfo::set_has_pb_item_bag() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ReplyPlayerInfo::clear_has_pb_item_bag() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ReplyPlayerInfo::clear_pb_item_bag() {
  if (pb_item_bag_ != NULL) pb_item_bag_->::ItemBagInfo::Clear();
  clear_has_pb_item_bag();
}
const ::ItemBagInfo& SC_ReplyPlayerInfo::pb_item_bag() const {
  // @@protoc_insertion_point(field_get:SC_ReplyPlayerInfo.pb_item_bag)
  return pb_item_bag_ != NULL ? *pb_item_bag_
                         : *::ItemBagInfo::internal_default_instance();
}
::ItemBagInfo* SC_ReplyPlayerInfo::mutable_pb_item_bag() {
  set_has_pb_item_bag();
  if (pb_item_bag_ == NULL) {
    pb_item_bag_ = new ::ItemBagInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_ReplyPlayerInfo.pb_item_bag)
  return pb_item_bag_;
}
::ItemBagInfo* SC_ReplyPlayerInfo::release_pb_item_bag() {
  // @@protoc_insertion_point(field_release:SC_ReplyPlayerInfo.pb_item_bag)
  clear_has_pb_item_bag();
  ::ItemBagInfo* temp = pb_item_bag_;
  pb_item_bag_ = NULL;
  return temp;
}
void SC_ReplyPlayerInfo::set_allocated_pb_item_bag(::ItemBagInfo* pb_item_bag) {
  delete pb_item_bag_;
  pb_item_bag_ = pb_item_bag;
  if (pb_item_bag) {
    set_has_pb_item_bag();
  } else {
    clear_has_pb_item_bag();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_ReplyPlayerInfo.pb_item_bag)
}

// optional .MailListInfo pb_mail_list = 3;
bool SC_ReplyPlayerInfo::has_pb_mail_list() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ReplyPlayerInfo::set_has_pb_mail_list() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ReplyPlayerInfo::clear_has_pb_mail_list() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ReplyPlayerInfo::clear_pb_mail_list() {
  if (pb_mail_list_ != NULL) pb_mail_list_->::MailListInfo::Clear();
  clear_has_pb_mail_list();
}
const ::MailListInfo& SC_ReplyPlayerInfo::pb_mail_list() const {
  // @@protoc_insertion_point(field_get:SC_ReplyPlayerInfo.pb_mail_list)
  return pb_mail_list_ != NULL ? *pb_mail_list_
                         : *::MailListInfo::internal_default_instance();
}
::MailListInfo* SC_ReplyPlayerInfo::mutable_pb_mail_list() {
  set_has_pb_mail_list();
  if (pb_mail_list_ == NULL) {
    pb_mail_list_ = new ::MailListInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_ReplyPlayerInfo.pb_mail_list)
  return pb_mail_list_;
}
::MailListInfo* SC_ReplyPlayerInfo::release_pb_mail_list() {
  // @@protoc_insertion_point(field_release:SC_ReplyPlayerInfo.pb_mail_list)
  clear_has_pb_mail_list();
  ::MailListInfo* temp = pb_mail_list_;
  pb_mail_list_ = NULL;
  return temp;
}
void SC_ReplyPlayerInfo::set_allocated_pb_mail_list(::MailListInfo* pb_mail_list) {
  delete pb_mail_list_;
  pb_mail_list_ = pb_mail_list;
  if (pb_mail_list) {
    set_has_pb_mail_list();
  } else {
    clear_has_pb_mail_list();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_ReplyPlayerInfo.pb_mail_list)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameMsg::kFirstGameTypeFieldNumber;
const int GameMsg::kSecondGameTypeFieldNumber;
const int GameMsg::kRoomIdFieldNumber;
const int GameMsg::kTableIdFieldNumber;
const int GameMsg::kChairIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameMsg::GameMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMsg)
}
GameMsg::GameMsg(const GameMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&first_game_type_, &from.first_game_type_,
    reinterpret_cast<char*>(&chair_id_) -
    reinterpret_cast<char*>(&first_game_type_) + sizeof(chair_id_));
  // @@protoc_insertion_point(copy_constructor:GameMsg)
}

void GameMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&first_game_type_, 0, reinterpret_cast<char*>(&chair_id_) -
    reinterpret_cast<char*>(&first_game_type_) + sizeof(chair_id_));
}

GameMsg::~GameMsg() {
  // @@protoc_insertion_point(destructor:GameMsg)
  SharedDtor();
}

void GameMsg::SharedDtor() {
}

void GameMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameMsg::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameMsg& GameMsg::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameMsg* GameMsg::New(::google::protobuf::Arena* arena) const {
  GameMsg* n = new GameMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMsg)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&first_game_type_, 0, reinterpret_cast<char*>(&chair_id_) -
      reinterpret_cast<char*>(&first_game_type_) + sizeof(chair_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 first_game_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_first_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 second_game_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_second_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 room_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 table_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_table_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMsg)
  return false;
#undef DO_
}

void GameMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 first_game_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->first_game_type(), output);
  }

  // optional int32 second_game_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->second_game_type(), output);
  }

  // optional int32 room_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->room_id(), output);
  }

  // optional int32 table_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->table_id(), output);
  }

  // optional int32 chair_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->chair_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMsg)
}

::google::protobuf::uint8* GameMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GameMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 first_game_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->first_game_type(), target);
  }

  // optional int32 second_game_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->second_game_type(), target);
  }

  // optional int32 room_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->room_id(), target);
  }

  // optional int32 table_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->table_id(), target);
  }

  // optional int32 chair_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->chair_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMsg)
  return target;
}

size_t GameMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 first_game_type = 1;
    if (has_first_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_game_type());
    }

    // optional int32 second_game_type = 2;
    if (has_second_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_game_type());
    }

    // optional int32 room_id = 3;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }

    // optional int32 table_id = 4;
    if (has_table_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->table_id());
    }

    // optional int32 chair_id = 5;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const GameMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMsg)
    MergeFrom(*source);
  }
}

void GameMsg::MergeFrom(const GameMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      first_game_type_ = from.first_game_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      second_game_type_ = from.second_game_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      room_id_ = from.room_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      table_id_ = from.table_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      chair_id_ = from.chair_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameMsg::CopyFrom(const GameMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameMsg::IsInitialized() const {
  return true;
}

void GameMsg::Swap(GameMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameMsg::InternalSwap(GameMsg* other) {
  std::swap(first_game_type_, other->first_game_type_);
  std::swap(second_game_type_, other->second_game_type_);
  std::swap(room_id_, other->room_id_);
  std::swap(table_id_, other->table_id_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameMsg::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameMsg

// optional int32 first_game_type = 1;
bool GameMsg::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GameMsg::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000001u;
}
void GameMsg::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void GameMsg::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
::google::protobuf::int32 GameMsg::first_game_type() const {
  // @@protoc_insertion_point(field_get:GameMsg.first_game_type)
  return first_game_type_;
}
void GameMsg::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.first_game_type)
}

// optional int32 second_game_type = 2;
bool GameMsg::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GameMsg::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000002u;
}
void GameMsg::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void GameMsg::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
::google::protobuf::int32 GameMsg::second_game_type() const {
  // @@protoc_insertion_point(field_get:GameMsg.second_game_type)
  return second_game_type_;
}
void GameMsg::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.second_game_type)
}

// optional int32 room_id = 3;
bool GameMsg::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GameMsg::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
void GameMsg::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void GameMsg::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
::google::protobuf::int32 GameMsg::room_id() const {
  // @@protoc_insertion_point(field_get:GameMsg.room_id)
  return room_id_;
}
void GameMsg::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.room_id)
}

// optional int32 table_id = 4;
bool GameMsg::has_table_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GameMsg::set_has_table_id() {
  _has_bits_[0] |= 0x00000008u;
}
void GameMsg::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void GameMsg::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
::google::protobuf::int32 GameMsg::table_id() const {
  // @@protoc_insertion_point(field_get:GameMsg.table_id)
  return table_id_;
}
void GameMsg::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.table_id)
}

// optional int32 chair_id = 5;
bool GameMsg::has_chair_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GameMsg::set_has_chair_id() {
  _has_bits_[0] |= 0x00000010u;
}
void GameMsg::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void GameMsg::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 GameMsg::chair_id() const {
  // @@protoc_insertion_point(field_get:GameMsg.chair_id)
  return chair_id_;
}
void GameMsg::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.chair_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ReplyPlayerInfoComplete::kPbGmMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ReplyPlayerInfoComplete::SC_ReplyPlayerInfoComplete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ReplyPlayerInfoComplete)
}
SC_ReplyPlayerInfoComplete::SC_ReplyPlayerInfoComplete(const SC_ReplyPlayerInfoComplete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pb_gmmessage()) {
    pb_gmmessage_ = new ::GameMsg(*from.pb_gmmessage_);
  } else {
    pb_gmmessage_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:SC_ReplyPlayerInfoComplete)
}

void SC_ReplyPlayerInfoComplete::SharedCtor() {
  _cached_size_ = 0;
  pb_gmmessage_ = NULL;
}

SC_ReplyPlayerInfoComplete::~SC_ReplyPlayerInfoComplete() {
  // @@protoc_insertion_point(destructor:SC_ReplyPlayerInfoComplete)
  SharedDtor();
}

void SC_ReplyPlayerInfoComplete::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pb_gmmessage_;
  }
}

void SC_ReplyPlayerInfoComplete::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ReplyPlayerInfoComplete::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ReplyPlayerInfoComplete& SC_ReplyPlayerInfoComplete::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ReplyPlayerInfoComplete* SC_ReplyPlayerInfoComplete::New(::google::protobuf::Arena* arena) const {
  SC_ReplyPlayerInfoComplete* n = new SC_ReplyPlayerInfoComplete;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ReplyPlayerInfoComplete::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ReplyPlayerInfoComplete)
  if (has_pb_gmmessage()) {
    GOOGLE_DCHECK(pb_gmmessage_ != NULL);
    pb_gmmessage_->::GameMsg::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ReplyPlayerInfoComplete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ReplyPlayerInfoComplete)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .GameMsg pb_gmMessage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pb_gmmessage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ReplyPlayerInfoComplete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ReplyPlayerInfoComplete)
  return false;
#undef DO_
}

void SC_ReplyPlayerInfoComplete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ReplyPlayerInfoComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .GameMsg pb_gmMessage = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pb_gmmessage_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ReplyPlayerInfoComplete)
}

::google::protobuf::uint8* SC_ReplyPlayerInfoComplete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ReplyPlayerInfoComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .GameMsg pb_gmMessage = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pb_gmmessage_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ReplyPlayerInfoComplete)
  return target;
}

size_t SC_ReplyPlayerInfoComplete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ReplyPlayerInfoComplete)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .GameMsg pb_gmMessage = 1;
  if (has_pb_gmmessage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pb_gmmessage_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ReplyPlayerInfoComplete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ReplyPlayerInfoComplete)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ReplyPlayerInfoComplete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ReplyPlayerInfoComplete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ReplyPlayerInfoComplete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ReplyPlayerInfoComplete)
    MergeFrom(*source);
  }
}

void SC_ReplyPlayerInfoComplete::MergeFrom(const SC_ReplyPlayerInfoComplete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ReplyPlayerInfoComplete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pb_gmmessage()) {
    mutable_pb_gmmessage()->::GameMsg::MergeFrom(from.pb_gmmessage());
  }
}

void SC_ReplyPlayerInfoComplete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ReplyPlayerInfoComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ReplyPlayerInfoComplete::CopyFrom(const SC_ReplyPlayerInfoComplete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ReplyPlayerInfoComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ReplyPlayerInfoComplete::IsInitialized() const {
  return true;
}

void SC_ReplyPlayerInfoComplete::Swap(SC_ReplyPlayerInfoComplete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ReplyPlayerInfoComplete::InternalSwap(SC_ReplyPlayerInfoComplete* other) {
  std::swap(pb_gmmessage_, other->pb_gmmessage_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ReplyPlayerInfoComplete::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ReplyPlayerInfoComplete

// optional .GameMsg pb_gmMessage = 1;
bool SC_ReplyPlayerInfoComplete::has_pb_gmmessage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ReplyPlayerInfoComplete::set_has_pb_gmmessage() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ReplyPlayerInfoComplete::clear_has_pb_gmmessage() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ReplyPlayerInfoComplete::clear_pb_gmmessage() {
  if (pb_gmmessage_ != NULL) pb_gmmessage_->::GameMsg::Clear();
  clear_has_pb_gmmessage();
}
const ::GameMsg& SC_ReplyPlayerInfoComplete::pb_gmmessage() const {
  // @@protoc_insertion_point(field_get:SC_ReplyPlayerInfoComplete.pb_gmMessage)
  return pb_gmmessage_ != NULL ? *pb_gmmessage_
                         : *::GameMsg::internal_default_instance();
}
::GameMsg* SC_ReplyPlayerInfoComplete::mutable_pb_gmmessage() {
  set_has_pb_gmmessage();
  if (pb_gmmessage_ == NULL) {
    pb_gmmessage_ = new ::GameMsg;
  }
  // @@protoc_insertion_point(field_mutable:SC_ReplyPlayerInfoComplete.pb_gmMessage)
  return pb_gmmessage_;
}
::GameMsg* SC_ReplyPlayerInfoComplete::release_pb_gmmessage() {
  // @@protoc_insertion_point(field_release:SC_ReplyPlayerInfoComplete.pb_gmMessage)
  clear_has_pb_gmmessage();
  ::GameMsg* temp = pb_gmmessage_;
  pb_gmmessage_ = NULL;
  return temp;
}
void SC_ReplyPlayerInfoComplete::set_allocated_pb_gmmessage(::GameMsg* pb_gmmessage) {
  delete pb_gmmessage_;
  pb_gmmessage_ = pb_gmmessage;
  if (pb_gmmessage) {
    set_has_pb_gmmessage();
  } else {
    clear_has_pb_gmmessage();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_ReplyPlayerInfoComplete.pb_gmMessage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_LoginValidatebox::kAnswerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_LoginValidatebox::CS_LoginValidatebox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_LoginValidatebox)
}
CS_LoginValidatebox::CS_LoginValidatebox(const CS_LoginValidatebox& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      answer_(from.answer_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_LoginValidatebox)
}

void CS_LoginValidatebox::SharedCtor() {
  _cached_size_ = 0;
}

CS_LoginValidatebox::~CS_LoginValidatebox() {
  // @@protoc_insertion_point(destructor:CS_LoginValidatebox)
  SharedDtor();
}

void CS_LoginValidatebox::SharedDtor() {
}

void CS_LoginValidatebox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_LoginValidatebox::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_LoginValidatebox& CS_LoginValidatebox::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_LoginValidatebox* CS_LoginValidatebox::New(::google::protobuf::Arena* arena) const {
  CS_LoginValidatebox* n = new CS_LoginValidatebox;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_LoginValidatebox::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_LoginValidatebox)
  answer_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_LoginValidatebox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_LoginValidatebox)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 answer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_answer())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_answer())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_LoginValidatebox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_LoginValidatebox)
  return false;
#undef DO_
}

void CS_LoginValidatebox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_LoginValidatebox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 answer = 2;
  for (int i = 0, n = this->answer_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->answer(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_LoginValidatebox)
}

::google::protobuf::uint8* CS_LoginValidatebox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_LoginValidatebox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 answer = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->answer_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_LoginValidatebox)
  return target;
}

size_t CS_LoginValidatebox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_LoginValidatebox)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 answer = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->answer_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->answer_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_LoginValidatebox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_LoginValidatebox)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_LoginValidatebox* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_LoginValidatebox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_LoginValidatebox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_LoginValidatebox)
    MergeFrom(*source);
  }
}

void CS_LoginValidatebox::MergeFrom(const CS_LoginValidatebox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_LoginValidatebox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  answer_.MergeFrom(from.answer_);
}

void CS_LoginValidatebox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_LoginValidatebox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_LoginValidatebox::CopyFrom(const CS_LoginValidatebox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_LoginValidatebox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_LoginValidatebox::IsInitialized() const {
  return true;
}

void CS_LoginValidatebox::Swap(CS_LoginValidatebox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_LoginValidatebox::InternalSwap(CS_LoginValidatebox* other) {
  answer_.InternalSwap(&other->answer_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_LoginValidatebox::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_LoginValidatebox

// repeated int32 answer = 2;
int CS_LoginValidatebox::answer_size() const {
  return answer_.size();
}
void CS_LoginValidatebox::clear_answer() {
  answer_.Clear();
}
::google::protobuf::int32 CS_LoginValidatebox::answer(int index) const {
  // @@protoc_insertion_point(field_get:CS_LoginValidatebox.answer)
  return answer_.Get(index);
}
void CS_LoginValidatebox::set_answer(int index, ::google::protobuf::int32 value) {
  answer_.Set(index, value);
  // @@protoc_insertion_point(field_set:CS_LoginValidatebox.answer)
}
void CS_LoginValidatebox::add_answer(::google::protobuf::int32 value) {
  answer_.Add(value);
  // @@protoc_insertion_point(field_add:CS_LoginValidatebox.answer)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CS_LoginValidatebox::answer() const {
  // @@protoc_insertion_point(field_list:CS_LoginValidatebox.answer)
  return answer_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CS_LoginValidatebox::mutable_answer() {
  // @@protoc_insertion_point(field_mutable_list:CS_LoginValidatebox.answer)
  return &answer_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_LoginValidatebox::kResultFieldNumber;
const int SC_LoginValidatebox::kPbValidateboxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_LoginValidatebox::SC_LoginValidatebox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_LoginValidatebox)
}
SC_LoginValidatebox::SC_LoginValidatebox(const SC_LoginValidatebox& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pb_validatebox()) {
    pb_validatebox_ = new ::LoginValidatebox(*from.pb_validatebox_);
  } else {
    pb_validatebox_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SC_LoginValidatebox)
}

void SC_LoginValidatebox::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pb_validatebox_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&pb_validatebox_) + sizeof(result_));
}

SC_LoginValidatebox::~SC_LoginValidatebox() {
  // @@protoc_insertion_point(destructor:SC_LoginValidatebox)
  SharedDtor();
}

void SC_LoginValidatebox::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pb_validatebox_;
  }
}

void SC_LoginValidatebox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_LoginValidatebox::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_LoginValidatebox& SC_LoginValidatebox::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_LoginValidatebox* SC_LoginValidatebox::New(::google::protobuf::Arena* arena) const {
  SC_LoginValidatebox* n = new SC_LoginValidatebox;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_LoginValidatebox::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_LoginValidatebox)
  if (has_pb_validatebox()) {
    GOOGLE_DCHECK(pb_validatebox_ != NULL);
    pb_validatebox_->::LoginValidatebox::Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_LoginValidatebox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_LoginValidatebox)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .LoginValidatebox pb_validatebox = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pb_validatebox()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_LoginValidatebox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_LoginValidatebox)
  return false;
#undef DO_
}

void SC_LoginValidatebox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_LoginValidatebox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .LoginValidatebox pb_validatebox = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pb_validatebox_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_LoginValidatebox)
}

::google::protobuf::uint8* SC_LoginValidatebox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_LoginValidatebox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .LoginValidatebox pb_validatebox = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pb_validatebox_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_LoginValidatebox)
  return target;
}

size_t SC_LoginValidatebox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_LoginValidatebox)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .LoginValidatebox pb_validatebox = 2;
    if (has_pb_validatebox()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pb_validatebox_);
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_LoginValidatebox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_LoginValidatebox)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_LoginValidatebox* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_LoginValidatebox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_LoginValidatebox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_LoginValidatebox)
    MergeFrom(*source);
  }
}

void SC_LoginValidatebox::MergeFrom(const SC_LoginValidatebox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_LoginValidatebox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pb_validatebox()->::LoginValidatebox::MergeFrom(from.pb_validatebox());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_LoginValidatebox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_LoginValidatebox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_LoginValidatebox::CopyFrom(const SC_LoginValidatebox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_LoginValidatebox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_LoginValidatebox::IsInitialized() const {
  return true;
}

void SC_LoginValidatebox::Swap(SC_LoginValidatebox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_LoginValidatebox::InternalSwap(SC_LoginValidatebox* other) {
  std::swap(pb_validatebox_, other->pb_validatebox_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_LoginValidatebox::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_LoginValidatebox

// optional int32 result = 1;
bool SC_LoginValidatebox::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_LoginValidatebox::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_LoginValidatebox::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_LoginValidatebox::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_LoginValidatebox::result() const {
  // @@protoc_insertion_point(field_get:SC_LoginValidatebox.result)
  return result_;
}
void SC_LoginValidatebox::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_LoginValidatebox.result)
}

// optional .LoginValidatebox pb_validatebox = 2;
bool SC_LoginValidatebox::has_pb_validatebox() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_LoginValidatebox::set_has_pb_validatebox() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_LoginValidatebox::clear_has_pb_validatebox() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_LoginValidatebox::clear_pb_validatebox() {
  if (pb_validatebox_ != NULL) pb_validatebox_->::LoginValidatebox::Clear();
  clear_has_pb_validatebox();
}
const ::LoginValidatebox& SC_LoginValidatebox::pb_validatebox() const {
  // @@protoc_insertion_point(field_get:SC_LoginValidatebox.pb_validatebox)
  return pb_validatebox_ != NULL ? *pb_validatebox_
                         : *::LoginValidatebox::internal_default_instance();
}
::LoginValidatebox* SC_LoginValidatebox::mutable_pb_validatebox() {
  set_has_pb_validatebox();
  if (pb_validatebox_ == NULL) {
    pb_validatebox_ = new ::LoginValidatebox;
  }
  // @@protoc_insertion_point(field_mutable:SC_LoginValidatebox.pb_validatebox)
  return pb_validatebox_;
}
::LoginValidatebox* SC_LoginValidatebox::release_pb_validatebox() {
  // @@protoc_insertion_point(field_release:SC_LoginValidatebox.pb_validatebox)
  clear_has_pb_validatebox();
  ::LoginValidatebox* temp = pb_validatebox_;
  pb_validatebox_ = NULL;
  return temp;
}
void SC_LoginValidatebox::set_allocated_pb_validatebox(::LoginValidatebox* pb_validatebox) {
  delete pb_validatebox_;
  pb_validatebox_ = pb_validatebox;
  if (pb_validatebox) {
    set_has_pb_validatebox();
  } else {
    clear_has_pb_validatebox();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_LoginValidatebox.pb_validatebox)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_ChangeGame::kFirstGameTypeFieldNumber;
const int CS_ChangeGame::kSecondGameTypeFieldNumber;
const int CS_ChangeGame::kPrivateRoomOptFieldNumber;
const int CS_ChangeGame::kOwnerGuidFieldNumber;
const int CS_ChangeGame::kPrivateRoomChairCountFieldNumber;
const int CS_ChangeGame::kPrivateRoomScoreTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ChangeGame::CS_ChangeGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ChangeGame)
}
CS_ChangeGame::CS_ChangeGame(const CS_ChangeGame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&first_game_type_, &from.first_game_type_,
    reinterpret_cast<char*>(&private_room_score_type_) -
    reinterpret_cast<char*>(&first_game_type_) + sizeof(private_room_score_type_));
  // @@protoc_insertion_point(copy_constructor:CS_ChangeGame)
}

void CS_ChangeGame::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&first_game_type_, 0, reinterpret_cast<char*>(&private_room_score_type_) -
    reinterpret_cast<char*>(&first_game_type_) + sizeof(private_room_score_type_));
}

CS_ChangeGame::~CS_ChangeGame() {
  // @@protoc_insertion_point(destructor:CS_ChangeGame)
  SharedDtor();
}

void CS_ChangeGame::SharedDtor() {
}

void CS_ChangeGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ChangeGame::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ChangeGame& CS_ChangeGame::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ChangeGame* CS_ChangeGame::New(::google::protobuf::Arena* arena) const {
  CS_ChangeGame* n = new CS_ChangeGame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ChangeGame::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ChangeGame)
  if (_has_bits_[0 / 32] & 63u) {
    ::memset(&first_game_type_, 0, reinterpret_cast<char*>(&private_room_score_type_) -
      reinterpret_cast<char*>(&first_game_type_) + sizeof(private_room_score_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ChangeGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ChangeGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 first_game_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_first_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 second_game_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_second_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 private_room_opt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_private_room_opt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &private_room_opt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 owner_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_owner_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &owner_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 private_room_chair_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_private_room_chair_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &private_room_chair_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 private_room_score_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_private_room_score_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &private_room_score_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ChangeGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ChangeGame)
  return false;
#undef DO_
}

void CS_ChangeGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ChangeGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 first_game_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->first_game_type(), output);
  }

  // optional int32 second_game_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->second_game_type(), output);
  }

  // optional int32 private_room_opt = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->private_room_opt(), output);
  }

  // optional int32 owner_guid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->owner_guid(), output);
  }

  // optional int32 private_room_chair_count = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->private_room_chair_count(), output);
  }

  // optional int32 private_room_score_type = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->private_room_score_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ChangeGame)
}

::google::protobuf::uint8* CS_ChangeGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ChangeGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 first_game_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->first_game_type(), target);
  }

  // optional int32 second_game_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->second_game_type(), target);
  }

  // optional int32 private_room_opt = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->private_room_opt(), target);
  }

  // optional int32 owner_guid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->owner_guid(), target);
  }

  // optional int32 private_room_chair_count = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->private_room_chair_count(), target);
  }

  // optional int32 private_room_score_type = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->private_room_score_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ChangeGame)
  return target;
}

size_t CS_ChangeGame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ChangeGame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional int32 first_game_type = 1;
    if (has_first_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_game_type());
    }

    // optional int32 second_game_type = 2;
    if (has_second_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_game_type());
    }

    // optional int32 private_room_opt = 3;
    if (has_private_room_opt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->private_room_opt());
    }

    // optional int32 owner_guid = 4;
    if (has_owner_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->owner_guid());
    }

    // optional int32 private_room_chair_count = 5;
    if (has_private_room_chair_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->private_room_chair_count());
    }

    // optional int32 private_room_score_type = 6;
    if (has_private_room_score_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->private_room_score_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ChangeGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ChangeGame)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ChangeGame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ChangeGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ChangeGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ChangeGame)
    MergeFrom(*source);
  }
}

void CS_ChangeGame::MergeFrom(const CS_ChangeGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ChangeGame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      first_game_type_ = from.first_game_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      second_game_type_ = from.second_game_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      private_room_opt_ = from.private_room_opt_;
    }
    if (cached_has_bits & 0x00000008u) {
      owner_guid_ = from.owner_guid_;
    }
    if (cached_has_bits & 0x00000010u) {
      private_room_chair_count_ = from.private_room_chair_count_;
    }
    if (cached_has_bits & 0x00000020u) {
      private_room_score_type_ = from.private_room_score_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CS_ChangeGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ChangeGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ChangeGame::CopyFrom(const CS_ChangeGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ChangeGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ChangeGame::IsInitialized() const {
  return true;
}

void CS_ChangeGame::Swap(CS_ChangeGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ChangeGame::InternalSwap(CS_ChangeGame* other) {
  std::swap(first_game_type_, other->first_game_type_);
  std::swap(second_game_type_, other->second_game_type_);
  std::swap(private_room_opt_, other->private_room_opt_);
  std::swap(owner_guid_, other->owner_guid_);
  std::swap(private_room_chair_count_, other->private_room_chair_count_);
  std::swap(private_room_score_type_, other->private_room_score_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ChangeGame::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ChangeGame

// optional int32 first_game_type = 1;
bool CS_ChangeGame::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_ChangeGame::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_ChangeGame::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_ChangeGame::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
::google::protobuf::int32 CS_ChangeGame::first_game_type() const {
  // @@protoc_insertion_point(field_get:CS_ChangeGame.first_game_type)
  return first_game_type_;
}
void CS_ChangeGame::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:CS_ChangeGame.first_game_type)
}

// optional int32 second_game_type = 2;
bool CS_ChangeGame::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_ChangeGame::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_ChangeGame::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_ChangeGame::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
::google::protobuf::int32 CS_ChangeGame::second_game_type() const {
  // @@protoc_insertion_point(field_get:CS_ChangeGame.second_game_type)
  return second_game_type_;
}
void CS_ChangeGame::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:CS_ChangeGame.second_game_type)
}

// optional int32 private_room_opt = 3;
bool CS_ChangeGame::has_private_room_opt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CS_ChangeGame::set_has_private_room_opt() {
  _has_bits_[0] |= 0x00000004u;
}
void CS_ChangeGame::clear_has_private_room_opt() {
  _has_bits_[0] &= ~0x00000004u;
}
void CS_ChangeGame::clear_private_room_opt() {
  private_room_opt_ = 0;
  clear_has_private_room_opt();
}
::google::protobuf::int32 CS_ChangeGame::private_room_opt() const {
  // @@protoc_insertion_point(field_get:CS_ChangeGame.private_room_opt)
  return private_room_opt_;
}
void CS_ChangeGame::set_private_room_opt(::google::protobuf::int32 value) {
  set_has_private_room_opt();
  private_room_opt_ = value;
  // @@protoc_insertion_point(field_set:CS_ChangeGame.private_room_opt)
}

// optional int32 owner_guid = 4;
bool CS_ChangeGame::has_owner_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CS_ChangeGame::set_has_owner_guid() {
  _has_bits_[0] |= 0x00000008u;
}
void CS_ChangeGame::clear_has_owner_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
void CS_ChangeGame::clear_owner_guid() {
  owner_guid_ = 0;
  clear_has_owner_guid();
}
::google::protobuf::int32 CS_ChangeGame::owner_guid() const {
  // @@protoc_insertion_point(field_get:CS_ChangeGame.owner_guid)
  return owner_guid_;
}
void CS_ChangeGame::set_owner_guid(::google::protobuf::int32 value) {
  set_has_owner_guid();
  owner_guid_ = value;
  // @@protoc_insertion_point(field_set:CS_ChangeGame.owner_guid)
}

// optional int32 private_room_chair_count = 5;
bool CS_ChangeGame::has_private_room_chair_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CS_ChangeGame::set_has_private_room_chair_count() {
  _has_bits_[0] |= 0x00000010u;
}
void CS_ChangeGame::clear_has_private_room_chair_count() {
  _has_bits_[0] &= ~0x00000010u;
}
void CS_ChangeGame::clear_private_room_chair_count() {
  private_room_chair_count_ = 0;
  clear_has_private_room_chair_count();
}
::google::protobuf::int32 CS_ChangeGame::private_room_chair_count() const {
  // @@protoc_insertion_point(field_get:CS_ChangeGame.private_room_chair_count)
  return private_room_chair_count_;
}
void CS_ChangeGame::set_private_room_chair_count(::google::protobuf::int32 value) {
  set_has_private_room_chair_count();
  private_room_chair_count_ = value;
  // @@protoc_insertion_point(field_set:CS_ChangeGame.private_room_chair_count)
}

// optional int32 private_room_score_type = 6;
bool CS_ChangeGame::has_private_room_score_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CS_ChangeGame::set_has_private_room_score_type() {
  _has_bits_[0] |= 0x00000020u;
}
void CS_ChangeGame::clear_has_private_room_score_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void CS_ChangeGame::clear_private_room_score_type() {
  private_room_score_type_ = 0;
  clear_has_private_room_score_type();
}
::google::protobuf::int32 CS_ChangeGame::private_room_score_type() const {
  // @@protoc_insertion_point(field_get:CS_ChangeGame.private_room_score_type)
  return private_room_score_type_;
}
void CS_ChangeGame::set_private_room_score_type(::google::protobuf::int32 value) {
  set_has_private_room_score_type();
  private_room_score_type_ = value;
  // @@protoc_insertion_point(field_set:CS_ChangeGame.private_room_score_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_JoinPrivateRoom::kOwnerGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_JoinPrivateRoom::CS_JoinPrivateRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_JoinPrivateRoom)
}
CS_JoinPrivateRoom::CS_JoinPrivateRoom(const CS_JoinPrivateRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  owner_guid_ = from.owner_guid_;
  // @@protoc_insertion_point(copy_constructor:CS_JoinPrivateRoom)
}

void CS_JoinPrivateRoom::SharedCtor() {
  _cached_size_ = 0;
  owner_guid_ = 0;
}

CS_JoinPrivateRoom::~CS_JoinPrivateRoom() {
  // @@protoc_insertion_point(destructor:CS_JoinPrivateRoom)
  SharedDtor();
}

void CS_JoinPrivateRoom::SharedDtor() {
}

void CS_JoinPrivateRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_JoinPrivateRoom::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_JoinPrivateRoom& CS_JoinPrivateRoom::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_JoinPrivateRoom* CS_JoinPrivateRoom::New(::google::protobuf::Arena* arena) const {
  CS_JoinPrivateRoom* n = new CS_JoinPrivateRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_JoinPrivateRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_JoinPrivateRoom)
  owner_guid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_JoinPrivateRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_JoinPrivateRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 owner_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_owner_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &owner_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_JoinPrivateRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_JoinPrivateRoom)
  return false;
#undef DO_
}

void CS_JoinPrivateRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_JoinPrivateRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 owner_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->owner_guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_JoinPrivateRoom)
}

::google::protobuf::uint8* CS_JoinPrivateRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_JoinPrivateRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 owner_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->owner_guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_JoinPrivateRoom)
  return target;
}

size_t CS_JoinPrivateRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_JoinPrivateRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 owner_guid = 1;
  if (has_owner_guid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->owner_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_JoinPrivateRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_JoinPrivateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_JoinPrivateRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_JoinPrivateRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_JoinPrivateRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_JoinPrivateRoom)
    MergeFrom(*source);
  }
}

void CS_JoinPrivateRoom::MergeFrom(const CS_JoinPrivateRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_JoinPrivateRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_owner_guid()) {
    set_owner_guid(from.owner_guid());
  }
}

void CS_JoinPrivateRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_JoinPrivateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_JoinPrivateRoom::CopyFrom(const CS_JoinPrivateRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_JoinPrivateRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_JoinPrivateRoom::IsInitialized() const {
  return true;
}

void CS_JoinPrivateRoom::Swap(CS_JoinPrivateRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_JoinPrivateRoom::InternalSwap(CS_JoinPrivateRoom* other) {
  std::swap(owner_guid_, other->owner_guid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_JoinPrivateRoom::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_JoinPrivateRoom

// optional int32 owner_guid = 1;
bool CS_JoinPrivateRoom::has_owner_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_JoinPrivateRoom::set_has_owner_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_JoinPrivateRoom::clear_has_owner_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_JoinPrivateRoom::clear_owner_guid() {
  owner_guid_ = 0;
  clear_has_owner_guid();
}
::google::protobuf::int32 CS_JoinPrivateRoom::owner_guid() const {
  // @@protoc_insertion_point(field_get:CS_JoinPrivateRoom.owner_guid)
  return owner_guid_;
}
void CS_JoinPrivateRoom::set_owner_guid(::google::protobuf::int32 value) {
  set_has_owner_guid();
  owner_guid_ = value;
  // @@protoc_insertion_point(field_set:CS_JoinPrivateRoom.owner_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_JoinPrivateRoomFailed::kOwnerGuidFieldNumber;
const int SC_JoinPrivateRoomFailed::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_JoinPrivateRoomFailed::SC_JoinPrivateRoomFailed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_JoinPrivateRoomFailed)
}
SC_JoinPrivateRoomFailed::SC_JoinPrivateRoomFailed(const SC_JoinPrivateRoomFailed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&owner_guid_, &from.owner_guid_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&owner_guid_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_JoinPrivateRoomFailed)
}

void SC_JoinPrivateRoomFailed::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&owner_guid_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&owner_guid_) + sizeof(result_));
}

SC_JoinPrivateRoomFailed::~SC_JoinPrivateRoomFailed() {
  // @@protoc_insertion_point(destructor:SC_JoinPrivateRoomFailed)
  SharedDtor();
}

void SC_JoinPrivateRoomFailed::SharedDtor() {
}

void SC_JoinPrivateRoomFailed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_JoinPrivateRoomFailed::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_JoinPrivateRoomFailed& SC_JoinPrivateRoomFailed::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_JoinPrivateRoomFailed* SC_JoinPrivateRoomFailed::New(::google::protobuf::Arena* arena) const {
  SC_JoinPrivateRoomFailed* n = new SC_JoinPrivateRoomFailed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_JoinPrivateRoomFailed::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_JoinPrivateRoomFailed)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&owner_guid_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&owner_guid_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_JoinPrivateRoomFailed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_JoinPrivateRoomFailed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 owner_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_owner_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &owner_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_JoinPrivateRoomFailed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_JoinPrivateRoomFailed)
  return false;
#undef DO_
}

void SC_JoinPrivateRoomFailed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_JoinPrivateRoomFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 owner_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->owner_guid(), output);
  }

  // optional int32 result = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_JoinPrivateRoomFailed)
}

::google::protobuf::uint8* SC_JoinPrivateRoomFailed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_JoinPrivateRoomFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 owner_guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->owner_guid(), target);
  }

  // optional int32 result = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_JoinPrivateRoomFailed)
  return target;
}

size_t SC_JoinPrivateRoomFailed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_JoinPrivateRoomFailed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 owner_guid = 1;
    if (has_owner_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->owner_guid());
    }

    // optional int32 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_JoinPrivateRoomFailed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_JoinPrivateRoomFailed)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_JoinPrivateRoomFailed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_JoinPrivateRoomFailed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_JoinPrivateRoomFailed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_JoinPrivateRoomFailed)
    MergeFrom(*source);
  }
}

void SC_JoinPrivateRoomFailed::MergeFrom(const SC_JoinPrivateRoomFailed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_JoinPrivateRoomFailed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      owner_guid_ = from.owner_guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_JoinPrivateRoomFailed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_JoinPrivateRoomFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_JoinPrivateRoomFailed::CopyFrom(const SC_JoinPrivateRoomFailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_JoinPrivateRoomFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_JoinPrivateRoomFailed::IsInitialized() const {
  return true;
}

void SC_JoinPrivateRoomFailed::Swap(SC_JoinPrivateRoomFailed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_JoinPrivateRoomFailed::InternalSwap(SC_JoinPrivateRoomFailed* other) {
  std::swap(owner_guid_, other->owner_guid_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_JoinPrivateRoomFailed::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_JoinPrivateRoomFailed

// optional int32 owner_guid = 1;
bool SC_JoinPrivateRoomFailed::has_owner_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_JoinPrivateRoomFailed::set_has_owner_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_JoinPrivateRoomFailed::clear_has_owner_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_JoinPrivateRoomFailed::clear_owner_guid() {
  owner_guid_ = 0;
  clear_has_owner_guid();
}
::google::protobuf::int32 SC_JoinPrivateRoomFailed::owner_guid() const {
  // @@protoc_insertion_point(field_get:SC_JoinPrivateRoomFailed.owner_guid)
  return owner_guid_;
}
void SC_JoinPrivateRoomFailed::set_owner_guid(::google::protobuf::int32 value) {
  set_has_owner_guid();
  owner_guid_ = value;
  // @@protoc_insertion_point(field_set:SC_JoinPrivateRoomFailed.owner_guid)
}

// optional int32 result = 2;
bool SC_JoinPrivateRoomFailed::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_JoinPrivateRoomFailed::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_JoinPrivateRoomFailed::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_JoinPrivateRoomFailed::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_JoinPrivateRoomFailed::result() const {
  // @@protoc_insertion_point(field_get:SC_JoinPrivateRoomFailed.result)
  return result_;
}
void SC_JoinPrivateRoomFailed::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_JoinPrivateRoomFailed.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_PrivateRoomInfo::CS_PrivateRoomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_PrivateRoomInfo)
}
CS_PrivateRoomInfo::CS_PrivateRoomInfo(const CS_PrivateRoomInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_PrivateRoomInfo)
}

void CS_PrivateRoomInfo::SharedCtor() {
  _cached_size_ = 0;
}

CS_PrivateRoomInfo::~CS_PrivateRoomInfo() {
  // @@protoc_insertion_point(destructor:CS_PrivateRoomInfo)
  SharedDtor();
}

void CS_PrivateRoomInfo::SharedDtor() {
}

void CS_PrivateRoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_PrivateRoomInfo::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_PrivateRoomInfo& CS_PrivateRoomInfo::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_PrivateRoomInfo* CS_PrivateRoomInfo::New(::google::protobuf::Arena* arena) const {
  CS_PrivateRoomInfo* n = new CS_PrivateRoomInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_PrivateRoomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_PrivateRoomInfo)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_PrivateRoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_PrivateRoomInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_PrivateRoomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_PrivateRoomInfo)
  return false;
#undef DO_
}

void CS_PrivateRoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_PrivateRoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_PrivateRoomInfo)
}

::google::protobuf::uint8* CS_PrivateRoomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_PrivateRoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_PrivateRoomInfo)
  return target;
}

size_t CS_PrivateRoomInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_PrivateRoomInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_PrivateRoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_PrivateRoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_PrivateRoomInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_PrivateRoomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_PrivateRoomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_PrivateRoomInfo)
    MergeFrom(*source);
  }
}

void CS_PrivateRoomInfo::MergeFrom(const CS_PrivateRoomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_PrivateRoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_PrivateRoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_PrivateRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_PrivateRoomInfo::CopyFrom(const CS_PrivateRoomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_PrivateRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_PrivateRoomInfo::IsInitialized() const {
  return true;
}

void CS_PrivateRoomInfo::Swap(CS_PrivateRoomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_PrivateRoomInfo::InternalSwap(CS_PrivateRoomInfo* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_PrivateRoomInfo::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_PrivateRoomInfo

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrivateRoomInfo::kFirstGameTypeFieldNumber;
const int PrivateRoomInfo::kTableCountFieldNumber;
const int PrivateRoomInfo::kCellMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrivateRoomInfo::PrivateRoomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PrivateRoomInfo)
}
PrivateRoomInfo::PrivateRoomInfo(const PrivateRoomInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      table_count_(from.table_count_),
      cell_money_(from.cell_money_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  first_game_type_ = from.first_game_type_;
  // @@protoc_insertion_point(copy_constructor:PrivateRoomInfo)
}

void PrivateRoomInfo::SharedCtor() {
  _cached_size_ = 0;
  first_game_type_ = 0;
}

PrivateRoomInfo::~PrivateRoomInfo() {
  // @@protoc_insertion_point(destructor:PrivateRoomInfo)
  SharedDtor();
}

void PrivateRoomInfo::SharedDtor() {
}

void PrivateRoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrivateRoomInfo::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrivateRoomInfo& PrivateRoomInfo::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PrivateRoomInfo* PrivateRoomInfo::New(::google::protobuf::Arena* arena) const {
  PrivateRoomInfo* n = new PrivateRoomInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrivateRoomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PrivateRoomInfo)
  table_count_.Clear();
  cell_money_.Clear();
  first_game_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PrivateRoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PrivateRoomInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 first_game_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_first_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 table_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_table_count())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_table_count())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 cell_money = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_cell_money())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(26u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cell_money())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PrivateRoomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PrivateRoomInfo)
  return false;
#undef DO_
}

void PrivateRoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PrivateRoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 first_game_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->first_game_type(), output);
  }

  // repeated int32 table_count = 2;
  for (int i = 0, n = this->table_count_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->table_count(i), output);
  }

  // repeated int32 cell_money = 3;
  for (int i = 0, n = this->cell_money_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->cell_money(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PrivateRoomInfo)
}

::google::protobuf::uint8* PrivateRoomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PrivateRoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 first_game_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->first_game_type(), target);
  }

  // repeated int32 table_count = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->table_count_, target);

  // repeated int32 cell_money = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->cell_money_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PrivateRoomInfo)
  return target;
}

size_t PrivateRoomInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PrivateRoomInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 table_count = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->table_count_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->table_count_size());
    total_size += data_size;
  }

  // repeated int32 cell_money = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->cell_money_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cell_money_size());
    total_size += data_size;
  }

  // optional int32 first_game_type = 1;
  if (has_first_game_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->first_game_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrivateRoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PrivateRoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PrivateRoomInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrivateRoomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PrivateRoomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PrivateRoomInfo)
    MergeFrom(*source);
  }
}

void PrivateRoomInfo::MergeFrom(const PrivateRoomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PrivateRoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  table_count_.MergeFrom(from.table_count_);
  cell_money_.MergeFrom(from.cell_money_);
  if (from.has_first_game_type()) {
    set_first_game_type(from.first_game_type());
  }
}

void PrivateRoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PrivateRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateRoomInfo::CopyFrom(const PrivateRoomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PrivateRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrivateRoomInfo::IsInitialized() const {
  return true;
}

void PrivateRoomInfo::Swap(PrivateRoomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrivateRoomInfo::InternalSwap(PrivateRoomInfo* other) {
  table_count_.InternalSwap(&other->table_count_);
  cell_money_.InternalSwap(&other->cell_money_);
  std::swap(first_game_type_, other->first_game_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrivateRoomInfo::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrivateRoomInfo

// optional int32 first_game_type = 1;
bool PrivateRoomInfo::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PrivateRoomInfo::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000001u;
}
void PrivateRoomInfo::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void PrivateRoomInfo::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
::google::protobuf::int32 PrivateRoomInfo::first_game_type() const {
  // @@protoc_insertion_point(field_get:PrivateRoomInfo.first_game_type)
  return first_game_type_;
}
void PrivateRoomInfo::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:PrivateRoomInfo.first_game_type)
}

// repeated int32 table_count = 2;
int PrivateRoomInfo::table_count_size() const {
  return table_count_.size();
}
void PrivateRoomInfo::clear_table_count() {
  table_count_.Clear();
}
::google::protobuf::int32 PrivateRoomInfo::table_count(int index) const {
  // @@protoc_insertion_point(field_get:PrivateRoomInfo.table_count)
  return table_count_.Get(index);
}
void PrivateRoomInfo::set_table_count(int index, ::google::protobuf::int32 value) {
  table_count_.Set(index, value);
  // @@protoc_insertion_point(field_set:PrivateRoomInfo.table_count)
}
void PrivateRoomInfo::add_table_count(::google::protobuf::int32 value) {
  table_count_.Add(value);
  // @@protoc_insertion_point(field_add:PrivateRoomInfo.table_count)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PrivateRoomInfo::table_count() const {
  // @@protoc_insertion_point(field_list:PrivateRoomInfo.table_count)
  return table_count_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PrivateRoomInfo::mutable_table_count() {
  // @@protoc_insertion_point(field_mutable_list:PrivateRoomInfo.table_count)
  return &table_count_;
}

// repeated int32 cell_money = 3;
int PrivateRoomInfo::cell_money_size() const {
  return cell_money_.size();
}
void PrivateRoomInfo::clear_cell_money() {
  cell_money_.Clear();
}
::google::protobuf::int32 PrivateRoomInfo::cell_money(int index) const {
  // @@protoc_insertion_point(field_get:PrivateRoomInfo.cell_money)
  return cell_money_.Get(index);
}
void PrivateRoomInfo::set_cell_money(int index, ::google::protobuf::int32 value) {
  cell_money_.Set(index, value);
  // @@protoc_insertion_point(field_set:PrivateRoomInfo.cell_money)
}
void PrivateRoomInfo::add_cell_money(::google::protobuf::int32 value) {
  cell_money_.Add(value);
  // @@protoc_insertion_point(field_add:PrivateRoomInfo.cell_money)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PrivateRoomInfo::cell_money() const {
  // @@protoc_insertion_point(field_list:PrivateRoomInfo.cell_money)
  return cell_money_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PrivateRoomInfo::mutable_cell_money() {
  // @@protoc_insertion_point(field_mutable_list:PrivateRoomInfo.cell_money)
  return &cell_money_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_PrivateRoomInfo::kPbInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_PrivateRoomInfo::SC_PrivateRoomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_PrivateRoomInfo)
}
SC_PrivateRoomInfo::SC_PrivateRoomInfo(const SC_PrivateRoomInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_info_(from.pb_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SC_PrivateRoomInfo)
}

void SC_PrivateRoomInfo::SharedCtor() {
  _cached_size_ = 0;
}

SC_PrivateRoomInfo::~SC_PrivateRoomInfo() {
  // @@protoc_insertion_point(destructor:SC_PrivateRoomInfo)
  SharedDtor();
}

void SC_PrivateRoomInfo::SharedDtor() {
}

void SC_PrivateRoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_PrivateRoomInfo::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_PrivateRoomInfo& SC_PrivateRoomInfo::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_PrivateRoomInfo* SC_PrivateRoomInfo::New(::google::protobuf::Arena* arena) const {
  SC_PrivateRoomInfo* n = new SC_PrivateRoomInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_PrivateRoomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_PrivateRoomInfo)
  pb_info_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_PrivateRoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_PrivateRoomInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PrivateRoomInfo pb_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_PrivateRoomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_PrivateRoomInfo)
  return false;
#undef DO_
}

void SC_PrivateRoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_PrivateRoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PrivateRoomInfo pb_info = 1;
  for (unsigned int i = 0, n = this->pb_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_info(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_PrivateRoomInfo)
}

::google::protobuf::uint8* SC_PrivateRoomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_PrivateRoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PrivateRoomInfo pb_info = 1;
  for (unsigned int i = 0, n = this->pb_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_info(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_PrivateRoomInfo)
  return target;
}

size_t SC_PrivateRoomInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_PrivateRoomInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .PrivateRoomInfo pb_info = 1;
  {
    unsigned int count = this->pb_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_info(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_PrivateRoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_PrivateRoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_PrivateRoomInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_PrivateRoomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_PrivateRoomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_PrivateRoomInfo)
    MergeFrom(*source);
  }
}

void SC_PrivateRoomInfo::MergeFrom(const SC_PrivateRoomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_PrivateRoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_info_.MergeFrom(from.pb_info_);
}

void SC_PrivateRoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_PrivateRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_PrivateRoomInfo::CopyFrom(const SC_PrivateRoomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_PrivateRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_PrivateRoomInfo::IsInitialized() const {
  return true;
}

void SC_PrivateRoomInfo::Swap(SC_PrivateRoomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_PrivateRoomInfo::InternalSwap(SC_PrivateRoomInfo* other) {
  pb_info_.InternalSwap(&other->pb_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_PrivateRoomInfo::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_PrivateRoomInfo

// repeated .PrivateRoomInfo pb_info = 1;
int SC_PrivateRoomInfo::pb_info_size() const {
  return pb_info_.size();
}
void SC_PrivateRoomInfo::clear_pb_info() {
  pb_info_.Clear();
}
const ::PrivateRoomInfo& SC_PrivateRoomInfo::pb_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_PrivateRoomInfo.pb_info)
  return pb_info_.Get(index);
}
::PrivateRoomInfo* SC_PrivateRoomInfo::mutable_pb_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_PrivateRoomInfo.pb_info)
  return pb_info_.Mutable(index);
}
::PrivateRoomInfo* SC_PrivateRoomInfo::add_pb_info() {
  // @@protoc_insertion_point(field_add:SC_PrivateRoomInfo.pb_info)
  return pb_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::PrivateRoomInfo >*
SC_PrivateRoomInfo::mutable_pb_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_PrivateRoomInfo.pb_info)
  return &pb_info_;
}
const ::google::protobuf::RepeatedPtrField< ::PrivateRoomInfo >&
SC_PrivateRoomInfo::pb_info() const {
  // @@protoc_insertion_point(field_list:SC_PrivateRoomInfo.pb_info)
  return pb_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GC_GameServerCfg::kPbCfgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GC_GameServerCfg::GC_GameServerCfg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GC_GameServerCfg)
}
GC_GameServerCfg::GC_GameServerCfg(const GC_GameServerCfg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_cfg_(from.pb_cfg_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GC_GameServerCfg)
}

void GC_GameServerCfg::SharedCtor() {
  _cached_size_ = 0;
}

GC_GameServerCfg::~GC_GameServerCfg() {
  // @@protoc_insertion_point(destructor:GC_GameServerCfg)
  SharedDtor();
}

void GC_GameServerCfg::SharedDtor() {
}

void GC_GameServerCfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GC_GameServerCfg::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GC_GameServerCfg& GC_GameServerCfg::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

GC_GameServerCfg* GC_GameServerCfg::New(::google::protobuf::Arena* arena) const {
  GC_GameServerCfg* n = new GC_GameServerCfg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GC_GameServerCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:GC_GameServerCfg)
  pb_cfg_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GC_GameServerCfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GC_GameServerCfg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .GameClientRoomListCfg pb_cfg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_cfg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GC_GameServerCfg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GC_GameServerCfg)
  return false;
#undef DO_
}

void GC_GameServerCfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GC_GameServerCfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GameClientRoomListCfg pb_cfg = 1;
  for (unsigned int i = 0, n = this->pb_cfg_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_cfg(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GC_GameServerCfg)
}

::google::protobuf::uint8* GC_GameServerCfg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GC_GameServerCfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GameClientRoomListCfg pb_cfg = 1;
  for (unsigned int i = 0, n = this->pb_cfg_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_cfg(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GC_GameServerCfg)
  return target;
}

size_t GC_GameServerCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GC_GameServerCfg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .GameClientRoomListCfg pb_cfg = 1;
  {
    unsigned int count = this->pb_cfg_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_cfg(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GC_GameServerCfg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GC_GameServerCfg)
  GOOGLE_DCHECK_NE(&from, this);
  const GC_GameServerCfg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GC_GameServerCfg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GC_GameServerCfg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GC_GameServerCfg)
    MergeFrom(*source);
  }
}

void GC_GameServerCfg::MergeFrom(const GC_GameServerCfg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GC_GameServerCfg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_cfg_.MergeFrom(from.pb_cfg_);
}

void GC_GameServerCfg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GC_GameServerCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GC_GameServerCfg::CopyFrom(const GC_GameServerCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GC_GameServerCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GC_GameServerCfg::IsInitialized() const {
  return true;
}

void GC_GameServerCfg::Swap(GC_GameServerCfg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GC_GameServerCfg::InternalSwap(GC_GameServerCfg* other) {
  pb_cfg_.InternalSwap(&other->pb_cfg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GC_GameServerCfg::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GC_GameServerCfg

// repeated .GameClientRoomListCfg pb_cfg = 1;
int GC_GameServerCfg::pb_cfg_size() const {
  return pb_cfg_.size();
}
void GC_GameServerCfg::clear_pb_cfg() {
  pb_cfg_.Clear();
}
const ::GameClientRoomListCfg& GC_GameServerCfg::pb_cfg(int index) const {
  // @@protoc_insertion_point(field_get:GC_GameServerCfg.pb_cfg)
  return pb_cfg_.Get(index);
}
::GameClientRoomListCfg* GC_GameServerCfg::mutable_pb_cfg(int index) {
  // @@protoc_insertion_point(field_mutable:GC_GameServerCfg.pb_cfg)
  return pb_cfg_.Mutable(index);
}
::GameClientRoomListCfg* GC_GameServerCfg::add_pb_cfg() {
  // @@protoc_insertion_point(field_add:GC_GameServerCfg.pb_cfg)
  return pb_cfg_.Add();
}
::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg >*
GC_GameServerCfg::mutable_pb_cfg() {
  // @@protoc_insertion_point(field_mutable_list:GC_GameServerCfg.pb_cfg)
  return &pb_cfg_;
}
const ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg >&
GC_GameServerCfg::pb_cfg() const {
  // @@protoc_insertion_point(field_list:GC_GameServerCfg.pb_cfg)
  return pb_cfg_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CG_GameServerCfg::CG_GameServerCfg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CG_GameServerCfg)
}
CG_GameServerCfg::CG_GameServerCfg(const CG_GameServerCfg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CG_GameServerCfg)
}

void CG_GameServerCfg::SharedCtor() {
  _cached_size_ = 0;
}

CG_GameServerCfg::~CG_GameServerCfg() {
  // @@protoc_insertion_point(destructor:CG_GameServerCfg)
  SharedDtor();
}

void CG_GameServerCfg::SharedDtor() {
}

void CG_GameServerCfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CG_GameServerCfg::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CG_GameServerCfg& CG_GameServerCfg::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CG_GameServerCfg* CG_GameServerCfg::New(::google::protobuf::Arena* arena) const {
  CG_GameServerCfg* n = new CG_GameServerCfg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CG_GameServerCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:CG_GameServerCfg)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CG_GameServerCfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CG_GameServerCfg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CG_GameServerCfg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CG_GameServerCfg)
  return false;
#undef DO_
}

void CG_GameServerCfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CG_GameServerCfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CG_GameServerCfg)
}

::google::protobuf::uint8* CG_GameServerCfg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CG_GameServerCfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CG_GameServerCfg)
  return target;
}

size_t CG_GameServerCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CG_GameServerCfg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CG_GameServerCfg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CG_GameServerCfg)
  GOOGLE_DCHECK_NE(&from, this);
  const CG_GameServerCfg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CG_GameServerCfg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CG_GameServerCfg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CG_GameServerCfg)
    MergeFrom(*source);
  }
}

void CG_GameServerCfg::MergeFrom(const CG_GameServerCfg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CG_GameServerCfg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CG_GameServerCfg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CG_GameServerCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CG_GameServerCfg::CopyFrom(const CG_GameServerCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CG_GameServerCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CG_GameServerCfg::IsInitialized() const {
  return true;
}

void CG_GameServerCfg::Swap(CG_GameServerCfg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CG_GameServerCfg::InternalSwap(CG_GameServerCfg* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CG_GameServerCfg::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CG_GameServerCfg

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_BankSetPassword::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_BankSetPassword::CS_BankSetPassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_BankSetPassword)
}
CS_BankSetPassword::CS_BankSetPassword(const CS_BankSetPassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:CS_BankSetPassword)
}

void CS_BankSetPassword::SharedCtor() {
  _cached_size_ = 0;
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CS_BankSetPassword::~CS_BankSetPassword() {
  // @@protoc_insertion_point(destructor:CS_BankSetPassword)
  SharedDtor();
}

void CS_BankSetPassword::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_BankSetPassword::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_BankSetPassword::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_BankSetPassword& CS_BankSetPassword::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_BankSetPassword* CS_BankSetPassword::New(::google::protobuf::Arena* arena) const {
  CS_BankSetPassword* n = new CS_BankSetPassword;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_BankSetPassword::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_BankSetPassword)
  if (has_password()) {
    GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*password_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_BankSetPassword::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_BankSetPassword)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_BankSetPassword.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_BankSetPassword)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_BankSetPassword)
  return false;
#undef DO_
}

void CS_BankSetPassword::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_BankSetPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_BankSetPassword.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_BankSetPassword)
}

::google::protobuf::uint8* CS_BankSetPassword::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_BankSetPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_BankSetPassword.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_BankSetPassword)
  return target;
}

size_t CS_BankSetPassword::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_BankSetPassword)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string password = 1;
  if (has_password()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_BankSetPassword::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_BankSetPassword)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_BankSetPassword* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_BankSetPassword>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_BankSetPassword)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_BankSetPassword)
    MergeFrom(*source);
  }
}

void CS_BankSetPassword::MergeFrom(const CS_BankSetPassword& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_BankSetPassword)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_password()) {
    set_has_password();
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void CS_BankSetPassword::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_BankSetPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_BankSetPassword::CopyFrom(const CS_BankSetPassword& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_BankSetPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_BankSetPassword::IsInitialized() const {
  return true;
}

void CS_BankSetPassword::Swap(CS_BankSetPassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_BankSetPassword::InternalSwap(CS_BankSetPassword* other) {
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_BankSetPassword::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_BankSetPassword

// optional string password = 1;
bool CS_BankSetPassword::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_BankSetPassword::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_BankSetPassword::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_BankSetPassword::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CS_BankSetPassword::password() const {
  // @@protoc_insertion_point(field_get:CS_BankSetPassword.password)
  return password_.GetNoArena();
}
void CS_BankSetPassword::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_BankSetPassword.password)
}
#if LANG_CXX11
void CS_BankSetPassword::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_BankSetPassword.password)
}
#endif
void CS_BankSetPassword::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_BankSetPassword.password)
}
void CS_BankSetPassword::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_BankSetPassword.password)
}
::std::string* CS_BankSetPassword::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CS_BankSetPassword.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_BankSetPassword::release_password() {
  // @@protoc_insertion_point(field_release:CS_BankSetPassword.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_BankSetPassword::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CS_BankSetPassword.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_BankSetPassword::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_BankSetPassword::SC_BankSetPassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_BankSetPassword)
}
SC_BankSetPassword::SC_BankSetPassword(const SC_BankSetPassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SC_BankSetPassword)
}

void SC_BankSetPassword::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
}

SC_BankSetPassword::~SC_BankSetPassword() {
  // @@protoc_insertion_point(destructor:SC_BankSetPassword)
  SharedDtor();
}

void SC_BankSetPassword::SharedDtor() {
}

void SC_BankSetPassword::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_BankSetPassword::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_BankSetPassword& SC_BankSetPassword::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_BankSetPassword* SC_BankSetPassword::New(::google::protobuf::Arena* arena) const {
  SC_BankSetPassword* n = new SC_BankSetPassword;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_BankSetPassword::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_BankSetPassword)
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_BankSetPassword::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_BankSetPassword)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_BankSetPassword)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_BankSetPassword)
  return false;
#undef DO_
}

void SC_BankSetPassword::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_BankSetPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_BankSetPassword)
}

::google::protobuf::uint8* SC_BankSetPassword::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_BankSetPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_BankSetPassword)
  return target;
}

size_t SC_BankSetPassword::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_BankSetPassword)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_BankSetPassword::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_BankSetPassword)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_BankSetPassword* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_BankSetPassword>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_BankSetPassword)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_BankSetPassword)
    MergeFrom(*source);
  }
}

void SC_BankSetPassword::MergeFrom(const SC_BankSetPassword& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_BankSetPassword)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void SC_BankSetPassword::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_BankSetPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_BankSetPassword::CopyFrom(const SC_BankSetPassword& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_BankSetPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_BankSetPassword::IsInitialized() const {
  return true;
}

void SC_BankSetPassword::Swap(SC_BankSetPassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_BankSetPassword::InternalSwap(SC_BankSetPassword* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_BankSetPassword::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_BankSetPassword

// optional int32 result = 1;
bool SC_BankSetPassword::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_BankSetPassword::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_BankSetPassword::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_BankSetPassword::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_BankSetPassword::result() const {
  // @@protoc_insertion_point(field_get:SC_BankSetPassword.result)
  return result_;
}
void SC_BankSetPassword::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BankSetPassword.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_BankChangePassword::kOldPasswordFieldNumber;
const int CS_BankChangePassword::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_BankChangePassword::CS_BankChangePassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_BankChangePassword)
}
CS_BankChangePassword::CS_BankChangePassword(const CS_BankChangePassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  old_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_old_password()) {
    old_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_password_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:CS_BankChangePassword)
}

void CS_BankChangePassword::SharedCtor() {
  _cached_size_ = 0;
  old_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CS_BankChangePassword::~CS_BankChangePassword() {
  // @@protoc_insertion_point(destructor:CS_BankChangePassword)
  SharedDtor();
}

void CS_BankChangePassword::SharedDtor() {
  old_password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_BankChangePassword::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_BankChangePassword::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_BankChangePassword& CS_BankChangePassword::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_BankChangePassword* CS_BankChangePassword::New(::google::protobuf::Arena* arena) const {
  CS_BankChangePassword* n = new CS_BankChangePassword;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_BankChangePassword::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_BankChangePassword)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_old_password()) {
      GOOGLE_DCHECK(!old_password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*old_password_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_BankChangePassword::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_BankChangePassword)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string old_password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_old_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->old_password().data(), this->old_password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_BankChangePassword.old_password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_BankChangePassword.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_BankChangePassword)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_BankChangePassword)
  return false;
#undef DO_
}

void CS_BankChangePassword::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_BankChangePassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string old_password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_password().data(), this->old_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_BankChangePassword.old_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->old_password(), output);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_BankChangePassword.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_BankChangePassword)
}

::google::protobuf::uint8* CS_BankChangePassword::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_BankChangePassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string old_password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_password().data(), this->old_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_BankChangePassword.old_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->old_password(), target);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_BankChangePassword.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_BankChangePassword)
  return target;
}

size_t CS_BankChangePassword::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_BankChangePassword)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string old_password = 1;
    if (has_old_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->old_password());
    }

    // optional string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_BankChangePassword::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_BankChangePassword)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_BankChangePassword* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_BankChangePassword>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_BankChangePassword)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_BankChangePassword)
    MergeFrom(*source);
  }
}

void CS_BankChangePassword::MergeFrom(const CS_BankChangePassword& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_BankChangePassword)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_old_password();
      old_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_password_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
}

void CS_BankChangePassword::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_BankChangePassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_BankChangePassword::CopyFrom(const CS_BankChangePassword& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_BankChangePassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_BankChangePassword::IsInitialized() const {
  return true;
}

void CS_BankChangePassword::Swap(CS_BankChangePassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_BankChangePassword::InternalSwap(CS_BankChangePassword* other) {
  old_password_.Swap(&other->old_password_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_BankChangePassword::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_BankChangePassword

// optional string old_password = 1;
bool CS_BankChangePassword::has_old_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_BankChangePassword::set_has_old_password() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_BankChangePassword::clear_has_old_password() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_BankChangePassword::clear_old_password() {
  old_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_old_password();
}
const ::std::string& CS_BankChangePassword::old_password() const {
  // @@protoc_insertion_point(field_get:CS_BankChangePassword.old_password)
  return old_password_.GetNoArena();
}
void CS_BankChangePassword::set_old_password(const ::std::string& value) {
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_BankChangePassword.old_password)
}
#if LANG_CXX11
void CS_BankChangePassword::set_old_password(::std::string&& value) {
  set_has_old_password();
  old_password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_BankChangePassword.old_password)
}
#endif
void CS_BankChangePassword::set_old_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_BankChangePassword.old_password)
}
void CS_BankChangePassword::set_old_password(const char* value, size_t size) {
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_BankChangePassword.old_password)
}
::std::string* CS_BankChangePassword::mutable_old_password() {
  set_has_old_password();
  // @@protoc_insertion_point(field_mutable:CS_BankChangePassword.old_password)
  return old_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_BankChangePassword::release_old_password() {
  // @@protoc_insertion_point(field_release:CS_BankChangePassword.old_password)
  clear_has_old_password();
  return old_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_BankChangePassword::set_allocated_old_password(::std::string* old_password) {
  if (old_password != NULL) {
    set_has_old_password();
  } else {
    clear_has_old_password();
  }
  old_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), old_password);
  // @@protoc_insertion_point(field_set_allocated:CS_BankChangePassword.old_password)
}

// optional string password = 2;
bool CS_BankChangePassword::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_BankChangePassword::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_BankChangePassword::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_BankChangePassword::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CS_BankChangePassword::password() const {
  // @@protoc_insertion_point(field_get:CS_BankChangePassword.password)
  return password_.GetNoArena();
}
void CS_BankChangePassword::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_BankChangePassword.password)
}
#if LANG_CXX11
void CS_BankChangePassword::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_BankChangePassword.password)
}
#endif
void CS_BankChangePassword::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_BankChangePassword.password)
}
void CS_BankChangePassword::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_BankChangePassword.password)
}
::std::string* CS_BankChangePassword::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CS_BankChangePassword.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_BankChangePassword::release_password() {
  // @@protoc_insertion_point(field_release:CS_BankChangePassword.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_BankChangePassword::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CS_BankChangePassword.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_BankChangePassword::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_BankChangePassword::SC_BankChangePassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_BankChangePassword)
}
SC_BankChangePassword::SC_BankChangePassword(const SC_BankChangePassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SC_BankChangePassword)
}

void SC_BankChangePassword::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
}

SC_BankChangePassword::~SC_BankChangePassword() {
  // @@protoc_insertion_point(destructor:SC_BankChangePassword)
  SharedDtor();
}

void SC_BankChangePassword::SharedDtor() {
}

void SC_BankChangePassword::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_BankChangePassword::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_BankChangePassword& SC_BankChangePassword::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_BankChangePassword* SC_BankChangePassword::New(::google::protobuf::Arena* arena) const {
  SC_BankChangePassword* n = new SC_BankChangePassword;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_BankChangePassword::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_BankChangePassword)
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_BankChangePassword::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_BankChangePassword)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_BankChangePassword)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_BankChangePassword)
  return false;
#undef DO_
}

void SC_BankChangePassword::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_BankChangePassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_BankChangePassword)
}

::google::protobuf::uint8* SC_BankChangePassword::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_BankChangePassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_BankChangePassword)
  return target;
}

size_t SC_BankChangePassword::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_BankChangePassword)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_BankChangePassword::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_BankChangePassword)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_BankChangePassword* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_BankChangePassword>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_BankChangePassword)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_BankChangePassword)
    MergeFrom(*source);
  }
}

void SC_BankChangePassword::MergeFrom(const SC_BankChangePassword& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_BankChangePassword)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void SC_BankChangePassword::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_BankChangePassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_BankChangePassword::CopyFrom(const SC_BankChangePassword& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_BankChangePassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_BankChangePassword::IsInitialized() const {
  return true;
}

void SC_BankChangePassword::Swap(SC_BankChangePassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_BankChangePassword::InternalSwap(SC_BankChangePassword* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_BankChangePassword::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_BankChangePassword

// optional int32 result = 1;
bool SC_BankChangePassword::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_BankChangePassword::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_BankChangePassword::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_BankChangePassword::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_BankChangePassword::result() const {
  // @@protoc_insertion_point(field_get:SC_BankChangePassword.result)
  return result_;
}
void SC_BankChangePassword::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BankChangePassword.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_BankLogin::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_BankLogin::CS_BankLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_BankLogin)
}
CS_BankLogin::CS_BankLogin(const CS_BankLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:CS_BankLogin)
}

void CS_BankLogin::SharedCtor() {
  _cached_size_ = 0;
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CS_BankLogin::~CS_BankLogin() {
  // @@protoc_insertion_point(destructor:CS_BankLogin)
  SharedDtor();
}

void CS_BankLogin::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_BankLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_BankLogin::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_BankLogin& CS_BankLogin::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_BankLogin* CS_BankLogin::New(::google::protobuf::Arena* arena) const {
  CS_BankLogin* n = new CS_BankLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_BankLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_BankLogin)
  if (has_password()) {
    GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*password_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_BankLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_BankLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_BankLogin.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_BankLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_BankLogin)
  return false;
#undef DO_
}

void CS_BankLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_BankLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_BankLogin.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_BankLogin)
}

::google::protobuf::uint8* CS_BankLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_BankLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_BankLogin.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_BankLogin)
  return target;
}

size_t CS_BankLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_BankLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string password = 1;
  if (has_password()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_BankLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_BankLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_BankLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_BankLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_BankLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_BankLogin)
    MergeFrom(*source);
  }
}

void CS_BankLogin::MergeFrom(const CS_BankLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_BankLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_password()) {
    set_has_password();
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void CS_BankLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_BankLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_BankLogin::CopyFrom(const CS_BankLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_BankLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_BankLogin::IsInitialized() const {
  return true;
}

void CS_BankLogin::Swap(CS_BankLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_BankLogin::InternalSwap(CS_BankLogin* other) {
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_BankLogin::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_BankLogin

// optional string password = 1;
bool CS_BankLogin::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_BankLogin::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_BankLogin::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_BankLogin::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CS_BankLogin::password() const {
  // @@protoc_insertion_point(field_get:CS_BankLogin.password)
  return password_.GetNoArena();
}
void CS_BankLogin::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_BankLogin.password)
}
#if LANG_CXX11
void CS_BankLogin::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_BankLogin.password)
}
#endif
void CS_BankLogin::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_BankLogin.password)
}
void CS_BankLogin::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_BankLogin.password)
}
::std::string* CS_BankLogin::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CS_BankLogin.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_BankLogin::release_password() {
  // @@protoc_insertion_point(field_release:CS_BankLogin.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_BankLogin::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CS_BankLogin.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_BankLogin::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_BankLogin::SC_BankLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_BankLogin)
}
SC_BankLogin::SC_BankLogin(const SC_BankLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SC_BankLogin)
}

void SC_BankLogin::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
}

SC_BankLogin::~SC_BankLogin() {
  // @@protoc_insertion_point(destructor:SC_BankLogin)
  SharedDtor();
}

void SC_BankLogin::SharedDtor() {
}

void SC_BankLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_BankLogin::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_BankLogin& SC_BankLogin::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_BankLogin* SC_BankLogin::New(::google::protobuf::Arena* arena) const {
  SC_BankLogin* n = new SC_BankLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_BankLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_BankLogin)
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_BankLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_BankLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_BankLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_BankLogin)
  return false;
#undef DO_
}

void SC_BankLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_BankLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_BankLogin)
}

::google::protobuf::uint8* SC_BankLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_BankLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_BankLogin)
  return target;
}

size_t SC_BankLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_BankLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_BankLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_BankLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_BankLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_BankLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_BankLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_BankLogin)
    MergeFrom(*source);
  }
}

void SC_BankLogin::MergeFrom(const SC_BankLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_BankLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void SC_BankLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_BankLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_BankLogin::CopyFrom(const SC_BankLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_BankLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_BankLogin::IsInitialized() const {
  return true;
}

void SC_BankLogin::Swap(SC_BankLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_BankLogin::InternalSwap(SC_BankLogin* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_BankLogin::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_BankLogin

// optional int32 result = 1;
bool SC_BankLogin::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_BankLogin::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_BankLogin::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_BankLogin::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_BankLogin::result() const {
  // @@protoc_insertion_point(field_get:SC_BankLogin.result)
  return result_;
}
void SC_BankLogin::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BankLogin.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_BankDeposit::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_BankDeposit::CS_BankDeposit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_BankDeposit)
}
CS_BankDeposit::CS_BankDeposit(const CS_BankDeposit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  money_ = from.money_;
  // @@protoc_insertion_point(copy_constructor:CS_BankDeposit)
}

void CS_BankDeposit::SharedCtor() {
  _cached_size_ = 0;
  money_ = GOOGLE_LONGLONG(0);
}

CS_BankDeposit::~CS_BankDeposit() {
  // @@protoc_insertion_point(destructor:CS_BankDeposit)
  SharedDtor();
}

void CS_BankDeposit::SharedDtor() {
}

void CS_BankDeposit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_BankDeposit::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_BankDeposit& CS_BankDeposit::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_BankDeposit* CS_BankDeposit::New(::google::protobuf::Arena* arena) const {
  CS_BankDeposit* n = new CS_BankDeposit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_BankDeposit::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_BankDeposit)
  money_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_BankDeposit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_BankDeposit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 money = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_BankDeposit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_BankDeposit)
  return false;
#undef DO_
}

void CS_BankDeposit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_BankDeposit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 money = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_BankDeposit)
}

::google::protobuf::uint8* CS_BankDeposit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_BankDeposit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 money = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_BankDeposit)
  return target;
}

size_t CS_BankDeposit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_BankDeposit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int64 money = 1;
  if (has_money()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->money());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_BankDeposit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_BankDeposit)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_BankDeposit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_BankDeposit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_BankDeposit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_BankDeposit)
    MergeFrom(*source);
  }
}

void CS_BankDeposit::MergeFrom(const CS_BankDeposit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_BankDeposit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_money()) {
    set_money(from.money());
  }
}

void CS_BankDeposit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_BankDeposit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_BankDeposit::CopyFrom(const CS_BankDeposit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_BankDeposit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_BankDeposit::IsInitialized() const {
  return true;
}

void CS_BankDeposit::Swap(CS_BankDeposit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_BankDeposit::InternalSwap(CS_BankDeposit* other) {
  std::swap(money_, other->money_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_BankDeposit::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_BankDeposit

// optional int64 money = 1;
bool CS_BankDeposit::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_BankDeposit::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_BankDeposit::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_BankDeposit::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 CS_BankDeposit::money() const {
  // @@protoc_insertion_point(field_get:CS_BankDeposit.money)
  return money_;
}
void CS_BankDeposit::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CS_BankDeposit.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_BankDeposit::kResultFieldNumber;
const int SC_BankDeposit::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_BankDeposit::SC_BankDeposit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_BankDeposit)
}
SC_BankDeposit::SC_BankDeposit(const SC_BankDeposit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&money_, &from.money_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&money_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_BankDeposit)
}

void SC_BankDeposit::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&money_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&money_) + sizeof(result_));
}

SC_BankDeposit::~SC_BankDeposit() {
  // @@protoc_insertion_point(destructor:SC_BankDeposit)
  SharedDtor();
}

void SC_BankDeposit::SharedDtor() {
}

void SC_BankDeposit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_BankDeposit::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_BankDeposit& SC_BankDeposit::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_BankDeposit* SC_BankDeposit::New(::google::protobuf::Arena* arena) const {
  SC_BankDeposit* n = new SC_BankDeposit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_BankDeposit::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_BankDeposit)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&money_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&money_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_BankDeposit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_BankDeposit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_BankDeposit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_BankDeposit)
  return false;
#undef DO_
}

void SC_BankDeposit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_BankDeposit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_BankDeposit)
}

::google::protobuf::uint8* SC_BankDeposit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_BankDeposit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_BankDeposit)
  return target;
}

size_t SC_BankDeposit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_BankDeposit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_BankDeposit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_BankDeposit)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_BankDeposit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_BankDeposit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_BankDeposit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_BankDeposit)
    MergeFrom(*source);
  }
}

void SC_BankDeposit::MergeFrom(const SC_BankDeposit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_BankDeposit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_BankDeposit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_BankDeposit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_BankDeposit::CopyFrom(const SC_BankDeposit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_BankDeposit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_BankDeposit::IsInitialized() const {
  return true;
}

void SC_BankDeposit::Swap(SC_BankDeposit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_BankDeposit::InternalSwap(SC_BankDeposit* other) {
  std::swap(money_, other->money_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_BankDeposit::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_BankDeposit

// optional int32 result = 1;
bool SC_BankDeposit::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_BankDeposit::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_BankDeposit::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_BankDeposit::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_BankDeposit::result() const {
  // @@protoc_insertion_point(field_get:SC_BankDeposit.result)
  return result_;
}
void SC_BankDeposit::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BankDeposit.result)
}

// optional int64 money = 2;
bool SC_BankDeposit::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_BankDeposit::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_BankDeposit::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_BankDeposit::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 SC_BankDeposit::money() const {
  // @@protoc_insertion_point(field_get:SC_BankDeposit.money)
  return money_;
}
void SC_BankDeposit::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_BankDeposit.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_BankDraw::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_BankDraw::CS_BankDraw()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_BankDraw)
}
CS_BankDraw::CS_BankDraw(const CS_BankDraw& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  money_ = from.money_;
  // @@protoc_insertion_point(copy_constructor:CS_BankDraw)
}

void CS_BankDraw::SharedCtor() {
  _cached_size_ = 0;
  money_ = GOOGLE_LONGLONG(0);
}

CS_BankDraw::~CS_BankDraw() {
  // @@protoc_insertion_point(destructor:CS_BankDraw)
  SharedDtor();
}

void CS_BankDraw::SharedDtor() {
}

void CS_BankDraw::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_BankDraw::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_BankDraw& CS_BankDraw::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_BankDraw* CS_BankDraw::New(::google::protobuf::Arena* arena) const {
  CS_BankDraw* n = new CS_BankDraw;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_BankDraw::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_BankDraw)
  money_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_BankDraw::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_BankDraw)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 money = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_BankDraw)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_BankDraw)
  return false;
#undef DO_
}

void CS_BankDraw::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_BankDraw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 money = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_BankDraw)
}

::google::protobuf::uint8* CS_BankDraw::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_BankDraw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 money = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_BankDraw)
  return target;
}

size_t CS_BankDraw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_BankDraw)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int64 money = 1;
  if (has_money()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->money());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_BankDraw::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_BankDraw)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_BankDraw* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_BankDraw>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_BankDraw)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_BankDraw)
    MergeFrom(*source);
  }
}

void CS_BankDraw::MergeFrom(const CS_BankDraw& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_BankDraw)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_money()) {
    set_money(from.money());
  }
}

void CS_BankDraw::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_BankDraw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_BankDraw::CopyFrom(const CS_BankDraw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_BankDraw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_BankDraw::IsInitialized() const {
  return true;
}

void CS_BankDraw::Swap(CS_BankDraw* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_BankDraw::InternalSwap(CS_BankDraw* other) {
  std::swap(money_, other->money_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_BankDraw::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_BankDraw

// optional int64 money = 1;
bool CS_BankDraw::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_BankDraw::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_BankDraw::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_BankDraw::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 CS_BankDraw::money() const {
  // @@protoc_insertion_point(field_get:CS_BankDraw.money)
  return money_;
}
void CS_BankDraw::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CS_BankDraw.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_BankDraw::kResultFieldNumber;
const int SC_BankDraw::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_BankDraw::SC_BankDraw()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_BankDraw)
}
SC_BankDraw::SC_BankDraw(const SC_BankDraw& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&money_, &from.money_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&money_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_BankDraw)
}

void SC_BankDraw::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&money_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&money_) + sizeof(result_));
}

SC_BankDraw::~SC_BankDraw() {
  // @@protoc_insertion_point(destructor:SC_BankDraw)
  SharedDtor();
}

void SC_BankDraw::SharedDtor() {
}

void SC_BankDraw::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_BankDraw::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_BankDraw& SC_BankDraw::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_BankDraw* SC_BankDraw::New(::google::protobuf::Arena* arena) const {
  SC_BankDraw* n = new SC_BankDraw;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_BankDraw::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_BankDraw)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&money_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&money_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_BankDraw::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_BankDraw)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_BankDraw)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_BankDraw)
  return false;
#undef DO_
}

void SC_BankDraw::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_BankDraw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_BankDraw)
}

::google::protobuf::uint8* SC_BankDraw::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_BankDraw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_BankDraw)
  return target;
}

size_t SC_BankDraw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_BankDraw)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_BankDraw::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_BankDraw)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_BankDraw* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_BankDraw>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_BankDraw)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_BankDraw)
    MergeFrom(*source);
  }
}

void SC_BankDraw::MergeFrom(const SC_BankDraw& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_BankDraw)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_BankDraw::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_BankDraw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_BankDraw::CopyFrom(const SC_BankDraw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_BankDraw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_BankDraw::IsInitialized() const {
  return true;
}

void SC_BankDraw::Swap(SC_BankDraw* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_BankDraw::InternalSwap(SC_BankDraw* other) {
  std::swap(money_, other->money_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_BankDraw::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_BankDraw

// optional int32 result = 1;
bool SC_BankDraw::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_BankDraw::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_BankDraw::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_BankDraw::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_BankDraw::result() const {
  // @@protoc_insertion_point(field_get:SC_BankDraw.result)
  return result_;
}
void SC_BankDraw::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BankDraw.result)
}

// optional int64 money = 2;
bool SC_BankDraw::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_BankDraw::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_BankDraw::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_BankDraw::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 SC_BankDraw::money() const {
  // @@protoc_insertion_point(field_get:SC_BankDraw.money)
  return money_;
}
void SC_BankDraw::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_BankDraw.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_NotifyBankStatement::kPbStatementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_NotifyBankStatement::SC_NotifyBankStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_NotifyBankStatement)
}
SC_NotifyBankStatement::SC_NotifyBankStatement(const SC_NotifyBankStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pb_statement()) {
    pb_statement_ = new ::BankStatement(*from.pb_statement_);
  } else {
    pb_statement_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:SC_NotifyBankStatement)
}

void SC_NotifyBankStatement::SharedCtor() {
  _cached_size_ = 0;
  pb_statement_ = NULL;
}

SC_NotifyBankStatement::~SC_NotifyBankStatement() {
  // @@protoc_insertion_point(destructor:SC_NotifyBankStatement)
  SharedDtor();
}

void SC_NotifyBankStatement::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pb_statement_;
  }
}

void SC_NotifyBankStatement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_NotifyBankStatement::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_NotifyBankStatement& SC_NotifyBankStatement::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_NotifyBankStatement* SC_NotifyBankStatement::New(::google::protobuf::Arena* arena) const {
  SC_NotifyBankStatement* n = new SC_NotifyBankStatement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_NotifyBankStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_NotifyBankStatement)
  if (has_pb_statement()) {
    GOOGLE_DCHECK(pb_statement_ != NULL);
    pb_statement_->::BankStatement::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_NotifyBankStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_NotifyBankStatement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .BankStatement pb_statement = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pb_statement()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_NotifyBankStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_NotifyBankStatement)
  return false;
#undef DO_
}

void SC_NotifyBankStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_NotifyBankStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .BankStatement pb_statement = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pb_statement_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_NotifyBankStatement)
}

::google::protobuf::uint8* SC_NotifyBankStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_NotifyBankStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .BankStatement pb_statement = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pb_statement_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_NotifyBankStatement)
  return target;
}

size_t SC_NotifyBankStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_NotifyBankStatement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .BankStatement pb_statement = 1;
  if (has_pb_statement()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pb_statement_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_NotifyBankStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_NotifyBankStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_NotifyBankStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_NotifyBankStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_NotifyBankStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_NotifyBankStatement)
    MergeFrom(*source);
  }
}

void SC_NotifyBankStatement::MergeFrom(const SC_NotifyBankStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_NotifyBankStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pb_statement()) {
    mutable_pb_statement()->::BankStatement::MergeFrom(from.pb_statement());
  }
}

void SC_NotifyBankStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_NotifyBankStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_NotifyBankStatement::CopyFrom(const SC_NotifyBankStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_NotifyBankStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_NotifyBankStatement::IsInitialized() const {
  return true;
}

void SC_NotifyBankStatement::Swap(SC_NotifyBankStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_NotifyBankStatement::InternalSwap(SC_NotifyBankStatement* other) {
  std::swap(pb_statement_, other->pb_statement_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_NotifyBankStatement::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_NotifyBankStatement

// optional .BankStatement pb_statement = 1;
bool SC_NotifyBankStatement::has_pb_statement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_NotifyBankStatement::set_has_pb_statement() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_NotifyBankStatement::clear_has_pb_statement() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_NotifyBankStatement::clear_pb_statement() {
  if (pb_statement_ != NULL) pb_statement_->::BankStatement::Clear();
  clear_has_pb_statement();
}
const ::BankStatement& SC_NotifyBankStatement::pb_statement() const {
  // @@protoc_insertion_point(field_get:SC_NotifyBankStatement.pb_statement)
  return pb_statement_ != NULL ? *pb_statement_
                         : *::BankStatement::internal_default_instance();
}
::BankStatement* SC_NotifyBankStatement::mutable_pb_statement() {
  set_has_pb_statement();
  if (pb_statement_ == NULL) {
    pb_statement_ = new ::BankStatement;
  }
  // @@protoc_insertion_point(field_mutable:SC_NotifyBankStatement.pb_statement)
  return pb_statement_;
}
::BankStatement* SC_NotifyBankStatement::release_pb_statement() {
  // @@protoc_insertion_point(field_release:SC_NotifyBankStatement.pb_statement)
  clear_has_pb_statement();
  ::BankStatement* temp = pb_statement_;
  pb_statement_ = NULL;
  return temp;
}
void SC_NotifyBankStatement::set_allocated_pb_statement(::BankStatement* pb_statement) {
  delete pb_statement_;
  pb_statement_ = pb_statement;
  if (pb_statement) {
    set_has_pb_statement();
  } else {
    clear_has_pb_statement();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_NotifyBankStatement.pb_statement)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_BankStatement::kCurSerialFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_BankStatement::CS_BankStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_BankStatement)
}
CS_BankStatement::CS_BankStatement(const CS_BankStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cur_serial_ = from.cur_serial_;
  // @@protoc_insertion_point(copy_constructor:CS_BankStatement)
}

void CS_BankStatement::SharedCtor() {
  _cached_size_ = 0;
  cur_serial_ = GOOGLE_LONGLONG(0);
}

CS_BankStatement::~CS_BankStatement() {
  // @@protoc_insertion_point(destructor:CS_BankStatement)
  SharedDtor();
}

void CS_BankStatement::SharedDtor() {
}

void CS_BankStatement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_BankStatement::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_BankStatement& CS_BankStatement::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_BankStatement* CS_BankStatement::New(::google::protobuf::Arena* arena) const {
  CS_BankStatement* n = new CS_BankStatement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_BankStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_BankStatement)
  cur_serial_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_BankStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_BankStatement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 cur_serial = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_cur_serial();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cur_serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_BankStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_BankStatement)
  return false;
#undef DO_
}

void CS_BankStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_BankStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 cur_serial = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->cur_serial(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_BankStatement)
}

::google::protobuf::uint8* CS_BankStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_BankStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 cur_serial = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->cur_serial(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_BankStatement)
  return target;
}

size_t CS_BankStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_BankStatement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int64 cur_serial = 1;
  if (has_cur_serial()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cur_serial());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_BankStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_BankStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_BankStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_BankStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_BankStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_BankStatement)
    MergeFrom(*source);
  }
}

void CS_BankStatement::MergeFrom(const CS_BankStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_BankStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cur_serial()) {
    set_cur_serial(from.cur_serial());
  }
}

void CS_BankStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_BankStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_BankStatement::CopyFrom(const CS_BankStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_BankStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_BankStatement::IsInitialized() const {
  return true;
}

void CS_BankStatement::Swap(CS_BankStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_BankStatement::InternalSwap(CS_BankStatement* other) {
  std::swap(cur_serial_, other->cur_serial_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_BankStatement::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_BankStatement

// optional int64 cur_serial = 1;
bool CS_BankStatement::has_cur_serial() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_BankStatement::set_has_cur_serial() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_BankStatement::clear_has_cur_serial() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_BankStatement::clear_cur_serial() {
  cur_serial_ = GOOGLE_LONGLONG(0);
  clear_has_cur_serial();
}
::google::protobuf::int64 CS_BankStatement::cur_serial() const {
  // @@protoc_insertion_point(field_get:CS_BankStatement.cur_serial)
  return cur_serial_;
}
void CS_BankStatement::set_cur_serial(::google::protobuf::int64 value) {
  set_has_cur_serial();
  cur_serial_ = value;
  // @@protoc_insertion_point(field_set:CS_BankStatement.cur_serial)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_BankStatement::kPbStatementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_BankStatement::SC_BankStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_BankStatement)
}
SC_BankStatement::SC_BankStatement(const SC_BankStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_statement_(from.pb_statement_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SC_BankStatement)
}

void SC_BankStatement::SharedCtor() {
  _cached_size_ = 0;
}

SC_BankStatement::~SC_BankStatement() {
  // @@protoc_insertion_point(destructor:SC_BankStatement)
  SharedDtor();
}

void SC_BankStatement::SharedDtor() {
}

void SC_BankStatement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_BankStatement::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_BankStatement& SC_BankStatement::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_BankStatement* SC_BankStatement::New(::google::protobuf::Arena* arena) const {
  SC_BankStatement* n = new SC_BankStatement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_BankStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_BankStatement)
  pb_statement_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_BankStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_BankStatement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .BankStatement pb_statement = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_statement()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_BankStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_BankStatement)
  return false;
#undef DO_
}

void SC_BankStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_BankStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BankStatement pb_statement = 1;
  for (unsigned int i = 0, n = this->pb_statement_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_statement(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_BankStatement)
}

::google::protobuf::uint8* SC_BankStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_BankStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BankStatement pb_statement = 1;
  for (unsigned int i = 0, n = this->pb_statement_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_statement(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_BankStatement)
  return target;
}

size_t SC_BankStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_BankStatement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .BankStatement pb_statement = 1;
  {
    unsigned int count = this->pb_statement_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_statement(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_BankStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_BankStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_BankStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_BankStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_BankStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_BankStatement)
    MergeFrom(*source);
  }
}

void SC_BankStatement::MergeFrom(const SC_BankStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_BankStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_statement_.MergeFrom(from.pb_statement_);
}

void SC_BankStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_BankStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_BankStatement::CopyFrom(const SC_BankStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_BankStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_BankStatement::IsInitialized() const {
  return true;
}

void SC_BankStatement::Swap(SC_BankStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_BankStatement::InternalSwap(SC_BankStatement* other) {
  pb_statement_.InternalSwap(&other->pb_statement_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_BankStatement::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_BankStatement

// repeated .BankStatement pb_statement = 1;
int SC_BankStatement::pb_statement_size() const {
  return pb_statement_.size();
}
void SC_BankStatement::clear_pb_statement() {
  pb_statement_.Clear();
}
const ::BankStatement& SC_BankStatement::pb_statement(int index) const {
  // @@protoc_insertion_point(field_get:SC_BankStatement.pb_statement)
  return pb_statement_.Get(index);
}
::BankStatement* SC_BankStatement::mutable_pb_statement(int index) {
  // @@protoc_insertion_point(field_mutable:SC_BankStatement.pb_statement)
  return pb_statement_.Mutable(index);
}
::BankStatement* SC_BankStatement::add_pb_statement() {
  // @@protoc_insertion_point(field_add:SC_BankStatement.pb_statement)
  return pb_statement_.Add();
}
::google::protobuf::RepeatedPtrField< ::BankStatement >*
SC_BankStatement::mutable_pb_statement() {
  // @@protoc_insertion_point(field_mutable_list:SC_BankStatement.pb_statement)
  return &pb_statement_;
}
const ::google::protobuf::RepeatedPtrField< ::BankStatement >&
SC_BankStatement::pb_statement() const {
  // @@protoc_insertion_point(field_list:SC_BankStatement.pb_statement)
  return pb_statement_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_BankTransfer::kAccountFieldNumber;
const int CS_BankTransfer::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_BankTransfer::CS_BankTransfer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_BankTransfer)
}
CS_BankTransfer::CS_BankTransfer(const CS_BankTransfer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  money_ = from.money_;
  // @@protoc_insertion_point(copy_constructor:CS_BankTransfer)
}

void CS_BankTransfer::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  money_ = GOOGLE_LONGLONG(0);
}

CS_BankTransfer::~CS_BankTransfer() {
  // @@protoc_insertion_point(destructor:CS_BankTransfer)
  SharedDtor();
}

void CS_BankTransfer::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_BankTransfer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_BankTransfer::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_BankTransfer& CS_BankTransfer::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_BankTransfer* CS_BankTransfer::New(::google::protobuf::Arena* arena) const {
  CS_BankTransfer* n = new CS_BankTransfer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_BankTransfer::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_BankTransfer)
  if (has_account()) {
    GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_.UnsafeRawStringPointer())->clear();
  }
  money_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_BankTransfer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_BankTransfer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_BankTransfer.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_BankTransfer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_BankTransfer)
  return false;
#undef DO_
}

void CS_BankTransfer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_BankTransfer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_BankTransfer.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_BankTransfer)
}

::google::protobuf::uint8* CS_BankTransfer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_BankTransfer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_BankTransfer.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_BankTransfer)
  return target;
}

size_t CS_BankTransfer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_BankTransfer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional int64 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_BankTransfer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_BankTransfer)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_BankTransfer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_BankTransfer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_BankTransfer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_BankTransfer)
    MergeFrom(*source);
  }
}

void CS_BankTransfer::MergeFrom(const CS_BankTransfer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_BankTransfer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      money_ = from.money_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CS_BankTransfer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_BankTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_BankTransfer::CopyFrom(const CS_BankTransfer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_BankTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_BankTransfer::IsInitialized() const {
  return true;
}

void CS_BankTransfer::Swap(CS_BankTransfer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_BankTransfer::InternalSwap(CS_BankTransfer* other) {
  account_.Swap(&other->account_);
  std::swap(money_, other->money_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_BankTransfer::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_BankTransfer

// optional string account = 1;
bool CS_BankTransfer::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_BankTransfer::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_BankTransfer::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_BankTransfer::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& CS_BankTransfer::account() const {
  // @@protoc_insertion_point(field_get:CS_BankTransfer.account)
  return account_.GetNoArena();
}
void CS_BankTransfer::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_BankTransfer.account)
}
#if LANG_CXX11
void CS_BankTransfer::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_BankTransfer.account)
}
#endif
void CS_BankTransfer::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_BankTransfer.account)
}
void CS_BankTransfer::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_BankTransfer.account)
}
::std::string* CS_BankTransfer::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:CS_BankTransfer.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_BankTransfer::release_account() {
  // @@protoc_insertion_point(field_release:CS_BankTransfer.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_BankTransfer::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:CS_BankTransfer.account)
}

// optional int64 money = 2;
bool CS_BankTransfer::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_BankTransfer::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_BankTransfer::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_BankTransfer::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 CS_BankTransfer::money() const {
  // @@protoc_insertion_point(field_get:CS_BankTransfer.money)
  return money_;
}
void CS_BankTransfer::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CS_BankTransfer.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_BankTransfer::kResultFieldNumber;
const int SC_BankTransfer::kMoneyFieldNumber;
const int SC_BankTransfer::kBankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_BankTransfer::SC_BankTransfer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_BankTransfer)
}
SC_BankTransfer::SC_BankTransfer(const SC_BankTransfer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&money_, &from.money_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&money_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_BankTransfer)
}

void SC_BankTransfer::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&money_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&money_) + sizeof(result_));
}

SC_BankTransfer::~SC_BankTransfer() {
  // @@protoc_insertion_point(destructor:SC_BankTransfer)
  SharedDtor();
}

void SC_BankTransfer::SharedDtor() {
}

void SC_BankTransfer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_BankTransfer::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_BankTransfer& SC_BankTransfer::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_BankTransfer* SC_BankTransfer::New(::google::protobuf::Arena* arena) const {
  SC_BankTransfer* n = new SC_BankTransfer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_BankTransfer::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_BankTransfer)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&money_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&money_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_BankTransfer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_BankTransfer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 bank = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_bank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_BankTransfer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_BankTransfer)
  return false;
#undef DO_
}

void SC_BankTransfer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_BankTransfer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->money(), output);
  }

  // optional int64 bank = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->bank(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_BankTransfer)
}

::google::protobuf::uint8* SC_BankTransfer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_BankTransfer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->money(), target);
  }

  // optional int64 bank = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->bank(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_BankTransfer)
  return target;
}

size_t SC_BankTransfer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_BankTransfer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int64 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional int64 bank = 3;
    if (has_bank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bank());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_BankTransfer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_BankTransfer)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_BankTransfer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_BankTransfer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_BankTransfer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_BankTransfer)
    MergeFrom(*source);
  }
}

void SC_BankTransfer::MergeFrom(const SC_BankTransfer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_BankTransfer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000002u) {
      bank_ = from.bank_;
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_BankTransfer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_BankTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_BankTransfer::CopyFrom(const SC_BankTransfer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_BankTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_BankTransfer::IsInitialized() const {
  return true;
}

void SC_BankTransfer::Swap(SC_BankTransfer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_BankTransfer::InternalSwap(SC_BankTransfer* other) {
  std::swap(money_, other->money_);
  std::swap(bank_, other->bank_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_BankTransfer::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_BankTransfer

// optional int32 result = 1;
bool SC_BankTransfer::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_BankTransfer::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_BankTransfer::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_BankTransfer::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_BankTransfer::result() const {
  // @@protoc_insertion_point(field_get:SC_BankTransfer.result)
  return result_;
}
void SC_BankTransfer::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BankTransfer.result)
}

// optional int64 money = 2;
bool SC_BankTransfer::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_BankTransfer::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_BankTransfer::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_BankTransfer::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 SC_BankTransfer::money() const {
  // @@protoc_insertion_point(field_get:SC_BankTransfer.money)
  return money_;
}
void SC_BankTransfer::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_BankTransfer.money)
}

// optional int64 bank = 3;
bool SC_BankTransfer::has_bank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_BankTransfer::set_has_bank() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_BankTransfer::clear_has_bank() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_BankTransfer::clear_bank() {
  bank_ = GOOGLE_LONGLONG(0);
  clear_has_bank();
}
::google::protobuf::int64 SC_BankTransfer::bank() const {
  // @@protoc_insertion_point(field_get:SC_BankTransfer.bank)
  return bank_;
}
void SC_BankTransfer::set_bank(::google::protobuf::int64 value) {
  set_has_bank();
  bank_ = value;
  // @@protoc_insertion_point(field_set:SC_BankTransfer.bank)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_NotifyMoney::kOptTypeFieldNumber;
const int SC_NotifyMoney::kMoneyFieldNumber;
const int SC_NotifyMoney::kChangeMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_NotifyMoney::SC_NotifyMoney()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_NotifyMoney)
}
SC_NotifyMoney::SC_NotifyMoney(const SC_NotifyMoney& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&money_, &from.money_,
    reinterpret_cast<char*>(&opt_type_) -
    reinterpret_cast<char*>(&money_) + sizeof(opt_type_));
  // @@protoc_insertion_point(copy_constructor:SC_NotifyMoney)
}

void SC_NotifyMoney::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&money_, 0, reinterpret_cast<char*>(&opt_type_) -
    reinterpret_cast<char*>(&money_) + sizeof(opt_type_));
}

SC_NotifyMoney::~SC_NotifyMoney() {
  // @@protoc_insertion_point(destructor:SC_NotifyMoney)
  SharedDtor();
}

void SC_NotifyMoney::SharedDtor() {
}

void SC_NotifyMoney::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_NotifyMoney::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_NotifyMoney& SC_NotifyMoney::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_NotifyMoney* SC_NotifyMoney::New(::google::protobuf::Arena* arena) const {
  SC_NotifyMoney* n = new SC_NotifyMoney;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_NotifyMoney::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_NotifyMoney)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&money_, 0, reinterpret_cast<char*>(&opt_type_) -
      reinterpret_cast<char*>(&money_) + sizeof(opt_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_NotifyMoney::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_NotifyMoney)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 opt_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_opt_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 change_money = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_change_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &change_money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_NotifyMoney)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_NotifyMoney)
  return false;
#undef DO_
}

void SC_NotifyMoney::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_NotifyMoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 opt_type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->opt_type(), output);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->money(), output);
  }

  // optional int64 change_money = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->change_money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_NotifyMoney)
}

::google::protobuf::uint8* SC_NotifyMoney::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_NotifyMoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 opt_type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->opt_type(), target);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->money(), target);
  }

  // optional int64 change_money = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->change_money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_NotifyMoney)
  return target;
}

size_t SC_NotifyMoney::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_NotifyMoney)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int64 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional int64 change_money = 3;
    if (has_change_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->change_money());
    }

    // optional int32 opt_type = 1;
    if (has_opt_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opt_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_NotifyMoney::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_NotifyMoney)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_NotifyMoney* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_NotifyMoney>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_NotifyMoney)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_NotifyMoney)
    MergeFrom(*source);
  }
}

void SC_NotifyMoney::MergeFrom(const SC_NotifyMoney& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_NotifyMoney)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000002u) {
      change_money_ = from.change_money_;
    }
    if (cached_has_bits & 0x00000004u) {
      opt_type_ = from.opt_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_NotifyMoney::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_NotifyMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_NotifyMoney::CopyFrom(const SC_NotifyMoney& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_NotifyMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_NotifyMoney::IsInitialized() const {
  return true;
}

void SC_NotifyMoney::Swap(SC_NotifyMoney* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_NotifyMoney::InternalSwap(SC_NotifyMoney* other) {
  std::swap(money_, other->money_);
  std::swap(change_money_, other->change_money_);
  std::swap(opt_type_, other->opt_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_NotifyMoney::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_NotifyMoney

// optional int32 opt_type = 1;
bool SC_NotifyMoney::has_opt_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_NotifyMoney::set_has_opt_type() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_NotifyMoney::clear_has_opt_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_NotifyMoney::clear_opt_type() {
  opt_type_ = 0;
  clear_has_opt_type();
}
::google::protobuf::int32 SC_NotifyMoney::opt_type() const {
  // @@protoc_insertion_point(field_get:SC_NotifyMoney.opt_type)
  return opt_type_;
}
void SC_NotifyMoney::set_opt_type(::google::protobuf::int32 value) {
  set_has_opt_type();
  opt_type_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyMoney.opt_type)
}

// optional int64 money = 2;
bool SC_NotifyMoney::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_NotifyMoney::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_NotifyMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_NotifyMoney::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 SC_NotifyMoney::money() const {
  // @@protoc_insertion_point(field_get:SC_NotifyMoney.money)
  return money_;
}
void SC_NotifyMoney::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyMoney.money)
}

// optional int64 change_money = 3;
bool SC_NotifyMoney::has_change_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_NotifyMoney::set_has_change_money() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_NotifyMoney::clear_has_change_money() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_NotifyMoney::clear_change_money() {
  change_money_ = GOOGLE_LONGLONG(0);
  clear_has_change_money();
}
::google::protobuf::int64 SC_NotifyMoney::change_money() const {
  // @@protoc_insertion_point(field_get:SC_NotifyMoney.change_money)
  return change_money_;
}
void SC_NotifyMoney::set_change_money(::google::protobuf::int64 value) {
  set_has_change_money();
  change_money_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyMoney.change_money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_BankTransferByGuid::kGuidFieldNumber;
const int CS_BankTransferByGuid::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_BankTransferByGuid::CS_BankTransferByGuid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_BankTransferByGuid)
}
CS_BankTransferByGuid::CS_BankTransferByGuid(const CS_BankTransferByGuid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&money_, &from.money_,
    reinterpret_cast<char*>(&guid_) -
    reinterpret_cast<char*>(&money_) + sizeof(guid_));
  // @@protoc_insertion_point(copy_constructor:CS_BankTransferByGuid)
}

void CS_BankTransferByGuid::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&money_, 0, reinterpret_cast<char*>(&guid_) -
    reinterpret_cast<char*>(&money_) + sizeof(guid_));
}

CS_BankTransferByGuid::~CS_BankTransferByGuid() {
  // @@protoc_insertion_point(destructor:CS_BankTransferByGuid)
  SharedDtor();
}

void CS_BankTransferByGuid::SharedDtor() {
}

void CS_BankTransferByGuid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_BankTransferByGuid::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_BankTransferByGuid& CS_BankTransferByGuid::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_BankTransferByGuid* CS_BankTransferByGuid::New(::google::protobuf::Arena* arena) const {
  CS_BankTransferByGuid* n = new CS_BankTransferByGuid;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_BankTransferByGuid::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_BankTransferByGuid)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&money_, 0, reinterpret_cast<char*>(&guid_) -
      reinterpret_cast<char*>(&money_) + sizeof(guid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_BankTransferByGuid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_BankTransferByGuid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_BankTransferByGuid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_BankTransferByGuid)
  return false;
#undef DO_
}

void CS_BankTransferByGuid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_BankTransferByGuid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guid(), output);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_BankTransferByGuid)
}

::google::protobuf::uint8* CS_BankTransferByGuid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_BankTransferByGuid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guid(), target);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_BankTransferByGuid)
  return target;
}

size_t CS_BankTransferByGuid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_BankTransferByGuid)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional int32 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_BankTransferByGuid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_BankTransferByGuid)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_BankTransferByGuid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_BankTransferByGuid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_BankTransferByGuid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_BankTransferByGuid)
    MergeFrom(*source);
  }
}

void CS_BankTransferByGuid::MergeFrom(const CS_BankTransferByGuid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_BankTransferByGuid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000002u) {
      guid_ = from.guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CS_BankTransferByGuid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_BankTransferByGuid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_BankTransferByGuid::CopyFrom(const CS_BankTransferByGuid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_BankTransferByGuid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_BankTransferByGuid::IsInitialized() const {
  return true;
}

void CS_BankTransferByGuid::Swap(CS_BankTransferByGuid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_BankTransferByGuid::InternalSwap(CS_BankTransferByGuid* other) {
  std::swap(money_, other->money_);
  std::swap(guid_, other->guid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_BankTransferByGuid::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_BankTransferByGuid

// optional int32 guid = 1;
bool CS_BankTransferByGuid::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_BankTransferByGuid::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_BankTransferByGuid::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_BankTransferByGuid::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 CS_BankTransferByGuid::guid() const {
  // @@protoc_insertion_point(field_get:CS_BankTransferByGuid.guid)
  return guid_;
}
void CS_BankTransferByGuid::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:CS_BankTransferByGuid.guid)
}

// optional int64 money = 2;
bool CS_BankTransferByGuid::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_BankTransferByGuid::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_BankTransferByGuid::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_BankTransferByGuid::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 CS_BankTransferByGuid::money() const {
  // @@protoc_insertion_point(field_get:CS_BankTransferByGuid.money)
  return money_;
}
void CS_BankTransferByGuid::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CS_BankTransferByGuid.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_BuyItem::kItemIdFieldNumber;
const int CS_BuyItem::kItemNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_BuyItem::CS_BuyItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_BuyItem)
}
CS_BuyItem::CS_BuyItem(const CS_BuyItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&item_num_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(item_num_));
  // @@protoc_insertion_point(copy_constructor:CS_BuyItem)
}

void CS_BuyItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&item_num_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(item_num_));
}

CS_BuyItem::~CS_BuyItem() {
  // @@protoc_insertion_point(destructor:CS_BuyItem)
  SharedDtor();
}

void CS_BuyItem::SharedDtor() {
}

void CS_BuyItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_BuyItem::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_BuyItem& CS_BuyItem::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_BuyItem* CS_BuyItem::New(::google::protobuf::Arena* arena) const {
  CS_BuyItem* n = new CS_BuyItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_BuyItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_BuyItem)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&item_num_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(item_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_BuyItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_BuyItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_BuyItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_BuyItem)
  return false;
#undef DO_
}

void CS_BuyItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_BuyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }

  // optional int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_BuyItem)
}

::google::protobuf::uint8* CS_BuyItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_BuyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }

  // optional int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_BuyItem)
  return target;
}

size_t CS_BuyItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_BuyItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }

    // optional int32 item_num = 2;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_BuyItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_BuyItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_BuyItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_BuyItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_BuyItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_BuyItem)
    MergeFrom(*source);
  }
}

void CS_BuyItem::MergeFrom(const CS_BuyItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_BuyItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_num_ = from.item_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CS_BuyItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_BuyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_BuyItem::CopyFrom(const CS_BuyItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_BuyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_BuyItem::IsInitialized() const {
  return true;
}

void CS_BuyItem::Swap(CS_BuyItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_BuyItem::InternalSwap(CS_BuyItem* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(item_num_, other->item_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_BuyItem::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_BuyItem

// optional int32 item_id = 1;
bool CS_BuyItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_BuyItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_BuyItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_BuyItem::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
::google::protobuf::int32 CS_BuyItem::item_id() const {
  // @@protoc_insertion_point(field_get:CS_BuyItem.item_id)
  return item_id_;
}
void CS_BuyItem::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CS_BuyItem.item_id)
}

// optional int32 item_num = 2;
bool CS_BuyItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_BuyItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_BuyItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_BuyItem::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
::google::protobuf::int32 CS_BuyItem::item_num() const {
  // @@protoc_insertion_point(field_get:CS_BuyItem.item_num)
  return item_num_;
}
void CS_BuyItem::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:CS_BuyItem.item_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_BuyItem::kItemIdFieldNumber;
const int SC_BuyItem::kItemNumFieldNumber;
const int SC_BuyItem::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_BuyItem::SC_BuyItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_BuyItem)
}
SC_BuyItem::SC_BuyItem(const SC_BuyItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_BuyItem)
}

void SC_BuyItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(result_));
}

SC_BuyItem::~SC_BuyItem() {
  // @@protoc_insertion_point(destructor:SC_BuyItem)
  SharedDtor();
}

void SC_BuyItem::SharedDtor() {
}

void SC_BuyItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_BuyItem::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_BuyItem& SC_BuyItem::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_BuyItem* SC_BuyItem::New(::google::protobuf::Arena* arena) const {
  SC_BuyItem* n = new SC_BuyItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_BuyItem::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_BuyItem)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_BuyItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_BuyItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_BuyItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_BuyItem)
  return false;
#undef DO_
}

void SC_BuyItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_BuyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }

  // optional int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_num(), output);
  }

  // optional int32 result = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_BuyItem)
}

::google::protobuf::uint8* SC_BuyItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_BuyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }

  // optional int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_num(), target);
  }

  // optional int32 result = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_BuyItem)
  return target;
}

size_t SC_BuyItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_BuyItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }

    // optional int32 item_num = 2;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }

    // optional int32 result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_BuyItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_BuyItem)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_BuyItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_BuyItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_BuyItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_BuyItem)
    MergeFrom(*source);
  }
}

void SC_BuyItem::MergeFrom(const SC_BuyItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_BuyItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_num_ = from.item_num_;
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_BuyItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_BuyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_BuyItem::CopyFrom(const SC_BuyItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_BuyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_BuyItem::IsInitialized() const {
  return true;
}

void SC_BuyItem::Swap(SC_BuyItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_BuyItem::InternalSwap(SC_BuyItem* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(item_num_, other->item_num_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_BuyItem::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_BuyItem

// optional int32 item_id = 1;
bool SC_BuyItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_BuyItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_BuyItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_BuyItem::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
::google::protobuf::int32 SC_BuyItem::item_id() const {
  // @@protoc_insertion_point(field_get:SC_BuyItem.item_id)
  return item_id_;
}
void SC_BuyItem::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:SC_BuyItem.item_id)
}

// optional int32 item_num = 2;
bool SC_BuyItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_BuyItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_BuyItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_BuyItem::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
::google::protobuf::int32 SC_BuyItem::item_num() const {
  // @@protoc_insertion_point(field_get:SC_BuyItem.item_num)
  return item_num_;
}
void SC_BuyItem::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:SC_BuyItem.item_num)
}

// optional int32 result = 3;
bool SC_BuyItem::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_BuyItem::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_BuyItem::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_BuyItem::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_BuyItem::result() const {
  // @@protoc_insertion_point(field_get:SC_BuyItem.result)
  return result_;
}
void SC_BuyItem::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BuyItem.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_DelItem::kItemIdFieldNumber;
const int CS_DelItem::kItemNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_DelItem::CS_DelItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_DelItem)
}
CS_DelItem::CS_DelItem(const CS_DelItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&item_num_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(item_num_));
  // @@protoc_insertion_point(copy_constructor:CS_DelItem)
}

void CS_DelItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&item_num_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(item_num_));
}

CS_DelItem::~CS_DelItem() {
  // @@protoc_insertion_point(destructor:CS_DelItem)
  SharedDtor();
}

void CS_DelItem::SharedDtor() {
}

void CS_DelItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_DelItem::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_DelItem& CS_DelItem::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_DelItem* CS_DelItem::New(::google::protobuf::Arena* arena) const {
  CS_DelItem* n = new CS_DelItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_DelItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_DelItem)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&item_num_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(item_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_DelItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_DelItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_DelItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_DelItem)
  return false;
#undef DO_
}

void CS_DelItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_DelItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }

  // optional int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_DelItem)
}

::google::protobuf::uint8* CS_DelItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_DelItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }

  // optional int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_DelItem)
  return target;
}

size_t CS_DelItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_DelItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }

    // optional int32 item_num = 2;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_DelItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_DelItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_DelItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_DelItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_DelItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_DelItem)
    MergeFrom(*source);
  }
}

void CS_DelItem::MergeFrom(const CS_DelItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_DelItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_num_ = from.item_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CS_DelItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_DelItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_DelItem::CopyFrom(const CS_DelItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_DelItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_DelItem::IsInitialized() const {
  return true;
}

void CS_DelItem::Swap(CS_DelItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_DelItem::InternalSwap(CS_DelItem* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(item_num_, other->item_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_DelItem::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_DelItem

// optional int32 item_id = 1;
bool CS_DelItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_DelItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_DelItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_DelItem::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
::google::protobuf::int32 CS_DelItem::item_id() const {
  // @@protoc_insertion_point(field_get:CS_DelItem.item_id)
  return item_id_;
}
void CS_DelItem::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CS_DelItem.item_id)
}

// optional int32 item_num = 2;
bool CS_DelItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_DelItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_DelItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_DelItem::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
::google::protobuf::int32 CS_DelItem::item_num() const {
  // @@protoc_insertion_point(field_get:CS_DelItem.item_num)
  return item_num_;
}
void CS_DelItem::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:CS_DelItem.item_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_DelItem::kItemIdFieldNumber;
const int SC_DelItem::kItemNumFieldNumber;
const int SC_DelItem::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_DelItem::SC_DelItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_DelItem)
}
SC_DelItem::SC_DelItem(const SC_DelItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_DelItem)
}

void SC_DelItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(result_));
}

SC_DelItem::~SC_DelItem() {
  // @@protoc_insertion_point(destructor:SC_DelItem)
  SharedDtor();
}

void SC_DelItem::SharedDtor() {
}

void SC_DelItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_DelItem::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_DelItem& SC_DelItem::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_DelItem* SC_DelItem::New(::google::protobuf::Arena* arena) const {
  SC_DelItem* n = new SC_DelItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_DelItem::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_DelItem)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_DelItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_DelItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_DelItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_DelItem)
  return false;
#undef DO_
}

void SC_DelItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_DelItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }

  // optional int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_num(), output);
  }

  // optional int32 result = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_DelItem)
}

::google::protobuf::uint8* SC_DelItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_DelItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }

  // optional int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_num(), target);
  }

  // optional int32 result = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_DelItem)
  return target;
}

size_t SC_DelItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_DelItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }

    // optional int32 item_num = 2;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }

    // optional int32 result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_DelItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_DelItem)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_DelItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_DelItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_DelItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_DelItem)
    MergeFrom(*source);
  }
}

void SC_DelItem::MergeFrom(const SC_DelItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_DelItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_num_ = from.item_num_;
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_DelItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_DelItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_DelItem::CopyFrom(const SC_DelItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_DelItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_DelItem::IsInitialized() const {
  return true;
}

void SC_DelItem::Swap(SC_DelItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_DelItem::InternalSwap(SC_DelItem* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(item_num_, other->item_num_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_DelItem::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_DelItem

// optional int32 item_id = 1;
bool SC_DelItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_DelItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_DelItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_DelItem::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
::google::protobuf::int32 SC_DelItem::item_id() const {
  // @@protoc_insertion_point(field_get:SC_DelItem.item_id)
  return item_id_;
}
void SC_DelItem::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:SC_DelItem.item_id)
}

// optional int32 item_num = 2;
bool SC_DelItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_DelItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_DelItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_DelItem::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
::google::protobuf::int32 SC_DelItem::item_num() const {
  // @@protoc_insertion_point(field_get:SC_DelItem.item_num)
  return item_num_;
}
void SC_DelItem::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:SC_DelItem.item_num)
}

// optional int32 result = 3;
bool SC_DelItem::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_DelItem::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_DelItem::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_DelItem::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_DelItem::result() const {
  // @@protoc_insertion_point(field_get:SC_DelItem.result)
  return result_;
}
void SC_DelItem::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_DelItem.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_UseItem::kItemIdFieldNumber;
const int CS_UseItem::kItemNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_UseItem::CS_UseItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_UseItem)
}
CS_UseItem::CS_UseItem(const CS_UseItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&item_num_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(item_num_));
  // @@protoc_insertion_point(copy_constructor:CS_UseItem)
}

void CS_UseItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&item_num_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(item_num_));
}

CS_UseItem::~CS_UseItem() {
  // @@protoc_insertion_point(destructor:CS_UseItem)
  SharedDtor();
}

void CS_UseItem::SharedDtor() {
}

void CS_UseItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_UseItem::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_UseItem& CS_UseItem::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_UseItem* CS_UseItem::New(::google::protobuf::Arena* arena) const {
  CS_UseItem* n = new CS_UseItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_UseItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_UseItem)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&item_num_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(item_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_UseItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_UseItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_UseItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_UseItem)
  return false;
#undef DO_
}

void CS_UseItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_UseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }

  // optional int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_UseItem)
}

::google::protobuf::uint8* CS_UseItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_UseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }

  // optional int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_UseItem)
  return target;
}

size_t CS_UseItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_UseItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }

    // optional int32 item_num = 2;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_UseItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_UseItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_UseItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_UseItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_UseItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_UseItem)
    MergeFrom(*source);
  }
}

void CS_UseItem::MergeFrom(const CS_UseItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_UseItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_num_ = from.item_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CS_UseItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_UseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_UseItem::CopyFrom(const CS_UseItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_UseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_UseItem::IsInitialized() const {
  return true;
}

void CS_UseItem::Swap(CS_UseItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_UseItem::InternalSwap(CS_UseItem* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(item_num_, other->item_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_UseItem::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_UseItem

// optional int32 item_id = 1;
bool CS_UseItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_UseItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_UseItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_UseItem::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
::google::protobuf::int32 CS_UseItem::item_id() const {
  // @@protoc_insertion_point(field_get:CS_UseItem.item_id)
  return item_id_;
}
void CS_UseItem::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CS_UseItem.item_id)
}

// optional int32 item_num = 2;
bool CS_UseItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_UseItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_UseItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_UseItem::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
::google::protobuf::int32 CS_UseItem::item_num() const {
  // @@protoc_insertion_point(field_get:CS_UseItem.item_num)
  return item_num_;
}
void CS_UseItem::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:CS_UseItem.item_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_UseItem::kItemIdFieldNumber;
const int SC_UseItem::kItemNumFieldNumber;
const int SC_UseItem::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_UseItem::SC_UseItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_UseItem)
}
SC_UseItem::SC_UseItem(const SC_UseItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_UseItem)
}

void SC_UseItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(result_));
}

SC_UseItem::~SC_UseItem() {
  // @@protoc_insertion_point(destructor:SC_UseItem)
  SharedDtor();
}

void SC_UseItem::SharedDtor() {
}

void SC_UseItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_UseItem::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_UseItem& SC_UseItem::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_UseItem* SC_UseItem::New(::google::protobuf::Arena* arena) const {
  SC_UseItem* n = new SC_UseItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_UseItem::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_UseItem)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_UseItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_UseItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_UseItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_UseItem)
  return false;
#undef DO_
}

void SC_UseItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_UseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }

  // optional int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_num(), output);
  }

  // optional int32 result = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_UseItem)
}

::google::protobuf::uint8* SC_UseItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_UseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }

  // optional int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_num(), target);
  }

  // optional int32 result = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_UseItem)
  return target;
}

size_t SC_UseItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_UseItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }

    // optional int32 item_num = 2;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }

    // optional int32 result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_UseItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_UseItem)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_UseItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_UseItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_UseItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_UseItem)
    MergeFrom(*source);
  }
}

void SC_UseItem::MergeFrom(const SC_UseItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_UseItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_num_ = from.item_num_;
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_UseItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_UseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_UseItem::CopyFrom(const SC_UseItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_UseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_UseItem::IsInitialized() const {
  return true;
}

void SC_UseItem::Swap(SC_UseItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_UseItem::InternalSwap(SC_UseItem* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(item_num_, other->item_num_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_UseItem::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_UseItem

// optional int32 item_id = 1;
bool SC_UseItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_UseItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_UseItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_UseItem::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
::google::protobuf::int32 SC_UseItem::item_id() const {
  // @@protoc_insertion_point(field_get:SC_UseItem.item_id)
  return item_id_;
}
void SC_UseItem::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:SC_UseItem.item_id)
}

// optional int32 item_num = 2;
bool SC_UseItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_UseItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_UseItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_UseItem::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
::google::protobuf::int32 SC_UseItem::item_num() const {
  // @@protoc_insertion_point(field_get:SC_UseItem.item_num)
  return item_num_;
}
void SC_UseItem::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:SC_UseItem.item_num)
}

// optional int32 result = 3;
bool SC_UseItem::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_UseItem::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_UseItem::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_UseItem::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_UseItem::result() const {
  // @@protoc_insertion_point(field_get:SC_UseItem.result)
  return result_;
}
void SC_UseItem::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_UseItem.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_ChatWorld::kChatContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ChatWorld::CS_ChatWorld()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ChatWorld)
}
CS_ChatWorld::CS_ChatWorld(const CS_ChatWorld& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_content()) {
    chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
  }
  // @@protoc_insertion_point(copy_constructor:CS_ChatWorld)
}

void CS_ChatWorld::SharedCtor() {
  _cached_size_ = 0;
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CS_ChatWorld::~CS_ChatWorld() {
  // @@protoc_insertion_point(destructor:CS_ChatWorld)
  SharedDtor();
}

void CS_ChatWorld::SharedDtor() {
  chat_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_ChatWorld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ChatWorld::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ChatWorld& CS_ChatWorld::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ChatWorld* CS_ChatWorld::New(::google::protobuf::Arena* arena) const {
  CS_ChatWorld* n = new CS_ChatWorld;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ChatWorld::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ChatWorld)
  if (has_chat_content()) {
    GOOGLE_DCHECK(!chat_content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*chat_content_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ChatWorld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ChatWorld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chat_content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_content().data(), this->chat_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_ChatWorld.chat_content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ChatWorld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ChatWorld)
  return false;
#undef DO_
}

void CS_ChatWorld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ChatWorld)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ChatWorld.chat_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chat_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ChatWorld)
}

::google::protobuf::uint8* CS_ChatWorld::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ChatWorld)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ChatWorld.chat_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chat_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ChatWorld)
  return target;
}

size_t CS_ChatWorld::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ChatWorld)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string chat_content = 1;
  if (has_chat_content()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat_content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ChatWorld::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ChatWorld)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ChatWorld* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ChatWorld>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ChatWorld)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ChatWorld)
    MergeFrom(*source);
  }
}

void CS_ChatWorld::MergeFrom(const CS_ChatWorld& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ChatWorld)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chat_content()) {
    set_has_chat_content();
    chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
  }
}

void CS_ChatWorld::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ChatWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ChatWorld::CopyFrom(const CS_ChatWorld& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ChatWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ChatWorld::IsInitialized() const {
  return true;
}

void CS_ChatWorld::Swap(CS_ChatWorld* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ChatWorld::InternalSwap(CS_ChatWorld* other) {
  chat_content_.Swap(&other->chat_content_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ChatWorld::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ChatWorld

// optional string chat_content = 1;
bool CS_ChatWorld::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_ChatWorld::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_ChatWorld::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_ChatWorld::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
const ::std::string& CS_ChatWorld::chat_content() const {
  // @@protoc_insertion_point(field_get:CS_ChatWorld.chat_content)
  return chat_content_.GetNoArena();
}
void CS_ChatWorld::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ChatWorld.chat_content)
}
#if LANG_CXX11
void CS_ChatWorld::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ChatWorld.chat_content)
}
#endif
void CS_ChatWorld::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ChatWorld.chat_content)
}
void CS_ChatWorld::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ChatWorld.chat_content)
}
::std::string* CS_ChatWorld::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:CS_ChatWorld.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_ChatWorld::release_chat_content() {
  // @@protoc_insertion_point(field_release:CS_ChatWorld.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_ChatWorld::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:CS_ChatWorld.chat_content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ChatWorld::kChatContentFieldNumber;
const int SC_ChatWorld::kChatGuidFieldNumber;
const int SC_ChatWorld::kChatNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ChatWorld::SC_ChatWorld()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ChatWorld)
}
SC_ChatWorld::SC_ChatWorld(const SC_ChatWorld& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_content()) {
    chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
  }
  chat_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_name()) {
    chat_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_name_);
  }
  chat_guid_ = from.chat_guid_;
  // @@protoc_insertion_point(copy_constructor:SC_ChatWorld)
}

void SC_ChatWorld::SharedCtor() {
  _cached_size_ = 0;
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_guid_ = 0;
}

SC_ChatWorld::~SC_ChatWorld() {
  // @@protoc_insertion_point(destructor:SC_ChatWorld)
  SharedDtor();
}

void SC_ChatWorld::SharedDtor() {
  chat_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_ChatWorld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ChatWorld::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ChatWorld& SC_ChatWorld::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ChatWorld* SC_ChatWorld::New(::google::protobuf::Arena* arena) const {
  SC_ChatWorld* n = new SC_ChatWorld;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ChatWorld::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ChatWorld)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_chat_content()) {
      GOOGLE_DCHECK(!chat_content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chat_content_.UnsafeRawStringPointer())->clear();
    }
    if (has_chat_name()) {
      GOOGLE_DCHECK(!chat_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chat_name_.UnsafeRawStringPointer())->clear();
    }
  }
  chat_guid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ChatWorld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ChatWorld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chat_content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_content().data(), this->chat_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ChatWorld.chat_content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chat_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chat_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chat_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string chat_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_name().data(), this->chat_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ChatWorld.chat_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ChatWorld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ChatWorld)
  return false;
#undef DO_
}

void SC_ChatWorld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ChatWorld)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatWorld.chat_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chat_content(), output);
  }

  // optional int32 chat_guid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chat_guid(), output);
  }

  // optional string chat_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_name().data(), this->chat_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatWorld.chat_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->chat_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ChatWorld)
}

::google::protobuf::uint8* SC_ChatWorld::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ChatWorld)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatWorld.chat_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chat_content(), target);
  }

  // optional int32 chat_guid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chat_guid(), target);
  }

  // optional string chat_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_name().data(), this->chat_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatWorld.chat_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->chat_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ChatWorld)
  return target;
}

size_t SC_ChatWorld::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ChatWorld)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string chat_content = 1;
    if (has_chat_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chat_content());
    }

    // optional string chat_name = 3;
    if (has_chat_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chat_name());
    }

    // optional int32 chat_guid = 2;
    if (has_chat_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chat_guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ChatWorld::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ChatWorld)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ChatWorld* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ChatWorld>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ChatWorld)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ChatWorld)
    MergeFrom(*source);
  }
}

void SC_ChatWorld::MergeFrom(const SC_ChatWorld& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ChatWorld)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chat_content();
      chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_chat_name();
      chat_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      chat_guid_ = from.chat_guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ChatWorld::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ChatWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ChatWorld::CopyFrom(const SC_ChatWorld& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ChatWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ChatWorld::IsInitialized() const {
  return true;
}

void SC_ChatWorld::Swap(SC_ChatWorld* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ChatWorld::InternalSwap(SC_ChatWorld* other) {
  chat_content_.Swap(&other->chat_content_);
  chat_name_.Swap(&other->chat_name_);
  std::swap(chat_guid_, other->chat_guid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ChatWorld::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ChatWorld

// optional string chat_content = 1;
bool SC_ChatWorld::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ChatWorld::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ChatWorld::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ChatWorld::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
const ::std::string& SC_ChatWorld::chat_content() const {
  // @@protoc_insertion_point(field_get:SC_ChatWorld.chat_content)
  return chat_content_.GetNoArena();
}
void SC_ChatWorld::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatWorld.chat_content)
}
#if LANG_CXX11
void SC_ChatWorld::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatWorld.chat_content)
}
#endif
void SC_ChatWorld::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatWorld.chat_content)
}
void SC_ChatWorld::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatWorld.chat_content)
}
::std::string* SC_ChatWorld::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:SC_ChatWorld.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ChatWorld::release_chat_content() {
  // @@protoc_insertion_point(field_release:SC_ChatWorld.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ChatWorld::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatWorld.chat_content)
}

// optional int32 chat_guid = 2;
bool SC_ChatWorld::has_chat_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ChatWorld::set_has_chat_guid() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ChatWorld::clear_has_chat_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ChatWorld::clear_chat_guid() {
  chat_guid_ = 0;
  clear_has_chat_guid();
}
::google::protobuf::int32 SC_ChatWorld::chat_guid() const {
  // @@protoc_insertion_point(field_get:SC_ChatWorld.chat_guid)
  return chat_guid_;
}
void SC_ChatWorld::set_chat_guid(::google::protobuf::int32 value) {
  set_has_chat_guid();
  chat_guid_ = value;
  // @@protoc_insertion_point(field_set:SC_ChatWorld.chat_guid)
}

// optional string chat_name = 3;
bool SC_ChatWorld::has_chat_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ChatWorld::set_has_chat_name() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ChatWorld::clear_has_chat_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ChatWorld::clear_chat_name() {
  chat_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_name();
}
const ::std::string& SC_ChatWorld::chat_name() const {
  // @@protoc_insertion_point(field_get:SC_ChatWorld.chat_name)
  return chat_name_.GetNoArena();
}
void SC_ChatWorld::set_chat_name(const ::std::string& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatWorld.chat_name)
}
#if LANG_CXX11
void SC_ChatWorld::set_chat_name(::std::string&& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatWorld.chat_name)
}
#endif
void SC_ChatWorld::set_chat_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatWorld.chat_name)
}
void SC_ChatWorld::set_chat_name(const char* value, size_t size) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatWorld.chat_name)
}
::std::string* SC_ChatWorld::mutable_chat_name() {
  set_has_chat_name();
  // @@protoc_insertion_point(field_mutable:SC_ChatWorld.chat_name)
  return chat_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ChatWorld::release_chat_name() {
  // @@protoc_insertion_point(field_release:SC_ChatWorld.chat_name)
  clear_has_chat_name();
  return chat_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ChatWorld::set_allocated_chat_name(::std::string* chat_name) {
  if (chat_name != NULL) {
    set_has_chat_name();
  } else {
    clear_has_chat_name();
  }
  chat_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_name);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatWorld.chat_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_ChatPrivate::kChatContentFieldNumber;
const int CS_ChatPrivate::kPrivateNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ChatPrivate::CS_ChatPrivate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ChatPrivate)
}
CS_ChatPrivate::CS_ChatPrivate(const CS_ChatPrivate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_content()) {
    chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
  }
  private_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_private_name()) {
    private_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_name_);
  }
  // @@protoc_insertion_point(copy_constructor:CS_ChatPrivate)
}

void CS_ChatPrivate::SharedCtor() {
  _cached_size_ = 0;
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CS_ChatPrivate::~CS_ChatPrivate() {
  // @@protoc_insertion_point(destructor:CS_ChatPrivate)
  SharedDtor();
}

void CS_ChatPrivate::SharedDtor() {
  chat_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_ChatPrivate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ChatPrivate::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ChatPrivate& CS_ChatPrivate::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ChatPrivate* CS_ChatPrivate::New(::google::protobuf::Arena* arena) const {
  CS_ChatPrivate* n = new CS_ChatPrivate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ChatPrivate::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ChatPrivate)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_chat_content()) {
      GOOGLE_DCHECK(!chat_content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chat_content_.UnsafeRawStringPointer())->clear();
    }
    if (has_private_name()) {
      GOOGLE_DCHECK(!private_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*private_name_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ChatPrivate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ChatPrivate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chat_content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_content().data(), this->chat_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_ChatPrivate.chat_content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string private_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_private_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->private_name().data(), this->private_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_ChatPrivate.private_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ChatPrivate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ChatPrivate)
  return false;
#undef DO_
}

void CS_ChatPrivate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ChatPrivate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ChatPrivate.chat_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chat_content(), output);
  }

  // optional string private_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->private_name().data(), this->private_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ChatPrivate.private_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->private_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ChatPrivate)
}

::google::protobuf::uint8* CS_ChatPrivate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ChatPrivate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ChatPrivate.chat_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chat_content(), target);
  }

  // optional string private_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->private_name().data(), this->private_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ChatPrivate.private_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->private_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ChatPrivate)
  return target;
}

size_t CS_ChatPrivate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ChatPrivate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string chat_content = 1;
    if (has_chat_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chat_content());
    }

    // optional string private_name = 2;
    if (has_private_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->private_name());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ChatPrivate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ChatPrivate)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ChatPrivate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ChatPrivate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ChatPrivate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ChatPrivate)
    MergeFrom(*source);
  }
}

void CS_ChatPrivate::MergeFrom(const CS_ChatPrivate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ChatPrivate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chat_content();
      chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_private_name();
      private_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_name_);
    }
  }
}

void CS_ChatPrivate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ChatPrivate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ChatPrivate::CopyFrom(const CS_ChatPrivate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ChatPrivate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ChatPrivate::IsInitialized() const {
  return true;
}

void CS_ChatPrivate::Swap(CS_ChatPrivate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ChatPrivate::InternalSwap(CS_ChatPrivate* other) {
  chat_content_.Swap(&other->chat_content_);
  private_name_.Swap(&other->private_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ChatPrivate::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ChatPrivate

// optional string chat_content = 1;
bool CS_ChatPrivate::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_ChatPrivate::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_ChatPrivate::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_ChatPrivate::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
const ::std::string& CS_ChatPrivate::chat_content() const {
  // @@protoc_insertion_point(field_get:CS_ChatPrivate.chat_content)
  return chat_content_.GetNoArena();
}
void CS_ChatPrivate::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ChatPrivate.chat_content)
}
#if LANG_CXX11
void CS_ChatPrivate::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ChatPrivate.chat_content)
}
#endif
void CS_ChatPrivate::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ChatPrivate.chat_content)
}
void CS_ChatPrivate::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ChatPrivate.chat_content)
}
::std::string* CS_ChatPrivate::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:CS_ChatPrivate.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_ChatPrivate::release_chat_content() {
  // @@protoc_insertion_point(field_release:CS_ChatPrivate.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_ChatPrivate::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:CS_ChatPrivate.chat_content)
}

// optional string private_name = 2;
bool CS_ChatPrivate::has_private_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_ChatPrivate::set_has_private_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_ChatPrivate::clear_has_private_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_ChatPrivate::clear_private_name() {
  private_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_private_name();
}
const ::std::string& CS_ChatPrivate::private_name() const {
  // @@protoc_insertion_point(field_get:CS_ChatPrivate.private_name)
  return private_name_.GetNoArena();
}
void CS_ChatPrivate::set_private_name(const ::std::string& value) {
  set_has_private_name();
  private_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ChatPrivate.private_name)
}
#if LANG_CXX11
void CS_ChatPrivate::set_private_name(::std::string&& value) {
  set_has_private_name();
  private_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ChatPrivate.private_name)
}
#endif
void CS_ChatPrivate::set_private_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_private_name();
  private_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ChatPrivate.private_name)
}
void CS_ChatPrivate::set_private_name(const char* value, size_t size) {
  set_has_private_name();
  private_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ChatPrivate.private_name)
}
::std::string* CS_ChatPrivate::mutable_private_name() {
  set_has_private_name();
  // @@protoc_insertion_point(field_mutable:CS_ChatPrivate.private_name)
  return private_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_ChatPrivate::release_private_name() {
  // @@protoc_insertion_point(field_release:CS_ChatPrivate.private_name)
  clear_has_private_name();
  return private_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_ChatPrivate::set_allocated_private_name(::std::string* private_name) {
  if (private_name != NULL) {
    set_has_private_name();
  } else {
    clear_has_private_name();
  }
  private_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), private_name);
  // @@protoc_insertion_point(field_set_allocated:CS_ChatPrivate.private_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ChatPrivate::kChatContentFieldNumber;
const int SC_ChatPrivate::kPrivateNameFieldNumber;
const int SC_ChatPrivate::kChatNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ChatPrivate::SC_ChatPrivate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ChatPrivate)
}
SC_ChatPrivate::SC_ChatPrivate(const SC_ChatPrivate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_content()) {
    chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
  }
  private_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_private_name()) {
    private_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_name_);
  }
  chat_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_name()) {
    chat_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_name_);
  }
  // @@protoc_insertion_point(copy_constructor:SC_ChatPrivate)
}

void SC_ChatPrivate::SharedCtor() {
  _cached_size_ = 0;
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SC_ChatPrivate::~SC_ChatPrivate() {
  // @@protoc_insertion_point(destructor:SC_ChatPrivate)
  SharedDtor();
}

void SC_ChatPrivate::SharedDtor() {
  chat_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_ChatPrivate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ChatPrivate::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ChatPrivate& SC_ChatPrivate::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ChatPrivate* SC_ChatPrivate::New(::google::protobuf::Arena* arena) const {
  SC_ChatPrivate* n = new SC_ChatPrivate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ChatPrivate::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ChatPrivate)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_chat_content()) {
      GOOGLE_DCHECK(!chat_content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chat_content_.UnsafeRawStringPointer())->clear();
    }
    if (has_private_name()) {
      GOOGLE_DCHECK(!private_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*private_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_chat_name()) {
      GOOGLE_DCHECK(!chat_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chat_name_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ChatPrivate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ChatPrivate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chat_content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_content().data(), this->chat_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ChatPrivate.chat_content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string private_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_private_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->private_name().data(), this->private_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ChatPrivate.private_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string chat_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_name().data(), this->chat_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ChatPrivate.chat_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ChatPrivate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ChatPrivate)
  return false;
#undef DO_
}

void SC_ChatPrivate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ChatPrivate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatPrivate.chat_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chat_content(), output);
  }

  // optional string private_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->private_name().data(), this->private_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatPrivate.private_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->private_name(), output);
  }

  // optional string chat_name = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_name().data(), this->chat_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatPrivate.chat_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->chat_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ChatPrivate)
}

::google::protobuf::uint8* SC_ChatPrivate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ChatPrivate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatPrivate.chat_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chat_content(), target);
  }

  // optional string private_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->private_name().data(), this->private_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatPrivate.private_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->private_name(), target);
  }

  // optional string chat_name = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_name().data(), this->chat_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatPrivate.chat_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->chat_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ChatPrivate)
  return target;
}

size_t SC_ChatPrivate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ChatPrivate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string chat_content = 1;
    if (has_chat_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chat_content());
    }

    // optional string private_name = 2;
    if (has_private_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->private_name());
    }

    // optional string chat_name = 3;
    if (has_chat_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chat_name());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ChatPrivate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ChatPrivate)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ChatPrivate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ChatPrivate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ChatPrivate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ChatPrivate)
    MergeFrom(*source);
  }
}

void SC_ChatPrivate::MergeFrom(const SC_ChatPrivate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ChatPrivate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chat_content();
      chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_private_name();
      private_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_chat_name();
      chat_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_name_);
    }
  }
}

void SC_ChatPrivate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ChatPrivate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ChatPrivate::CopyFrom(const SC_ChatPrivate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ChatPrivate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ChatPrivate::IsInitialized() const {
  return true;
}

void SC_ChatPrivate::Swap(SC_ChatPrivate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ChatPrivate::InternalSwap(SC_ChatPrivate* other) {
  chat_content_.Swap(&other->chat_content_);
  private_name_.Swap(&other->private_name_);
  chat_name_.Swap(&other->chat_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ChatPrivate::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ChatPrivate

// optional string chat_content = 1;
bool SC_ChatPrivate::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ChatPrivate::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ChatPrivate::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ChatPrivate::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
const ::std::string& SC_ChatPrivate::chat_content() const {
  // @@protoc_insertion_point(field_get:SC_ChatPrivate.chat_content)
  return chat_content_.GetNoArena();
}
void SC_ChatPrivate::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatPrivate.chat_content)
}
#if LANG_CXX11
void SC_ChatPrivate::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatPrivate.chat_content)
}
#endif
void SC_ChatPrivate::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatPrivate.chat_content)
}
void SC_ChatPrivate::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatPrivate.chat_content)
}
::std::string* SC_ChatPrivate::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:SC_ChatPrivate.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ChatPrivate::release_chat_content() {
  // @@protoc_insertion_point(field_release:SC_ChatPrivate.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ChatPrivate::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatPrivate.chat_content)
}

// optional string private_name = 2;
bool SC_ChatPrivate::has_private_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ChatPrivate::set_has_private_name() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ChatPrivate::clear_has_private_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ChatPrivate::clear_private_name() {
  private_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_private_name();
}
const ::std::string& SC_ChatPrivate::private_name() const {
  // @@protoc_insertion_point(field_get:SC_ChatPrivate.private_name)
  return private_name_.GetNoArena();
}
void SC_ChatPrivate::set_private_name(const ::std::string& value) {
  set_has_private_name();
  private_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatPrivate.private_name)
}
#if LANG_CXX11
void SC_ChatPrivate::set_private_name(::std::string&& value) {
  set_has_private_name();
  private_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatPrivate.private_name)
}
#endif
void SC_ChatPrivate::set_private_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_private_name();
  private_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatPrivate.private_name)
}
void SC_ChatPrivate::set_private_name(const char* value, size_t size) {
  set_has_private_name();
  private_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatPrivate.private_name)
}
::std::string* SC_ChatPrivate::mutable_private_name() {
  set_has_private_name();
  // @@protoc_insertion_point(field_mutable:SC_ChatPrivate.private_name)
  return private_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ChatPrivate::release_private_name() {
  // @@protoc_insertion_point(field_release:SC_ChatPrivate.private_name)
  clear_has_private_name();
  return private_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ChatPrivate::set_allocated_private_name(::std::string* private_name) {
  if (private_name != NULL) {
    set_has_private_name();
  } else {
    clear_has_private_name();
  }
  private_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), private_name);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatPrivate.private_name)
}

// optional string chat_name = 3;
bool SC_ChatPrivate::has_chat_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ChatPrivate::set_has_chat_name() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ChatPrivate::clear_has_chat_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ChatPrivate::clear_chat_name() {
  chat_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_name();
}
const ::std::string& SC_ChatPrivate::chat_name() const {
  // @@protoc_insertion_point(field_get:SC_ChatPrivate.chat_name)
  return chat_name_.GetNoArena();
}
void SC_ChatPrivate::set_chat_name(const ::std::string& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatPrivate.chat_name)
}
#if LANG_CXX11
void SC_ChatPrivate::set_chat_name(::std::string&& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatPrivate.chat_name)
}
#endif
void SC_ChatPrivate::set_chat_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatPrivate.chat_name)
}
void SC_ChatPrivate::set_chat_name(const char* value, size_t size) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatPrivate.chat_name)
}
::std::string* SC_ChatPrivate::mutable_chat_name() {
  set_has_chat_name();
  // @@protoc_insertion_point(field_mutable:SC_ChatPrivate.chat_name)
  return chat_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ChatPrivate::release_chat_name() {
  // @@protoc_insertion_point(field_release:SC_ChatPrivate.chat_name)
  clear_has_chat_name();
  return chat_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ChatPrivate::set_allocated_chat_name(::std::string* chat_name) {
  if (chat_name != NULL) {
    set_has_chat_name();
  } else {
    clear_has_chat_name();
  }
  chat_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_name);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatPrivate.chat_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_ChatServer::kChatContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ChatServer::CS_ChatServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ChatServer)
}
CS_ChatServer::CS_ChatServer(const CS_ChatServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_content()) {
    chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
  }
  // @@protoc_insertion_point(copy_constructor:CS_ChatServer)
}

void CS_ChatServer::SharedCtor() {
  _cached_size_ = 0;
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CS_ChatServer::~CS_ChatServer() {
  // @@protoc_insertion_point(destructor:CS_ChatServer)
  SharedDtor();
}

void CS_ChatServer::SharedDtor() {
  chat_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_ChatServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ChatServer::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ChatServer& CS_ChatServer::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ChatServer* CS_ChatServer::New(::google::protobuf::Arena* arena) const {
  CS_ChatServer* n = new CS_ChatServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ChatServer::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ChatServer)
  if (has_chat_content()) {
    GOOGLE_DCHECK(!chat_content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*chat_content_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ChatServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ChatServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chat_content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_content().data(), this->chat_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_ChatServer.chat_content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ChatServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ChatServer)
  return false;
#undef DO_
}

void CS_ChatServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ChatServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ChatServer.chat_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chat_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ChatServer)
}

::google::protobuf::uint8* CS_ChatServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ChatServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ChatServer.chat_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chat_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ChatServer)
  return target;
}

size_t CS_ChatServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ChatServer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string chat_content = 1;
  if (has_chat_content()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat_content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ChatServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ChatServer)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ChatServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ChatServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ChatServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ChatServer)
    MergeFrom(*source);
  }
}

void CS_ChatServer::MergeFrom(const CS_ChatServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ChatServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chat_content()) {
    set_has_chat_content();
    chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
  }
}

void CS_ChatServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ChatServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ChatServer::CopyFrom(const CS_ChatServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ChatServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ChatServer::IsInitialized() const {
  return true;
}

void CS_ChatServer::Swap(CS_ChatServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ChatServer::InternalSwap(CS_ChatServer* other) {
  chat_content_.Swap(&other->chat_content_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ChatServer::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ChatServer

// optional string chat_content = 1;
bool CS_ChatServer::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_ChatServer::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_ChatServer::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_ChatServer::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
const ::std::string& CS_ChatServer::chat_content() const {
  // @@protoc_insertion_point(field_get:CS_ChatServer.chat_content)
  return chat_content_.GetNoArena();
}
void CS_ChatServer::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ChatServer.chat_content)
}
#if LANG_CXX11
void CS_ChatServer::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ChatServer.chat_content)
}
#endif
void CS_ChatServer::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ChatServer.chat_content)
}
void CS_ChatServer::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ChatServer.chat_content)
}
::std::string* CS_ChatServer::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:CS_ChatServer.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_ChatServer::release_chat_content() {
  // @@protoc_insertion_point(field_release:CS_ChatServer.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_ChatServer::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:CS_ChatServer.chat_content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ChatServer::kChatContentFieldNumber;
const int SC_ChatServer::kChatGuidFieldNumber;
const int SC_ChatServer::kChatNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ChatServer::SC_ChatServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ChatServer)
}
SC_ChatServer::SC_ChatServer(const SC_ChatServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_content()) {
    chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
  }
  chat_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_name()) {
    chat_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_name_);
  }
  chat_guid_ = from.chat_guid_;
  // @@protoc_insertion_point(copy_constructor:SC_ChatServer)
}

void SC_ChatServer::SharedCtor() {
  _cached_size_ = 0;
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_guid_ = 0;
}

SC_ChatServer::~SC_ChatServer() {
  // @@protoc_insertion_point(destructor:SC_ChatServer)
  SharedDtor();
}

void SC_ChatServer::SharedDtor() {
  chat_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_ChatServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ChatServer::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ChatServer& SC_ChatServer::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ChatServer* SC_ChatServer::New(::google::protobuf::Arena* arena) const {
  SC_ChatServer* n = new SC_ChatServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ChatServer::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ChatServer)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_chat_content()) {
      GOOGLE_DCHECK(!chat_content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chat_content_.UnsafeRawStringPointer())->clear();
    }
    if (has_chat_name()) {
      GOOGLE_DCHECK(!chat_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chat_name_.UnsafeRawStringPointer())->clear();
    }
  }
  chat_guid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ChatServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ChatServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chat_content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_content().data(), this->chat_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ChatServer.chat_content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chat_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chat_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chat_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string chat_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_name().data(), this->chat_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ChatServer.chat_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ChatServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ChatServer)
  return false;
#undef DO_
}

void SC_ChatServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ChatServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatServer.chat_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chat_content(), output);
  }

  // optional int32 chat_guid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chat_guid(), output);
  }

  // optional string chat_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_name().data(), this->chat_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatServer.chat_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->chat_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ChatServer)
}

::google::protobuf::uint8* SC_ChatServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ChatServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatServer.chat_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chat_content(), target);
  }

  // optional int32 chat_guid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chat_guid(), target);
  }

  // optional string chat_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_name().data(), this->chat_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatServer.chat_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->chat_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ChatServer)
  return target;
}

size_t SC_ChatServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ChatServer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string chat_content = 1;
    if (has_chat_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chat_content());
    }

    // optional string chat_name = 3;
    if (has_chat_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chat_name());
    }

    // optional int32 chat_guid = 2;
    if (has_chat_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chat_guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ChatServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ChatServer)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ChatServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ChatServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ChatServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ChatServer)
    MergeFrom(*source);
  }
}

void SC_ChatServer::MergeFrom(const SC_ChatServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ChatServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chat_content();
      chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_chat_name();
      chat_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      chat_guid_ = from.chat_guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ChatServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ChatServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ChatServer::CopyFrom(const SC_ChatServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ChatServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ChatServer::IsInitialized() const {
  return true;
}

void SC_ChatServer::Swap(SC_ChatServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ChatServer::InternalSwap(SC_ChatServer* other) {
  chat_content_.Swap(&other->chat_content_);
  chat_name_.Swap(&other->chat_name_);
  std::swap(chat_guid_, other->chat_guid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ChatServer::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ChatServer

// optional string chat_content = 1;
bool SC_ChatServer::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ChatServer::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ChatServer::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ChatServer::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
const ::std::string& SC_ChatServer::chat_content() const {
  // @@protoc_insertion_point(field_get:SC_ChatServer.chat_content)
  return chat_content_.GetNoArena();
}
void SC_ChatServer::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatServer.chat_content)
}
#if LANG_CXX11
void SC_ChatServer::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatServer.chat_content)
}
#endif
void SC_ChatServer::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatServer.chat_content)
}
void SC_ChatServer::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatServer.chat_content)
}
::std::string* SC_ChatServer::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:SC_ChatServer.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ChatServer::release_chat_content() {
  // @@protoc_insertion_point(field_release:SC_ChatServer.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ChatServer::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatServer.chat_content)
}

// optional int32 chat_guid = 2;
bool SC_ChatServer::has_chat_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ChatServer::set_has_chat_guid() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ChatServer::clear_has_chat_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ChatServer::clear_chat_guid() {
  chat_guid_ = 0;
  clear_has_chat_guid();
}
::google::protobuf::int32 SC_ChatServer::chat_guid() const {
  // @@protoc_insertion_point(field_get:SC_ChatServer.chat_guid)
  return chat_guid_;
}
void SC_ChatServer::set_chat_guid(::google::protobuf::int32 value) {
  set_has_chat_guid();
  chat_guid_ = value;
  // @@protoc_insertion_point(field_set:SC_ChatServer.chat_guid)
}

// optional string chat_name = 3;
bool SC_ChatServer::has_chat_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ChatServer::set_has_chat_name() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ChatServer::clear_has_chat_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ChatServer::clear_chat_name() {
  chat_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_name();
}
const ::std::string& SC_ChatServer::chat_name() const {
  // @@protoc_insertion_point(field_get:SC_ChatServer.chat_name)
  return chat_name_.GetNoArena();
}
void SC_ChatServer::set_chat_name(const ::std::string& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatServer.chat_name)
}
#if LANG_CXX11
void SC_ChatServer::set_chat_name(::std::string&& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatServer.chat_name)
}
#endif
void SC_ChatServer::set_chat_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatServer.chat_name)
}
void SC_ChatServer::set_chat_name(const char* value, size_t size) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatServer.chat_name)
}
::std::string* SC_ChatServer::mutable_chat_name() {
  set_has_chat_name();
  // @@protoc_insertion_point(field_mutable:SC_ChatServer.chat_name)
  return chat_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ChatServer::release_chat_name() {
  // @@protoc_insertion_point(field_release:SC_ChatServer.chat_name)
  clear_has_chat_name();
  return chat_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ChatServer::set_allocated_chat_name(::std::string* chat_name) {
  if (chat_name != NULL) {
    set_has_chat_name();
  } else {
    clear_has_chat_name();
  }
  chat_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_name);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatServer.chat_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_ChatRoom::kChatContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ChatRoom::CS_ChatRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ChatRoom)
}
CS_ChatRoom::CS_ChatRoom(const CS_ChatRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_content()) {
    chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
  }
  // @@protoc_insertion_point(copy_constructor:CS_ChatRoom)
}

void CS_ChatRoom::SharedCtor() {
  _cached_size_ = 0;
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CS_ChatRoom::~CS_ChatRoom() {
  // @@protoc_insertion_point(destructor:CS_ChatRoom)
  SharedDtor();
}

void CS_ChatRoom::SharedDtor() {
  chat_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_ChatRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ChatRoom::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ChatRoom& CS_ChatRoom::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ChatRoom* CS_ChatRoom::New(::google::protobuf::Arena* arena) const {
  CS_ChatRoom* n = new CS_ChatRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ChatRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ChatRoom)
  if (has_chat_content()) {
    GOOGLE_DCHECK(!chat_content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*chat_content_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ChatRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ChatRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chat_content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_content().data(), this->chat_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_ChatRoom.chat_content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ChatRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ChatRoom)
  return false;
#undef DO_
}

void CS_ChatRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ChatRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ChatRoom.chat_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chat_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ChatRoom)
}

::google::protobuf::uint8* CS_ChatRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ChatRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ChatRoom.chat_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chat_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ChatRoom)
  return target;
}

size_t CS_ChatRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ChatRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string chat_content = 1;
  if (has_chat_content()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat_content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ChatRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ChatRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ChatRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ChatRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ChatRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ChatRoom)
    MergeFrom(*source);
  }
}

void CS_ChatRoom::MergeFrom(const CS_ChatRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ChatRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chat_content()) {
    set_has_chat_content();
    chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
  }
}

void CS_ChatRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ChatRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ChatRoom::CopyFrom(const CS_ChatRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ChatRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ChatRoom::IsInitialized() const {
  return true;
}

void CS_ChatRoom::Swap(CS_ChatRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ChatRoom::InternalSwap(CS_ChatRoom* other) {
  chat_content_.Swap(&other->chat_content_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ChatRoom::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ChatRoom

// optional string chat_content = 1;
bool CS_ChatRoom::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_ChatRoom::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_ChatRoom::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_ChatRoom::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
const ::std::string& CS_ChatRoom::chat_content() const {
  // @@protoc_insertion_point(field_get:CS_ChatRoom.chat_content)
  return chat_content_.GetNoArena();
}
void CS_ChatRoom::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ChatRoom.chat_content)
}
#if LANG_CXX11
void CS_ChatRoom::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ChatRoom.chat_content)
}
#endif
void CS_ChatRoom::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ChatRoom.chat_content)
}
void CS_ChatRoom::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ChatRoom.chat_content)
}
::std::string* CS_ChatRoom::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:CS_ChatRoom.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_ChatRoom::release_chat_content() {
  // @@protoc_insertion_point(field_release:CS_ChatRoom.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_ChatRoom::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:CS_ChatRoom.chat_content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ChatRoom::kChatContentFieldNumber;
const int SC_ChatRoom::kChatGuidFieldNumber;
const int SC_ChatRoom::kChatNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ChatRoom::SC_ChatRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ChatRoom)
}
SC_ChatRoom::SC_ChatRoom(const SC_ChatRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_content()) {
    chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
  }
  chat_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_name()) {
    chat_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_name_);
  }
  chat_guid_ = from.chat_guid_;
  // @@protoc_insertion_point(copy_constructor:SC_ChatRoom)
}

void SC_ChatRoom::SharedCtor() {
  _cached_size_ = 0;
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_guid_ = 0;
}

SC_ChatRoom::~SC_ChatRoom() {
  // @@protoc_insertion_point(destructor:SC_ChatRoom)
  SharedDtor();
}

void SC_ChatRoom::SharedDtor() {
  chat_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_ChatRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ChatRoom::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ChatRoom& SC_ChatRoom::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ChatRoom* SC_ChatRoom::New(::google::protobuf::Arena* arena) const {
  SC_ChatRoom* n = new SC_ChatRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ChatRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ChatRoom)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_chat_content()) {
      GOOGLE_DCHECK(!chat_content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chat_content_.UnsafeRawStringPointer())->clear();
    }
    if (has_chat_name()) {
      GOOGLE_DCHECK(!chat_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chat_name_.UnsafeRawStringPointer())->clear();
    }
  }
  chat_guid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ChatRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ChatRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chat_content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_content().data(), this->chat_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ChatRoom.chat_content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chat_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chat_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chat_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string chat_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_name().data(), this->chat_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ChatRoom.chat_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ChatRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ChatRoom)
  return false;
#undef DO_
}

void SC_ChatRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ChatRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatRoom.chat_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chat_content(), output);
  }

  // optional int32 chat_guid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chat_guid(), output);
  }

  // optional string chat_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_name().data(), this->chat_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatRoom.chat_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->chat_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ChatRoom)
}

::google::protobuf::uint8* SC_ChatRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ChatRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatRoom.chat_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chat_content(), target);
  }

  // optional int32 chat_guid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chat_guid(), target);
  }

  // optional string chat_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_name().data(), this->chat_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatRoom.chat_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->chat_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ChatRoom)
  return target;
}

size_t SC_ChatRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ChatRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string chat_content = 1;
    if (has_chat_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chat_content());
    }

    // optional string chat_name = 3;
    if (has_chat_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chat_name());
    }

    // optional int32 chat_guid = 2;
    if (has_chat_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chat_guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ChatRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ChatRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ChatRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ChatRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ChatRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ChatRoom)
    MergeFrom(*source);
  }
}

void SC_ChatRoom::MergeFrom(const SC_ChatRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ChatRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chat_content();
      chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_chat_name();
      chat_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      chat_guid_ = from.chat_guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ChatRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ChatRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ChatRoom::CopyFrom(const SC_ChatRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ChatRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ChatRoom::IsInitialized() const {
  return true;
}

void SC_ChatRoom::Swap(SC_ChatRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ChatRoom::InternalSwap(SC_ChatRoom* other) {
  chat_content_.Swap(&other->chat_content_);
  chat_name_.Swap(&other->chat_name_);
  std::swap(chat_guid_, other->chat_guid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ChatRoom::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ChatRoom

// optional string chat_content = 1;
bool SC_ChatRoom::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ChatRoom::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ChatRoom::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ChatRoom::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
const ::std::string& SC_ChatRoom::chat_content() const {
  // @@protoc_insertion_point(field_get:SC_ChatRoom.chat_content)
  return chat_content_.GetNoArena();
}
void SC_ChatRoom::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatRoom.chat_content)
}
#if LANG_CXX11
void SC_ChatRoom::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatRoom.chat_content)
}
#endif
void SC_ChatRoom::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatRoom.chat_content)
}
void SC_ChatRoom::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatRoom.chat_content)
}
::std::string* SC_ChatRoom::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:SC_ChatRoom.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ChatRoom::release_chat_content() {
  // @@protoc_insertion_point(field_release:SC_ChatRoom.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ChatRoom::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatRoom.chat_content)
}

// optional int32 chat_guid = 2;
bool SC_ChatRoom::has_chat_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ChatRoom::set_has_chat_guid() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ChatRoom::clear_has_chat_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ChatRoom::clear_chat_guid() {
  chat_guid_ = 0;
  clear_has_chat_guid();
}
::google::protobuf::int32 SC_ChatRoom::chat_guid() const {
  // @@protoc_insertion_point(field_get:SC_ChatRoom.chat_guid)
  return chat_guid_;
}
void SC_ChatRoom::set_chat_guid(::google::protobuf::int32 value) {
  set_has_chat_guid();
  chat_guid_ = value;
  // @@protoc_insertion_point(field_set:SC_ChatRoom.chat_guid)
}

// optional string chat_name = 3;
bool SC_ChatRoom::has_chat_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ChatRoom::set_has_chat_name() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ChatRoom::clear_has_chat_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ChatRoom::clear_chat_name() {
  chat_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_name();
}
const ::std::string& SC_ChatRoom::chat_name() const {
  // @@protoc_insertion_point(field_get:SC_ChatRoom.chat_name)
  return chat_name_.GetNoArena();
}
void SC_ChatRoom::set_chat_name(const ::std::string& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatRoom.chat_name)
}
#if LANG_CXX11
void SC_ChatRoom::set_chat_name(::std::string&& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatRoom.chat_name)
}
#endif
void SC_ChatRoom::set_chat_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatRoom.chat_name)
}
void SC_ChatRoom::set_chat_name(const char* value, size_t size) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatRoom.chat_name)
}
::std::string* SC_ChatRoom::mutable_chat_name() {
  set_has_chat_name();
  // @@protoc_insertion_point(field_mutable:SC_ChatRoom.chat_name)
  return chat_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ChatRoom::release_chat_name() {
  // @@protoc_insertion_point(field_release:SC_ChatRoom.chat_name)
  clear_has_chat_name();
  return chat_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ChatRoom::set_allocated_chat_name(::std::string* chat_name) {
  if (chat_name != NULL) {
    set_has_chat_name();
  } else {
    clear_has_chat_name();
  }
  chat_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_name);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatRoom.chat_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_ChatTable::kChatContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ChatTable::CS_ChatTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ChatTable)
}
CS_ChatTable::CS_ChatTable(const CS_ChatTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_content()) {
    chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
  }
  // @@protoc_insertion_point(copy_constructor:CS_ChatTable)
}

void CS_ChatTable::SharedCtor() {
  _cached_size_ = 0;
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CS_ChatTable::~CS_ChatTable() {
  // @@protoc_insertion_point(destructor:CS_ChatTable)
  SharedDtor();
}

void CS_ChatTable::SharedDtor() {
  chat_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_ChatTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ChatTable::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ChatTable& CS_ChatTable::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ChatTable* CS_ChatTable::New(::google::protobuf::Arena* arena) const {
  CS_ChatTable* n = new CS_ChatTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ChatTable::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ChatTable)
  if (has_chat_content()) {
    GOOGLE_DCHECK(!chat_content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*chat_content_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ChatTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ChatTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chat_content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_content().data(), this->chat_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_ChatTable.chat_content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ChatTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ChatTable)
  return false;
#undef DO_
}

void CS_ChatTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ChatTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ChatTable.chat_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chat_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ChatTable)
}

::google::protobuf::uint8* CS_ChatTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ChatTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ChatTable.chat_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chat_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ChatTable)
  return target;
}

size_t CS_ChatTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ChatTable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string chat_content = 1;
  if (has_chat_content()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chat_content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ChatTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ChatTable)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ChatTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ChatTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ChatTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ChatTable)
    MergeFrom(*source);
  }
}

void CS_ChatTable::MergeFrom(const CS_ChatTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ChatTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chat_content()) {
    set_has_chat_content();
    chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
  }
}

void CS_ChatTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ChatTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ChatTable::CopyFrom(const CS_ChatTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ChatTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ChatTable::IsInitialized() const {
  return true;
}

void CS_ChatTable::Swap(CS_ChatTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ChatTable::InternalSwap(CS_ChatTable* other) {
  chat_content_.Swap(&other->chat_content_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ChatTable::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ChatTable

// optional string chat_content = 1;
bool CS_ChatTable::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_ChatTable::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_ChatTable::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_ChatTable::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
const ::std::string& CS_ChatTable::chat_content() const {
  // @@protoc_insertion_point(field_get:CS_ChatTable.chat_content)
  return chat_content_.GetNoArena();
}
void CS_ChatTable::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ChatTable.chat_content)
}
#if LANG_CXX11
void CS_ChatTable::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ChatTable.chat_content)
}
#endif
void CS_ChatTable::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ChatTable.chat_content)
}
void CS_ChatTable::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ChatTable.chat_content)
}
::std::string* CS_ChatTable::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:CS_ChatTable.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_ChatTable::release_chat_content() {
  // @@protoc_insertion_point(field_release:CS_ChatTable.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_ChatTable::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:CS_ChatTable.chat_content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ChatTable::kChatContentFieldNumber;
const int SC_ChatTable::kChatGuidFieldNumber;
const int SC_ChatTable::kChatNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ChatTable::SC_ChatTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ChatTable)
}
SC_ChatTable::SC_ChatTable(const SC_ChatTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_content()) {
    chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
  }
  chat_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chat_name()) {
    chat_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_name_);
  }
  chat_guid_ = from.chat_guid_;
  // @@protoc_insertion_point(copy_constructor:SC_ChatTable)
}

void SC_ChatTable::SharedCtor() {
  _cached_size_ = 0;
  chat_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_guid_ = 0;
}

SC_ChatTable::~SC_ChatTable() {
  // @@protoc_insertion_point(destructor:SC_ChatTable)
  SharedDtor();
}

void SC_ChatTable::SharedDtor() {
  chat_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_ChatTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ChatTable::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ChatTable& SC_ChatTable::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ChatTable* SC_ChatTable::New(::google::protobuf::Arena* arena) const {
  SC_ChatTable* n = new SC_ChatTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ChatTable::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ChatTable)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_chat_content()) {
      GOOGLE_DCHECK(!chat_content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chat_content_.UnsafeRawStringPointer())->clear();
    }
    if (has_chat_name()) {
      GOOGLE_DCHECK(!chat_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chat_name_.UnsafeRawStringPointer())->clear();
    }
  }
  chat_guid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ChatTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ChatTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string chat_content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_content().data(), this->chat_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ChatTable.chat_content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chat_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chat_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chat_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string chat_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chat_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chat_name().data(), this->chat_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ChatTable.chat_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ChatTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ChatTable)
  return false;
#undef DO_
}

void SC_ChatTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ChatTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatTable.chat_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chat_content(), output);
  }

  // optional int32 chat_guid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chat_guid(), output);
  }

  // optional string chat_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_name().data(), this->chat_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatTable.chat_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->chat_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ChatTable)
}

::google::protobuf::uint8* SC_ChatTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ChatTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string chat_content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_content().data(), this->chat_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatTable.chat_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chat_content(), target);
  }

  // optional int32 chat_guid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chat_guid(), target);
  }

  // optional string chat_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chat_name().data(), this->chat_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChatTable.chat_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->chat_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ChatTable)
  return target;
}

size_t SC_ChatTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ChatTable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string chat_content = 1;
    if (has_chat_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chat_content());
    }

    // optional string chat_name = 3;
    if (has_chat_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chat_name());
    }

    // optional int32 chat_guid = 2;
    if (has_chat_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chat_guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ChatTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ChatTable)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ChatTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ChatTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ChatTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ChatTable)
    MergeFrom(*source);
  }
}

void SC_ChatTable::MergeFrom(const SC_ChatTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ChatTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chat_content();
      chat_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_content_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_chat_name();
      chat_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chat_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      chat_guid_ = from.chat_guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ChatTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ChatTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ChatTable::CopyFrom(const SC_ChatTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ChatTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ChatTable::IsInitialized() const {
  return true;
}

void SC_ChatTable::Swap(SC_ChatTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ChatTable::InternalSwap(SC_ChatTable* other) {
  chat_content_.Swap(&other->chat_content_);
  chat_name_.Swap(&other->chat_name_);
  std::swap(chat_guid_, other->chat_guid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ChatTable::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ChatTable

// optional string chat_content = 1;
bool SC_ChatTable::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ChatTable::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ChatTable::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ChatTable::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
const ::std::string& SC_ChatTable::chat_content() const {
  // @@protoc_insertion_point(field_get:SC_ChatTable.chat_content)
  return chat_content_.GetNoArena();
}
void SC_ChatTable::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatTable.chat_content)
}
#if LANG_CXX11
void SC_ChatTable::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatTable.chat_content)
}
#endif
void SC_ChatTable::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatTable.chat_content)
}
void SC_ChatTable::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatTable.chat_content)
}
::std::string* SC_ChatTable::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:SC_ChatTable.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ChatTable::release_chat_content() {
  // @@protoc_insertion_point(field_release:SC_ChatTable.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ChatTable::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatTable.chat_content)
}

// optional int32 chat_guid = 2;
bool SC_ChatTable::has_chat_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ChatTable::set_has_chat_guid() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ChatTable::clear_has_chat_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ChatTable::clear_chat_guid() {
  chat_guid_ = 0;
  clear_has_chat_guid();
}
::google::protobuf::int32 SC_ChatTable::chat_guid() const {
  // @@protoc_insertion_point(field_get:SC_ChatTable.chat_guid)
  return chat_guid_;
}
void SC_ChatTable::set_chat_guid(::google::protobuf::int32 value) {
  set_has_chat_guid();
  chat_guid_ = value;
  // @@protoc_insertion_point(field_set:SC_ChatTable.chat_guid)
}

// optional string chat_name = 3;
bool SC_ChatTable::has_chat_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ChatTable::set_has_chat_name() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ChatTable::clear_has_chat_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ChatTable::clear_chat_name() {
  chat_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_name();
}
const ::std::string& SC_ChatTable::chat_name() const {
  // @@protoc_insertion_point(field_get:SC_ChatTable.chat_name)
  return chat_name_.GetNoArena();
}
void SC_ChatTable::set_chat_name(const ::std::string& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatTable.chat_name)
}
#if LANG_CXX11
void SC_ChatTable::set_chat_name(::std::string&& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatTable.chat_name)
}
#endif
void SC_ChatTable::set_chat_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatTable.chat_name)
}
void SC_ChatTable::set_chat_name(const char* value, size_t size) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatTable.chat_name)
}
::std::string* SC_ChatTable::mutable_chat_name() {
  set_has_chat_name();
  // @@protoc_insertion_point(field_mutable:SC_ChatTable.chat_name)
  return chat_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ChatTable::release_chat_name() {
  // @@protoc_insertion_point(field_release:SC_ChatTable.chat_name)
  clear_has_chat_name();
  return chat_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ChatTable::set_allocated_chat_name(::std::string* chat_name) {
  if (chat_name != NULL) {
    set_has_chat_name();
  } else {
    clear_has_chat_name();
  }
  chat_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_name);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatTable.chat_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_Marquee::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_Marquee::SC_Marquee()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_Marquee)
}
SC_Marquee::SC_Marquee(const SC_Marquee& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:SC_Marquee)
}

void SC_Marquee::SharedCtor() {
  _cached_size_ = 0;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SC_Marquee::~SC_Marquee() {
  // @@protoc_insertion_point(destructor:SC_Marquee)
  SharedDtor();
}

void SC_Marquee::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_Marquee::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_Marquee::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_Marquee& SC_Marquee::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_Marquee* SC_Marquee::New(::google::protobuf::Arena* arena) const {
  SC_Marquee* n = new SC_Marquee;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_Marquee::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_Marquee)
  if (has_content()) {
    GOOGLE_DCHECK(!content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*content_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_Marquee::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_Marquee)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_Marquee.content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_Marquee)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_Marquee)
  return false;
#undef DO_
}

void SC_Marquee::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_Marquee)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_Marquee.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_Marquee)
}

::google::protobuf::uint8* SC_Marquee::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_Marquee)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_Marquee.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_Marquee)
  return target;
}

size_t SC_Marquee::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_Marquee)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string content = 1;
  if (has_content()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_Marquee::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_Marquee)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_Marquee* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_Marquee>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_Marquee)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_Marquee)
    MergeFrom(*source);
  }
}

void SC_Marquee::MergeFrom(const SC_Marquee& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_Marquee)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_content()) {
    set_has_content();
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void SC_Marquee::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_Marquee)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_Marquee::CopyFrom(const SC_Marquee& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_Marquee)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_Marquee::IsInitialized() const {
  return true;
}

void SC_Marquee::Swap(SC_Marquee* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_Marquee::InternalSwap(SC_Marquee* other) {
  content_.Swap(&other->content_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_Marquee::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_Marquee

// optional string content = 1;
bool SC_Marquee::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_Marquee::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_Marquee::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_Marquee::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
const ::std::string& SC_Marquee::content() const {
  // @@protoc_insertion_point(field_get:SC_Marquee.content)
  return content_.GetNoArena();
}
void SC_Marquee::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_Marquee.content)
}
#if LANG_CXX11
void SC_Marquee::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_Marquee.content)
}
#endif
void SC_Marquee::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_Marquee.content)
}
void SC_Marquee::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_Marquee.content)
}
::std::string* SC_Marquee::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:SC_Marquee.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_Marquee::release_content() {
  // @@protoc_insertion_point(field_release:SC_Marquee.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_Marquee::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:SC_Marquee.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_QueryPlayerMarquee::CS_QueryPlayerMarquee()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_QueryPlayerMarquee)
}
CS_QueryPlayerMarquee::CS_QueryPlayerMarquee(const CS_QueryPlayerMarquee& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_QueryPlayerMarquee)
}

void CS_QueryPlayerMarquee::SharedCtor() {
  _cached_size_ = 0;
}

CS_QueryPlayerMarquee::~CS_QueryPlayerMarquee() {
  // @@protoc_insertion_point(destructor:CS_QueryPlayerMarquee)
  SharedDtor();
}

void CS_QueryPlayerMarquee::SharedDtor() {
}

void CS_QueryPlayerMarquee::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_QueryPlayerMarquee::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_QueryPlayerMarquee& CS_QueryPlayerMarquee::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_QueryPlayerMarquee* CS_QueryPlayerMarquee::New(::google::protobuf::Arena* arena) const {
  CS_QueryPlayerMarquee* n = new CS_QueryPlayerMarquee;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_QueryPlayerMarquee::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_QueryPlayerMarquee)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_QueryPlayerMarquee::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_QueryPlayerMarquee)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_QueryPlayerMarquee)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_QueryPlayerMarquee)
  return false;
#undef DO_
}

void CS_QueryPlayerMarquee::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_QueryPlayerMarquee)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_QueryPlayerMarquee)
}

::google::protobuf::uint8* CS_QueryPlayerMarquee::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_QueryPlayerMarquee)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_QueryPlayerMarquee)
  return target;
}

size_t CS_QueryPlayerMarquee::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_QueryPlayerMarquee)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_QueryPlayerMarquee::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_QueryPlayerMarquee)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_QueryPlayerMarquee* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_QueryPlayerMarquee>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_QueryPlayerMarquee)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_QueryPlayerMarquee)
    MergeFrom(*source);
  }
}

void CS_QueryPlayerMarquee::MergeFrom(const CS_QueryPlayerMarquee& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_QueryPlayerMarquee)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_QueryPlayerMarquee::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_QueryPlayerMarquee)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_QueryPlayerMarquee::CopyFrom(const CS_QueryPlayerMarquee& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_QueryPlayerMarquee)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_QueryPlayerMarquee::IsInitialized() const {
  return true;
}

void CS_QueryPlayerMarquee::Swap(CS_QueryPlayerMarquee* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_QueryPlayerMarquee::InternalSwap(CS_QueryPlayerMarquee* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_QueryPlayerMarquee::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_QueryPlayerMarquee

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_QueryPlayerMarquee::kPbMsgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_QueryPlayerMarquee::SC_QueryPlayerMarquee()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_QueryPlayerMarquee)
}
SC_QueryPlayerMarquee::SC_QueryPlayerMarquee(const SC_QueryPlayerMarquee& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_msg_data_(from.pb_msg_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SC_QueryPlayerMarquee)
}

void SC_QueryPlayerMarquee::SharedCtor() {
  _cached_size_ = 0;
}

SC_QueryPlayerMarquee::~SC_QueryPlayerMarquee() {
  // @@protoc_insertion_point(destructor:SC_QueryPlayerMarquee)
  SharedDtor();
}

void SC_QueryPlayerMarquee::SharedDtor() {
}

void SC_QueryPlayerMarquee::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_QueryPlayerMarquee::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_QueryPlayerMarquee& SC_QueryPlayerMarquee::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_QueryPlayerMarquee* SC_QueryPlayerMarquee::New(::google::protobuf::Arena* arena) const {
  SC_QueryPlayerMarquee* n = new SC_QueryPlayerMarquee;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_QueryPlayerMarquee::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_QueryPlayerMarquee)
  pb_msg_data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_QueryPlayerMarquee::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_QueryPlayerMarquee)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Marquee pb_msg_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_msg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_QueryPlayerMarquee)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_QueryPlayerMarquee)
  return false;
#undef DO_
}

void SC_QueryPlayerMarquee::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_QueryPlayerMarquee)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Marquee pb_msg_data = 1;
  for (unsigned int i = 0, n = this->pb_msg_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_msg_data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_QueryPlayerMarquee)
}

::google::protobuf::uint8* SC_QueryPlayerMarquee::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_QueryPlayerMarquee)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Marquee pb_msg_data = 1;
  for (unsigned int i = 0, n = this->pb_msg_data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_msg_data(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_QueryPlayerMarquee)
  return target;
}

size_t SC_QueryPlayerMarquee::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_QueryPlayerMarquee)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .Marquee pb_msg_data = 1;
  {
    unsigned int count = this->pb_msg_data_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_msg_data(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_QueryPlayerMarquee::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_QueryPlayerMarquee)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_QueryPlayerMarquee* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_QueryPlayerMarquee>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_QueryPlayerMarquee)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_QueryPlayerMarquee)
    MergeFrom(*source);
  }
}

void SC_QueryPlayerMarquee::MergeFrom(const SC_QueryPlayerMarquee& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_QueryPlayerMarquee)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_msg_data_.MergeFrom(from.pb_msg_data_);
}

void SC_QueryPlayerMarquee::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_QueryPlayerMarquee)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_QueryPlayerMarquee::CopyFrom(const SC_QueryPlayerMarquee& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_QueryPlayerMarquee)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_QueryPlayerMarquee::IsInitialized() const {
  return true;
}

void SC_QueryPlayerMarquee::Swap(SC_QueryPlayerMarquee* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_QueryPlayerMarquee::InternalSwap(SC_QueryPlayerMarquee* other) {
  pb_msg_data_.InternalSwap(&other->pb_msg_data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_QueryPlayerMarquee::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_QueryPlayerMarquee

// repeated .Marquee pb_msg_data = 1;
int SC_QueryPlayerMarquee::pb_msg_data_size() const {
  return pb_msg_data_.size();
}
void SC_QueryPlayerMarquee::clear_pb_msg_data() {
  pb_msg_data_.Clear();
}
const ::Marquee& SC_QueryPlayerMarquee::pb_msg_data(int index) const {
  // @@protoc_insertion_point(field_get:SC_QueryPlayerMarquee.pb_msg_data)
  return pb_msg_data_.Get(index);
}
::Marquee* SC_QueryPlayerMarquee::mutable_pb_msg_data(int index) {
  // @@protoc_insertion_point(field_mutable:SC_QueryPlayerMarquee.pb_msg_data)
  return pb_msg_data_.Mutable(index);
}
::Marquee* SC_QueryPlayerMarquee::add_pb_msg_data() {
  // @@protoc_insertion_point(field_add:SC_QueryPlayerMarquee.pb_msg_data)
  return pb_msg_data_.Add();
}
::google::protobuf::RepeatedPtrField< ::Marquee >*
SC_QueryPlayerMarquee::mutable_pb_msg_data() {
  // @@protoc_insertion_point(field_mutable_list:SC_QueryPlayerMarquee.pb_msg_data)
  return &pb_msg_data_;
}
const ::google::protobuf::RepeatedPtrField< ::Marquee >&
SC_QueryPlayerMarquee::pb_msg_data() const {
  // @@protoc_insertion_point(field_list:SC_QueryPlayerMarquee.pb_msg_data)
  return pb_msg_data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_NewMarquee::kPbMsgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_NewMarquee::SC_NewMarquee()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_NewMarquee)
}
SC_NewMarquee::SC_NewMarquee(const SC_NewMarquee& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_msg_data_(from.pb_msg_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SC_NewMarquee)
}

void SC_NewMarquee::SharedCtor() {
  _cached_size_ = 0;
}

SC_NewMarquee::~SC_NewMarquee() {
  // @@protoc_insertion_point(destructor:SC_NewMarquee)
  SharedDtor();
}

void SC_NewMarquee::SharedDtor() {
}

void SC_NewMarquee::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_NewMarquee::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_NewMarquee& SC_NewMarquee::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_NewMarquee* SC_NewMarquee::New(::google::protobuf::Arena* arena) const {
  SC_NewMarquee* n = new SC_NewMarquee;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_NewMarquee::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_NewMarquee)
  pb_msg_data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_NewMarquee::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_NewMarquee)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Marquee pb_msg_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_msg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_NewMarquee)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_NewMarquee)
  return false;
#undef DO_
}

void SC_NewMarquee::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_NewMarquee)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Marquee pb_msg_data = 1;
  for (unsigned int i = 0, n = this->pb_msg_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_msg_data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_NewMarquee)
}

::google::protobuf::uint8* SC_NewMarquee::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_NewMarquee)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Marquee pb_msg_data = 1;
  for (unsigned int i = 0, n = this->pb_msg_data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_msg_data(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_NewMarquee)
  return target;
}

size_t SC_NewMarquee::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_NewMarquee)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .Marquee pb_msg_data = 1;
  {
    unsigned int count = this->pb_msg_data_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_msg_data(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_NewMarquee::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_NewMarquee)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_NewMarquee* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_NewMarquee>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_NewMarquee)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_NewMarquee)
    MergeFrom(*source);
  }
}

void SC_NewMarquee::MergeFrom(const SC_NewMarquee& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_NewMarquee)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_msg_data_.MergeFrom(from.pb_msg_data_);
}

void SC_NewMarquee::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_NewMarquee)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_NewMarquee::CopyFrom(const SC_NewMarquee& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_NewMarquee)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_NewMarquee::IsInitialized() const {
  return true;
}

void SC_NewMarquee::Swap(SC_NewMarquee* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_NewMarquee::InternalSwap(SC_NewMarquee* other) {
  pb_msg_data_.InternalSwap(&other->pb_msg_data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_NewMarquee::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_NewMarquee

// repeated .Marquee pb_msg_data = 1;
int SC_NewMarquee::pb_msg_data_size() const {
  return pb_msg_data_.size();
}
void SC_NewMarquee::clear_pb_msg_data() {
  pb_msg_data_.Clear();
}
const ::Marquee& SC_NewMarquee::pb_msg_data(int index) const {
  // @@protoc_insertion_point(field_get:SC_NewMarquee.pb_msg_data)
  return pb_msg_data_.Get(index);
}
::Marquee* SC_NewMarquee::mutable_pb_msg_data(int index) {
  // @@protoc_insertion_point(field_mutable:SC_NewMarquee.pb_msg_data)
  return pb_msg_data_.Mutable(index);
}
::Marquee* SC_NewMarquee::add_pb_msg_data() {
  // @@protoc_insertion_point(field_add:SC_NewMarquee.pb_msg_data)
  return pb_msg_data_.Add();
}
::google::protobuf::RepeatedPtrField< ::Marquee >*
SC_NewMarquee::mutable_pb_msg_data() {
  // @@protoc_insertion_point(field_mutable_list:SC_NewMarquee.pb_msg_data)
  return &pb_msg_data_;
}
const ::google::protobuf::RepeatedPtrField< ::Marquee >&
SC_NewMarquee::pb_msg_data() const {
  // @@protoc_insertion_point(field_list:SC_NewMarquee.pb_msg_data)
  return pb_msg_data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_SendMail::kPbMailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_SendMail::CS_SendMail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_SendMail)
}
CS_SendMail::CS_SendMail(const CS_SendMail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pb_mail()) {
    pb_mail_ = new ::MailInfo(*from.pb_mail_);
  } else {
    pb_mail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CS_SendMail)
}

void CS_SendMail::SharedCtor() {
  _cached_size_ = 0;
  pb_mail_ = NULL;
}

CS_SendMail::~CS_SendMail() {
  // @@protoc_insertion_point(destructor:CS_SendMail)
  SharedDtor();
}

void CS_SendMail::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pb_mail_;
  }
}

void CS_SendMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_SendMail::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_SendMail& CS_SendMail::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_SendMail* CS_SendMail::New(::google::protobuf::Arena* arena) const {
  CS_SendMail* n = new CS_SendMail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_SendMail::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_SendMail)
  if (has_pb_mail()) {
    GOOGLE_DCHECK(pb_mail_ != NULL);
    pb_mail_->::MailInfo::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_SendMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_SendMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MailInfo pb_mail = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pb_mail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_SendMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_SendMail)
  return false;
#undef DO_
}

void CS_SendMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_SendMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .MailInfo pb_mail = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pb_mail_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_SendMail)
}

::google::protobuf::uint8* CS_SendMail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_SendMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .MailInfo pb_mail = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pb_mail_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_SendMail)
  return target;
}

size_t CS_SendMail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_SendMail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .MailInfo pb_mail = 1;
  if (has_pb_mail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pb_mail_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_SendMail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_SendMail)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_SendMail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_SendMail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_SendMail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_SendMail)
    MergeFrom(*source);
  }
}

void CS_SendMail::MergeFrom(const CS_SendMail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_SendMail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pb_mail()) {
    mutable_pb_mail()->::MailInfo::MergeFrom(from.pb_mail());
  }
}

void CS_SendMail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_SendMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_SendMail::CopyFrom(const CS_SendMail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_SendMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_SendMail::IsInitialized() const {
  return true;
}

void CS_SendMail::Swap(CS_SendMail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_SendMail::InternalSwap(CS_SendMail* other) {
  std::swap(pb_mail_, other->pb_mail_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_SendMail::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_SendMail

// optional .MailInfo pb_mail = 1;
bool CS_SendMail::has_pb_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_SendMail::set_has_pb_mail() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_SendMail::clear_has_pb_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_SendMail::clear_pb_mail() {
  if (pb_mail_ != NULL) pb_mail_->::MailInfo::Clear();
  clear_has_pb_mail();
}
const ::MailInfo& CS_SendMail::pb_mail() const {
  // @@protoc_insertion_point(field_get:CS_SendMail.pb_mail)
  return pb_mail_ != NULL ? *pb_mail_
                         : *::MailInfo::internal_default_instance();
}
::MailInfo* CS_SendMail::mutable_pb_mail() {
  set_has_pb_mail();
  if (pb_mail_ == NULL) {
    pb_mail_ = new ::MailInfo;
  }
  // @@protoc_insertion_point(field_mutable:CS_SendMail.pb_mail)
  return pb_mail_;
}
::MailInfo* CS_SendMail::release_pb_mail() {
  // @@protoc_insertion_point(field_release:CS_SendMail.pb_mail)
  clear_has_pb_mail();
  ::MailInfo* temp = pb_mail_;
  pb_mail_ = NULL;
  return temp;
}
void CS_SendMail::set_allocated_pb_mail(::MailInfo* pb_mail) {
  delete pb_mail_;
  pb_mail_ = pb_mail;
  if (pb_mail) {
    set_has_pb_mail();
  } else {
    clear_has_pb_mail();
  }
  // @@protoc_insertion_point(field_set_allocated:CS_SendMail.pb_mail)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_SendMail::kRetFieldNumber;
const int SC_SendMail::kPbMailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_SendMail::SC_SendMail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_SendMail)
}
SC_SendMail::SC_SendMail(const SC_SendMail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pb_mail()) {
    pb_mail_ = new ::MailInfo(*from.pb_mail_);
  } else {
    pb_mail_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:SC_SendMail)
}

void SC_SendMail::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pb_mail_, 0, reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&pb_mail_) + sizeof(ret_));
}

SC_SendMail::~SC_SendMail() {
  // @@protoc_insertion_point(destructor:SC_SendMail)
  SharedDtor();
}

void SC_SendMail::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pb_mail_;
  }
}

void SC_SendMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_SendMail::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_SendMail& SC_SendMail::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_SendMail* SC_SendMail::New(::google::protobuf::Arena* arena) const {
  SC_SendMail* n = new SC_SendMail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_SendMail::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_SendMail)
  if (has_pb_mail()) {
    GOOGLE_DCHECK(pb_mail_ != NULL);
    pb_mail_->::MailInfo::Clear();
  }
  ret_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_SendMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_SendMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MailInfo pb_mail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pb_mail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_SendMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_SendMail)
  return false;
#undef DO_
}

void SC_SendMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_SendMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ret = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional .MailInfo pb_mail = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pb_mail_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_SendMail)
}

::google::protobuf::uint8* SC_SendMail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_SendMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ret = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional .MailInfo pb_mail = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pb_mail_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_SendMail)
  return target;
}

size_t SC_SendMail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_SendMail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .MailInfo pb_mail = 2;
    if (has_pb_mail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pb_mail_);
    }

    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_SendMail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_SendMail)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_SendMail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_SendMail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_SendMail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_SendMail)
    MergeFrom(*source);
  }
}

void SC_SendMail::MergeFrom(const SC_SendMail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_SendMail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pb_mail()->::MailInfo::MergeFrom(from.pb_mail());
    }
    if (cached_has_bits & 0x00000002u) {
      ret_ = from.ret_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_SendMail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_SendMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_SendMail::CopyFrom(const SC_SendMail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_SendMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_SendMail::IsInitialized() const {
  return true;
}

void SC_SendMail::Swap(SC_SendMail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_SendMail::InternalSwap(SC_SendMail* other) {
  std::swap(pb_mail_, other->pb_mail_);
  std::swap(ret_, other->ret_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_SendMail::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_SendMail

// optional int32 ret = 1;
bool SC_SendMail::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_SendMail::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_SendMail::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_SendMail::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
::google::protobuf::int32 SC_SendMail::ret() const {
  // @@protoc_insertion_point(field_get:SC_SendMail.ret)
  return ret_;
}
void SC_SendMail::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:SC_SendMail.ret)
}

// optional .MailInfo pb_mail = 2;
bool SC_SendMail::has_pb_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_SendMail::set_has_pb_mail() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_SendMail::clear_has_pb_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_SendMail::clear_pb_mail() {
  if (pb_mail_ != NULL) pb_mail_->::MailInfo::Clear();
  clear_has_pb_mail();
}
const ::MailInfo& SC_SendMail::pb_mail() const {
  // @@protoc_insertion_point(field_get:SC_SendMail.pb_mail)
  return pb_mail_ != NULL ? *pb_mail_
                         : *::MailInfo::internal_default_instance();
}
::MailInfo* SC_SendMail::mutable_pb_mail() {
  set_has_pb_mail();
  if (pb_mail_ == NULL) {
    pb_mail_ = new ::MailInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_SendMail.pb_mail)
  return pb_mail_;
}
::MailInfo* SC_SendMail::release_pb_mail() {
  // @@protoc_insertion_point(field_release:SC_SendMail.pb_mail)
  clear_has_pb_mail();
  ::MailInfo* temp = pb_mail_;
  pb_mail_ = NULL;
  return temp;
}
void SC_SendMail::set_allocated_pb_mail(::MailInfo* pb_mail) {
  delete pb_mail_;
  pb_mail_ = pb_mail;
  if (pb_mail) {
    set_has_pb_mail();
  } else {
    clear_has_pb_mail();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_SendMail.pb_mail)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_RecviceMail::kPbMailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_RecviceMail::SC_RecviceMail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_RecviceMail)
}
SC_RecviceMail::SC_RecviceMail(const SC_RecviceMail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pb_mail()) {
    pb_mail_ = new ::MailInfo(*from.pb_mail_);
  } else {
    pb_mail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:SC_RecviceMail)
}

void SC_RecviceMail::SharedCtor() {
  _cached_size_ = 0;
  pb_mail_ = NULL;
}

SC_RecviceMail::~SC_RecviceMail() {
  // @@protoc_insertion_point(destructor:SC_RecviceMail)
  SharedDtor();
}

void SC_RecviceMail::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pb_mail_;
  }
}

void SC_RecviceMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_RecviceMail::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_RecviceMail& SC_RecviceMail::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_RecviceMail* SC_RecviceMail::New(::google::protobuf::Arena* arena) const {
  SC_RecviceMail* n = new SC_RecviceMail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_RecviceMail::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_RecviceMail)
  if (has_pb_mail()) {
    GOOGLE_DCHECK(pb_mail_ != NULL);
    pb_mail_->::MailInfo::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_RecviceMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_RecviceMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MailInfo pb_mail = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pb_mail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_RecviceMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_RecviceMail)
  return false;
#undef DO_
}

void SC_RecviceMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_RecviceMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .MailInfo pb_mail = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pb_mail_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_RecviceMail)
}

::google::protobuf::uint8* SC_RecviceMail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_RecviceMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .MailInfo pb_mail = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pb_mail_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_RecviceMail)
  return target;
}

size_t SC_RecviceMail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_RecviceMail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .MailInfo pb_mail = 1;
  if (has_pb_mail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pb_mail_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_RecviceMail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_RecviceMail)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_RecviceMail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_RecviceMail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_RecviceMail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_RecviceMail)
    MergeFrom(*source);
  }
}

void SC_RecviceMail::MergeFrom(const SC_RecviceMail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_RecviceMail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pb_mail()) {
    mutable_pb_mail()->::MailInfo::MergeFrom(from.pb_mail());
  }
}

void SC_RecviceMail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_RecviceMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_RecviceMail::CopyFrom(const SC_RecviceMail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_RecviceMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_RecviceMail::IsInitialized() const {
  return true;
}

void SC_RecviceMail::Swap(SC_RecviceMail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_RecviceMail::InternalSwap(SC_RecviceMail* other) {
  std::swap(pb_mail_, other->pb_mail_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_RecviceMail::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_RecviceMail

// optional .MailInfo pb_mail = 1;
bool SC_RecviceMail::has_pb_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_RecviceMail::set_has_pb_mail() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_RecviceMail::clear_has_pb_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_RecviceMail::clear_pb_mail() {
  if (pb_mail_ != NULL) pb_mail_->::MailInfo::Clear();
  clear_has_pb_mail();
}
const ::MailInfo& SC_RecviceMail::pb_mail() const {
  // @@protoc_insertion_point(field_get:SC_RecviceMail.pb_mail)
  return pb_mail_ != NULL ? *pb_mail_
                         : *::MailInfo::internal_default_instance();
}
::MailInfo* SC_RecviceMail::mutable_pb_mail() {
  set_has_pb_mail();
  if (pb_mail_ == NULL) {
    pb_mail_ = new ::MailInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_RecviceMail.pb_mail)
  return pb_mail_;
}
::MailInfo* SC_RecviceMail::release_pb_mail() {
  // @@protoc_insertion_point(field_release:SC_RecviceMail.pb_mail)
  clear_has_pb_mail();
  ::MailInfo* temp = pb_mail_;
  pb_mail_ = NULL;
  return temp;
}
void SC_RecviceMail::set_allocated_pb_mail(::MailInfo* pb_mail) {
  delete pb_mail_;
  pb_mail_ = pb_mail;
  if (pb_mail) {
    set_has_pb_mail();
  } else {
    clear_has_pb_mail();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_RecviceMail.pb_mail)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_DelMail::kMailIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_DelMail::CS_DelMail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_DelMail)
}
CS_DelMail::CS_DelMail(const CS_DelMail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mail_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mail_id()) {
    mail_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_id_);
  }
  // @@protoc_insertion_point(copy_constructor:CS_DelMail)
}

void CS_DelMail::SharedCtor() {
  _cached_size_ = 0;
  mail_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CS_DelMail::~CS_DelMail() {
  // @@protoc_insertion_point(destructor:CS_DelMail)
  SharedDtor();
}

void CS_DelMail::SharedDtor() {
  mail_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_DelMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_DelMail::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_DelMail& CS_DelMail::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_DelMail* CS_DelMail::New(::google::protobuf::Arena* arena) const {
  CS_DelMail* n = new CS_DelMail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_DelMail::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_DelMail)
  if (has_mail_id()) {
    GOOGLE_DCHECK(!mail_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*mail_id_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_DelMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_DelMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string mail_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mail_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mail_id().data(), this->mail_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_DelMail.mail_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_DelMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_DelMail)
  return false;
#undef DO_
}

void CS_DelMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_DelMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string mail_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_id().data(), this->mail_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_DelMail.mail_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mail_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_DelMail)
}

::google::protobuf::uint8* CS_DelMail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_DelMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string mail_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_id().data(), this->mail_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_DelMail.mail_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mail_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_DelMail)
  return target;
}

size_t CS_DelMail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_DelMail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string mail_id = 1;
  if (has_mail_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mail_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_DelMail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_DelMail)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_DelMail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_DelMail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_DelMail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_DelMail)
    MergeFrom(*source);
  }
}

void CS_DelMail::MergeFrom(const CS_DelMail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_DelMail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mail_id()) {
    set_has_mail_id();
    mail_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_id_);
  }
}

void CS_DelMail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_DelMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_DelMail::CopyFrom(const CS_DelMail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_DelMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_DelMail::IsInitialized() const {
  return true;
}

void CS_DelMail::Swap(CS_DelMail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_DelMail::InternalSwap(CS_DelMail* other) {
  mail_id_.Swap(&other->mail_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_DelMail::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_DelMail

// optional string mail_id = 1;
bool CS_DelMail::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_DelMail::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_DelMail::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_DelMail::clear_mail_id() {
  mail_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mail_id();
}
const ::std::string& CS_DelMail::mail_id() const {
  // @@protoc_insertion_point(field_get:CS_DelMail.mail_id)
  return mail_id_.GetNoArena();
}
void CS_DelMail::set_mail_id(const ::std::string& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_DelMail.mail_id)
}
#if LANG_CXX11
void CS_DelMail::set_mail_id(::std::string&& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_DelMail.mail_id)
}
#endif
void CS_DelMail::set_mail_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_DelMail.mail_id)
}
void CS_DelMail::set_mail_id(const char* value, size_t size) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_DelMail.mail_id)
}
::std::string* CS_DelMail::mutable_mail_id() {
  set_has_mail_id();
  // @@protoc_insertion_point(field_mutable:CS_DelMail.mail_id)
  return mail_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_DelMail::release_mail_id() {
  // @@protoc_insertion_point(field_release:CS_DelMail.mail_id)
  clear_has_mail_id();
  return mail_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_DelMail::set_allocated_mail_id(::std::string* mail_id) {
  if (mail_id != NULL) {
    set_has_mail_id();
  } else {
    clear_has_mail_id();
  }
  mail_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_id);
  // @@protoc_insertion_point(field_set_allocated:CS_DelMail.mail_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_DelMail::kResultFieldNumber;
const int SC_DelMail::kMailIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_DelMail::SC_DelMail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_DelMail)
}
SC_DelMail::SC_DelMail(const SC_DelMail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mail_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mail_id()) {
    mail_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_id_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SC_DelMail)
}

void SC_DelMail::SharedCtor() {
  _cached_size_ = 0;
  mail_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

SC_DelMail::~SC_DelMail() {
  // @@protoc_insertion_point(destructor:SC_DelMail)
  SharedDtor();
}

void SC_DelMail::SharedDtor() {
  mail_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_DelMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_DelMail::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_DelMail& SC_DelMail::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_DelMail* SC_DelMail::New(::google::protobuf::Arena* arena) const {
  SC_DelMail* n = new SC_DelMail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_DelMail::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_DelMail)
  if (has_mail_id()) {
    GOOGLE_DCHECK(!mail_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*mail_id_.UnsafeRawStringPointer())->clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_DelMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_DelMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mail_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mail_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mail_id().data(), this->mail_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_DelMail.mail_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_DelMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_DelMail)
  return false;
#undef DO_
}

void SC_DelMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_DelMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string mail_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_id().data(), this->mail_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_DelMail.mail_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mail_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_DelMail)
}

::google::protobuf::uint8* SC_DelMail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_DelMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string mail_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_id().data(), this->mail_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_DelMail.mail_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mail_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_DelMail)
  return target;
}

size_t SC_DelMail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_DelMail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string mail_id = 2;
    if (has_mail_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mail_id());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_DelMail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_DelMail)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_DelMail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_DelMail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_DelMail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_DelMail)
    MergeFrom(*source);
  }
}

void SC_DelMail::MergeFrom(const SC_DelMail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_DelMail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_mail_id();
      mail_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_DelMail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_DelMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_DelMail::CopyFrom(const SC_DelMail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_DelMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_DelMail::IsInitialized() const {
  return true;
}

void SC_DelMail::Swap(SC_DelMail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_DelMail::InternalSwap(SC_DelMail* other) {
  mail_id_.Swap(&other->mail_id_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_DelMail::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_DelMail

// optional int32 result = 1;
bool SC_DelMail::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_DelMail::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_DelMail::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_DelMail::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_DelMail::result() const {
  // @@protoc_insertion_point(field_get:SC_DelMail.result)
  return result_;
}
void SC_DelMail::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_DelMail.result)
}

// optional string mail_id = 2;
bool SC_DelMail::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_DelMail::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_DelMail::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_DelMail::clear_mail_id() {
  mail_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mail_id();
}
const ::std::string& SC_DelMail::mail_id() const {
  // @@protoc_insertion_point(field_get:SC_DelMail.mail_id)
  return mail_id_.GetNoArena();
}
void SC_DelMail::set_mail_id(const ::std::string& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_DelMail.mail_id)
}
#if LANG_CXX11
void SC_DelMail::set_mail_id(::std::string&& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_DelMail.mail_id)
}
#endif
void SC_DelMail::set_mail_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_DelMail.mail_id)
}
void SC_DelMail::set_mail_id(const char* value, size_t size) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_DelMail.mail_id)
}
::std::string* SC_DelMail::mutable_mail_id() {
  set_has_mail_id();
  // @@protoc_insertion_point(field_mutable:SC_DelMail.mail_id)
  return mail_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_DelMail::release_mail_id() {
  // @@protoc_insertion_point(field_release:SC_DelMail.mail_id)
  clear_has_mail_id();
  return mail_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_DelMail::set_allocated_mail_id(::std::string* mail_id) {
  if (mail_id != NULL) {
    set_has_mail_id();
  } else {
    clear_has_mail_id();
  }
  mail_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_id);
  // @@protoc_insertion_point(field_set_allocated:SC_DelMail.mail_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_ReceiveMailAttachment::kMailIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ReceiveMailAttachment::CS_ReceiveMailAttachment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ReceiveMailAttachment)
}
CS_ReceiveMailAttachment::CS_ReceiveMailAttachment(const CS_ReceiveMailAttachment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mail_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mail_id()) {
    mail_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_id_);
  }
  // @@protoc_insertion_point(copy_constructor:CS_ReceiveMailAttachment)
}

void CS_ReceiveMailAttachment::SharedCtor() {
  _cached_size_ = 0;
  mail_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CS_ReceiveMailAttachment::~CS_ReceiveMailAttachment() {
  // @@protoc_insertion_point(destructor:CS_ReceiveMailAttachment)
  SharedDtor();
}

void CS_ReceiveMailAttachment::SharedDtor() {
  mail_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_ReceiveMailAttachment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ReceiveMailAttachment::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ReceiveMailAttachment& CS_ReceiveMailAttachment::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ReceiveMailAttachment* CS_ReceiveMailAttachment::New(::google::protobuf::Arena* arena) const {
  CS_ReceiveMailAttachment* n = new CS_ReceiveMailAttachment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ReceiveMailAttachment::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ReceiveMailAttachment)
  if (has_mail_id()) {
    GOOGLE_DCHECK(!mail_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*mail_id_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ReceiveMailAttachment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ReceiveMailAttachment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string mail_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mail_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mail_id().data(), this->mail_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_ReceiveMailAttachment.mail_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ReceiveMailAttachment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ReceiveMailAttachment)
  return false;
#undef DO_
}

void CS_ReceiveMailAttachment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ReceiveMailAttachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string mail_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_id().data(), this->mail_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ReceiveMailAttachment.mail_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mail_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ReceiveMailAttachment)
}

::google::protobuf::uint8* CS_ReceiveMailAttachment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ReceiveMailAttachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string mail_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_id().data(), this->mail_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_ReceiveMailAttachment.mail_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mail_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ReceiveMailAttachment)
  return target;
}

size_t CS_ReceiveMailAttachment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ReceiveMailAttachment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string mail_id = 1;
  if (has_mail_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mail_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ReceiveMailAttachment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ReceiveMailAttachment)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ReceiveMailAttachment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ReceiveMailAttachment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ReceiveMailAttachment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ReceiveMailAttachment)
    MergeFrom(*source);
  }
}

void CS_ReceiveMailAttachment::MergeFrom(const CS_ReceiveMailAttachment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ReceiveMailAttachment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mail_id()) {
    set_has_mail_id();
    mail_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_id_);
  }
}

void CS_ReceiveMailAttachment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ReceiveMailAttachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ReceiveMailAttachment::CopyFrom(const CS_ReceiveMailAttachment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ReceiveMailAttachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ReceiveMailAttachment::IsInitialized() const {
  return true;
}

void CS_ReceiveMailAttachment::Swap(CS_ReceiveMailAttachment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ReceiveMailAttachment::InternalSwap(CS_ReceiveMailAttachment* other) {
  mail_id_.Swap(&other->mail_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ReceiveMailAttachment::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ReceiveMailAttachment

// optional string mail_id = 1;
bool CS_ReceiveMailAttachment::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_ReceiveMailAttachment::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_ReceiveMailAttachment::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_ReceiveMailAttachment::clear_mail_id() {
  mail_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mail_id();
}
const ::std::string& CS_ReceiveMailAttachment::mail_id() const {
  // @@protoc_insertion_point(field_get:CS_ReceiveMailAttachment.mail_id)
  return mail_id_.GetNoArena();
}
void CS_ReceiveMailAttachment::set_mail_id(const ::std::string& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ReceiveMailAttachment.mail_id)
}
#if LANG_CXX11
void CS_ReceiveMailAttachment::set_mail_id(::std::string&& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ReceiveMailAttachment.mail_id)
}
#endif
void CS_ReceiveMailAttachment::set_mail_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ReceiveMailAttachment.mail_id)
}
void CS_ReceiveMailAttachment::set_mail_id(const char* value, size_t size) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ReceiveMailAttachment.mail_id)
}
::std::string* CS_ReceiveMailAttachment::mutable_mail_id() {
  set_has_mail_id();
  // @@protoc_insertion_point(field_mutable:CS_ReceiveMailAttachment.mail_id)
  return mail_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_ReceiveMailAttachment::release_mail_id() {
  // @@protoc_insertion_point(field_release:CS_ReceiveMailAttachment.mail_id)
  clear_has_mail_id();
  return mail_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_ReceiveMailAttachment::set_allocated_mail_id(::std::string* mail_id) {
  if (mail_id != NULL) {
    set_has_mail_id();
  } else {
    clear_has_mail_id();
  }
  mail_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_id);
  // @@protoc_insertion_point(field_set_allocated:CS_ReceiveMailAttachment.mail_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ReceiveMailAttachment::kResultFieldNumber;
const int SC_ReceiveMailAttachment::kMailIdFieldNumber;
const int SC_ReceiveMailAttachment::kPbAttachmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ReceiveMailAttachment::SC_ReceiveMailAttachment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ReceiveMailAttachment)
}
SC_ReceiveMailAttachment::SC_ReceiveMailAttachment(const SC_ReceiveMailAttachment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_attachment_(from.pb_attachment_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mail_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mail_id()) {
    mail_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_id_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SC_ReceiveMailAttachment)
}

void SC_ReceiveMailAttachment::SharedCtor() {
  _cached_size_ = 0;
  mail_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

SC_ReceiveMailAttachment::~SC_ReceiveMailAttachment() {
  // @@protoc_insertion_point(destructor:SC_ReceiveMailAttachment)
  SharedDtor();
}

void SC_ReceiveMailAttachment::SharedDtor() {
  mail_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_ReceiveMailAttachment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ReceiveMailAttachment::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ReceiveMailAttachment& SC_ReceiveMailAttachment::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ReceiveMailAttachment* SC_ReceiveMailAttachment::New(::google::protobuf::Arena* arena) const {
  SC_ReceiveMailAttachment* n = new SC_ReceiveMailAttachment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ReceiveMailAttachment::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ReceiveMailAttachment)
  pb_attachment_.Clear();
  if (has_mail_id()) {
    GOOGLE_DCHECK(!mail_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*mail_id_.UnsafeRawStringPointer())->clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ReceiveMailAttachment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ReceiveMailAttachment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mail_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mail_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mail_id().data(), this->mail_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ReceiveMailAttachment.mail_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ItemInfo pb_attachment = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_attachment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ReceiveMailAttachment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ReceiveMailAttachment)
  return false;
#undef DO_
}

void SC_ReceiveMailAttachment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ReceiveMailAttachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string mail_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_id().data(), this->mail_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ReceiveMailAttachment.mail_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mail_id(), output);
  }

  // repeated .ItemInfo pb_attachment = 3;
  for (unsigned int i = 0, n = this->pb_attachment_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->pb_attachment(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ReceiveMailAttachment)
}

::google::protobuf::uint8* SC_ReceiveMailAttachment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ReceiveMailAttachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string mail_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_id().data(), this->mail_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ReceiveMailAttachment.mail_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mail_id(), target);
  }

  // repeated .ItemInfo pb_attachment = 3;
  for (unsigned int i = 0, n = this->pb_attachment_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->pb_attachment(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ReceiveMailAttachment)
  return target;
}

size_t SC_ReceiveMailAttachment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ReceiveMailAttachment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .ItemInfo pb_attachment = 3;
  {
    unsigned int count = this->pb_attachment_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_attachment(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string mail_id = 2;
    if (has_mail_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mail_id());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ReceiveMailAttachment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ReceiveMailAttachment)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ReceiveMailAttachment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ReceiveMailAttachment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ReceiveMailAttachment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ReceiveMailAttachment)
    MergeFrom(*source);
  }
}

void SC_ReceiveMailAttachment::MergeFrom(const SC_ReceiveMailAttachment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ReceiveMailAttachment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_attachment_.MergeFrom(from.pb_attachment_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_mail_id();
      mail_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ReceiveMailAttachment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ReceiveMailAttachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ReceiveMailAttachment::CopyFrom(const SC_ReceiveMailAttachment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ReceiveMailAttachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ReceiveMailAttachment::IsInitialized() const {
  return true;
}

void SC_ReceiveMailAttachment::Swap(SC_ReceiveMailAttachment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ReceiveMailAttachment::InternalSwap(SC_ReceiveMailAttachment* other) {
  pb_attachment_.InternalSwap(&other->pb_attachment_);
  mail_id_.Swap(&other->mail_id_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ReceiveMailAttachment::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ReceiveMailAttachment

// optional int32 result = 1;
bool SC_ReceiveMailAttachment::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ReceiveMailAttachment::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ReceiveMailAttachment::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ReceiveMailAttachment::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_ReceiveMailAttachment::result() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveMailAttachment.result)
  return result_;
}
void SC_ReceiveMailAttachment::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ReceiveMailAttachment.result)
}

// optional string mail_id = 2;
bool SC_ReceiveMailAttachment::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ReceiveMailAttachment::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ReceiveMailAttachment::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ReceiveMailAttachment::clear_mail_id() {
  mail_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mail_id();
}
const ::std::string& SC_ReceiveMailAttachment::mail_id() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveMailAttachment.mail_id)
  return mail_id_.GetNoArena();
}
void SC_ReceiveMailAttachment::set_mail_id(const ::std::string& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ReceiveMailAttachment.mail_id)
}
#if LANG_CXX11
void SC_ReceiveMailAttachment::set_mail_id(::std::string&& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ReceiveMailAttachment.mail_id)
}
#endif
void SC_ReceiveMailAttachment::set_mail_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ReceiveMailAttachment.mail_id)
}
void SC_ReceiveMailAttachment::set_mail_id(const char* value, size_t size) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ReceiveMailAttachment.mail_id)
}
::std::string* SC_ReceiveMailAttachment::mutable_mail_id() {
  set_has_mail_id();
  // @@protoc_insertion_point(field_mutable:SC_ReceiveMailAttachment.mail_id)
  return mail_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ReceiveMailAttachment::release_mail_id() {
  // @@protoc_insertion_point(field_release:SC_ReceiveMailAttachment.mail_id)
  clear_has_mail_id();
  return mail_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ReceiveMailAttachment::set_allocated_mail_id(::std::string* mail_id) {
  if (mail_id != NULL) {
    set_has_mail_id();
  } else {
    clear_has_mail_id();
  }
  mail_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_id);
  // @@protoc_insertion_point(field_set_allocated:SC_ReceiveMailAttachment.mail_id)
}

// repeated .ItemInfo pb_attachment = 3;
int SC_ReceiveMailAttachment::pb_attachment_size() const {
  return pb_attachment_.size();
}
void SC_ReceiveMailAttachment::clear_pb_attachment() {
  pb_attachment_.Clear();
}
const ::ItemInfo& SC_ReceiveMailAttachment::pb_attachment(int index) const {
  // @@protoc_insertion_point(field_get:SC_ReceiveMailAttachment.pb_attachment)
  return pb_attachment_.Get(index);
}
::ItemInfo* SC_ReceiveMailAttachment::mutable_pb_attachment(int index) {
  // @@protoc_insertion_point(field_mutable:SC_ReceiveMailAttachment.pb_attachment)
  return pb_attachment_.Mutable(index);
}
::ItemInfo* SC_ReceiveMailAttachment::add_pb_attachment() {
  // @@protoc_insertion_point(field_add:SC_ReceiveMailAttachment.pb_attachment)
  return pb_attachment_.Add();
}
::google::protobuf::RepeatedPtrField< ::ItemInfo >*
SC_ReceiveMailAttachment::mutable_pb_attachment() {
  // @@protoc_insertion_point(field_mutable_list:SC_ReceiveMailAttachment.pb_attachment)
  return &pb_attachment_;
}
const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
SC_ReceiveMailAttachment::pb_attachment() const {
  // @@protoc_insertion_point(field_list:SC_ReceiveMailAttachment.pb_attachment)
  return pb_attachment_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ReceiveRewardLogin::CS_ReceiveRewardLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ReceiveRewardLogin)
}
CS_ReceiveRewardLogin::CS_ReceiveRewardLogin(const CS_ReceiveRewardLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_ReceiveRewardLogin)
}

void CS_ReceiveRewardLogin::SharedCtor() {
  _cached_size_ = 0;
}

CS_ReceiveRewardLogin::~CS_ReceiveRewardLogin() {
  // @@protoc_insertion_point(destructor:CS_ReceiveRewardLogin)
  SharedDtor();
}

void CS_ReceiveRewardLogin::SharedDtor() {
}

void CS_ReceiveRewardLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ReceiveRewardLogin::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ReceiveRewardLogin& CS_ReceiveRewardLogin::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ReceiveRewardLogin* CS_ReceiveRewardLogin::New(::google::protobuf::Arena* arena) const {
  CS_ReceiveRewardLogin* n = new CS_ReceiveRewardLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ReceiveRewardLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ReceiveRewardLogin)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ReceiveRewardLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ReceiveRewardLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ReceiveRewardLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ReceiveRewardLogin)
  return false;
#undef DO_
}

void CS_ReceiveRewardLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ReceiveRewardLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ReceiveRewardLogin)
}

::google::protobuf::uint8* CS_ReceiveRewardLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ReceiveRewardLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ReceiveRewardLogin)
  return target;
}

size_t CS_ReceiveRewardLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ReceiveRewardLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ReceiveRewardLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ReceiveRewardLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ReceiveRewardLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ReceiveRewardLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ReceiveRewardLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ReceiveRewardLogin)
    MergeFrom(*source);
  }
}

void CS_ReceiveRewardLogin::MergeFrom(const CS_ReceiveRewardLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ReceiveRewardLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_ReceiveRewardLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ReceiveRewardLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ReceiveRewardLogin::CopyFrom(const CS_ReceiveRewardLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ReceiveRewardLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ReceiveRewardLogin::IsInitialized() const {
  return true;
}

void CS_ReceiveRewardLogin::Swap(CS_ReceiveRewardLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ReceiveRewardLogin::InternalSwap(CS_ReceiveRewardLogin* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ReceiveRewardLogin::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ReceiveRewardLogin

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ReceiveRewardLogin::kResultFieldNumber;
const int SC_ReceiveRewardLogin::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ReceiveRewardLogin::SC_ReceiveRewardLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ReceiveRewardLogin)
}
SC_ReceiveRewardLogin::SC_ReceiveRewardLogin(const SC_ReceiveRewardLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&money_, &from.money_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&money_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_ReceiveRewardLogin)
}

void SC_ReceiveRewardLogin::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&money_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&money_) + sizeof(result_));
}

SC_ReceiveRewardLogin::~SC_ReceiveRewardLogin() {
  // @@protoc_insertion_point(destructor:SC_ReceiveRewardLogin)
  SharedDtor();
}

void SC_ReceiveRewardLogin::SharedDtor() {
}

void SC_ReceiveRewardLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ReceiveRewardLogin::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ReceiveRewardLogin& SC_ReceiveRewardLogin::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ReceiveRewardLogin* SC_ReceiveRewardLogin::New(::google::protobuf::Arena* arena) const {
  SC_ReceiveRewardLogin* n = new SC_ReceiveRewardLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ReceiveRewardLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ReceiveRewardLogin)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&money_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&money_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ReceiveRewardLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ReceiveRewardLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ReceiveRewardLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ReceiveRewardLogin)
  return false;
#undef DO_
}

void SC_ReceiveRewardLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ReceiveRewardLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ReceiveRewardLogin)
}

::google::protobuf::uint8* SC_ReceiveRewardLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ReceiveRewardLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ReceiveRewardLogin)
  return target;
}

size_t SC_ReceiveRewardLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ReceiveRewardLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ReceiveRewardLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ReceiveRewardLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ReceiveRewardLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ReceiveRewardLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ReceiveRewardLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ReceiveRewardLogin)
    MergeFrom(*source);
  }
}

void SC_ReceiveRewardLogin::MergeFrom(const SC_ReceiveRewardLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ReceiveRewardLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ReceiveRewardLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ReceiveRewardLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ReceiveRewardLogin::CopyFrom(const SC_ReceiveRewardLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ReceiveRewardLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ReceiveRewardLogin::IsInitialized() const {
  return true;
}

void SC_ReceiveRewardLogin::Swap(SC_ReceiveRewardLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ReceiveRewardLogin::InternalSwap(SC_ReceiveRewardLogin* other) {
  std::swap(money_, other->money_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ReceiveRewardLogin::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ReceiveRewardLogin

// optional int32 result = 1;
bool SC_ReceiveRewardLogin::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ReceiveRewardLogin::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ReceiveRewardLogin::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ReceiveRewardLogin::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_ReceiveRewardLogin::result() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveRewardLogin.result)
  return result_;
}
void SC_ReceiveRewardLogin::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ReceiveRewardLogin.result)
}

// optional int64 money = 2;
bool SC_ReceiveRewardLogin::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ReceiveRewardLogin::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ReceiveRewardLogin::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ReceiveRewardLogin::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 SC_ReceiveRewardLogin::money() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveRewardLogin.money)
  return money_;
}
void SC_ReceiveRewardLogin::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_ReceiveRewardLogin.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ReceiveRewardOnline::CS_ReceiveRewardOnline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ReceiveRewardOnline)
}
CS_ReceiveRewardOnline::CS_ReceiveRewardOnline(const CS_ReceiveRewardOnline& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_ReceiveRewardOnline)
}

void CS_ReceiveRewardOnline::SharedCtor() {
  _cached_size_ = 0;
}

CS_ReceiveRewardOnline::~CS_ReceiveRewardOnline() {
  // @@protoc_insertion_point(destructor:CS_ReceiveRewardOnline)
  SharedDtor();
}

void CS_ReceiveRewardOnline::SharedDtor() {
}

void CS_ReceiveRewardOnline::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ReceiveRewardOnline::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ReceiveRewardOnline& CS_ReceiveRewardOnline::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ReceiveRewardOnline* CS_ReceiveRewardOnline::New(::google::protobuf::Arena* arena) const {
  CS_ReceiveRewardOnline* n = new CS_ReceiveRewardOnline;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ReceiveRewardOnline::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ReceiveRewardOnline)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ReceiveRewardOnline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ReceiveRewardOnline)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ReceiveRewardOnline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ReceiveRewardOnline)
  return false;
#undef DO_
}

void CS_ReceiveRewardOnline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ReceiveRewardOnline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ReceiveRewardOnline)
}

::google::protobuf::uint8* CS_ReceiveRewardOnline::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ReceiveRewardOnline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ReceiveRewardOnline)
  return target;
}

size_t CS_ReceiveRewardOnline::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ReceiveRewardOnline)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ReceiveRewardOnline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ReceiveRewardOnline)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ReceiveRewardOnline* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ReceiveRewardOnline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ReceiveRewardOnline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ReceiveRewardOnline)
    MergeFrom(*source);
  }
}

void CS_ReceiveRewardOnline::MergeFrom(const CS_ReceiveRewardOnline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ReceiveRewardOnline)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_ReceiveRewardOnline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ReceiveRewardOnline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ReceiveRewardOnline::CopyFrom(const CS_ReceiveRewardOnline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ReceiveRewardOnline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ReceiveRewardOnline::IsInitialized() const {
  return true;
}

void CS_ReceiveRewardOnline::Swap(CS_ReceiveRewardOnline* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ReceiveRewardOnline::InternalSwap(CS_ReceiveRewardOnline* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ReceiveRewardOnline::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ReceiveRewardOnline

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ReceiveRewardOnline::kResultFieldNumber;
const int SC_ReceiveRewardOnline::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ReceiveRewardOnline::SC_ReceiveRewardOnline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ReceiveRewardOnline)
}
SC_ReceiveRewardOnline::SC_ReceiveRewardOnline(const SC_ReceiveRewardOnline& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&money_, &from.money_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&money_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_ReceiveRewardOnline)
}

void SC_ReceiveRewardOnline::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&money_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&money_) + sizeof(result_));
}

SC_ReceiveRewardOnline::~SC_ReceiveRewardOnline() {
  // @@protoc_insertion_point(destructor:SC_ReceiveRewardOnline)
  SharedDtor();
}

void SC_ReceiveRewardOnline::SharedDtor() {
}

void SC_ReceiveRewardOnline::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ReceiveRewardOnline::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ReceiveRewardOnline& SC_ReceiveRewardOnline::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ReceiveRewardOnline* SC_ReceiveRewardOnline::New(::google::protobuf::Arena* arena) const {
  SC_ReceiveRewardOnline* n = new SC_ReceiveRewardOnline;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ReceiveRewardOnline::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ReceiveRewardOnline)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&money_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&money_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ReceiveRewardOnline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ReceiveRewardOnline)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ReceiveRewardOnline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ReceiveRewardOnline)
  return false;
#undef DO_
}

void SC_ReceiveRewardOnline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ReceiveRewardOnline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ReceiveRewardOnline)
}

::google::protobuf::uint8* SC_ReceiveRewardOnline::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ReceiveRewardOnline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ReceiveRewardOnline)
  return target;
}

size_t SC_ReceiveRewardOnline::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ReceiveRewardOnline)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ReceiveRewardOnline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ReceiveRewardOnline)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ReceiveRewardOnline* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ReceiveRewardOnline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ReceiveRewardOnline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ReceiveRewardOnline)
    MergeFrom(*source);
  }
}

void SC_ReceiveRewardOnline::MergeFrom(const SC_ReceiveRewardOnline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ReceiveRewardOnline)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ReceiveRewardOnline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ReceiveRewardOnline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ReceiveRewardOnline::CopyFrom(const SC_ReceiveRewardOnline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ReceiveRewardOnline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ReceiveRewardOnline::IsInitialized() const {
  return true;
}

void SC_ReceiveRewardOnline::Swap(SC_ReceiveRewardOnline* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ReceiveRewardOnline::InternalSwap(SC_ReceiveRewardOnline* other) {
  std::swap(money_, other->money_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ReceiveRewardOnline::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ReceiveRewardOnline

// optional int32 result = 1;
bool SC_ReceiveRewardOnline::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ReceiveRewardOnline::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ReceiveRewardOnline::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ReceiveRewardOnline::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_ReceiveRewardOnline::result() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveRewardOnline.result)
  return result_;
}
void SC_ReceiveRewardOnline::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ReceiveRewardOnline.result)
}

// optional int64 money = 2;
bool SC_ReceiveRewardOnline::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ReceiveRewardOnline::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ReceiveRewardOnline::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ReceiveRewardOnline::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 SC_ReceiveRewardOnline::money() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveRewardOnline.money)
  return money_;
}
void SC_ReceiveRewardOnline::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_ReceiveRewardOnline.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ReceiveReliefPayment::CS_ReceiveReliefPayment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ReceiveReliefPayment)
}
CS_ReceiveReliefPayment::CS_ReceiveReliefPayment(const CS_ReceiveReliefPayment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_ReceiveReliefPayment)
}

void CS_ReceiveReliefPayment::SharedCtor() {
  _cached_size_ = 0;
}

CS_ReceiveReliefPayment::~CS_ReceiveReliefPayment() {
  // @@protoc_insertion_point(destructor:CS_ReceiveReliefPayment)
  SharedDtor();
}

void CS_ReceiveReliefPayment::SharedDtor() {
}

void CS_ReceiveReliefPayment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ReceiveReliefPayment::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ReceiveReliefPayment& CS_ReceiveReliefPayment::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ReceiveReliefPayment* CS_ReceiveReliefPayment::New(::google::protobuf::Arena* arena) const {
  CS_ReceiveReliefPayment* n = new CS_ReceiveReliefPayment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ReceiveReliefPayment::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ReceiveReliefPayment)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ReceiveReliefPayment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ReceiveReliefPayment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ReceiveReliefPayment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ReceiveReliefPayment)
  return false;
#undef DO_
}

void CS_ReceiveReliefPayment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ReceiveReliefPayment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ReceiveReliefPayment)
}

::google::protobuf::uint8* CS_ReceiveReliefPayment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ReceiveReliefPayment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ReceiveReliefPayment)
  return target;
}

size_t CS_ReceiveReliefPayment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ReceiveReliefPayment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ReceiveReliefPayment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ReceiveReliefPayment)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ReceiveReliefPayment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ReceiveReliefPayment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ReceiveReliefPayment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ReceiveReliefPayment)
    MergeFrom(*source);
  }
}

void CS_ReceiveReliefPayment::MergeFrom(const CS_ReceiveReliefPayment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ReceiveReliefPayment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_ReceiveReliefPayment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ReceiveReliefPayment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ReceiveReliefPayment::CopyFrom(const CS_ReceiveReliefPayment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ReceiveReliefPayment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ReceiveReliefPayment::IsInitialized() const {
  return true;
}

void CS_ReceiveReliefPayment::Swap(CS_ReceiveReliefPayment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ReceiveReliefPayment::InternalSwap(CS_ReceiveReliefPayment* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ReceiveReliefPayment::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ReceiveReliefPayment

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ReceiveReliefPayment::kResultFieldNumber;
const int SC_ReceiveReliefPayment::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ReceiveReliefPayment::SC_ReceiveReliefPayment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ReceiveReliefPayment)
}
SC_ReceiveReliefPayment::SC_ReceiveReliefPayment(const SC_ReceiveReliefPayment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&money_, &from.money_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&money_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_ReceiveReliefPayment)
}

void SC_ReceiveReliefPayment::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&money_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&money_) + sizeof(result_));
}

SC_ReceiveReliefPayment::~SC_ReceiveReliefPayment() {
  // @@protoc_insertion_point(destructor:SC_ReceiveReliefPayment)
  SharedDtor();
}

void SC_ReceiveReliefPayment::SharedDtor() {
}

void SC_ReceiveReliefPayment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ReceiveReliefPayment::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ReceiveReliefPayment& SC_ReceiveReliefPayment::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ReceiveReliefPayment* SC_ReceiveReliefPayment::New(::google::protobuf::Arena* arena) const {
  SC_ReceiveReliefPayment* n = new SC_ReceiveReliefPayment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ReceiveReliefPayment::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ReceiveReliefPayment)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&money_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&money_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ReceiveReliefPayment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ReceiveReliefPayment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ReceiveReliefPayment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ReceiveReliefPayment)
  return false;
#undef DO_
}

void SC_ReceiveReliefPayment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ReceiveReliefPayment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ReceiveReliefPayment)
}

::google::protobuf::uint8* SC_ReceiveReliefPayment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ReceiveReliefPayment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ReceiveReliefPayment)
  return target;
}

size_t SC_ReceiveReliefPayment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ReceiveReliefPayment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ReceiveReliefPayment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ReceiveReliefPayment)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ReceiveReliefPayment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ReceiveReliefPayment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ReceiveReliefPayment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ReceiveReliefPayment)
    MergeFrom(*source);
  }
}

void SC_ReceiveReliefPayment::MergeFrom(const SC_ReceiveReliefPayment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ReceiveReliefPayment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ReceiveReliefPayment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ReceiveReliefPayment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ReceiveReliefPayment::CopyFrom(const SC_ReceiveReliefPayment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ReceiveReliefPayment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ReceiveReliefPayment::IsInitialized() const {
  return true;
}

void SC_ReceiveReliefPayment::Swap(SC_ReceiveReliefPayment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ReceiveReliefPayment::InternalSwap(SC_ReceiveReliefPayment* other) {
  std::swap(money_, other->money_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ReceiveReliefPayment::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ReceiveReliefPayment

// optional int32 result = 1;
bool SC_ReceiveReliefPayment::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ReceiveReliefPayment::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ReceiveReliefPayment::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ReceiveReliefPayment::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_ReceiveReliefPayment::result() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveReliefPayment.result)
  return result_;
}
void SC_ReceiveReliefPayment::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ReceiveReliefPayment.result)
}

// optional int64 money = 2;
bool SC_ReceiveReliefPayment::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ReceiveReliefPayment::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ReceiveReliefPayment::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ReceiveReliefPayment::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 SC_ReceiveReliefPayment::money() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveReliefPayment.money)
  return money_;
}
void SC_ReceiveReliefPayment::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_ReceiveReliefPayment.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CE_RequestRank::kRankTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CE_RequestRank::CE_RequestRank()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CE_RequestRank)
}
CE_RequestRank::CE_RequestRank(const CE_RequestRank& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rank_type_ = from.rank_type_;
  // @@protoc_insertion_point(copy_constructor:CE_RequestRank)
}

void CE_RequestRank::SharedCtor() {
  _cached_size_ = 0;
  rank_type_ = 0;
}

CE_RequestRank::~CE_RequestRank() {
  // @@protoc_insertion_point(destructor:CE_RequestRank)
  SharedDtor();
}

void CE_RequestRank::SharedDtor() {
}

void CE_RequestRank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CE_RequestRank::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CE_RequestRank& CE_RequestRank::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CE_RequestRank* CE_RequestRank::New(::google::protobuf::Arena* arena) const {
  CE_RequestRank* n = new CE_RequestRank;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CE_RequestRank::Clear() {
// @@protoc_insertion_point(message_clear_start:CE_RequestRank)
  rank_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CE_RequestRank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CE_RequestRank)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rank_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_rank_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CE_RequestRank)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CE_RequestRank)
  return false;
#undef DO_
}

void CE_RequestRank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CE_RequestRank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 rank_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CE_RequestRank)
}

::google::protobuf::uint8* CE_RequestRank::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CE_RequestRank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 rank_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CE_RequestRank)
  return target;
}

size_t CE_RequestRank::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CE_RequestRank)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 rank_type = 1;
  if (has_rank_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CE_RequestRank::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CE_RequestRank)
  GOOGLE_DCHECK_NE(&from, this);
  const CE_RequestRank* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CE_RequestRank>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CE_RequestRank)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CE_RequestRank)
    MergeFrom(*source);
  }
}

void CE_RequestRank::MergeFrom(const CE_RequestRank& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CE_RequestRank)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rank_type()) {
    set_rank_type(from.rank_type());
  }
}

void CE_RequestRank::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CE_RequestRank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CE_RequestRank::CopyFrom(const CE_RequestRank& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CE_RequestRank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CE_RequestRank::IsInitialized() const {
  return true;
}

void CE_RequestRank::Swap(CE_RequestRank* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CE_RequestRank::InternalSwap(CE_RequestRank* other) {
  std::swap(rank_type_, other->rank_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CE_RequestRank::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CE_RequestRank

// optional int32 rank_type = 1;
bool CE_RequestRank::has_rank_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CE_RequestRank::set_has_rank_type() {
  _has_bits_[0] |= 0x00000001u;
}
void CE_RequestRank::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void CE_RequestRank::clear_rank_type() {
  rank_type_ = 0;
  clear_has_rank_type();
}
::google::protobuf::int32 CE_RequestRank::rank_type() const {
  // @@protoc_insertion_point(field_get:CE_RequestRank.rank_type)
  return rank_type_;
}
void CE_RequestRank::set_rank_type(::google::protobuf::int32 value) {
  set_has_rank_type();
  rank_type_ = value;
  // @@protoc_insertion_point(field_set:CE_RequestRank.rank_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EC_ReplyRank::kRankTypeFieldNumber;
const int EC_ReplyRank::kPbRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EC_ReplyRank::EC_ReplyRank()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EC_ReplyRank)
}
EC_ReplyRank::EC_ReplyRank(const EC_ReplyRank& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_rank_(from.pb_rank_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rank_type_ = from.rank_type_;
  // @@protoc_insertion_point(copy_constructor:EC_ReplyRank)
}

void EC_ReplyRank::SharedCtor() {
  _cached_size_ = 0;
  rank_type_ = 0;
}

EC_ReplyRank::~EC_ReplyRank() {
  // @@protoc_insertion_point(destructor:EC_ReplyRank)
  SharedDtor();
}

void EC_ReplyRank::SharedDtor() {
}

void EC_ReplyRank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EC_ReplyRank::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EC_ReplyRank& EC_ReplyRank::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

EC_ReplyRank* EC_ReplyRank::New(::google::protobuf::Arena* arena) const {
  EC_ReplyRank* n = new EC_ReplyRank;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EC_ReplyRank::Clear() {
// @@protoc_insertion_point(message_clear_start:EC_ReplyRank)
  pb_rank_.Clear();
  rank_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EC_ReplyRank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EC_ReplyRank)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rank_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_rank_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .RankItem pb_rank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_rank()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EC_ReplyRank)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EC_ReplyRank)
  return false;
#undef DO_
}

void EC_ReplyRank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EC_ReplyRank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 rank_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank_type(), output);
  }

  // repeated .RankItem pb_rank = 2;
  for (unsigned int i = 0, n = this->pb_rank_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pb_rank(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EC_ReplyRank)
}

::google::protobuf::uint8* EC_ReplyRank::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EC_ReplyRank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 rank_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank_type(), target);
  }

  // repeated .RankItem pb_rank = 2;
  for (unsigned int i = 0, n = this->pb_rank_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->pb_rank(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EC_ReplyRank)
  return target;
}

size_t EC_ReplyRank::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EC_ReplyRank)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .RankItem pb_rank = 2;
  {
    unsigned int count = this->pb_rank_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_rank(i));
    }
  }

  // optional int32 rank_type = 1;
  if (has_rank_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EC_ReplyRank::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EC_ReplyRank)
  GOOGLE_DCHECK_NE(&from, this);
  const EC_ReplyRank* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EC_ReplyRank>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EC_ReplyRank)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EC_ReplyRank)
    MergeFrom(*source);
  }
}

void EC_ReplyRank::MergeFrom(const EC_ReplyRank& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EC_ReplyRank)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_rank_.MergeFrom(from.pb_rank_);
  if (from.has_rank_type()) {
    set_rank_type(from.rank_type());
  }
}

void EC_ReplyRank::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EC_ReplyRank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EC_ReplyRank::CopyFrom(const EC_ReplyRank& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EC_ReplyRank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EC_ReplyRank::IsInitialized() const {
  return true;
}

void EC_ReplyRank::Swap(EC_ReplyRank* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EC_ReplyRank::InternalSwap(EC_ReplyRank* other) {
  pb_rank_.InternalSwap(&other->pb_rank_);
  std::swap(rank_type_, other->rank_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EC_ReplyRank::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EC_ReplyRank

// optional int32 rank_type = 1;
bool EC_ReplyRank::has_rank_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EC_ReplyRank::set_has_rank_type() {
  _has_bits_[0] |= 0x00000001u;
}
void EC_ReplyRank::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void EC_ReplyRank::clear_rank_type() {
  rank_type_ = 0;
  clear_has_rank_type();
}
::google::protobuf::int32 EC_ReplyRank::rank_type() const {
  // @@protoc_insertion_point(field_get:EC_ReplyRank.rank_type)
  return rank_type_;
}
void EC_ReplyRank::set_rank_type(::google::protobuf::int32 value) {
  set_has_rank_type();
  rank_type_ = value;
  // @@protoc_insertion_point(field_set:EC_ReplyRank.rank_type)
}

// repeated .RankItem pb_rank = 2;
int EC_ReplyRank::pb_rank_size() const {
  return pb_rank_.size();
}
void EC_ReplyRank::clear_pb_rank() {
  pb_rank_.Clear();
}
const ::RankItem& EC_ReplyRank::pb_rank(int index) const {
  // @@protoc_insertion_point(field_get:EC_ReplyRank.pb_rank)
  return pb_rank_.Get(index);
}
::RankItem* EC_ReplyRank::mutable_pb_rank(int index) {
  // @@protoc_insertion_point(field_mutable:EC_ReplyRank.pb_rank)
  return pb_rank_.Mutable(index);
}
::RankItem* EC_ReplyRank::add_pb_rank() {
  // @@protoc_insertion_point(field_add:EC_ReplyRank.pb_rank)
  return pb_rank_.Add();
}
::google::protobuf::RepeatedPtrField< ::RankItem >*
EC_ReplyRank::mutable_pb_rank() {
  // @@protoc_insertion_point(field_mutable_list:EC_ReplyRank.pb_rank)
  return &pb_rank_;
}
const ::google::protobuf::RepeatedPtrField< ::RankItem >&
EC_ReplyRank::pb_rank() const {
  // @@protoc_insertion_point(field_list:EC_ReplyRank.pb_rank)
  return pb_rank_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_EnterRoom::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_EnterRoom::CS_EnterRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_EnterRoom)
}
CS_EnterRoom::CS_EnterRoom(const CS_EnterRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  room_id_ = from.room_id_;
  // @@protoc_insertion_point(copy_constructor:CS_EnterRoom)
}

void CS_EnterRoom::SharedCtor() {
  _cached_size_ = 0;
  room_id_ = 0;
}

CS_EnterRoom::~CS_EnterRoom() {
  // @@protoc_insertion_point(destructor:CS_EnterRoom)
  SharedDtor();
}

void CS_EnterRoom::SharedDtor() {
}

void CS_EnterRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_EnterRoom::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_EnterRoom& CS_EnterRoom::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_EnterRoom* CS_EnterRoom::New(::google::protobuf::Arena* arena) const {
  CS_EnterRoom* n = new CS_EnterRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_EnterRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_EnterRoom)
  room_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_EnterRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_EnterRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_EnterRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_EnterRoom)
  return false;
#undef DO_
}

void CS_EnterRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_EnterRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->room_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_EnterRoom)
}

::google::protobuf::uint8* CS_EnterRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_EnterRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->room_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_EnterRoom)
  return target;
}

size_t CS_EnterRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_EnterRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 room_id = 1;
  if (has_room_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_EnterRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_EnterRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_EnterRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_EnterRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_EnterRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_EnterRoom)
    MergeFrom(*source);
  }
}

void CS_EnterRoom::MergeFrom(const CS_EnterRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_EnterRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_room_id()) {
    set_room_id(from.room_id());
  }
}

void CS_EnterRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_EnterRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_EnterRoom::CopyFrom(const CS_EnterRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_EnterRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_EnterRoom::IsInitialized() const {
  return true;
}

void CS_EnterRoom::Swap(CS_EnterRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_EnterRoom::InternalSwap(CS_EnterRoom* other) {
  std::swap(room_id_, other->room_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_EnterRoom::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_EnterRoom

// optional int32 room_id = 1;
bool CS_EnterRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_EnterRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_EnterRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_EnterRoom::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
::google::protobuf::int32 CS_EnterRoom::room_id() const {
  // @@protoc_insertion_point(field_get:CS_EnterRoom.room_id)
  return room_id_;
}
void CS_EnterRoom::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:CS_EnterRoom.room_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_EnterRoom::kRoomIdFieldNumber;
const int SC_EnterRoom::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_EnterRoom::SC_EnterRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_EnterRoom)
}
SC_EnterRoom::SC_EnterRoom(const SC_EnterRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&room_id_, &from.room_id_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_EnterRoom)
}

void SC_EnterRoom::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&room_id_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(result_));
}

SC_EnterRoom::~SC_EnterRoom() {
  // @@protoc_insertion_point(destructor:SC_EnterRoom)
  SharedDtor();
}

void SC_EnterRoom::SharedDtor() {
}

void SC_EnterRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_EnterRoom::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_EnterRoom& SC_EnterRoom::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_EnterRoom* SC_EnterRoom::New(::google::protobuf::Arena* arena) const {
  SC_EnterRoom* n = new SC_EnterRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_EnterRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_EnterRoom)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&room_id_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&room_id_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_EnterRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_EnterRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_EnterRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_EnterRoom)
  return false;
#undef DO_
}

void SC_EnterRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_EnterRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->room_id(), output);
  }

  // optional int32 result = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_EnterRoom)
}

::google::protobuf::uint8* SC_EnterRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_EnterRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->room_id(), target);
  }

  // optional int32 result = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_EnterRoom)
  return target;
}

size_t SC_EnterRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_EnterRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 room_id = 1;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }

    // optional int32 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_EnterRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_EnterRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_EnterRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_EnterRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_EnterRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_EnterRoom)
    MergeFrom(*source);
  }
}

void SC_EnterRoom::MergeFrom(const SC_EnterRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_EnterRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      room_id_ = from.room_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_EnterRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_EnterRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_EnterRoom::CopyFrom(const SC_EnterRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_EnterRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_EnterRoom::IsInitialized() const {
  return true;
}

void SC_EnterRoom::Swap(SC_EnterRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_EnterRoom::InternalSwap(SC_EnterRoom* other) {
  std::swap(room_id_, other->room_id_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_EnterRoom::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_EnterRoom

// optional int32 room_id = 1;
bool SC_EnterRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_EnterRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_EnterRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_EnterRoom::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
::google::protobuf::int32 SC_EnterRoom::room_id() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoom.room_id)
  return room_id_;
}
void SC_EnterRoom::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoom.room_id)
}

// optional int32 result = 2;
bool SC_EnterRoom::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_EnterRoom::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_EnterRoom::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_EnterRoom::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_EnterRoom::result() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoom.result)
  return result_;
}
void SC_EnterRoom::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoom.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_NotifyEnterRoom::kRoomIdFieldNumber;
const int SC_NotifyEnterRoom::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_NotifyEnterRoom::SC_NotifyEnterRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_NotifyEnterRoom)
}
SC_NotifyEnterRoom::SC_NotifyEnterRoom(const SC_NotifyEnterRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&room_id_, &from.room_id_,
    reinterpret_cast<char*>(&guid_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(guid_));
  // @@protoc_insertion_point(copy_constructor:SC_NotifyEnterRoom)
}

void SC_NotifyEnterRoom::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&room_id_, 0, reinterpret_cast<char*>(&guid_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(guid_));
}

SC_NotifyEnterRoom::~SC_NotifyEnterRoom() {
  // @@protoc_insertion_point(destructor:SC_NotifyEnterRoom)
  SharedDtor();
}

void SC_NotifyEnterRoom::SharedDtor() {
}

void SC_NotifyEnterRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_NotifyEnterRoom::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_NotifyEnterRoom& SC_NotifyEnterRoom::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_NotifyEnterRoom* SC_NotifyEnterRoom::New(::google::protobuf::Arena* arena) const {
  SC_NotifyEnterRoom* n = new SC_NotifyEnterRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_NotifyEnterRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_NotifyEnterRoom)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&room_id_, 0, reinterpret_cast<char*>(&guid_) -
      reinterpret_cast<char*>(&room_id_) + sizeof(guid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_NotifyEnterRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_NotifyEnterRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_NotifyEnterRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_NotifyEnterRoom)
  return false;
#undef DO_
}

void SC_NotifyEnterRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_NotifyEnterRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->room_id(), output);
  }

  // optional int32 guid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_NotifyEnterRoom)
}

::google::protobuf::uint8* SC_NotifyEnterRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_NotifyEnterRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->room_id(), target);
  }

  // optional int32 guid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_NotifyEnterRoom)
  return target;
}

size_t SC_NotifyEnterRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_NotifyEnterRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 room_id = 1;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }

    // optional int32 guid = 2;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_NotifyEnterRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_NotifyEnterRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_NotifyEnterRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_NotifyEnterRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_NotifyEnterRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_NotifyEnterRoom)
    MergeFrom(*source);
  }
}

void SC_NotifyEnterRoom::MergeFrom(const SC_NotifyEnterRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_NotifyEnterRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      room_id_ = from.room_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      guid_ = from.guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_NotifyEnterRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_NotifyEnterRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_NotifyEnterRoom::CopyFrom(const SC_NotifyEnterRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_NotifyEnterRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_NotifyEnterRoom::IsInitialized() const {
  return true;
}

void SC_NotifyEnterRoom::Swap(SC_NotifyEnterRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_NotifyEnterRoom::InternalSwap(SC_NotifyEnterRoom* other) {
  std::swap(room_id_, other->room_id_);
  std::swap(guid_, other->guid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_NotifyEnterRoom::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_NotifyEnterRoom

// optional int32 room_id = 1;
bool SC_NotifyEnterRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_NotifyEnterRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_NotifyEnterRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_NotifyEnterRoom::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
::google::protobuf::int32 SC_NotifyEnterRoom::room_id() const {
  // @@protoc_insertion_point(field_get:SC_NotifyEnterRoom.room_id)
  return room_id_;
}
void SC_NotifyEnterRoom::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyEnterRoom.room_id)
}

// optional int32 guid = 2;
bool SC_NotifyEnterRoom::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_NotifyEnterRoom::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_NotifyEnterRoom::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_NotifyEnterRoom::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 SC_NotifyEnterRoom::guid() const {
  // @@protoc_insertion_point(field_get:SC_NotifyEnterRoom.guid)
  return guid_;
}
void SC_NotifyEnterRoom::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyEnterRoom.guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ExitRoom::CS_ExitRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ExitRoom)
}
CS_ExitRoom::CS_ExitRoom(const CS_ExitRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_ExitRoom)
}

void CS_ExitRoom::SharedCtor() {
  _cached_size_ = 0;
}

CS_ExitRoom::~CS_ExitRoom() {
  // @@protoc_insertion_point(destructor:CS_ExitRoom)
  SharedDtor();
}

void CS_ExitRoom::SharedDtor() {
}

void CS_ExitRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ExitRoom::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ExitRoom& CS_ExitRoom::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ExitRoom* CS_ExitRoom::New(::google::protobuf::Arena* arena) const {
  CS_ExitRoom* n = new CS_ExitRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ExitRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ExitRoom)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ExitRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ExitRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ExitRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ExitRoom)
  return false;
#undef DO_
}

void CS_ExitRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ExitRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ExitRoom)
}

::google::protobuf::uint8* CS_ExitRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ExitRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ExitRoom)
  return target;
}

size_t CS_ExitRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ExitRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ExitRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ExitRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ExitRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ExitRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ExitRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ExitRoom)
    MergeFrom(*source);
  }
}

void CS_ExitRoom::MergeFrom(const CS_ExitRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ExitRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_ExitRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ExitRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ExitRoom::CopyFrom(const CS_ExitRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ExitRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ExitRoom::IsInitialized() const {
  return true;
}

void CS_ExitRoom::Swap(CS_ExitRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ExitRoom::InternalSwap(CS_ExitRoom* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ExitRoom::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ExitRoom

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ExitRoom::kRoomIdFieldNumber;
const int SC_ExitRoom::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ExitRoom::SC_ExitRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ExitRoom)
}
SC_ExitRoom::SC_ExitRoom(const SC_ExitRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&room_id_, &from.room_id_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_ExitRoom)
}

void SC_ExitRoom::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&room_id_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(result_));
}

SC_ExitRoom::~SC_ExitRoom() {
  // @@protoc_insertion_point(destructor:SC_ExitRoom)
  SharedDtor();
}

void SC_ExitRoom::SharedDtor() {
}

void SC_ExitRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ExitRoom::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ExitRoom& SC_ExitRoom::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ExitRoom* SC_ExitRoom::New(::google::protobuf::Arena* arena) const {
  SC_ExitRoom* n = new SC_ExitRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ExitRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ExitRoom)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&room_id_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&room_id_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ExitRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ExitRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ExitRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ExitRoom)
  return false;
#undef DO_
}

void SC_ExitRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ExitRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->room_id(), output);
  }

  // optional int32 result = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ExitRoom)
}

::google::protobuf::uint8* SC_ExitRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ExitRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->room_id(), target);
  }

  // optional int32 result = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ExitRoom)
  return target;
}

size_t SC_ExitRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ExitRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 room_id = 1;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }

    // optional int32 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ExitRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ExitRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ExitRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ExitRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ExitRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ExitRoom)
    MergeFrom(*source);
  }
}

void SC_ExitRoom::MergeFrom(const SC_ExitRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ExitRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      room_id_ = from.room_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ExitRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ExitRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ExitRoom::CopyFrom(const SC_ExitRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ExitRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ExitRoom::IsInitialized() const {
  return true;
}

void SC_ExitRoom::Swap(SC_ExitRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ExitRoom::InternalSwap(SC_ExitRoom* other) {
  std::swap(room_id_, other->room_id_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ExitRoom::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ExitRoom

// optional int32 room_id = 1;
bool SC_ExitRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ExitRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ExitRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ExitRoom::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
::google::protobuf::int32 SC_ExitRoom::room_id() const {
  // @@protoc_insertion_point(field_get:SC_ExitRoom.room_id)
  return room_id_;
}
void SC_ExitRoom::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ExitRoom.room_id)
}

// optional int32 result = 2;
bool SC_ExitRoom::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ExitRoom::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ExitRoom::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ExitRoom::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_ExitRoom::result() const {
  // @@protoc_insertion_point(field_get:SC_ExitRoom.result)
  return result_;
}
void SC_ExitRoom::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ExitRoom.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_NotifyExitRoom::kRoomIdFieldNumber;
const int SC_NotifyExitRoom::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_NotifyExitRoom::SC_NotifyExitRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_NotifyExitRoom)
}
SC_NotifyExitRoom::SC_NotifyExitRoom(const SC_NotifyExitRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&room_id_, &from.room_id_,
    reinterpret_cast<char*>(&guid_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(guid_));
  // @@protoc_insertion_point(copy_constructor:SC_NotifyExitRoom)
}

void SC_NotifyExitRoom::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&room_id_, 0, reinterpret_cast<char*>(&guid_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(guid_));
}

SC_NotifyExitRoom::~SC_NotifyExitRoom() {
  // @@protoc_insertion_point(destructor:SC_NotifyExitRoom)
  SharedDtor();
}

void SC_NotifyExitRoom::SharedDtor() {
}

void SC_NotifyExitRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_NotifyExitRoom::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_NotifyExitRoom& SC_NotifyExitRoom::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_NotifyExitRoom* SC_NotifyExitRoom::New(::google::protobuf::Arena* arena) const {
  SC_NotifyExitRoom* n = new SC_NotifyExitRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_NotifyExitRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_NotifyExitRoom)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&room_id_, 0, reinterpret_cast<char*>(&guid_) -
      reinterpret_cast<char*>(&room_id_) + sizeof(guid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_NotifyExitRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_NotifyExitRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_NotifyExitRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_NotifyExitRoom)
  return false;
#undef DO_
}

void SC_NotifyExitRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_NotifyExitRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->room_id(), output);
  }

  // optional int32 guid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_NotifyExitRoom)
}

::google::protobuf::uint8* SC_NotifyExitRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_NotifyExitRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->room_id(), target);
  }

  // optional int32 guid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_NotifyExitRoom)
  return target;
}

size_t SC_NotifyExitRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_NotifyExitRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 room_id = 1;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }

    // optional int32 guid = 2;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_NotifyExitRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_NotifyExitRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_NotifyExitRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_NotifyExitRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_NotifyExitRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_NotifyExitRoom)
    MergeFrom(*source);
  }
}

void SC_NotifyExitRoom::MergeFrom(const SC_NotifyExitRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_NotifyExitRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      room_id_ = from.room_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      guid_ = from.guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_NotifyExitRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_NotifyExitRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_NotifyExitRoom::CopyFrom(const SC_NotifyExitRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_NotifyExitRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_NotifyExitRoom::IsInitialized() const {
  return true;
}

void SC_NotifyExitRoom::Swap(SC_NotifyExitRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_NotifyExitRoom::InternalSwap(SC_NotifyExitRoom* other) {
  std::swap(room_id_, other->room_id_);
  std::swap(guid_, other->guid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_NotifyExitRoom::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_NotifyExitRoom

// optional int32 room_id = 1;
bool SC_NotifyExitRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_NotifyExitRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_NotifyExitRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_NotifyExitRoom::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
::google::protobuf::int32 SC_NotifyExitRoom::room_id() const {
  // @@protoc_insertion_point(field_get:SC_NotifyExitRoom.room_id)
  return room_id_;
}
void SC_NotifyExitRoom::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyExitRoom.room_id)
}

// optional int32 guid = 2;
bool SC_NotifyExitRoom::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_NotifyExitRoom::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_NotifyExitRoom::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_NotifyExitRoom::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 SC_NotifyExitRoom::guid() const {
  // @@protoc_insertion_point(field_get:SC_NotifyExitRoom.guid)
  return guid_;
}
void SC_NotifyExitRoom::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyExitRoom.guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_AutoEnterRoom::CS_AutoEnterRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_AutoEnterRoom)
}
CS_AutoEnterRoom::CS_AutoEnterRoom(const CS_AutoEnterRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_AutoEnterRoom)
}

void CS_AutoEnterRoom::SharedCtor() {
  _cached_size_ = 0;
}

CS_AutoEnterRoom::~CS_AutoEnterRoom() {
  // @@protoc_insertion_point(destructor:CS_AutoEnterRoom)
  SharedDtor();
}

void CS_AutoEnterRoom::SharedDtor() {
}

void CS_AutoEnterRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_AutoEnterRoom::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_AutoEnterRoom& CS_AutoEnterRoom::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_AutoEnterRoom* CS_AutoEnterRoom::New(::google::protobuf::Arena* arena) const {
  CS_AutoEnterRoom* n = new CS_AutoEnterRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_AutoEnterRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_AutoEnterRoom)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_AutoEnterRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_AutoEnterRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_AutoEnterRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_AutoEnterRoom)
  return false;
#undef DO_
}

void CS_AutoEnterRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_AutoEnterRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_AutoEnterRoom)
}

::google::protobuf::uint8* CS_AutoEnterRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_AutoEnterRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_AutoEnterRoom)
  return target;
}

size_t CS_AutoEnterRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_AutoEnterRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_AutoEnterRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_AutoEnterRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_AutoEnterRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_AutoEnterRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_AutoEnterRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_AutoEnterRoom)
    MergeFrom(*source);
  }
}

void CS_AutoEnterRoom::MergeFrom(const CS_AutoEnterRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_AutoEnterRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_AutoEnterRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_AutoEnterRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_AutoEnterRoom::CopyFrom(const CS_AutoEnterRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_AutoEnterRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_AutoEnterRoom::IsInitialized() const {
  return true;
}

void CS_AutoEnterRoom::Swap(CS_AutoEnterRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_AutoEnterRoom::InternalSwap(CS_AutoEnterRoom* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_AutoEnterRoom::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_AutoEnterRoom

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_AutoSitDown::CS_AutoSitDown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_AutoSitDown)
}
CS_AutoSitDown::CS_AutoSitDown(const CS_AutoSitDown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_AutoSitDown)
}

void CS_AutoSitDown::SharedCtor() {
  _cached_size_ = 0;
}

CS_AutoSitDown::~CS_AutoSitDown() {
  // @@protoc_insertion_point(destructor:CS_AutoSitDown)
  SharedDtor();
}

void CS_AutoSitDown::SharedDtor() {
}

void CS_AutoSitDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_AutoSitDown::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_AutoSitDown& CS_AutoSitDown::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_AutoSitDown* CS_AutoSitDown::New(::google::protobuf::Arena* arena) const {
  CS_AutoSitDown* n = new CS_AutoSitDown;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_AutoSitDown::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_AutoSitDown)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_AutoSitDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_AutoSitDown)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_AutoSitDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_AutoSitDown)
  return false;
#undef DO_
}

void CS_AutoSitDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_AutoSitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_AutoSitDown)
}

::google::protobuf::uint8* CS_AutoSitDown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_AutoSitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_AutoSitDown)
  return target;
}

size_t CS_AutoSitDown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_AutoSitDown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_AutoSitDown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_AutoSitDown)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_AutoSitDown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_AutoSitDown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_AutoSitDown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_AutoSitDown)
    MergeFrom(*source);
  }
}

void CS_AutoSitDown::MergeFrom(const CS_AutoSitDown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_AutoSitDown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_AutoSitDown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_AutoSitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_AutoSitDown::CopyFrom(const CS_AutoSitDown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_AutoSitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_AutoSitDown::IsInitialized() const {
  return true;
}

void CS_AutoSitDown::Swap(CS_AutoSitDown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_AutoSitDown::InternalSwap(CS_AutoSitDown* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_AutoSitDown::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_AutoSitDown

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_SitDown::kTableIdFieldNumber;
const int CS_SitDown::kChairIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_SitDown::CS_SitDown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_SitDown)
}
CS_SitDown::CS_SitDown(const CS_SitDown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&table_id_, &from.table_id_,
    reinterpret_cast<char*>(&chair_id_) -
    reinterpret_cast<char*>(&table_id_) + sizeof(chair_id_));
  // @@protoc_insertion_point(copy_constructor:CS_SitDown)
}

void CS_SitDown::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&table_id_, 0, reinterpret_cast<char*>(&chair_id_) -
    reinterpret_cast<char*>(&table_id_) + sizeof(chair_id_));
}

CS_SitDown::~CS_SitDown() {
  // @@protoc_insertion_point(destructor:CS_SitDown)
  SharedDtor();
}

void CS_SitDown::SharedDtor() {
}

void CS_SitDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_SitDown::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_SitDown& CS_SitDown::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_SitDown* CS_SitDown::New(::google::protobuf::Arena* arena) const {
  CS_SitDown* n = new CS_SitDown;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_SitDown::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_SitDown)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&table_id_, 0, reinterpret_cast<char*>(&chair_id_) -
      reinterpret_cast<char*>(&table_id_) + sizeof(chair_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_SitDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_SitDown)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 table_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_table_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_SitDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_SitDown)
  return false;
#undef DO_
}

void CS_SitDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_SitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 table_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->table_id(), output);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chair_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_SitDown)
}

::google::protobuf::uint8* CS_SitDown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_SitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 table_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->table_id(), target);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chair_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_SitDown)
  return target;
}

size_t CS_SitDown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_SitDown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 table_id = 1;
    if (has_table_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->table_id());
    }

    // optional int32 chair_id = 2;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_SitDown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_SitDown)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_SitDown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_SitDown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_SitDown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_SitDown)
    MergeFrom(*source);
  }
}

void CS_SitDown::MergeFrom(const CS_SitDown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_SitDown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      table_id_ = from.table_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      chair_id_ = from.chair_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CS_SitDown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_SitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_SitDown::CopyFrom(const CS_SitDown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_SitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_SitDown::IsInitialized() const {
  return true;
}

void CS_SitDown::Swap(CS_SitDown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_SitDown::InternalSwap(CS_SitDown* other) {
  std::swap(table_id_, other->table_id_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_SitDown::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_SitDown

// optional int32 table_id = 1;
bool CS_SitDown::has_table_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_SitDown::set_has_table_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_SitDown::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_SitDown::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
::google::protobuf::int32 CS_SitDown::table_id() const {
  // @@protoc_insertion_point(field_get:CS_SitDown.table_id)
  return table_id_;
}
void CS_SitDown::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:CS_SitDown.table_id)
}

// optional int32 chair_id = 2;
bool CS_SitDown::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_SitDown::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_SitDown::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_SitDown::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 CS_SitDown::chair_id() const {
  // @@protoc_insertion_point(field_get:CS_SitDown.chair_id)
  return chair_id_;
}
void CS_SitDown::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:CS_SitDown.chair_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_SitDown::kTableIdFieldNumber;
const int SC_SitDown::kChairIdFieldNumber;
const int SC_SitDown::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_SitDown::SC_SitDown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_SitDown)
}
SC_SitDown::SC_SitDown(const SC_SitDown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&table_id_, &from.table_id_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&table_id_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_SitDown)
}

void SC_SitDown::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&table_id_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&table_id_) + sizeof(result_));
}

SC_SitDown::~SC_SitDown() {
  // @@protoc_insertion_point(destructor:SC_SitDown)
  SharedDtor();
}

void SC_SitDown::SharedDtor() {
}

void SC_SitDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_SitDown::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_SitDown& SC_SitDown::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_SitDown* SC_SitDown::New(::google::protobuf::Arena* arena) const {
  SC_SitDown* n = new SC_SitDown;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_SitDown::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_SitDown)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&table_id_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&table_id_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_SitDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_SitDown)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 table_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_table_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_SitDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_SitDown)
  return false;
#undef DO_
}

void SC_SitDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_SitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 table_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->table_id(), output);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chair_id(), output);
  }

  // optional int32 result = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_SitDown)
}

::google::protobuf::uint8* SC_SitDown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_SitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 table_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->table_id(), target);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chair_id(), target);
  }

  // optional int32 result = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_SitDown)
  return target;
}

size_t SC_SitDown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_SitDown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 table_id = 1;
    if (has_table_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->table_id());
    }

    // optional int32 chair_id = 2;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_SitDown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_SitDown)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_SitDown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_SitDown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_SitDown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_SitDown)
    MergeFrom(*source);
  }
}

void SC_SitDown::MergeFrom(const SC_SitDown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_SitDown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      table_id_ = from.table_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_SitDown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_SitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_SitDown::CopyFrom(const SC_SitDown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_SitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_SitDown::IsInitialized() const {
  return true;
}

void SC_SitDown::Swap(SC_SitDown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_SitDown::InternalSwap(SC_SitDown* other) {
  std::swap(table_id_, other->table_id_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_SitDown::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_SitDown

// optional int32 table_id = 1;
bool SC_SitDown::has_table_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_SitDown::set_has_table_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_SitDown::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_SitDown::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
::google::protobuf::int32 SC_SitDown::table_id() const {
  // @@protoc_insertion_point(field_get:SC_SitDown.table_id)
  return table_id_;
}
void SC_SitDown::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_SitDown.table_id)
}

// optional int32 chair_id = 2;
bool SC_SitDown::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_SitDown::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_SitDown::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_SitDown::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_SitDown::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_SitDown.chair_id)
  return chair_id_;
}
void SC_SitDown::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_SitDown.chair_id)
}

// optional int32 result = 3;
bool SC_SitDown::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_SitDown::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_SitDown::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_SitDown::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_SitDown::result() const {
  // @@protoc_insertion_point(field_get:SC_SitDown.result)
  return result_;
}
void SC_SitDown::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_SitDown.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_NotifySitDown::kTableIdFieldNumber;
const int SC_NotifySitDown::kPbVisualInfoFieldNumber;
const int SC_NotifySitDown::kIsOnflineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_NotifySitDown::SC_NotifySitDown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_NotifySitDown)
}
SC_NotifySitDown::SC_NotifySitDown(const SC_NotifySitDown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pb_visual_info()) {
    pb_visual_info_ = new ::PlayerVisualInfo(*from.pb_visual_info_);
  } else {
    pb_visual_info_ = NULL;
  }
  ::memcpy(&table_id_, &from.table_id_,
    reinterpret_cast<char*>(&is_onfline_) -
    reinterpret_cast<char*>(&table_id_) + sizeof(is_onfline_));
  // @@protoc_insertion_point(copy_constructor:SC_NotifySitDown)
}

void SC_NotifySitDown::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pb_visual_info_, 0, reinterpret_cast<char*>(&is_onfline_) -
    reinterpret_cast<char*>(&pb_visual_info_) + sizeof(is_onfline_));
}

SC_NotifySitDown::~SC_NotifySitDown() {
  // @@protoc_insertion_point(destructor:SC_NotifySitDown)
  SharedDtor();
}

void SC_NotifySitDown::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pb_visual_info_;
  }
}

void SC_NotifySitDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_NotifySitDown::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_NotifySitDown& SC_NotifySitDown::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_NotifySitDown* SC_NotifySitDown::New(::google::protobuf::Arena* arena) const {
  SC_NotifySitDown* n = new SC_NotifySitDown;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_NotifySitDown::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_NotifySitDown)
  if (has_pb_visual_info()) {
    GOOGLE_DCHECK(pb_visual_info_ != NULL);
    pb_visual_info_->::PlayerVisualInfo::Clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&table_id_, 0, reinterpret_cast<char*>(&is_onfline_) -
      reinterpret_cast<char*>(&table_id_) + sizeof(is_onfline_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_NotifySitDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_NotifySitDown)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 table_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_table_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PlayerVisualInfo pb_visual_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pb_visual_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_onfline = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_is_onfline();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_onfline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_NotifySitDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_NotifySitDown)
  return false;
#undef DO_
}

void SC_NotifySitDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_NotifySitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 table_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->table_id(), output);
  }

  // optional .PlayerVisualInfo pb_visual_info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pb_visual_info_, output);
  }

  // optional bool is_onfline = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_onfline(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_NotifySitDown)
}

::google::protobuf::uint8* SC_NotifySitDown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_NotifySitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 table_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->table_id(), target);
  }

  // optional .PlayerVisualInfo pb_visual_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pb_visual_info_, deterministic, target);
  }

  // optional bool is_onfline = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_onfline(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_NotifySitDown)
  return target;
}

size_t SC_NotifySitDown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_NotifySitDown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .PlayerVisualInfo pb_visual_info = 2;
    if (has_pb_visual_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pb_visual_info_);
    }

    // optional int32 table_id = 1;
    if (has_table_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->table_id());
    }

    // optional bool is_onfline = 4;
    if (has_is_onfline()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_NotifySitDown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_NotifySitDown)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_NotifySitDown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_NotifySitDown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_NotifySitDown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_NotifySitDown)
    MergeFrom(*source);
  }
}

void SC_NotifySitDown::MergeFrom(const SC_NotifySitDown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_NotifySitDown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pb_visual_info()->::PlayerVisualInfo::MergeFrom(from.pb_visual_info());
    }
    if (cached_has_bits & 0x00000002u) {
      table_id_ = from.table_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_onfline_ = from.is_onfline_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_NotifySitDown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_NotifySitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_NotifySitDown::CopyFrom(const SC_NotifySitDown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_NotifySitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_NotifySitDown::IsInitialized() const {
  return true;
}

void SC_NotifySitDown::Swap(SC_NotifySitDown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_NotifySitDown::InternalSwap(SC_NotifySitDown* other) {
  std::swap(pb_visual_info_, other->pb_visual_info_);
  std::swap(table_id_, other->table_id_);
  std::swap(is_onfline_, other->is_onfline_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_NotifySitDown::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_NotifySitDown

// optional int32 table_id = 1;
bool SC_NotifySitDown::has_table_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_NotifySitDown::set_has_table_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_NotifySitDown::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_NotifySitDown::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
::google::protobuf::int32 SC_NotifySitDown::table_id() const {
  // @@protoc_insertion_point(field_get:SC_NotifySitDown.table_id)
  return table_id_;
}
void SC_NotifySitDown::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifySitDown.table_id)
}

// optional .PlayerVisualInfo pb_visual_info = 2;
bool SC_NotifySitDown::has_pb_visual_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_NotifySitDown::set_has_pb_visual_info() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_NotifySitDown::clear_has_pb_visual_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_NotifySitDown::clear_pb_visual_info() {
  if (pb_visual_info_ != NULL) pb_visual_info_->::PlayerVisualInfo::Clear();
  clear_has_pb_visual_info();
}
const ::PlayerVisualInfo& SC_NotifySitDown::pb_visual_info() const {
  // @@protoc_insertion_point(field_get:SC_NotifySitDown.pb_visual_info)
  return pb_visual_info_ != NULL ? *pb_visual_info_
                         : *::PlayerVisualInfo::internal_default_instance();
}
::PlayerVisualInfo* SC_NotifySitDown::mutable_pb_visual_info() {
  set_has_pb_visual_info();
  if (pb_visual_info_ == NULL) {
    pb_visual_info_ = new ::PlayerVisualInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_NotifySitDown.pb_visual_info)
  return pb_visual_info_;
}
::PlayerVisualInfo* SC_NotifySitDown::release_pb_visual_info() {
  // @@protoc_insertion_point(field_release:SC_NotifySitDown.pb_visual_info)
  clear_has_pb_visual_info();
  ::PlayerVisualInfo* temp = pb_visual_info_;
  pb_visual_info_ = NULL;
  return temp;
}
void SC_NotifySitDown::set_allocated_pb_visual_info(::PlayerVisualInfo* pb_visual_info) {
  delete pb_visual_info_;
  pb_visual_info_ = pb_visual_info;
  if (pb_visual_info) {
    set_has_pb_visual_info();
  } else {
    clear_has_pb_visual_info();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_NotifySitDown.pb_visual_info)
}

// optional bool is_onfline = 4;
bool SC_NotifySitDown::has_is_onfline() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_NotifySitDown::set_has_is_onfline() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_NotifySitDown::clear_has_is_onfline() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_NotifySitDown::clear_is_onfline() {
  is_onfline_ = false;
  clear_has_is_onfline();
}
bool SC_NotifySitDown::is_onfline() const {
  // @@protoc_insertion_point(field_get:SC_NotifySitDown.is_onfline)
  return is_onfline_;
}
void SC_NotifySitDown::set_is_onfline(bool value) {
  set_has_is_onfline();
  is_onfline_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifySitDown.is_onfline)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_StandUp::CS_StandUp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_StandUp)
}
CS_StandUp::CS_StandUp(const CS_StandUp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_StandUp)
}

void CS_StandUp::SharedCtor() {
  _cached_size_ = 0;
}

CS_StandUp::~CS_StandUp() {
  // @@protoc_insertion_point(destructor:CS_StandUp)
  SharedDtor();
}

void CS_StandUp::SharedDtor() {
}

void CS_StandUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_StandUp::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_StandUp& CS_StandUp::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_StandUp* CS_StandUp::New(::google::protobuf::Arena* arena) const {
  CS_StandUp* n = new CS_StandUp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_StandUp::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_StandUp)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_StandUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_StandUp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_StandUp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_StandUp)
  return false;
#undef DO_
}

void CS_StandUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_StandUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_StandUp)
}

::google::protobuf::uint8* CS_StandUp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_StandUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_StandUp)
  return target;
}

size_t CS_StandUp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_StandUp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_StandUp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_StandUp)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_StandUp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_StandUp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_StandUp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_StandUp)
    MergeFrom(*source);
  }
}

void CS_StandUp::MergeFrom(const CS_StandUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_StandUp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_StandUp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_StandUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_StandUp::CopyFrom(const CS_StandUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_StandUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_StandUp::IsInitialized() const {
  return true;
}

void CS_StandUp::Swap(CS_StandUp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_StandUp::InternalSwap(CS_StandUp* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_StandUp::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_StandUp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_StandUp::kTableIdFieldNumber;
const int SC_StandUp::kChairIdFieldNumber;
const int SC_StandUp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_StandUp::SC_StandUp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_StandUp)
}
SC_StandUp::SC_StandUp(const SC_StandUp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&table_id_, &from.table_id_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&table_id_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_StandUp)
}

void SC_StandUp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&table_id_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&table_id_) + sizeof(result_));
}

SC_StandUp::~SC_StandUp() {
  // @@protoc_insertion_point(destructor:SC_StandUp)
  SharedDtor();
}

void SC_StandUp::SharedDtor() {
}

void SC_StandUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_StandUp::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_StandUp& SC_StandUp::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_StandUp* SC_StandUp::New(::google::protobuf::Arena* arena) const {
  SC_StandUp* n = new SC_StandUp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_StandUp::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_StandUp)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&table_id_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&table_id_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_StandUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_StandUp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 table_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_table_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_StandUp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_StandUp)
  return false;
#undef DO_
}

void SC_StandUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_StandUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 table_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->table_id(), output);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chair_id(), output);
  }

  // optional int32 result = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_StandUp)
}

::google::protobuf::uint8* SC_StandUp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_StandUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 table_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->table_id(), target);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chair_id(), target);
  }

  // optional int32 result = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_StandUp)
  return target;
}

size_t SC_StandUp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_StandUp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 table_id = 1;
    if (has_table_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->table_id());
    }

    // optional int32 chair_id = 2;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_StandUp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_StandUp)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_StandUp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_StandUp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_StandUp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_StandUp)
    MergeFrom(*source);
  }
}

void SC_StandUp::MergeFrom(const SC_StandUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_StandUp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      table_id_ = from.table_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_StandUp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_StandUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_StandUp::CopyFrom(const SC_StandUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_StandUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_StandUp::IsInitialized() const {
  return true;
}

void SC_StandUp::Swap(SC_StandUp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_StandUp::InternalSwap(SC_StandUp* other) {
  std::swap(table_id_, other->table_id_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_StandUp::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_StandUp

// optional int32 table_id = 1;
bool SC_StandUp::has_table_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_StandUp::set_has_table_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_StandUp::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_StandUp::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
::google::protobuf::int32 SC_StandUp::table_id() const {
  // @@protoc_insertion_point(field_get:SC_StandUp.table_id)
  return table_id_;
}
void SC_StandUp::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_StandUp.table_id)
}

// optional int32 chair_id = 2;
bool SC_StandUp::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_StandUp::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_StandUp::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_StandUp::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_StandUp::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_StandUp.chair_id)
  return chair_id_;
}
void SC_StandUp::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_StandUp.chair_id)
}

// optional int32 result = 3;
bool SC_StandUp::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_StandUp::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_StandUp::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_StandUp::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_StandUp::result() const {
  // @@protoc_insertion_point(field_get:SC_StandUp.result)
  return result_;
}
void SC_StandUp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_StandUp.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_NotifyStandUp::kTableIdFieldNumber;
const int SC_NotifyStandUp::kChairIdFieldNumber;
const int SC_NotifyStandUp::kGuidFieldNumber;
const int SC_NotifyStandUp::kIsOfflineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_NotifyStandUp::SC_NotifyStandUp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_NotifyStandUp)
}
SC_NotifyStandUp::SC_NotifyStandUp(const SC_NotifyStandUp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&table_id_, &from.table_id_,
    reinterpret_cast<char*>(&is_offline_) -
    reinterpret_cast<char*>(&table_id_) + sizeof(is_offline_));
  // @@protoc_insertion_point(copy_constructor:SC_NotifyStandUp)
}

void SC_NotifyStandUp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&table_id_, 0, reinterpret_cast<char*>(&is_offline_) -
    reinterpret_cast<char*>(&table_id_) + sizeof(is_offline_));
}

SC_NotifyStandUp::~SC_NotifyStandUp() {
  // @@protoc_insertion_point(destructor:SC_NotifyStandUp)
  SharedDtor();
}

void SC_NotifyStandUp::SharedDtor() {
}

void SC_NotifyStandUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_NotifyStandUp::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_NotifyStandUp& SC_NotifyStandUp::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_NotifyStandUp* SC_NotifyStandUp::New(::google::protobuf::Arena* arena) const {
  SC_NotifyStandUp* n = new SC_NotifyStandUp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_NotifyStandUp::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_NotifyStandUp)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&table_id_, 0, reinterpret_cast<char*>(&is_offline_) -
      reinterpret_cast<char*>(&table_id_) + sizeof(is_offline_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_NotifyStandUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_NotifyStandUp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 table_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_table_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_offline = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_is_offline();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_offline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_NotifyStandUp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_NotifyStandUp)
  return false;
#undef DO_
}

void SC_NotifyStandUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_NotifyStandUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 table_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->table_id(), output);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chair_id(), output);
  }

  // optional int32 guid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->guid(), output);
  }

  // optional bool is_offline = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_offline(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_NotifyStandUp)
}

::google::protobuf::uint8* SC_NotifyStandUp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_NotifyStandUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 table_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->table_id(), target);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chair_id(), target);
  }

  // optional int32 guid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->guid(), target);
  }

  // optional bool is_offline = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_offline(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_NotifyStandUp)
  return target;
}

size_t SC_NotifyStandUp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_NotifyStandUp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 table_id = 1;
    if (has_table_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->table_id());
    }

    // optional int32 chair_id = 2;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 guid = 3;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

    // optional bool is_offline = 4;
    if (has_is_offline()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_NotifyStandUp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_NotifyStandUp)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_NotifyStandUp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_NotifyStandUp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_NotifyStandUp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_NotifyStandUp)
    MergeFrom(*source);
  }
}

void SC_NotifyStandUp::MergeFrom(const SC_NotifyStandUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_NotifyStandUp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      table_id_ = from.table_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_offline_ = from.is_offline_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_NotifyStandUp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_NotifyStandUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_NotifyStandUp::CopyFrom(const SC_NotifyStandUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_NotifyStandUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_NotifyStandUp::IsInitialized() const {
  return true;
}

void SC_NotifyStandUp::Swap(SC_NotifyStandUp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_NotifyStandUp::InternalSwap(SC_NotifyStandUp* other) {
  std::swap(table_id_, other->table_id_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(guid_, other->guid_);
  std::swap(is_offline_, other->is_offline_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_NotifyStandUp::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_NotifyStandUp

// optional int32 table_id = 1;
bool SC_NotifyStandUp::has_table_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_NotifyStandUp::set_has_table_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_NotifyStandUp::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_NotifyStandUp::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
::google::protobuf::int32 SC_NotifyStandUp::table_id() const {
  // @@protoc_insertion_point(field_get:SC_NotifyStandUp.table_id)
  return table_id_;
}
void SC_NotifyStandUp::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyStandUp.table_id)
}

// optional int32 chair_id = 2;
bool SC_NotifyStandUp::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_NotifyStandUp::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_NotifyStandUp::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_NotifyStandUp::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_NotifyStandUp::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_NotifyStandUp.chair_id)
  return chair_id_;
}
void SC_NotifyStandUp::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyStandUp.chair_id)
}

// optional int32 guid = 3;
bool SC_NotifyStandUp::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_NotifyStandUp::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_NotifyStandUp::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_NotifyStandUp::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 SC_NotifyStandUp::guid() const {
  // @@protoc_insertion_point(field_get:SC_NotifyStandUp.guid)
  return guid_;
}
void SC_NotifyStandUp::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyStandUp.guid)
}

// optional bool is_offline = 4;
bool SC_NotifyStandUp::has_is_offline() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_NotifyStandUp::set_has_is_offline() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_NotifyStandUp::clear_has_is_offline() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_NotifyStandUp::clear_is_offline() {
  is_offline_ = false;
  clear_has_is_offline();
}
bool SC_NotifyStandUp::is_offline() const {
  // @@protoc_insertion_point(field_get:SC_NotifyStandUp.is_offline)
  return is_offline_;
}
void SC_NotifyStandUp::set_is_offline(bool value) {
  set_has_is_offline();
  is_offline_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyStandUp.is_offline)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_EnterRoomAndSitDown::CS_EnterRoomAndSitDown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_EnterRoomAndSitDown)
}
CS_EnterRoomAndSitDown::CS_EnterRoomAndSitDown(const CS_EnterRoomAndSitDown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_EnterRoomAndSitDown)
}

void CS_EnterRoomAndSitDown::SharedCtor() {
  _cached_size_ = 0;
}

CS_EnterRoomAndSitDown::~CS_EnterRoomAndSitDown() {
  // @@protoc_insertion_point(destructor:CS_EnterRoomAndSitDown)
  SharedDtor();
}

void CS_EnterRoomAndSitDown::SharedDtor() {
}

void CS_EnterRoomAndSitDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_EnterRoomAndSitDown::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_EnterRoomAndSitDown& CS_EnterRoomAndSitDown::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_EnterRoomAndSitDown* CS_EnterRoomAndSitDown::New(::google::protobuf::Arena* arena) const {
  CS_EnterRoomAndSitDown* n = new CS_EnterRoomAndSitDown;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_EnterRoomAndSitDown::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_EnterRoomAndSitDown)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_EnterRoomAndSitDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_EnterRoomAndSitDown)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_EnterRoomAndSitDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_EnterRoomAndSitDown)
  return false;
#undef DO_
}

void CS_EnterRoomAndSitDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_EnterRoomAndSitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_EnterRoomAndSitDown)
}

::google::protobuf::uint8* CS_EnterRoomAndSitDown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_EnterRoomAndSitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_EnterRoomAndSitDown)
  return target;
}

size_t CS_EnterRoomAndSitDown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_EnterRoomAndSitDown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_EnterRoomAndSitDown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_EnterRoomAndSitDown)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_EnterRoomAndSitDown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_EnterRoomAndSitDown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_EnterRoomAndSitDown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_EnterRoomAndSitDown)
    MergeFrom(*source);
  }
}

void CS_EnterRoomAndSitDown::MergeFrom(const CS_EnterRoomAndSitDown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_EnterRoomAndSitDown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_EnterRoomAndSitDown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_EnterRoomAndSitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_EnterRoomAndSitDown::CopyFrom(const CS_EnterRoomAndSitDown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_EnterRoomAndSitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_EnterRoomAndSitDown::IsInitialized() const {
  return true;
}

void CS_EnterRoomAndSitDown::Swap(CS_EnterRoomAndSitDown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_EnterRoomAndSitDown::InternalSwap(CS_EnterRoomAndSitDown* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_EnterRoomAndSitDown::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_EnterRoomAndSitDown

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_EnterRoomAndSitDown::kRoomIdFieldNumber;
const int SC_EnterRoomAndSitDown::kTableIdFieldNumber;
const int SC_EnterRoomAndSitDown::kChairIdFieldNumber;
const int SC_EnterRoomAndSitDown::kResultFieldNumber;
const int SC_EnterRoomAndSitDown::kPbVisualInfoFieldNumber;
const int SC_EnterRoomAndSitDown::kGameIdFieldNumber;
const int SC_EnterRoomAndSitDown::kFirstGameTypeFieldNumber;
const int SC_EnterRoomAndSitDown::kSecondGameTypeFieldNumber;
const int SC_EnterRoomAndSitDown::kIpAreaFieldNumber;
const int SC_EnterRoomAndSitDown::kPrivateRoomFieldNumber;
const int SC_EnterRoomAndSitDown::kBalanceMoneyFieldNumber;
const int SC_EnterRoomAndSitDown::kPrivateRoomScoreTypeFieldNumber;
const int SC_EnterRoomAndSitDown::kPrivateRoomCellMoneyFieldNumber;
const int SC_EnterRoomAndSitDown::kPrivateRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_EnterRoomAndSitDown::SC_EnterRoomAndSitDown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_EnterRoomAndSitDown)
}
SC_EnterRoomAndSitDown::SC_EnterRoomAndSitDown(const SC_EnterRoomAndSitDown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_visual_info_(from.pb_visual_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip_area()) {
    ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
  }
  ::memcpy(&room_id_, &from.room_id_,
    reinterpret_cast<char*>(&private_room_id_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(private_room_id_));
  // @@protoc_insertion_point(copy_constructor:SC_EnterRoomAndSitDown)
}

void SC_EnterRoomAndSitDown::SharedCtor() {
  _cached_size_ = 0;
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&room_id_, 0, reinterpret_cast<char*>(&private_room_id_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(private_room_id_));
}

SC_EnterRoomAndSitDown::~SC_EnterRoomAndSitDown() {
  // @@protoc_insertion_point(destructor:SC_EnterRoomAndSitDown)
  SharedDtor();
}

void SC_EnterRoomAndSitDown::SharedDtor() {
  ip_area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_EnterRoomAndSitDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_EnterRoomAndSitDown::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_EnterRoomAndSitDown& SC_EnterRoomAndSitDown::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_EnterRoomAndSitDown* SC_EnterRoomAndSitDown::New(::google::protobuf::Arena* arena) const {
  SC_EnterRoomAndSitDown* n = new SC_EnterRoomAndSitDown;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_EnterRoomAndSitDown::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_EnterRoomAndSitDown)
  pb_visual_info_.Clear();
  if (has_ip_area()) {
    GOOGLE_DCHECK(!ip_area_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*ip_area_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 254u) {
    ::memset(&room_id_, 0, reinterpret_cast<char*>(&second_game_type_) -
      reinterpret_cast<char*>(&room_id_) + sizeof(second_game_type_));
  }
  if (_has_bits_[8 / 32] & 7936u) {
    ::memset(&private_room_, 0, reinterpret_cast<char*>(&private_room_id_) -
      reinterpret_cast<char*>(&private_room_) + sizeof(private_room_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_EnterRoomAndSitDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_EnterRoomAndSitDown)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 table_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_table_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PlayerVisualInfo pb_visual_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_visual_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 game_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 first_game_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_first_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 second_game_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_second_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip_area = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_area()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip_area().data(), this->ip_area().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_EnterRoomAndSitDown.ip_area");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool private_room = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_private_room();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &private_room_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 balance_money = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_balance_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &balance_money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 private_room_score_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_private_room_score_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &private_room_score_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 private_room_cell_money = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_private_room_cell_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &private_room_cell_money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 private_room_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_private_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &private_room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_EnterRoomAndSitDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_EnterRoomAndSitDown)
  return false;
#undef DO_
}

void SC_EnterRoomAndSitDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_EnterRoomAndSitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->room_id(), output);
  }

  // optional int32 table_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->table_id(), output);
  }

  // optional int32 chair_id = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->chair_id(), output);
  }

  // optional int32 result = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->result(), output);
  }

  // repeated .PlayerVisualInfo pb_visual_info = 5;
  for (unsigned int i = 0, n = this->pb_visual_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->pb_visual_info(i), output);
  }

  // optional int32 game_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->game_id(), output);
  }

  // optional int32 first_game_type = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->first_game_type(), output);
  }

  // optional int32 second_game_type = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->second_game_type(), output);
  }

  // optional string ip_area = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_EnterRoomAndSitDown.ip_area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->ip_area(), output);
  }

  // optional bool private_room = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->private_room(), output);
  }

  // optional int32 balance_money = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->balance_money(), output);
  }

  // optional int32 private_room_score_type = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->private_room_score_type(), output);
  }

  // optional int32 private_room_cell_money = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->private_room_cell_money(), output);
  }

  // optional int32 private_room_id = 14;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->private_room_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_EnterRoomAndSitDown)
}

::google::protobuf::uint8* SC_EnterRoomAndSitDown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_EnterRoomAndSitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->room_id(), target);
  }

  // optional int32 table_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->table_id(), target);
  }

  // optional int32 chair_id = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->chair_id(), target);
  }

  // optional int32 result = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->result(), target);
  }

  // repeated .PlayerVisualInfo pb_visual_info = 5;
  for (unsigned int i = 0, n = this->pb_visual_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->pb_visual_info(i), deterministic, target);
  }

  // optional int32 game_id = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->game_id(), target);
  }

  // optional int32 first_game_type = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->first_game_type(), target);
  }

  // optional int32 second_game_type = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->second_game_type(), target);
  }

  // optional string ip_area = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_EnterRoomAndSitDown.ip_area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->ip_area(), target);
  }

  // optional bool private_room = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->private_room(), target);
  }

  // optional int32 balance_money = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->balance_money(), target);
  }

  // optional int32 private_room_score_type = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->private_room_score_type(), target);
  }

  // optional int32 private_room_cell_money = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->private_room_cell_money(), target);
  }

  // optional int32 private_room_id = 14;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->private_room_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_EnterRoomAndSitDown)
  return target;
}

size_t SC_EnterRoomAndSitDown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_EnterRoomAndSitDown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .PlayerVisualInfo pb_visual_info = 5;
  {
    unsigned int count = this->pb_visual_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_visual_info(i));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string ip_area = 9;
    if (has_ip_area()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip_area());
    }

    // optional int32 room_id = 1;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }

    // optional int32 table_id = 2;
    if (has_table_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->table_id());
    }

    // optional int32 chair_id = 3;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 result = 4;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 game_id = 6;
    if (has_game_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_id());
    }

    // optional int32 first_game_type = 7;
    if (has_first_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_game_type());
    }

    // optional int32 second_game_type = 8;
    if (has_second_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_game_type());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional bool private_room = 10;
    if (has_private_room()) {
      total_size += 1 + 1;
    }

    // optional int32 balance_money = 11;
    if (has_balance_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->balance_money());
    }

    // optional int32 private_room_score_type = 12;
    if (has_private_room_score_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->private_room_score_type());
    }

    // optional int32 private_room_cell_money = 13;
    if (has_private_room_cell_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->private_room_cell_money());
    }

    // optional int32 private_room_id = 14;
    if (has_private_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->private_room_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_EnterRoomAndSitDown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_EnterRoomAndSitDown)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_EnterRoomAndSitDown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_EnterRoomAndSitDown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_EnterRoomAndSitDown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_EnterRoomAndSitDown)
    MergeFrom(*source);
  }
}

void SC_EnterRoomAndSitDown::MergeFrom(const SC_EnterRoomAndSitDown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_EnterRoomAndSitDown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_visual_info_.MergeFrom(from.pb_visual_info_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ip_area();
      ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
    }
    if (cached_has_bits & 0x00000002u) {
      room_id_ = from.room_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      table_id_ = from.table_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000020u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      first_game_type_ = from.first_game_type_;
    }
    if (cached_has_bits & 0x00000080u) {
      second_game_type_ = from.second_game_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      private_room_ = from.private_room_;
    }
    if (cached_has_bits & 0x00000200u) {
      balance_money_ = from.balance_money_;
    }
    if (cached_has_bits & 0x00000400u) {
      private_room_score_type_ = from.private_room_score_type_;
    }
    if (cached_has_bits & 0x00000800u) {
      private_room_cell_money_ = from.private_room_cell_money_;
    }
    if (cached_has_bits & 0x00001000u) {
      private_room_id_ = from.private_room_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_EnterRoomAndSitDown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_EnterRoomAndSitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_EnterRoomAndSitDown::CopyFrom(const SC_EnterRoomAndSitDown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_EnterRoomAndSitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_EnterRoomAndSitDown::IsInitialized() const {
  return true;
}

void SC_EnterRoomAndSitDown::Swap(SC_EnterRoomAndSitDown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_EnterRoomAndSitDown::InternalSwap(SC_EnterRoomAndSitDown* other) {
  pb_visual_info_.InternalSwap(&other->pb_visual_info_);
  ip_area_.Swap(&other->ip_area_);
  std::swap(room_id_, other->room_id_);
  std::swap(table_id_, other->table_id_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(result_, other->result_);
  std::swap(game_id_, other->game_id_);
  std::swap(first_game_type_, other->first_game_type_);
  std::swap(second_game_type_, other->second_game_type_);
  std::swap(private_room_, other->private_room_);
  std::swap(balance_money_, other->balance_money_);
  std::swap(private_room_score_type_, other->private_room_score_type_);
  std::swap(private_room_cell_money_, other->private_room_cell_money_);
  std::swap(private_room_id_, other->private_room_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_EnterRoomAndSitDown::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_EnterRoomAndSitDown

// optional int32 room_id = 1;
bool SC_EnterRoomAndSitDown::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_EnterRoomAndSitDown::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_EnterRoomAndSitDown::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_EnterRoomAndSitDown::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
::google::protobuf::int32 SC_EnterRoomAndSitDown::room_id() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.room_id)
  return room_id_;
}
void SC_EnterRoomAndSitDown::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.room_id)
}

// optional int32 table_id = 2;
bool SC_EnterRoomAndSitDown::has_table_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_EnterRoomAndSitDown::set_has_table_id() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_EnterRoomAndSitDown::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_EnterRoomAndSitDown::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
::google::protobuf::int32 SC_EnterRoomAndSitDown::table_id() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.table_id)
  return table_id_;
}
void SC_EnterRoomAndSitDown::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.table_id)
}

// optional int32 chair_id = 3;
bool SC_EnterRoomAndSitDown::has_chair_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_EnterRoomAndSitDown::set_has_chair_id() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_EnterRoomAndSitDown::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_EnterRoomAndSitDown::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_EnterRoomAndSitDown::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.chair_id)
  return chair_id_;
}
void SC_EnterRoomAndSitDown::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.chair_id)
}

// optional int32 result = 4;
bool SC_EnterRoomAndSitDown::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SC_EnterRoomAndSitDown::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
void SC_EnterRoomAndSitDown::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
void SC_EnterRoomAndSitDown::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_EnterRoomAndSitDown::result() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.result)
  return result_;
}
void SC_EnterRoomAndSitDown::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.result)
}

// repeated .PlayerVisualInfo pb_visual_info = 5;
int SC_EnterRoomAndSitDown::pb_visual_info_size() const {
  return pb_visual_info_.size();
}
void SC_EnterRoomAndSitDown::clear_pb_visual_info() {
  pb_visual_info_.Clear();
}
const ::PlayerVisualInfo& SC_EnterRoomAndSitDown::pb_visual_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.pb_visual_info)
  return pb_visual_info_.Get(index);
}
::PlayerVisualInfo* SC_EnterRoomAndSitDown::mutable_pb_visual_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_EnterRoomAndSitDown.pb_visual_info)
  return pb_visual_info_.Mutable(index);
}
::PlayerVisualInfo* SC_EnterRoomAndSitDown::add_pb_visual_info() {
  // @@protoc_insertion_point(field_add:SC_EnterRoomAndSitDown.pb_visual_info)
  return pb_visual_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >*
SC_EnterRoomAndSitDown::mutable_pb_visual_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_EnterRoomAndSitDown.pb_visual_info)
  return &pb_visual_info_;
}
const ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >&
SC_EnterRoomAndSitDown::pb_visual_info() const {
  // @@protoc_insertion_point(field_list:SC_EnterRoomAndSitDown.pb_visual_info)
  return pb_visual_info_;
}

// optional int32 game_id = 6;
bool SC_EnterRoomAndSitDown::has_game_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SC_EnterRoomAndSitDown::set_has_game_id() {
  _has_bits_[0] |= 0x00000020u;
}
void SC_EnterRoomAndSitDown::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void SC_EnterRoomAndSitDown::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
::google::protobuf::int32 SC_EnterRoomAndSitDown::game_id() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.game_id)
  return game_id_;
}
void SC_EnterRoomAndSitDown::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.game_id)
}

// optional int32 first_game_type = 7;
bool SC_EnterRoomAndSitDown::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SC_EnterRoomAndSitDown::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000040u;
}
void SC_EnterRoomAndSitDown::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void SC_EnterRoomAndSitDown::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
::google::protobuf::int32 SC_EnterRoomAndSitDown::first_game_type() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.first_game_type)
  return first_game_type_;
}
void SC_EnterRoomAndSitDown::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.first_game_type)
}

// optional int32 second_game_type = 8;
bool SC_EnterRoomAndSitDown::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SC_EnterRoomAndSitDown::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000080u;
}
void SC_EnterRoomAndSitDown::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000080u;
}
void SC_EnterRoomAndSitDown::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
::google::protobuf::int32 SC_EnterRoomAndSitDown::second_game_type() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.second_game_type)
  return second_game_type_;
}
void SC_EnterRoomAndSitDown::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.second_game_type)
}

// optional string ip_area = 9;
bool SC_EnterRoomAndSitDown::has_ip_area() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_EnterRoomAndSitDown::set_has_ip_area() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_EnterRoomAndSitDown::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_EnterRoomAndSitDown::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
const ::std::string& SC_EnterRoomAndSitDown::ip_area() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.ip_area)
  return ip_area_.GetNoArena();
}
void SC_EnterRoomAndSitDown::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.ip_area)
}
#if LANG_CXX11
void SC_EnterRoomAndSitDown::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_EnterRoomAndSitDown.ip_area)
}
#endif
void SC_EnterRoomAndSitDown::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_EnterRoomAndSitDown.ip_area)
}
void SC_EnterRoomAndSitDown::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_EnterRoomAndSitDown.ip_area)
}
::std::string* SC_EnterRoomAndSitDown::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:SC_EnterRoomAndSitDown.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_EnterRoomAndSitDown::release_ip_area() {
  // @@protoc_insertion_point(field_release:SC_EnterRoomAndSitDown.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_EnterRoomAndSitDown::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:SC_EnterRoomAndSitDown.ip_area)
}

// optional bool private_room = 10;
bool SC_EnterRoomAndSitDown::has_private_room() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void SC_EnterRoomAndSitDown::set_has_private_room() {
  _has_bits_[0] |= 0x00000100u;
}
void SC_EnterRoomAndSitDown::clear_has_private_room() {
  _has_bits_[0] &= ~0x00000100u;
}
void SC_EnterRoomAndSitDown::clear_private_room() {
  private_room_ = false;
  clear_has_private_room();
}
bool SC_EnterRoomAndSitDown::private_room() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.private_room)
  return private_room_;
}
void SC_EnterRoomAndSitDown::set_private_room(bool value) {
  set_has_private_room();
  private_room_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.private_room)
}

// optional int32 balance_money = 11;
bool SC_EnterRoomAndSitDown::has_balance_money() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void SC_EnterRoomAndSitDown::set_has_balance_money() {
  _has_bits_[0] |= 0x00000200u;
}
void SC_EnterRoomAndSitDown::clear_has_balance_money() {
  _has_bits_[0] &= ~0x00000200u;
}
void SC_EnterRoomAndSitDown::clear_balance_money() {
  balance_money_ = 0;
  clear_has_balance_money();
}
::google::protobuf::int32 SC_EnterRoomAndSitDown::balance_money() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.balance_money)
  return balance_money_;
}
void SC_EnterRoomAndSitDown::set_balance_money(::google::protobuf::int32 value) {
  set_has_balance_money();
  balance_money_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.balance_money)
}

// optional int32 private_room_score_type = 12;
bool SC_EnterRoomAndSitDown::has_private_room_score_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void SC_EnterRoomAndSitDown::set_has_private_room_score_type() {
  _has_bits_[0] |= 0x00000400u;
}
void SC_EnterRoomAndSitDown::clear_has_private_room_score_type() {
  _has_bits_[0] &= ~0x00000400u;
}
void SC_EnterRoomAndSitDown::clear_private_room_score_type() {
  private_room_score_type_ = 0;
  clear_has_private_room_score_type();
}
::google::protobuf::int32 SC_EnterRoomAndSitDown::private_room_score_type() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.private_room_score_type)
  return private_room_score_type_;
}
void SC_EnterRoomAndSitDown::set_private_room_score_type(::google::protobuf::int32 value) {
  set_has_private_room_score_type();
  private_room_score_type_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.private_room_score_type)
}

// optional int32 private_room_cell_money = 13;
bool SC_EnterRoomAndSitDown::has_private_room_cell_money() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void SC_EnterRoomAndSitDown::set_has_private_room_cell_money() {
  _has_bits_[0] |= 0x00000800u;
}
void SC_EnterRoomAndSitDown::clear_has_private_room_cell_money() {
  _has_bits_[0] &= ~0x00000800u;
}
void SC_EnterRoomAndSitDown::clear_private_room_cell_money() {
  private_room_cell_money_ = 0;
  clear_has_private_room_cell_money();
}
::google::protobuf::int32 SC_EnterRoomAndSitDown::private_room_cell_money() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.private_room_cell_money)
  return private_room_cell_money_;
}
void SC_EnterRoomAndSitDown::set_private_room_cell_money(::google::protobuf::int32 value) {
  set_has_private_room_cell_money();
  private_room_cell_money_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.private_room_cell_money)
}

// optional int32 private_room_id = 14;
bool SC_EnterRoomAndSitDown::has_private_room_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void SC_EnterRoomAndSitDown::set_has_private_room_id() {
  _has_bits_[0] |= 0x00001000u;
}
void SC_EnterRoomAndSitDown::clear_has_private_room_id() {
  _has_bits_[0] &= ~0x00001000u;
}
void SC_EnterRoomAndSitDown::clear_private_room_id() {
  private_room_id_ = 0;
  clear_has_private_room_id();
}
::google::protobuf::int32 SC_EnterRoomAndSitDown::private_room_id() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.private_room_id)
  return private_room_id_;
}
void SC_EnterRoomAndSitDown::set_private_room_id(::google::protobuf::int32 value) {
  set_has_private_room_id();
  private_room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.private_room_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_StandUpAndExitRoom::CS_StandUpAndExitRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_StandUpAndExitRoom)
}
CS_StandUpAndExitRoom::CS_StandUpAndExitRoom(const CS_StandUpAndExitRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_StandUpAndExitRoom)
}

void CS_StandUpAndExitRoom::SharedCtor() {
  _cached_size_ = 0;
}

CS_StandUpAndExitRoom::~CS_StandUpAndExitRoom() {
  // @@protoc_insertion_point(destructor:CS_StandUpAndExitRoom)
  SharedDtor();
}

void CS_StandUpAndExitRoom::SharedDtor() {
}

void CS_StandUpAndExitRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_StandUpAndExitRoom::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_StandUpAndExitRoom& CS_StandUpAndExitRoom::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_StandUpAndExitRoom* CS_StandUpAndExitRoom::New(::google::protobuf::Arena* arena) const {
  CS_StandUpAndExitRoom* n = new CS_StandUpAndExitRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_StandUpAndExitRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_StandUpAndExitRoom)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_StandUpAndExitRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_StandUpAndExitRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_StandUpAndExitRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_StandUpAndExitRoom)
  return false;
#undef DO_
}

void CS_StandUpAndExitRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_StandUpAndExitRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_StandUpAndExitRoom)
}

::google::protobuf::uint8* CS_StandUpAndExitRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_StandUpAndExitRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_StandUpAndExitRoom)
  return target;
}

size_t CS_StandUpAndExitRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_StandUpAndExitRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_StandUpAndExitRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_StandUpAndExitRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_StandUpAndExitRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_StandUpAndExitRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_StandUpAndExitRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_StandUpAndExitRoom)
    MergeFrom(*source);
  }
}

void CS_StandUpAndExitRoom::MergeFrom(const CS_StandUpAndExitRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_StandUpAndExitRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_StandUpAndExitRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_StandUpAndExitRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_StandUpAndExitRoom::CopyFrom(const CS_StandUpAndExitRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_StandUpAndExitRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_StandUpAndExitRoom::IsInitialized() const {
  return true;
}

void CS_StandUpAndExitRoom::Swap(CS_StandUpAndExitRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_StandUpAndExitRoom::InternalSwap(CS_StandUpAndExitRoom* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_StandUpAndExitRoom::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_StandUpAndExitRoom

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_StandUpAndExitRoom::kRoomIdFieldNumber;
const int SC_StandUpAndExitRoom::kTableIdFieldNumber;
const int SC_StandUpAndExitRoom::kChairIdFieldNumber;
const int SC_StandUpAndExitRoom::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_StandUpAndExitRoom::SC_StandUpAndExitRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_StandUpAndExitRoom)
}
SC_StandUpAndExitRoom::SC_StandUpAndExitRoom(const SC_StandUpAndExitRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&room_id_, &from.room_id_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_StandUpAndExitRoom)
}

void SC_StandUpAndExitRoom::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&room_id_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(result_));
}

SC_StandUpAndExitRoom::~SC_StandUpAndExitRoom() {
  // @@protoc_insertion_point(destructor:SC_StandUpAndExitRoom)
  SharedDtor();
}

void SC_StandUpAndExitRoom::SharedDtor() {
}

void SC_StandUpAndExitRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_StandUpAndExitRoom::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_StandUpAndExitRoom& SC_StandUpAndExitRoom::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_StandUpAndExitRoom* SC_StandUpAndExitRoom::New(::google::protobuf::Arena* arena) const {
  SC_StandUpAndExitRoom* n = new SC_StandUpAndExitRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_StandUpAndExitRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_StandUpAndExitRoom)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&room_id_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&room_id_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_StandUpAndExitRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_StandUpAndExitRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 table_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_table_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_StandUpAndExitRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_StandUpAndExitRoom)
  return false;
#undef DO_
}

void SC_StandUpAndExitRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_StandUpAndExitRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->room_id(), output);
  }

  // optional int32 table_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->table_id(), output);
  }

  // optional int32 chair_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->chair_id(), output);
  }

  // optional int32 result = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_StandUpAndExitRoom)
}

::google::protobuf::uint8* SC_StandUpAndExitRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_StandUpAndExitRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->room_id(), target);
  }

  // optional int32 table_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->table_id(), target);
  }

  // optional int32 chair_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->chair_id(), target);
  }

  // optional int32 result = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_StandUpAndExitRoom)
  return target;
}

size_t SC_StandUpAndExitRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_StandUpAndExitRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 room_id = 1;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }

    // optional int32 table_id = 2;
    if (has_table_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->table_id());
    }

    // optional int32 chair_id = 3;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 result = 4;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_StandUpAndExitRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_StandUpAndExitRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_StandUpAndExitRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_StandUpAndExitRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_StandUpAndExitRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_StandUpAndExitRoom)
    MergeFrom(*source);
  }
}

void SC_StandUpAndExitRoom::MergeFrom(const SC_StandUpAndExitRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_StandUpAndExitRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      room_id_ = from.room_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      table_id_ = from.table_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_StandUpAndExitRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_StandUpAndExitRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_StandUpAndExitRoom::CopyFrom(const SC_StandUpAndExitRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_StandUpAndExitRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_StandUpAndExitRoom::IsInitialized() const {
  return true;
}

void SC_StandUpAndExitRoom::Swap(SC_StandUpAndExitRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_StandUpAndExitRoom::InternalSwap(SC_StandUpAndExitRoom* other) {
  std::swap(room_id_, other->room_id_);
  std::swap(table_id_, other->table_id_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_StandUpAndExitRoom::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_StandUpAndExitRoom

// optional int32 room_id = 1;
bool SC_StandUpAndExitRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_StandUpAndExitRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_StandUpAndExitRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_StandUpAndExitRoom::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
::google::protobuf::int32 SC_StandUpAndExitRoom::room_id() const {
  // @@protoc_insertion_point(field_get:SC_StandUpAndExitRoom.room_id)
  return room_id_;
}
void SC_StandUpAndExitRoom::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_StandUpAndExitRoom.room_id)
}

// optional int32 table_id = 2;
bool SC_StandUpAndExitRoom::has_table_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_StandUpAndExitRoom::set_has_table_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_StandUpAndExitRoom::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_StandUpAndExitRoom::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
::google::protobuf::int32 SC_StandUpAndExitRoom::table_id() const {
  // @@protoc_insertion_point(field_get:SC_StandUpAndExitRoom.table_id)
  return table_id_;
}
void SC_StandUpAndExitRoom::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_StandUpAndExitRoom.table_id)
}

// optional int32 chair_id = 3;
bool SC_StandUpAndExitRoom::has_chair_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_StandUpAndExitRoom::set_has_chair_id() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_StandUpAndExitRoom::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_StandUpAndExitRoom::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_StandUpAndExitRoom::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_StandUpAndExitRoom.chair_id)
  return chair_id_;
}
void SC_StandUpAndExitRoom::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_StandUpAndExitRoom.chair_id)
}

// optional int32 result = 4;
bool SC_StandUpAndExitRoom::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_StandUpAndExitRoom::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_StandUpAndExitRoom::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_StandUpAndExitRoom::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_StandUpAndExitRoom::result() const {
  // @@protoc_insertion_point(field_get:SC_StandUpAndExitRoom.result)
  return result_;
}
void SC_StandUpAndExitRoom::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_StandUpAndExitRoom.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ChangeChair::CS_ChangeChair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ChangeChair)
}
CS_ChangeChair::CS_ChangeChair(const CS_ChangeChair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_ChangeChair)
}

void CS_ChangeChair::SharedCtor() {
  _cached_size_ = 0;
}

CS_ChangeChair::~CS_ChangeChair() {
  // @@protoc_insertion_point(destructor:CS_ChangeChair)
  SharedDtor();
}

void CS_ChangeChair::SharedDtor() {
}

void CS_ChangeChair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ChangeChair::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ChangeChair& CS_ChangeChair::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ChangeChair* CS_ChangeChair::New(::google::protobuf::Arena* arena) const {
  CS_ChangeChair* n = new CS_ChangeChair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ChangeChair::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ChangeChair)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ChangeChair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ChangeChair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ChangeChair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ChangeChair)
  return false;
#undef DO_
}

void CS_ChangeChair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ChangeChair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ChangeChair)
}

::google::protobuf::uint8* CS_ChangeChair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ChangeChair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ChangeChair)
  return target;
}

size_t CS_ChangeChair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ChangeChair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ChangeChair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ChangeChair)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ChangeChair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ChangeChair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ChangeChair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ChangeChair)
    MergeFrom(*source);
  }
}

void CS_ChangeChair::MergeFrom(const CS_ChangeChair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ChangeChair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_ChangeChair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ChangeChair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ChangeChair::CopyFrom(const CS_ChangeChair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ChangeChair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ChangeChair::IsInitialized() const {
  return true;
}

void CS_ChangeChair::Swap(CS_ChangeChair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ChangeChair::InternalSwap(CS_ChangeChair* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ChangeChair::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ChangeChair

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ChangeChair::kTableIdFieldNumber;
const int SC_ChangeChair::kChairIdFieldNumber;
const int SC_ChangeChair::kResultFieldNumber;
const int SC_ChangeChair::kPbVisualInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ChangeChair::SC_ChangeChair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ChangeChair)
}
SC_ChangeChair::SC_ChangeChair(const SC_ChangeChair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_visual_info_(from.pb_visual_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&table_id_, &from.table_id_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&table_id_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_ChangeChair)
}

void SC_ChangeChair::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&table_id_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&table_id_) + sizeof(result_));
}

SC_ChangeChair::~SC_ChangeChair() {
  // @@protoc_insertion_point(destructor:SC_ChangeChair)
  SharedDtor();
}

void SC_ChangeChair::SharedDtor() {
}

void SC_ChangeChair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ChangeChair::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ChangeChair& SC_ChangeChair::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ChangeChair* SC_ChangeChair::New(::google::protobuf::Arena* arena) const {
  SC_ChangeChair* n = new SC_ChangeChair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ChangeChair::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ChangeChair)
  pb_visual_info_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&table_id_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&table_id_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ChangeChair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ChangeChair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 table_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_table_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PlayerVisualInfo pb_visual_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_visual_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ChangeChair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ChangeChair)
  return false;
#undef DO_
}

void SC_ChangeChair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ChangeChair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 table_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->table_id(), output);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chair_id(), output);
  }

  // optional int32 result = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->result(), output);
  }

  // repeated .PlayerVisualInfo pb_visual_info = 4;
  for (unsigned int i = 0, n = this->pb_visual_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->pb_visual_info(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ChangeChair)
}

::google::protobuf::uint8* SC_ChangeChair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ChangeChair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 table_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->table_id(), target);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chair_id(), target);
  }

  // optional int32 result = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->result(), target);
  }

  // repeated .PlayerVisualInfo pb_visual_info = 4;
  for (unsigned int i = 0, n = this->pb_visual_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->pb_visual_info(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ChangeChair)
  return target;
}

size_t SC_ChangeChair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ChangeChair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .PlayerVisualInfo pb_visual_info = 4;
  {
    unsigned int count = this->pb_visual_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_visual_info(i));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 table_id = 1;
    if (has_table_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->table_id());
    }

    // optional int32 chair_id = 2;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ChangeChair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ChangeChair)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ChangeChair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ChangeChair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ChangeChair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ChangeChair)
    MergeFrom(*source);
  }
}

void SC_ChangeChair::MergeFrom(const SC_ChangeChair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ChangeChair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_visual_info_.MergeFrom(from.pb_visual_info_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      table_id_ = from.table_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ChangeChair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ChangeChair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ChangeChair::CopyFrom(const SC_ChangeChair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ChangeChair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ChangeChair::IsInitialized() const {
  return true;
}

void SC_ChangeChair::Swap(SC_ChangeChair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ChangeChair::InternalSwap(SC_ChangeChair* other) {
  pb_visual_info_.InternalSwap(&other->pb_visual_info_);
  std::swap(table_id_, other->table_id_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ChangeChair::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ChangeChair

// optional int32 table_id = 1;
bool SC_ChangeChair::has_table_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ChangeChair::set_has_table_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ChangeChair::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ChangeChair::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
::google::protobuf::int32 SC_ChangeChair::table_id() const {
  // @@protoc_insertion_point(field_get:SC_ChangeChair.table_id)
  return table_id_;
}
void SC_ChangeChair::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeChair.table_id)
}

// optional int32 chair_id = 2;
bool SC_ChangeChair::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ChangeChair::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ChangeChair::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ChangeChair::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_ChangeChair::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ChangeChair.chair_id)
  return chair_id_;
}
void SC_ChangeChair::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeChair.chair_id)
}

// optional int32 result = 3;
bool SC_ChangeChair::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ChangeChair::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ChangeChair::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ChangeChair::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_ChangeChair::result() const {
  // @@protoc_insertion_point(field_get:SC_ChangeChair.result)
  return result_;
}
void SC_ChangeChair::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeChair.result)
}

// repeated .PlayerVisualInfo pb_visual_info = 4;
int SC_ChangeChair::pb_visual_info_size() const {
  return pb_visual_info_.size();
}
void SC_ChangeChair::clear_pb_visual_info() {
  pb_visual_info_.Clear();
}
const ::PlayerVisualInfo& SC_ChangeChair::pb_visual_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_ChangeChair.pb_visual_info)
  return pb_visual_info_.Get(index);
}
::PlayerVisualInfo* SC_ChangeChair::mutable_pb_visual_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_ChangeChair.pb_visual_info)
  return pb_visual_info_.Mutable(index);
}
::PlayerVisualInfo* SC_ChangeChair::add_pb_visual_info() {
  // @@protoc_insertion_point(field_add:SC_ChangeChair.pb_visual_info)
  return pb_visual_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >*
SC_ChangeChair::mutable_pb_visual_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_ChangeChair.pb_visual_info)
  return &pb_visual_info_;
}
const ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >&
SC_ChangeChair::pb_visual_info() const {
  // @@protoc_insertion_point(field_list:SC_ChangeChair.pb_visual_info)
  return pb_visual_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ChangeTable::CS_ChangeTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ChangeTable)
}
CS_ChangeTable::CS_ChangeTable(const CS_ChangeTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_ChangeTable)
}

void CS_ChangeTable::SharedCtor() {
  _cached_size_ = 0;
}

CS_ChangeTable::~CS_ChangeTable() {
  // @@protoc_insertion_point(destructor:CS_ChangeTable)
  SharedDtor();
}

void CS_ChangeTable::SharedDtor() {
}

void CS_ChangeTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ChangeTable::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ChangeTable& CS_ChangeTable::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ChangeTable* CS_ChangeTable::New(::google::protobuf::Arena* arena) const {
  CS_ChangeTable* n = new CS_ChangeTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ChangeTable::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ChangeTable)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ChangeTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ChangeTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ChangeTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ChangeTable)
  return false;
#undef DO_
}

void CS_ChangeTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ChangeTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ChangeTable)
}

::google::protobuf::uint8* CS_ChangeTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ChangeTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ChangeTable)
  return target;
}

size_t CS_ChangeTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ChangeTable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ChangeTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ChangeTable)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ChangeTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ChangeTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ChangeTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ChangeTable)
    MergeFrom(*source);
  }
}

void CS_ChangeTable::MergeFrom(const CS_ChangeTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ChangeTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_ChangeTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ChangeTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ChangeTable::CopyFrom(const CS_ChangeTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ChangeTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ChangeTable::IsInitialized() const {
  return true;
}

void CS_ChangeTable::Swap(CS_ChangeTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ChangeTable::InternalSwap(CS_ChangeTable* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ChangeTable::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ChangeTable

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_Ready::CS_Ready()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_Ready)
}
CS_Ready::CS_Ready(const CS_Ready& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_Ready)
}

void CS_Ready::SharedCtor() {
  _cached_size_ = 0;
}

CS_Ready::~CS_Ready() {
  // @@protoc_insertion_point(destructor:CS_Ready)
  SharedDtor();
}

void CS_Ready::SharedDtor() {
}

void CS_Ready::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_Ready::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_Ready& CS_Ready::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_Ready* CS_Ready::New(::google::protobuf::Arena* arena) const {
  CS_Ready* n = new CS_Ready;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_Ready::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_Ready)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_Ready::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_Ready)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_Ready)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_Ready)
  return false;
#undef DO_
}

void CS_Ready::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_Ready)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_Ready)
}

::google::protobuf::uint8* CS_Ready::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_Ready)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_Ready)
  return target;
}

size_t CS_Ready::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_Ready)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_Ready::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_Ready)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_Ready* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_Ready>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_Ready)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_Ready)
    MergeFrom(*source);
  }
}

void CS_Ready::MergeFrom(const CS_Ready& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_Ready)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_Ready::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_Ready)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_Ready::CopyFrom(const CS_Ready& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_Ready)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_Ready::IsInitialized() const {
  return true;
}

void CS_Ready::Swap(CS_Ready* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_Ready::InternalSwap(CS_Ready* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_Ready::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_Ready

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_Ready::kReadyChairIdFieldNumber;
const int SC_Ready::kIsReadyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_Ready::SC_Ready()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_Ready)
}
SC_Ready::SC_Ready(const SC_Ready& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ready_chair_id_, &from.ready_chair_id_,
    reinterpret_cast<char*>(&is_ready_) -
    reinterpret_cast<char*>(&ready_chair_id_) + sizeof(is_ready_));
  // @@protoc_insertion_point(copy_constructor:SC_Ready)
}

void SC_Ready::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&ready_chair_id_, 0, reinterpret_cast<char*>(&is_ready_) -
    reinterpret_cast<char*>(&ready_chair_id_) + sizeof(is_ready_));
}

SC_Ready::~SC_Ready() {
  // @@protoc_insertion_point(destructor:SC_Ready)
  SharedDtor();
}

void SC_Ready::SharedDtor() {
}

void SC_Ready::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_Ready::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_Ready& SC_Ready::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_Ready* SC_Ready::New(::google::protobuf::Arena* arena) const {
  SC_Ready* n = new SC_Ready;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_Ready::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_Ready)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&ready_chair_id_, 0, reinterpret_cast<char*>(&is_ready_) -
      reinterpret_cast<char*>(&ready_chair_id_) + sizeof(is_ready_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_Ready::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_Ready)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ready_chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_ready_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ready_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_ready = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_is_ready();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ready_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_Ready)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_Ready)
  return false;
#undef DO_
}

void SC_Ready::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_Ready)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ready_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ready_chair_id(), output);
  }

  // optional bool is_ready = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_ready(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_Ready)
}

::google::protobuf::uint8* SC_Ready::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_Ready)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ready_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ready_chair_id(), target);
  }

  // optional bool is_ready = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_ready(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_Ready)
  return target;
}

size_t SC_Ready::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_Ready)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 ready_chair_id = 1;
    if (has_ready_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ready_chair_id());
    }

    // optional bool is_ready = 2;
    if (has_is_ready()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_Ready::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_Ready)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_Ready* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_Ready>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_Ready)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_Ready)
    MergeFrom(*source);
  }
}

void SC_Ready::MergeFrom(const SC_Ready& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_Ready)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ready_chair_id_ = from.ready_chair_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_ready_ = from.is_ready_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_Ready::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_Ready)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_Ready::CopyFrom(const SC_Ready& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_Ready)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_Ready::IsInitialized() const {
  return true;
}

void SC_Ready::Swap(SC_Ready* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_Ready::InternalSwap(SC_Ready* other) {
  std::swap(ready_chair_id_, other->ready_chair_id_);
  std::swap(is_ready_, other->is_ready_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_Ready::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_Ready

// optional int32 ready_chair_id = 1;
bool SC_Ready::has_ready_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_Ready::set_has_ready_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_Ready::clear_has_ready_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_Ready::clear_ready_chair_id() {
  ready_chair_id_ = 0;
  clear_has_ready_chair_id();
}
::google::protobuf::int32 SC_Ready::ready_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_Ready.ready_chair_id)
  return ready_chair_id_;
}
void SC_Ready::set_ready_chair_id(::google::protobuf::int32 value) {
  set_has_ready_chair_id();
  ready_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_Ready.ready_chair_id)
}

// optional bool is_ready = 2;
bool SC_Ready::has_is_ready() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_Ready::set_has_is_ready() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_Ready::clear_has_is_ready() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_Ready::clear_is_ready() {
  is_ready_ = false;
  clear_has_is_ready();
}
bool SC_Ready::is_ready() const {
  // @@protoc_insertion_point(field_get:SC_Ready.is_ready)
  return is_ready_;
}
void SC_Ready::set_is_ready(bool value) {
  set_has_is_ready();
  is_ready_ = value;
  // @@protoc_insertion_point(field_set:SC_Ready.is_ready)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_Exit::CS_Exit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_Exit)
}
CS_Exit::CS_Exit(const CS_Exit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_Exit)
}

void CS_Exit::SharedCtor() {
  _cached_size_ = 0;
}

CS_Exit::~CS_Exit() {
  // @@protoc_insertion_point(destructor:CS_Exit)
  SharedDtor();
}

void CS_Exit::SharedDtor() {
}

void CS_Exit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_Exit::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_Exit& CS_Exit::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_Exit* CS_Exit::New(::google::protobuf::Arena* arena) const {
  CS_Exit* n = new CS_Exit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_Exit::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_Exit)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_Exit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_Exit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_Exit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_Exit)
  return false;
#undef DO_
}

void CS_Exit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_Exit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_Exit)
}

::google::protobuf::uint8* CS_Exit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_Exit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_Exit)
  return target;
}

size_t CS_Exit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_Exit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_Exit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_Exit)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_Exit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_Exit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_Exit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_Exit)
    MergeFrom(*source);
  }
}

void CS_Exit::MergeFrom(const CS_Exit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_Exit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_Exit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_Exit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_Exit::CopyFrom(const CS_Exit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_Exit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_Exit::IsInitialized() const {
  return true;
}

void CS_Exit::Swap(CS_Exit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_Exit::InternalSwap(CS_Exit* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_Exit::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_Exit

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ReadyFailed::kResultFieldNumber;
const int SC_ReadyFailed::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ReadyFailed::SC_ReadyFailed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ReadyFailed)
}
SC_ReadyFailed::SC_ReadyFailed(const SC_ReadyFailed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&money_, &from.money_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&money_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_ReadyFailed)
}

void SC_ReadyFailed::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&money_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&money_) + sizeof(result_));
}

SC_ReadyFailed::~SC_ReadyFailed() {
  // @@protoc_insertion_point(destructor:SC_ReadyFailed)
  SharedDtor();
}

void SC_ReadyFailed::SharedDtor() {
}

void SC_ReadyFailed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ReadyFailed::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ReadyFailed& SC_ReadyFailed::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ReadyFailed* SC_ReadyFailed::New(::google::protobuf::Arena* arena) const {
  SC_ReadyFailed* n = new SC_ReadyFailed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ReadyFailed::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ReadyFailed)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&money_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&money_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ReadyFailed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ReadyFailed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ReadyFailed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ReadyFailed)
  return false;
#undef DO_
}

void SC_ReadyFailed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ReadyFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ReadyFailed)
}

::google::protobuf::uint8* SC_ReadyFailed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ReadyFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int64 money = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ReadyFailed)
  return target;
}

size_t SC_ReadyFailed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ReadyFailed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ReadyFailed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ReadyFailed)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ReadyFailed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ReadyFailed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ReadyFailed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ReadyFailed)
    MergeFrom(*source);
  }
}

void SC_ReadyFailed::MergeFrom(const SC_ReadyFailed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ReadyFailed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ReadyFailed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ReadyFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ReadyFailed::CopyFrom(const SC_ReadyFailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ReadyFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ReadyFailed::IsInitialized() const {
  return true;
}

void SC_ReadyFailed::Swap(SC_ReadyFailed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ReadyFailed::InternalSwap(SC_ReadyFailed* other) {
  std::swap(money_, other->money_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ReadyFailed::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ReadyFailed

// optional int32 result = 1;
bool SC_ReadyFailed::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ReadyFailed::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ReadyFailed::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ReadyFailed::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_ReadyFailed::result() const {
  // @@protoc_insertion_point(field_get:SC_ReadyFailed.result)
  return result_;
}
void SC_ReadyFailed::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ReadyFailed.result)
}

// optional int64 money = 2;
bool SC_ReadyFailed::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ReadyFailed::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ReadyFailed::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ReadyFailed::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 SC_ReadyFailed::money() const {
  // @@protoc_insertion_point(field_get:SC_ReadyFailed.money)
  return money_;
}
void SC_ReadyFailed::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_ReadyFailed.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_Gamefinish::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_Gamefinish::SC_Gamefinish()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_Gamefinish)
}
SC_Gamefinish::SC_Gamefinish(const SC_Gamefinish& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  money_ = from.money_;
  // @@protoc_insertion_point(copy_constructor:SC_Gamefinish)
}

void SC_Gamefinish::SharedCtor() {
  _cached_size_ = 0;
  money_ = GOOGLE_LONGLONG(0);
}

SC_Gamefinish::~SC_Gamefinish() {
  // @@protoc_insertion_point(destructor:SC_Gamefinish)
  SharedDtor();
}

void SC_Gamefinish::SharedDtor() {
}

void SC_Gamefinish::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_Gamefinish::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_Gamefinish& SC_Gamefinish::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_Gamefinish* SC_Gamefinish::New(::google::protobuf::Arena* arena) const {
  SC_Gamefinish* n = new SC_Gamefinish;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_Gamefinish::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_Gamefinish)
  money_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_Gamefinish::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_Gamefinish)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 money = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_Gamefinish)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_Gamefinish)
  return false;
#undef DO_
}

void SC_Gamefinish::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_Gamefinish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 money = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_Gamefinish)
}

::google::protobuf::uint8* SC_Gamefinish::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_Gamefinish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 money = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_Gamefinish)
  return target;
}

size_t SC_Gamefinish::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_Gamefinish)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int64 money = 1;
  if (has_money()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->money());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_Gamefinish::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_Gamefinish)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_Gamefinish* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_Gamefinish>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_Gamefinish)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_Gamefinish)
    MergeFrom(*source);
  }
}

void SC_Gamefinish::MergeFrom(const SC_Gamefinish& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_Gamefinish)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_money()) {
    set_money(from.money());
  }
}

void SC_Gamefinish::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_Gamefinish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_Gamefinish::CopyFrom(const SC_Gamefinish& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_Gamefinish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_Gamefinish::IsInitialized() const {
  return true;
}

void SC_Gamefinish::Swap(SC_Gamefinish* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_Gamefinish::InternalSwap(SC_Gamefinish* other) {
  std::swap(money_, other->money_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_Gamefinish::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_Gamefinish

// optional int64 money = 1;
bool SC_Gamefinish::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_Gamefinish::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_Gamefinish::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_Gamefinish::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 SC_Gamefinish::money() const {
  // @@protoc_insertion_point(field_get:SC_Gamefinish.money)
  return money_;
}
void SC_Gamefinish::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_Gamefinish.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_PlayerReconnection::kRoomIdFieldNumber;
const int SC_PlayerReconnection::kTableIdFieldNumber;
const int SC_PlayerReconnection::kChairIdFieldNumber;
const int SC_PlayerReconnection::kResultFieldNumber;
const int SC_PlayerReconnection::kPbVisualInfoFieldNumber;
const int SC_PlayerReconnection::kGameIdFieldNumber;
const int SC_PlayerReconnection::kFirstGameTypeFieldNumber;
const int SC_PlayerReconnection::kSecondGameTypeFieldNumber;
const int SC_PlayerReconnection::kIpAreaFieldNumber;
const int SC_PlayerReconnection::kIsReadyFieldNumber;
const int SC_PlayerReconnection::kPrivateRoomFieldNumber;
const int SC_PlayerReconnection::kPrivateRoomScoreTypeFieldNumber;
const int SC_PlayerReconnection::kPrivateRoomCellMoneyFieldNumber;
const int SC_PlayerReconnection::kPrivateRoomIdFieldNumber;
const int SC_PlayerReconnection::kPrivateRoomHasStartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_PlayerReconnection::SC_PlayerReconnection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_PlayerReconnection)
}
SC_PlayerReconnection::SC_PlayerReconnection(const SC_PlayerReconnection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_visual_info_(from.pb_visual_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip_area()) {
    ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
  }
  ::memcpy(&room_id_, &from.room_id_,
    reinterpret_cast<char*>(&private_room_has_start_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(private_room_has_start_));
  // @@protoc_insertion_point(copy_constructor:SC_PlayerReconnection)
}

void SC_PlayerReconnection::SharedCtor() {
  _cached_size_ = 0;
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&room_id_, 0, reinterpret_cast<char*>(&private_room_has_start_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(private_room_has_start_));
}

SC_PlayerReconnection::~SC_PlayerReconnection() {
  // @@protoc_insertion_point(destructor:SC_PlayerReconnection)
  SharedDtor();
}

void SC_PlayerReconnection::SharedDtor() {
  ip_area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_PlayerReconnection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_PlayerReconnection::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_PlayerReconnection& SC_PlayerReconnection::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_PlayerReconnection* SC_PlayerReconnection::New(::google::protobuf::Arena* arena) const {
  SC_PlayerReconnection* n = new SC_PlayerReconnection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_PlayerReconnection::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_PlayerReconnection)
  pb_visual_info_.Clear();
  if (has_ip_area()) {
    GOOGLE_DCHECK(!ip_area_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*ip_area_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 254u) {
    ::memset(&room_id_, 0, reinterpret_cast<char*>(&second_game_type_) -
      reinterpret_cast<char*>(&room_id_) + sizeof(second_game_type_));
  }
  if (_has_bits_[8 / 32] & 16128u) {
    ::memset(&is_ready_, 0, reinterpret_cast<char*>(&private_room_has_start_) -
      reinterpret_cast<char*>(&is_ready_) + sizeof(private_room_has_start_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_PlayerReconnection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_PlayerReconnection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 table_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_table_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PlayerVisualInfo pb_visual_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_visual_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 game_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 first_game_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_first_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 second_game_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_second_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip_area = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_area()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip_area().data(), this->ip_area().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_PlayerReconnection.ip_area");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_ready = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_is_ready();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ready_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool private_room = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_private_room();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &private_room_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 private_room_score_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_private_room_score_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &private_room_score_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 private_room_cell_money = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_private_room_cell_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &private_room_cell_money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 private_room_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_private_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &private_room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 private_room_has_start = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          set_has_private_room_has_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &private_room_has_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_PlayerReconnection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_PlayerReconnection)
  return false;
#undef DO_
}

void SC_PlayerReconnection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_PlayerReconnection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->room_id(), output);
  }

  // optional int32 table_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->table_id(), output);
  }

  // optional int32 chair_id = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->chair_id(), output);
  }

  // optional int32 result = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->result(), output);
  }

  // repeated .PlayerVisualInfo pb_visual_info = 5;
  for (unsigned int i = 0, n = this->pb_visual_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->pb_visual_info(i), output);
  }

  // optional int32 game_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->game_id(), output);
  }

  // optional int32 first_game_type = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->first_game_type(), output);
  }

  // optional int32 second_game_type = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->second_game_type(), output);
  }

  // optional string ip_area = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_PlayerReconnection.ip_area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->ip_area(), output);
  }

  // optional bool is_ready = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_ready(), output);
  }

  // optional bool private_room = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->private_room(), output);
  }

  // optional int32 private_room_score_type = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->private_room_score_type(), output);
  }

  // optional int32 private_room_cell_money = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->private_room_cell_money(), output);
  }

  // optional int32 private_room_id = 14;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->private_room_id(), output);
  }

  // optional int32 private_room_has_start = 15;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->private_room_has_start(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_PlayerReconnection)
}

::google::protobuf::uint8* SC_PlayerReconnection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_PlayerReconnection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->room_id(), target);
  }

  // optional int32 table_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->table_id(), target);
  }

  // optional int32 chair_id = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->chair_id(), target);
  }

  // optional int32 result = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->result(), target);
  }

  // repeated .PlayerVisualInfo pb_visual_info = 5;
  for (unsigned int i = 0, n = this->pb_visual_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->pb_visual_info(i), deterministic, target);
  }

  // optional int32 game_id = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->game_id(), target);
  }

  // optional int32 first_game_type = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->first_game_type(), target);
  }

  // optional int32 second_game_type = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->second_game_type(), target);
  }

  // optional string ip_area = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_PlayerReconnection.ip_area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->ip_area(), target);
  }

  // optional bool is_ready = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_ready(), target);
  }

  // optional bool private_room = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->private_room(), target);
  }

  // optional int32 private_room_score_type = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->private_room_score_type(), target);
  }

  // optional int32 private_room_cell_money = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->private_room_cell_money(), target);
  }

  // optional int32 private_room_id = 14;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->private_room_id(), target);
  }

  // optional int32 private_room_has_start = 15;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->private_room_has_start(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_PlayerReconnection)
  return target;
}

size_t SC_PlayerReconnection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_PlayerReconnection)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .PlayerVisualInfo pb_visual_info = 5;
  {
    unsigned int count = this->pb_visual_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_visual_info(i));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string ip_area = 9;
    if (has_ip_area()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip_area());
    }

    // optional int32 room_id = 1;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }

    // optional int32 table_id = 2;
    if (has_table_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->table_id());
    }

    // optional int32 chair_id = 3;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 result = 4;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 game_id = 6;
    if (has_game_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_id());
    }

    // optional int32 first_game_type = 7;
    if (has_first_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_game_type());
    }

    // optional int32 second_game_type = 8;
    if (has_second_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_game_type());
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional bool is_ready = 10;
    if (has_is_ready()) {
      total_size += 1 + 1;
    }

    // optional bool private_room = 11;
    if (has_private_room()) {
      total_size += 1 + 1;
    }

    // optional int32 private_room_score_type = 12;
    if (has_private_room_score_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->private_room_score_type());
    }

    // optional int32 private_room_cell_money = 13;
    if (has_private_room_cell_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->private_room_cell_money());
    }

    // optional int32 private_room_id = 14;
    if (has_private_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->private_room_id());
    }

    // optional int32 private_room_has_start = 15;
    if (has_private_room_has_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->private_room_has_start());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_PlayerReconnection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_PlayerReconnection)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_PlayerReconnection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_PlayerReconnection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_PlayerReconnection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_PlayerReconnection)
    MergeFrom(*source);
  }
}

void SC_PlayerReconnection::MergeFrom(const SC_PlayerReconnection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_PlayerReconnection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_visual_info_.MergeFrom(from.pb_visual_info_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ip_area();
      ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
    }
    if (cached_has_bits & 0x00000002u) {
      room_id_ = from.room_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      table_id_ = from.table_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000020u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      first_game_type_ = from.first_game_type_;
    }
    if (cached_has_bits & 0x00000080u) {
      second_game_type_ = from.second_game_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      is_ready_ = from.is_ready_;
    }
    if (cached_has_bits & 0x00000200u) {
      private_room_ = from.private_room_;
    }
    if (cached_has_bits & 0x00000400u) {
      private_room_score_type_ = from.private_room_score_type_;
    }
    if (cached_has_bits & 0x00000800u) {
      private_room_cell_money_ = from.private_room_cell_money_;
    }
    if (cached_has_bits & 0x00001000u) {
      private_room_id_ = from.private_room_id_;
    }
    if (cached_has_bits & 0x00002000u) {
      private_room_has_start_ = from.private_room_has_start_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_PlayerReconnection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_PlayerReconnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_PlayerReconnection::CopyFrom(const SC_PlayerReconnection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_PlayerReconnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_PlayerReconnection::IsInitialized() const {
  return true;
}

void SC_PlayerReconnection::Swap(SC_PlayerReconnection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_PlayerReconnection::InternalSwap(SC_PlayerReconnection* other) {
  pb_visual_info_.InternalSwap(&other->pb_visual_info_);
  ip_area_.Swap(&other->ip_area_);
  std::swap(room_id_, other->room_id_);
  std::swap(table_id_, other->table_id_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(result_, other->result_);
  std::swap(game_id_, other->game_id_);
  std::swap(first_game_type_, other->first_game_type_);
  std::swap(second_game_type_, other->second_game_type_);
  std::swap(is_ready_, other->is_ready_);
  std::swap(private_room_, other->private_room_);
  std::swap(private_room_score_type_, other->private_room_score_type_);
  std::swap(private_room_cell_money_, other->private_room_cell_money_);
  std::swap(private_room_id_, other->private_room_id_);
  std::swap(private_room_has_start_, other->private_room_has_start_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_PlayerReconnection::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_PlayerReconnection

// optional int32 room_id = 1;
bool SC_PlayerReconnection::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_PlayerReconnection::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_PlayerReconnection::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_PlayerReconnection::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
::google::protobuf::int32 SC_PlayerReconnection::room_id() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.room_id)
  return room_id_;
}
void SC_PlayerReconnection::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.room_id)
}

// optional int32 table_id = 2;
bool SC_PlayerReconnection::has_table_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_PlayerReconnection::set_has_table_id() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_PlayerReconnection::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_PlayerReconnection::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
::google::protobuf::int32 SC_PlayerReconnection::table_id() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.table_id)
  return table_id_;
}
void SC_PlayerReconnection::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.table_id)
}

// optional int32 chair_id = 3;
bool SC_PlayerReconnection::has_chair_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_PlayerReconnection::set_has_chair_id() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_PlayerReconnection::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_PlayerReconnection::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_PlayerReconnection::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.chair_id)
  return chair_id_;
}
void SC_PlayerReconnection::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.chair_id)
}

// optional int32 result = 4;
bool SC_PlayerReconnection::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SC_PlayerReconnection::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
void SC_PlayerReconnection::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
void SC_PlayerReconnection::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_PlayerReconnection::result() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.result)
  return result_;
}
void SC_PlayerReconnection::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.result)
}

// repeated .PlayerVisualInfo pb_visual_info = 5;
int SC_PlayerReconnection::pb_visual_info_size() const {
  return pb_visual_info_.size();
}
void SC_PlayerReconnection::clear_pb_visual_info() {
  pb_visual_info_.Clear();
}
const ::PlayerVisualInfo& SC_PlayerReconnection::pb_visual_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.pb_visual_info)
  return pb_visual_info_.Get(index);
}
::PlayerVisualInfo* SC_PlayerReconnection::mutable_pb_visual_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_PlayerReconnection.pb_visual_info)
  return pb_visual_info_.Mutable(index);
}
::PlayerVisualInfo* SC_PlayerReconnection::add_pb_visual_info() {
  // @@protoc_insertion_point(field_add:SC_PlayerReconnection.pb_visual_info)
  return pb_visual_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >*
SC_PlayerReconnection::mutable_pb_visual_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_PlayerReconnection.pb_visual_info)
  return &pb_visual_info_;
}
const ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >&
SC_PlayerReconnection::pb_visual_info() const {
  // @@protoc_insertion_point(field_list:SC_PlayerReconnection.pb_visual_info)
  return pb_visual_info_;
}

// optional int32 game_id = 6;
bool SC_PlayerReconnection::has_game_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SC_PlayerReconnection::set_has_game_id() {
  _has_bits_[0] |= 0x00000020u;
}
void SC_PlayerReconnection::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void SC_PlayerReconnection::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
::google::protobuf::int32 SC_PlayerReconnection::game_id() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.game_id)
  return game_id_;
}
void SC_PlayerReconnection::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.game_id)
}

// optional int32 first_game_type = 7;
bool SC_PlayerReconnection::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SC_PlayerReconnection::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000040u;
}
void SC_PlayerReconnection::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void SC_PlayerReconnection::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
::google::protobuf::int32 SC_PlayerReconnection::first_game_type() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.first_game_type)
  return first_game_type_;
}
void SC_PlayerReconnection::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.first_game_type)
}

// optional int32 second_game_type = 8;
bool SC_PlayerReconnection::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SC_PlayerReconnection::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000080u;
}
void SC_PlayerReconnection::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000080u;
}
void SC_PlayerReconnection::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
::google::protobuf::int32 SC_PlayerReconnection::second_game_type() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.second_game_type)
  return second_game_type_;
}
void SC_PlayerReconnection::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.second_game_type)
}

// optional string ip_area = 9;
bool SC_PlayerReconnection::has_ip_area() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_PlayerReconnection::set_has_ip_area() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_PlayerReconnection::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_PlayerReconnection::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
const ::std::string& SC_PlayerReconnection::ip_area() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.ip_area)
  return ip_area_.GetNoArena();
}
void SC_PlayerReconnection::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.ip_area)
}
#if LANG_CXX11
void SC_PlayerReconnection::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_PlayerReconnection.ip_area)
}
#endif
void SC_PlayerReconnection::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_PlayerReconnection.ip_area)
}
void SC_PlayerReconnection::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_PlayerReconnection.ip_area)
}
::std::string* SC_PlayerReconnection::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:SC_PlayerReconnection.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_PlayerReconnection::release_ip_area() {
  // @@protoc_insertion_point(field_release:SC_PlayerReconnection.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_PlayerReconnection::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:SC_PlayerReconnection.ip_area)
}

// optional bool is_ready = 10;
bool SC_PlayerReconnection::has_is_ready() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void SC_PlayerReconnection::set_has_is_ready() {
  _has_bits_[0] |= 0x00000100u;
}
void SC_PlayerReconnection::clear_has_is_ready() {
  _has_bits_[0] &= ~0x00000100u;
}
void SC_PlayerReconnection::clear_is_ready() {
  is_ready_ = false;
  clear_has_is_ready();
}
bool SC_PlayerReconnection::is_ready() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.is_ready)
  return is_ready_;
}
void SC_PlayerReconnection::set_is_ready(bool value) {
  set_has_is_ready();
  is_ready_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.is_ready)
}

// optional bool private_room = 11;
bool SC_PlayerReconnection::has_private_room() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void SC_PlayerReconnection::set_has_private_room() {
  _has_bits_[0] |= 0x00000200u;
}
void SC_PlayerReconnection::clear_has_private_room() {
  _has_bits_[0] &= ~0x00000200u;
}
void SC_PlayerReconnection::clear_private_room() {
  private_room_ = false;
  clear_has_private_room();
}
bool SC_PlayerReconnection::private_room() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.private_room)
  return private_room_;
}
void SC_PlayerReconnection::set_private_room(bool value) {
  set_has_private_room();
  private_room_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.private_room)
}

// optional int32 private_room_score_type = 12;
bool SC_PlayerReconnection::has_private_room_score_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void SC_PlayerReconnection::set_has_private_room_score_type() {
  _has_bits_[0] |= 0x00000400u;
}
void SC_PlayerReconnection::clear_has_private_room_score_type() {
  _has_bits_[0] &= ~0x00000400u;
}
void SC_PlayerReconnection::clear_private_room_score_type() {
  private_room_score_type_ = 0;
  clear_has_private_room_score_type();
}
::google::protobuf::int32 SC_PlayerReconnection::private_room_score_type() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.private_room_score_type)
  return private_room_score_type_;
}
void SC_PlayerReconnection::set_private_room_score_type(::google::protobuf::int32 value) {
  set_has_private_room_score_type();
  private_room_score_type_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.private_room_score_type)
}

// optional int32 private_room_cell_money = 13;
bool SC_PlayerReconnection::has_private_room_cell_money() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void SC_PlayerReconnection::set_has_private_room_cell_money() {
  _has_bits_[0] |= 0x00000800u;
}
void SC_PlayerReconnection::clear_has_private_room_cell_money() {
  _has_bits_[0] &= ~0x00000800u;
}
void SC_PlayerReconnection::clear_private_room_cell_money() {
  private_room_cell_money_ = 0;
  clear_has_private_room_cell_money();
}
::google::protobuf::int32 SC_PlayerReconnection::private_room_cell_money() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.private_room_cell_money)
  return private_room_cell_money_;
}
void SC_PlayerReconnection::set_private_room_cell_money(::google::protobuf::int32 value) {
  set_has_private_room_cell_money();
  private_room_cell_money_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.private_room_cell_money)
}

// optional int32 private_room_id = 14;
bool SC_PlayerReconnection::has_private_room_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void SC_PlayerReconnection::set_has_private_room_id() {
  _has_bits_[0] |= 0x00001000u;
}
void SC_PlayerReconnection::clear_has_private_room_id() {
  _has_bits_[0] &= ~0x00001000u;
}
void SC_PlayerReconnection::clear_private_room_id() {
  private_room_id_ = 0;
  clear_has_private_room_id();
}
::google::protobuf::int32 SC_PlayerReconnection::private_room_id() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.private_room_id)
  return private_room_id_;
}
void SC_PlayerReconnection::set_private_room_id(::google::protobuf::int32 value) {
  set_has_private_room_id();
  private_room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.private_room_id)
}

// optional int32 private_room_has_start = 15;
bool SC_PlayerReconnection::has_private_room_has_start() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void SC_PlayerReconnection::set_has_private_room_has_start() {
  _has_bits_[0] |= 0x00002000u;
}
void SC_PlayerReconnection::clear_has_private_room_has_start() {
  _has_bits_[0] &= ~0x00002000u;
}
void SC_PlayerReconnection::clear_private_room_has_start() {
  private_room_has_start_ = 0;
  clear_has_private_room_has_start();
}
::google::protobuf::int32 SC_PlayerReconnection::private_room_has_start() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.private_room_has_start)
  return private_room_has_start_;
}
void SC_PlayerReconnection::set_private_room_has_start(::google::protobuf::int32 value) {
  set_has_private_room_has_start();
  private_room_has_start_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.private_room_has_start)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ChangeTable::kRoomIdFieldNumber;
const int SC_ChangeTable::kTableIdFieldNumber;
const int SC_ChangeTable::kChairIdFieldNumber;
const int SC_ChangeTable::kResultFieldNumber;
const int SC_ChangeTable::kPbVisualInfoFieldNumber;
const int SC_ChangeTable::kGameIdFieldNumber;
const int SC_ChangeTable::kFirstGameTypeFieldNumber;
const int SC_ChangeTable::kSecondGameTypeFieldNumber;
const int SC_ChangeTable::kIpAreaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ChangeTable::SC_ChangeTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ChangeTable)
}
SC_ChangeTable::SC_ChangeTable(const SC_ChangeTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_visual_info_(from.pb_visual_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip_area()) {
    ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
  }
  ::memcpy(&room_id_, &from.room_id_,
    reinterpret_cast<char*>(&second_game_type_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(second_game_type_));
  // @@protoc_insertion_point(copy_constructor:SC_ChangeTable)
}

void SC_ChangeTable::SharedCtor() {
  _cached_size_ = 0;
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&room_id_, 0, reinterpret_cast<char*>(&second_game_type_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(second_game_type_));
}

SC_ChangeTable::~SC_ChangeTable() {
  // @@protoc_insertion_point(destructor:SC_ChangeTable)
  SharedDtor();
}

void SC_ChangeTable::SharedDtor() {
  ip_area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_ChangeTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ChangeTable::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ChangeTable& SC_ChangeTable::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ChangeTable* SC_ChangeTable::New(::google::protobuf::Arena* arena) const {
  SC_ChangeTable* n = new SC_ChangeTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ChangeTable::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ChangeTable)
  pb_visual_info_.Clear();
  if (has_ip_area()) {
    GOOGLE_DCHECK(!ip_area_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*ip_area_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 254u) {
    ::memset(&room_id_, 0, reinterpret_cast<char*>(&second_game_type_) -
      reinterpret_cast<char*>(&room_id_) + sizeof(second_game_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ChangeTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ChangeTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 table_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_table_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PlayerVisualInfo pb_visual_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_visual_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 game_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 first_game_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_first_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 second_game_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_second_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip_area = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_area()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip_area().data(), this->ip_area().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ChangeTable.ip_area");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ChangeTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ChangeTable)
  return false;
#undef DO_
}

void SC_ChangeTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ChangeTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->room_id(), output);
  }

  // optional int32 table_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->table_id(), output);
  }

  // optional int32 chair_id = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->chair_id(), output);
  }

  // optional int32 result = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->result(), output);
  }

  // repeated .PlayerVisualInfo pb_visual_info = 5;
  for (unsigned int i = 0, n = this->pb_visual_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->pb_visual_info(i), output);
  }

  // optional int32 game_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->game_id(), output);
  }

  // optional int32 first_game_type = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->first_game_type(), output);
  }

  // optional int32 second_game_type = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->second_game_type(), output);
  }

  // optional string ip_area = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChangeTable.ip_area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->ip_area(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ChangeTable)
}

::google::protobuf::uint8* SC_ChangeTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ChangeTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->room_id(), target);
  }

  // optional int32 table_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->table_id(), target);
  }

  // optional int32 chair_id = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->chair_id(), target);
  }

  // optional int32 result = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->result(), target);
  }

  // repeated .PlayerVisualInfo pb_visual_info = 5;
  for (unsigned int i = 0, n = this->pb_visual_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->pb_visual_info(i), deterministic, target);
  }

  // optional int32 game_id = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->game_id(), target);
  }

  // optional int32 first_game_type = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->first_game_type(), target);
  }

  // optional int32 second_game_type = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->second_game_type(), target);
  }

  // optional string ip_area = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ChangeTable.ip_area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->ip_area(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ChangeTable)
  return target;
}

size_t SC_ChangeTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ChangeTable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .PlayerVisualInfo pb_visual_info = 5;
  {
    unsigned int count = this->pb_visual_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_visual_info(i));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string ip_area = 9;
    if (has_ip_area()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip_area());
    }

    // optional int32 room_id = 1;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }

    // optional int32 table_id = 2;
    if (has_table_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->table_id());
    }

    // optional int32 chair_id = 3;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 result = 4;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 game_id = 6;
    if (has_game_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_id());
    }

    // optional int32 first_game_type = 7;
    if (has_first_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_game_type());
    }

    // optional int32 second_game_type = 8;
    if (has_second_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_game_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ChangeTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ChangeTable)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ChangeTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ChangeTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ChangeTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ChangeTable)
    MergeFrom(*source);
  }
}

void SC_ChangeTable::MergeFrom(const SC_ChangeTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ChangeTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_visual_info_.MergeFrom(from.pb_visual_info_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ip_area();
      ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
    }
    if (cached_has_bits & 0x00000002u) {
      room_id_ = from.room_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      table_id_ = from.table_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000020u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      first_game_type_ = from.first_game_type_;
    }
    if (cached_has_bits & 0x00000080u) {
      second_game_type_ = from.second_game_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ChangeTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ChangeTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ChangeTable::CopyFrom(const SC_ChangeTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ChangeTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ChangeTable::IsInitialized() const {
  return true;
}

void SC_ChangeTable::Swap(SC_ChangeTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ChangeTable::InternalSwap(SC_ChangeTable* other) {
  pb_visual_info_.InternalSwap(&other->pb_visual_info_);
  ip_area_.Swap(&other->ip_area_);
  std::swap(room_id_, other->room_id_);
  std::swap(table_id_, other->table_id_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(result_, other->result_);
  std::swap(game_id_, other->game_id_);
  std::swap(first_game_type_, other->first_game_type_);
  std::swap(second_game_type_, other->second_game_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ChangeTable::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ChangeTable

// optional int32 room_id = 1;
bool SC_ChangeTable::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ChangeTable::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ChangeTable::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ChangeTable::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
::google::protobuf::int32 SC_ChangeTable::room_id() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.room_id)
  return room_id_;
}
void SC_ChangeTable::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeTable.room_id)
}

// optional int32 table_id = 2;
bool SC_ChangeTable::has_table_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ChangeTable::set_has_table_id() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ChangeTable::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ChangeTable::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
::google::protobuf::int32 SC_ChangeTable::table_id() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.table_id)
  return table_id_;
}
void SC_ChangeTable::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeTable.table_id)
}

// optional int32 chair_id = 3;
bool SC_ChangeTable::has_chair_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_ChangeTable::set_has_chair_id() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_ChangeTable::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_ChangeTable::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_ChangeTable::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.chair_id)
  return chair_id_;
}
void SC_ChangeTable::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeTable.chair_id)
}

// optional int32 result = 4;
bool SC_ChangeTable::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SC_ChangeTable::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
void SC_ChangeTable::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
void SC_ChangeTable::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_ChangeTable::result() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.result)
  return result_;
}
void SC_ChangeTable::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeTable.result)
}

// repeated .PlayerVisualInfo pb_visual_info = 5;
int SC_ChangeTable::pb_visual_info_size() const {
  return pb_visual_info_.size();
}
void SC_ChangeTable::clear_pb_visual_info() {
  pb_visual_info_.Clear();
}
const ::PlayerVisualInfo& SC_ChangeTable::pb_visual_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.pb_visual_info)
  return pb_visual_info_.Get(index);
}
::PlayerVisualInfo* SC_ChangeTable::mutable_pb_visual_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_ChangeTable.pb_visual_info)
  return pb_visual_info_.Mutable(index);
}
::PlayerVisualInfo* SC_ChangeTable::add_pb_visual_info() {
  // @@protoc_insertion_point(field_add:SC_ChangeTable.pb_visual_info)
  return pb_visual_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >*
SC_ChangeTable::mutable_pb_visual_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_ChangeTable.pb_visual_info)
  return &pb_visual_info_;
}
const ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >&
SC_ChangeTable::pb_visual_info() const {
  // @@protoc_insertion_point(field_list:SC_ChangeTable.pb_visual_info)
  return pb_visual_info_;
}

// optional int32 game_id = 6;
bool SC_ChangeTable::has_game_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SC_ChangeTable::set_has_game_id() {
  _has_bits_[0] |= 0x00000020u;
}
void SC_ChangeTable::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void SC_ChangeTable::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
::google::protobuf::int32 SC_ChangeTable::game_id() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.game_id)
  return game_id_;
}
void SC_ChangeTable::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeTable.game_id)
}

// optional int32 first_game_type = 7;
bool SC_ChangeTable::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SC_ChangeTable::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000040u;
}
void SC_ChangeTable::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void SC_ChangeTable::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
::google::protobuf::int32 SC_ChangeTable::first_game_type() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.first_game_type)
  return first_game_type_;
}
void SC_ChangeTable::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeTable.first_game_type)
}

// optional int32 second_game_type = 8;
bool SC_ChangeTable::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SC_ChangeTable::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000080u;
}
void SC_ChangeTable::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000080u;
}
void SC_ChangeTable::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
::google::protobuf::int32 SC_ChangeTable::second_game_type() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.second_game_type)
  return second_game_type_;
}
void SC_ChangeTable::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeTable.second_game_type)
}

// optional string ip_area = 9;
bool SC_ChangeTable::has_ip_area() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ChangeTable::set_has_ip_area() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ChangeTable::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ChangeTable::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
const ::std::string& SC_ChangeTable::ip_area() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.ip_area)
  return ip_area_.GetNoArena();
}
void SC_ChangeTable::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChangeTable.ip_area)
}
#if LANG_CXX11
void SC_ChangeTable::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChangeTable.ip_area)
}
#endif
void SC_ChangeTable::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChangeTable.ip_area)
}
void SC_ChangeTable::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChangeTable.ip_area)
}
::std::string* SC_ChangeTable::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:SC_ChangeTable.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ChangeTable::release_ip_area() {
  // @@protoc_insertion_point(field_release:SC_ChangeTable.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ChangeTable::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:SC_ChangeTable.ip_area)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_HEARTBEAT::kSeverTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_HEARTBEAT::SC_HEARTBEAT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_HEARTBEAT)
}
SC_HEARTBEAT::SC_HEARTBEAT(const SC_HEARTBEAT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  severtime_ = from.severtime_;
  // @@protoc_insertion_point(copy_constructor:SC_HEARTBEAT)
}

void SC_HEARTBEAT::SharedCtor() {
  _cached_size_ = 0;
  severtime_ = 0;
}

SC_HEARTBEAT::~SC_HEARTBEAT() {
  // @@protoc_insertion_point(destructor:SC_HEARTBEAT)
  SharedDtor();
}

void SC_HEARTBEAT::SharedDtor() {
}

void SC_HEARTBEAT::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_HEARTBEAT::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_HEARTBEAT& SC_HEARTBEAT::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_HEARTBEAT* SC_HEARTBEAT::New(::google::protobuf::Arena* arena) const {
  SC_HEARTBEAT* n = new SC_HEARTBEAT;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_HEARTBEAT::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_HEARTBEAT)
  severtime_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_HEARTBEAT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_HEARTBEAT)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 severTime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_severtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &severtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_HEARTBEAT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_HEARTBEAT)
  return false;
#undef DO_
}

void SC_HEARTBEAT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_HEARTBEAT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 severTime = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->severtime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_HEARTBEAT)
}

::google::protobuf::uint8* SC_HEARTBEAT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_HEARTBEAT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 severTime = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->severtime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_HEARTBEAT)
  return target;
}

size_t SC_HEARTBEAT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_HEARTBEAT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 severTime = 1;
  if (has_severtime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->severtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_HEARTBEAT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_HEARTBEAT)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_HEARTBEAT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_HEARTBEAT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_HEARTBEAT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_HEARTBEAT)
    MergeFrom(*source);
  }
}

void SC_HEARTBEAT::MergeFrom(const SC_HEARTBEAT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_HEARTBEAT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_severtime()) {
    set_severtime(from.severtime());
  }
}

void SC_HEARTBEAT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_HEARTBEAT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_HEARTBEAT::CopyFrom(const SC_HEARTBEAT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_HEARTBEAT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_HEARTBEAT::IsInitialized() const {
  return true;
}

void SC_HEARTBEAT::Swap(SC_HEARTBEAT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_HEARTBEAT::InternalSwap(SC_HEARTBEAT* other) {
  std::swap(severtime_, other->severtime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_HEARTBEAT::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_HEARTBEAT

// optional int32 severTime = 1;
bool SC_HEARTBEAT::has_severtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_HEARTBEAT::set_has_severtime() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_HEARTBEAT::clear_has_severtime() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_HEARTBEAT::clear_severtime() {
  severtime_ = 0;
  clear_has_severtime();
}
::google::protobuf::int32 SC_HEARTBEAT::severtime() const {
  // @@protoc_insertion_point(field_get:SC_HEARTBEAT.severTime)
  return severtime_;
}
void SC_HEARTBEAT::set_severtime(::google::protobuf::int32 value) {
  set_has_severtime();
  severtime_ = value;
  // @@protoc_insertion_point(field_set:SC_HEARTBEAT.severTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_HEARTBEAT::CS_HEARTBEAT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_HEARTBEAT)
}
CS_HEARTBEAT::CS_HEARTBEAT(const CS_HEARTBEAT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_HEARTBEAT)
}

void CS_HEARTBEAT::SharedCtor() {
  _cached_size_ = 0;
}

CS_HEARTBEAT::~CS_HEARTBEAT() {
  // @@protoc_insertion_point(destructor:CS_HEARTBEAT)
  SharedDtor();
}

void CS_HEARTBEAT::SharedDtor() {
}

void CS_HEARTBEAT::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_HEARTBEAT::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_HEARTBEAT& CS_HEARTBEAT::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_HEARTBEAT* CS_HEARTBEAT::New(::google::protobuf::Arena* arena) const {
  CS_HEARTBEAT* n = new CS_HEARTBEAT;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_HEARTBEAT::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_HEARTBEAT)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_HEARTBEAT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_HEARTBEAT)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_HEARTBEAT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_HEARTBEAT)
  return false;
#undef DO_
}

void CS_HEARTBEAT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_HEARTBEAT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_HEARTBEAT)
}

::google::protobuf::uint8* CS_HEARTBEAT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_HEARTBEAT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_HEARTBEAT)
  return target;
}

size_t CS_HEARTBEAT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_HEARTBEAT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_HEARTBEAT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_HEARTBEAT)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_HEARTBEAT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_HEARTBEAT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_HEARTBEAT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_HEARTBEAT)
    MergeFrom(*source);
  }
}

void CS_HEARTBEAT::MergeFrom(const CS_HEARTBEAT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_HEARTBEAT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_HEARTBEAT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_HEARTBEAT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_HEARTBEAT::CopyFrom(const CS_HEARTBEAT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_HEARTBEAT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_HEARTBEAT::IsInitialized() const {
  return true;
}

void CS_HEARTBEAT::Swap(CS_HEARTBEAT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_HEARTBEAT::InternalSwap(CS_HEARTBEAT* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_HEARTBEAT::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_HEARTBEAT

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ReconnectionPlay::CS_ReconnectionPlay()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ReconnectionPlay)
}
CS_ReconnectionPlay::CS_ReconnectionPlay(const CS_ReconnectionPlay& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_ReconnectionPlay)
}

void CS_ReconnectionPlay::SharedCtor() {
  _cached_size_ = 0;
}

CS_ReconnectionPlay::~CS_ReconnectionPlay() {
  // @@protoc_insertion_point(destructor:CS_ReconnectionPlay)
  SharedDtor();
}

void CS_ReconnectionPlay::SharedDtor() {
}

void CS_ReconnectionPlay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ReconnectionPlay::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ReconnectionPlay& CS_ReconnectionPlay::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ReconnectionPlay* CS_ReconnectionPlay::New(::google::protobuf::Arena* arena) const {
  CS_ReconnectionPlay* n = new CS_ReconnectionPlay;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ReconnectionPlay::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ReconnectionPlay)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ReconnectionPlay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ReconnectionPlay)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ReconnectionPlay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ReconnectionPlay)
  return false;
#undef DO_
}

void CS_ReconnectionPlay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ReconnectionPlay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ReconnectionPlay)
}

::google::protobuf::uint8* CS_ReconnectionPlay::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ReconnectionPlay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ReconnectionPlay)
  return target;
}

size_t CS_ReconnectionPlay::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ReconnectionPlay)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ReconnectionPlay::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ReconnectionPlay)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ReconnectionPlay* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ReconnectionPlay>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ReconnectionPlay)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ReconnectionPlay)
    MergeFrom(*source);
  }
}

void CS_ReconnectionPlay::MergeFrom(const CS_ReconnectionPlay& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ReconnectionPlay)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_ReconnectionPlay::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ReconnectionPlay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ReconnectionPlay::CopyFrom(const CS_ReconnectionPlay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ReconnectionPlay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ReconnectionPlay::IsInitialized() const {
  return true;
}

void CS_ReconnectionPlay::Swap(CS_ReconnectionPlay* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ReconnectionPlay::InternalSwap(CS_ReconnectionPlay* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ReconnectionPlay::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ReconnectionPlay

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ReconnectionPlay::kFindTableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ReconnectionPlay::SC_ReconnectionPlay()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ReconnectionPlay)
}
SC_ReconnectionPlay::SC_ReconnectionPlay(const SC_ReconnectionPlay& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  find_table_ = from.find_table_;
  // @@protoc_insertion_point(copy_constructor:SC_ReconnectionPlay)
}

void SC_ReconnectionPlay::SharedCtor() {
  _cached_size_ = 0;
  find_table_ = false;
}

SC_ReconnectionPlay::~SC_ReconnectionPlay() {
  // @@protoc_insertion_point(destructor:SC_ReconnectionPlay)
  SharedDtor();
}

void SC_ReconnectionPlay::SharedDtor() {
}

void SC_ReconnectionPlay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ReconnectionPlay::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ReconnectionPlay& SC_ReconnectionPlay::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ReconnectionPlay* SC_ReconnectionPlay::New(::google::protobuf::Arena* arena) const {
  SC_ReconnectionPlay* n = new SC_ReconnectionPlay;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ReconnectionPlay::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ReconnectionPlay)
  find_table_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ReconnectionPlay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ReconnectionPlay)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool find_table = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_find_table();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &find_table_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ReconnectionPlay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ReconnectionPlay)
  return false;
#undef DO_
}

void SC_ReconnectionPlay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ReconnectionPlay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool find_table = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->find_table(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ReconnectionPlay)
}

::google::protobuf::uint8* SC_ReconnectionPlay::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ReconnectionPlay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool find_table = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->find_table(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ReconnectionPlay)
  return target;
}

size_t SC_ReconnectionPlay::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ReconnectionPlay)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional bool find_table = 1;
  if (has_find_table()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ReconnectionPlay::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ReconnectionPlay)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ReconnectionPlay* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ReconnectionPlay>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ReconnectionPlay)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ReconnectionPlay)
    MergeFrom(*source);
  }
}

void SC_ReconnectionPlay::MergeFrom(const SC_ReconnectionPlay& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ReconnectionPlay)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_find_table()) {
    set_find_table(from.find_table());
  }
}

void SC_ReconnectionPlay::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ReconnectionPlay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ReconnectionPlay::CopyFrom(const SC_ReconnectionPlay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ReconnectionPlay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ReconnectionPlay::IsInitialized() const {
  return true;
}

void SC_ReconnectionPlay::Swap(SC_ReconnectionPlay* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ReconnectionPlay::InternalSwap(SC_ReconnectionPlay* other) {
  std::swap(find_table_, other->find_table_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ReconnectionPlay::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ReconnectionPlay

// optional bool find_table = 1;
bool SC_ReconnectionPlay::has_find_table() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ReconnectionPlay::set_has_find_table() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ReconnectionPlay::clear_has_find_table() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ReconnectionPlay::clear_find_table() {
  find_table_ = false;
  clear_has_find_table();
}
bool SC_ReconnectionPlay::find_table() const {
  // @@protoc_insertion_point(field_get:SC_ReconnectionPlay.find_table)
  return find_table_;
}
void SC_ReconnectionPlay::set_find_table(bool value) {
  set_has_find_table();
  find_table_ = value;
  // @@protoc_insertion_point(field_set:SC_ReconnectionPlay.find_table)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_SimpleRespons::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_SimpleRespons::SC_SimpleRespons()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_SimpleRespons)
}
SC_SimpleRespons::SC_SimpleRespons(const SC_SimpleRespons& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:SC_SimpleRespons)
}

void SC_SimpleRespons::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

SC_SimpleRespons::~SC_SimpleRespons() {
  // @@protoc_insertion_point(destructor:SC_SimpleRespons)
  SharedDtor();
}

void SC_SimpleRespons::SharedDtor() {
}

void SC_SimpleRespons::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_SimpleRespons::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_SimpleRespons& SC_SimpleRespons::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_SimpleRespons* SC_SimpleRespons::New(::google::protobuf::Arena* arena) const {
  SC_SimpleRespons* n = new SC_SimpleRespons;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_SimpleRespons::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_SimpleRespons)
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_SimpleRespons::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_SimpleRespons)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_SimpleRespons)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_SimpleRespons)
  return false;
#undef DO_
}

void SC_SimpleRespons::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_SimpleRespons)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_SimpleRespons)
}

::google::protobuf::uint8* SC_SimpleRespons::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_SimpleRespons)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_SimpleRespons)
  return target;
}

size_t SC_SimpleRespons::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_SimpleRespons)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_SimpleRespons::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_SimpleRespons)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_SimpleRespons* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_SimpleRespons>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_SimpleRespons)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_SimpleRespons)
    MergeFrom(*source);
  }
}

void SC_SimpleRespons::MergeFrom(const SC_SimpleRespons& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_SimpleRespons)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void SC_SimpleRespons::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_SimpleRespons)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_SimpleRespons::CopyFrom(const SC_SimpleRespons& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_SimpleRespons)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_SimpleRespons::IsInitialized() const {
  return true;
}

void SC_SimpleRespons::Swap(SC_SimpleRespons* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_SimpleRespons::InternalSwap(SC_SimpleRespons* other) {
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_SimpleRespons::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_SimpleRespons

// optional int32 status = 1;
bool SC_SimpleRespons::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_SimpleRespons::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_SimpleRespons::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_SimpleRespons::clear_status() {
  status_ = 0;
  clear_has_status();
}
::google::protobuf::int32 SC_SimpleRespons::status() const {
  // @@protoc_insertion_point(field_get:SC_SimpleRespons.status)
  return status_;
}
void SC_SimpleRespons::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:SC_SimpleRespons.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_QueryPlayerMsgData::CS_QueryPlayerMsgData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_QueryPlayerMsgData)
}
CS_QueryPlayerMsgData::CS_QueryPlayerMsgData(const CS_QueryPlayerMsgData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_QueryPlayerMsgData)
}

void CS_QueryPlayerMsgData::SharedCtor() {
  _cached_size_ = 0;
}

CS_QueryPlayerMsgData::~CS_QueryPlayerMsgData() {
  // @@protoc_insertion_point(destructor:CS_QueryPlayerMsgData)
  SharedDtor();
}

void CS_QueryPlayerMsgData::SharedDtor() {
}

void CS_QueryPlayerMsgData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_QueryPlayerMsgData::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_QueryPlayerMsgData& CS_QueryPlayerMsgData::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_QueryPlayerMsgData* CS_QueryPlayerMsgData::New(::google::protobuf::Arena* arena) const {
  CS_QueryPlayerMsgData* n = new CS_QueryPlayerMsgData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_QueryPlayerMsgData::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_QueryPlayerMsgData)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_QueryPlayerMsgData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_QueryPlayerMsgData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_QueryPlayerMsgData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_QueryPlayerMsgData)
  return false;
#undef DO_
}

void CS_QueryPlayerMsgData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_QueryPlayerMsgData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_QueryPlayerMsgData)
}

::google::protobuf::uint8* CS_QueryPlayerMsgData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_QueryPlayerMsgData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_QueryPlayerMsgData)
  return target;
}

size_t CS_QueryPlayerMsgData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_QueryPlayerMsgData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_QueryPlayerMsgData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_QueryPlayerMsgData)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_QueryPlayerMsgData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_QueryPlayerMsgData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_QueryPlayerMsgData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_QueryPlayerMsgData)
    MergeFrom(*source);
  }
}

void CS_QueryPlayerMsgData::MergeFrom(const CS_QueryPlayerMsgData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_QueryPlayerMsgData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_QueryPlayerMsgData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_QueryPlayerMsgData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_QueryPlayerMsgData::CopyFrom(const CS_QueryPlayerMsgData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_QueryPlayerMsgData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_QueryPlayerMsgData::IsInitialized() const {
  return true;
}

void CS_QueryPlayerMsgData::Swap(CS_QueryPlayerMsgData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_QueryPlayerMsgData::InternalSwap(CS_QueryPlayerMsgData* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_QueryPlayerMsgData::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_QueryPlayerMsgData

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_QueryPlayerMsgData::kPbMsgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_QueryPlayerMsgData::SC_QueryPlayerMsgData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_QueryPlayerMsgData)
}
SC_QueryPlayerMsgData::SC_QueryPlayerMsgData(const SC_QueryPlayerMsgData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_msg_data_(from.pb_msg_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SC_QueryPlayerMsgData)
}

void SC_QueryPlayerMsgData::SharedCtor() {
  _cached_size_ = 0;
}

SC_QueryPlayerMsgData::~SC_QueryPlayerMsgData() {
  // @@protoc_insertion_point(destructor:SC_QueryPlayerMsgData)
  SharedDtor();
}

void SC_QueryPlayerMsgData::SharedDtor() {
}

void SC_QueryPlayerMsgData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_QueryPlayerMsgData::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_QueryPlayerMsgData& SC_QueryPlayerMsgData::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_QueryPlayerMsgData* SC_QueryPlayerMsgData::New(::google::protobuf::Arena* arena) const {
  SC_QueryPlayerMsgData* n = new SC_QueryPlayerMsgData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_QueryPlayerMsgData::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_QueryPlayerMsgData)
  pb_msg_data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_QueryPlayerMsgData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_QueryPlayerMsgData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Msg_DataInfo pb_msg_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_msg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_QueryPlayerMsgData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_QueryPlayerMsgData)
  return false;
#undef DO_
}

void SC_QueryPlayerMsgData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_QueryPlayerMsgData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Msg_DataInfo pb_msg_data = 1;
  for (unsigned int i = 0, n = this->pb_msg_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_msg_data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_QueryPlayerMsgData)
}

::google::protobuf::uint8* SC_QueryPlayerMsgData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_QueryPlayerMsgData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Msg_DataInfo pb_msg_data = 1;
  for (unsigned int i = 0, n = this->pb_msg_data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_msg_data(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_QueryPlayerMsgData)
  return target;
}

size_t SC_QueryPlayerMsgData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_QueryPlayerMsgData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .Msg_DataInfo pb_msg_data = 1;
  {
    unsigned int count = this->pb_msg_data_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_msg_data(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_QueryPlayerMsgData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_QueryPlayerMsgData)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_QueryPlayerMsgData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_QueryPlayerMsgData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_QueryPlayerMsgData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_QueryPlayerMsgData)
    MergeFrom(*source);
  }
}

void SC_QueryPlayerMsgData::MergeFrom(const SC_QueryPlayerMsgData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_QueryPlayerMsgData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_msg_data_.MergeFrom(from.pb_msg_data_);
}

void SC_QueryPlayerMsgData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_QueryPlayerMsgData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_QueryPlayerMsgData::CopyFrom(const SC_QueryPlayerMsgData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_QueryPlayerMsgData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_QueryPlayerMsgData::IsInitialized() const {
  return true;
}

void SC_QueryPlayerMsgData::Swap(SC_QueryPlayerMsgData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_QueryPlayerMsgData::InternalSwap(SC_QueryPlayerMsgData* other) {
  pb_msg_data_.InternalSwap(&other->pb_msg_data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_QueryPlayerMsgData::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_QueryPlayerMsgData

// repeated .Msg_DataInfo pb_msg_data = 1;
int SC_QueryPlayerMsgData::pb_msg_data_size() const {
  return pb_msg_data_.size();
}
void SC_QueryPlayerMsgData::clear_pb_msg_data() {
  pb_msg_data_.Clear();
}
const ::Msg_DataInfo& SC_QueryPlayerMsgData::pb_msg_data(int index) const {
  // @@protoc_insertion_point(field_get:SC_QueryPlayerMsgData.pb_msg_data)
  return pb_msg_data_.Get(index);
}
::Msg_DataInfo* SC_QueryPlayerMsgData::mutable_pb_msg_data(int index) {
  // @@protoc_insertion_point(field_mutable:SC_QueryPlayerMsgData.pb_msg_data)
  return pb_msg_data_.Mutable(index);
}
::Msg_DataInfo* SC_QueryPlayerMsgData::add_pb_msg_data() {
  // @@protoc_insertion_point(field_add:SC_QueryPlayerMsgData.pb_msg_data)
  return pb_msg_data_.Add();
}
::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >*
SC_QueryPlayerMsgData::mutable_pb_msg_data() {
  // @@protoc_insertion_point(field_mutable_list:SC_QueryPlayerMsgData.pb_msg_data)
  return &pb_msg_data_;
}
const ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >&
SC_QueryPlayerMsgData::pb_msg_data() const {
  // @@protoc_insertion_point(field_list:SC_QueryPlayerMsgData.pb_msg_data)
  return pb_msg_data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_NewMsgData::kPbMsgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_NewMsgData::SC_NewMsgData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_NewMsgData)
}
SC_NewMsgData::SC_NewMsgData(const SC_NewMsgData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_msg_data_(from.pb_msg_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SC_NewMsgData)
}

void SC_NewMsgData::SharedCtor() {
  _cached_size_ = 0;
}

SC_NewMsgData::~SC_NewMsgData() {
  // @@protoc_insertion_point(destructor:SC_NewMsgData)
  SharedDtor();
}

void SC_NewMsgData::SharedDtor() {
}

void SC_NewMsgData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_NewMsgData::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_NewMsgData& SC_NewMsgData::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_NewMsgData* SC_NewMsgData::New(::google::protobuf::Arena* arena) const {
  SC_NewMsgData* n = new SC_NewMsgData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_NewMsgData::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_NewMsgData)
  pb_msg_data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_NewMsgData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_NewMsgData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Msg_DataInfo pb_msg_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_msg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_NewMsgData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_NewMsgData)
  return false;
#undef DO_
}

void SC_NewMsgData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_NewMsgData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Msg_DataInfo pb_msg_data = 1;
  for (unsigned int i = 0, n = this->pb_msg_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_msg_data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_NewMsgData)
}

::google::protobuf::uint8* SC_NewMsgData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_NewMsgData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Msg_DataInfo pb_msg_data = 1;
  for (unsigned int i = 0, n = this->pb_msg_data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_msg_data(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_NewMsgData)
  return target;
}

size_t SC_NewMsgData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_NewMsgData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .Msg_DataInfo pb_msg_data = 1;
  {
    unsigned int count = this->pb_msg_data_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_msg_data(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_NewMsgData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_NewMsgData)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_NewMsgData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_NewMsgData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_NewMsgData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_NewMsgData)
    MergeFrom(*source);
  }
}

void SC_NewMsgData::MergeFrom(const SC_NewMsgData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_NewMsgData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_msg_data_.MergeFrom(from.pb_msg_data_);
}

void SC_NewMsgData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_NewMsgData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_NewMsgData::CopyFrom(const SC_NewMsgData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_NewMsgData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_NewMsgData::IsInitialized() const {
  return true;
}

void SC_NewMsgData::Swap(SC_NewMsgData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_NewMsgData::InternalSwap(SC_NewMsgData* other) {
  pb_msg_data_.InternalSwap(&other->pb_msg_data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_NewMsgData::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_NewMsgData

// repeated .Msg_DataInfo pb_msg_data = 1;
int SC_NewMsgData::pb_msg_data_size() const {
  return pb_msg_data_.size();
}
void SC_NewMsgData::clear_pb_msg_data() {
  pb_msg_data_.Clear();
}
const ::Msg_DataInfo& SC_NewMsgData::pb_msg_data(int index) const {
  // @@protoc_insertion_point(field_get:SC_NewMsgData.pb_msg_data)
  return pb_msg_data_.Get(index);
}
::Msg_DataInfo* SC_NewMsgData::mutable_pb_msg_data(int index) {
  // @@protoc_insertion_point(field_mutable:SC_NewMsgData.pb_msg_data)
  return pb_msg_data_.Mutable(index);
}
::Msg_DataInfo* SC_NewMsgData::add_pb_msg_data() {
  // @@protoc_insertion_point(field_add:SC_NewMsgData.pb_msg_data)
  return pb_msg_data_.Add();
}
::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >*
SC_NewMsgData::mutable_pb_msg_data() {
  // @@protoc_insertion_point(field_mutable_list:SC_NewMsgData.pb_msg_data)
  return &pb_msg_data_;
}
const ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >&
SC_NewMsgData::pb_msg_data() const {
  // @@protoc_insertion_point(field_list:SC_NewMsgData.pb_msg_data)
  return pb_msg_data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_SetMsgReadFlag::kIdFieldNumber;
const int CS_SetMsgReadFlag::kMsgTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_SetMsgReadFlag::CS_SetMsgReadFlag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_SetMsgReadFlag)
}
CS_SetMsgReadFlag::CS_SetMsgReadFlag(const CS_SetMsgReadFlag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&msg_type_) -
    reinterpret_cast<char*>(&id_) + sizeof(msg_type_));
  // @@protoc_insertion_point(copy_constructor:CS_SetMsgReadFlag)
}

void CS_SetMsgReadFlag::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, reinterpret_cast<char*>(&msg_type_) -
    reinterpret_cast<char*>(&id_) + sizeof(msg_type_));
}

CS_SetMsgReadFlag::~CS_SetMsgReadFlag() {
  // @@protoc_insertion_point(destructor:CS_SetMsgReadFlag)
  SharedDtor();
}

void CS_SetMsgReadFlag::SharedDtor() {
}

void CS_SetMsgReadFlag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_SetMsgReadFlag::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_SetMsgReadFlag& CS_SetMsgReadFlag::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_SetMsgReadFlag* CS_SetMsgReadFlag::New(::google::protobuf::Arena* arena) const {
  CS_SetMsgReadFlag* n = new CS_SetMsgReadFlag;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_SetMsgReadFlag::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_SetMsgReadFlag)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&msg_type_) -
      reinterpret_cast<char*>(&id_) + sizeof(msg_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_SetMsgReadFlag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_SetMsgReadFlag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 msg_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_msg_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_SetMsgReadFlag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_SetMsgReadFlag)
  return false;
#undef DO_
}

void CS_SetMsgReadFlag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_SetMsgReadFlag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 msg_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->msg_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_SetMsgReadFlag)
}

::google::protobuf::uint8* CS_SetMsgReadFlag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_SetMsgReadFlag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 msg_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->msg_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_SetMsgReadFlag)
  return target;
}

size_t CS_SetMsgReadFlag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_SetMsgReadFlag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 msg_type = 2;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_SetMsgReadFlag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_SetMsgReadFlag)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_SetMsgReadFlag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_SetMsgReadFlag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_SetMsgReadFlag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_SetMsgReadFlag)
    MergeFrom(*source);
  }
}

void CS_SetMsgReadFlag::MergeFrom(const CS_SetMsgReadFlag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_SetMsgReadFlag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      msg_type_ = from.msg_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CS_SetMsgReadFlag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_SetMsgReadFlag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_SetMsgReadFlag::CopyFrom(const CS_SetMsgReadFlag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_SetMsgReadFlag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_SetMsgReadFlag::IsInitialized() const {
  return true;
}

void CS_SetMsgReadFlag::Swap(CS_SetMsgReadFlag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_SetMsgReadFlag::InternalSwap(CS_SetMsgReadFlag* other) {
  std::swap(id_, other->id_);
  std::swap(msg_type_, other->msg_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_SetMsgReadFlag::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_SetMsgReadFlag

// optional int32 id = 1;
bool CS_SetMsgReadFlag::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_SetMsgReadFlag::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_SetMsgReadFlag::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_SetMsgReadFlag::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 CS_SetMsgReadFlag::id() const {
  // @@protoc_insertion_point(field_get:CS_SetMsgReadFlag.id)
  return id_;
}
void CS_SetMsgReadFlag::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CS_SetMsgReadFlag.id)
}

// optional int32 msg_type = 2;
bool CS_SetMsgReadFlag::has_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_SetMsgReadFlag::set_has_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_SetMsgReadFlag::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_SetMsgReadFlag::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
::google::protobuf::int32 CS_SetMsgReadFlag::msg_type() const {
  // @@protoc_insertion_point(field_get:CS_SetMsgReadFlag.msg_type)
  return msg_type_;
}
void CS_SetMsgReadFlag::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:CS_SetMsgReadFlag.msg_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_FeedBackUpDate::kFeedbackidFieldNumber;
const int SC_FeedBackUpDate::kTypeFieldNumber;
const int SC_FeedBackUpDate::kUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_FeedBackUpDate::SC_FeedBackUpDate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_FeedBackUpDate)
}
SC_FeedBackUpDate::SC_FeedBackUpDate(const SC_FeedBackUpDate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&feedbackid_, &from.feedbackid_,
    reinterpret_cast<char*>(&updatetime_) -
    reinterpret_cast<char*>(&feedbackid_) + sizeof(updatetime_));
  // @@protoc_insertion_point(copy_constructor:SC_FeedBackUpDate)
}

void SC_FeedBackUpDate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&feedbackid_, 0, reinterpret_cast<char*>(&updatetime_) -
    reinterpret_cast<char*>(&feedbackid_) + sizeof(updatetime_));
}

SC_FeedBackUpDate::~SC_FeedBackUpDate() {
  // @@protoc_insertion_point(destructor:SC_FeedBackUpDate)
  SharedDtor();
}

void SC_FeedBackUpDate::SharedDtor() {
}

void SC_FeedBackUpDate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_FeedBackUpDate::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_FeedBackUpDate& SC_FeedBackUpDate::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_FeedBackUpDate* SC_FeedBackUpDate::New(::google::protobuf::Arena* arena) const {
  SC_FeedBackUpDate* n = new SC_FeedBackUpDate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_FeedBackUpDate::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_FeedBackUpDate)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&feedbackid_, 0, reinterpret_cast<char*>(&updatetime_) -
      reinterpret_cast<char*>(&feedbackid_) + sizeof(updatetime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_FeedBackUpDate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_FeedBackUpDate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 feedbackid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_feedbackid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &feedbackid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 updateTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_updatetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &updatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_FeedBackUpDate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_FeedBackUpDate)
  return false;
#undef DO_
}

void SC_FeedBackUpDate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_FeedBackUpDate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 feedbackid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->feedbackid(), output);
  }

  // optional int32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional int32 updateTime = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->updatetime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_FeedBackUpDate)
}

::google::protobuf::uint8* SC_FeedBackUpDate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_FeedBackUpDate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 feedbackid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->feedbackid(), target);
  }

  // optional int32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional int32 updateTime = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->updatetime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_FeedBackUpDate)
  return target;
}

size_t SC_FeedBackUpDate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_FeedBackUpDate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 feedbackid = 1;
    if (has_feedbackid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->feedbackid());
    }

    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 updateTime = 3;
    if (has_updatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->updatetime());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_FeedBackUpDate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_FeedBackUpDate)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_FeedBackUpDate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_FeedBackUpDate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_FeedBackUpDate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_FeedBackUpDate)
    MergeFrom(*source);
  }
}

void SC_FeedBackUpDate::MergeFrom(const SC_FeedBackUpDate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_FeedBackUpDate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      feedbackid_ = from.feedbackid_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      updatetime_ = from.updatetime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_FeedBackUpDate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_FeedBackUpDate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_FeedBackUpDate::CopyFrom(const SC_FeedBackUpDate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_FeedBackUpDate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_FeedBackUpDate::IsInitialized() const {
  return true;
}

void SC_FeedBackUpDate::Swap(SC_FeedBackUpDate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_FeedBackUpDate::InternalSwap(SC_FeedBackUpDate* other) {
  std::swap(feedbackid_, other->feedbackid_);
  std::swap(type_, other->type_);
  std::swap(updatetime_, other->updatetime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_FeedBackUpDate::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_FeedBackUpDate

// optional int32 feedbackid = 1;
bool SC_FeedBackUpDate::has_feedbackid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_FeedBackUpDate::set_has_feedbackid() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_FeedBackUpDate::clear_has_feedbackid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_FeedBackUpDate::clear_feedbackid() {
  feedbackid_ = 0;
  clear_has_feedbackid();
}
::google::protobuf::int32 SC_FeedBackUpDate::feedbackid() const {
  // @@protoc_insertion_point(field_get:SC_FeedBackUpDate.feedbackid)
  return feedbackid_;
}
void SC_FeedBackUpDate::set_feedbackid(::google::protobuf::int32 value) {
  set_has_feedbackid();
  feedbackid_ = value;
  // @@protoc_insertion_point(field_set:SC_FeedBackUpDate.feedbackid)
}

// optional int32 type = 2;
bool SC_FeedBackUpDate::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_FeedBackUpDate::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_FeedBackUpDate::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_FeedBackUpDate::clear_type() {
  type_ = 0;
  clear_has_type();
}
::google::protobuf::int32 SC_FeedBackUpDate::type() const {
  // @@protoc_insertion_point(field_get:SC_FeedBackUpDate.type)
  return type_;
}
void SC_FeedBackUpDate::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:SC_FeedBackUpDate.type)
}

// optional int32 updateTime = 3;
bool SC_FeedBackUpDate::has_updatetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_FeedBackUpDate::set_has_updatetime() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_FeedBackUpDate::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_FeedBackUpDate::clear_updatetime() {
  updatetime_ = 0;
  clear_has_updatetime();
}
::google::protobuf::int32 SC_FeedBackUpDate::updatetime() const {
  // @@protoc_insertion_point(field_get:SC_FeedBackUpDate.updateTime)
  return updatetime_;
}
void SC_FeedBackUpDate::set_updatetime(::google::protobuf::int32 value) {
  set_has_updatetime();
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:SC_FeedBackUpDate.updateTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_DeletMsg::kMsgIdFieldNumber;
const int SC_DeletMsg::kMsgTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_DeletMsg::SC_DeletMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_DeletMsg)
}
SC_DeletMsg::SC_DeletMsg(const SC_DeletMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&msg_id_, &from.msg_id_,
    reinterpret_cast<char*>(&msg_type_) -
    reinterpret_cast<char*>(&msg_id_) + sizeof(msg_type_));
  // @@protoc_insertion_point(copy_constructor:SC_DeletMsg)
}

void SC_DeletMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&msg_id_, 0, reinterpret_cast<char*>(&msg_type_) -
    reinterpret_cast<char*>(&msg_id_) + sizeof(msg_type_));
}

SC_DeletMsg::~SC_DeletMsg() {
  // @@protoc_insertion_point(destructor:SC_DeletMsg)
  SharedDtor();
}

void SC_DeletMsg::SharedDtor() {
}

void SC_DeletMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_DeletMsg::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_DeletMsg& SC_DeletMsg::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_DeletMsg* SC_DeletMsg::New(::google::protobuf::Arena* arena) const {
  SC_DeletMsg* n = new SC_DeletMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_DeletMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_DeletMsg)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&msg_id_, 0, reinterpret_cast<char*>(&msg_type_) -
      reinterpret_cast<char*>(&msg_id_) + sizeof(msg_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_DeletMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_DeletMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 msg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_msg_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 msg_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_msg_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_DeletMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_DeletMsg)
  return false;
#undef DO_
}

void SC_DeletMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_DeletMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 msg_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msg_id(), output);
  }

  // optional int32 msg_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->msg_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_DeletMsg)
}

::google::protobuf::uint8* SC_DeletMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_DeletMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 msg_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msg_id(), target);
  }

  // optional int32 msg_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->msg_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_DeletMsg)
  return target;
}

size_t SC_DeletMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_DeletMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 msg_id = 1;
    if (has_msg_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_id());
    }

    // optional int32 msg_type = 2;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_DeletMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_DeletMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_DeletMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_DeletMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_DeletMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_DeletMsg)
    MergeFrom(*source);
  }
}

void SC_DeletMsg::MergeFrom(const SC_DeletMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_DeletMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      msg_id_ = from.msg_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      msg_type_ = from.msg_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_DeletMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_DeletMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_DeletMsg::CopyFrom(const SC_DeletMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_DeletMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_DeletMsg::IsInitialized() const {
  return true;
}

void SC_DeletMsg::Swap(SC_DeletMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_DeletMsg::InternalSwap(SC_DeletMsg* other) {
  std::swap(msg_id_, other->msg_id_);
  std::swap(msg_type_, other->msg_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_DeletMsg::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_DeletMsg

// optional int32 msg_id = 1;
bool SC_DeletMsg::has_msg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_DeletMsg::set_has_msg_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_DeletMsg::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_DeletMsg::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
::google::protobuf::int32 SC_DeletMsg::msg_id() const {
  // @@protoc_insertion_point(field_get:SC_DeletMsg.msg_id)
  return msg_id_;
}
void SC_DeletMsg::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:SC_DeletMsg.msg_id)
}

// optional int32 msg_type = 2;
bool SC_DeletMsg::has_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_DeletMsg::set_has_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_DeletMsg::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_DeletMsg::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
::google::protobuf::int32 SC_DeletMsg::msg_type() const {
  // @@protoc_insertion_point(field_get:SC_DeletMsg.msg_type)
  return msg_type_;
}
void SC_DeletMsg::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:SC_DeletMsg.msg_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_CashMoney::kMoneyFieldNumber;
const int CS_CashMoney::kCashTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_CashMoney::CS_CashMoney()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_CashMoney)
}
CS_CashMoney::CS_CashMoney(const CS_CashMoney& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&money_, &from.money_,
    reinterpret_cast<char*>(&cash_type_) -
    reinterpret_cast<char*>(&money_) + sizeof(cash_type_));
  // @@protoc_insertion_point(copy_constructor:CS_CashMoney)
}

void CS_CashMoney::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&money_, 0, reinterpret_cast<char*>(&cash_type_) -
    reinterpret_cast<char*>(&money_) + sizeof(cash_type_));
}

CS_CashMoney::~CS_CashMoney() {
  // @@protoc_insertion_point(destructor:CS_CashMoney)
  SharedDtor();
}

void CS_CashMoney::SharedDtor() {
}

void CS_CashMoney::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_CashMoney::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_CashMoney& CS_CashMoney::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_CashMoney* CS_CashMoney::New(::google::protobuf::Arena* arena) const {
  CS_CashMoney* n = new CS_CashMoney;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_CashMoney::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_CashMoney)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&money_, 0, reinterpret_cast<char*>(&cash_type_) -
      reinterpret_cast<char*>(&money_) + sizeof(cash_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_CashMoney::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_CashMoney)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 money = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cash_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_cash_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cash_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_CashMoney)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_CashMoney)
  return false;
#undef DO_
}

void CS_CashMoney::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_CashMoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 money = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->money(), output);
  }

  // optional int32 cash_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cash_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_CashMoney)
}

::google::protobuf::uint8* CS_CashMoney::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_CashMoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 money = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->money(), target);
  }

  // optional int32 cash_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cash_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_CashMoney)
  return target;
}

size_t CS_CashMoney::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_CashMoney)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 money = 1;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

    // optional int32 cash_type = 2;
    if (has_cash_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cash_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_CashMoney::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_CashMoney)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_CashMoney* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_CashMoney>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_CashMoney)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_CashMoney)
    MergeFrom(*source);
  }
}

void CS_CashMoney::MergeFrom(const CS_CashMoney& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_CashMoney)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000002u) {
      cash_type_ = from.cash_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CS_CashMoney::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_CashMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_CashMoney::CopyFrom(const CS_CashMoney& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_CashMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_CashMoney::IsInitialized() const {
  return true;
}

void CS_CashMoney::Swap(CS_CashMoney* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_CashMoney::InternalSwap(CS_CashMoney* other) {
  std::swap(money_, other->money_);
  std::swap(cash_type_, other->cash_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_CashMoney::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_CashMoney

// optional int32 money = 1;
bool CS_CashMoney::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_CashMoney::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_CashMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_CashMoney::clear_money() {
  money_ = 0;
  clear_has_money();
}
::google::protobuf::int32 CS_CashMoney::money() const {
  // @@protoc_insertion_point(field_get:CS_CashMoney.money)
  return money_;
}
void CS_CashMoney::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CS_CashMoney.money)
}

// optional int32 cash_type = 2;
bool CS_CashMoney::has_cash_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_CashMoney::set_has_cash_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_CashMoney::clear_has_cash_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_CashMoney::clear_cash_type() {
  cash_type_ = 0;
  clear_has_cash_type();
}
::google::protobuf::int32 CS_CashMoney::cash_type() const {
  // @@protoc_insertion_point(field_get:CS_CashMoney.cash_type)
  return cash_type_;
}
void CS_CashMoney::set_cash_type(::google::protobuf::int32 value) {
  set_has_cash_type();
  cash_type_ = value;
  // @@protoc_insertion_point(field_set:CS_CashMoney.cash_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_CashMoneyResult::kResultFieldNumber;
const int SC_CashMoneyResult::kBankFieldNumber;
const int SC_CashMoneyResult::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_CashMoneyResult::SC_CashMoneyResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_CashMoneyResult)
}
SC_CashMoneyResult::SC_CashMoneyResult(const SC_CashMoneyResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bank_, &from.bank_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&bank_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_CashMoneyResult)
}

void SC_CashMoneyResult::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bank_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&bank_) + sizeof(result_));
}

SC_CashMoneyResult::~SC_CashMoneyResult() {
  // @@protoc_insertion_point(destructor:SC_CashMoneyResult)
  SharedDtor();
}

void SC_CashMoneyResult::SharedDtor() {
}

void SC_CashMoneyResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_CashMoneyResult::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_CashMoneyResult& SC_CashMoneyResult::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_CashMoneyResult* SC_CashMoneyResult::New(::google::protobuf::Arena* arena) const {
  SC_CashMoneyResult* n = new SC_CashMoneyResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_CashMoneyResult::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_CashMoneyResult)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&bank_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&bank_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_CashMoneyResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_CashMoneyResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 bank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_bank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_CashMoneyResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_CashMoneyResult)
  return false;
#undef DO_
}

void SC_CashMoneyResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_CashMoneyResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int64 bank = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->bank(), output);
  }

  // optional int64 money = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_CashMoneyResult)
}

::google::protobuf::uint8* SC_CashMoneyResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_CashMoneyResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int64 bank = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->bank(), target);
  }

  // optional int64 money = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_CashMoneyResult)
  return target;
}

size_t SC_CashMoneyResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_CashMoneyResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int64 bank = 2;
    if (has_bank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bank());
    }

    // optional int64 money = 3;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_CashMoneyResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_CashMoneyResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_CashMoneyResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_CashMoneyResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_CashMoneyResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_CashMoneyResult)
    MergeFrom(*source);
  }
}

void SC_CashMoneyResult::MergeFrom(const SC_CashMoneyResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_CashMoneyResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      bank_ = from.bank_;
    }
    if (cached_has_bits & 0x00000002u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_CashMoneyResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_CashMoneyResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_CashMoneyResult::CopyFrom(const SC_CashMoneyResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_CashMoneyResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_CashMoneyResult::IsInitialized() const {
  return true;
}

void SC_CashMoneyResult::Swap(SC_CashMoneyResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_CashMoneyResult::InternalSwap(SC_CashMoneyResult* other) {
  std::swap(bank_, other->bank_);
  std::swap(money_, other->money_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_CashMoneyResult::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_CashMoneyResult

// optional int32 result = 1;
bool SC_CashMoneyResult::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_CashMoneyResult::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_CashMoneyResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_CashMoneyResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_CashMoneyResult::result() const {
  // @@protoc_insertion_point(field_get:SC_CashMoneyResult.result)
  return result_;
}
void SC_CashMoneyResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_CashMoneyResult.result)
}

// optional int64 bank = 2;
bool SC_CashMoneyResult::has_bank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_CashMoneyResult::set_has_bank() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_CashMoneyResult::clear_has_bank() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_CashMoneyResult::clear_bank() {
  bank_ = GOOGLE_LONGLONG(0);
  clear_has_bank();
}
::google::protobuf::int64 SC_CashMoneyResult::bank() const {
  // @@protoc_insertion_point(field_get:SC_CashMoneyResult.bank)
  return bank_;
}
void SC_CashMoneyResult::set_bank(::google::protobuf::int64 value) {
  set_has_bank();
  bank_ = value;
  // @@protoc_insertion_point(field_set:SC_CashMoneyResult.bank)
}

// optional int64 money = 3;
bool SC_CashMoneyResult::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_CashMoneyResult::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_CashMoneyResult::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_CashMoneyResult::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 SC_CashMoneyResult::money() const {
  // @@protoc_insertion_point(field_get:SC_CashMoneyResult.money)
  return money_;
}
void SC_CashMoneyResult::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_CashMoneyResult.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_CashMoneyType::CS_CashMoneyType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_CashMoneyType)
}
CS_CashMoneyType::CS_CashMoneyType(const CS_CashMoneyType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_CashMoneyType)
}

void CS_CashMoneyType::SharedCtor() {
  _cached_size_ = 0;
}

CS_CashMoneyType::~CS_CashMoneyType() {
  // @@protoc_insertion_point(destructor:CS_CashMoneyType)
  SharedDtor();
}

void CS_CashMoneyType::SharedDtor() {
}

void CS_CashMoneyType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_CashMoneyType::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_CashMoneyType& CS_CashMoneyType::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_CashMoneyType* CS_CashMoneyType::New(::google::protobuf::Arena* arena) const {
  CS_CashMoneyType* n = new CS_CashMoneyType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_CashMoneyType::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_CashMoneyType)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_CashMoneyType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_CashMoneyType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_CashMoneyType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_CashMoneyType)
  return false;
#undef DO_
}

void CS_CashMoneyType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_CashMoneyType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_CashMoneyType)
}

::google::protobuf::uint8* CS_CashMoneyType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_CashMoneyType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_CashMoneyType)
  return target;
}

size_t CS_CashMoneyType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_CashMoneyType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_CashMoneyType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_CashMoneyType)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_CashMoneyType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_CashMoneyType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_CashMoneyType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_CashMoneyType)
    MergeFrom(*source);
  }
}

void CS_CashMoneyType::MergeFrom(const CS_CashMoneyType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_CashMoneyType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_CashMoneyType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_CashMoneyType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_CashMoneyType::CopyFrom(const CS_CashMoneyType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_CashMoneyType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_CashMoneyType::IsInitialized() const {
  return true;
}

void CS_CashMoneyType::Swap(CS_CashMoneyType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_CashMoneyType::InternalSwap(CS_CashMoneyType* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_CashMoneyType::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_CashMoneyType

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_CashMoneyType::kPbCashInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_CashMoneyType::SC_CashMoneyType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_CashMoneyType)
}
SC_CashMoneyType::SC_CashMoneyType(const SC_CashMoneyType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_cash_info_(from.pb_cash_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SC_CashMoneyType)
}

void SC_CashMoneyType::SharedCtor() {
  _cached_size_ = 0;
}

SC_CashMoneyType::~SC_CashMoneyType() {
  // @@protoc_insertion_point(destructor:SC_CashMoneyType)
  SharedDtor();
}

void SC_CashMoneyType::SharedDtor() {
}

void SC_CashMoneyType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_CashMoneyType::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_CashMoneyType& SC_CashMoneyType::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_CashMoneyType* SC_CashMoneyType::New(::google::protobuf::Arena* arena) const {
  SC_CashMoneyType* n = new SC_CashMoneyType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_CashMoneyType::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_CashMoneyType)
  pb_cash_info_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_CashMoneyType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_CashMoneyType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CashMoneyType pb_cash_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_cash_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_CashMoneyType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_CashMoneyType)
  return false;
#undef DO_
}

void SC_CashMoneyType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_CashMoneyType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CashMoneyType pb_cash_info = 1;
  for (unsigned int i = 0, n = this->pb_cash_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_cash_info(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_CashMoneyType)
}

::google::protobuf::uint8* SC_CashMoneyType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_CashMoneyType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CashMoneyType pb_cash_info = 1;
  for (unsigned int i = 0, n = this->pb_cash_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_cash_info(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_CashMoneyType)
  return target;
}

size_t SC_CashMoneyType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_CashMoneyType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .CashMoneyType pb_cash_info = 1;
  {
    unsigned int count = this->pb_cash_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_cash_info(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_CashMoneyType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_CashMoneyType)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_CashMoneyType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_CashMoneyType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_CashMoneyType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_CashMoneyType)
    MergeFrom(*source);
  }
}

void SC_CashMoneyType::MergeFrom(const SC_CashMoneyType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_CashMoneyType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_cash_info_.MergeFrom(from.pb_cash_info_);
}

void SC_CashMoneyType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_CashMoneyType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_CashMoneyType::CopyFrom(const SC_CashMoneyType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_CashMoneyType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_CashMoneyType::IsInitialized() const {
  return true;
}

void SC_CashMoneyType::Swap(SC_CashMoneyType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_CashMoneyType::InternalSwap(SC_CashMoneyType* other) {
  pb_cash_info_.InternalSwap(&other->pb_cash_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_CashMoneyType::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_CashMoneyType

// repeated .CashMoneyType pb_cash_info = 1;
int SC_CashMoneyType::pb_cash_info_size() const {
  return pb_cash_info_.size();
}
void SC_CashMoneyType::clear_pb_cash_info() {
  pb_cash_info_.Clear();
}
const ::CashMoneyType& SC_CashMoneyType::pb_cash_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_CashMoneyType.pb_cash_info)
  return pb_cash_info_.Get(index);
}
::CashMoneyType* SC_CashMoneyType::mutable_pb_cash_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_CashMoneyType.pb_cash_info)
  return pb_cash_info_.Mutable(index);
}
::CashMoneyType* SC_CashMoneyType::add_pb_cash_info() {
  // @@protoc_insertion_point(field_add:SC_CashMoneyType.pb_cash_info)
  return pb_cash_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::CashMoneyType >*
SC_CashMoneyType::mutable_pb_cash_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_CashMoneyType.pb_cash_info)
  return &pb_cash_info_;
}
const ::google::protobuf::RepeatedPtrField< ::CashMoneyType >&
SC_CashMoneyType::pb_cash_info() const {
  // @@protoc_insertion_point(field_list:SC_CashMoneyType.pb_cash_info)
  return pb_cash_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_NotifyBank::kOptTypeFieldNumber;
const int SC_NotifyBank::kBankFieldNumber;
const int SC_NotifyBank::kChangeBankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_NotifyBank::SC_NotifyBank()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_NotifyBank)
}
SC_NotifyBank::SC_NotifyBank(const SC_NotifyBank& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bank_, &from.bank_,
    reinterpret_cast<char*>(&opt_type_) -
    reinterpret_cast<char*>(&bank_) + sizeof(opt_type_));
  // @@protoc_insertion_point(copy_constructor:SC_NotifyBank)
}

void SC_NotifyBank::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bank_, 0, reinterpret_cast<char*>(&opt_type_) -
    reinterpret_cast<char*>(&bank_) + sizeof(opt_type_));
}

SC_NotifyBank::~SC_NotifyBank() {
  // @@protoc_insertion_point(destructor:SC_NotifyBank)
  SharedDtor();
}

void SC_NotifyBank::SharedDtor() {
}

void SC_NotifyBank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_NotifyBank::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_NotifyBank& SC_NotifyBank::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_NotifyBank* SC_NotifyBank::New(::google::protobuf::Arena* arena) const {
  SC_NotifyBank* n = new SC_NotifyBank;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_NotifyBank::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_NotifyBank)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&bank_, 0, reinterpret_cast<char*>(&opt_type_) -
      reinterpret_cast<char*>(&bank_) + sizeof(opt_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_NotifyBank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_NotifyBank)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 opt_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_opt_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 bank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_bank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 change_bank = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_change_bank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &change_bank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_NotifyBank)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_NotifyBank)
  return false;
#undef DO_
}

void SC_NotifyBank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_NotifyBank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 opt_type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->opt_type(), output);
  }

  // optional int64 bank = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->bank(), output);
  }

  // optional int64 change_bank = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->change_bank(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_NotifyBank)
}

::google::protobuf::uint8* SC_NotifyBank::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_NotifyBank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 opt_type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->opt_type(), target);
  }

  // optional int64 bank = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->bank(), target);
  }

  // optional int64 change_bank = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->change_bank(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_NotifyBank)
  return target;
}

size_t SC_NotifyBank::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_NotifyBank)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int64 bank = 2;
    if (has_bank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bank());
    }

    // optional int64 change_bank = 3;
    if (has_change_bank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->change_bank());
    }

    // optional int32 opt_type = 1;
    if (has_opt_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opt_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_NotifyBank::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_NotifyBank)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_NotifyBank* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_NotifyBank>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_NotifyBank)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_NotifyBank)
    MergeFrom(*source);
  }
}

void SC_NotifyBank::MergeFrom(const SC_NotifyBank& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_NotifyBank)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      bank_ = from.bank_;
    }
    if (cached_has_bits & 0x00000002u) {
      change_bank_ = from.change_bank_;
    }
    if (cached_has_bits & 0x00000004u) {
      opt_type_ = from.opt_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_NotifyBank::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_NotifyBank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_NotifyBank::CopyFrom(const SC_NotifyBank& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_NotifyBank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_NotifyBank::IsInitialized() const {
  return true;
}

void SC_NotifyBank::Swap(SC_NotifyBank* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_NotifyBank::InternalSwap(SC_NotifyBank* other) {
  std::swap(bank_, other->bank_);
  std::swap(change_bank_, other->change_bank_);
  std::swap(opt_type_, other->opt_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_NotifyBank::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_NotifyBank

// optional int32 opt_type = 1;
bool SC_NotifyBank::has_opt_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_NotifyBank::set_has_opt_type() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_NotifyBank::clear_has_opt_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_NotifyBank::clear_opt_type() {
  opt_type_ = 0;
  clear_has_opt_type();
}
::google::protobuf::int32 SC_NotifyBank::opt_type() const {
  // @@protoc_insertion_point(field_get:SC_NotifyBank.opt_type)
  return opt_type_;
}
void SC_NotifyBank::set_opt_type(::google::protobuf::int32 value) {
  set_has_opt_type();
  opt_type_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyBank.opt_type)
}

// optional int64 bank = 2;
bool SC_NotifyBank::has_bank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_NotifyBank::set_has_bank() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_NotifyBank::clear_has_bank() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_NotifyBank::clear_bank() {
  bank_ = GOOGLE_LONGLONG(0);
  clear_has_bank();
}
::google::protobuf::int64 SC_NotifyBank::bank() const {
  // @@protoc_insertion_point(field_get:SC_NotifyBank.bank)
  return bank_;
}
void SC_NotifyBank::set_bank(::google::protobuf::int64 value) {
  set_has_bank();
  bank_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyBank.bank)
}

// optional int64 change_bank = 3;
bool SC_NotifyBank::has_change_bank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_NotifyBank::set_has_change_bank() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_NotifyBank::clear_has_change_bank() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_NotifyBank::clear_change_bank() {
  change_bank_ = GOOGLE_LONGLONG(0);
  clear_has_change_bank();
}
::google::protobuf::int64 SC_NotifyBank::change_bank() const {
  // @@protoc_insertion_point(field_get:SC_NotifyBank.change_bank)
  return change_bank_;
}
void SC_NotifyBank::set_change_bank(::google::protobuf::int64 value) {
  set_has_change_bank();
  change_bank_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyBank.change_bank)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_BandAlipay::kAlipayAccountFieldNumber;
const int CS_BandAlipay::kAlipayNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_BandAlipay::CS_BandAlipay()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_BandAlipay)
}
CS_BandAlipay::CS_BandAlipay(const CS_BandAlipay& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  alipay_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_account()) {
    alipay_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_);
  }
  alipay_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_name()) {
    alipay_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_);
  }
  // @@protoc_insertion_point(copy_constructor:CS_BandAlipay)
}

void CS_BandAlipay::SharedCtor() {
  _cached_size_ = 0;
  alipay_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CS_BandAlipay::~CS_BandAlipay() {
  // @@protoc_insertion_point(destructor:CS_BandAlipay)
  SharedDtor();
}

void CS_BandAlipay::SharedDtor() {
  alipay_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CS_BandAlipay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_BandAlipay::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_BandAlipay& CS_BandAlipay::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_BandAlipay* CS_BandAlipay::New(::google::protobuf::Arena* arena) const {
  CS_BandAlipay* n = new CS_BandAlipay;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_BandAlipay::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_BandAlipay)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_alipay_account()) {
      GOOGLE_DCHECK(!alipay_account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_account_.UnsafeRawStringPointer())->clear();
    }
    if (has_alipay_name()) {
      GOOGLE_DCHECK(!alipay_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_name_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_BandAlipay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_BandAlipay)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string alipay_account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_account().data(), this->alipay_account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_BandAlipay.alipay_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_name().data(), this->alipay_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CS_BandAlipay.alipay_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_BandAlipay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_BandAlipay)
  return false;
#undef DO_
}

void CS_BandAlipay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_BandAlipay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string alipay_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account().data(), this->alipay_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_BandAlipay.alipay_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->alipay_account(), output);
  }

  // optional string alipay_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name().data(), this->alipay_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_BandAlipay.alipay_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->alipay_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_BandAlipay)
}

::google::protobuf::uint8* CS_BandAlipay::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_BandAlipay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string alipay_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account().data(), this->alipay_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_BandAlipay.alipay_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->alipay_account(), target);
  }

  // optional string alipay_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name().data(), this->alipay_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CS_BandAlipay.alipay_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->alipay_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_BandAlipay)
  return target;
}

size_t CS_BandAlipay::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_BandAlipay)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string alipay_account = 1;
    if (has_alipay_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_account());
    }

    // optional string alipay_name = 2;
    if (has_alipay_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_name());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_BandAlipay::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_BandAlipay)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_BandAlipay* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_BandAlipay>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_BandAlipay)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_BandAlipay)
    MergeFrom(*source);
  }
}

void CS_BandAlipay::MergeFrom(const CS_BandAlipay& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_BandAlipay)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_alipay_account();
      alipay_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_alipay_name();
      alipay_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_);
    }
  }
}

void CS_BandAlipay::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_BandAlipay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_BandAlipay::CopyFrom(const CS_BandAlipay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_BandAlipay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_BandAlipay::IsInitialized() const {
  return true;
}

void CS_BandAlipay::Swap(CS_BandAlipay* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_BandAlipay::InternalSwap(CS_BandAlipay* other) {
  alipay_account_.Swap(&other->alipay_account_);
  alipay_name_.Swap(&other->alipay_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_BandAlipay::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_BandAlipay

// optional string alipay_account = 1;
bool CS_BandAlipay::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_BandAlipay::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_BandAlipay::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_BandAlipay::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
const ::std::string& CS_BandAlipay::alipay_account() const {
  // @@protoc_insertion_point(field_get:CS_BandAlipay.alipay_account)
  return alipay_account_.GetNoArena();
}
void CS_BandAlipay::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_BandAlipay.alipay_account)
}
#if LANG_CXX11
void CS_BandAlipay::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_BandAlipay.alipay_account)
}
#endif
void CS_BandAlipay::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_BandAlipay.alipay_account)
}
void CS_BandAlipay::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_BandAlipay.alipay_account)
}
::std::string* CS_BandAlipay::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:CS_BandAlipay.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_BandAlipay::release_alipay_account() {
  // @@protoc_insertion_point(field_release:CS_BandAlipay.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_BandAlipay::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:CS_BandAlipay.alipay_account)
}

// optional string alipay_name = 2;
bool CS_BandAlipay::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_BandAlipay::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_BandAlipay::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_BandAlipay::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
const ::std::string& CS_BandAlipay::alipay_name() const {
  // @@protoc_insertion_point(field_get:CS_BandAlipay.alipay_name)
  return alipay_name_.GetNoArena();
}
void CS_BandAlipay::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_BandAlipay.alipay_name)
}
#if LANG_CXX11
void CS_BandAlipay::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_BandAlipay.alipay_name)
}
#endif
void CS_BandAlipay::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_BandAlipay.alipay_name)
}
void CS_BandAlipay::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_BandAlipay.alipay_name)
}
::std::string* CS_BandAlipay::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:CS_BandAlipay.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CS_BandAlipay::release_alipay_name() {
  // @@protoc_insertion_point(field_release:CS_BandAlipay.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CS_BandAlipay::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:CS_BandAlipay.alipay_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_BandAlipay::kResultFieldNumber;
const int SC_BandAlipay::kAlipayAccountFieldNumber;
const int SC_BandAlipay::kAlipayNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_BandAlipay::SC_BandAlipay()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_BandAlipay)
}
SC_BandAlipay::SC_BandAlipay(const SC_BandAlipay& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  alipay_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_account()) {
    alipay_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_);
  }
  alipay_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_name()) {
    alipay_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SC_BandAlipay)
}

void SC_BandAlipay::SharedCtor() {
  _cached_size_ = 0;
  alipay_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

SC_BandAlipay::~SC_BandAlipay() {
  // @@protoc_insertion_point(destructor:SC_BandAlipay)
  SharedDtor();
}

void SC_BandAlipay::SharedDtor() {
  alipay_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_BandAlipay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_BandAlipay::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_BandAlipay& SC_BandAlipay::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_BandAlipay* SC_BandAlipay::New(::google::protobuf::Arena* arena) const {
  SC_BandAlipay* n = new SC_BandAlipay;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_BandAlipay::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_BandAlipay)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_alipay_account()) {
      GOOGLE_DCHECK(!alipay_account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_account_.UnsafeRawStringPointer())->clear();
    }
    if (has_alipay_name()) {
      GOOGLE_DCHECK(!alipay_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_name_.UnsafeRawStringPointer())->clear();
    }
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_BandAlipay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_BandAlipay)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_account().data(), this->alipay_account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_BandAlipay.alipay_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_name().data(), this->alipay_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_BandAlipay.alipay_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_BandAlipay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_BandAlipay)
  return false;
#undef DO_
}

void SC_BandAlipay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_BandAlipay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string alipay_account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account().data(), this->alipay_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_BandAlipay.alipay_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->alipay_account(), output);
  }

  // optional string alipay_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name().data(), this->alipay_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_BandAlipay.alipay_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->alipay_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_BandAlipay)
}

::google::protobuf::uint8* SC_BandAlipay::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_BandAlipay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string alipay_account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account().data(), this->alipay_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_BandAlipay.alipay_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->alipay_account(), target);
  }

  // optional string alipay_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name().data(), this->alipay_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_BandAlipay.alipay_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->alipay_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_BandAlipay)
  return target;
}

size_t SC_BandAlipay::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_BandAlipay)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string alipay_account = 2;
    if (has_alipay_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_account());
    }

    // optional string alipay_name = 3;
    if (has_alipay_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_name());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_BandAlipay::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_BandAlipay)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_BandAlipay* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_BandAlipay>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_BandAlipay)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_BandAlipay)
    MergeFrom(*source);
  }
}

void SC_BandAlipay::MergeFrom(const SC_BandAlipay& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_BandAlipay)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_alipay_account();
      alipay_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_alipay_name();
      alipay_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_BandAlipay::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_BandAlipay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_BandAlipay::CopyFrom(const SC_BandAlipay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_BandAlipay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_BandAlipay::IsInitialized() const {
  return true;
}

void SC_BandAlipay::Swap(SC_BandAlipay* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_BandAlipay::InternalSwap(SC_BandAlipay* other) {
  alipay_account_.Swap(&other->alipay_account_);
  alipay_name_.Swap(&other->alipay_name_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_BandAlipay::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_BandAlipay

// optional int32 result = 1;
bool SC_BandAlipay::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_BandAlipay::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_BandAlipay::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_BandAlipay::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_BandAlipay::result() const {
  // @@protoc_insertion_point(field_get:SC_BandAlipay.result)
  return result_;
}
void SC_BandAlipay::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BandAlipay.result)
}

// optional string alipay_account = 2;
bool SC_BandAlipay::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_BandAlipay::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_BandAlipay::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_BandAlipay::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
const ::std::string& SC_BandAlipay::alipay_account() const {
  // @@protoc_insertion_point(field_get:SC_BandAlipay.alipay_account)
  return alipay_account_.GetNoArena();
}
void SC_BandAlipay::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_BandAlipay.alipay_account)
}
#if LANG_CXX11
void SC_BandAlipay::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_BandAlipay.alipay_account)
}
#endif
void SC_BandAlipay::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_BandAlipay.alipay_account)
}
void SC_BandAlipay::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_BandAlipay.alipay_account)
}
::std::string* SC_BandAlipay::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:SC_BandAlipay.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_BandAlipay::release_alipay_account() {
  // @@protoc_insertion_point(field_release:SC_BandAlipay.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_BandAlipay::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:SC_BandAlipay.alipay_account)
}

// optional string alipay_name = 3;
bool SC_BandAlipay::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_BandAlipay::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_BandAlipay::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_BandAlipay::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
const ::std::string& SC_BandAlipay::alipay_name() const {
  // @@protoc_insertion_point(field_get:SC_BandAlipay.alipay_name)
  return alipay_name_.GetNoArena();
}
void SC_BandAlipay::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_BandAlipay.alipay_name)
}
#if LANG_CXX11
void SC_BandAlipay::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_BandAlipay.alipay_name)
}
#endif
void SC_BandAlipay::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_BandAlipay.alipay_name)
}
void SC_BandAlipay::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_BandAlipay.alipay_name)
}
::std::string* SC_BandAlipay::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:SC_BandAlipay.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_BandAlipay::release_alipay_name() {
  // @@protoc_insertion_point(field_release:SC_BandAlipay.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_BandAlipay::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:SC_BandAlipay.alipay_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_Trusteeship::kFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_Trusteeship::CS_Trusteeship()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_Trusteeship)
}
CS_Trusteeship::CS_Trusteeship(const CS_Trusteeship& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flag_ = from.flag_;
  // @@protoc_insertion_point(copy_constructor:CS_Trusteeship)
}

void CS_Trusteeship::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0;
}

CS_Trusteeship::~CS_Trusteeship() {
  // @@protoc_insertion_point(destructor:CS_Trusteeship)
  SharedDtor();
}

void CS_Trusteeship::SharedDtor() {
}

void CS_Trusteeship::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_Trusteeship::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_Trusteeship& CS_Trusteeship::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_Trusteeship* CS_Trusteeship::New(::google::protobuf::Arena* arena) const {
  CS_Trusteeship* n = new CS_Trusteeship;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_Trusteeship::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_Trusteeship)
  flag_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_Trusteeship::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_Trusteeship)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_flag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_Trusteeship)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_Trusteeship)
  return false;
#undef DO_
}

void CS_Trusteeship::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_Trusteeship)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 flag = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_Trusteeship)
}

::google::protobuf::uint8* CS_Trusteeship::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_Trusteeship)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 flag = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_Trusteeship)
  return target;
}

size_t CS_Trusteeship::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_Trusteeship)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 flag = 1;
  if (has_flag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_Trusteeship::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_Trusteeship)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_Trusteeship* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_Trusteeship>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_Trusteeship)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_Trusteeship)
    MergeFrom(*source);
  }
}

void CS_Trusteeship::MergeFrom(const CS_Trusteeship& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_Trusteeship)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_flag()) {
    set_flag(from.flag());
  }
}

void CS_Trusteeship::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_Trusteeship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_Trusteeship::CopyFrom(const CS_Trusteeship& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_Trusteeship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_Trusteeship::IsInitialized() const {
  return true;
}

void CS_Trusteeship::Swap(CS_Trusteeship* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_Trusteeship::InternalSwap(CS_Trusteeship* other) {
  std::swap(flag_, other->flag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_Trusteeship::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_Trusteeship

// optional int32 flag = 1;
bool CS_Trusteeship::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_Trusteeship::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_Trusteeship::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_Trusteeship::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
::google::protobuf::int32 CS_Trusteeship::flag() const {
  // @@protoc_insertion_point(field_get:CS_Trusteeship.flag)
  return flag_;
}
void CS_Trusteeship::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:CS_Trusteeship.flag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ShowTax::kFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ShowTax::SC_ShowTax()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ShowTax)
}
SC_ShowTax::SC_ShowTax(const SC_ShowTax& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flag_ = from.flag_;
  // @@protoc_insertion_point(copy_constructor:SC_ShowTax)
}

void SC_ShowTax::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0;
}

SC_ShowTax::~SC_ShowTax() {
  // @@protoc_insertion_point(destructor:SC_ShowTax)
  SharedDtor();
}

void SC_ShowTax::SharedDtor() {
}

void SC_ShowTax::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ShowTax::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ShowTax& SC_ShowTax::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ShowTax* SC_ShowTax::New(::google::protobuf::Arena* arena) const {
  SC_ShowTax* n = new SC_ShowTax;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ShowTax::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ShowTax)
  flag_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ShowTax::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ShowTax)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_flag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ShowTax)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ShowTax)
  return false;
#undef DO_
}

void SC_ShowTax::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ShowTax)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 flag = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ShowTax)
}

::google::protobuf::uint8* SC_ShowTax::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ShowTax)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 flag = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ShowTax)
  return target;
}

size_t SC_ShowTax::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ShowTax)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 flag = 1;
  if (has_flag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ShowTax::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ShowTax)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ShowTax* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ShowTax>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ShowTax)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ShowTax)
    MergeFrom(*source);
  }
}

void SC_ShowTax::MergeFrom(const SC_ShowTax& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ShowTax)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_flag()) {
    set_flag(from.flag());
  }
}

void SC_ShowTax::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ShowTax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ShowTax::CopyFrom(const SC_ShowTax& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ShowTax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ShowTax::IsInitialized() const {
  return true;
}

void SC_ShowTax::Swap(SC_ShowTax* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ShowTax::InternalSwap(SC_ShowTax* other) {
  std::swap(flag_, other->flag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ShowTax::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ShowTax

// optional int32 flag = 1;
bool SC_ShowTax::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ShowTax::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ShowTax::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ShowTax::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
::google::protobuf::int32 SC_ShowTax::flag() const {
  // @@protoc_insertion_point(field_get:SC_ShowTax.flag)
  return flag_;
}
void SC_ShowTax::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:SC_ShowTax.flag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SD_Delonline_player::kGuidFieldNumber;
const int SD_Delonline_player::kGameIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SD_Delonline_player::SD_Delonline_player()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SD_Delonline_player)
}
SD_Delonline_player::SD_Delonline_player(const SD_Delonline_player& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    reinterpret_cast<char*>(&game_id_) -
    reinterpret_cast<char*>(&guid_) + sizeof(game_id_));
  // @@protoc_insertion_point(copy_constructor:SD_Delonline_player)
}

void SD_Delonline_player::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&guid_, 0, reinterpret_cast<char*>(&game_id_) -
    reinterpret_cast<char*>(&guid_) + sizeof(game_id_));
}

SD_Delonline_player::~SD_Delonline_player() {
  // @@protoc_insertion_point(destructor:SD_Delonline_player)
  SharedDtor();
}

void SD_Delonline_player::SharedDtor() {
}

void SD_Delonline_player::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SD_Delonline_player::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SD_Delonline_player& SD_Delonline_player::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SD_Delonline_player* SD_Delonline_player::New(::google::protobuf::Arena* arena) const {
  SD_Delonline_player* n = new SD_Delonline_player;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SD_Delonline_player::Clear() {
// @@protoc_insertion_point(message_clear_start:SD_Delonline_player)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&guid_, 0, reinterpret_cast<char*>(&game_id_) -
      reinterpret_cast<char*>(&guid_) + sizeof(game_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SD_Delonline_player::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SD_Delonline_player)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 game_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SD_Delonline_player)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SD_Delonline_player)
  return false;
#undef DO_
}

void SD_Delonline_player::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SD_Delonline_player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guid(), output);
  }

  // optional int32 game_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->game_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SD_Delonline_player)
}

::google::protobuf::uint8* SD_Delonline_player::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SD_Delonline_player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guid(), target);
  }

  // optional int32 game_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->game_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SD_Delonline_player)
  return target;
}

size_t SD_Delonline_player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SD_Delonline_player)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

    // optional int32 game_id = 2;
    if (has_game_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SD_Delonline_player::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SD_Delonline_player)
  GOOGLE_DCHECK_NE(&from, this);
  const SD_Delonline_player* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SD_Delonline_player>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SD_Delonline_player)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SD_Delonline_player)
    MergeFrom(*source);
  }
}

void SD_Delonline_player::MergeFrom(const SD_Delonline_player& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SD_Delonline_player)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      game_id_ = from.game_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SD_Delonline_player::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SD_Delonline_player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SD_Delonline_player::CopyFrom(const SD_Delonline_player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SD_Delonline_player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SD_Delonline_player::IsInitialized() const {
  return true;
}

void SD_Delonline_player::Swap(SD_Delonline_player* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SD_Delonline_player::InternalSwap(SD_Delonline_player* other) {
  std::swap(guid_, other->guid_);
  std::swap(game_id_, other->game_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SD_Delonline_player::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SD_Delonline_player

// optional int32 guid = 1;
bool SD_Delonline_player::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SD_Delonline_player::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void SD_Delonline_player::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SD_Delonline_player::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 SD_Delonline_player::guid() const {
  // @@protoc_insertion_point(field_get:SD_Delonline_player.guid)
  return guid_;
}
void SD_Delonline_player::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_Delonline_player.guid)
}

// optional int32 game_id = 2;
bool SD_Delonline_player::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SD_Delonline_player::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SD_Delonline_player::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SD_Delonline_player::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
::google::protobuf::int32 SD_Delonline_player::game_id() const {
  // @@protoc_insertion_point(field_get:SD_Delonline_player.game_id)
  return game_id_;
}
void SD_Delonline_player::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SD_Delonline_player.game_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_AlipayEdit::kGuidFieldNumber;
const int SC_AlipayEdit::kAlipayNameFieldNumber;
const int SC_AlipayEdit::kAlipayNameYFieldNumber;
const int SC_AlipayEdit::kAlipayAccountFieldNumber;
const int SC_AlipayEdit::kAlipayAccountYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_AlipayEdit::SC_AlipayEdit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_AlipayEdit)
}
SC_AlipayEdit::SC_AlipayEdit(const SC_AlipayEdit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  alipay_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_name()) {
    alipay_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_);
  }
  alipay_name_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_name_y()) {
    alipay_name_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_y_);
  }
  alipay_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_account()) {
    alipay_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_);
  }
  alipay_account_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_account_y()) {
    alipay_account_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_y_);
  }
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:SC_AlipayEdit)
}

void SC_AlipayEdit::SharedCtor() {
  _cached_size_ = 0;
  alipay_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_account_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_ = 0;
}

SC_AlipayEdit::~SC_AlipayEdit() {
  // @@protoc_insertion_point(destructor:SC_AlipayEdit)
  SharedDtor();
}

void SC_AlipayEdit::SharedDtor() {
  alipay_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_account_y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_AlipayEdit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_AlipayEdit::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_AlipayEdit& SC_AlipayEdit::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_AlipayEdit* SC_AlipayEdit::New(::google::protobuf::Arena* arena) const {
  SC_AlipayEdit* n = new SC_AlipayEdit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_AlipayEdit::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_AlipayEdit)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_alipay_name()) {
      GOOGLE_DCHECK(!alipay_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_alipay_name_y()) {
      GOOGLE_DCHECK(!alipay_name_y_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_name_y_.UnsafeRawStringPointer())->clear();
    }
    if (has_alipay_account()) {
      GOOGLE_DCHECK(!alipay_account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_account_.UnsafeRawStringPointer())->clear();
    }
    if (has_alipay_account_y()) {
      GOOGLE_DCHECK(!alipay_account_y_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_account_y_.UnsafeRawStringPointer())->clear();
    }
  }
  guid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_AlipayEdit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_AlipayEdit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_name().data(), this->alipay_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_AlipayEdit.alipay_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_name_y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_name_y()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_name_y().data(), this->alipay_name_y().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_AlipayEdit.alipay_name_y");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_account = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_account().data(), this->alipay_account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_AlipayEdit.alipay_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_account_y = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_account_y()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_account_y().data(), this->alipay_account_y().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_AlipayEdit.alipay_account_y");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_AlipayEdit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_AlipayEdit)
  return false;
#undef DO_
}

void SC_AlipayEdit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_AlipayEdit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guid(), output);
  }

  // optional string alipay_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name().data(), this->alipay_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_AlipayEdit.alipay_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->alipay_name(), output);
  }

  // optional string alipay_name_y = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name_y().data(), this->alipay_name_y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_AlipayEdit.alipay_name_y");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->alipay_name_y(), output);
  }

  // optional string alipay_account = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account().data(), this->alipay_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_AlipayEdit.alipay_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->alipay_account(), output);
  }

  // optional string alipay_account_y = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account_y().data(), this->alipay_account_y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_AlipayEdit.alipay_account_y");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->alipay_account_y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_AlipayEdit)
}

::google::protobuf::uint8* SC_AlipayEdit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_AlipayEdit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guid(), target);
  }

  // optional string alipay_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name().data(), this->alipay_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_AlipayEdit.alipay_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->alipay_name(), target);
  }

  // optional string alipay_name_y = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name_y().data(), this->alipay_name_y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_AlipayEdit.alipay_name_y");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->alipay_name_y(), target);
  }

  // optional string alipay_account = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account().data(), this->alipay_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_AlipayEdit.alipay_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->alipay_account(), target);
  }

  // optional string alipay_account_y = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account_y().data(), this->alipay_account_y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_AlipayEdit.alipay_account_y");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->alipay_account_y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_AlipayEdit)
  return target;
}

size_t SC_AlipayEdit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_AlipayEdit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string alipay_name = 2;
    if (has_alipay_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_name());
    }

    // optional string alipay_name_y = 3;
    if (has_alipay_name_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_name_y());
    }

    // optional string alipay_account = 4;
    if (has_alipay_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_account());
    }

    // optional string alipay_account_y = 5;
    if (has_alipay_account_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_account_y());
    }

    // optional int32 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_AlipayEdit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_AlipayEdit)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_AlipayEdit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_AlipayEdit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_AlipayEdit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_AlipayEdit)
    MergeFrom(*source);
  }
}

void SC_AlipayEdit::MergeFrom(const SC_AlipayEdit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_AlipayEdit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_alipay_name();
      alipay_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_alipay_name_y();
      alipay_name_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_y_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_alipay_account();
      alipay_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_alipay_account_y();
      alipay_account_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_y_);
    }
    if (cached_has_bits & 0x00000010u) {
      guid_ = from.guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_AlipayEdit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_AlipayEdit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_AlipayEdit::CopyFrom(const SC_AlipayEdit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_AlipayEdit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_AlipayEdit::IsInitialized() const {
  return true;
}

void SC_AlipayEdit::Swap(SC_AlipayEdit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_AlipayEdit::InternalSwap(SC_AlipayEdit* other) {
  alipay_name_.Swap(&other->alipay_name_);
  alipay_name_y_.Swap(&other->alipay_name_y_);
  alipay_account_.Swap(&other->alipay_account_);
  alipay_account_y_.Swap(&other->alipay_account_y_);
  std::swap(guid_, other->guid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_AlipayEdit::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_AlipayEdit

// optional int32 guid = 1;
bool SC_AlipayEdit::has_guid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SC_AlipayEdit::set_has_guid() {
  _has_bits_[0] |= 0x00000010u;
}
void SC_AlipayEdit::clear_has_guid() {
  _has_bits_[0] &= ~0x00000010u;
}
void SC_AlipayEdit::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 SC_AlipayEdit::guid() const {
  // @@protoc_insertion_point(field_get:SC_AlipayEdit.guid)
  return guid_;
}
void SC_AlipayEdit::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SC_AlipayEdit.guid)
}

// optional string alipay_name = 2;
bool SC_AlipayEdit::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_AlipayEdit::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_AlipayEdit::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_AlipayEdit::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
const ::std::string& SC_AlipayEdit::alipay_name() const {
  // @@protoc_insertion_point(field_get:SC_AlipayEdit.alipay_name)
  return alipay_name_.GetNoArena();
}
void SC_AlipayEdit::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_AlipayEdit.alipay_name)
}
#if LANG_CXX11
void SC_AlipayEdit::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_AlipayEdit.alipay_name)
}
#endif
void SC_AlipayEdit::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_AlipayEdit.alipay_name)
}
void SC_AlipayEdit::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_AlipayEdit.alipay_name)
}
::std::string* SC_AlipayEdit::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:SC_AlipayEdit.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_AlipayEdit::release_alipay_name() {
  // @@protoc_insertion_point(field_release:SC_AlipayEdit.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_AlipayEdit::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:SC_AlipayEdit.alipay_name)
}

// optional string alipay_name_y = 3;
bool SC_AlipayEdit::has_alipay_name_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_AlipayEdit::set_has_alipay_name_y() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_AlipayEdit::clear_has_alipay_name_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_AlipayEdit::clear_alipay_name_y() {
  alipay_name_y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name_y();
}
const ::std::string& SC_AlipayEdit::alipay_name_y() const {
  // @@protoc_insertion_point(field_get:SC_AlipayEdit.alipay_name_y)
  return alipay_name_y_.GetNoArena();
}
void SC_AlipayEdit::set_alipay_name_y(const ::std::string& value) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_AlipayEdit.alipay_name_y)
}
#if LANG_CXX11
void SC_AlipayEdit::set_alipay_name_y(::std::string&& value) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_AlipayEdit.alipay_name_y)
}
#endif
void SC_AlipayEdit::set_alipay_name_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_AlipayEdit.alipay_name_y)
}
void SC_AlipayEdit::set_alipay_name_y(const char* value, size_t size) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_AlipayEdit.alipay_name_y)
}
::std::string* SC_AlipayEdit::mutable_alipay_name_y() {
  set_has_alipay_name_y();
  // @@protoc_insertion_point(field_mutable:SC_AlipayEdit.alipay_name_y)
  return alipay_name_y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_AlipayEdit::release_alipay_name_y() {
  // @@protoc_insertion_point(field_release:SC_AlipayEdit.alipay_name_y)
  clear_has_alipay_name_y();
  return alipay_name_y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_AlipayEdit::set_allocated_alipay_name_y(::std::string* alipay_name_y) {
  if (alipay_name_y != NULL) {
    set_has_alipay_name_y();
  } else {
    clear_has_alipay_name_y();
  }
  alipay_name_y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name_y);
  // @@protoc_insertion_point(field_set_allocated:SC_AlipayEdit.alipay_name_y)
}

// optional string alipay_account = 4;
bool SC_AlipayEdit::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_AlipayEdit::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_AlipayEdit::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_AlipayEdit::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
const ::std::string& SC_AlipayEdit::alipay_account() const {
  // @@protoc_insertion_point(field_get:SC_AlipayEdit.alipay_account)
  return alipay_account_.GetNoArena();
}
void SC_AlipayEdit::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_AlipayEdit.alipay_account)
}
#if LANG_CXX11
void SC_AlipayEdit::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_AlipayEdit.alipay_account)
}
#endif
void SC_AlipayEdit::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_AlipayEdit.alipay_account)
}
void SC_AlipayEdit::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_AlipayEdit.alipay_account)
}
::std::string* SC_AlipayEdit::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:SC_AlipayEdit.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_AlipayEdit::release_alipay_account() {
  // @@protoc_insertion_point(field_release:SC_AlipayEdit.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_AlipayEdit::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:SC_AlipayEdit.alipay_account)
}

// optional string alipay_account_y = 5;
bool SC_AlipayEdit::has_alipay_account_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_AlipayEdit::set_has_alipay_account_y() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_AlipayEdit::clear_has_alipay_account_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_AlipayEdit::clear_alipay_account_y() {
  alipay_account_y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account_y();
}
const ::std::string& SC_AlipayEdit::alipay_account_y() const {
  // @@protoc_insertion_point(field_get:SC_AlipayEdit.alipay_account_y)
  return alipay_account_y_.GetNoArena();
}
void SC_AlipayEdit::set_alipay_account_y(const ::std::string& value) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_AlipayEdit.alipay_account_y)
}
#if LANG_CXX11
void SC_AlipayEdit::set_alipay_account_y(::std::string&& value) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_AlipayEdit.alipay_account_y)
}
#endif
void SC_AlipayEdit::set_alipay_account_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_AlipayEdit.alipay_account_y)
}
void SC_AlipayEdit::set_alipay_account_y(const char* value, size_t size) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_AlipayEdit.alipay_account_y)
}
::std::string* SC_AlipayEdit::mutable_alipay_account_y() {
  set_has_alipay_account_y();
  // @@protoc_insertion_point(field_mutable:SC_AlipayEdit.alipay_account_y)
  return alipay_account_y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_AlipayEdit::release_alipay_account_y() {
  // @@protoc_insertion_point(field_release:SC_AlipayEdit.alipay_account_y)
  clear_has_alipay_account_y();
  return alipay_account_y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_AlipayEdit::set_allocated_alipay_account_y(::std::string* alipay_account_y) {
  if (alipay_account_y != NULL) {
    set_has_alipay_account_y();
  } else {
    clear_has_alipay_account_y();
  }
  alipay_account_y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account_y);
  // @@protoc_insertion_point(field_set_allocated:SC_AlipayEdit.alipay_account_y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_BrocastClientUpdateInfo::kUpdateInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_BrocastClientUpdateInfo::SC_BrocastClientUpdateInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_BrocastClientUpdateInfo)
}
SC_BrocastClientUpdateInfo::SC_BrocastClientUpdateInfo(const SC_BrocastClientUpdateInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  update_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_update_info()) {
    update_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.update_info_);
  }
  // @@protoc_insertion_point(copy_constructor:SC_BrocastClientUpdateInfo)
}

void SC_BrocastClientUpdateInfo::SharedCtor() {
  _cached_size_ = 0;
  update_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SC_BrocastClientUpdateInfo::~SC_BrocastClientUpdateInfo() {
  // @@protoc_insertion_point(destructor:SC_BrocastClientUpdateInfo)
  SharedDtor();
}

void SC_BrocastClientUpdateInfo::SharedDtor() {
  update_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_BrocastClientUpdateInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_BrocastClientUpdateInfo::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_BrocastClientUpdateInfo& SC_BrocastClientUpdateInfo::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_BrocastClientUpdateInfo* SC_BrocastClientUpdateInfo::New(::google::protobuf::Arena* arena) const {
  SC_BrocastClientUpdateInfo* n = new SC_BrocastClientUpdateInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_BrocastClientUpdateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_BrocastClientUpdateInfo)
  if (has_update_info()) {
    GOOGLE_DCHECK(!update_info_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*update_info_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_BrocastClientUpdateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_BrocastClientUpdateInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string update_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_update_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->update_info().data(), this->update_info().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_BrocastClientUpdateInfo.update_info");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_BrocastClientUpdateInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_BrocastClientUpdateInfo)
  return false;
#undef DO_
}

void SC_BrocastClientUpdateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_BrocastClientUpdateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string update_info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->update_info().data(), this->update_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_BrocastClientUpdateInfo.update_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->update_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_BrocastClientUpdateInfo)
}

::google::protobuf::uint8* SC_BrocastClientUpdateInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_BrocastClientUpdateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string update_info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->update_info().data(), this->update_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_BrocastClientUpdateInfo.update_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->update_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_BrocastClientUpdateInfo)
  return target;
}

size_t SC_BrocastClientUpdateInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_BrocastClientUpdateInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string update_info = 1;
  if (has_update_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->update_info());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_BrocastClientUpdateInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_BrocastClientUpdateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_BrocastClientUpdateInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_BrocastClientUpdateInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_BrocastClientUpdateInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_BrocastClientUpdateInfo)
    MergeFrom(*source);
  }
}

void SC_BrocastClientUpdateInfo::MergeFrom(const SC_BrocastClientUpdateInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_BrocastClientUpdateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_update_info()) {
    set_has_update_info();
    update_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.update_info_);
  }
}

void SC_BrocastClientUpdateInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_BrocastClientUpdateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_BrocastClientUpdateInfo::CopyFrom(const SC_BrocastClientUpdateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_BrocastClientUpdateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_BrocastClientUpdateInfo::IsInitialized() const {
  return true;
}

void SC_BrocastClientUpdateInfo::Swap(SC_BrocastClientUpdateInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_BrocastClientUpdateInfo::InternalSwap(SC_BrocastClientUpdateInfo* other) {
  update_info_.Swap(&other->update_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_BrocastClientUpdateInfo::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_BrocastClientUpdateInfo

// optional string update_info = 1;
bool SC_BrocastClientUpdateInfo::has_update_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_BrocastClientUpdateInfo::set_has_update_info() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_BrocastClientUpdateInfo::clear_has_update_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_BrocastClientUpdateInfo::clear_update_info() {
  update_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_update_info();
}
const ::std::string& SC_BrocastClientUpdateInfo::update_info() const {
  // @@protoc_insertion_point(field_get:SC_BrocastClientUpdateInfo.update_info)
  return update_info_.GetNoArena();
}
void SC_BrocastClientUpdateInfo::set_update_info(const ::std::string& value) {
  set_has_update_info();
  update_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_BrocastClientUpdateInfo.update_info)
}
#if LANG_CXX11
void SC_BrocastClientUpdateInfo::set_update_info(::std::string&& value) {
  set_has_update_info();
  update_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_BrocastClientUpdateInfo.update_info)
}
#endif
void SC_BrocastClientUpdateInfo::set_update_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_update_info();
  update_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_BrocastClientUpdateInfo.update_info)
}
void SC_BrocastClientUpdateInfo::set_update_info(const char* value, size_t size) {
  set_has_update_info();
  update_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_BrocastClientUpdateInfo.update_info)
}
::std::string* SC_BrocastClientUpdateInfo::mutable_update_info() {
  set_has_update_info();
  // @@protoc_insertion_point(field_mutable:SC_BrocastClientUpdateInfo.update_info)
  return update_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_BrocastClientUpdateInfo::release_update_info() {
  // @@protoc_insertion_point(field_release:SC_BrocastClientUpdateInfo.update_info)
  clear_has_update_info();
  return update_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_BrocastClientUpdateInfo::set_allocated_update_info(::std::string* update_info) {
  if (update_info != NULL) {
    set_has_update_info();
  } else {
    clear_has_update_info();
  }
  update_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), update_info);
  // @@protoc_insertion_point(field_set_allocated:SC_BrocastClientUpdateInfo.update_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_FreezeAccount::kGuidFieldNumber;
const int SC_FreezeAccount::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_FreezeAccount::SC_FreezeAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_FreezeAccount)
}
SC_FreezeAccount::SC_FreezeAccount(const SC_FreezeAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&guid_) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:SC_FreezeAccount)
}

void SC_FreezeAccount::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&guid_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&guid_) + sizeof(status_));
}

SC_FreezeAccount::~SC_FreezeAccount() {
  // @@protoc_insertion_point(destructor:SC_FreezeAccount)
  SharedDtor();
}

void SC_FreezeAccount::SharedDtor() {
}

void SC_FreezeAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_FreezeAccount::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_FreezeAccount& SC_FreezeAccount::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_FreezeAccount* SC_FreezeAccount::New(::google::protobuf::Arena* arena) const {
  SC_FreezeAccount* n = new SC_FreezeAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_FreezeAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_FreezeAccount)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&guid_, 0, reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&guid_) + sizeof(status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_FreezeAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_FreezeAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_FreezeAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_FreezeAccount)
  return false;
#undef DO_
}

void SC_FreezeAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_FreezeAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guid(), output);
  }

  // optional int32 status = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_FreezeAccount)
}

::google::protobuf::uint8* SC_FreezeAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_FreezeAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guid(), target);
  }

  // optional int32 status = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_FreezeAccount)
  return target;
}

size_t SC_FreezeAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_FreezeAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

    // optional int32 status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_FreezeAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_FreezeAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_FreezeAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_FreezeAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_FreezeAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_FreezeAccount)
    MergeFrom(*source);
  }
}

void SC_FreezeAccount::MergeFrom(const SC_FreezeAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_FreezeAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_FreezeAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_FreezeAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_FreezeAccount::CopyFrom(const SC_FreezeAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_FreezeAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_FreezeAccount::IsInitialized() const {
  return true;
}

void SC_FreezeAccount::Swap(SC_FreezeAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_FreezeAccount::InternalSwap(SC_FreezeAccount* other) {
  std::swap(guid_, other->guid_);
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_FreezeAccount::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_FreezeAccount

// optional int32 guid = 1;
bool SC_FreezeAccount::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_FreezeAccount::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_FreezeAccount::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_FreezeAccount::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 SC_FreezeAccount::guid() const {
  // @@protoc_insertion_point(field_get:SC_FreezeAccount.guid)
  return guid_;
}
void SC_FreezeAccount::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SC_FreezeAccount.guid)
}

// optional int32 status = 2;
bool SC_FreezeAccount::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_FreezeAccount::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_FreezeAccount::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_FreezeAccount::clear_status() {
  status_ = 0;
  clear_has_status();
}
::google::protobuf::int32 SC_FreezeAccount::status() const {
  // @@protoc_insertion_point(field_get:SC_FreezeAccount.status)
  return status_;
}
void SC_FreezeAccount::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:SC_FreezeAccount.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_GameMaintain::kResultFieldNumber;
const int SC_GameMaintain::kFirstGameTypeFieldNumber;
const int SC_GameMaintain::kSecondGameTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_GameMaintain::SC_GameMaintain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_GameMaintain)
}
SC_GameMaintain::SC_GameMaintain(const SC_GameMaintain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    reinterpret_cast<char*>(&second_game_type_) -
    reinterpret_cast<char*>(&result_) + sizeof(second_game_type_));
  // @@protoc_insertion_point(copy_constructor:SC_GameMaintain)
}

void SC_GameMaintain::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&result_, 0, reinterpret_cast<char*>(&second_game_type_) -
    reinterpret_cast<char*>(&result_) + sizeof(second_game_type_));
}

SC_GameMaintain::~SC_GameMaintain() {
  // @@protoc_insertion_point(destructor:SC_GameMaintain)
  SharedDtor();
}

void SC_GameMaintain::SharedDtor() {
}

void SC_GameMaintain::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_GameMaintain::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_GameMaintain& SC_GameMaintain::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_GameMaintain* SC_GameMaintain::New(::google::protobuf::Arena* arena) const {
  SC_GameMaintain* n = new SC_GameMaintain;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_GameMaintain::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_GameMaintain)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&result_, 0, reinterpret_cast<char*>(&second_game_type_) -
      reinterpret_cast<char*>(&result_) + sizeof(second_game_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_GameMaintain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_GameMaintain)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 first_game_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_first_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 second_game_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_second_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_GameMaintain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_GameMaintain)
  return false;
#undef DO_
}

void SC_GameMaintain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_GameMaintain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 first_game_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->first_game_type(), output);
  }

  // optional int32 second_game_type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->second_game_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_GameMaintain)
}

::google::protobuf::uint8* SC_GameMaintain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_GameMaintain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 first_game_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->first_game_type(), target);
  }

  // optional int32 second_game_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->second_game_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_GameMaintain)
  return target;
}

size_t SC_GameMaintain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_GameMaintain)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 first_game_type = 2;
    if (has_first_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_game_type());
    }

    // optional int32 second_game_type = 3;
    if (has_second_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_game_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_GameMaintain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_GameMaintain)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_GameMaintain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_GameMaintain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_GameMaintain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_GameMaintain)
    MergeFrom(*source);
  }
}

void SC_GameMaintain::MergeFrom(const SC_GameMaintain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_GameMaintain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      first_game_type_ = from.first_game_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      second_game_type_ = from.second_game_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_GameMaintain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_GameMaintain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_GameMaintain::CopyFrom(const SC_GameMaintain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_GameMaintain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_GameMaintain::IsInitialized() const {
  return true;
}

void SC_GameMaintain::Swap(SC_GameMaintain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_GameMaintain::InternalSwap(SC_GameMaintain* other) {
  std::swap(result_, other->result_);
  std::swap(first_game_type_, other->first_game_type_);
  std::swap(second_game_type_, other->second_game_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_GameMaintain::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_GameMaintain

// optional int32 result = 1;
bool SC_GameMaintain::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_GameMaintain::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_GameMaintain::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_GameMaintain::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_GameMaintain::result() const {
  // @@protoc_insertion_point(field_get:SC_GameMaintain.result)
  return result_;
}
void SC_GameMaintain::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_GameMaintain.result)
}

// optional int32 first_game_type = 2;
bool SC_GameMaintain::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_GameMaintain::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_GameMaintain::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_GameMaintain::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
::google::protobuf::int32 SC_GameMaintain::first_game_type() const {
  // @@protoc_insertion_point(field_get:SC_GameMaintain.first_game_type)
  return first_game_type_;
}
void SC_GameMaintain::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_GameMaintain.first_game_type)
}

// optional int32 second_game_type = 3;
bool SC_GameMaintain::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_GameMaintain::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_GameMaintain::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_GameMaintain::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
::google::protobuf::int32 SC_GameMaintain::second_game_type() const {
  // @@protoc_insertion_point(field_get:SC_GameMaintain.second_game_type)
  return second_game_type_;
}
void SC_GameMaintain::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_GameMaintain.second_game_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_CashMaintain::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_CashMaintain::SC_CashMaintain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_CashMaintain)
}
SC_CashMaintain::SC_CashMaintain(const SC_CashMaintain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SC_CashMaintain)
}

void SC_CashMaintain::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
}

SC_CashMaintain::~SC_CashMaintain() {
  // @@protoc_insertion_point(destructor:SC_CashMaintain)
  SharedDtor();
}

void SC_CashMaintain::SharedDtor() {
}

void SC_CashMaintain::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_CashMaintain::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_CashMaintain& SC_CashMaintain::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_CashMaintain* SC_CashMaintain::New(::google::protobuf::Arena* arena) const {
  SC_CashMaintain* n = new SC_CashMaintain;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_CashMaintain::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_CashMaintain)
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_CashMaintain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_CashMaintain)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_CashMaintain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_CashMaintain)
  return false;
#undef DO_
}

void SC_CashMaintain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_CashMaintain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_CashMaintain)
}

::google::protobuf::uint8* SC_CashMaintain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_CashMaintain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_CashMaintain)
  return target;
}

size_t SC_CashMaintain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_CashMaintain)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_CashMaintain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_CashMaintain)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_CashMaintain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_CashMaintain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_CashMaintain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_CashMaintain)
    MergeFrom(*source);
  }
}

void SC_CashMaintain::MergeFrom(const SC_CashMaintain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_CashMaintain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void SC_CashMaintain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_CashMaintain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_CashMaintain::CopyFrom(const SC_CashMaintain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_CashMaintain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_CashMaintain::IsInitialized() const {
  return true;
}

void SC_CashMaintain::Swap(SC_CashMaintain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_CashMaintain::InternalSwap(SC_CashMaintain* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_CashMaintain::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_CashMaintain

// optional int32 result = 1;
bool SC_CashMaintain::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_CashMaintain::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_CashMaintain::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_CashMaintain::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_CashMaintain::result() const {
  // @@protoc_insertion_point(field_get:SC_CashMaintain.result)
  return result_;
}
void SC_CashMaintain::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_CashMaintain.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_GetHelpMoney::kGetRightnowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_GetHelpMoney::CS_GetHelpMoney()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_GetHelpMoney)
}
CS_GetHelpMoney::CS_GetHelpMoney(const CS_GetHelpMoney& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  get_rightnow_ = from.get_rightnow_;
  // @@protoc_insertion_point(copy_constructor:CS_GetHelpMoney)
}

void CS_GetHelpMoney::SharedCtor() {
  _cached_size_ = 0;
  get_rightnow_ = 0;
}

CS_GetHelpMoney::~CS_GetHelpMoney() {
  // @@protoc_insertion_point(destructor:CS_GetHelpMoney)
  SharedDtor();
}

void CS_GetHelpMoney::SharedDtor() {
}

void CS_GetHelpMoney::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_GetHelpMoney::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_GetHelpMoney& CS_GetHelpMoney::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_GetHelpMoney* CS_GetHelpMoney::New(::google::protobuf::Arena* arena) const {
  CS_GetHelpMoney* n = new CS_GetHelpMoney;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_GetHelpMoney::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_GetHelpMoney)
  get_rightnow_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_GetHelpMoney::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_GetHelpMoney)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 get_rightnow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_get_rightnow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &get_rightnow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_GetHelpMoney)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_GetHelpMoney)
  return false;
#undef DO_
}

void CS_GetHelpMoney::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_GetHelpMoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 get_rightnow = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->get_rightnow(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_GetHelpMoney)
}

::google::protobuf::uint8* CS_GetHelpMoney::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_GetHelpMoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 get_rightnow = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->get_rightnow(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_GetHelpMoney)
  return target;
}

size_t CS_GetHelpMoney::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_GetHelpMoney)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 get_rightnow = 1;
  if (has_get_rightnow()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->get_rightnow());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_GetHelpMoney::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_GetHelpMoney)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_GetHelpMoney* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_GetHelpMoney>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_GetHelpMoney)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_GetHelpMoney)
    MergeFrom(*source);
  }
}

void CS_GetHelpMoney::MergeFrom(const CS_GetHelpMoney& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_GetHelpMoney)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_get_rightnow()) {
    set_get_rightnow(from.get_rightnow());
  }
}

void CS_GetHelpMoney::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_GetHelpMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_GetHelpMoney::CopyFrom(const CS_GetHelpMoney& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_GetHelpMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_GetHelpMoney::IsInitialized() const {
  return true;
}

void CS_GetHelpMoney::Swap(CS_GetHelpMoney* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_GetHelpMoney::InternalSwap(CS_GetHelpMoney* other) {
  std::swap(get_rightnow_, other->get_rightnow_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_GetHelpMoney::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_GetHelpMoney

// optional int32 get_rightnow = 1;
bool CS_GetHelpMoney::has_get_rightnow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_GetHelpMoney::set_has_get_rightnow() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_GetHelpMoney::clear_has_get_rightnow() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_GetHelpMoney::clear_get_rightnow() {
  get_rightnow_ = 0;
  clear_has_get_rightnow();
}
::google::protobuf::int32 CS_GetHelpMoney::get_rightnow() const {
  // @@protoc_insertion_point(field_get:CS_GetHelpMoney.get_rightnow)
  return get_rightnow_;
}
void CS_GetHelpMoney::set_get_rightnow(::google::protobuf::int32 value) {
  set_has_get_rightnow();
  get_rightnow_ = value;
  // @@protoc_insertion_point(field_set:CS_GetHelpMoney.get_rightnow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_GetHelpMoney::kResultCashFieldNumber;
const int SC_GetHelpMoney::kLeftTimesFieldNumber;
const int SC_GetHelpMoney::kCashMoneyFieldNumber;
const int SC_GetHelpMoney::kMoneyMustLessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_GetHelpMoney::SC_GetHelpMoney()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_GetHelpMoney)
}
SC_GetHelpMoney::SC_GetHelpMoney(const SC_GetHelpMoney& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_cash_, &from.result_cash_,
    reinterpret_cast<char*>(&money_must_less_) -
    reinterpret_cast<char*>(&result_cash_) + sizeof(money_must_less_));
  // @@protoc_insertion_point(copy_constructor:SC_GetHelpMoney)
}

void SC_GetHelpMoney::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&result_cash_, 0, reinterpret_cast<char*>(&money_must_less_) -
    reinterpret_cast<char*>(&result_cash_) + sizeof(money_must_less_));
}

SC_GetHelpMoney::~SC_GetHelpMoney() {
  // @@protoc_insertion_point(destructor:SC_GetHelpMoney)
  SharedDtor();
}

void SC_GetHelpMoney::SharedDtor() {
}

void SC_GetHelpMoney::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_GetHelpMoney::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_GetHelpMoney& SC_GetHelpMoney::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_GetHelpMoney* SC_GetHelpMoney::New(::google::protobuf::Arena* arena) const {
  SC_GetHelpMoney* n = new SC_GetHelpMoney;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_GetHelpMoney::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_GetHelpMoney)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&result_cash_, 0, reinterpret_cast<char*>(&money_must_less_) -
      reinterpret_cast<char*>(&result_cash_) + sizeof(money_must_less_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_GetHelpMoney::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_GetHelpMoney)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result_cash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result_cash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_cash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 left_times = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_left_times();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_times_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cash_money = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_cash_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cash_money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 money_must_less = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_money_must_less();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_must_less_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_GetHelpMoney)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_GetHelpMoney)
  return false;
#undef DO_
}

void SC_GetHelpMoney::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_GetHelpMoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result_cash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result_cash(), output);
  }

  // optional int32 left_times = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_times(), output);
  }

  // optional int32 cash_money = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cash_money(), output);
  }

  // optional int32 money_must_less = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->money_must_less(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_GetHelpMoney)
}

::google::protobuf::uint8* SC_GetHelpMoney::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_GetHelpMoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result_cash = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result_cash(), target);
  }

  // optional int32 left_times = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_times(), target);
  }

  // optional int32 cash_money = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cash_money(), target);
  }

  // optional int32 money_must_less = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->money_must_less(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_GetHelpMoney)
  return target;
}

size_t SC_GetHelpMoney::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_GetHelpMoney)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 result_cash = 1;
    if (has_result_cash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result_cash());
    }

    // optional int32 left_times = 2;
    if (has_left_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_times());
    }

    // optional int32 cash_money = 3;
    if (has_cash_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cash_money());
    }

    // optional int32 money_must_less = 4;
    if (has_money_must_less()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money_must_less());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_GetHelpMoney::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_GetHelpMoney)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_GetHelpMoney* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_GetHelpMoney>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_GetHelpMoney)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_GetHelpMoney)
    MergeFrom(*source);
  }
}

void SC_GetHelpMoney::MergeFrom(const SC_GetHelpMoney& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_GetHelpMoney)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      result_cash_ = from.result_cash_;
    }
    if (cached_has_bits & 0x00000002u) {
      left_times_ = from.left_times_;
    }
    if (cached_has_bits & 0x00000004u) {
      cash_money_ = from.cash_money_;
    }
    if (cached_has_bits & 0x00000008u) {
      money_must_less_ = from.money_must_less_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_GetHelpMoney::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_GetHelpMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_GetHelpMoney::CopyFrom(const SC_GetHelpMoney& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_GetHelpMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_GetHelpMoney::IsInitialized() const {
  return true;
}

void SC_GetHelpMoney::Swap(SC_GetHelpMoney* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_GetHelpMoney::InternalSwap(SC_GetHelpMoney* other) {
  std::swap(result_cash_, other->result_cash_);
  std::swap(left_times_, other->left_times_);
  std::swap(cash_money_, other->cash_money_);
  std::swap(money_must_less_, other->money_must_less_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_GetHelpMoney::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_GetHelpMoney

// optional int32 result_cash = 1;
bool SC_GetHelpMoney::has_result_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_GetHelpMoney::set_has_result_cash() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_GetHelpMoney::clear_has_result_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_GetHelpMoney::clear_result_cash() {
  result_cash_ = 0;
  clear_has_result_cash();
}
::google::protobuf::int32 SC_GetHelpMoney::result_cash() const {
  // @@protoc_insertion_point(field_get:SC_GetHelpMoney.result_cash)
  return result_cash_;
}
void SC_GetHelpMoney::set_result_cash(::google::protobuf::int32 value) {
  set_has_result_cash();
  result_cash_ = value;
  // @@protoc_insertion_point(field_set:SC_GetHelpMoney.result_cash)
}

// optional int32 left_times = 2;
bool SC_GetHelpMoney::has_left_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_GetHelpMoney::set_has_left_times() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_GetHelpMoney::clear_has_left_times() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_GetHelpMoney::clear_left_times() {
  left_times_ = 0;
  clear_has_left_times();
}
::google::protobuf::int32 SC_GetHelpMoney::left_times() const {
  // @@protoc_insertion_point(field_get:SC_GetHelpMoney.left_times)
  return left_times_;
}
void SC_GetHelpMoney::set_left_times(::google::protobuf::int32 value) {
  set_has_left_times();
  left_times_ = value;
  // @@protoc_insertion_point(field_set:SC_GetHelpMoney.left_times)
}

// optional int32 cash_money = 3;
bool SC_GetHelpMoney::has_cash_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_GetHelpMoney::set_has_cash_money() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_GetHelpMoney::clear_has_cash_money() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_GetHelpMoney::clear_cash_money() {
  cash_money_ = 0;
  clear_has_cash_money();
}
::google::protobuf::int32 SC_GetHelpMoney::cash_money() const {
  // @@protoc_insertion_point(field_get:SC_GetHelpMoney.cash_money)
  return cash_money_;
}
void SC_GetHelpMoney::set_cash_money(::google::protobuf::int32 value) {
  set_has_cash_money();
  cash_money_ = value;
  // @@protoc_insertion_point(field_set:SC_GetHelpMoney.cash_money)
}

// optional int32 money_must_less = 4;
bool SC_GetHelpMoney::has_money_must_less() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_GetHelpMoney::set_has_money_must_less() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_GetHelpMoney::clear_has_money_must_less() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_GetHelpMoney::clear_money_must_less() {
  money_must_less_ = 0;
  clear_has_money_must_less();
}
::google::protobuf::int32 SC_GetHelpMoney::money_must_less() const {
  // @@protoc_insertion_point(field_get:SC_GetHelpMoney.money_must_less)
  return money_must_less_;
}
void SC_GetHelpMoney::set_money_must_less(::google::protobuf::int32 value) {
  set_has_money_must_less();
  money_must_less_ = value;
  // @@protoc_insertion_point(field_set:SC_GetHelpMoney.money_must_less)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_Agent_CashMoney::kMoneyFieldNumber;
const int CS_Agent_CashMoney::kAgentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_Agent_CashMoney::CS_Agent_CashMoney()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_Agent_CashMoney)
}
CS_Agent_CashMoney::CS_Agent_CashMoney(const CS_Agent_CashMoney& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&money_, &from.money_,
    reinterpret_cast<char*>(&agent_id_) -
    reinterpret_cast<char*>(&money_) + sizeof(agent_id_));
  // @@protoc_insertion_point(copy_constructor:CS_Agent_CashMoney)
}

void CS_Agent_CashMoney::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&money_, 0, reinterpret_cast<char*>(&agent_id_) -
    reinterpret_cast<char*>(&money_) + sizeof(agent_id_));
}

CS_Agent_CashMoney::~CS_Agent_CashMoney() {
  // @@protoc_insertion_point(destructor:CS_Agent_CashMoney)
  SharedDtor();
}

void CS_Agent_CashMoney::SharedDtor() {
}

void CS_Agent_CashMoney::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_Agent_CashMoney::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_Agent_CashMoney& CS_Agent_CashMoney::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_Agent_CashMoney* CS_Agent_CashMoney::New(::google::protobuf::Arena* arena) const {
  CS_Agent_CashMoney* n = new CS_Agent_CashMoney;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_Agent_CashMoney::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_Agent_CashMoney)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&money_, 0, reinterpret_cast<char*>(&agent_id_) -
      reinterpret_cast<char*>(&money_) + sizeof(agent_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_Agent_CashMoney::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_Agent_CashMoney)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 money = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 agent_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_agent_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &agent_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_Agent_CashMoney)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_Agent_CashMoney)
  return false;
#undef DO_
}

void CS_Agent_CashMoney::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_Agent_CashMoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 money = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->money(), output);
  }

  // optional int32 agent_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->agent_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_Agent_CashMoney)
}

::google::protobuf::uint8* CS_Agent_CashMoney::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_Agent_CashMoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 money = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->money(), target);
  }

  // optional int32 agent_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->agent_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_Agent_CashMoney)
  return target;
}

size_t CS_Agent_CashMoney::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_Agent_CashMoney)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 money = 1;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

    // optional int32 agent_id = 2;
    if (has_agent_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->agent_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_Agent_CashMoney::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_Agent_CashMoney)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_Agent_CashMoney* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_Agent_CashMoney>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_Agent_CashMoney)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_Agent_CashMoney)
    MergeFrom(*source);
  }
}

void CS_Agent_CashMoney::MergeFrom(const CS_Agent_CashMoney& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_Agent_CashMoney)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000002u) {
      agent_id_ = from.agent_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CS_Agent_CashMoney::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_Agent_CashMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_Agent_CashMoney::CopyFrom(const CS_Agent_CashMoney& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_Agent_CashMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_Agent_CashMoney::IsInitialized() const {
  return true;
}

void CS_Agent_CashMoney::Swap(CS_Agent_CashMoney* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_Agent_CashMoney::InternalSwap(CS_Agent_CashMoney* other) {
  std::swap(money_, other->money_);
  std::swap(agent_id_, other->agent_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_Agent_CashMoney::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_Agent_CashMoney

// optional int32 money = 1;
bool CS_Agent_CashMoney::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_Agent_CashMoney::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_Agent_CashMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_Agent_CashMoney::clear_money() {
  money_ = 0;
  clear_has_money();
}
::google::protobuf::int32 CS_Agent_CashMoney::money() const {
  // @@protoc_insertion_point(field_get:CS_Agent_CashMoney.money)
  return money_;
}
void CS_Agent_CashMoney::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CS_Agent_CashMoney.money)
}

// optional int32 agent_id = 2;
bool CS_Agent_CashMoney::has_agent_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_Agent_CashMoney::set_has_agent_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_Agent_CashMoney::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_Agent_CashMoney::clear_agent_id() {
  agent_id_ = 0;
  clear_has_agent_id();
}
::google::protobuf::int32 CS_Agent_CashMoney::agent_id() const {
  // @@protoc_insertion_point(field_get:CS_Agent_CashMoney.agent_id)
  return agent_id_;
}
void CS_Agent_CashMoney::set_agent_id(::google::protobuf::int32 value) {
  set_has_agent_id();
  agent_id_ = value;
  // @@protoc_insertion_point(field_set:CS_Agent_CashMoney.agent_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_Agent_CashMoneyResult::kResultFieldNumber;
const int SC_Agent_CashMoneyResult::kBankFieldNumber;
const int SC_Agent_CashMoneyResult::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_Agent_CashMoneyResult::SC_Agent_CashMoneyResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_Agent_CashMoneyResult)
}
SC_Agent_CashMoneyResult::SC_Agent_CashMoneyResult(const SC_Agent_CashMoneyResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bank_, &from.bank_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&bank_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SC_Agent_CashMoneyResult)
}

void SC_Agent_CashMoneyResult::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bank_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&bank_) + sizeof(result_));
}

SC_Agent_CashMoneyResult::~SC_Agent_CashMoneyResult() {
  // @@protoc_insertion_point(destructor:SC_Agent_CashMoneyResult)
  SharedDtor();
}

void SC_Agent_CashMoneyResult::SharedDtor() {
}

void SC_Agent_CashMoneyResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_Agent_CashMoneyResult::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_Agent_CashMoneyResult& SC_Agent_CashMoneyResult::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_Agent_CashMoneyResult* SC_Agent_CashMoneyResult::New(::google::protobuf::Arena* arena) const {
  SC_Agent_CashMoneyResult* n = new SC_Agent_CashMoneyResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_Agent_CashMoneyResult::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_Agent_CashMoneyResult)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&bank_, 0, reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&bank_) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_Agent_CashMoneyResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_Agent_CashMoneyResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 bank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_bank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_Agent_CashMoneyResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_Agent_CashMoneyResult)
  return false;
#undef DO_
}

void SC_Agent_CashMoneyResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_Agent_CashMoneyResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int64 bank = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->bank(), output);
  }

  // optional int64 money = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_Agent_CashMoneyResult)
}

::google::protobuf::uint8* SC_Agent_CashMoneyResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_Agent_CashMoneyResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int64 bank = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->bank(), target);
  }

  // optional int64 money = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_Agent_CashMoneyResult)
  return target;
}

size_t SC_Agent_CashMoneyResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_Agent_CashMoneyResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int64 bank = 2;
    if (has_bank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bank());
    }

    // optional int64 money = 3;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_Agent_CashMoneyResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_Agent_CashMoneyResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_Agent_CashMoneyResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_Agent_CashMoneyResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_Agent_CashMoneyResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_Agent_CashMoneyResult)
    MergeFrom(*source);
  }
}

void SC_Agent_CashMoneyResult::MergeFrom(const SC_Agent_CashMoneyResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_Agent_CashMoneyResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      bank_ = from.bank_;
    }
    if (cached_has_bits & 0x00000002u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_Agent_CashMoneyResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_Agent_CashMoneyResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_Agent_CashMoneyResult::CopyFrom(const SC_Agent_CashMoneyResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_Agent_CashMoneyResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_Agent_CashMoneyResult::IsInitialized() const {
  return true;
}

void SC_Agent_CashMoneyResult::Swap(SC_Agent_CashMoneyResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_Agent_CashMoneyResult::InternalSwap(SC_Agent_CashMoneyResult* other) {
  std::swap(bank_, other->bank_);
  std::swap(money_, other->money_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_Agent_CashMoneyResult::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_Agent_CashMoneyResult

// optional int32 result = 1;
bool SC_Agent_CashMoneyResult::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_Agent_CashMoneyResult::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_Agent_CashMoneyResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_Agent_CashMoneyResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_Agent_CashMoneyResult::result() const {
  // @@protoc_insertion_point(field_get:SC_Agent_CashMoneyResult.result)
  return result_;
}
void SC_Agent_CashMoneyResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_Agent_CashMoneyResult.result)
}

// optional int64 bank = 2;
bool SC_Agent_CashMoneyResult::has_bank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_Agent_CashMoneyResult::set_has_bank() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_Agent_CashMoneyResult::clear_has_bank() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_Agent_CashMoneyResult::clear_bank() {
  bank_ = GOOGLE_LONGLONG(0);
  clear_has_bank();
}
::google::protobuf::int64 SC_Agent_CashMoneyResult::bank() const {
  // @@protoc_insertion_point(field_get:SC_Agent_CashMoneyResult.bank)
  return bank_;
}
void SC_Agent_CashMoneyResult::set_bank(::google::protobuf::int64 value) {
  set_has_bank();
  bank_ = value;
  // @@protoc_insertion_point(field_set:SC_Agent_CashMoneyResult.bank)
}

// optional int64 money = 3;
bool SC_Agent_CashMoneyResult::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_Agent_CashMoneyResult::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_Agent_CashMoneyResult::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_Agent_CashMoneyResult::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 SC_Agent_CashMoneyResult::money() const {
  // @@protoc_insertion_point(field_get:SC_Agent_CashMoneyResult.money)
  return money_;
}
void SC_Agent_CashMoneyResult::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_Agent_CashMoneyResult.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_RequestNewAward::CS_RequestNewAward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_RequestNewAward)
}
CS_RequestNewAward::CS_RequestNewAward(const CS_RequestNewAward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_RequestNewAward)
}

void CS_RequestNewAward::SharedCtor() {
  _cached_size_ = 0;
}

CS_RequestNewAward::~CS_RequestNewAward() {
  // @@protoc_insertion_point(destructor:CS_RequestNewAward)
  SharedDtor();
}

void CS_RequestNewAward::SharedDtor() {
}

void CS_RequestNewAward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_RequestNewAward::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_RequestNewAward& CS_RequestNewAward::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_RequestNewAward* CS_RequestNewAward::New(::google::protobuf::Arena* arena) const {
  CS_RequestNewAward* n = new CS_RequestNewAward;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_RequestNewAward::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_RequestNewAward)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_RequestNewAward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_RequestNewAward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_RequestNewAward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_RequestNewAward)
  return false;
#undef DO_
}

void CS_RequestNewAward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_RequestNewAward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_RequestNewAward)
}

::google::protobuf::uint8* CS_RequestNewAward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_RequestNewAward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_RequestNewAward)
  return target;
}

size_t CS_RequestNewAward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_RequestNewAward)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_RequestNewAward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_RequestNewAward)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_RequestNewAward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_RequestNewAward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_RequestNewAward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_RequestNewAward)
    MergeFrom(*source);
  }
}

void CS_RequestNewAward::MergeFrom(const CS_RequestNewAward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_RequestNewAward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_RequestNewAward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_RequestNewAward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_RequestNewAward::CopyFrom(const CS_RequestNewAward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_RequestNewAward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_RequestNewAward::IsInitialized() const {
  return true;
}

void CS_RequestNewAward::Swap(CS_RequestNewAward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_RequestNewAward::InternalSwap(CS_RequestNewAward* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_RequestNewAward::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_RequestNewAward

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_RequestNewAward::kNewawardResultFieldNumber;
const int SC_RequestNewAward::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_RequestNewAward::SC_RequestNewAward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_RequestNewAward)
}
SC_RequestNewAward::SC_RequestNewAward(const SC_RequestNewAward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&newaward_result_, &from.newaward_result_,
    reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&newaward_result_) + sizeof(money_));
  // @@protoc_insertion_point(copy_constructor:SC_RequestNewAward)
}

void SC_RequestNewAward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&newaward_result_, 0, reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&newaward_result_) + sizeof(money_));
}

SC_RequestNewAward::~SC_RequestNewAward() {
  // @@protoc_insertion_point(destructor:SC_RequestNewAward)
  SharedDtor();
}

void SC_RequestNewAward::SharedDtor() {
}

void SC_RequestNewAward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_RequestNewAward::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_RequestNewAward& SC_RequestNewAward::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_RequestNewAward* SC_RequestNewAward::New(::google::protobuf::Arena* arena) const {
  SC_RequestNewAward* n = new SC_RequestNewAward;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_RequestNewAward::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_RequestNewAward)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&newaward_result_, 0, reinterpret_cast<char*>(&money_) -
      reinterpret_cast<char*>(&newaward_result_) + sizeof(money_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_RequestNewAward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_RequestNewAward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 newaward_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_newaward_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &newaward_result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 money = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_RequestNewAward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_RequestNewAward)
  return false;
#undef DO_
}

void SC_RequestNewAward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_RequestNewAward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 newaward_result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->newaward_result(), output);
  }

  // optional int32 money = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_RequestNewAward)
}

::google::protobuf::uint8* SC_RequestNewAward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_RequestNewAward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 newaward_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->newaward_result(), target);
  }

  // optional int32 money = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_RequestNewAward)
  return target;
}

size_t SC_RequestNewAward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_RequestNewAward)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 newaward_result = 1;
    if (has_newaward_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->newaward_result());
    }

    // optional int32 money = 2 [default = 0];
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_RequestNewAward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_RequestNewAward)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_RequestNewAward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_RequestNewAward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_RequestNewAward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_RequestNewAward)
    MergeFrom(*source);
  }
}

void SC_RequestNewAward::MergeFrom(const SC_RequestNewAward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_RequestNewAward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      newaward_result_ = from.newaward_result_;
    }
    if (cached_has_bits & 0x00000002u) {
      money_ = from.money_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_RequestNewAward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_RequestNewAward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_RequestNewAward::CopyFrom(const SC_RequestNewAward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_RequestNewAward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_RequestNewAward::IsInitialized() const {
  return true;
}

void SC_RequestNewAward::Swap(SC_RequestNewAward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_RequestNewAward::InternalSwap(SC_RequestNewAward* other) {
  std::swap(newaward_result_, other->newaward_result_);
  std::swap(money_, other->money_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_RequestNewAward::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_RequestNewAward

// optional int32 newaward_result = 1;
bool SC_RequestNewAward::has_newaward_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_RequestNewAward::set_has_newaward_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_RequestNewAward::clear_has_newaward_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_RequestNewAward::clear_newaward_result() {
  newaward_result_ = 0;
  clear_has_newaward_result();
}
::google::protobuf::int32 SC_RequestNewAward::newaward_result() const {
  // @@protoc_insertion_point(field_get:SC_RequestNewAward.newaward_result)
  return newaward_result_;
}
void SC_RequestNewAward::set_newaward_result(::google::protobuf::int32 value) {
  set_has_newaward_result();
  newaward_result_ = value;
  // @@protoc_insertion_point(field_set:SC_RequestNewAward.newaward_result)
}

// optional int32 money = 2 [default = 0];
bool SC_RequestNewAward::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_RequestNewAward::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_RequestNewAward::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_RequestNewAward::clear_money() {
  money_ = 0;
  clear_has_money();
}
::google::protobuf::int32 SC_RequestNewAward::money() const {
  // @@protoc_insertion_point(field_get:SC_RequestNewAward.money)
  return money_;
}
void SC_RequestNewAward::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_RequestNewAward.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_RequestCheckInAward::CS_RequestCheckInAward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_RequestCheckInAward)
}
CS_RequestCheckInAward::CS_RequestCheckInAward(const CS_RequestCheckInAward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_RequestCheckInAward)
}

void CS_RequestCheckInAward::SharedCtor() {
  _cached_size_ = 0;
}

CS_RequestCheckInAward::~CS_RequestCheckInAward() {
  // @@protoc_insertion_point(destructor:CS_RequestCheckInAward)
  SharedDtor();
}

void CS_RequestCheckInAward::SharedDtor() {
}

void CS_RequestCheckInAward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_RequestCheckInAward::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_RequestCheckInAward& CS_RequestCheckInAward::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_RequestCheckInAward* CS_RequestCheckInAward::New(::google::protobuf::Arena* arena) const {
  CS_RequestCheckInAward* n = new CS_RequestCheckInAward;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_RequestCheckInAward::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_RequestCheckInAward)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_RequestCheckInAward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_RequestCheckInAward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_RequestCheckInAward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_RequestCheckInAward)
  return false;
#undef DO_
}

void CS_RequestCheckInAward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_RequestCheckInAward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_RequestCheckInAward)
}

::google::protobuf::uint8* CS_RequestCheckInAward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_RequestCheckInAward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_RequestCheckInAward)
  return target;
}

size_t CS_RequestCheckInAward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_RequestCheckInAward)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_RequestCheckInAward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_RequestCheckInAward)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_RequestCheckInAward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_RequestCheckInAward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_RequestCheckInAward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_RequestCheckInAward)
    MergeFrom(*source);
  }
}

void CS_RequestCheckInAward::MergeFrom(const CS_RequestCheckInAward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_RequestCheckInAward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_RequestCheckInAward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_RequestCheckInAward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_RequestCheckInAward::CopyFrom(const CS_RequestCheckInAward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_RequestCheckInAward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_RequestCheckInAward::IsInitialized() const {
  return true;
}

void CS_RequestCheckInAward::Swap(CS_RequestCheckInAward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_RequestCheckInAward::InternalSwap(CS_RequestCheckInAward* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_RequestCheckInAward::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_RequestCheckInAward

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_RequestCheckInAward::kCheckinResultFieldNumber;
const int SC_RequestCheckInAward::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_RequestCheckInAward::SC_RequestCheckInAward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_RequestCheckInAward)
}
SC_RequestCheckInAward::SC_RequestCheckInAward(const SC_RequestCheckInAward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checkin_result_, &from.checkin_result_,
    reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&checkin_result_) + sizeof(money_));
  // @@protoc_insertion_point(copy_constructor:SC_RequestCheckInAward)
}

void SC_RequestCheckInAward::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checkin_result_, 0, reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&checkin_result_) + sizeof(money_));
}

SC_RequestCheckInAward::~SC_RequestCheckInAward() {
  // @@protoc_insertion_point(destructor:SC_RequestCheckInAward)
  SharedDtor();
}

void SC_RequestCheckInAward::SharedDtor() {
}

void SC_RequestCheckInAward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_RequestCheckInAward::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_RequestCheckInAward& SC_RequestCheckInAward::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_RequestCheckInAward* SC_RequestCheckInAward::New(::google::protobuf::Arena* arena) const {
  SC_RequestCheckInAward* n = new SC_RequestCheckInAward;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_RequestCheckInAward::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_RequestCheckInAward)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&checkin_result_, 0, reinterpret_cast<char*>(&money_) -
      reinterpret_cast<char*>(&checkin_result_) + sizeof(money_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_RequestCheckInAward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_RequestCheckInAward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checkin_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checkin_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checkin_result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 money = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_RequestCheckInAward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_RequestCheckInAward)
  return false;
#undef DO_
}

void SC_RequestCheckInAward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_RequestCheckInAward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checkin_result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checkin_result(), output);
  }

  // optional int32 money = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_RequestCheckInAward)
}

::google::protobuf::uint8* SC_RequestCheckInAward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_RequestCheckInAward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checkin_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checkin_result(), target);
  }

  // optional int32 money = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_RequestCheckInAward)
  return target;
}

size_t SC_RequestCheckInAward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_RequestCheckInAward)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 checkin_result = 1;
    if (has_checkin_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checkin_result());
    }

    // optional int32 money = 2 [default = 0];
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_RequestCheckInAward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_RequestCheckInAward)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_RequestCheckInAward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_RequestCheckInAward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_RequestCheckInAward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_RequestCheckInAward)
    MergeFrom(*source);
  }
}

void SC_RequestCheckInAward::MergeFrom(const SC_RequestCheckInAward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_RequestCheckInAward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      checkin_result_ = from.checkin_result_;
    }
    if (cached_has_bits & 0x00000002u) {
      money_ = from.money_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_RequestCheckInAward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_RequestCheckInAward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_RequestCheckInAward::CopyFrom(const SC_RequestCheckInAward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_RequestCheckInAward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_RequestCheckInAward::IsInitialized() const {
  return true;
}

void SC_RequestCheckInAward::Swap(SC_RequestCheckInAward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_RequestCheckInAward::InternalSwap(SC_RequestCheckInAward* other) {
  std::swap(checkin_result_, other->checkin_result_);
  std::swap(money_, other->money_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_RequestCheckInAward::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_RequestCheckInAward

// optional int32 checkin_result = 1;
bool SC_RequestCheckInAward::has_checkin_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_RequestCheckInAward::set_has_checkin_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_RequestCheckInAward::clear_has_checkin_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_RequestCheckInAward::clear_checkin_result() {
  checkin_result_ = 0;
  clear_has_checkin_result();
}
::google::protobuf::int32 SC_RequestCheckInAward::checkin_result() const {
  // @@protoc_insertion_point(field_get:SC_RequestCheckInAward.checkin_result)
  return checkin_result_;
}
void SC_RequestCheckInAward::set_checkin_result(::google::protobuf::int32 value) {
  set_has_checkin_result();
  checkin_result_ = value;
  // @@protoc_insertion_point(field_set:SC_RequestCheckInAward.checkin_result)
}

// optional int32 money = 2 [default = 0];
bool SC_RequestCheckInAward::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_RequestCheckInAward::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_RequestCheckInAward::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_RequestCheckInAward::clear_money() {
  money_ = 0;
  clear_has_money();
}
::google::protobuf::int32 SC_RequestCheckInAward::money() const {
  // @@protoc_insertion_point(field_get:SC_RequestCheckInAward.money)
  return money_;
}
void SC_RequestCheckInAward::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_RequestCheckInAward.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_BindBankCard::kPbInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_BindBankCard::CS_BindBankCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_BindBankCard)
}
CS_BindBankCard::CS_BindBankCard(const CS_BindBankCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pb_info()) {
    pb_info_ = new ::BankCardInfo(*from.pb_info_);
  } else {
    pb_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CS_BindBankCard)
}

void CS_BindBankCard::SharedCtor() {
  _cached_size_ = 0;
  pb_info_ = NULL;
}

CS_BindBankCard::~CS_BindBankCard() {
  // @@protoc_insertion_point(destructor:CS_BindBankCard)
  SharedDtor();
}

void CS_BindBankCard::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pb_info_;
  }
}

void CS_BindBankCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_BindBankCard::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_BindBankCard& CS_BindBankCard::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_BindBankCard* CS_BindBankCard::New(::google::protobuf::Arena* arena) const {
  CS_BindBankCard* n = new CS_BindBankCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_BindBankCard::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_BindBankCard)
  if (has_pb_info()) {
    GOOGLE_DCHECK(pb_info_ != NULL);
    pb_info_->::BankCardInfo::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_BindBankCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_BindBankCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .BankCardInfo pb_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pb_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_BindBankCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_BindBankCard)
  return false;
#undef DO_
}

void CS_BindBankCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_BindBankCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .BankCardInfo pb_info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pb_info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_BindBankCard)
}

::google::protobuf::uint8* CS_BindBankCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_BindBankCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .BankCardInfo pb_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pb_info_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_BindBankCard)
  return target;
}

size_t CS_BindBankCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_BindBankCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .BankCardInfo pb_info = 1;
  if (has_pb_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pb_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_BindBankCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_BindBankCard)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_BindBankCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_BindBankCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_BindBankCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_BindBankCard)
    MergeFrom(*source);
  }
}

void CS_BindBankCard::MergeFrom(const CS_BindBankCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_BindBankCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pb_info()) {
    mutable_pb_info()->::BankCardInfo::MergeFrom(from.pb_info());
  }
}

void CS_BindBankCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_BindBankCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_BindBankCard::CopyFrom(const CS_BindBankCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_BindBankCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_BindBankCard::IsInitialized() const {
  return true;
}

void CS_BindBankCard::Swap(CS_BindBankCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_BindBankCard::InternalSwap(CS_BindBankCard* other) {
  std::swap(pb_info_, other->pb_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_BindBankCard::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_BindBankCard

// optional .BankCardInfo pb_info = 1;
bool CS_BindBankCard::has_pb_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_BindBankCard::set_has_pb_info() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_BindBankCard::clear_has_pb_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_BindBankCard::clear_pb_info() {
  if (pb_info_ != NULL) pb_info_->::BankCardInfo::Clear();
  clear_has_pb_info();
}
const ::BankCardInfo& CS_BindBankCard::pb_info() const {
  // @@protoc_insertion_point(field_get:CS_BindBankCard.pb_info)
  return pb_info_ != NULL ? *pb_info_
                         : *::BankCardInfo::internal_default_instance();
}
::BankCardInfo* CS_BindBankCard::mutable_pb_info() {
  set_has_pb_info();
  if (pb_info_ == NULL) {
    pb_info_ = new ::BankCardInfo;
  }
  // @@protoc_insertion_point(field_mutable:CS_BindBankCard.pb_info)
  return pb_info_;
}
::BankCardInfo* CS_BindBankCard::release_pb_info() {
  // @@protoc_insertion_point(field_release:CS_BindBankCard.pb_info)
  clear_has_pb_info();
  ::BankCardInfo* temp = pb_info_;
  pb_info_ = NULL;
  return temp;
}
void CS_BindBankCard::set_allocated_pb_info(::BankCardInfo* pb_info) {
  delete pb_info_;
  pb_info_ = pb_info;
  if (pb_info) {
    set_has_pb_info();
  } else {
    clear_has_pb_info();
  }
  // @@protoc_insertion_point(field_set_allocated:CS_BindBankCard.pb_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_BindBankCard::kBindResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_BindBankCard::SC_BindBankCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_BindBankCard)
}
SC_BindBankCard::SC_BindBankCard(const SC_BindBankCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bind_result_ = from.bind_result_;
  // @@protoc_insertion_point(copy_constructor:SC_BindBankCard)
}

void SC_BindBankCard::SharedCtor() {
  _cached_size_ = 0;
  bind_result_ = 0;
}

SC_BindBankCard::~SC_BindBankCard() {
  // @@protoc_insertion_point(destructor:SC_BindBankCard)
  SharedDtor();
}

void SC_BindBankCard::SharedDtor() {
}

void SC_BindBankCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_BindBankCard::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_BindBankCard& SC_BindBankCard::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_BindBankCard* SC_BindBankCard::New(::google::protobuf::Arena* arena) const {
  SC_BindBankCard* n = new SC_BindBankCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_BindBankCard::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_BindBankCard)
  bind_result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_BindBankCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_BindBankCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bind_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_bind_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bind_result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_BindBankCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_BindBankCard)
  return false;
#undef DO_
}

void SC_BindBankCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_BindBankCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 bind_result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bind_result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_BindBankCard)
}

::google::protobuf::uint8* SC_BindBankCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_BindBankCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 bind_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bind_result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_BindBankCard)
  return target;
}

size_t SC_BindBankCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_BindBankCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 bind_result = 1;
  if (has_bind_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bind_result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_BindBankCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_BindBankCard)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_BindBankCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_BindBankCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_BindBankCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_BindBankCard)
    MergeFrom(*source);
  }
}

void SC_BindBankCard::MergeFrom(const SC_BindBankCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_BindBankCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bind_result()) {
    set_bind_result(from.bind_result());
  }
}

void SC_BindBankCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_BindBankCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_BindBankCard::CopyFrom(const SC_BindBankCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_BindBankCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_BindBankCard::IsInitialized() const {
  return true;
}

void SC_BindBankCard::Swap(SC_BindBankCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_BindBankCard::InternalSwap(SC_BindBankCard* other) {
  std::swap(bind_result_, other->bind_result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_BindBankCard::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_BindBankCard

// optional int32 bind_result = 1;
bool SC_BindBankCard::has_bind_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_BindBankCard::set_has_bind_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_BindBankCard::clear_has_bind_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_BindBankCard::clear_bind_result() {
  bind_result_ = 0;
  clear_has_bind_result();
}
::google::protobuf::int32 SC_BindBankCard::bind_result() const {
  // @@protoc_insertion_point(field_get:SC_BindBankCard.bind_result)
  return bind_result_;
}
void SC_BindBankCard::set_bind_result(::google::protobuf::int32 value) {
  set_has_bind_result();
  bind_result_ = value;
  // @@protoc_insertion_point(field_set:SC_BindBankCard.bind_result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_GetBankCardInfo::CS_GetBankCardInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_GetBankCardInfo)
}
CS_GetBankCardInfo::CS_GetBankCardInfo(const CS_GetBankCardInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_GetBankCardInfo)
}

void CS_GetBankCardInfo::SharedCtor() {
  _cached_size_ = 0;
}

CS_GetBankCardInfo::~CS_GetBankCardInfo() {
  // @@protoc_insertion_point(destructor:CS_GetBankCardInfo)
  SharedDtor();
}

void CS_GetBankCardInfo::SharedDtor() {
}

void CS_GetBankCardInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_GetBankCardInfo::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_GetBankCardInfo& CS_GetBankCardInfo::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_GetBankCardInfo* CS_GetBankCardInfo::New(::google::protobuf::Arena* arena) const {
  CS_GetBankCardInfo* n = new CS_GetBankCardInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_GetBankCardInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_GetBankCardInfo)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_GetBankCardInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_GetBankCardInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_GetBankCardInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_GetBankCardInfo)
  return false;
#undef DO_
}

void CS_GetBankCardInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_GetBankCardInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_GetBankCardInfo)
}

::google::protobuf::uint8* CS_GetBankCardInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_GetBankCardInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_GetBankCardInfo)
  return target;
}

size_t CS_GetBankCardInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_GetBankCardInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_GetBankCardInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_GetBankCardInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_GetBankCardInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_GetBankCardInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_GetBankCardInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_GetBankCardInfo)
    MergeFrom(*source);
  }
}

void CS_GetBankCardInfo::MergeFrom(const CS_GetBankCardInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_GetBankCardInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_GetBankCardInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_GetBankCardInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_GetBankCardInfo::CopyFrom(const CS_GetBankCardInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_GetBankCardInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_GetBankCardInfo::IsInitialized() const {
  return true;
}

void CS_GetBankCardInfo::Swap(CS_GetBankCardInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_GetBankCardInfo::InternalSwap(CS_GetBankCardInfo* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_GetBankCardInfo::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_GetBankCardInfo

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_GetBankCardInfo::kPbInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_GetBankCardInfo::SC_GetBankCardInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_GetBankCardInfo)
}
SC_GetBankCardInfo::SC_GetBankCardInfo(const SC_GetBankCardInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pb_info()) {
    pb_info_ = new ::BankCardInfo(*from.pb_info_);
  } else {
    pb_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:SC_GetBankCardInfo)
}

void SC_GetBankCardInfo::SharedCtor() {
  _cached_size_ = 0;
  pb_info_ = NULL;
}

SC_GetBankCardInfo::~SC_GetBankCardInfo() {
  // @@protoc_insertion_point(destructor:SC_GetBankCardInfo)
  SharedDtor();
}

void SC_GetBankCardInfo::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pb_info_;
  }
}

void SC_GetBankCardInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_GetBankCardInfo::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_GetBankCardInfo& SC_GetBankCardInfo::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_GetBankCardInfo* SC_GetBankCardInfo::New(::google::protobuf::Arena* arena) const {
  SC_GetBankCardInfo* n = new SC_GetBankCardInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_GetBankCardInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_GetBankCardInfo)
  if (has_pb_info()) {
    GOOGLE_DCHECK(pb_info_ != NULL);
    pb_info_->::BankCardInfo::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_GetBankCardInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_GetBankCardInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .BankCardInfo pb_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pb_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_GetBankCardInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_GetBankCardInfo)
  return false;
#undef DO_
}

void SC_GetBankCardInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_GetBankCardInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .BankCardInfo pb_info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pb_info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_GetBankCardInfo)
}

::google::protobuf::uint8* SC_GetBankCardInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_GetBankCardInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .BankCardInfo pb_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pb_info_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_GetBankCardInfo)
  return target;
}

size_t SC_GetBankCardInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_GetBankCardInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .BankCardInfo pb_info = 1;
  if (has_pb_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pb_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_GetBankCardInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_GetBankCardInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_GetBankCardInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_GetBankCardInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_GetBankCardInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_GetBankCardInfo)
    MergeFrom(*source);
  }
}

void SC_GetBankCardInfo::MergeFrom(const SC_GetBankCardInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_GetBankCardInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pb_info()) {
    mutable_pb_info()->::BankCardInfo::MergeFrom(from.pb_info());
  }
}

void SC_GetBankCardInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_GetBankCardInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_GetBankCardInfo::CopyFrom(const SC_GetBankCardInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_GetBankCardInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_GetBankCardInfo::IsInitialized() const {
  return true;
}

void SC_GetBankCardInfo::Swap(SC_GetBankCardInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_GetBankCardInfo::InternalSwap(SC_GetBankCardInfo* other) {
  std::swap(pb_info_, other->pb_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_GetBankCardInfo::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_GetBankCardInfo

// optional .BankCardInfo pb_info = 1;
bool SC_GetBankCardInfo::has_pb_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_GetBankCardInfo::set_has_pb_info() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_GetBankCardInfo::clear_has_pb_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_GetBankCardInfo::clear_pb_info() {
  if (pb_info_ != NULL) pb_info_->::BankCardInfo::Clear();
  clear_has_pb_info();
}
const ::BankCardInfo& SC_GetBankCardInfo::pb_info() const {
  // @@protoc_insertion_point(field_get:SC_GetBankCardInfo.pb_info)
  return pb_info_ != NULL ? *pb_info_
                         : *::BankCardInfo::internal_default_instance();
}
::BankCardInfo* SC_GetBankCardInfo::mutable_pb_info() {
  set_has_pb_info();
  if (pb_info_ == NULL) {
    pb_info_ = new ::BankCardInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_GetBankCardInfo.pb_info)
  return pb_info_;
}
::BankCardInfo* SC_GetBankCardInfo::release_pb_info() {
  // @@protoc_insertion_point(field_release:SC_GetBankCardInfo.pb_info)
  clear_has_pb_info();
  ::BankCardInfo* temp = pb_info_;
  pb_info_ = NULL;
  return temp;
}
void SC_GetBankCardInfo::set_allocated_pb_info(::BankCardInfo* pb_info) {
  delete pb_info_;
  pb_info_ = pb_info;
  if (pb_info) {
    set_has_pb_info();
  } else {
    clear_has_pb_info();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_GetBankCardInfo.pb_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_NewGameMaintain::CS_NewGameMaintain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_NewGameMaintain)
}
CS_NewGameMaintain::CS_NewGameMaintain(const CS_NewGameMaintain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_NewGameMaintain)
}

void CS_NewGameMaintain::SharedCtor() {
  _cached_size_ = 0;
}

CS_NewGameMaintain::~CS_NewGameMaintain() {
  // @@protoc_insertion_point(destructor:CS_NewGameMaintain)
  SharedDtor();
}

void CS_NewGameMaintain::SharedDtor() {
}

void CS_NewGameMaintain::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_NewGameMaintain::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_NewGameMaintain& CS_NewGameMaintain::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_NewGameMaintain* CS_NewGameMaintain::New(::google::protobuf::Arena* arena) const {
  CS_NewGameMaintain* n = new CS_NewGameMaintain;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_NewGameMaintain::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_NewGameMaintain)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_NewGameMaintain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_NewGameMaintain)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_NewGameMaintain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_NewGameMaintain)
  return false;
#undef DO_
}

void CS_NewGameMaintain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_NewGameMaintain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_NewGameMaintain)
}

::google::protobuf::uint8* CS_NewGameMaintain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_NewGameMaintain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_NewGameMaintain)
  return target;
}

size_t CS_NewGameMaintain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_NewGameMaintain)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_NewGameMaintain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_NewGameMaintain)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_NewGameMaintain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_NewGameMaintain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_NewGameMaintain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_NewGameMaintain)
    MergeFrom(*source);
  }
}

void CS_NewGameMaintain::MergeFrom(const CS_NewGameMaintain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_NewGameMaintain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_NewGameMaintain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_NewGameMaintain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_NewGameMaintain::CopyFrom(const CS_NewGameMaintain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_NewGameMaintain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_NewGameMaintain::IsInitialized() const {
  return true;
}

void CS_NewGameMaintain::Swap(CS_NewGameMaintain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_NewGameMaintain::InternalSwap(CS_NewGameMaintain* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_NewGameMaintain::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_NewGameMaintain

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_NewGameMaintain::kFirstGameTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_NewGameMaintain::SC_NewGameMaintain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_NewGameMaintain)
}
SC_NewGameMaintain::SC_NewGameMaintain(const SC_NewGameMaintain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      first_game_type_(from.first_game_type_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SC_NewGameMaintain)
}

void SC_NewGameMaintain::SharedCtor() {
  _cached_size_ = 0;
}

SC_NewGameMaintain::~SC_NewGameMaintain() {
  // @@protoc_insertion_point(destructor:SC_NewGameMaintain)
  SharedDtor();
}

void SC_NewGameMaintain::SharedDtor() {
}

void SC_NewGameMaintain::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_NewGameMaintain::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_NewGameMaintain& SC_NewGameMaintain::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_NewGameMaintain* SC_NewGameMaintain::New(::google::protobuf::Arena* arena) const {
  SC_NewGameMaintain* n = new SC_NewGameMaintain;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_NewGameMaintain::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_NewGameMaintain)
  first_game_type_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_NewGameMaintain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_NewGameMaintain)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 first_game_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_first_game_type())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_first_game_type())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_NewGameMaintain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_NewGameMaintain)
  return false;
#undef DO_
}

void SC_NewGameMaintain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_NewGameMaintain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 first_game_type = 1;
  for (int i = 0, n = this->first_game_type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->first_game_type(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_NewGameMaintain)
}

::google::protobuf::uint8* SC_NewGameMaintain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_NewGameMaintain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 first_game_type = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->first_game_type_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_NewGameMaintain)
  return target;
}

size_t SC_NewGameMaintain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_NewGameMaintain)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 first_game_type = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->first_game_type_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->first_game_type_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_NewGameMaintain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_NewGameMaintain)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_NewGameMaintain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_NewGameMaintain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_NewGameMaintain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_NewGameMaintain)
    MergeFrom(*source);
  }
}

void SC_NewGameMaintain::MergeFrom(const SC_NewGameMaintain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_NewGameMaintain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  first_game_type_.MergeFrom(from.first_game_type_);
}

void SC_NewGameMaintain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_NewGameMaintain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_NewGameMaintain::CopyFrom(const SC_NewGameMaintain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_NewGameMaintain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_NewGameMaintain::IsInitialized() const {
  return true;
}

void SC_NewGameMaintain::Swap(SC_NewGameMaintain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_NewGameMaintain::InternalSwap(SC_NewGameMaintain* other) {
  first_game_type_.InternalSwap(&other->first_game_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_NewGameMaintain::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_NewGameMaintain

// repeated int32 first_game_type = 1;
int SC_NewGameMaintain::first_game_type_size() const {
  return first_game_type_.size();
}
void SC_NewGameMaintain::clear_first_game_type() {
  first_game_type_.Clear();
}
::google::protobuf::int32 SC_NewGameMaintain::first_game_type(int index) const {
  // @@protoc_insertion_point(field_get:SC_NewGameMaintain.first_game_type)
  return first_game_type_.Get(index);
}
void SC_NewGameMaintain::set_first_game_type(int index, ::google::protobuf::int32 value) {
  first_game_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_NewGameMaintain.first_game_type)
}
void SC_NewGameMaintain::add_first_game_type(::google::protobuf::int32 value) {
  first_game_type_.Add(value);
  // @@protoc_insertion_point(field_add:SC_NewGameMaintain.first_game_type)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_NewGameMaintain::first_game_type() const {
  // @@protoc_insertion_point(field_list:SC_NewGameMaintain.first_game_type)
  return first_game_type_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_NewGameMaintain::mutable_first_game_type() {
  // @@protoc_insertion_point(field_mutable_list:SC_NewGameMaintain.first_game_type)
  return &first_game_type_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_PlayerPromotion::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_PlayerPromotion::CS_PlayerPromotion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_PlayerPromotion)
}
CS_PlayerPromotion::CS_PlayerPromotion(const CS_PlayerPromotion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:CS_PlayerPromotion)
}

void CS_PlayerPromotion::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
}

CS_PlayerPromotion::~CS_PlayerPromotion() {
  // @@protoc_insertion_point(destructor:CS_PlayerPromotion)
  SharedDtor();
}

void CS_PlayerPromotion::SharedDtor() {
}

void CS_PlayerPromotion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_PlayerPromotion::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_PlayerPromotion& CS_PlayerPromotion::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_PlayerPromotion* CS_PlayerPromotion::New(::google::protobuf::Arena* arena) const {
  CS_PlayerPromotion* n = new CS_PlayerPromotion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_PlayerPromotion::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_PlayerPromotion)
  index_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_PlayerPromotion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_PlayerPromotion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_PlayerPromotion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_PlayerPromotion)
  return false;
#undef DO_
}

void CS_PlayerPromotion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_PlayerPromotion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_PlayerPromotion)
}

::google::protobuf::uint8* CS_PlayerPromotion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_PlayerPromotion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_PlayerPromotion)
  return target;
}

size_t CS_PlayerPromotion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_PlayerPromotion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 index = 1;
  if (has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_PlayerPromotion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_PlayerPromotion)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_PlayerPromotion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_PlayerPromotion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_PlayerPromotion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_PlayerPromotion)
    MergeFrom(*source);
  }
}

void CS_PlayerPromotion::MergeFrom(const CS_PlayerPromotion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_PlayerPromotion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index()) {
    set_index(from.index());
  }
}

void CS_PlayerPromotion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_PlayerPromotion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_PlayerPromotion::CopyFrom(const CS_PlayerPromotion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_PlayerPromotion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_PlayerPromotion::IsInitialized() const {
  return true;
}

void CS_PlayerPromotion::Swap(CS_PlayerPromotion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_PlayerPromotion::InternalSwap(CS_PlayerPromotion* other) {
  std::swap(index_, other->index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_PlayerPromotion::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_PlayerPromotion

// optional int32 index = 1;
bool CS_PlayerPromotion::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_PlayerPromotion::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_PlayerPromotion::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_PlayerPromotion::clear_index() {
  index_ = 0;
  clear_has_index();
}
::google::protobuf::int32 CS_PlayerPromotion::index() const {
  // @@protoc_insertion_point(field_get:CS_PlayerPromotion.index)
  return index_;
}
void CS_PlayerPromotion::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:CS_PlayerPromotion.index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_PlayerPromotion::kPromotionResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_PlayerPromotion::SC_PlayerPromotion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_PlayerPromotion)
}
SC_PlayerPromotion::SC_PlayerPromotion(const SC_PlayerPromotion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  promotion_result_ = from.promotion_result_;
  // @@protoc_insertion_point(copy_constructor:SC_PlayerPromotion)
}

void SC_PlayerPromotion::SharedCtor() {
  _cached_size_ = 0;
  promotion_result_ = 0;
}

SC_PlayerPromotion::~SC_PlayerPromotion() {
  // @@protoc_insertion_point(destructor:SC_PlayerPromotion)
  SharedDtor();
}

void SC_PlayerPromotion::SharedDtor() {
}

void SC_PlayerPromotion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_PlayerPromotion::descriptor() {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_PlayerPromotion& SC_PlayerPromotion::default_instance() {
  protobuf_public_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_PlayerPromotion* SC_PlayerPromotion::New(::google::protobuf::Arena* arena) const {
  SC_PlayerPromotion* n = new SC_PlayerPromotion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_PlayerPromotion::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_PlayerPromotion)
  promotion_result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_PlayerPromotion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_PlayerPromotion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 promotion_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_promotion_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &promotion_result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_PlayerPromotion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_PlayerPromotion)
  return false;
#undef DO_
}

void SC_PlayerPromotion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_PlayerPromotion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 promotion_result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->promotion_result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_PlayerPromotion)
}

::google::protobuf::uint8* SC_PlayerPromotion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_PlayerPromotion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 promotion_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->promotion_result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_PlayerPromotion)
  return target;
}

size_t SC_PlayerPromotion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_PlayerPromotion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 promotion_result = 1;
  if (has_promotion_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->promotion_result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_PlayerPromotion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_PlayerPromotion)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_PlayerPromotion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_PlayerPromotion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_PlayerPromotion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_PlayerPromotion)
    MergeFrom(*source);
  }
}

void SC_PlayerPromotion::MergeFrom(const SC_PlayerPromotion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_PlayerPromotion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_promotion_result()) {
    set_promotion_result(from.promotion_result());
  }
}

void SC_PlayerPromotion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_PlayerPromotion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_PlayerPromotion::CopyFrom(const SC_PlayerPromotion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_PlayerPromotion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_PlayerPromotion::IsInitialized() const {
  return true;
}

void SC_PlayerPromotion::Swap(SC_PlayerPromotion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_PlayerPromotion::InternalSwap(SC_PlayerPromotion* other) {
  std::swap(promotion_result_, other->promotion_result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_PlayerPromotion::GetMetadata() const {
  protobuf_public_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_PlayerPromotion

// optional int32 promotion_result = 1;
bool SC_PlayerPromotion::has_promotion_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_PlayerPromotion::set_has_promotion_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_PlayerPromotion::clear_has_promotion_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_PlayerPromotion::clear_promotion_result() {
  promotion_result_ = 0;
  clear_has_promotion_result();
}
::google::protobuf::int32 SC_PlayerPromotion::promotion_result() const {
  // @@protoc_insertion_point(field_get:SC_PlayerPromotion.promotion_result)
  return promotion_result_;
}
void SC_PlayerPromotion::set_promotion_result(::google::protobuf::int32 value) {
  set_has_promotion_result();
  promotion_result_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerPromotion.promotion_result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
