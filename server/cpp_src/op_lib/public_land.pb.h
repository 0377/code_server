// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: public_land.proto

#ifndef PROTOBUF_public_5fland_2eproto__INCLUDED
#define PROTOBUF_public_5fland_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class CS_GetPrivateConfig;
class CS_GetPrivateConfigDefaultTypeInternal;
extern CS_GetPrivateConfigDefaultTypeInternal _CS_GetPrivateConfig_default_instance_;
class CS_GetTabVoteArray;
class CS_GetTabVoteArrayDefaultTypeInternal;
extern CS_GetTabVoteArrayDefaultTypeInternal _CS_GetTabVoteArray_default_instance_;
class CS_LandCallDouble;
class CS_LandCallDoubleDefaultTypeInternal;
extern CS_LandCallDoubleDefaultTypeInternal _CS_LandCallDouble_default_instance_;
class CS_LandCallScore;
class CS_LandCallScoreDefaultTypeInternal;
extern CS_LandCallScoreDefaultTypeInternal _CS_LandCallScore_default_instance_;
class CS_LandOutCard;
class CS_LandOutCardDefaultTypeInternal;
extern CS_LandOutCardDefaultTypeInternal _CS_LandOutCard_default_instance_;
class CS_LandPassCard;
class CS_LandPassCardDefaultTypeInternal;
extern CS_LandPassCardDefaultTypeInternal _CS_LandPassCard_default_instance_;
class CS_LandTrusteeship;
class CS_LandTrusteeshipDefaultTypeInternal;
extern CS_LandTrusteeshipDefaultTypeInternal _CS_LandTrusteeship_default_instance_;
class CS_SetPrivateConfigChange;
class CS_SetPrivateConfigChangeDefaultTypeInternal;
extern CS_SetPrivateConfigChangeDefaultTypeInternal _CS_SetPrivateConfigChange_default_instance_;
class CS_TabTiren;
class CS_TabTirenDefaultTypeInternal;
extern CS_TabTirenDefaultTypeInternal _CS_TabTiren_default_instance_;
class CS_TabVote;
class CS_TabVoteDefaultTypeInternal;
extern CS_TabVoteDefaultTypeInternal _CS_TabVote_default_instance_;
class LandPlayerConclude;
class LandPlayerConcludeDefaultTypeInternal;
extern LandPlayerConcludeDefaultTypeInternal _LandPlayerConclude_default_instance_;
class PlayerCardsMsg;
class PlayerCardsMsgDefaultTypeInternal;
extern PlayerCardsMsgDefaultTypeInternal _PlayerCardsMsg_default_instance_;
class PlayerDoubleMsg;
class PlayerDoubleMsgDefaultTypeInternal;
extern PlayerDoubleMsgDefaultTypeInternal _PlayerDoubleMsg_default_instance_;
class SC_Dismiss;
class SC_DismissDefaultTypeInternal;
extern SC_DismissDefaultTypeInternal _SC_Dismiss_default_instance_;
class SC_LandCallDouble;
class SC_LandCallDoubleDefaultTypeInternal;
extern SC_LandCallDoubleDefaultTypeInternal _SC_LandCallDouble_default_instance_;
class SC_LandCallDoubleFinish;
class SC_LandCallDoubleFinishDefaultTypeInternal;
extern SC_LandCallDoubleFinishDefaultTypeInternal _SC_LandCallDoubleFinish_default_instance_;
class SC_LandCallFail;
class SC_LandCallFailDefaultTypeInternal;
extern SC_LandCallFailDefaultTypeInternal _SC_LandCallFail_default_instance_;
class SC_LandCallScore;
class SC_LandCallScoreDefaultTypeInternal;
extern SC_LandCallScoreDefaultTypeInternal _SC_LandCallScore_default_instance_;
class SC_LandCallScorePlayerOffline;
class SC_LandCallScorePlayerOfflineDefaultTypeInternal;
extern SC_LandCallScorePlayerOfflineDefaultTypeInternal _SC_LandCallScorePlayerOffline_default_instance_;
class SC_LandConclude;
class SC_LandConcludeDefaultTypeInternal;
extern SC_LandConcludeDefaultTypeInternal _SC_LandConclude_default_instance_;
class SC_LandInfo;
class SC_LandInfoDefaultTypeInternal;
extern SC_LandInfoDefaultTypeInternal _SC_LandInfo_default_instance_;
class SC_LandOutCard;
class SC_LandOutCardDefaultTypeInternal;
extern SC_LandOutCardDefaultTypeInternal _SC_LandOutCard_default_instance_;
class SC_LandPassCard;
class SC_LandPassCardDefaultTypeInternal;
extern SC_LandPassCardDefaultTypeInternal _SC_LandPassCard_default_instance_;
class SC_LandPlayerOffline;
class SC_LandPlayerOfflineDefaultTypeInternal;
extern SC_LandPlayerOfflineDefaultTypeInternal _SC_LandPlayerOffline_default_instance_;
class SC_LandPlayerOnline;
class SC_LandPlayerOnlineDefaultTypeInternal;
extern SC_LandPlayerOnlineDefaultTypeInternal _SC_LandPlayerOnline_default_instance_;
class SC_LandRecoveryPlayerCallScore;
class SC_LandRecoveryPlayerCallScoreDefaultTypeInternal;
extern SC_LandRecoveryPlayerCallScoreDefaultTypeInternal _SC_LandRecoveryPlayerCallScore_default_instance_;
class SC_LandRecoveryPlayerCard;
class SC_LandRecoveryPlayerCardDefaultTypeInternal;
extern SC_LandRecoveryPlayerCardDefaultTypeInternal _SC_LandRecoveryPlayerCard_default_instance_;
class SC_LandRecoveryPlayerDouble;
class SC_LandRecoveryPlayerDoubleDefaultTypeInternal;
extern SC_LandRecoveryPlayerDoubleDefaultTypeInternal _SC_LandRecoveryPlayerDouble_default_instance_;
class SC_LandStart;
class SC_LandStartDefaultTypeInternal;
extern SC_LandStartDefaultTypeInternal _SC_LandStart_default_instance_;
class SC_LandTrusteeship;
class SC_LandTrusteeshipDefaultTypeInternal;
extern SC_LandTrusteeshipDefaultTypeInternal _SC_LandTrusteeship_default_instance_;
class SC_PrivateConfigChange;
class SC_PrivateConfigChangeDefaultTypeInternal;
extern SC_PrivateConfigChangeDefaultTypeInternal _SC_PrivateConfigChange_default_instance_;
class SC_RecconectReady;
class SC_RecconectReadyDefaultTypeInternal;
extern SC_RecconectReadyDefaultTypeInternal _SC_RecconectReady_default_instance_;
class SC_TabVoteArray;
class SC_TabVoteArrayDefaultTypeInternal;
extern SC_TabVoteArrayDefaultTypeInternal _SC_TabVoteArray_default_instance_;
class SC_TabVoteInfo;
class SC_TabVoteInfoDefaultTypeInternal;
extern SC_TabVoteInfoDefaultTypeInternal _SC_TabVoteInfo_default_instance_;
class SC_TickNotify;
class SC_TickNotifyDefaultTypeInternal;
extern SC_TickNotifyDefaultTypeInternal _SC_TickNotify_default_instance_;
class SC_TotalScoreInfo;
class SC_TotalScoreInfoDefaultTypeInternal;
extern SC_TotalScoreInfoDefaultTypeInternal _SC_TotalScoreInfo_default_instance_;
class pofflineMsg;
class pofflineMsgDefaultTypeInternal;
extern pofflineMsgDefaultTypeInternal _pofflineMsg_default_instance_;

namespace protobuf_public_5fland_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_public_5fland_2eproto

enum SC_LandStart_MsgID {
  SC_LandStart_MsgID_ID = 15002
};
bool SC_LandStart_MsgID_IsValid(int value);
const SC_LandStart_MsgID SC_LandStart_MsgID_MsgID_MIN = SC_LandStart_MsgID_ID;
const SC_LandStart_MsgID SC_LandStart_MsgID_MsgID_MAX = SC_LandStart_MsgID_ID;
const int SC_LandStart_MsgID_MsgID_ARRAYSIZE = SC_LandStart_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandStart_MsgID_descriptor();
inline const ::std::string& SC_LandStart_MsgID_Name(SC_LandStart_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandStart_MsgID_descriptor(), value);
}
inline bool SC_LandStart_MsgID_Parse(
    const ::std::string& name, SC_LandStart_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandStart_MsgID>(
    SC_LandStart_MsgID_descriptor(), name, value);
}
enum CS_LandCallScore_MsgID {
  CS_LandCallScore_MsgID_ID = 15003
};
bool CS_LandCallScore_MsgID_IsValid(int value);
const CS_LandCallScore_MsgID CS_LandCallScore_MsgID_MsgID_MIN = CS_LandCallScore_MsgID_ID;
const CS_LandCallScore_MsgID CS_LandCallScore_MsgID_MsgID_MAX = CS_LandCallScore_MsgID_ID;
const int CS_LandCallScore_MsgID_MsgID_ARRAYSIZE = CS_LandCallScore_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_LandCallScore_MsgID_descriptor();
inline const ::std::string& CS_LandCallScore_MsgID_Name(CS_LandCallScore_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_LandCallScore_MsgID_descriptor(), value);
}
inline bool CS_LandCallScore_MsgID_Parse(
    const ::std::string& name, CS_LandCallScore_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_LandCallScore_MsgID>(
    CS_LandCallScore_MsgID_descriptor(), name, value);
}
enum SC_LandCallScore_MsgID {
  SC_LandCallScore_MsgID_ID = 15004
};
bool SC_LandCallScore_MsgID_IsValid(int value);
const SC_LandCallScore_MsgID SC_LandCallScore_MsgID_MsgID_MIN = SC_LandCallScore_MsgID_ID;
const SC_LandCallScore_MsgID SC_LandCallScore_MsgID_MsgID_MAX = SC_LandCallScore_MsgID_ID;
const int SC_LandCallScore_MsgID_MsgID_ARRAYSIZE = SC_LandCallScore_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandCallScore_MsgID_descriptor();
inline const ::std::string& SC_LandCallScore_MsgID_Name(SC_LandCallScore_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandCallScore_MsgID_descriptor(), value);
}
inline bool SC_LandCallScore_MsgID_Parse(
    const ::std::string& name, SC_LandCallScore_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandCallScore_MsgID>(
    SC_LandCallScore_MsgID_descriptor(), name, value);
}
enum SC_LandCallFail_MsgID {
  SC_LandCallFail_MsgID_ID = 15005
};
bool SC_LandCallFail_MsgID_IsValid(int value);
const SC_LandCallFail_MsgID SC_LandCallFail_MsgID_MsgID_MIN = SC_LandCallFail_MsgID_ID;
const SC_LandCallFail_MsgID SC_LandCallFail_MsgID_MsgID_MAX = SC_LandCallFail_MsgID_ID;
const int SC_LandCallFail_MsgID_MsgID_ARRAYSIZE = SC_LandCallFail_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandCallFail_MsgID_descriptor();
inline const ::std::string& SC_LandCallFail_MsgID_Name(SC_LandCallFail_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandCallFail_MsgID_descriptor(), value);
}
inline bool SC_LandCallFail_MsgID_Parse(
    const ::std::string& name, SC_LandCallFail_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandCallFail_MsgID>(
    SC_LandCallFail_MsgID_descriptor(), name, value);
}
enum SC_LandInfo_MsgID {
  SC_LandInfo_MsgID_ID = 15006
};
bool SC_LandInfo_MsgID_IsValid(int value);
const SC_LandInfo_MsgID SC_LandInfo_MsgID_MsgID_MIN = SC_LandInfo_MsgID_ID;
const SC_LandInfo_MsgID SC_LandInfo_MsgID_MsgID_MAX = SC_LandInfo_MsgID_ID;
const int SC_LandInfo_MsgID_MsgID_ARRAYSIZE = SC_LandInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandInfo_MsgID_descriptor();
inline const ::std::string& SC_LandInfo_MsgID_Name(SC_LandInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandInfo_MsgID_descriptor(), value);
}
inline bool SC_LandInfo_MsgID_Parse(
    const ::std::string& name, SC_LandInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandInfo_MsgID>(
    SC_LandInfo_MsgID_descriptor(), name, value);
}
enum CS_LandOutCard_MsgID {
  CS_LandOutCard_MsgID_ID = 15007
};
bool CS_LandOutCard_MsgID_IsValid(int value);
const CS_LandOutCard_MsgID CS_LandOutCard_MsgID_MsgID_MIN = CS_LandOutCard_MsgID_ID;
const CS_LandOutCard_MsgID CS_LandOutCard_MsgID_MsgID_MAX = CS_LandOutCard_MsgID_ID;
const int CS_LandOutCard_MsgID_MsgID_ARRAYSIZE = CS_LandOutCard_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_LandOutCard_MsgID_descriptor();
inline const ::std::string& CS_LandOutCard_MsgID_Name(CS_LandOutCard_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_LandOutCard_MsgID_descriptor(), value);
}
inline bool CS_LandOutCard_MsgID_Parse(
    const ::std::string& name, CS_LandOutCard_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_LandOutCard_MsgID>(
    CS_LandOutCard_MsgID_descriptor(), name, value);
}
enum SC_LandOutCard_MsgID {
  SC_LandOutCard_MsgID_ID = 15008
};
bool SC_LandOutCard_MsgID_IsValid(int value);
const SC_LandOutCard_MsgID SC_LandOutCard_MsgID_MsgID_MIN = SC_LandOutCard_MsgID_ID;
const SC_LandOutCard_MsgID SC_LandOutCard_MsgID_MsgID_MAX = SC_LandOutCard_MsgID_ID;
const int SC_LandOutCard_MsgID_MsgID_ARRAYSIZE = SC_LandOutCard_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandOutCard_MsgID_descriptor();
inline const ::std::string& SC_LandOutCard_MsgID_Name(SC_LandOutCard_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandOutCard_MsgID_descriptor(), value);
}
inline bool SC_LandOutCard_MsgID_Parse(
    const ::std::string& name, SC_LandOutCard_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandOutCard_MsgID>(
    SC_LandOutCard_MsgID_descriptor(), name, value);
}
enum CS_LandPassCard_MsgID {
  CS_LandPassCard_MsgID_ID = 15009
};
bool CS_LandPassCard_MsgID_IsValid(int value);
const CS_LandPassCard_MsgID CS_LandPassCard_MsgID_MsgID_MIN = CS_LandPassCard_MsgID_ID;
const CS_LandPassCard_MsgID CS_LandPassCard_MsgID_MsgID_MAX = CS_LandPassCard_MsgID_ID;
const int CS_LandPassCard_MsgID_MsgID_ARRAYSIZE = CS_LandPassCard_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_LandPassCard_MsgID_descriptor();
inline const ::std::string& CS_LandPassCard_MsgID_Name(CS_LandPassCard_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_LandPassCard_MsgID_descriptor(), value);
}
inline bool CS_LandPassCard_MsgID_Parse(
    const ::std::string& name, CS_LandPassCard_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_LandPassCard_MsgID>(
    CS_LandPassCard_MsgID_descriptor(), name, value);
}
enum SC_LandPassCard_MsgID {
  SC_LandPassCard_MsgID_ID = 15010
};
bool SC_LandPassCard_MsgID_IsValid(int value);
const SC_LandPassCard_MsgID SC_LandPassCard_MsgID_MsgID_MIN = SC_LandPassCard_MsgID_ID;
const SC_LandPassCard_MsgID SC_LandPassCard_MsgID_MsgID_MAX = SC_LandPassCard_MsgID_ID;
const int SC_LandPassCard_MsgID_MsgID_ARRAYSIZE = SC_LandPassCard_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandPassCard_MsgID_descriptor();
inline const ::std::string& SC_LandPassCard_MsgID_Name(SC_LandPassCard_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandPassCard_MsgID_descriptor(), value);
}
inline bool SC_LandPassCard_MsgID_Parse(
    const ::std::string& name, SC_LandPassCard_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandPassCard_MsgID>(
    SC_LandPassCard_MsgID_descriptor(), name, value);
}
enum SC_LandConclude_MsgID {
  SC_LandConclude_MsgID_ID = 15011
};
bool SC_LandConclude_MsgID_IsValid(int value);
const SC_LandConclude_MsgID SC_LandConclude_MsgID_MsgID_MIN = SC_LandConclude_MsgID_ID;
const SC_LandConclude_MsgID SC_LandConclude_MsgID_MsgID_MAX = SC_LandConclude_MsgID_ID;
const int SC_LandConclude_MsgID_MsgID_ARRAYSIZE = SC_LandConclude_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandConclude_MsgID_descriptor();
inline const ::std::string& SC_LandConclude_MsgID_Name(SC_LandConclude_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandConclude_MsgID_descriptor(), value);
}
inline bool SC_LandConclude_MsgID_Parse(
    const ::std::string& name, SC_LandConclude_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandConclude_MsgID>(
    SC_LandConclude_MsgID_descriptor(), name, value);
}
enum SC_LandPlayerOffline_MsgID {
  SC_LandPlayerOffline_MsgID_ID = 15012
};
bool SC_LandPlayerOffline_MsgID_IsValid(int value);
const SC_LandPlayerOffline_MsgID SC_LandPlayerOffline_MsgID_MsgID_MIN = SC_LandPlayerOffline_MsgID_ID;
const SC_LandPlayerOffline_MsgID SC_LandPlayerOffline_MsgID_MsgID_MAX = SC_LandPlayerOffline_MsgID_ID;
const int SC_LandPlayerOffline_MsgID_MsgID_ARRAYSIZE = SC_LandPlayerOffline_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandPlayerOffline_MsgID_descriptor();
inline const ::std::string& SC_LandPlayerOffline_MsgID_Name(SC_LandPlayerOffline_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandPlayerOffline_MsgID_descriptor(), value);
}
inline bool SC_LandPlayerOffline_MsgID_Parse(
    const ::std::string& name, SC_LandPlayerOffline_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandPlayerOffline_MsgID>(
    SC_LandPlayerOffline_MsgID_descriptor(), name, value);
}
enum SC_LandPlayerOnline_MsgID {
  SC_LandPlayerOnline_MsgID_ID = 15013
};
bool SC_LandPlayerOnline_MsgID_IsValid(int value);
const SC_LandPlayerOnline_MsgID SC_LandPlayerOnline_MsgID_MsgID_MIN = SC_LandPlayerOnline_MsgID_ID;
const SC_LandPlayerOnline_MsgID SC_LandPlayerOnline_MsgID_MsgID_MAX = SC_LandPlayerOnline_MsgID_ID;
const int SC_LandPlayerOnline_MsgID_MsgID_ARRAYSIZE = SC_LandPlayerOnline_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandPlayerOnline_MsgID_descriptor();
inline const ::std::string& SC_LandPlayerOnline_MsgID_Name(SC_LandPlayerOnline_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandPlayerOnline_MsgID_descriptor(), value);
}
inline bool SC_LandPlayerOnline_MsgID_Parse(
    const ::std::string& name, SC_LandPlayerOnline_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandPlayerOnline_MsgID>(
    SC_LandPlayerOnline_MsgID_descriptor(), name, value);
}
enum SC_LandRecoveryPlayerCard_MsgID {
  SC_LandRecoveryPlayerCard_MsgID_ID = 15014
};
bool SC_LandRecoveryPlayerCard_MsgID_IsValid(int value);
const SC_LandRecoveryPlayerCard_MsgID SC_LandRecoveryPlayerCard_MsgID_MsgID_MIN = SC_LandRecoveryPlayerCard_MsgID_ID;
const SC_LandRecoveryPlayerCard_MsgID SC_LandRecoveryPlayerCard_MsgID_MsgID_MAX = SC_LandRecoveryPlayerCard_MsgID_ID;
const int SC_LandRecoveryPlayerCard_MsgID_MsgID_ARRAYSIZE = SC_LandRecoveryPlayerCard_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandRecoveryPlayerCard_MsgID_descriptor();
inline const ::std::string& SC_LandRecoveryPlayerCard_MsgID_Name(SC_LandRecoveryPlayerCard_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandRecoveryPlayerCard_MsgID_descriptor(), value);
}
inline bool SC_LandRecoveryPlayerCard_MsgID_Parse(
    const ::std::string& name, SC_LandRecoveryPlayerCard_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandRecoveryPlayerCard_MsgID>(
    SC_LandRecoveryPlayerCard_MsgID_descriptor(), name, value);
}
enum SC_LandRecoveryPlayerCallScore_MsgID {
  SC_LandRecoveryPlayerCallScore_MsgID_ID = 15015
};
bool SC_LandRecoveryPlayerCallScore_MsgID_IsValid(int value);
const SC_LandRecoveryPlayerCallScore_MsgID SC_LandRecoveryPlayerCallScore_MsgID_MsgID_MIN = SC_LandRecoveryPlayerCallScore_MsgID_ID;
const SC_LandRecoveryPlayerCallScore_MsgID SC_LandRecoveryPlayerCallScore_MsgID_MsgID_MAX = SC_LandRecoveryPlayerCallScore_MsgID_ID;
const int SC_LandRecoveryPlayerCallScore_MsgID_MsgID_ARRAYSIZE = SC_LandRecoveryPlayerCallScore_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandRecoveryPlayerCallScore_MsgID_descriptor();
inline const ::std::string& SC_LandRecoveryPlayerCallScore_MsgID_Name(SC_LandRecoveryPlayerCallScore_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandRecoveryPlayerCallScore_MsgID_descriptor(), value);
}
inline bool SC_LandRecoveryPlayerCallScore_MsgID_Parse(
    const ::std::string& name, SC_LandRecoveryPlayerCallScore_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandRecoveryPlayerCallScore_MsgID>(
    SC_LandRecoveryPlayerCallScore_MsgID_descriptor(), name, value);
}
enum SC_LandCallScorePlayerOffline_MsgID {
  SC_LandCallScorePlayerOffline_MsgID_ID = 15017
};
bool SC_LandCallScorePlayerOffline_MsgID_IsValid(int value);
const SC_LandCallScorePlayerOffline_MsgID SC_LandCallScorePlayerOffline_MsgID_MsgID_MIN = SC_LandCallScorePlayerOffline_MsgID_ID;
const SC_LandCallScorePlayerOffline_MsgID SC_LandCallScorePlayerOffline_MsgID_MsgID_MAX = SC_LandCallScorePlayerOffline_MsgID_ID;
const int SC_LandCallScorePlayerOffline_MsgID_MsgID_ARRAYSIZE = SC_LandCallScorePlayerOffline_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandCallScorePlayerOffline_MsgID_descriptor();
inline const ::std::string& SC_LandCallScorePlayerOffline_MsgID_Name(SC_LandCallScorePlayerOffline_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandCallScorePlayerOffline_MsgID_descriptor(), value);
}
inline bool SC_LandCallScorePlayerOffline_MsgID_Parse(
    const ::std::string& name, SC_LandCallScorePlayerOffline_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandCallScorePlayerOffline_MsgID>(
    SC_LandCallScorePlayerOffline_MsgID_descriptor(), name, value);
}
enum CS_LandTrusteeship_MsgID {
  CS_LandTrusteeship_MsgID_ID = 15018
};
bool CS_LandTrusteeship_MsgID_IsValid(int value);
const CS_LandTrusteeship_MsgID CS_LandTrusteeship_MsgID_MsgID_MIN = CS_LandTrusteeship_MsgID_ID;
const CS_LandTrusteeship_MsgID CS_LandTrusteeship_MsgID_MsgID_MAX = CS_LandTrusteeship_MsgID_ID;
const int CS_LandTrusteeship_MsgID_MsgID_ARRAYSIZE = CS_LandTrusteeship_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_LandTrusteeship_MsgID_descriptor();
inline const ::std::string& CS_LandTrusteeship_MsgID_Name(CS_LandTrusteeship_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_LandTrusteeship_MsgID_descriptor(), value);
}
inline bool CS_LandTrusteeship_MsgID_Parse(
    const ::std::string& name, CS_LandTrusteeship_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_LandTrusteeship_MsgID>(
    CS_LandTrusteeship_MsgID_descriptor(), name, value);
}
enum SC_LandTrusteeship_MsgID {
  SC_LandTrusteeship_MsgID_ID = 15019
};
bool SC_LandTrusteeship_MsgID_IsValid(int value);
const SC_LandTrusteeship_MsgID SC_LandTrusteeship_MsgID_MsgID_MIN = SC_LandTrusteeship_MsgID_ID;
const SC_LandTrusteeship_MsgID SC_LandTrusteeship_MsgID_MsgID_MAX = SC_LandTrusteeship_MsgID_ID;
const int SC_LandTrusteeship_MsgID_MsgID_ARRAYSIZE = SC_LandTrusteeship_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandTrusteeship_MsgID_descriptor();
inline const ::std::string& SC_LandTrusteeship_MsgID_Name(SC_LandTrusteeship_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandTrusteeship_MsgID_descriptor(), value);
}
inline bool SC_LandTrusteeship_MsgID_Parse(
    const ::std::string& name, SC_LandTrusteeship_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandTrusteeship_MsgID>(
    SC_LandTrusteeship_MsgID_descriptor(), name, value);
}
enum CS_LandCallDouble_MsgID {
  CS_LandCallDouble_MsgID_ID = 15020
};
bool CS_LandCallDouble_MsgID_IsValid(int value);
const CS_LandCallDouble_MsgID CS_LandCallDouble_MsgID_MsgID_MIN = CS_LandCallDouble_MsgID_ID;
const CS_LandCallDouble_MsgID CS_LandCallDouble_MsgID_MsgID_MAX = CS_LandCallDouble_MsgID_ID;
const int CS_LandCallDouble_MsgID_MsgID_ARRAYSIZE = CS_LandCallDouble_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_LandCallDouble_MsgID_descriptor();
inline const ::std::string& CS_LandCallDouble_MsgID_Name(CS_LandCallDouble_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_LandCallDouble_MsgID_descriptor(), value);
}
inline bool CS_LandCallDouble_MsgID_Parse(
    const ::std::string& name, CS_LandCallDouble_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_LandCallDouble_MsgID>(
    CS_LandCallDouble_MsgID_descriptor(), name, value);
}
enum SC_LandCallDouble_MsgID {
  SC_LandCallDouble_MsgID_ID = 15021
};
bool SC_LandCallDouble_MsgID_IsValid(int value);
const SC_LandCallDouble_MsgID SC_LandCallDouble_MsgID_MsgID_MIN = SC_LandCallDouble_MsgID_ID;
const SC_LandCallDouble_MsgID SC_LandCallDouble_MsgID_MsgID_MAX = SC_LandCallDouble_MsgID_ID;
const int SC_LandCallDouble_MsgID_MsgID_ARRAYSIZE = SC_LandCallDouble_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandCallDouble_MsgID_descriptor();
inline const ::std::string& SC_LandCallDouble_MsgID_Name(SC_LandCallDouble_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandCallDouble_MsgID_descriptor(), value);
}
inline bool SC_LandCallDouble_MsgID_Parse(
    const ::std::string& name, SC_LandCallDouble_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandCallDouble_MsgID>(
    SC_LandCallDouble_MsgID_descriptor(), name, value);
}
enum SC_LandCallDoubleFinish_MsgID {
  SC_LandCallDoubleFinish_MsgID_ID = 15022
};
bool SC_LandCallDoubleFinish_MsgID_IsValid(int value);
const SC_LandCallDoubleFinish_MsgID SC_LandCallDoubleFinish_MsgID_MsgID_MIN = SC_LandCallDoubleFinish_MsgID_ID;
const SC_LandCallDoubleFinish_MsgID SC_LandCallDoubleFinish_MsgID_MsgID_MAX = SC_LandCallDoubleFinish_MsgID_ID;
const int SC_LandCallDoubleFinish_MsgID_MsgID_ARRAYSIZE = SC_LandCallDoubleFinish_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandCallDoubleFinish_MsgID_descriptor();
inline const ::std::string& SC_LandCallDoubleFinish_MsgID_Name(SC_LandCallDoubleFinish_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandCallDoubleFinish_MsgID_descriptor(), value);
}
inline bool SC_LandCallDoubleFinish_MsgID_Parse(
    const ::std::string& name, SC_LandCallDoubleFinish_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandCallDoubleFinish_MsgID>(
    SC_LandCallDoubleFinish_MsgID_descriptor(), name, value);
}
enum SC_LandRecoveryPlayerDouble_MsgID {
  SC_LandRecoveryPlayerDouble_MsgID_ID = 15023
};
bool SC_LandRecoveryPlayerDouble_MsgID_IsValid(int value);
const SC_LandRecoveryPlayerDouble_MsgID SC_LandRecoveryPlayerDouble_MsgID_MsgID_MIN = SC_LandRecoveryPlayerDouble_MsgID_ID;
const SC_LandRecoveryPlayerDouble_MsgID SC_LandRecoveryPlayerDouble_MsgID_MsgID_MAX = SC_LandRecoveryPlayerDouble_MsgID_ID;
const int SC_LandRecoveryPlayerDouble_MsgID_MsgID_ARRAYSIZE = SC_LandRecoveryPlayerDouble_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LandRecoveryPlayerDouble_MsgID_descriptor();
inline const ::std::string& SC_LandRecoveryPlayerDouble_MsgID_Name(SC_LandRecoveryPlayerDouble_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LandRecoveryPlayerDouble_MsgID_descriptor(), value);
}
inline bool SC_LandRecoveryPlayerDouble_MsgID_Parse(
    const ::std::string& name, SC_LandRecoveryPlayerDouble_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LandRecoveryPlayerDouble_MsgID>(
    SC_LandRecoveryPlayerDouble_MsgID_descriptor(), name, value);
}
enum CS_GetPrivateConfig_MsgID {
  CS_GetPrivateConfig_MsgID_ID = 15024
};
bool CS_GetPrivateConfig_MsgID_IsValid(int value);
const CS_GetPrivateConfig_MsgID CS_GetPrivateConfig_MsgID_MsgID_MIN = CS_GetPrivateConfig_MsgID_ID;
const CS_GetPrivateConfig_MsgID CS_GetPrivateConfig_MsgID_MsgID_MAX = CS_GetPrivateConfig_MsgID_ID;
const int CS_GetPrivateConfig_MsgID_MsgID_ARRAYSIZE = CS_GetPrivateConfig_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_GetPrivateConfig_MsgID_descriptor();
inline const ::std::string& CS_GetPrivateConfig_MsgID_Name(CS_GetPrivateConfig_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_GetPrivateConfig_MsgID_descriptor(), value);
}
inline bool CS_GetPrivateConfig_MsgID_Parse(
    const ::std::string& name, CS_GetPrivateConfig_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_GetPrivateConfig_MsgID>(
    CS_GetPrivateConfig_MsgID_descriptor(), name, value);
}
enum CS_SetPrivateConfigChange_MsgID {
  CS_SetPrivateConfigChange_MsgID_ID = 15025
};
bool CS_SetPrivateConfigChange_MsgID_IsValid(int value);
const CS_SetPrivateConfigChange_MsgID CS_SetPrivateConfigChange_MsgID_MsgID_MIN = CS_SetPrivateConfigChange_MsgID_ID;
const CS_SetPrivateConfigChange_MsgID CS_SetPrivateConfigChange_MsgID_MsgID_MAX = CS_SetPrivateConfigChange_MsgID_ID;
const int CS_SetPrivateConfigChange_MsgID_MsgID_ARRAYSIZE = CS_SetPrivateConfigChange_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_SetPrivateConfigChange_MsgID_descriptor();
inline const ::std::string& CS_SetPrivateConfigChange_MsgID_Name(CS_SetPrivateConfigChange_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_SetPrivateConfigChange_MsgID_descriptor(), value);
}
inline bool CS_SetPrivateConfigChange_MsgID_Parse(
    const ::std::string& name, CS_SetPrivateConfigChange_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_SetPrivateConfigChange_MsgID>(
    CS_SetPrivateConfigChange_MsgID_descriptor(), name, value);
}
enum SC_PrivateConfigChange_MsgID {
  SC_PrivateConfigChange_MsgID_ID = 15026
};
bool SC_PrivateConfigChange_MsgID_IsValid(int value);
const SC_PrivateConfigChange_MsgID SC_PrivateConfigChange_MsgID_MsgID_MIN = SC_PrivateConfigChange_MsgID_ID;
const SC_PrivateConfigChange_MsgID SC_PrivateConfigChange_MsgID_MsgID_MAX = SC_PrivateConfigChange_MsgID_ID;
const int SC_PrivateConfigChange_MsgID_MsgID_ARRAYSIZE = SC_PrivateConfigChange_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_PrivateConfigChange_MsgID_descriptor();
inline const ::std::string& SC_PrivateConfigChange_MsgID_Name(SC_PrivateConfigChange_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_PrivateConfigChange_MsgID_descriptor(), value);
}
inline bool SC_PrivateConfigChange_MsgID_Parse(
    const ::std::string& name, SC_PrivateConfigChange_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_PrivateConfigChange_MsgID>(
    SC_PrivateConfigChange_MsgID_descriptor(), name, value);
}
enum CS_TabTiren_MsgID {
  CS_TabTiren_MsgID_ID = 15027
};
bool CS_TabTiren_MsgID_IsValid(int value);
const CS_TabTiren_MsgID CS_TabTiren_MsgID_MsgID_MIN = CS_TabTiren_MsgID_ID;
const CS_TabTiren_MsgID CS_TabTiren_MsgID_MsgID_MAX = CS_TabTiren_MsgID_ID;
const int CS_TabTiren_MsgID_MsgID_ARRAYSIZE = CS_TabTiren_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_TabTiren_MsgID_descriptor();
inline const ::std::string& CS_TabTiren_MsgID_Name(CS_TabTiren_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_TabTiren_MsgID_descriptor(), value);
}
inline bool CS_TabTiren_MsgID_Parse(
    const ::std::string& name, CS_TabTiren_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_TabTiren_MsgID>(
    CS_TabTiren_MsgID_descriptor(), name, value);
}
enum CS_TabVote_MsgID {
  CS_TabVote_MsgID_ID = 15028
};
bool CS_TabVote_MsgID_IsValid(int value);
const CS_TabVote_MsgID CS_TabVote_MsgID_MsgID_MIN = CS_TabVote_MsgID_ID;
const CS_TabVote_MsgID CS_TabVote_MsgID_MsgID_MAX = CS_TabVote_MsgID_ID;
const int CS_TabVote_MsgID_MsgID_ARRAYSIZE = CS_TabVote_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_TabVote_MsgID_descriptor();
inline const ::std::string& CS_TabVote_MsgID_Name(CS_TabVote_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_TabVote_MsgID_descriptor(), value);
}
inline bool CS_TabVote_MsgID_Parse(
    const ::std::string& name, CS_TabVote_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_TabVote_MsgID>(
    CS_TabVote_MsgID_descriptor(), name, value);
}
enum SC_TabVoteInfo_MsgID {
  SC_TabVoteInfo_MsgID_ID = 15029
};
bool SC_TabVoteInfo_MsgID_IsValid(int value);
const SC_TabVoteInfo_MsgID SC_TabVoteInfo_MsgID_MsgID_MIN = SC_TabVoteInfo_MsgID_ID;
const SC_TabVoteInfo_MsgID SC_TabVoteInfo_MsgID_MsgID_MAX = SC_TabVoteInfo_MsgID_ID;
const int SC_TabVoteInfo_MsgID_MsgID_ARRAYSIZE = SC_TabVoteInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_TabVoteInfo_MsgID_descriptor();
inline const ::std::string& SC_TabVoteInfo_MsgID_Name(SC_TabVoteInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_TabVoteInfo_MsgID_descriptor(), value);
}
inline bool SC_TabVoteInfo_MsgID_Parse(
    const ::std::string& name, SC_TabVoteInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_TabVoteInfo_MsgID>(
    SC_TabVoteInfo_MsgID_descriptor(), name, value);
}
enum SC_TotalScoreInfo_MsgID {
  SC_TotalScoreInfo_MsgID_ID = 15030
};
bool SC_TotalScoreInfo_MsgID_IsValid(int value);
const SC_TotalScoreInfo_MsgID SC_TotalScoreInfo_MsgID_MsgID_MIN = SC_TotalScoreInfo_MsgID_ID;
const SC_TotalScoreInfo_MsgID SC_TotalScoreInfo_MsgID_MsgID_MAX = SC_TotalScoreInfo_MsgID_ID;
const int SC_TotalScoreInfo_MsgID_MsgID_ARRAYSIZE = SC_TotalScoreInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_TotalScoreInfo_MsgID_descriptor();
inline const ::std::string& SC_TotalScoreInfo_MsgID_Name(SC_TotalScoreInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_TotalScoreInfo_MsgID_descriptor(), value);
}
inline bool SC_TotalScoreInfo_MsgID_Parse(
    const ::std::string& name, SC_TotalScoreInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_TotalScoreInfo_MsgID>(
    SC_TotalScoreInfo_MsgID_descriptor(), name, value);
}
enum CS_GetTabVoteArray_MsgID {
  CS_GetTabVoteArray_MsgID_ID = 15031
};
bool CS_GetTabVoteArray_MsgID_IsValid(int value);
const CS_GetTabVoteArray_MsgID CS_GetTabVoteArray_MsgID_MsgID_MIN = CS_GetTabVoteArray_MsgID_ID;
const CS_GetTabVoteArray_MsgID CS_GetTabVoteArray_MsgID_MsgID_MAX = CS_GetTabVoteArray_MsgID_ID;
const int CS_GetTabVoteArray_MsgID_MsgID_ARRAYSIZE = CS_GetTabVoteArray_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_GetTabVoteArray_MsgID_descriptor();
inline const ::std::string& CS_GetTabVoteArray_MsgID_Name(CS_GetTabVoteArray_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_GetTabVoteArray_MsgID_descriptor(), value);
}
inline bool CS_GetTabVoteArray_MsgID_Parse(
    const ::std::string& name, CS_GetTabVoteArray_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_GetTabVoteArray_MsgID>(
    CS_GetTabVoteArray_MsgID_descriptor(), name, value);
}
enum SC_TabVoteArray_MsgID {
  SC_TabVoteArray_MsgID_ID = 15032
};
bool SC_TabVoteArray_MsgID_IsValid(int value);
const SC_TabVoteArray_MsgID SC_TabVoteArray_MsgID_MsgID_MIN = SC_TabVoteArray_MsgID_ID;
const SC_TabVoteArray_MsgID SC_TabVoteArray_MsgID_MsgID_MAX = SC_TabVoteArray_MsgID_ID;
const int SC_TabVoteArray_MsgID_MsgID_ARRAYSIZE = SC_TabVoteArray_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_TabVoteArray_MsgID_descriptor();
inline const ::std::string& SC_TabVoteArray_MsgID_Name(SC_TabVoteArray_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_TabVoteArray_MsgID_descriptor(), value);
}
inline bool SC_TabVoteArray_MsgID_Parse(
    const ::std::string& name, SC_TabVoteArray_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_TabVoteArray_MsgID>(
    SC_TabVoteArray_MsgID_descriptor(), name, value);
}
enum SC_TickNotify_MsgID {
  SC_TickNotify_MsgID_ID = 15033
};
bool SC_TickNotify_MsgID_IsValid(int value);
const SC_TickNotify_MsgID SC_TickNotify_MsgID_MsgID_MIN = SC_TickNotify_MsgID_ID;
const SC_TickNotify_MsgID SC_TickNotify_MsgID_MsgID_MAX = SC_TickNotify_MsgID_ID;
const int SC_TickNotify_MsgID_MsgID_ARRAYSIZE = SC_TickNotify_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_TickNotify_MsgID_descriptor();
inline const ::std::string& SC_TickNotify_MsgID_Name(SC_TickNotify_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_TickNotify_MsgID_descriptor(), value);
}
inline bool SC_TickNotify_MsgID_Parse(
    const ::std::string& name, SC_TickNotify_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_TickNotify_MsgID>(
    SC_TickNotify_MsgID_descriptor(), name, value);
}
enum SC_Dismiss_MsgID {
  SC_Dismiss_MsgID_ID = 15034
};
bool SC_Dismiss_MsgID_IsValid(int value);
const SC_Dismiss_MsgID SC_Dismiss_MsgID_MsgID_MIN = SC_Dismiss_MsgID_ID;
const SC_Dismiss_MsgID SC_Dismiss_MsgID_MsgID_MAX = SC_Dismiss_MsgID_ID;
const int SC_Dismiss_MsgID_MsgID_ARRAYSIZE = SC_Dismiss_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_Dismiss_MsgID_descriptor();
inline const ::std::string& SC_Dismiss_MsgID_Name(SC_Dismiss_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_Dismiss_MsgID_descriptor(), value);
}
inline bool SC_Dismiss_MsgID_Parse(
    const ::std::string& name, SC_Dismiss_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_Dismiss_MsgID>(
    SC_Dismiss_MsgID_descriptor(), name, value);
}
enum SC_RecconectReady_MsgID {
  SC_RecconectReady_MsgID_ID = 15035
};
bool SC_RecconectReady_MsgID_IsValid(int value);
const SC_RecconectReady_MsgID SC_RecconectReady_MsgID_MsgID_MIN = SC_RecconectReady_MsgID_ID;
const SC_RecconectReady_MsgID SC_RecconectReady_MsgID_MsgID_MAX = SC_RecconectReady_MsgID_ID;
const int SC_RecconectReady_MsgID_MsgID_ARRAYSIZE = SC_RecconectReady_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_RecconectReady_MsgID_descriptor();
inline const ::std::string& SC_RecconectReady_MsgID_Name(SC_RecconectReady_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_RecconectReady_MsgID_descriptor(), value);
}
inline bool SC_RecconectReady_MsgID_Parse(
    const ::std::string& name, SC_RecconectReady_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_RecconectReady_MsgID>(
    SC_RecconectReady_MsgID_descriptor(), name, value);
}
enum LAND_CARD_TYPE {
  LAND_CARD_TYPE_ERROR = 0,
  LAND_CARD_TYPE_SINGLE = 1,
  LAND_CARD_TYPE_DOUBLE = 2,
  LAND_CARD_TYPE_THREE = 3,
  LAND_CARD_TYPE_SINGLE_LINE = 4,
  LAND_CARD_TYPE_DOUBLE_LINE = 5,
  LAND_CARD_TYPE_THREE_LINE = 6,
  LAND_CARD_TYPE_THREE_TAKE_ONE = 7,
  LAND_CARD_TYPE_THREE_TAKE_TWO = 8,
  LAND_CARD_TYPE_FOUR_TAKE_ONE = 9,
  LAND_CARD_TYPE_FOUR_TAKE_TWO = 10,
  LAND_CARD_TYPE_BOMB = 11,
  LAND_CARD_TYPE_MISSILE = 12
};
bool LAND_CARD_TYPE_IsValid(int value);
const LAND_CARD_TYPE LAND_CARD_TYPE_MIN = LAND_CARD_TYPE_ERROR;
const LAND_CARD_TYPE LAND_CARD_TYPE_MAX = LAND_CARD_TYPE_MISSILE;
const int LAND_CARD_TYPE_ARRAYSIZE = LAND_CARD_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* LAND_CARD_TYPE_descriptor();
inline const ::std::string& LAND_CARD_TYPE_Name(LAND_CARD_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    LAND_CARD_TYPE_descriptor(), value);
}
inline bool LAND_CARD_TYPE_Parse(
    const ::std::string& name, LAND_CARD_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LAND_CARD_TYPE>(
    LAND_CARD_TYPE_descriptor(), name, value);
}
// ===================================================================

class SC_LandStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandStart) */ {
 public:
  SC_LandStart();
  virtual ~SC_LandStart();

  SC_LandStart(const SC_LandStart& from);

  inline SC_LandStart& operator=(const SC_LandStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandStart& default_instance();

  static inline const SC_LandStart* internal_default_instance() {
    return reinterpret_cast<const SC_LandStart*>(
               &_SC_LandStart_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SC_LandStart* other);

  // implements Message ----------------------------------------------

  inline SC_LandStart* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandStart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandStart& from);
  void MergeFrom(const SC_LandStart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandStart_MsgID MsgID;
  static const MsgID ID =
    SC_LandStart_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandStart_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandStart_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandStart_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandStart_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandStart_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandStart_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandStart_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 cards = 4;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 4;
  ::google::protobuf::int32 cards(int index) const;
  void set_cards(int index, ::google::protobuf::int32 value);
  void add_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // optional int32 first_turn = 1;
  bool has_first_turn() const;
  void clear_first_turn();
  static const int kFirstTurnFieldNumber = 1;
  ::google::protobuf::int32 first_turn() const;
  void set_first_turn(::google::protobuf::int32 value);

  // optional int32 valid_card_chair_id = 2;
  bool has_valid_card_chair_id() const;
  void clear_valid_card_chair_id();
  static const int kValidCardChairIdFieldNumber = 2;
  ::google::protobuf::int32 valid_card_chair_id() const;
  void set_valid_card_chair_id(::google::protobuf::int32 value);

  // optional int32 valid_card = 3;
  bool has_valid_card() const;
  void clear_valid_card();
  static const int kValidCardFieldNumber = 3;
  ::google::protobuf::int32 valid_card() const;
  void set_valid_card(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_LandStart)
 private:
  void set_has_first_turn();
  void clear_has_first_turn();
  void set_has_valid_card_chair_id();
  void clear_has_valid_card_chair_id();
  void set_has_valid_card();
  void clear_has_valid_card();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::int32 first_turn_;
  ::google::protobuf::int32 valid_card_chair_id_;
  ::google::protobuf::int32 valid_card_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_LandCallScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_LandCallScore) */ {
 public:
  CS_LandCallScore();
  virtual ~CS_LandCallScore();

  CS_LandCallScore(const CS_LandCallScore& from);

  inline CS_LandCallScore& operator=(const CS_LandCallScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_LandCallScore& default_instance();

  static inline const CS_LandCallScore* internal_default_instance() {
    return reinterpret_cast<const CS_LandCallScore*>(
               &_CS_LandCallScore_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CS_LandCallScore* other);

  // implements Message ----------------------------------------------

  inline CS_LandCallScore* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_LandCallScore* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_LandCallScore& from);
  void MergeFrom(const CS_LandCallScore& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_LandCallScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_LandCallScore_MsgID MsgID;
  static const MsgID ID =
    CS_LandCallScore_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_LandCallScore_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_LandCallScore_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_LandCallScore_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_LandCallScore_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_LandCallScore_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_LandCallScore_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_LandCallScore_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 call_score = 1;
  bool has_call_score() const;
  void clear_call_score();
  static const int kCallScoreFieldNumber = 1;
  ::google::protobuf::int32 call_score() const;
  void set_call_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_LandCallScore)
 private:
  void set_has_call_score();
  void clear_has_call_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 call_score_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LandCallScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandCallScore) */ {
 public:
  SC_LandCallScore();
  virtual ~SC_LandCallScore();

  SC_LandCallScore(const SC_LandCallScore& from);

  inline SC_LandCallScore& operator=(const SC_LandCallScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandCallScore& default_instance();

  static inline const SC_LandCallScore* internal_default_instance() {
    return reinterpret_cast<const SC_LandCallScore*>(
               &_SC_LandCallScore_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SC_LandCallScore* other);

  // implements Message ----------------------------------------------

  inline SC_LandCallScore* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandCallScore* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandCallScore& from);
  void MergeFrom(const SC_LandCallScore& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandCallScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandCallScore_MsgID MsgID;
  static const MsgID ID =
    SC_LandCallScore_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandCallScore_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandCallScore_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandCallScore_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandCallScore_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandCallScore_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandCallScore_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandCallScore_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 cur_chair_id = 1;
  bool has_cur_chair_id() const;
  void clear_cur_chair_id();
  static const int kCurChairIdFieldNumber = 1;
  ::google::protobuf::int32 cur_chair_id() const;
  void set_cur_chair_id(::google::protobuf::int32 value);

  // optional int32 call_chair_id = 2;
  bool has_call_chair_id() const;
  void clear_call_chair_id();
  static const int kCallChairIdFieldNumber = 2;
  ::google::protobuf::int32 call_chair_id() const;
  void set_call_chair_id(::google::protobuf::int32 value);

  // optional int32 call_score = 3;
  bool has_call_score() const;
  void clear_call_score();
  static const int kCallScoreFieldNumber = 3;
  ::google::protobuf::int32 call_score() const;
  void set_call_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_LandCallScore)
 private:
  void set_has_cur_chair_id();
  void clear_has_cur_chair_id();
  void set_has_call_chair_id();
  void clear_has_call_chair_id();
  void set_has_call_score();
  void clear_has_call_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 cur_chair_id_;
  ::google::protobuf::int32 call_chair_id_;
  ::google::protobuf::int32 call_score_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LandCallFail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandCallFail) */ {
 public:
  SC_LandCallFail();
  virtual ~SC_LandCallFail();

  SC_LandCallFail(const SC_LandCallFail& from);

  inline SC_LandCallFail& operator=(const SC_LandCallFail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandCallFail& default_instance();

  static inline const SC_LandCallFail* internal_default_instance() {
    return reinterpret_cast<const SC_LandCallFail*>(
               &_SC_LandCallFail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SC_LandCallFail* other);

  // implements Message ----------------------------------------------

  inline SC_LandCallFail* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandCallFail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandCallFail& from);
  void MergeFrom(const SC_LandCallFail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandCallFail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandCallFail_MsgID MsgID;
  static const MsgID ID =
    SC_LandCallFail_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandCallFail_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandCallFail_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandCallFail_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandCallFail_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandCallFail_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandCallFail_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandCallFail_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SC_LandCallFail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LandInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandInfo) */ {
 public:
  SC_LandInfo();
  virtual ~SC_LandInfo();

  SC_LandInfo(const SC_LandInfo& from);

  inline SC_LandInfo& operator=(const SC_LandInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandInfo& default_instance();

  static inline const SC_LandInfo* internal_default_instance() {
    return reinterpret_cast<const SC_LandInfo*>(
               &_SC_LandInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SC_LandInfo* other);

  // implements Message ----------------------------------------------

  inline SC_LandInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandInfo& from);
  void MergeFrom(const SC_LandInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandInfo_MsgID MsgID;
  static const MsgID ID =
    SC_LandInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 cards = 3;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 3;
  ::google::protobuf::int32 cards(int index) const;
  void set_cards(int index, ::google::protobuf::int32 value);
  void add_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // optional int32 land_chair_id = 1;
  bool has_land_chair_id() const;
  void clear_land_chair_id();
  static const int kLandChairIdFieldNumber = 1;
  ::google::protobuf::int32 land_chair_id() const;
  void set_land_chair_id(::google::protobuf::int32 value);

  // optional int32 call_score = 2;
  bool has_call_score() const;
  void clear_call_score();
  static const int kCallScoreFieldNumber = 2;
  ::google::protobuf::int32 call_score() const;
  void set_call_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_LandInfo)
 private:
  void set_has_land_chair_id();
  void clear_has_land_chair_id();
  void set_has_call_score();
  void clear_has_call_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::int32 land_chair_id_;
  ::google::protobuf::int32 call_score_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_LandOutCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_LandOutCard) */ {
 public:
  CS_LandOutCard();
  virtual ~CS_LandOutCard();

  CS_LandOutCard(const CS_LandOutCard& from);

  inline CS_LandOutCard& operator=(const CS_LandOutCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_LandOutCard& default_instance();

  static inline const CS_LandOutCard* internal_default_instance() {
    return reinterpret_cast<const CS_LandOutCard*>(
               &_CS_LandOutCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CS_LandOutCard* other);

  // implements Message ----------------------------------------------

  inline CS_LandOutCard* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_LandOutCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_LandOutCard& from);
  void MergeFrom(const CS_LandOutCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_LandOutCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_LandOutCard_MsgID MsgID;
  static const MsgID ID =
    CS_LandOutCard_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_LandOutCard_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_LandOutCard_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_LandOutCard_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_LandOutCard_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_LandOutCard_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_LandOutCard_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_LandOutCard_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 cards = 1;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 1;
  ::google::protobuf::int32 cards(int index) const;
  void set_cards(int index, ::google::protobuf::int32 value);
  void add_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // @@protoc_insertion_point(class_scope:CS_LandOutCard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LandOutCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandOutCard) */ {
 public:
  SC_LandOutCard();
  virtual ~SC_LandOutCard();

  SC_LandOutCard(const SC_LandOutCard& from);

  inline SC_LandOutCard& operator=(const SC_LandOutCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandOutCard& default_instance();

  static inline const SC_LandOutCard* internal_default_instance() {
    return reinterpret_cast<const SC_LandOutCard*>(
               &_SC_LandOutCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SC_LandOutCard* other);

  // implements Message ----------------------------------------------

  inline SC_LandOutCard* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandOutCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandOutCard& from);
  void MergeFrom(const SC_LandOutCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandOutCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandOutCard_MsgID MsgID;
  static const MsgID ID =
    SC_LandOutCard_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandOutCard_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandOutCard_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandOutCard_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandOutCard_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandOutCard_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandOutCard_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandOutCard_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 cards = 3;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 3;
  ::google::protobuf::int32 cards(int index) const;
  void set_cards(int index, ::google::protobuf::int32 value);
  void add_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // optional int32 cur_chair_id = 1;
  bool has_cur_chair_id() const;
  void clear_cur_chair_id();
  static const int kCurChairIdFieldNumber = 1;
  ::google::protobuf::int32 cur_chair_id() const;
  void set_cur_chair_id(::google::protobuf::int32 value);

  // optional int32 out_chair_id = 2;
  bool has_out_chair_id() const;
  void clear_out_chair_id();
  static const int kOutChairIdFieldNumber = 2;
  ::google::protobuf::int32 out_chair_id() const;
  void set_out_chair_id(::google::protobuf::int32 value);

  // optional int32 turn_over = 4;
  bool has_turn_over() const;
  void clear_turn_over();
  static const int kTurnOverFieldNumber = 4;
  ::google::protobuf::int32 turn_over() const;
  void set_turn_over(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_LandOutCard)
 private:
  void set_has_cur_chair_id();
  void clear_has_cur_chair_id();
  void set_has_out_chair_id();
  void clear_has_out_chair_id();
  void set_has_turn_over();
  void clear_has_turn_over();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::int32 cur_chair_id_;
  ::google::protobuf::int32 out_chair_id_;
  ::google::protobuf::int32 turn_over_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_LandPassCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_LandPassCard) */ {
 public:
  CS_LandPassCard();
  virtual ~CS_LandPassCard();

  CS_LandPassCard(const CS_LandPassCard& from);

  inline CS_LandPassCard& operator=(const CS_LandPassCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_LandPassCard& default_instance();

  static inline const CS_LandPassCard* internal_default_instance() {
    return reinterpret_cast<const CS_LandPassCard*>(
               &_CS_LandPassCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CS_LandPassCard* other);

  // implements Message ----------------------------------------------

  inline CS_LandPassCard* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_LandPassCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_LandPassCard& from);
  void MergeFrom(const CS_LandPassCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_LandPassCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_LandPassCard_MsgID MsgID;
  static const MsgID ID =
    CS_LandPassCard_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_LandPassCard_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_LandPassCard_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_LandPassCard_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_LandPassCard_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_LandPassCard_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_LandPassCard_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_LandPassCard_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_LandPassCard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LandPassCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandPassCard) */ {
 public:
  SC_LandPassCard();
  virtual ~SC_LandPassCard();

  SC_LandPassCard(const SC_LandPassCard& from);

  inline SC_LandPassCard& operator=(const SC_LandPassCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandPassCard& default_instance();

  static inline const SC_LandPassCard* internal_default_instance() {
    return reinterpret_cast<const SC_LandPassCard*>(
               &_SC_LandPassCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SC_LandPassCard* other);

  // implements Message ----------------------------------------------

  inline SC_LandPassCard* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandPassCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandPassCard& from);
  void MergeFrom(const SC_LandPassCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandPassCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandPassCard_MsgID MsgID;
  static const MsgID ID =
    SC_LandPassCard_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandPassCard_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandPassCard_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandPassCard_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandPassCard_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandPassCard_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandPassCard_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandPassCard_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 cur_chair_id = 1;
  bool has_cur_chair_id() const;
  void clear_cur_chair_id();
  static const int kCurChairIdFieldNumber = 1;
  ::google::protobuf::int32 cur_chair_id() const;
  void set_cur_chair_id(::google::protobuf::int32 value);

  // optional int32 pass_chair_id = 2;
  bool has_pass_chair_id() const;
  void clear_pass_chair_id();
  static const int kPassChairIdFieldNumber = 2;
  ::google::protobuf::int32 pass_chair_id() const;
  void set_pass_chair_id(::google::protobuf::int32 value);

  // optional int32 turn_over = 3;
  bool has_turn_over() const;
  void clear_turn_over();
  static const int kTurnOverFieldNumber = 3;
  ::google::protobuf::int32 turn_over() const;
  void set_turn_over(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_LandPassCard)
 private:
  void set_has_cur_chair_id();
  void clear_has_cur_chair_id();
  void set_has_pass_chair_id();
  void clear_has_pass_chair_id();
  void set_has_turn_over();
  void clear_has_turn_over();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 cur_chair_id_;
  ::google::protobuf::int32 pass_chair_id_;
  ::google::protobuf::int32 turn_over_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LandPlayerConclude : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LandPlayerConclude) */ {
 public:
  LandPlayerConclude();
  virtual ~LandPlayerConclude();

  LandPlayerConclude(const LandPlayerConclude& from);

  inline LandPlayerConclude& operator=(const LandPlayerConclude& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LandPlayerConclude& default_instance();

  static inline const LandPlayerConclude* internal_default_instance() {
    return reinterpret_cast<const LandPlayerConclude*>(
               &_LandPlayerConclude_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(LandPlayerConclude* other);

  // implements Message ----------------------------------------------

  inline LandPlayerConclude* New() const PROTOBUF_FINAL { return New(NULL); }

  LandPlayerConclude* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LandPlayerConclude& from);
  void MergeFrom(const LandPlayerConclude& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LandPlayerConclude* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 cards = 3;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 3;
  ::google::protobuf::int32 cards(int index) const;
  void set_cards(int index, ::google::protobuf::int32 value);
  void add_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // optional int32 score = 1;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // optional int32 bomb_count = 2;
  bool has_bomb_count() const;
  void clear_bomb_count();
  static const int kBombCountFieldNumber = 2;
  ::google::protobuf::int32 bomb_count() const;
  void set_bomb_count(::google::protobuf::int32 value);

  // optional int32 flag = 4;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 4;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // optional int32 tax = 5;
  bool has_tax() const;
  void clear_tax();
  static const int kTaxFieldNumber = 5;
  ::google::protobuf::int32 tax() const;
  void set_tax(::google::protobuf::int32 value);

  // optional int32 totoalwinlost = 6;
  bool has_totoalwinlost() const;
  void clear_totoalwinlost();
  static const int kTotoalwinlostFieldNumber = 6;
  ::google::protobuf::int32 totoalwinlost() const;
  void set_totoalwinlost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LandPlayerConclude)
 private:
  void set_has_score();
  void clear_has_score();
  void set_has_bomb_count();
  void clear_has_bomb_count();
  void set_has_flag();
  void clear_has_flag();
  void set_has_tax();
  void clear_has_tax();
  void set_has_totoalwinlost();
  void clear_has_totoalwinlost();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 bomb_count_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 tax_;
  ::google::protobuf::int32 totoalwinlost_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LandConclude : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandConclude) */ {
 public:
  SC_LandConclude();
  virtual ~SC_LandConclude();

  SC_LandConclude(const SC_LandConclude& from);

  inline SC_LandConclude& operator=(const SC_LandConclude& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandConclude& default_instance();

  static inline const SC_LandConclude* internal_default_instance() {
    return reinterpret_cast<const SC_LandConclude*>(
               &_SC_LandConclude_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(SC_LandConclude* other);

  // implements Message ----------------------------------------------

  inline SC_LandConclude* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandConclude* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandConclude& from);
  void MergeFrom(const SC_LandConclude& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandConclude* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandConclude_MsgID MsgID;
  static const MsgID ID =
    SC_LandConclude_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandConclude_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandConclude_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandConclude_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandConclude_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandConclude_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandConclude_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandConclude_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .LandPlayerConclude pb_conclude = 1;
  int pb_conclude_size() const;
  void clear_pb_conclude();
  static const int kPbConcludeFieldNumber = 1;
  const ::LandPlayerConclude& pb_conclude(int index) const;
  ::LandPlayerConclude* mutable_pb_conclude(int index);
  ::LandPlayerConclude* add_pb_conclude();
  ::google::protobuf::RepeatedPtrField< ::LandPlayerConclude >*
      mutable_pb_conclude();
  const ::google::protobuf::RepeatedPtrField< ::LandPlayerConclude >&
      pb_conclude() const;

  // optional int32 chuntian = 2;
  bool has_chuntian() const;
  void clear_chuntian();
  static const int kChuntianFieldNumber = 2;
  ::google::protobuf::int32 chuntian() const;
  void set_chuntian(::google::protobuf::int32 value);

  // optional int32 fanchuntian = 3;
  bool has_fanchuntian() const;
  void clear_fanchuntian();
  static const int kFanchuntianFieldNumber = 3;
  ::google::protobuf::int32 fanchuntian() const;
  void set_fanchuntian(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_LandConclude)
 private:
  void set_has_chuntian();
  void clear_has_chuntian();
  void set_has_fanchuntian();
  void clear_has_fanchuntian();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::LandPlayerConclude > pb_conclude_;
  ::google::protobuf::int32 chuntian_;
  ::google::protobuf::int32 fanchuntian_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LandPlayerOffline : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandPlayerOffline) */ {
 public:
  SC_LandPlayerOffline();
  virtual ~SC_LandPlayerOffline();

  SC_LandPlayerOffline(const SC_LandPlayerOffline& from);

  inline SC_LandPlayerOffline& operator=(const SC_LandPlayerOffline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandPlayerOffline& default_instance();

  static inline const SC_LandPlayerOffline* internal_default_instance() {
    return reinterpret_cast<const SC_LandPlayerOffline*>(
               &_SC_LandPlayerOffline_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SC_LandPlayerOffline* other);

  // implements Message ----------------------------------------------

  inline SC_LandPlayerOffline* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandPlayerOffline* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandPlayerOffline& from);
  void MergeFrom(const SC_LandPlayerOffline& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandPlayerOffline* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandPlayerOffline_MsgID MsgID;
  static const MsgID ID =
    SC_LandPlayerOffline_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandPlayerOffline_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandPlayerOffline_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandPlayerOffline_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandPlayerOffline_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandPlayerOffline_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandPlayerOffline_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandPlayerOffline_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 cur_chair_id = 1;
  bool has_cur_chair_id() const;
  void clear_cur_chair_id();
  static const int kCurChairIdFieldNumber = 1;
  ::google::protobuf::int32 cur_chair_id() const;
  void set_cur_chair_id(::google::protobuf::int32 value);

  // optional int32 wait_time = 2;
  bool has_wait_time() const;
  void clear_wait_time();
  static const int kWaitTimeFieldNumber = 2;
  ::google::protobuf::int32 wait_time() const;
  void set_wait_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_LandPlayerOffline)
 private:
  void set_has_cur_chair_id();
  void clear_has_cur_chair_id();
  void set_has_wait_time();
  void clear_has_wait_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 cur_chair_id_;
  ::google::protobuf::int32 wait_time_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LandPlayerOnline : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandPlayerOnline) */ {
 public:
  SC_LandPlayerOnline();
  virtual ~SC_LandPlayerOnline();

  SC_LandPlayerOnline(const SC_LandPlayerOnline& from);

  inline SC_LandPlayerOnline& operator=(const SC_LandPlayerOnline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandPlayerOnline& default_instance();

  static inline const SC_LandPlayerOnline* internal_default_instance() {
    return reinterpret_cast<const SC_LandPlayerOnline*>(
               &_SC_LandPlayerOnline_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SC_LandPlayerOnline* other);

  // implements Message ----------------------------------------------

  inline SC_LandPlayerOnline* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandPlayerOnline* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandPlayerOnline& from);
  void MergeFrom(const SC_LandPlayerOnline& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandPlayerOnline* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandPlayerOnline_MsgID MsgID;
  static const MsgID ID =
    SC_LandPlayerOnline_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandPlayerOnline_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandPlayerOnline_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandPlayerOnline_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandPlayerOnline_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandPlayerOnline_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandPlayerOnline_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandPlayerOnline_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 cur_online_chair_id = 1;
  bool has_cur_online_chair_id() const;
  void clear_cur_online_chair_id();
  static const int kCurOnlineChairIdFieldNumber = 1;
  ::google::protobuf::int32 cur_online_chair_id() const;
  void set_cur_online_chair_id(::google::protobuf::int32 value);

  // optional int32 cur_chair_id = 2;
  bool has_cur_chair_id() const;
  void clear_cur_chair_id();
  static const int kCurChairIdFieldNumber = 2;
  ::google::protobuf::int32 cur_chair_id() const;
  void set_cur_chair_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_LandPlayerOnline)
 private:
  void set_has_cur_online_chair_id();
  void clear_has_cur_online_chair_id();
  void set_has_cur_chair_id();
  void clear_has_cur_chair_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 cur_online_chair_id_;
  ::google::protobuf::int32 cur_chair_id_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCardsMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerCardsMsg) */ {
 public:
  PlayerCardsMsg();
  virtual ~PlayerCardsMsg();

  PlayerCardsMsg(const PlayerCardsMsg& from);

  inline PlayerCardsMsg& operator=(const PlayerCardsMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCardsMsg& default_instance();

  static inline const PlayerCardsMsg* internal_default_instance() {
    return reinterpret_cast<const PlayerCardsMsg*>(
               &_PlayerCardsMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(PlayerCardsMsg* other);

  // implements Message ----------------------------------------------

  inline PlayerCardsMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCardsMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCardsMsg& from);
  void MergeFrom(const PlayerCardsMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCardsMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chair_id = 1;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional int32 cardsnum = 2;
  bool has_cardsnum() const;
  void clear_cardsnum();
  static const int kCardsnumFieldNumber = 2;
  ::google::protobuf::int32 cardsnum() const;
  void set_cardsnum(::google::protobuf::int32 value);

  // optional bool isTrusteeship = 3;
  bool has_istrusteeship() const;
  void clear_istrusteeship();
  static const int kIsTrusteeshipFieldNumber = 3;
  bool istrusteeship() const;
  void set_istrusteeship(bool value);

  // @@protoc_insertion_point(class_scope:PlayerCardsMsg)
 private:
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_cardsnum();
  void clear_has_cardsnum();
  void set_has_istrusteeship();
  void clear_has_istrusteeship();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 chair_id_;
  ::google::protobuf::int32 cardsnum_;
  bool istrusteeship_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LandRecoveryPlayerCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandRecoveryPlayerCard) */ {
 public:
  SC_LandRecoveryPlayerCard();
  virtual ~SC_LandRecoveryPlayerCard();

  SC_LandRecoveryPlayerCard(const SC_LandRecoveryPlayerCard& from);

  inline SC_LandRecoveryPlayerCard& operator=(const SC_LandRecoveryPlayerCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandRecoveryPlayerCard& default_instance();

  static inline const SC_LandRecoveryPlayerCard* internal_default_instance() {
    return reinterpret_cast<const SC_LandRecoveryPlayerCard*>(
               &_SC_LandRecoveryPlayerCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(SC_LandRecoveryPlayerCard* other);

  // implements Message ----------------------------------------------

  inline SC_LandRecoveryPlayerCard* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandRecoveryPlayerCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandRecoveryPlayerCard& from);
  void MergeFrom(const SC_LandRecoveryPlayerCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandRecoveryPlayerCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandRecoveryPlayerCard_MsgID MsgID;
  static const MsgID ID =
    SC_LandRecoveryPlayerCard_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandRecoveryPlayerCard_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandRecoveryPlayerCard_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandRecoveryPlayerCard_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandRecoveryPlayerCard_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandRecoveryPlayerCard_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandRecoveryPlayerCard_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandRecoveryPlayerCard_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 cards = 2;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 2;
  ::google::protobuf::int32 cards(int index) const;
  void set_cards(int index, ::google::protobuf::int32 value);
  void add_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // repeated .PlayerCardsMsg pb_msg = 3;
  int pb_msg_size() const;
  void clear_pb_msg();
  static const int kPbMsgFieldNumber = 3;
  const ::PlayerCardsMsg& pb_msg(int index) const;
  ::PlayerCardsMsg* mutable_pb_msg(int index);
  ::PlayerCardsMsg* add_pb_msg();
  ::google::protobuf::RepeatedPtrField< ::PlayerCardsMsg >*
      mutable_pb_msg();
  const ::google::protobuf::RepeatedPtrField< ::PlayerCardsMsg >&
      pb_msg() const;

  // repeated int32 landcards = 5;
  int landcards_size() const;
  void clear_landcards();
  static const int kLandcardsFieldNumber = 5;
  ::google::protobuf::int32 landcards(int index) const;
  void set_landcards(int index, ::google::protobuf::int32 value);
  void add_landcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      landcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_landcards();

  // repeated int32 lastCards = 7;
  int lastcards_size() const;
  void clear_lastcards();
  static const int kLastCardsFieldNumber = 7;
  ::google::protobuf::int32 lastcards(int index) const;
  void set_lastcards(int index, ::google::protobuf::int32 value);
  void add_lastcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lastcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lastcards();

  // repeated int32 alreadyoutcards = 10;
  int alreadyoutcards_size() const;
  void clear_alreadyoutcards();
  static const int kAlreadyoutcardsFieldNumber = 10;
  ::google::protobuf::int32 alreadyoutcards(int index) const;
  void set_alreadyoutcards(int index, ::google::protobuf::int32 value);
  void add_alreadyoutcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      alreadyoutcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_alreadyoutcards();

  // optional int32 cur_chair_id = 1;
  bool has_cur_chair_id() const;
  void clear_cur_chair_id();
  static const int kCurChairIdFieldNumber = 1;
  ::google::protobuf::int32 cur_chair_id() const;
  void set_cur_chair_id(::google::protobuf::int32 value);

  // optional int32 landchairid = 4;
  bool has_landchairid() const;
  void clear_landchairid();
  static const int kLandchairidFieldNumber = 4;
  ::google::protobuf::int32 landchairid() const;
  void set_landchairid(::google::protobuf::int32 value);

  // optional int32 call_score = 6;
  bool has_call_score() const;
  void clear_call_score();
  static const int kCallScoreFieldNumber = 6;
  ::google::protobuf::int32 call_score() const;
  void set_call_score(::google::protobuf::int32 value);

  // optional int32 lastcardid = 8;
  bool has_lastcardid() const;
  void clear_lastcardid();
  static const int kLastcardidFieldNumber = 8;
  ::google::protobuf::int32 lastcardid() const;
  void set_lastcardid(::google::protobuf::int32 value);

  // optional int32 outcardid = 9;
  bool has_outcardid() const;
  void clear_outcardid();
  static const int kOutcardidFieldNumber = 9;
  ::google::protobuf::int32 outcardid() const;
  void set_outcardid(::google::protobuf::int32 value);

  // optional int32 bomb = 11;
  bool has_bomb() const;
  void clear_bomb();
  static const int kBombFieldNumber = 11;
  ::google::protobuf::int32 bomb() const;
  void set_bomb(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_LandRecoveryPlayerCard)
 private:
  void set_has_cur_chair_id();
  void clear_has_cur_chair_id();
  void set_has_landchairid();
  void clear_has_landchairid();
  void set_has_call_score();
  void clear_has_call_score();
  void set_has_lastcardid();
  void clear_has_lastcardid();
  void set_has_outcardid();
  void clear_has_outcardid();
  void set_has_bomb();
  void clear_has_bomb();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::RepeatedPtrField< ::PlayerCardsMsg > pb_msg_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > landcards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lastcards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > alreadyoutcards_;
  ::google::protobuf::int32 cur_chair_id_;
  ::google::protobuf::int32 landchairid_;
  ::google::protobuf::int32 call_score_;
  ::google::protobuf::int32 lastcardid_;
  ::google::protobuf::int32 outcardid_;
  ::google::protobuf::int32 bomb_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class pofflineMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pofflineMsg) */ {
 public:
  pofflineMsg();
  virtual ~pofflineMsg();

  pofflineMsg(const pofflineMsg& from);

  inline pofflineMsg& operator=(const pofflineMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pofflineMsg& default_instance();

  static inline const pofflineMsg* internal_default_instance() {
    return reinterpret_cast<const pofflineMsg*>(
               &_pofflineMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(pofflineMsg* other);

  // implements Message ----------------------------------------------

  inline pofflineMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  pofflineMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const pofflineMsg& from);
  void MergeFrom(const pofflineMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(pofflineMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chair_id = 1;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional int32 outTimes = 2;
  bool has_outtimes() const;
  void clear_outtimes();
  static const int kOutTimesFieldNumber = 2;
  ::google::protobuf::int32 outtimes() const;
  void set_outtimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pofflineMsg)
 private:
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_outtimes();
  void clear_has_outtimes();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 chair_id_;
  ::google::protobuf::int32 outtimes_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LandRecoveryPlayerCallScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandRecoveryPlayerCallScore) */ {
 public:
  SC_LandRecoveryPlayerCallScore();
  virtual ~SC_LandRecoveryPlayerCallScore();

  SC_LandRecoveryPlayerCallScore(const SC_LandRecoveryPlayerCallScore& from);

  inline SC_LandRecoveryPlayerCallScore& operator=(const SC_LandRecoveryPlayerCallScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandRecoveryPlayerCallScore& default_instance();

  static inline const SC_LandRecoveryPlayerCallScore* internal_default_instance() {
    return reinterpret_cast<const SC_LandRecoveryPlayerCallScore*>(
               &_SC_LandRecoveryPlayerCallScore_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(SC_LandRecoveryPlayerCallScore* other);

  // implements Message ----------------------------------------------

  inline SC_LandRecoveryPlayerCallScore* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandRecoveryPlayerCallScore* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandRecoveryPlayerCallScore& from);
  void MergeFrom(const SC_LandRecoveryPlayerCallScore& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandRecoveryPlayerCallScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandRecoveryPlayerCallScore_MsgID MsgID;
  static const MsgID ID =
    SC_LandRecoveryPlayerCallScore_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandRecoveryPlayerCallScore_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandRecoveryPlayerCallScore_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandRecoveryPlayerCallScore_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandRecoveryPlayerCallScore_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandRecoveryPlayerCallScore_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandRecoveryPlayerCallScore_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandRecoveryPlayerCallScore_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 cards = 4;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 4;
  ::google::protobuf::int32 cards(int index) const;
  void set_cards(int index, ::google::protobuf::int32 value);
  void add_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // repeated .pofflineMsg pb_playerOfflineMsg = 5;
  int pb_playerofflinemsg_size() const;
  void clear_pb_playerofflinemsg();
  static const int kPbPlayerOfflineMsgFieldNumber = 5;
  const ::pofflineMsg& pb_playerofflinemsg(int index) const;
  ::pofflineMsg* mutable_pb_playerofflinemsg(int index);
  ::pofflineMsg* add_pb_playerofflinemsg();
  ::google::protobuf::RepeatedPtrField< ::pofflineMsg >*
      mutable_pb_playerofflinemsg();
  const ::google::protobuf::RepeatedPtrField< ::pofflineMsg >&
      pb_playerofflinemsg() const;

  // optional int32 cur_chair_id = 1;
  bool has_cur_chair_id() const;
  void clear_cur_chair_id();
  static const int kCurChairIdFieldNumber = 1;
  ::google::protobuf::int32 cur_chair_id() const;
  void set_cur_chair_id(::google::protobuf::int32 value);

  // optional int32 call_chair_id = 2;
  bool has_call_chair_id() const;
  void clear_call_chair_id();
  static const int kCallChairIdFieldNumber = 2;
  ::google::protobuf::int32 call_chair_id() const;
  void set_call_chair_id(::google::protobuf::int32 value);

  // optional int32 call_score = 3;
  bool has_call_score() const;
  void clear_call_score();
  static const int kCallScoreFieldNumber = 3;
  ::google::protobuf::int32 call_score() const;
  void set_call_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_LandRecoveryPlayerCallScore)
 private:
  void set_has_cur_chair_id();
  void clear_has_cur_chair_id();
  void set_has_call_chair_id();
  void clear_has_call_chair_id();
  void set_has_call_score();
  void clear_has_call_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::RepeatedPtrField< ::pofflineMsg > pb_playerofflinemsg_;
  ::google::protobuf::int32 cur_chair_id_;
  ::google::protobuf::int32 call_chair_id_;
  ::google::protobuf::int32 call_score_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LandCallScorePlayerOffline : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandCallScorePlayerOffline) */ {
 public:
  SC_LandCallScorePlayerOffline();
  virtual ~SC_LandCallScorePlayerOffline();

  SC_LandCallScorePlayerOffline(const SC_LandCallScorePlayerOffline& from);

  inline SC_LandCallScorePlayerOffline& operator=(const SC_LandCallScorePlayerOffline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandCallScorePlayerOffline& default_instance();

  static inline const SC_LandCallScorePlayerOffline* internal_default_instance() {
    return reinterpret_cast<const SC_LandCallScorePlayerOffline*>(
               &_SC_LandCallScorePlayerOffline_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(SC_LandCallScorePlayerOffline* other);

  // implements Message ----------------------------------------------

  inline SC_LandCallScorePlayerOffline* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandCallScorePlayerOffline* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandCallScorePlayerOffline& from);
  void MergeFrom(const SC_LandCallScorePlayerOffline& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandCallScorePlayerOffline* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandCallScorePlayerOffline_MsgID MsgID;
  static const MsgID ID =
    SC_LandCallScorePlayerOffline_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandCallScorePlayerOffline_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandCallScorePlayerOffline_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandCallScorePlayerOffline_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandCallScorePlayerOffline_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandCallScorePlayerOffline_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandCallScorePlayerOffline_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandCallScorePlayerOffline_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 cur_chair_id = 1;
  bool has_cur_chair_id() const;
  void clear_cur_chair_id();
  static const int kCurChairIdFieldNumber = 1;
  ::google::protobuf::int32 cur_chair_id() const;
  void set_cur_chair_id(::google::protobuf::int32 value);

  // optional int32 wait_time = 2;
  bool has_wait_time() const;
  void clear_wait_time();
  static const int kWaitTimeFieldNumber = 2;
  ::google::protobuf::int32 wait_time() const;
  void set_wait_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_LandCallScorePlayerOffline)
 private:
  void set_has_cur_chair_id();
  void clear_has_cur_chair_id();
  void set_has_wait_time();
  void clear_has_wait_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 cur_chair_id_;
  ::google::protobuf::int32 wait_time_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_LandTrusteeship : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_LandTrusteeship) */ {
 public:
  CS_LandTrusteeship();
  virtual ~CS_LandTrusteeship();

  CS_LandTrusteeship(const CS_LandTrusteeship& from);

  inline CS_LandTrusteeship& operator=(const CS_LandTrusteeship& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_LandTrusteeship& default_instance();

  static inline const CS_LandTrusteeship* internal_default_instance() {
    return reinterpret_cast<const CS_LandTrusteeship*>(
               &_CS_LandTrusteeship_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CS_LandTrusteeship* other);

  // implements Message ----------------------------------------------

  inline CS_LandTrusteeship* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_LandTrusteeship* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_LandTrusteeship& from);
  void MergeFrom(const CS_LandTrusteeship& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_LandTrusteeship* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_LandTrusteeship_MsgID MsgID;
  static const MsgID ID =
    CS_LandTrusteeship_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_LandTrusteeship_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_LandTrusteeship_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_LandTrusteeship_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_LandTrusteeship_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_LandTrusteeship_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_LandTrusteeship_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_LandTrusteeship_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_LandTrusteeship)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LandTrusteeship : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandTrusteeship) */ {
 public:
  SC_LandTrusteeship();
  virtual ~SC_LandTrusteeship();

  SC_LandTrusteeship(const SC_LandTrusteeship& from);

  inline SC_LandTrusteeship& operator=(const SC_LandTrusteeship& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandTrusteeship& default_instance();

  static inline const SC_LandTrusteeship* internal_default_instance() {
    return reinterpret_cast<const SC_LandTrusteeship*>(
               &_SC_LandTrusteeship_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(SC_LandTrusteeship* other);

  // implements Message ----------------------------------------------

  inline SC_LandTrusteeship* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandTrusteeship* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandTrusteeship& from);
  void MergeFrom(const SC_LandTrusteeship& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandTrusteeship* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandTrusteeship_MsgID MsgID;
  static const MsgID ID =
    SC_LandTrusteeship_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandTrusteeship_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandTrusteeship_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandTrusteeship_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandTrusteeship_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandTrusteeship_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandTrusteeship_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandTrusteeship_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 chair_id = 1;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional bool isTrusteeship = 2;
  bool has_istrusteeship() const;
  void clear_istrusteeship();
  static const int kIsTrusteeshipFieldNumber = 2;
  bool istrusteeship() const;
  void set_istrusteeship(bool value);

  // @@protoc_insertion_point(class_scope:SC_LandTrusteeship)
 private:
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_istrusteeship();
  void clear_has_istrusteeship();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 chair_id_;
  bool istrusteeship_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_LandCallDouble : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_LandCallDouble) */ {
 public:
  CS_LandCallDouble();
  virtual ~CS_LandCallDouble();

  CS_LandCallDouble(const CS_LandCallDouble& from);

  inline CS_LandCallDouble& operator=(const CS_LandCallDouble& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_LandCallDouble& default_instance();

  static inline const CS_LandCallDouble* internal_default_instance() {
    return reinterpret_cast<const CS_LandCallDouble*>(
               &_CS_LandCallDouble_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(CS_LandCallDouble* other);

  // implements Message ----------------------------------------------

  inline CS_LandCallDouble* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_LandCallDouble* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_LandCallDouble& from);
  void MergeFrom(const CS_LandCallDouble& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_LandCallDouble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_LandCallDouble_MsgID MsgID;
  static const MsgID ID =
    CS_LandCallDouble_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_LandCallDouble_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_LandCallDouble_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_LandCallDouble_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_LandCallDouble_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_LandCallDouble_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_LandCallDouble_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_LandCallDouble_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 is_double = 1;
  bool has_is_double() const;
  void clear_is_double();
  static const int kIsDoubleFieldNumber = 1;
  ::google::protobuf::int32 is_double() const;
  void set_is_double(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_LandCallDouble)
 private:
  void set_has_is_double();
  void clear_has_is_double();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 is_double_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LandCallDouble : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandCallDouble) */ {
 public:
  SC_LandCallDouble();
  virtual ~SC_LandCallDouble();

  SC_LandCallDouble(const SC_LandCallDouble& from);

  inline SC_LandCallDouble& operator=(const SC_LandCallDouble& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandCallDouble& default_instance();

  static inline const SC_LandCallDouble* internal_default_instance() {
    return reinterpret_cast<const SC_LandCallDouble*>(
               &_SC_LandCallDouble_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(SC_LandCallDouble* other);

  // implements Message ----------------------------------------------

  inline SC_LandCallDouble* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandCallDouble* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandCallDouble& from);
  void MergeFrom(const SC_LandCallDouble& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandCallDouble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandCallDouble_MsgID MsgID;
  static const MsgID ID =
    SC_LandCallDouble_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandCallDouble_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandCallDouble_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandCallDouble_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandCallDouble_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandCallDouble_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandCallDouble_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandCallDouble_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 call_chair_id = 1;
  bool has_call_chair_id() const;
  void clear_call_chair_id();
  static const int kCallChairIdFieldNumber = 1;
  ::google::protobuf::int32 call_chair_id() const;
  void set_call_chair_id(::google::protobuf::int32 value);

  // optional int32 is_double = 2;
  bool has_is_double() const;
  void clear_is_double();
  static const int kIsDoubleFieldNumber = 2;
  ::google::protobuf::int32 is_double() const;
  void set_is_double(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_LandCallDouble)
 private:
  void set_has_call_chair_id();
  void clear_has_call_chair_id();
  void set_has_is_double();
  void clear_has_is_double();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 call_chair_id_;
  ::google::protobuf::int32 is_double_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LandCallDoubleFinish : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandCallDoubleFinish) */ {
 public:
  SC_LandCallDoubleFinish();
  virtual ~SC_LandCallDoubleFinish();

  SC_LandCallDoubleFinish(const SC_LandCallDoubleFinish& from);

  inline SC_LandCallDoubleFinish& operator=(const SC_LandCallDoubleFinish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandCallDoubleFinish& default_instance();

  static inline const SC_LandCallDoubleFinish* internal_default_instance() {
    return reinterpret_cast<const SC_LandCallDoubleFinish*>(
               &_SC_LandCallDoubleFinish_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(SC_LandCallDoubleFinish* other);

  // implements Message ----------------------------------------------

  inline SC_LandCallDoubleFinish* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandCallDoubleFinish* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandCallDoubleFinish& from);
  void MergeFrom(const SC_LandCallDoubleFinish& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandCallDoubleFinish* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandCallDoubleFinish_MsgID MsgID;
  static const MsgID ID =
    SC_LandCallDoubleFinish_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandCallDoubleFinish_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandCallDoubleFinish_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandCallDoubleFinish_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandCallDoubleFinish_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandCallDoubleFinish_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandCallDoubleFinish_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandCallDoubleFinish_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 land_chair_id = 1;
  bool has_land_chair_id() const;
  void clear_land_chair_id();
  static const int kLandChairIdFieldNumber = 1;
  ::google::protobuf::int32 land_chair_id() const;
  void set_land_chair_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_LandCallDoubleFinish)
 private:
  void set_has_land_chair_id();
  void clear_has_land_chair_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 land_chair_id_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerDoubleMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerDoubleMsg) */ {
 public:
  PlayerDoubleMsg();
  virtual ~PlayerDoubleMsg();

  PlayerDoubleMsg(const PlayerDoubleMsg& from);

  inline PlayerDoubleMsg& operator=(const PlayerDoubleMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerDoubleMsg& default_instance();

  static inline const PlayerDoubleMsg* internal_default_instance() {
    return reinterpret_cast<const PlayerDoubleMsg*>(
               &_PlayerDoubleMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(PlayerDoubleMsg* other);

  // implements Message ----------------------------------------------

  inline PlayerDoubleMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerDoubleMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerDoubleMsg& from);
  void MergeFrom(const PlayerDoubleMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerDoubleMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chair_id = 1;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional int32 is_double = 2;
  bool has_is_double() const;
  void clear_is_double();
  static const int kIsDoubleFieldNumber = 2;
  ::google::protobuf::int32 is_double() const;
  void set_is_double(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerDoubleMsg)
 private:
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_is_double();
  void clear_has_is_double();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 chair_id_;
  ::google::protobuf::int32 is_double_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LandRecoveryPlayerDouble : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LandRecoveryPlayerDouble) */ {
 public:
  SC_LandRecoveryPlayerDouble();
  virtual ~SC_LandRecoveryPlayerDouble();

  SC_LandRecoveryPlayerDouble(const SC_LandRecoveryPlayerDouble& from);

  inline SC_LandRecoveryPlayerDouble& operator=(const SC_LandRecoveryPlayerDouble& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LandRecoveryPlayerDouble& default_instance();

  static inline const SC_LandRecoveryPlayerDouble* internal_default_instance() {
    return reinterpret_cast<const SC_LandRecoveryPlayerDouble*>(
               &_SC_LandRecoveryPlayerDouble_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(SC_LandRecoveryPlayerDouble* other);

  // implements Message ----------------------------------------------

  inline SC_LandRecoveryPlayerDouble* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LandRecoveryPlayerDouble* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LandRecoveryPlayerDouble& from);
  void MergeFrom(const SC_LandRecoveryPlayerDouble& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LandRecoveryPlayerDouble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LandRecoveryPlayerDouble_MsgID MsgID;
  static const MsgID ID =
    SC_LandRecoveryPlayerDouble_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LandRecoveryPlayerDouble_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LandRecoveryPlayerDouble_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LandRecoveryPlayerDouble_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LandRecoveryPlayerDouble_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LandRecoveryPlayerDouble_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LandRecoveryPlayerDouble_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LandRecoveryPlayerDouble_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PlayerDoubleMsg pb_double_state = 1;
  int pb_double_state_size() const;
  void clear_pb_double_state();
  static const int kPbDoubleStateFieldNumber = 1;
  const ::PlayerDoubleMsg& pb_double_state(int index) const;
  ::PlayerDoubleMsg* mutable_pb_double_state(int index);
  ::PlayerDoubleMsg* add_pb_double_state();
  ::google::protobuf::RepeatedPtrField< ::PlayerDoubleMsg >*
      mutable_pb_double_state();
  const ::google::protobuf::RepeatedPtrField< ::PlayerDoubleMsg >&
      pb_double_state() const;

  // optional int32 double_count_down = 2;
  bool has_double_count_down() const;
  void clear_double_count_down();
  static const int kDoubleCountDownFieldNumber = 2;
  ::google::protobuf::int32 double_count_down() const;
  void set_double_count_down(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_LandRecoveryPlayerDouble)
 private:
  void set_has_double_count_down();
  void clear_has_double_count_down();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PlayerDoubleMsg > pb_double_state_;
  ::google::protobuf::int32 double_count_down_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_GetPrivateConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_GetPrivateConfig) */ {
 public:
  CS_GetPrivateConfig();
  virtual ~CS_GetPrivateConfig();

  CS_GetPrivateConfig(const CS_GetPrivateConfig& from);

  inline CS_GetPrivateConfig& operator=(const CS_GetPrivateConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_GetPrivateConfig& default_instance();

  static inline const CS_GetPrivateConfig* internal_default_instance() {
    return reinterpret_cast<const CS_GetPrivateConfig*>(
               &_CS_GetPrivateConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(CS_GetPrivateConfig* other);

  // implements Message ----------------------------------------------

  inline CS_GetPrivateConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_GetPrivateConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_GetPrivateConfig& from);
  void MergeFrom(const CS_GetPrivateConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_GetPrivateConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_GetPrivateConfig_MsgID MsgID;
  static const MsgID ID =
    CS_GetPrivateConfig_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_GetPrivateConfig_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_GetPrivateConfig_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_GetPrivateConfig_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_GetPrivateConfig_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_GetPrivateConfig_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_GetPrivateConfig_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_GetPrivateConfig_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_GetPrivateConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_SetPrivateConfigChange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_SetPrivateConfigChange) */ {
 public:
  CS_SetPrivateConfigChange();
  virtual ~CS_SetPrivateConfigChange();

  CS_SetPrivateConfigChange(const CS_SetPrivateConfigChange& from);

  inline CS_SetPrivateConfigChange& operator=(const CS_SetPrivateConfigChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_SetPrivateConfigChange& default_instance();

  static inline const CS_SetPrivateConfigChange* internal_default_instance() {
    return reinterpret_cast<const CS_SetPrivateConfigChange*>(
               &_CS_SetPrivateConfigChange_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(CS_SetPrivateConfigChange* other);

  // implements Message ----------------------------------------------

  inline CS_SetPrivateConfigChange* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_SetPrivateConfigChange* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_SetPrivateConfigChange& from);
  void MergeFrom(const CS_SetPrivateConfigChange& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_SetPrivateConfigChange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_SetPrivateConfigChange_MsgID MsgID;
  static const MsgID ID =
    CS_SetPrivateConfigChange_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_SetPrivateConfigChange_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_SetPrivateConfigChange_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_SetPrivateConfigChange_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_SetPrivateConfigChange_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_SetPrivateConfigChange_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_SetPrivateConfigChange_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_SetPrivateConfigChange_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 nallowDouble = 1;
  bool has_nallowdouble() const;
  void clear_nallowdouble();
  static const int kNallowDoubleFieldNumber = 1;
  ::google::protobuf::int32 nallowdouble() const;
  void set_nallowdouble(::google::protobuf::int32 value);

  // optional int32 nlimitbeishu = 2;
  bool has_nlimitbeishu() const;
  void clear_nlimitbeishu();
  static const int kNlimitbeishuFieldNumber = 2;
  ::google::protobuf::int32 nlimitbeishu() const;
  void set_nlimitbeishu(::google::protobuf::int32 value);

  // optional int32 nallowYiXiaoBoda = 3;
  bool has_nallowyixiaoboda() const;
  void clear_nallowyixiaoboda();
  static const int kNallowYiXiaoBodaFieldNumber = 3;
  ::google::protobuf::int32 nallowyixiaoboda() const;
  void set_nallowyixiaoboda(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_SetPrivateConfigChange)
 private:
  void set_has_nallowdouble();
  void clear_has_nallowdouble();
  void set_has_nlimitbeishu();
  void clear_has_nlimitbeishu();
  void set_has_nallowyixiaoboda();
  void clear_has_nallowyixiaoboda();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 nallowdouble_;
  ::google::protobuf::int32 nlimitbeishu_;
  ::google::protobuf::int32 nallowyixiaoboda_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_PrivateConfigChange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_PrivateConfigChange) */ {
 public:
  SC_PrivateConfigChange();
  virtual ~SC_PrivateConfigChange();

  SC_PrivateConfigChange(const SC_PrivateConfigChange& from);

  inline SC_PrivateConfigChange& operator=(const SC_PrivateConfigChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_PrivateConfigChange& default_instance();

  static inline const SC_PrivateConfigChange* internal_default_instance() {
    return reinterpret_cast<const SC_PrivateConfigChange*>(
               &_SC_PrivateConfigChange_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(SC_PrivateConfigChange* other);

  // implements Message ----------------------------------------------

  inline SC_PrivateConfigChange* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_PrivateConfigChange* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_PrivateConfigChange& from);
  void MergeFrom(const SC_PrivateConfigChange& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_PrivateConfigChange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_PrivateConfigChange_MsgID MsgID;
  static const MsgID ID =
    SC_PrivateConfigChange_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_PrivateConfigChange_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_PrivateConfigChange_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_PrivateConfigChange_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_PrivateConfigChange_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_PrivateConfigChange_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_PrivateConfigChange_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_PrivateConfigChange_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 nallowDouble = 1;
  bool has_nallowdouble() const;
  void clear_nallowdouble();
  static const int kNallowDoubleFieldNumber = 1;
  ::google::protobuf::int32 nallowdouble() const;
  void set_nallowdouble(::google::protobuf::int32 value);

  // optional int32 nlimitbeishu = 2;
  bool has_nlimitbeishu() const;
  void clear_nlimitbeishu();
  static const int kNlimitbeishuFieldNumber = 2;
  ::google::protobuf::int32 nlimitbeishu() const;
  void set_nlimitbeishu(::google::protobuf::int32 value);

  // optional int32 nallowYiXiaoBoda = 3;
  bool has_nallowyixiaoboda() const;
  void clear_nallowyixiaoboda();
  static const int kNallowYiXiaoBodaFieldNumber = 3;
  ::google::protobuf::int32 nallowyixiaoboda() const;
  void set_nallowyixiaoboda(::google::protobuf::int32 value);

  // optional int32 ncell = 4;
  bool has_ncell() const;
  void clear_ncell();
  static const int kNcellFieldNumber = 4;
  ::google::protobuf::int32 ncell() const;
  void set_ncell(::google::protobuf::int32 value);

  // optional int32 nlimit = 5;
  bool has_nlimit() const;
  void clear_nlimit();
  static const int kNlimitFieldNumber = 5;
  ::google::protobuf::int32 nlimit() const;
  void set_nlimit(::google::protobuf::int32 value);

  // optional int32 nhosterguid = 6;
  bool has_nhosterguid() const;
  void clear_nhosterguid();
  static const int kNhosterguidFieldNumber = 6;
  ::google::protobuf::int32 nhosterguid() const;
  void set_nhosterguid(::google::protobuf::int32 value);

  // optional int32 nstatues = 7;
  bool has_nstatues() const;
  void clear_nstatues();
  static const int kNstatuesFieldNumber = 7;
  ::google::protobuf::int32 nstatues() const;
  void set_nstatues(::google::protobuf::int32 value);

  // optional int32 nreason = 8;
  bool has_nreason() const;
  void clear_nreason();
  static const int kNreasonFieldNumber = 8;
  ::google::protobuf::int32 nreason() const;
  void set_nreason(::google::protobuf::int32 value);

  // optional int32 private_room_has_start = 9;
  bool has_private_room_has_start() const;
  void clear_private_room_has_start();
  static const int kPrivateRoomHasStartFieldNumber = 9;
  ::google::protobuf::int32 private_room_has_start() const;
  void set_private_room_has_start(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_PrivateConfigChange)
 private:
  void set_has_nallowdouble();
  void clear_has_nallowdouble();
  void set_has_nlimitbeishu();
  void clear_has_nlimitbeishu();
  void set_has_nallowyixiaoboda();
  void clear_has_nallowyixiaoboda();
  void set_has_ncell();
  void clear_has_ncell();
  void set_has_nlimit();
  void clear_has_nlimit();
  void set_has_nhosterguid();
  void clear_has_nhosterguid();
  void set_has_nstatues();
  void clear_has_nstatues();
  void set_has_nreason();
  void clear_has_nreason();
  void set_has_private_room_has_start();
  void clear_has_private_room_has_start();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 nallowdouble_;
  ::google::protobuf::int32 nlimitbeishu_;
  ::google::protobuf::int32 nallowyixiaoboda_;
  ::google::protobuf::int32 ncell_;
  ::google::protobuf::int32 nlimit_;
  ::google::protobuf::int32 nhosterguid_;
  ::google::protobuf::int32 nstatues_;
  ::google::protobuf::int32 nreason_;
  ::google::protobuf::int32 private_room_has_start_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_TabTiren : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_TabTiren) */ {
 public:
  CS_TabTiren();
  virtual ~CS_TabTiren();

  CS_TabTiren(const CS_TabTiren& from);

  inline CS_TabTiren& operator=(const CS_TabTiren& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_TabTiren& default_instance();

  static inline const CS_TabTiren* internal_default_instance() {
    return reinterpret_cast<const CS_TabTiren*>(
               &_CS_TabTiren_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(CS_TabTiren* other);

  // implements Message ----------------------------------------------

  inline CS_TabTiren* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_TabTiren* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_TabTiren& from);
  void MergeFrom(const CS_TabTiren& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_TabTiren* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_TabTiren_MsgID MsgID;
  static const MsgID ID =
    CS_TabTiren_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_TabTiren_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_TabTiren_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_TabTiren_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_TabTiren_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_TabTiren_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_TabTiren_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_TabTiren_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 chair_id = 1;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_TabTiren)
 private:
  void set_has_chair_id();
  void clear_has_chair_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 chair_id_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_TabVote : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_TabVote) */ {
 public:
  CS_TabVote();
  virtual ~CS_TabVote();

  CS_TabVote(const CS_TabVote& from);

  inline CS_TabVote& operator=(const CS_TabVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_TabVote& default_instance();

  static inline const CS_TabVote* internal_default_instance() {
    return reinterpret_cast<const CS_TabVote*>(
               &_CS_TabVote_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(CS_TabVote* other);

  // implements Message ----------------------------------------------

  inline CS_TabVote* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_TabVote* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_TabVote& from);
  void MergeFrom(const CS_TabVote& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_TabVote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_TabVote_MsgID MsgID;
  static const MsgID ID =
    CS_TabVote_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_TabVote_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_TabVote_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_TabVote_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_TabVote_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_TabVote_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_TabVote_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_TabVote_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required bool bret = 1;
  bool has_bret() const;
  void clear_bret();
  static const int kBretFieldNumber = 1;
  bool bret() const;
  void set_bret(bool value);

  // @@protoc_insertion_point(class_scope:CS_TabVote)
 private:
  void set_has_bret();
  void clear_has_bret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bret_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_TabVoteInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_TabVoteInfo) */ {
 public:
  SC_TabVoteInfo();
  virtual ~SC_TabVoteInfo();

  SC_TabVoteInfo(const SC_TabVoteInfo& from);

  inline SC_TabVoteInfo& operator=(const SC_TabVoteInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_TabVoteInfo& default_instance();

  static inline const SC_TabVoteInfo* internal_default_instance() {
    return reinterpret_cast<const SC_TabVoteInfo*>(
               &_SC_TabVoteInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(SC_TabVoteInfo* other);

  // implements Message ----------------------------------------------

  inline SC_TabVoteInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_TabVoteInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_TabVoteInfo& from);
  void MergeFrom(const SC_TabVoteInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_TabVoteInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_TabVoteInfo_MsgID MsgID;
  static const MsgID ID =
    SC_TabVoteInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_TabVoteInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_TabVoteInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_TabVoteInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_TabVoteInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_TabVoteInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_TabVoteInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_TabVoteInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 chair_id = 1;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // required bool bret = 2;
  bool has_bret() const;
  void clear_bret();
  static const int kBretFieldNumber = 2;
  bool bret() const;
  void set_bret(bool value);

  // required int32 vote_chairid = 3;
  bool has_vote_chairid() const;
  void clear_vote_chairid();
  static const int kVoteChairidFieldNumber = 3;
  ::google::protobuf::int32 vote_chairid() const;
  void set_vote_chairid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_TabVoteInfo)
 private:
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_bret();
  void clear_has_bret();
  void set_has_vote_chairid();
  void clear_has_vote_chairid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 chair_id_;
  bool bret_;
  ::google::protobuf::int32 vote_chairid_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_TotalScoreInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_TotalScoreInfo) */ {
 public:
  SC_TotalScoreInfo();
  virtual ~SC_TotalScoreInfo();

  SC_TotalScoreInfo(const SC_TotalScoreInfo& from);

  inline SC_TotalScoreInfo& operator=(const SC_TotalScoreInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_TotalScoreInfo& default_instance();

  static inline const SC_TotalScoreInfo* internal_default_instance() {
    return reinterpret_cast<const SC_TotalScoreInfo*>(
               &_SC_TotalScoreInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(SC_TotalScoreInfo* other);

  // implements Message ----------------------------------------------

  inline SC_TotalScoreInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_TotalScoreInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_TotalScoreInfo& from);
  void MergeFrom(const SC_TotalScoreInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_TotalScoreInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_TotalScoreInfo_MsgID MsgID;
  static const MsgID ID =
    SC_TotalScoreInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_TotalScoreInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_TotalScoreInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_TotalScoreInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_TotalScoreInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_TotalScoreInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_TotalScoreInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_TotalScoreInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 totoalscore = 1;
  int totoalscore_size() const;
  void clear_totoalscore();
  static const int kTotoalscoreFieldNumber = 1;
  ::google::protobuf::int32 totoalscore(int index) const;
  void set_totoalscore(int index, ::google::protobuf::int32 value);
  void add_totoalscore(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      totoalscore() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_totoalscore();

  // @@protoc_insertion_point(class_scope:SC_TotalScoreInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > totoalscore_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_GetTabVoteArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_GetTabVoteArray) */ {
 public:
  CS_GetTabVoteArray();
  virtual ~CS_GetTabVoteArray();

  CS_GetTabVoteArray(const CS_GetTabVoteArray& from);

  inline CS_GetTabVoteArray& operator=(const CS_GetTabVoteArray& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_GetTabVoteArray& default_instance();

  static inline const CS_GetTabVoteArray* internal_default_instance() {
    return reinterpret_cast<const CS_GetTabVoteArray*>(
               &_CS_GetTabVoteArray_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(CS_GetTabVoteArray* other);

  // implements Message ----------------------------------------------

  inline CS_GetTabVoteArray* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_GetTabVoteArray* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_GetTabVoteArray& from);
  void MergeFrom(const CS_GetTabVoteArray& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_GetTabVoteArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_GetTabVoteArray_MsgID MsgID;
  static const MsgID ID =
    CS_GetTabVoteArray_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_GetTabVoteArray_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_GetTabVoteArray_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_GetTabVoteArray_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_GetTabVoteArray_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_GetTabVoteArray_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_GetTabVoteArray_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_GetTabVoteArray_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_GetTabVoteArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_TabVoteArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_TabVoteArray) */ {
 public:
  SC_TabVoteArray();
  virtual ~SC_TabVoteArray();

  SC_TabVoteArray(const SC_TabVoteArray& from);

  inline SC_TabVoteArray& operator=(const SC_TabVoteArray& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_TabVoteArray& default_instance();

  static inline const SC_TabVoteArray* internal_default_instance() {
    return reinterpret_cast<const SC_TabVoteArray*>(
               &_SC_TabVoteArray_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(SC_TabVoteArray* other);

  // implements Message ----------------------------------------------

  inline SC_TabVoteArray* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_TabVoteArray* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_TabVoteArray& from);
  void MergeFrom(const SC_TabVoteArray& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_TabVoteArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_TabVoteArray_MsgID MsgID;
  static const MsgID ID =
    SC_TabVoteArray_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_TabVoteArray_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_TabVoteArray_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_TabVoteArray_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_TabVoteArray_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_TabVoteArray_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_TabVoteArray_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_TabVoteArray_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .SC_TabVoteInfo pb_sctableinfo = 1;
  int pb_sctableinfo_size() const;
  void clear_pb_sctableinfo();
  static const int kPbSctableinfoFieldNumber = 1;
  const ::SC_TabVoteInfo& pb_sctableinfo(int index) const;
  ::SC_TabVoteInfo* mutable_pb_sctableinfo(int index);
  ::SC_TabVoteInfo* add_pb_sctableinfo();
  ::google::protobuf::RepeatedPtrField< ::SC_TabVoteInfo >*
      mutable_pb_sctableinfo();
  const ::google::protobuf::RepeatedPtrField< ::SC_TabVoteInfo >&
      pb_sctableinfo() const;

  // optional int32 votechairid = 2;
  bool has_votechairid() const;
  void clear_votechairid();
  static const int kVotechairidFieldNumber = 2;
  ::google::protobuf::int32 votechairid() const;
  void set_votechairid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_TabVoteArray)
 private:
  void set_has_votechairid();
  void clear_has_votechairid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SC_TabVoteInfo > pb_sctableinfo_;
  ::google::protobuf::int32 votechairid_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_TickNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_TickNotify) */ {
 public:
  SC_TickNotify();
  virtual ~SC_TickNotify();

  SC_TickNotify(const SC_TickNotify& from);

  inline SC_TickNotify& operator=(const SC_TickNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_TickNotify& default_instance();

  static inline const SC_TickNotify* internal_default_instance() {
    return reinterpret_cast<const SC_TickNotify*>(
               &_SC_TickNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(SC_TickNotify* other);

  // implements Message ----------------------------------------------

  inline SC_TickNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_TickNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_TickNotify& from);
  void MergeFrom(const SC_TickNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_TickNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_TickNotify_MsgID MsgID;
  static const MsgID ID =
    SC_TickNotify_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_TickNotify_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_TickNotify_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_TickNotify_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_TickNotify_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_TickNotify_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_TickNotify_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_TickNotify_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 tickchairid = 1;
  bool has_tickchairid() const;
  void clear_tickchairid();
  static const int kTickchairidFieldNumber = 1;
  ::google::protobuf::int32 tickchairid() const;
  void set_tickchairid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_TickNotify)
 private:
  void set_has_tickchairid();
  void clear_has_tickchairid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 tickchairid_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_Dismiss : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_Dismiss) */ {
 public:
  SC_Dismiss();
  virtual ~SC_Dismiss();

  SC_Dismiss(const SC_Dismiss& from);

  inline SC_Dismiss& operator=(const SC_Dismiss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_Dismiss& default_instance();

  static inline const SC_Dismiss* internal_default_instance() {
    return reinterpret_cast<const SC_Dismiss*>(
               &_SC_Dismiss_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(SC_Dismiss* other);

  // implements Message ----------------------------------------------

  inline SC_Dismiss* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_Dismiss* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_Dismiss& from);
  void MergeFrom(const SC_Dismiss& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_Dismiss* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_Dismiss_MsgID MsgID;
  static const MsgID ID =
    SC_Dismiss_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_Dismiss_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_Dismiss_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_Dismiss_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_Dismiss_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_Dismiss_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_Dismiss_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_Dismiss_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 chair_id = 2;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 2;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_Dismiss)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_chair_id();
  void clear_has_chair_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 chair_id_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_RecconectReady : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_RecconectReady) */ {
 public:
  SC_RecconectReady();
  virtual ~SC_RecconectReady();

  SC_RecconectReady(const SC_RecconectReady& from);

  inline SC_RecconectReady& operator=(const SC_RecconectReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_RecconectReady& default_instance();

  static inline const SC_RecconectReady* internal_default_instance() {
    return reinterpret_cast<const SC_RecconectReady*>(
               &_SC_RecconectReady_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(SC_RecconectReady* other);

  // implements Message ----------------------------------------------

  inline SC_RecconectReady* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_RecconectReady* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_RecconectReady& from);
  void MergeFrom(const SC_RecconectReady& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_RecconectReady* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_RecconectReady_MsgID MsgID;
  static const MsgID ID =
    SC_RecconectReady_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_RecconectReady_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_RecconectReady_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_RecconectReady_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_RecconectReady_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_RecconectReady_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_RecconectReady_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_RecconectReady_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SC_RecconectReady)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fland_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_LandStart

// optional int32 first_turn = 1;
inline bool SC_LandStart::has_first_turn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LandStart::set_has_first_turn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LandStart::clear_has_first_turn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LandStart::clear_first_turn() {
  first_turn_ = 0;
  clear_has_first_turn();
}
inline ::google::protobuf::int32 SC_LandStart::first_turn() const {
  // @@protoc_insertion_point(field_get:SC_LandStart.first_turn)
  return first_turn_;
}
inline void SC_LandStart::set_first_turn(::google::protobuf::int32 value) {
  set_has_first_turn();
  first_turn_ = value;
  // @@protoc_insertion_point(field_set:SC_LandStart.first_turn)
}

// optional int32 valid_card_chair_id = 2;
inline bool SC_LandStart::has_valid_card_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_LandStart::set_has_valid_card_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_LandStart::clear_has_valid_card_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_LandStart::clear_valid_card_chair_id() {
  valid_card_chair_id_ = 0;
  clear_has_valid_card_chair_id();
}
inline ::google::protobuf::int32 SC_LandStart::valid_card_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandStart.valid_card_chair_id)
  return valid_card_chair_id_;
}
inline void SC_LandStart::set_valid_card_chair_id(::google::protobuf::int32 value) {
  set_has_valid_card_chair_id();
  valid_card_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandStart.valid_card_chair_id)
}

// optional int32 valid_card = 3;
inline bool SC_LandStart::has_valid_card() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_LandStart::set_has_valid_card() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_LandStart::clear_has_valid_card() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_LandStart::clear_valid_card() {
  valid_card_ = 0;
  clear_has_valid_card();
}
inline ::google::protobuf::int32 SC_LandStart::valid_card() const {
  // @@protoc_insertion_point(field_get:SC_LandStart.valid_card)
  return valid_card_;
}
inline void SC_LandStart::set_valid_card(::google::protobuf::int32 value) {
  set_has_valid_card();
  valid_card_ = value;
  // @@protoc_insertion_point(field_set:SC_LandStart.valid_card)
}

// repeated int32 cards = 4;
inline int SC_LandStart::cards_size() const {
  return cards_.size();
}
inline void SC_LandStart::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 SC_LandStart::cards(int index) const {
  // @@protoc_insertion_point(field_get:SC_LandStart.cards)
  return cards_.Get(index);
}
inline void SC_LandStart::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_LandStart.cards)
}
inline void SC_LandStart::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:SC_LandStart.cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_LandStart::cards() const {
  // @@protoc_insertion_point(field_list:SC_LandStart.cards)
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_LandStart::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:SC_LandStart.cards)
  return &cards_;
}

// -------------------------------------------------------------------

// CS_LandCallScore

// optional int32 call_score = 1;
inline bool CS_LandCallScore::has_call_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_LandCallScore::set_has_call_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_LandCallScore::clear_has_call_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_LandCallScore::clear_call_score() {
  call_score_ = 0;
  clear_has_call_score();
}
inline ::google::protobuf::int32 CS_LandCallScore::call_score() const {
  // @@protoc_insertion_point(field_get:CS_LandCallScore.call_score)
  return call_score_;
}
inline void CS_LandCallScore::set_call_score(::google::protobuf::int32 value) {
  set_has_call_score();
  call_score_ = value;
  // @@protoc_insertion_point(field_set:CS_LandCallScore.call_score)
}

// -------------------------------------------------------------------

// SC_LandCallScore

// optional int32 cur_chair_id = 1;
inline bool SC_LandCallScore::has_cur_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LandCallScore::set_has_cur_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LandCallScore::clear_has_cur_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LandCallScore::clear_cur_chair_id() {
  cur_chair_id_ = 0;
  clear_has_cur_chair_id();
}
inline ::google::protobuf::int32 SC_LandCallScore::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandCallScore.cur_chair_id)
  return cur_chair_id_;
}
inline void SC_LandCallScore::set_cur_chair_id(::google::protobuf::int32 value) {
  set_has_cur_chair_id();
  cur_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandCallScore.cur_chair_id)
}

// optional int32 call_chair_id = 2;
inline bool SC_LandCallScore::has_call_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_LandCallScore::set_has_call_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_LandCallScore::clear_has_call_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_LandCallScore::clear_call_chair_id() {
  call_chair_id_ = 0;
  clear_has_call_chair_id();
}
inline ::google::protobuf::int32 SC_LandCallScore::call_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandCallScore.call_chair_id)
  return call_chair_id_;
}
inline void SC_LandCallScore::set_call_chair_id(::google::protobuf::int32 value) {
  set_has_call_chair_id();
  call_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandCallScore.call_chair_id)
}

// optional int32 call_score = 3;
inline bool SC_LandCallScore::has_call_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_LandCallScore::set_has_call_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_LandCallScore::clear_has_call_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_LandCallScore::clear_call_score() {
  call_score_ = 0;
  clear_has_call_score();
}
inline ::google::protobuf::int32 SC_LandCallScore::call_score() const {
  // @@protoc_insertion_point(field_get:SC_LandCallScore.call_score)
  return call_score_;
}
inline void SC_LandCallScore::set_call_score(::google::protobuf::int32 value) {
  set_has_call_score();
  call_score_ = value;
  // @@protoc_insertion_point(field_set:SC_LandCallScore.call_score)
}

// -------------------------------------------------------------------

// SC_LandCallFail

// -------------------------------------------------------------------

// SC_LandInfo

// optional int32 land_chair_id = 1;
inline bool SC_LandInfo::has_land_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LandInfo::set_has_land_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LandInfo::clear_has_land_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LandInfo::clear_land_chair_id() {
  land_chair_id_ = 0;
  clear_has_land_chair_id();
}
inline ::google::protobuf::int32 SC_LandInfo::land_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandInfo.land_chair_id)
  return land_chair_id_;
}
inline void SC_LandInfo::set_land_chair_id(::google::protobuf::int32 value) {
  set_has_land_chair_id();
  land_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandInfo.land_chair_id)
}

// optional int32 call_score = 2;
inline bool SC_LandInfo::has_call_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_LandInfo::set_has_call_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_LandInfo::clear_has_call_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_LandInfo::clear_call_score() {
  call_score_ = 0;
  clear_has_call_score();
}
inline ::google::protobuf::int32 SC_LandInfo::call_score() const {
  // @@protoc_insertion_point(field_get:SC_LandInfo.call_score)
  return call_score_;
}
inline void SC_LandInfo::set_call_score(::google::protobuf::int32 value) {
  set_has_call_score();
  call_score_ = value;
  // @@protoc_insertion_point(field_set:SC_LandInfo.call_score)
}

// repeated int32 cards = 3;
inline int SC_LandInfo::cards_size() const {
  return cards_.size();
}
inline void SC_LandInfo::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 SC_LandInfo::cards(int index) const {
  // @@protoc_insertion_point(field_get:SC_LandInfo.cards)
  return cards_.Get(index);
}
inline void SC_LandInfo::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_LandInfo.cards)
}
inline void SC_LandInfo::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:SC_LandInfo.cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_LandInfo::cards() const {
  // @@protoc_insertion_point(field_list:SC_LandInfo.cards)
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_LandInfo::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:SC_LandInfo.cards)
  return &cards_;
}

// -------------------------------------------------------------------

// CS_LandOutCard

// repeated int32 cards = 1;
inline int CS_LandOutCard::cards_size() const {
  return cards_.size();
}
inline void CS_LandOutCard::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 CS_LandOutCard::cards(int index) const {
  // @@protoc_insertion_point(field_get:CS_LandOutCard.cards)
  return cards_.Get(index);
}
inline void CS_LandOutCard::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:CS_LandOutCard.cards)
}
inline void CS_LandOutCard::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:CS_LandOutCard.cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CS_LandOutCard::cards() const {
  // @@protoc_insertion_point(field_list:CS_LandOutCard.cards)
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CS_LandOutCard::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:CS_LandOutCard.cards)
  return &cards_;
}

// -------------------------------------------------------------------

// SC_LandOutCard

// optional int32 cur_chair_id = 1;
inline bool SC_LandOutCard::has_cur_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LandOutCard::set_has_cur_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LandOutCard::clear_has_cur_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LandOutCard::clear_cur_chair_id() {
  cur_chair_id_ = 0;
  clear_has_cur_chair_id();
}
inline ::google::protobuf::int32 SC_LandOutCard::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandOutCard.cur_chair_id)
  return cur_chair_id_;
}
inline void SC_LandOutCard::set_cur_chair_id(::google::protobuf::int32 value) {
  set_has_cur_chair_id();
  cur_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandOutCard.cur_chair_id)
}

// optional int32 out_chair_id = 2;
inline bool SC_LandOutCard::has_out_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_LandOutCard::set_has_out_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_LandOutCard::clear_has_out_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_LandOutCard::clear_out_chair_id() {
  out_chair_id_ = 0;
  clear_has_out_chair_id();
}
inline ::google::protobuf::int32 SC_LandOutCard::out_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandOutCard.out_chair_id)
  return out_chair_id_;
}
inline void SC_LandOutCard::set_out_chair_id(::google::protobuf::int32 value) {
  set_has_out_chair_id();
  out_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandOutCard.out_chair_id)
}

// repeated int32 cards = 3;
inline int SC_LandOutCard::cards_size() const {
  return cards_.size();
}
inline void SC_LandOutCard::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 SC_LandOutCard::cards(int index) const {
  // @@protoc_insertion_point(field_get:SC_LandOutCard.cards)
  return cards_.Get(index);
}
inline void SC_LandOutCard::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_LandOutCard.cards)
}
inline void SC_LandOutCard::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:SC_LandOutCard.cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_LandOutCard::cards() const {
  // @@protoc_insertion_point(field_list:SC_LandOutCard.cards)
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_LandOutCard::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:SC_LandOutCard.cards)
  return &cards_;
}

// optional int32 turn_over = 4;
inline bool SC_LandOutCard::has_turn_over() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_LandOutCard::set_has_turn_over() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_LandOutCard::clear_has_turn_over() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_LandOutCard::clear_turn_over() {
  turn_over_ = 0;
  clear_has_turn_over();
}
inline ::google::protobuf::int32 SC_LandOutCard::turn_over() const {
  // @@protoc_insertion_point(field_get:SC_LandOutCard.turn_over)
  return turn_over_;
}
inline void SC_LandOutCard::set_turn_over(::google::protobuf::int32 value) {
  set_has_turn_over();
  turn_over_ = value;
  // @@protoc_insertion_point(field_set:SC_LandOutCard.turn_over)
}

// -------------------------------------------------------------------

// CS_LandPassCard

// -------------------------------------------------------------------

// SC_LandPassCard

// optional int32 cur_chair_id = 1;
inline bool SC_LandPassCard::has_cur_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LandPassCard::set_has_cur_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LandPassCard::clear_has_cur_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LandPassCard::clear_cur_chair_id() {
  cur_chair_id_ = 0;
  clear_has_cur_chair_id();
}
inline ::google::protobuf::int32 SC_LandPassCard::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandPassCard.cur_chair_id)
  return cur_chair_id_;
}
inline void SC_LandPassCard::set_cur_chair_id(::google::protobuf::int32 value) {
  set_has_cur_chair_id();
  cur_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandPassCard.cur_chair_id)
}

// optional int32 pass_chair_id = 2;
inline bool SC_LandPassCard::has_pass_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_LandPassCard::set_has_pass_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_LandPassCard::clear_has_pass_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_LandPassCard::clear_pass_chair_id() {
  pass_chair_id_ = 0;
  clear_has_pass_chair_id();
}
inline ::google::protobuf::int32 SC_LandPassCard::pass_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandPassCard.pass_chair_id)
  return pass_chair_id_;
}
inline void SC_LandPassCard::set_pass_chair_id(::google::protobuf::int32 value) {
  set_has_pass_chair_id();
  pass_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandPassCard.pass_chair_id)
}

// optional int32 turn_over = 3;
inline bool SC_LandPassCard::has_turn_over() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_LandPassCard::set_has_turn_over() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_LandPassCard::clear_has_turn_over() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_LandPassCard::clear_turn_over() {
  turn_over_ = 0;
  clear_has_turn_over();
}
inline ::google::protobuf::int32 SC_LandPassCard::turn_over() const {
  // @@protoc_insertion_point(field_get:SC_LandPassCard.turn_over)
  return turn_over_;
}
inline void SC_LandPassCard::set_turn_over(::google::protobuf::int32 value) {
  set_has_turn_over();
  turn_over_ = value;
  // @@protoc_insertion_point(field_set:SC_LandPassCard.turn_over)
}

// -------------------------------------------------------------------

// LandPlayerConclude

// optional int32 score = 1;
inline bool LandPlayerConclude::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LandPlayerConclude::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LandPlayerConclude::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LandPlayerConclude::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 LandPlayerConclude::score() const {
  // @@protoc_insertion_point(field_get:LandPlayerConclude.score)
  return score_;
}
inline void LandPlayerConclude::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:LandPlayerConclude.score)
}

// optional int32 bomb_count = 2;
inline bool LandPlayerConclude::has_bomb_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LandPlayerConclude::set_has_bomb_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LandPlayerConclude::clear_has_bomb_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LandPlayerConclude::clear_bomb_count() {
  bomb_count_ = 0;
  clear_has_bomb_count();
}
inline ::google::protobuf::int32 LandPlayerConclude::bomb_count() const {
  // @@protoc_insertion_point(field_get:LandPlayerConclude.bomb_count)
  return bomb_count_;
}
inline void LandPlayerConclude::set_bomb_count(::google::protobuf::int32 value) {
  set_has_bomb_count();
  bomb_count_ = value;
  // @@protoc_insertion_point(field_set:LandPlayerConclude.bomb_count)
}

// repeated int32 cards = 3;
inline int LandPlayerConclude::cards_size() const {
  return cards_.size();
}
inline void LandPlayerConclude::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 LandPlayerConclude::cards(int index) const {
  // @@protoc_insertion_point(field_get:LandPlayerConclude.cards)
  return cards_.Get(index);
}
inline void LandPlayerConclude::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:LandPlayerConclude.cards)
}
inline void LandPlayerConclude::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:LandPlayerConclude.cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LandPlayerConclude::cards() const {
  // @@protoc_insertion_point(field_list:LandPlayerConclude.cards)
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LandPlayerConclude::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:LandPlayerConclude.cards)
  return &cards_;
}

// optional int32 flag = 4;
inline bool LandPlayerConclude::has_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LandPlayerConclude::set_has_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LandPlayerConclude::clear_has_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LandPlayerConclude::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 LandPlayerConclude::flag() const {
  // @@protoc_insertion_point(field_get:LandPlayerConclude.flag)
  return flag_;
}
inline void LandPlayerConclude::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:LandPlayerConclude.flag)
}

// optional int32 tax = 5;
inline bool LandPlayerConclude::has_tax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LandPlayerConclude::set_has_tax() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LandPlayerConclude::clear_has_tax() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LandPlayerConclude::clear_tax() {
  tax_ = 0;
  clear_has_tax();
}
inline ::google::protobuf::int32 LandPlayerConclude::tax() const {
  // @@protoc_insertion_point(field_get:LandPlayerConclude.tax)
  return tax_;
}
inline void LandPlayerConclude::set_tax(::google::protobuf::int32 value) {
  set_has_tax();
  tax_ = value;
  // @@protoc_insertion_point(field_set:LandPlayerConclude.tax)
}

// optional int32 totoalwinlost = 6;
inline bool LandPlayerConclude::has_totoalwinlost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LandPlayerConclude::set_has_totoalwinlost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LandPlayerConclude::clear_has_totoalwinlost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LandPlayerConclude::clear_totoalwinlost() {
  totoalwinlost_ = 0;
  clear_has_totoalwinlost();
}
inline ::google::protobuf::int32 LandPlayerConclude::totoalwinlost() const {
  // @@protoc_insertion_point(field_get:LandPlayerConclude.totoalwinlost)
  return totoalwinlost_;
}
inline void LandPlayerConclude::set_totoalwinlost(::google::protobuf::int32 value) {
  set_has_totoalwinlost();
  totoalwinlost_ = value;
  // @@protoc_insertion_point(field_set:LandPlayerConclude.totoalwinlost)
}

// -------------------------------------------------------------------

// SC_LandConclude

// repeated .LandPlayerConclude pb_conclude = 1;
inline int SC_LandConclude::pb_conclude_size() const {
  return pb_conclude_.size();
}
inline void SC_LandConclude::clear_pb_conclude() {
  pb_conclude_.Clear();
}
inline const ::LandPlayerConclude& SC_LandConclude::pb_conclude(int index) const {
  // @@protoc_insertion_point(field_get:SC_LandConclude.pb_conclude)
  return pb_conclude_.Get(index);
}
inline ::LandPlayerConclude* SC_LandConclude::mutable_pb_conclude(int index) {
  // @@protoc_insertion_point(field_mutable:SC_LandConclude.pb_conclude)
  return pb_conclude_.Mutable(index);
}
inline ::LandPlayerConclude* SC_LandConclude::add_pb_conclude() {
  // @@protoc_insertion_point(field_add:SC_LandConclude.pb_conclude)
  return pb_conclude_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::LandPlayerConclude >*
SC_LandConclude::mutable_pb_conclude() {
  // @@protoc_insertion_point(field_mutable_list:SC_LandConclude.pb_conclude)
  return &pb_conclude_;
}
inline const ::google::protobuf::RepeatedPtrField< ::LandPlayerConclude >&
SC_LandConclude::pb_conclude() const {
  // @@protoc_insertion_point(field_list:SC_LandConclude.pb_conclude)
  return pb_conclude_;
}

// optional int32 chuntian = 2;
inline bool SC_LandConclude::has_chuntian() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LandConclude::set_has_chuntian() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LandConclude::clear_has_chuntian() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LandConclude::clear_chuntian() {
  chuntian_ = 0;
  clear_has_chuntian();
}
inline ::google::protobuf::int32 SC_LandConclude::chuntian() const {
  // @@protoc_insertion_point(field_get:SC_LandConclude.chuntian)
  return chuntian_;
}
inline void SC_LandConclude::set_chuntian(::google::protobuf::int32 value) {
  set_has_chuntian();
  chuntian_ = value;
  // @@protoc_insertion_point(field_set:SC_LandConclude.chuntian)
}

// optional int32 fanchuntian = 3;
inline bool SC_LandConclude::has_fanchuntian() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_LandConclude::set_has_fanchuntian() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_LandConclude::clear_has_fanchuntian() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_LandConclude::clear_fanchuntian() {
  fanchuntian_ = 0;
  clear_has_fanchuntian();
}
inline ::google::protobuf::int32 SC_LandConclude::fanchuntian() const {
  // @@protoc_insertion_point(field_get:SC_LandConclude.fanchuntian)
  return fanchuntian_;
}
inline void SC_LandConclude::set_fanchuntian(::google::protobuf::int32 value) {
  set_has_fanchuntian();
  fanchuntian_ = value;
  // @@protoc_insertion_point(field_set:SC_LandConclude.fanchuntian)
}

// -------------------------------------------------------------------

// SC_LandPlayerOffline

// optional int32 cur_chair_id = 1;
inline bool SC_LandPlayerOffline::has_cur_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LandPlayerOffline::set_has_cur_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LandPlayerOffline::clear_has_cur_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LandPlayerOffline::clear_cur_chair_id() {
  cur_chair_id_ = 0;
  clear_has_cur_chair_id();
}
inline ::google::protobuf::int32 SC_LandPlayerOffline::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandPlayerOffline.cur_chair_id)
  return cur_chair_id_;
}
inline void SC_LandPlayerOffline::set_cur_chair_id(::google::protobuf::int32 value) {
  set_has_cur_chair_id();
  cur_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandPlayerOffline.cur_chair_id)
}

// optional int32 wait_time = 2;
inline bool SC_LandPlayerOffline::has_wait_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_LandPlayerOffline::set_has_wait_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_LandPlayerOffline::clear_has_wait_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_LandPlayerOffline::clear_wait_time() {
  wait_time_ = 0;
  clear_has_wait_time();
}
inline ::google::protobuf::int32 SC_LandPlayerOffline::wait_time() const {
  // @@protoc_insertion_point(field_get:SC_LandPlayerOffline.wait_time)
  return wait_time_;
}
inline void SC_LandPlayerOffline::set_wait_time(::google::protobuf::int32 value) {
  set_has_wait_time();
  wait_time_ = value;
  // @@protoc_insertion_point(field_set:SC_LandPlayerOffline.wait_time)
}

// -------------------------------------------------------------------

// SC_LandPlayerOnline

// optional int32 cur_online_chair_id = 1;
inline bool SC_LandPlayerOnline::has_cur_online_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LandPlayerOnline::set_has_cur_online_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LandPlayerOnline::clear_has_cur_online_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LandPlayerOnline::clear_cur_online_chair_id() {
  cur_online_chair_id_ = 0;
  clear_has_cur_online_chair_id();
}
inline ::google::protobuf::int32 SC_LandPlayerOnline::cur_online_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandPlayerOnline.cur_online_chair_id)
  return cur_online_chair_id_;
}
inline void SC_LandPlayerOnline::set_cur_online_chair_id(::google::protobuf::int32 value) {
  set_has_cur_online_chair_id();
  cur_online_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandPlayerOnline.cur_online_chair_id)
}

// optional int32 cur_chair_id = 2;
inline bool SC_LandPlayerOnline::has_cur_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_LandPlayerOnline::set_has_cur_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_LandPlayerOnline::clear_has_cur_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_LandPlayerOnline::clear_cur_chair_id() {
  cur_chair_id_ = 0;
  clear_has_cur_chair_id();
}
inline ::google::protobuf::int32 SC_LandPlayerOnline::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandPlayerOnline.cur_chair_id)
  return cur_chair_id_;
}
inline void SC_LandPlayerOnline::set_cur_chair_id(::google::protobuf::int32 value) {
  set_has_cur_chair_id();
  cur_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandPlayerOnline.cur_chair_id)
}

// -------------------------------------------------------------------

// PlayerCardsMsg

// optional int32 chair_id = 1;
inline bool PlayerCardsMsg::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerCardsMsg::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerCardsMsg::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerCardsMsg::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 PlayerCardsMsg::chair_id() const {
  // @@protoc_insertion_point(field_get:PlayerCardsMsg.chair_id)
  return chair_id_;
}
inline void PlayerCardsMsg::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:PlayerCardsMsg.chair_id)
}

// optional int32 cardsnum = 2;
inline bool PlayerCardsMsg::has_cardsnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerCardsMsg::set_has_cardsnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerCardsMsg::clear_has_cardsnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerCardsMsg::clear_cardsnum() {
  cardsnum_ = 0;
  clear_has_cardsnum();
}
inline ::google::protobuf::int32 PlayerCardsMsg::cardsnum() const {
  // @@protoc_insertion_point(field_get:PlayerCardsMsg.cardsnum)
  return cardsnum_;
}
inline void PlayerCardsMsg::set_cardsnum(::google::protobuf::int32 value) {
  set_has_cardsnum();
  cardsnum_ = value;
  // @@protoc_insertion_point(field_set:PlayerCardsMsg.cardsnum)
}

// optional bool isTrusteeship = 3;
inline bool PlayerCardsMsg::has_istrusteeship() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerCardsMsg::set_has_istrusteeship() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerCardsMsg::clear_has_istrusteeship() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerCardsMsg::clear_istrusteeship() {
  istrusteeship_ = false;
  clear_has_istrusteeship();
}
inline bool PlayerCardsMsg::istrusteeship() const {
  // @@protoc_insertion_point(field_get:PlayerCardsMsg.isTrusteeship)
  return istrusteeship_;
}
inline void PlayerCardsMsg::set_istrusteeship(bool value) {
  set_has_istrusteeship();
  istrusteeship_ = value;
  // @@protoc_insertion_point(field_set:PlayerCardsMsg.isTrusteeship)
}

// -------------------------------------------------------------------

// SC_LandRecoveryPlayerCard

// optional int32 cur_chair_id = 1;
inline bool SC_LandRecoveryPlayerCard::has_cur_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LandRecoveryPlayerCard::set_has_cur_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LandRecoveryPlayerCard::clear_has_cur_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LandRecoveryPlayerCard::clear_cur_chair_id() {
  cur_chair_id_ = 0;
  clear_has_cur_chair_id();
}
inline ::google::protobuf::int32 SC_LandRecoveryPlayerCard::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCard.cur_chair_id)
  return cur_chair_id_;
}
inline void SC_LandRecoveryPlayerCard::set_cur_chair_id(::google::protobuf::int32 value) {
  set_has_cur_chair_id();
  cur_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandRecoveryPlayerCard.cur_chair_id)
}

// repeated int32 cards = 2;
inline int SC_LandRecoveryPlayerCard::cards_size() const {
  return cards_.size();
}
inline void SC_LandRecoveryPlayerCard::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 SC_LandRecoveryPlayerCard::cards(int index) const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCard.cards)
  return cards_.Get(index);
}
inline void SC_LandRecoveryPlayerCard::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_LandRecoveryPlayerCard.cards)
}
inline void SC_LandRecoveryPlayerCard::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:SC_LandRecoveryPlayerCard.cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_LandRecoveryPlayerCard::cards() const {
  // @@protoc_insertion_point(field_list:SC_LandRecoveryPlayerCard.cards)
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_LandRecoveryPlayerCard::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:SC_LandRecoveryPlayerCard.cards)
  return &cards_;
}

// repeated .PlayerCardsMsg pb_msg = 3;
inline int SC_LandRecoveryPlayerCard::pb_msg_size() const {
  return pb_msg_.size();
}
inline void SC_LandRecoveryPlayerCard::clear_pb_msg() {
  pb_msg_.Clear();
}
inline const ::PlayerCardsMsg& SC_LandRecoveryPlayerCard::pb_msg(int index) const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCard.pb_msg)
  return pb_msg_.Get(index);
}
inline ::PlayerCardsMsg* SC_LandRecoveryPlayerCard::mutable_pb_msg(int index) {
  // @@protoc_insertion_point(field_mutable:SC_LandRecoveryPlayerCard.pb_msg)
  return pb_msg_.Mutable(index);
}
inline ::PlayerCardsMsg* SC_LandRecoveryPlayerCard::add_pb_msg() {
  // @@protoc_insertion_point(field_add:SC_LandRecoveryPlayerCard.pb_msg)
  return pb_msg_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerCardsMsg >*
SC_LandRecoveryPlayerCard::mutable_pb_msg() {
  // @@protoc_insertion_point(field_mutable_list:SC_LandRecoveryPlayerCard.pb_msg)
  return &pb_msg_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerCardsMsg >&
SC_LandRecoveryPlayerCard::pb_msg() const {
  // @@protoc_insertion_point(field_list:SC_LandRecoveryPlayerCard.pb_msg)
  return pb_msg_;
}

// optional int32 landchairid = 4;
inline bool SC_LandRecoveryPlayerCard::has_landchairid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_LandRecoveryPlayerCard::set_has_landchairid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_LandRecoveryPlayerCard::clear_has_landchairid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_LandRecoveryPlayerCard::clear_landchairid() {
  landchairid_ = 0;
  clear_has_landchairid();
}
inline ::google::protobuf::int32 SC_LandRecoveryPlayerCard::landchairid() const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCard.landchairid)
  return landchairid_;
}
inline void SC_LandRecoveryPlayerCard::set_landchairid(::google::protobuf::int32 value) {
  set_has_landchairid();
  landchairid_ = value;
  // @@protoc_insertion_point(field_set:SC_LandRecoveryPlayerCard.landchairid)
}

// repeated int32 landcards = 5;
inline int SC_LandRecoveryPlayerCard::landcards_size() const {
  return landcards_.size();
}
inline void SC_LandRecoveryPlayerCard::clear_landcards() {
  landcards_.Clear();
}
inline ::google::protobuf::int32 SC_LandRecoveryPlayerCard::landcards(int index) const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCard.landcards)
  return landcards_.Get(index);
}
inline void SC_LandRecoveryPlayerCard::set_landcards(int index, ::google::protobuf::int32 value) {
  landcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_LandRecoveryPlayerCard.landcards)
}
inline void SC_LandRecoveryPlayerCard::add_landcards(::google::protobuf::int32 value) {
  landcards_.Add(value);
  // @@protoc_insertion_point(field_add:SC_LandRecoveryPlayerCard.landcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_LandRecoveryPlayerCard::landcards() const {
  // @@protoc_insertion_point(field_list:SC_LandRecoveryPlayerCard.landcards)
  return landcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_LandRecoveryPlayerCard::mutable_landcards() {
  // @@protoc_insertion_point(field_mutable_list:SC_LandRecoveryPlayerCard.landcards)
  return &landcards_;
}

// optional int32 call_score = 6;
inline bool SC_LandRecoveryPlayerCard::has_call_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_LandRecoveryPlayerCard::set_has_call_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_LandRecoveryPlayerCard::clear_has_call_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_LandRecoveryPlayerCard::clear_call_score() {
  call_score_ = 0;
  clear_has_call_score();
}
inline ::google::protobuf::int32 SC_LandRecoveryPlayerCard::call_score() const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCard.call_score)
  return call_score_;
}
inline void SC_LandRecoveryPlayerCard::set_call_score(::google::protobuf::int32 value) {
  set_has_call_score();
  call_score_ = value;
  // @@protoc_insertion_point(field_set:SC_LandRecoveryPlayerCard.call_score)
}

// repeated int32 lastCards = 7;
inline int SC_LandRecoveryPlayerCard::lastcards_size() const {
  return lastcards_.size();
}
inline void SC_LandRecoveryPlayerCard::clear_lastcards() {
  lastcards_.Clear();
}
inline ::google::protobuf::int32 SC_LandRecoveryPlayerCard::lastcards(int index) const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCard.lastCards)
  return lastcards_.Get(index);
}
inline void SC_LandRecoveryPlayerCard::set_lastcards(int index, ::google::protobuf::int32 value) {
  lastcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_LandRecoveryPlayerCard.lastCards)
}
inline void SC_LandRecoveryPlayerCard::add_lastcards(::google::protobuf::int32 value) {
  lastcards_.Add(value);
  // @@protoc_insertion_point(field_add:SC_LandRecoveryPlayerCard.lastCards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_LandRecoveryPlayerCard::lastcards() const {
  // @@protoc_insertion_point(field_list:SC_LandRecoveryPlayerCard.lastCards)
  return lastcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_LandRecoveryPlayerCard::mutable_lastcards() {
  // @@protoc_insertion_point(field_mutable_list:SC_LandRecoveryPlayerCard.lastCards)
  return &lastcards_;
}

// optional int32 lastcardid = 8;
inline bool SC_LandRecoveryPlayerCard::has_lastcardid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_LandRecoveryPlayerCard::set_has_lastcardid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_LandRecoveryPlayerCard::clear_has_lastcardid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_LandRecoveryPlayerCard::clear_lastcardid() {
  lastcardid_ = 0;
  clear_has_lastcardid();
}
inline ::google::protobuf::int32 SC_LandRecoveryPlayerCard::lastcardid() const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCard.lastcardid)
  return lastcardid_;
}
inline void SC_LandRecoveryPlayerCard::set_lastcardid(::google::protobuf::int32 value) {
  set_has_lastcardid();
  lastcardid_ = value;
  // @@protoc_insertion_point(field_set:SC_LandRecoveryPlayerCard.lastcardid)
}

// optional int32 outcardid = 9;
inline bool SC_LandRecoveryPlayerCard::has_outcardid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SC_LandRecoveryPlayerCard::set_has_outcardid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SC_LandRecoveryPlayerCard::clear_has_outcardid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SC_LandRecoveryPlayerCard::clear_outcardid() {
  outcardid_ = 0;
  clear_has_outcardid();
}
inline ::google::protobuf::int32 SC_LandRecoveryPlayerCard::outcardid() const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCard.outcardid)
  return outcardid_;
}
inline void SC_LandRecoveryPlayerCard::set_outcardid(::google::protobuf::int32 value) {
  set_has_outcardid();
  outcardid_ = value;
  // @@protoc_insertion_point(field_set:SC_LandRecoveryPlayerCard.outcardid)
}

// repeated int32 alreadyoutcards = 10;
inline int SC_LandRecoveryPlayerCard::alreadyoutcards_size() const {
  return alreadyoutcards_.size();
}
inline void SC_LandRecoveryPlayerCard::clear_alreadyoutcards() {
  alreadyoutcards_.Clear();
}
inline ::google::protobuf::int32 SC_LandRecoveryPlayerCard::alreadyoutcards(int index) const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCard.alreadyoutcards)
  return alreadyoutcards_.Get(index);
}
inline void SC_LandRecoveryPlayerCard::set_alreadyoutcards(int index, ::google::protobuf::int32 value) {
  alreadyoutcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_LandRecoveryPlayerCard.alreadyoutcards)
}
inline void SC_LandRecoveryPlayerCard::add_alreadyoutcards(::google::protobuf::int32 value) {
  alreadyoutcards_.Add(value);
  // @@protoc_insertion_point(field_add:SC_LandRecoveryPlayerCard.alreadyoutcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_LandRecoveryPlayerCard::alreadyoutcards() const {
  // @@protoc_insertion_point(field_list:SC_LandRecoveryPlayerCard.alreadyoutcards)
  return alreadyoutcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_LandRecoveryPlayerCard::mutable_alreadyoutcards() {
  // @@protoc_insertion_point(field_mutable_list:SC_LandRecoveryPlayerCard.alreadyoutcards)
  return &alreadyoutcards_;
}

// optional int32 bomb = 11;
inline bool SC_LandRecoveryPlayerCard::has_bomb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SC_LandRecoveryPlayerCard::set_has_bomb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SC_LandRecoveryPlayerCard::clear_has_bomb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SC_LandRecoveryPlayerCard::clear_bomb() {
  bomb_ = 0;
  clear_has_bomb();
}
inline ::google::protobuf::int32 SC_LandRecoveryPlayerCard::bomb() const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCard.bomb)
  return bomb_;
}
inline void SC_LandRecoveryPlayerCard::set_bomb(::google::protobuf::int32 value) {
  set_has_bomb();
  bomb_ = value;
  // @@protoc_insertion_point(field_set:SC_LandRecoveryPlayerCard.bomb)
}

// -------------------------------------------------------------------

// pofflineMsg

// optional int32 chair_id = 1;
inline bool pofflineMsg::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pofflineMsg::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pofflineMsg::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pofflineMsg::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 pofflineMsg::chair_id() const {
  // @@protoc_insertion_point(field_get:pofflineMsg.chair_id)
  return chair_id_;
}
inline void pofflineMsg::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:pofflineMsg.chair_id)
}

// optional int32 outTimes = 2;
inline bool pofflineMsg::has_outtimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pofflineMsg::set_has_outtimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pofflineMsg::clear_has_outtimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pofflineMsg::clear_outtimes() {
  outtimes_ = 0;
  clear_has_outtimes();
}
inline ::google::protobuf::int32 pofflineMsg::outtimes() const {
  // @@protoc_insertion_point(field_get:pofflineMsg.outTimes)
  return outtimes_;
}
inline void pofflineMsg::set_outtimes(::google::protobuf::int32 value) {
  set_has_outtimes();
  outtimes_ = value;
  // @@protoc_insertion_point(field_set:pofflineMsg.outTimes)
}

// -------------------------------------------------------------------

// SC_LandRecoveryPlayerCallScore

// optional int32 cur_chair_id = 1;
inline bool SC_LandRecoveryPlayerCallScore::has_cur_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LandRecoveryPlayerCallScore::set_has_cur_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LandRecoveryPlayerCallScore::clear_has_cur_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LandRecoveryPlayerCallScore::clear_cur_chair_id() {
  cur_chair_id_ = 0;
  clear_has_cur_chair_id();
}
inline ::google::protobuf::int32 SC_LandRecoveryPlayerCallScore::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCallScore.cur_chair_id)
  return cur_chair_id_;
}
inline void SC_LandRecoveryPlayerCallScore::set_cur_chair_id(::google::protobuf::int32 value) {
  set_has_cur_chair_id();
  cur_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandRecoveryPlayerCallScore.cur_chair_id)
}

// optional int32 call_chair_id = 2;
inline bool SC_LandRecoveryPlayerCallScore::has_call_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_LandRecoveryPlayerCallScore::set_has_call_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_LandRecoveryPlayerCallScore::clear_has_call_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_LandRecoveryPlayerCallScore::clear_call_chair_id() {
  call_chair_id_ = 0;
  clear_has_call_chair_id();
}
inline ::google::protobuf::int32 SC_LandRecoveryPlayerCallScore::call_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCallScore.call_chair_id)
  return call_chair_id_;
}
inline void SC_LandRecoveryPlayerCallScore::set_call_chair_id(::google::protobuf::int32 value) {
  set_has_call_chair_id();
  call_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandRecoveryPlayerCallScore.call_chair_id)
}

// optional int32 call_score = 3;
inline bool SC_LandRecoveryPlayerCallScore::has_call_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_LandRecoveryPlayerCallScore::set_has_call_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_LandRecoveryPlayerCallScore::clear_has_call_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_LandRecoveryPlayerCallScore::clear_call_score() {
  call_score_ = 0;
  clear_has_call_score();
}
inline ::google::protobuf::int32 SC_LandRecoveryPlayerCallScore::call_score() const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCallScore.call_score)
  return call_score_;
}
inline void SC_LandRecoveryPlayerCallScore::set_call_score(::google::protobuf::int32 value) {
  set_has_call_score();
  call_score_ = value;
  // @@protoc_insertion_point(field_set:SC_LandRecoveryPlayerCallScore.call_score)
}

// repeated int32 cards = 4;
inline int SC_LandRecoveryPlayerCallScore::cards_size() const {
  return cards_.size();
}
inline void SC_LandRecoveryPlayerCallScore::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 SC_LandRecoveryPlayerCallScore::cards(int index) const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCallScore.cards)
  return cards_.Get(index);
}
inline void SC_LandRecoveryPlayerCallScore::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_LandRecoveryPlayerCallScore.cards)
}
inline void SC_LandRecoveryPlayerCallScore::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:SC_LandRecoveryPlayerCallScore.cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_LandRecoveryPlayerCallScore::cards() const {
  // @@protoc_insertion_point(field_list:SC_LandRecoveryPlayerCallScore.cards)
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_LandRecoveryPlayerCallScore::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:SC_LandRecoveryPlayerCallScore.cards)
  return &cards_;
}

// repeated .pofflineMsg pb_playerOfflineMsg = 5;
inline int SC_LandRecoveryPlayerCallScore::pb_playerofflinemsg_size() const {
  return pb_playerofflinemsg_.size();
}
inline void SC_LandRecoveryPlayerCallScore::clear_pb_playerofflinemsg() {
  pb_playerofflinemsg_.Clear();
}
inline const ::pofflineMsg& SC_LandRecoveryPlayerCallScore::pb_playerofflinemsg(int index) const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerCallScore.pb_playerOfflineMsg)
  return pb_playerofflinemsg_.Get(index);
}
inline ::pofflineMsg* SC_LandRecoveryPlayerCallScore::mutable_pb_playerofflinemsg(int index) {
  // @@protoc_insertion_point(field_mutable:SC_LandRecoveryPlayerCallScore.pb_playerOfflineMsg)
  return pb_playerofflinemsg_.Mutable(index);
}
inline ::pofflineMsg* SC_LandRecoveryPlayerCallScore::add_pb_playerofflinemsg() {
  // @@protoc_insertion_point(field_add:SC_LandRecoveryPlayerCallScore.pb_playerOfflineMsg)
  return pb_playerofflinemsg_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pofflineMsg >*
SC_LandRecoveryPlayerCallScore::mutable_pb_playerofflinemsg() {
  // @@protoc_insertion_point(field_mutable_list:SC_LandRecoveryPlayerCallScore.pb_playerOfflineMsg)
  return &pb_playerofflinemsg_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pofflineMsg >&
SC_LandRecoveryPlayerCallScore::pb_playerofflinemsg() const {
  // @@protoc_insertion_point(field_list:SC_LandRecoveryPlayerCallScore.pb_playerOfflineMsg)
  return pb_playerofflinemsg_;
}

// -------------------------------------------------------------------

// SC_LandCallScorePlayerOffline

// optional int32 cur_chair_id = 1;
inline bool SC_LandCallScorePlayerOffline::has_cur_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LandCallScorePlayerOffline::set_has_cur_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LandCallScorePlayerOffline::clear_has_cur_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LandCallScorePlayerOffline::clear_cur_chair_id() {
  cur_chair_id_ = 0;
  clear_has_cur_chair_id();
}
inline ::google::protobuf::int32 SC_LandCallScorePlayerOffline::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandCallScorePlayerOffline.cur_chair_id)
  return cur_chair_id_;
}
inline void SC_LandCallScorePlayerOffline::set_cur_chair_id(::google::protobuf::int32 value) {
  set_has_cur_chair_id();
  cur_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandCallScorePlayerOffline.cur_chair_id)
}

// optional int32 wait_time = 2;
inline bool SC_LandCallScorePlayerOffline::has_wait_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_LandCallScorePlayerOffline::set_has_wait_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_LandCallScorePlayerOffline::clear_has_wait_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_LandCallScorePlayerOffline::clear_wait_time() {
  wait_time_ = 0;
  clear_has_wait_time();
}
inline ::google::protobuf::int32 SC_LandCallScorePlayerOffline::wait_time() const {
  // @@protoc_insertion_point(field_get:SC_LandCallScorePlayerOffline.wait_time)
  return wait_time_;
}
inline void SC_LandCallScorePlayerOffline::set_wait_time(::google::protobuf::int32 value) {
  set_has_wait_time();
  wait_time_ = value;
  // @@protoc_insertion_point(field_set:SC_LandCallScorePlayerOffline.wait_time)
}

// -------------------------------------------------------------------

// CS_LandTrusteeship

// -------------------------------------------------------------------

// SC_LandTrusteeship

// optional int32 chair_id = 1;
inline bool SC_LandTrusteeship::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LandTrusteeship::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LandTrusteeship::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LandTrusteeship::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_LandTrusteeship::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandTrusteeship.chair_id)
  return chair_id_;
}
inline void SC_LandTrusteeship::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandTrusteeship.chair_id)
}

// optional bool isTrusteeship = 2;
inline bool SC_LandTrusteeship::has_istrusteeship() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_LandTrusteeship::set_has_istrusteeship() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_LandTrusteeship::clear_has_istrusteeship() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_LandTrusteeship::clear_istrusteeship() {
  istrusteeship_ = false;
  clear_has_istrusteeship();
}
inline bool SC_LandTrusteeship::istrusteeship() const {
  // @@protoc_insertion_point(field_get:SC_LandTrusteeship.isTrusteeship)
  return istrusteeship_;
}
inline void SC_LandTrusteeship::set_istrusteeship(bool value) {
  set_has_istrusteeship();
  istrusteeship_ = value;
  // @@protoc_insertion_point(field_set:SC_LandTrusteeship.isTrusteeship)
}

// -------------------------------------------------------------------

// CS_LandCallDouble

// optional int32 is_double = 1;
inline bool CS_LandCallDouble::has_is_double() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_LandCallDouble::set_has_is_double() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_LandCallDouble::clear_has_is_double() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_LandCallDouble::clear_is_double() {
  is_double_ = 0;
  clear_has_is_double();
}
inline ::google::protobuf::int32 CS_LandCallDouble::is_double() const {
  // @@protoc_insertion_point(field_get:CS_LandCallDouble.is_double)
  return is_double_;
}
inline void CS_LandCallDouble::set_is_double(::google::protobuf::int32 value) {
  set_has_is_double();
  is_double_ = value;
  // @@protoc_insertion_point(field_set:CS_LandCallDouble.is_double)
}

// -------------------------------------------------------------------

// SC_LandCallDouble

// optional int32 call_chair_id = 1;
inline bool SC_LandCallDouble::has_call_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LandCallDouble::set_has_call_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LandCallDouble::clear_has_call_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LandCallDouble::clear_call_chair_id() {
  call_chair_id_ = 0;
  clear_has_call_chair_id();
}
inline ::google::protobuf::int32 SC_LandCallDouble::call_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandCallDouble.call_chair_id)
  return call_chair_id_;
}
inline void SC_LandCallDouble::set_call_chair_id(::google::protobuf::int32 value) {
  set_has_call_chair_id();
  call_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandCallDouble.call_chair_id)
}

// optional int32 is_double = 2;
inline bool SC_LandCallDouble::has_is_double() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_LandCallDouble::set_has_is_double() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_LandCallDouble::clear_has_is_double() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_LandCallDouble::clear_is_double() {
  is_double_ = 0;
  clear_has_is_double();
}
inline ::google::protobuf::int32 SC_LandCallDouble::is_double() const {
  // @@protoc_insertion_point(field_get:SC_LandCallDouble.is_double)
  return is_double_;
}
inline void SC_LandCallDouble::set_is_double(::google::protobuf::int32 value) {
  set_has_is_double();
  is_double_ = value;
  // @@protoc_insertion_point(field_set:SC_LandCallDouble.is_double)
}

// -------------------------------------------------------------------

// SC_LandCallDoubleFinish

// optional int32 land_chair_id = 1;
inline bool SC_LandCallDoubleFinish::has_land_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LandCallDoubleFinish::set_has_land_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LandCallDoubleFinish::clear_has_land_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LandCallDoubleFinish::clear_land_chair_id() {
  land_chair_id_ = 0;
  clear_has_land_chair_id();
}
inline ::google::protobuf::int32 SC_LandCallDoubleFinish::land_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_LandCallDoubleFinish.land_chair_id)
  return land_chair_id_;
}
inline void SC_LandCallDoubleFinish::set_land_chair_id(::google::protobuf::int32 value) {
  set_has_land_chair_id();
  land_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_LandCallDoubleFinish.land_chair_id)
}

// -------------------------------------------------------------------

// PlayerDoubleMsg

// optional int32 chair_id = 1;
inline bool PlayerDoubleMsg::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerDoubleMsg::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerDoubleMsg::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerDoubleMsg::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 PlayerDoubleMsg::chair_id() const {
  // @@protoc_insertion_point(field_get:PlayerDoubleMsg.chair_id)
  return chair_id_;
}
inline void PlayerDoubleMsg::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:PlayerDoubleMsg.chair_id)
}

// optional int32 is_double = 2;
inline bool PlayerDoubleMsg::has_is_double() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerDoubleMsg::set_has_is_double() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerDoubleMsg::clear_has_is_double() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerDoubleMsg::clear_is_double() {
  is_double_ = 0;
  clear_has_is_double();
}
inline ::google::protobuf::int32 PlayerDoubleMsg::is_double() const {
  // @@protoc_insertion_point(field_get:PlayerDoubleMsg.is_double)
  return is_double_;
}
inline void PlayerDoubleMsg::set_is_double(::google::protobuf::int32 value) {
  set_has_is_double();
  is_double_ = value;
  // @@protoc_insertion_point(field_set:PlayerDoubleMsg.is_double)
}

// -------------------------------------------------------------------

// SC_LandRecoveryPlayerDouble

// repeated .PlayerDoubleMsg pb_double_state = 1;
inline int SC_LandRecoveryPlayerDouble::pb_double_state_size() const {
  return pb_double_state_.size();
}
inline void SC_LandRecoveryPlayerDouble::clear_pb_double_state() {
  pb_double_state_.Clear();
}
inline const ::PlayerDoubleMsg& SC_LandRecoveryPlayerDouble::pb_double_state(int index) const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerDouble.pb_double_state)
  return pb_double_state_.Get(index);
}
inline ::PlayerDoubleMsg* SC_LandRecoveryPlayerDouble::mutable_pb_double_state(int index) {
  // @@protoc_insertion_point(field_mutable:SC_LandRecoveryPlayerDouble.pb_double_state)
  return pb_double_state_.Mutable(index);
}
inline ::PlayerDoubleMsg* SC_LandRecoveryPlayerDouble::add_pb_double_state() {
  // @@protoc_insertion_point(field_add:SC_LandRecoveryPlayerDouble.pb_double_state)
  return pb_double_state_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerDoubleMsg >*
SC_LandRecoveryPlayerDouble::mutable_pb_double_state() {
  // @@protoc_insertion_point(field_mutable_list:SC_LandRecoveryPlayerDouble.pb_double_state)
  return &pb_double_state_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerDoubleMsg >&
SC_LandRecoveryPlayerDouble::pb_double_state() const {
  // @@protoc_insertion_point(field_list:SC_LandRecoveryPlayerDouble.pb_double_state)
  return pb_double_state_;
}

// optional int32 double_count_down = 2;
inline bool SC_LandRecoveryPlayerDouble::has_double_count_down() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LandRecoveryPlayerDouble::set_has_double_count_down() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LandRecoveryPlayerDouble::clear_has_double_count_down() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LandRecoveryPlayerDouble::clear_double_count_down() {
  double_count_down_ = 0;
  clear_has_double_count_down();
}
inline ::google::protobuf::int32 SC_LandRecoveryPlayerDouble::double_count_down() const {
  // @@protoc_insertion_point(field_get:SC_LandRecoveryPlayerDouble.double_count_down)
  return double_count_down_;
}
inline void SC_LandRecoveryPlayerDouble::set_double_count_down(::google::protobuf::int32 value) {
  set_has_double_count_down();
  double_count_down_ = value;
  // @@protoc_insertion_point(field_set:SC_LandRecoveryPlayerDouble.double_count_down)
}

// -------------------------------------------------------------------

// CS_GetPrivateConfig

// -------------------------------------------------------------------

// CS_SetPrivateConfigChange

// optional int32 nallowDouble = 1;
inline bool CS_SetPrivateConfigChange::has_nallowdouble() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_SetPrivateConfigChange::set_has_nallowdouble() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_SetPrivateConfigChange::clear_has_nallowdouble() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_SetPrivateConfigChange::clear_nallowdouble() {
  nallowdouble_ = 0;
  clear_has_nallowdouble();
}
inline ::google::protobuf::int32 CS_SetPrivateConfigChange::nallowdouble() const {
  // @@protoc_insertion_point(field_get:CS_SetPrivateConfigChange.nallowDouble)
  return nallowdouble_;
}
inline void CS_SetPrivateConfigChange::set_nallowdouble(::google::protobuf::int32 value) {
  set_has_nallowdouble();
  nallowdouble_ = value;
  // @@protoc_insertion_point(field_set:CS_SetPrivateConfigChange.nallowDouble)
}

// optional int32 nlimitbeishu = 2;
inline bool CS_SetPrivateConfigChange::has_nlimitbeishu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_SetPrivateConfigChange::set_has_nlimitbeishu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_SetPrivateConfigChange::clear_has_nlimitbeishu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_SetPrivateConfigChange::clear_nlimitbeishu() {
  nlimitbeishu_ = 0;
  clear_has_nlimitbeishu();
}
inline ::google::protobuf::int32 CS_SetPrivateConfigChange::nlimitbeishu() const {
  // @@protoc_insertion_point(field_get:CS_SetPrivateConfigChange.nlimitbeishu)
  return nlimitbeishu_;
}
inline void CS_SetPrivateConfigChange::set_nlimitbeishu(::google::protobuf::int32 value) {
  set_has_nlimitbeishu();
  nlimitbeishu_ = value;
  // @@protoc_insertion_point(field_set:CS_SetPrivateConfigChange.nlimitbeishu)
}

// optional int32 nallowYiXiaoBoda = 3;
inline bool CS_SetPrivateConfigChange::has_nallowyixiaoboda() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CS_SetPrivateConfigChange::set_has_nallowyixiaoboda() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CS_SetPrivateConfigChange::clear_has_nallowyixiaoboda() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CS_SetPrivateConfigChange::clear_nallowyixiaoboda() {
  nallowyixiaoboda_ = 0;
  clear_has_nallowyixiaoboda();
}
inline ::google::protobuf::int32 CS_SetPrivateConfigChange::nallowyixiaoboda() const {
  // @@protoc_insertion_point(field_get:CS_SetPrivateConfigChange.nallowYiXiaoBoda)
  return nallowyixiaoboda_;
}
inline void CS_SetPrivateConfigChange::set_nallowyixiaoboda(::google::protobuf::int32 value) {
  set_has_nallowyixiaoboda();
  nallowyixiaoboda_ = value;
  // @@protoc_insertion_point(field_set:CS_SetPrivateConfigChange.nallowYiXiaoBoda)
}

// -------------------------------------------------------------------

// SC_PrivateConfigChange

// optional int32 nallowDouble = 1;
inline bool SC_PrivateConfigChange::has_nallowdouble() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_PrivateConfigChange::set_has_nallowdouble() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_PrivateConfigChange::clear_has_nallowdouble() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_PrivateConfigChange::clear_nallowdouble() {
  nallowdouble_ = 0;
  clear_has_nallowdouble();
}
inline ::google::protobuf::int32 SC_PrivateConfigChange::nallowdouble() const {
  // @@protoc_insertion_point(field_get:SC_PrivateConfigChange.nallowDouble)
  return nallowdouble_;
}
inline void SC_PrivateConfigChange::set_nallowdouble(::google::protobuf::int32 value) {
  set_has_nallowdouble();
  nallowdouble_ = value;
  // @@protoc_insertion_point(field_set:SC_PrivateConfigChange.nallowDouble)
}

// optional int32 nlimitbeishu = 2;
inline bool SC_PrivateConfigChange::has_nlimitbeishu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_PrivateConfigChange::set_has_nlimitbeishu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_PrivateConfigChange::clear_has_nlimitbeishu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_PrivateConfigChange::clear_nlimitbeishu() {
  nlimitbeishu_ = 0;
  clear_has_nlimitbeishu();
}
inline ::google::protobuf::int32 SC_PrivateConfigChange::nlimitbeishu() const {
  // @@protoc_insertion_point(field_get:SC_PrivateConfigChange.nlimitbeishu)
  return nlimitbeishu_;
}
inline void SC_PrivateConfigChange::set_nlimitbeishu(::google::protobuf::int32 value) {
  set_has_nlimitbeishu();
  nlimitbeishu_ = value;
  // @@protoc_insertion_point(field_set:SC_PrivateConfigChange.nlimitbeishu)
}

// optional int32 nallowYiXiaoBoda = 3;
inline bool SC_PrivateConfigChange::has_nallowyixiaoboda() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_PrivateConfigChange::set_has_nallowyixiaoboda() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_PrivateConfigChange::clear_has_nallowyixiaoboda() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_PrivateConfigChange::clear_nallowyixiaoboda() {
  nallowyixiaoboda_ = 0;
  clear_has_nallowyixiaoboda();
}
inline ::google::protobuf::int32 SC_PrivateConfigChange::nallowyixiaoboda() const {
  // @@protoc_insertion_point(field_get:SC_PrivateConfigChange.nallowYiXiaoBoda)
  return nallowyixiaoboda_;
}
inline void SC_PrivateConfigChange::set_nallowyixiaoboda(::google::protobuf::int32 value) {
  set_has_nallowyixiaoboda();
  nallowyixiaoboda_ = value;
  // @@protoc_insertion_point(field_set:SC_PrivateConfigChange.nallowYiXiaoBoda)
}

// optional int32 ncell = 4;
inline bool SC_PrivateConfigChange::has_ncell() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_PrivateConfigChange::set_has_ncell() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_PrivateConfigChange::clear_has_ncell() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_PrivateConfigChange::clear_ncell() {
  ncell_ = 0;
  clear_has_ncell();
}
inline ::google::protobuf::int32 SC_PrivateConfigChange::ncell() const {
  // @@protoc_insertion_point(field_get:SC_PrivateConfigChange.ncell)
  return ncell_;
}
inline void SC_PrivateConfigChange::set_ncell(::google::protobuf::int32 value) {
  set_has_ncell();
  ncell_ = value;
  // @@protoc_insertion_point(field_set:SC_PrivateConfigChange.ncell)
}

// optional int32 nlimit = 5;
inline bool SC_PrivateConfigChange::has_nlimit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SC_PrivateConfigChange::set_has_nlimit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SC_PrivateConfigChange::clear_has_nlimit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SC_PrivateConfigChange::clear_nlimit() {
  nlimit_ = 0;
  clear_has_nlimit();
}
inline ::google::protobuf::int32 SC_PrivateConfigChange::nlimit() const {
  // @@protoc_insertion_point(field_get:SC_PrivateConfigChange.nlimit)
  return nlimit_;
}
inline void SC_PrivateConfigChange::set_nlimit(::google::protobuf::int32 value) {
  set_has_nlimit();
  nlimit_ = value;
  // @@protoc_insertion_point(field_set:SC_PrivateConfigChange.nlimit)
}

// optional int32 nhosterguid = 6;
inline bool SC_PrivateConfigChange::has_nhosterguid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SC_PrivateConfigChange::set_has_nhosterguid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SC_PrivateConfigChange::clear_has_nhosterguid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SC_PrivateConfigChange::clear_nhosterguid() {
  nhosterguid_ = 0;
  clear_has_nhosterguid();
}
inline ::google::protobuf::int32 SC_PrivateConfigChange::nhosterguid() const {
  // @@protoc_insertion_point(field_get:SC_PrivateConfigChange.nhosterguid)
  return nhosterguid_;
}
inline void SC_PrivateConfigChange::set_nhosterguid(::google::protobuf::int32 value) {
  set_has_nhosterguid();
  nhosterguid_ = value;
  // @@protoc_insertion_point(field_set:SC_PrivateConfigChange.nhosterguid)
}

// optional int32 nstatues = 7;
inline bool SC_PrivateConfigChange::has_nstatues() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SC_PrivateConfigChange::set_has_nstatues() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SC_PrivateConfigChange::clear_has_nstatues() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SC_PrivateConfigChange::clear_nstatues() {
  nstatues_ = 0;
  clear_has_nstatues();
}
inline ::google::protobuf::int32 SC_PrivateConfigChange::nstatues() const {
  // @@protoc_insertion_point(field_get:SC_PrivateConfigChange.nstatues)
  return nstatues_;
}
inline void SC_PrivateConfigChange::set_nstatues(::google::protobuf::int32 value) {
  set_has_nstatues();
  nstatues_ = value;
  // @@protoc_insertion_point(field_set:SC_PrivateConfigChange.nstatues)
}

// optional int32 nreason = 8;
inline bool SC_PrivateConfigChange::has_nreason() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SC_PrivateConfigChange::set_has_nreason() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SC_PrivateConfigChange::clear_has_nreason() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SC_PrivateConfigChange::clear_nreason() {
  nreason_ = 0;
  clear_has_nreason();
}
inline ::google::protobuf::int32 SC_PrivateConfigChange::nreason() const {
  // @@protoc_insertion_point(field_get:SC_PrivateConfigChange.nreason)
  return nreason_;
}
inline void SC_PrivateConfigChange::set_nreason(::google::protobuf::int32 value) {
  set_has_nreason();
  nreason_ = value;
  // @@protoc_insertion_point(field_set:SC_PrivateConfigChange.nreason)
}

// optional int32 private_room_has_start = 9;
inline bool SC_PrivateConfigChange::has_private_room_has_start() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SC_PrivateConfigChange::set_has_private_room_has_start() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SC_PrivateConfigChange::clear_has_private_room_has_start() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SC_PrivateConfigChange::clear_private_room_has_start() {
  private_room_has_start_ = 0;
  clear_has_private_room_has_start();
}
inline ::google::protobuf::int32 SC_PrivateConfigChange::private_room_has_start() const {
  // @@protoc_insertion_point(field_get:SC_PrivateConfigChange.private_room_has_start)
  return private_room_has_start_;
}
inline void SC_PrivateConfigChange::set_private_room_has_start(::google::protobuf::int32 value) {
  set_has_private_room_has_start();
  private_room_has_start_ = value;
  // @@protoc_insertion_point(field_set:SC_PrivateConfigChange.private_room_has_start)
}

// -------------------------------------------------------------------

// CS_TabTiren

// optional int32 chair_id = 1;
inline bool CS_TabTiren::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_TabTiren::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_TabTiren::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_TabTiren::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 CS_TabTiren::chair_id() const {
  // @@protoc_insertion_point(field_get:CS_TabTiren.chair_id)
  return chair_id_;
}
inline void CS_TabTiren::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:CS_TabTiren.chair_id)
}

// -------------------------------------------------------------------

// CS_TabVote

// required bool bret = 1;
inline bool CS_TabVote::has_bret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_TabVote::set_has_bret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_TabVote::clear_has_bret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_TabVote::clear_bret() {
  bret_ = false;
  clear_has_bret();
}
inline bool CS_TabVote::bret() const {
  // @@protoc_insertion_point(field_get:CS_TabVote.bret)
  return bret_;
}
inline void CS_TabVote::set_bret(bool value) {
  set_has_bret();
  bret_ = value;
  // @@protoc_insertion_point(field_set:CS_TabVote.bret)
}

// -------------------------------------------------------------------

// SC_TabVoteInfo

// optional int32 chair_id = 1;
inline bool SC_TabVoteInfo::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_TabVoteInfo::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_TabVoteInfo::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_TabVoteInfo::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_TabVoteInfo::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_TabVoteInfo.chair_id)
  return chair_id_;
}
inline void SC_TabVoteInfo::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_TabVoteInfo.chair_id)
}

// required bool bret = 2;
inline bool SC_TabVoteInfo::has_bret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_TabVoteInfo::set_has_bret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_TabVoteInfo::clear_has_bret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_TabVoteInfo::clear_bret() {
  bret_ = false;
  clear_has_bret();
}
inline bool SC_TabVoteInfo::bret() const {
  // @@protoc_insertion_point(field_get:SC_TabVoteInfo.bret)
  return bret_;
}
inline void SC_TabVoteInfo::set_bret(bool value) {
  set_has_bret();
  bret_ = value;
  // @@protoc_insertion_point(field_set:SC_TabVoteInfo.bret)
}

// required int32 vote_chairid = 3;
inline bool SC_TabVoteInfo::has_vote_chairid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_TabVoteInfo::set_has_vote_chairid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_TabVoteInfo::clear_has_vote_chairid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_TabVoteInfo::clear_vote_chairid() {
  vote_chairid_ = 0;
  clear_has_vote_chairid();
}
inline ::google::protobuf::int32 SC_TabVoteInfo::vote_chairid() const {
  // @@protoc_insertion_point(field_get:SC_TabVoteInfo.vote_chairid)
  return vote_chairid_;
}
inline void SC_TabVoteInfo::set_vote_chairid(::google::protobuf::int32 value) {
  set_has_vote_chairid();
  vote_chairid_ = value;
  // @@protoc_insertion_point(field_set:SC_TabVoteInfo.vote_chairid)
}

// -------------------------------------------------------------------

// SC_TotalScoreInfo

// repeated int32 totoalscore = 1;
inline int SC_TotalScoreInfo::totoalscore_size() const {
  return totoalscore_.size();
}
inline void SC_TotalScoreInfo::clear_totoalscore() {
  totoalscore_.Clear();
}
inline ::google::protobuf::int32 SC_TotalScoreInfo::totoalscore(int index) const {
  // @@protoc_insertion_point(field_get:SC_TotalScoreInfo.totoalscore)
  return totoalscore_.Get(index);
}
inline void SC_TotalScoreInfo::set_totoalscore(int index, ::google::protobuf::int32 value) {
  totoalscore_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_TotalScoreInfo.totoalscore)
}
inline void SC_TotalScoreInfo::add_totoalscore(::google::protobuf::int32 value) {
  totoalscore_.Add(value);
  // @@protoc_insertion_point(field_add:SC_TotalScoreInfo.totoalscore)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_TotalScoreInfo::totoalscore() const {
  // @@protoc_insertion_point(field_list:SC_TotalScoreInfo.totoalscore)
  return totoalscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_TotalScoreInfo::mutable_totoalscore() {
  // @@protoc_insertion_point(field_mutable_list:SC_TotalScoreInfo.totoalscore)
  return &totoalscore_;
}

// -------------------------------------------------------------------

// CS_GetTabVoteArray

// -------------------------------------------------------------------

// SC_TabVoteArray

// repeated .SC_TabVoteInfo pb_sctableinfo = 1;
inline int SC_TabVoteArray::pb_sctableinfo_size() const {
  return pb_sctableinfo_.size();
}
inline void SC_TabVoteArray::clear_pb_sctableinfo() {
  pb_sctableinfo_.Clear();
}
inline const ::SC_TabVoteInfo& SC_TabVoteArray::pb_sctableinfo(int index) const {
  // @@protoc_insertion_point(field_get:SC_TabVoteArray.pb_sctableinfo)
  return pb_sctableinfo_.Get(index);
}
inline ::SC_TabVoteInfo* SC_TabVoteArray::mutable_pb_sctableinfo(int index) {
  // @@protoc_insertion_point(field_mutable:SC_TabVoteArray.pb_sctableinfo)
  return pb_sctableinfo_.Mutable(index);
}
inline ::SC_TabVoteInfo* SC_TabVoteArray::add_pb_sctableinfo() {
  // @@protoc_insertion_point(field_add:SC_TabVoteArray.pb_sctableinfo)
  return pb_sctableinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SC_TabVoteInfo >*
SC_TabVoteArray::mutable_pb_sctableinfo() {
  // @@protoc_insertion_point(field_mutable_list:SC_TabVoteArray.pb_sctableinfo)
  return &pb_sctableinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SC_TabVoteInfo >&
SC_TabVoteArray::pb_sctableinfo() const {
  // @@protoc_insertion_point(field_list:SC_TabVoteArray.pb_sctableinfo)
  return pb_sctableinfo_;
}

// optional int32 votechairid = 2;
inline bool SC_TabVoteArray::has_votechairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_TabVoteArray::set_has_votechairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_TabVoteArray::clear_has_votechairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_TabVoteArray::clear_votechairid() {
  votechairid_ = 0;
  clear_has_votechairid();
}
inline ::google::protobuf::int32 SC_TabVoteArray::votechairid() const {
  // @@protoc_insertion_point(field_get:SC_TabVoteArray.votechairid)
  return votechairid_;
}
inline void SC_TabVoteArray::set_votechairid(::google::protobuf::int32 value) {
  set_has_votechairid();
  votechairid_ = value;
  // @@protoc_insertion_point(field_set:SC_TabVoteArray.votechairid)
}

// -------------------------------------------------------------------

// SC_TickNotify

// optional int32 tickchairid = 1;
inline bool SC_TickNotify::has_tickchairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_TickNotify::set_has_tickchairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_TickNotify::clear_has_tickchairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_TickNotify::clear_tickchairid() {
  tickchairid_ = 0;
  clear_has_tickchairid();
}
inline ::google::protobuf::int32 SC_TickNotify::tickchairid() const {
  // @@protoc_insertion_point(field_get:SC_TickNotify.tickchairid)
  return tickchairid_;
}
inline void SC_TickNotify::set_tickchairid(::google::protobuf::int32 value) {
  set_has_tickchairid();
  tickchairid_ = value;
  // @@protoc_insertion_point(field_set:SC_TickNotify.tickchairid)
}

// -------------------------------------------------------------------

// SC_Dismiss

// optional int32 guid = 1;
inline bool SC_Dismiss::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_Dismiss::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_Dismiss::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_Dismiss::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SC_Dismiss::guid() const {
  // @@protoc_insertion_point(field_get:SC_Dismiss.guid)
  return guid_;
}
inline void SC_Dismiss::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SC_Dismiss.guid)
}

// optional int32 chair_id = 2;
inline bool SC_Dismiss::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_Dismiss::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_Dismiss::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_Dismiss::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_Dismiss::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_Dismiss.chair_id)
  return chair_id_;
}
inline void SC_Dismiss::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_Dismiss.chair_id)
}

// -------------------------------------------------------------------

// SC_RecconectReady

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::SC_LandStart_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandStart_MsgID>() {
  return ::SC_LandStart_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_LandCallScore_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_LandCallScore_MsgID>() {
  return ::CS_LandCallScore_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LandCallScore_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandCallScore_MsgID>() {
  return ::SC_LandCallScore_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LandCallFail_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandCallFail_MsgID>() {
  return ::SC_LandCallFail_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LandInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandInfo_MsgID>() {
  return ::SC_LandInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_LandOutCard_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_LandOutCard_MsgID>() {
  return ::CS_LandOutCard_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LandOutCard_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandOutCard_MsgID>() {
  return ::SC_LandOutCard_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_LandPassCard_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_LandPassCard_MsgID>() {
  return ::CS_LandPassCard_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LandPassCard_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandPassCard_MsgID>() {
  return ::SC_LandPassCard_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LandConclude_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandConclude_MsgID>() {
  return ::SC_LandConclude_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LandPlayerOffline_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandPlayerOffline_MsgID>() {
  return ::SC_LandPlayerOffline_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LandPlayerOnline_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandPlayerOnline_MsgID>() {
  return ::SC_LandPlayerOnline_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LandRecoveryPlayerCard_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandRecoveryPlayerCard_MsgID>() {
  return ::SC_LandRecoveryPlayerCard_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LandRecoveryPlayerCallScore_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandRecoveryPlayerCallScore_MsgID>() {
  return ::SC_LandRecoveryPlayerCallScore_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LandCallScorePlayerOffline_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandCallScorePlayerOffline_MsgID>() {
  return ::SC_LandCallScorePlayerOffline_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_LandTrusteeship_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_LandTrusteeship_MsgID>() {
  return ::CS_LandTrusteeship_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LandTrusteeship_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandTrusteeship_MsgID>() {
  return ::SC_LandTrusteeship_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_LandCallDouble_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_LandCallDouble_MsgID>() {
  return ::CS_LandCallDouble_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LandCallDouble_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandCallDouble_MsgID>() {
  return ::SC_LandCallDouble_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LandCallDoubleFinish_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandCallDoubleFinish_MsgID>() {
  return ::SC_LandCallDoubleFinish_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LandRecoveryPlayerDouble_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LandRecoveryPlayerDouble_MsgID>() {
  return ::SC_LandRecoveryPlayerDouble_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_GetPrivateConfig_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_GetPrivateConfig_MsgID>() {
  return ::CS_GetPrivateConfig_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_SetPrivateConfigChange_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_SetPrivateConfigChange_MsgID>() {
  return ::CS_SetPrivateConfigChange_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_PrivateConfigChange_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_PrivateConfigChange_MsgID>() {
  return ::SC_PrivateConfigChange_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_TabTiren_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_TabTiren_MsgID>() {
  return ::CS_TabTiren_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_TabVote_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_TabVote_MsgID>() {
  return ::CS_TabVote_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_TabVoteInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_TabVoteInfo_MsgID>() {
  return ::SC_TabVoteInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_TotalScoreInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_TotalScoreInfo_MsgID>() {
  return ::SC_TotalScoreInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_GetTabVoteArray_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_GetTabVoteArray_MsgID>() {
  return ::CS_GetTabVoteArray_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_TabVoteArray_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_TabVoteArray_MsgID>() {
  return ::SC_TabVoteArray_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_TickNotify_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_TickNotify_MsgID>() {
  return ::SC_TickNotify_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_Dismiss_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_Dismiss_MsgID>() {
  return ::SC_Dismiss_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_RecconectReady_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_RecconectReady_MsgID>() {
  return ::SC_RecconectReady_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LAND_CARD_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LAND_CARD_TYPE>() {
  return ::LAND_CARD_TYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_public_5fland_2eproto__INCLUDED
