// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: public_msg.proto

#ifndef PROTOBUF_public_5fmsg_2eproto__INCLUDED
#define PROTOBUF_public_5fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "public_player.pb.h"
// @@protoc_insertion_point(includes)
class AgentsTransferData;
class AgentsTransferDataDefaultTypeInternal;
extern AgentsTransferDataDefaultTypeInternal _AgentsTransferData_default_instance_;
class AndroidInfo;
class AndroidInfoDefaultTypeInternal;
extern AndroidInfoDefaultTypeInternal _AndroidInfo_default_instance_;
class BankCardInfo;
class BankCardInfoDefaultTypeInternal;
extern BankCardInfoDefaultTypeInternal _BankCardInfo_default_instance_;
class BankStatement;
class BankStatementDefaultTypeInternal;
extern BankStatementDefaultTypeInternal _BankStatement_default_instance_;
class CE_RequestRank;
class CE_RequestRankDefaultTypeInternal;
extern CE_RequestRankDefaultTypeInternal _CE_RequestRank_default_instance_;
class CG_GameServerCfg;
class CG_GameServerCfgDefaultTypeInternal;
extern CG_GameServerCfgDefaultTypeInternal _CG_GameServerCfg_default_instance_;
class CL_GetInviterInfo;
class CL_GetInviterInfoDefaultTypeInternal;
extern CL_GetInviterInfoDefaultTypeInternal _CL_GetInviterInfo_default_instance_;
class CL_Login;
class CL_LoginDefaultTypeInternal;
extern CL_LoginDefaultTypeInternal _CL_Login_default_instance_;
class CL_LoginAll;
class CL_LoginAllDefaultTypeInternal;
extern CL_LoginAllDefaultTypeInternal _CL_LoginAll_default_instance_;
class CL_LoginBySms;
class CL_LoginBySmsDefaultTypeInternal;
extern CL_LoginBySmsDefaultTypeInternal _CL_LoginBySms_default_instance_;
class CL_RegAccount;
class CL_RegAccountDefaultTypeInternal;
extern CL_RegAccountDefaultTypeInternal _CL_RegAccount_default_instance_;
class CS_Agent_CashMoney;
class CS_Agent_CashMoneyDefaultTypeInternal;
extern CS_Agent_CashMoneyDefaultTypeInternal _CS_Agent_CashMoney_default_instance_;
class CS_AutoEnterRoom;
class CS_AutoEnterRoomDefaultTypeInternal;
extern CS_AutoEnterRoomDefaultTypeInternal _CS_AutoEnterRoom_default_instance_;
class CS_AutoSitDown;
class CS_AutoSitDownDefaultTypeInternal;
extern CS_AutoSitDownDefaultTypeInternal _CS_AutoSitDown_default_instance_;
class CS_BandAlipay;
class CS_BandAlipayDefaultTypeInternal;
extern CS_BandAlipayDefaultTypeInternal _CS_BandAlipay_default_instance_;
class CS_BankChangePassword;
class CS_BankChangePasswordDefaultTypeInternal;
extern CS_BankChangePasswordDefaultTypeInternal _CS_BankChangePassword_default_instance_;
class CS_BankDeposit;
class CS_BankDepositDefaultTypeInternal;
extern CS_BankDepositDefaultTypeInternal _CS_BankDeposit_default_instance_;
class CS_BankDraw;
class CS_BankDrawDefaultTypeInternal;
extern CS_BankDrawDefaultTypeInternal _CS_BankDraw_default_instance_;
class CS_BankLogin;
class CS_BankLoginDefaultTypeInternal;
extern CS_BankLoginDefaultTypeInternal _CS_BankLogin_default_instance_;
class CS_BankSetPassword;
class CS_BankSetPasswordDefaultTypeInternal;
extern CS_BankSetPasswordDefaultTypeInternal _CS_BankSetPassword_default_instance_;
class CS_BankStatement;
class CS_BankStatementDefaultTypeInternal;
extern CS_BankStatementDefaultTypeInternal _CS_BankStatement_default_instance_;
class CS_BankTransfer;
class CS_BankTransferDefaultTypeInternal;
extern CS_BankTransferDefaultTypeInternal _CS_BankTransfer_default_instance_;
class CS_BankTransferByGuid;
class CS_BankTransferByGuidDefaultTypeInternal;
extern CS_BankTransferByGuidDefaultTypeInternal _CS_BankTransferByGuid_default_instance_;
class CS_BindBankCard;
class CS_BindBankCardDefaultTypeInternal;
extern CS_BindBankCardDefaultTypeInternal _CS_BindBankCard_default_instance_;
class CS_BuyItem;
class CS_BuyItemDefaultTypeInternal;
extern CS_BuyItemDefaultTypeInternal _CS_BuyItem_default_instance_;
class CS_CashMoney;
class CS_CashMoneyDefaultTypeInternal;
extern CS_CashMoneyDefaultTypeInternal _CS_CashMoney_default_instance_;
class CS_CashMoneyType;
class CS_CashMoneyTypeDefaultTypeInternal;
extern CS_CashMoneyTypeDefaultTypeInternal _CS_CashMoneyType_default_instance_;
class CS_ChangeChair;
class CS_ChangeChairDefaultTypeInternal;
extern CS_ChangeChairDefaultTypeInternal _CS_ChangeChair_default_instance_;
class CS_ChangeGame;
class CS_ChangeGameDefaultTypeInternal;
extern CS_ChangeGameDefaultTypeInternal _CS_ChangeGame_default_instance_;
class CS_ChangeHeaderIcon;
class CS_ChangeHeaderIconDefaultTypeInternal;
extern CS_ChangeHeaderIconDefaultTypeInternal _CS_ChangeHeaderIcon_default_instance_;
class CS_ChangeTable;
class CS_ChangeTableDefaultTypeInternal;
extern CS_ChangeTableDefaultTypeInternal _CS_ChangeTable_default_instance_;
class CS_ChatPrivate;
class CS_ChatPrivateDefaultTypeInternal;
extern CS_ChatPrivateDefaultTypeInternal _CS_ChatPrivate_default_instance_;
class CS_ChatRoom;
class CS_ChatRoomDefaultTypeInternal;
extern CS_ChatRoomDefaultTypeInternal _CS_ChatRoom_default_instance_;
class CS_ChatServer;
class CS_ChatServerDefaultTypeInternal;
extern CS_ChatServerDefaultTypeInternal _CS_ChatServer_default_instance_;
class CS_ChatTable;
class CS_ChatTableDefaultTypeInternal;
extern CS_ChatTableDefaultTypeInternal _CS_ChatTable_default_instance_;
class CS_ChatWorld;
class CS_ChatWorldDefaultTypeInternal;
extern CS_ChatWorldDefaultTypeInternal _CS_ChatWorld_default_instance_;
class CS_DelItem;
class CS_DelItemDefaultTypeInternal;
extern CS_DelItemDefaultTypeInternal _CS_DelItem_default_instance_;
class CS_DelMail;
class CS_DelMailDefaultTypeInternal;
extern CS_DelMailDefaultTypeInternal _CS_DelMail_default_instance_;
class CS_EnterRoom;
class CS_EnterRoomDefaultTypeInternal;
extern CS_EnterRoomDefaultTypeInternal _CS_EnterRoom_default_instance_;
class CS_EnterRoomAndSitDown;
class CS_EnterRoomAndSitDownDefaultTypeInternal;
extern CS_EnterRoomAndSitDownDefaultTypeInternal _CS_EnterRoomAndSitDown_default_instance_;
class CS_Exit;
class CS_ExitDefaultTypeInternal;
extern CS_ExitDefaultTypeInternal _CS_Exit_default_instance_;
class CS_ExitRoom;
class CS_ExitRoomDefaultTypeInternal;
extern CS_ExitRoomDefaultTypeInternal _CS_ExitRoom_default_instance_;
class CS_GetBankCardInfo;
class CS_GetBankCardInfoDefaultTypeInternal;
extern CS_GetBankCardInfoDefaultTypeInternal _CS_GetBankCardInfo_default_instance_;
class CS_GetHelpMoney;
class CS_GetHelpMoneyDefaultTypeInternal;
extern CS_GetHelpMoneyDefaultTypeInternal _CS_GetHelpMoney_default_instance_;
class CS_HEARTBEAT;
class CS_HEARTBEATDefaultTypeInternal;
extern CS_HEARTBEATDefaultTypeInternal _CS_HEARTBEAT_default_instance_;
class CS_JoinPrivateRoom;
class CS_JoinPrivateRoomDefaultTypeInternal;
extern CS_JoinPrivateRoomDefaultTypeInternal _CS_JoinPrivateRoom_default_instance_;
class CS_LoginValidatebox;
class CS_LoginValidateboxDefaultTypeInternal;
extern CS_LoginValidateboxDefaultTypeInternal _CS_LoginValidatebox_default_instance_;
class CS_NewGameMaintain;
class CS_NewGameMaintainDefaultTypeInternal;
extern CS_NewGameMaintainDefaultTypeInternal _CS_NewGameMaintain_default_instance_;
class CS_PlayerPromotion;
class CS_PlayerPromotionDefaultTypeInternal;
extern CS_PlayerPromotionDefaultTypeInternal _CS_PlayerPromotion_default_instance_;
class CS_PrivateRoomInfo;
class CS_PrivateRoomInfoDefaultTypeInternal;
extern CS_PrivateRoomInfoDefaultTypeInternal _CS_PrivateRoomInfo_default_instance_;
class CS_QueryPlayerMarquee;
class CS_QueryPlayerMarqueeDefaultTypeInternal;
extern CS_QueryPlayerMarqueeDefaultTypeInternal _CS_QueryPlayerMarquee_default_instance_;
class CS_QueryPlayerMsgData;
class CS_QueryPlayerMsgDataDefaultTypeInternal;
extern CS_QueryPlayerMsgDataDefaultTypeInternal _CS_QueryPlayerMsgData_default_instance_;
class CS_Ready;
class CS_ReadyDefaultTypeInternal;
extern CS_ReadyDefaultTypeInternal _CS_Ready_default_instance_;
class CS_ReceiveMailAttachment;
class CS_ReceiveMailAttachmentDefaultTypeInternal;
extern CS_ReceiveMailAttachmentDefaultTypeInternal _CS_ReceiveMailAttachment_default_instance_;
class CS_ReceiveReliefPayment;
class CS_ReceiveReliefPaymentDefaultTypeInternal;
extern CS_ReceiveReliefPaymentDefaultTypeInternal _CS_ReceiveReliefPayment_default_instance_;
class CS_ReceiveRewardLogin;
class CS_ReceiveRewardLoginDefaultTypeInternal;
extern CS_ReceiveRewardLoginDefaultTypeInternal _CS_ReceiveRewardLogin_default_instance_;
class CS_ReceiveRewardOnline;
class CS_ReceiveRewardOnlineDefaultTypeInternal;
extern CS_ReceiveRewardOnlineDefaultTypeInternal _CS_ReceiveRewardOnline_default_instance_;
class CS_ReconnectionPlay;
class CS_ReconnectionPlayDefaultTypeInternal;
extern CS_ReconnectionPlayDefaultTypeInternal _CS_ReconnectionPlay_default_instance_;
class CS_RequestCheckInAward;
class CS_RequestCheckInAwardDefaultTypeInternal;
extern CS_RequestCheckInAwardDefaultTypeInternal _CS_RequestCheckInAward_default_instance_;
class CS_RequestNewAward;
class CS_RequestNewAwardDefaultTypeInternal;
extern CS_RequestNewAwardDefaultTypeInternal _CS_RequestNewAward_default_instance_;
class CS_RequestPlayerInfo;
class CS_RequestPlayerInfoDefaultTypeInternal;
extern CS_RequestPlayerInfoDefaultTypeInternal _CS_RequestPlayerInfo_default_instance_;
class CS_RequestSms;
class CS_RequestSmsDefaultTypeInternal;
extern CS_RequestSmsDefaultTypeInternal _CS_RequestSms_default_instance_;
class CS_ResetAccount;
class CS_ResetAccountDefaultTypeInternal;
extern CS_ResetAccountDefaultTypeInternal _CS_ResetAccount_default_instance_;
class CS_SendMail;
class CS_SendMailDefaultTypeInternal;
extern CS_SendMailDefaultTypeInternal _CS_SendMail_default_instance_;
class CS_SetMsgReadFlag;
class CS_SetMsgReadFlagDefaultTypeInternal;
extern CS_SetMsgReadFlagDefaultTypeInternal _CS_SetMsgReadFlag_default_instance_;
class CS_SetNickname;
class CS_SetNicknameDefaultTypeInternal;
extern CS_SetNicknameDefaultTypeInternal _CS_SetNickname_default_instance_;
class CS_SetPassword;
class CS_SetPasswordDefaultTypeInternal;
extern CS_SetPasswordDefaultTypeInternal _CS_SetPassword_default_instance_;
class CS_SetPasswordBySms;
class CS_SetPasswordBySmsDefaultTypeInternal;
extern CS_SetPasswordBySmsDefaultTypeInternal _CS_SetPasswordBySms_default_instance_;
class CS_SitDown;
class CS_SitDownDefaultTypeInternal;
extern CS_SitDownDefaultTypeInternal _CS_SitDown_default_instance_;
class CS_StandUp;
class CS_StandUpDefaultTypeInternal;
extern CS_StandUpDefaultTypeInternal _CS_StandUp_default_instance_;
class CS_StandUpAndExitRoom;
class CS_StandUpAndExitRoomDefaultTypeInternal;
extern CS_StandUpAndExitRoomDefaultTypeInternal _CS_StandUpAndExitRoom_default_instance_;
class CS_Trusteeship;
class CS_TrusteeshipDefaultTypeInternal;
extern CS_TrusteeshipDefaultTypeInternal _CS_Trusteeship_default_instance_;
class CS_UseItem;
class CS_UseItemDefaultTypeInternal;
extern CS_UseItemDefaultTypeInternal _CS_UseItem_default_instance_;
class C_PublicKey;
class C_PublicKeyDefaultTypeInternal;
extern C_PublicKeyDefaultTypeInternal _C_PublicKey_default_instance_;
class C_RequestPublicKey;
class C_RequestPublicKeyDefaultTypeInternal;
extern C_RequestPublicKeyDefaultTypeInternal _C_RequestPublicKey_default_instance_;
class CashFalse;
class CashFalseDefaultTypeInternal;
extern CashFalseDefaultTypeInternal _CashFalse_default_instance_;
class CashMoneyType;
class CashMoneyTypeDefaultTypeInternal;
extern CashMoneyTypeDefaultTypeInternal _CashMoneyType_default_instance_;
class EC_ReplyRank;
class EC_ReplyRankDefaultTypeInternal;
extern EC_ReplyRankDefaultTypeInternal _EC_ReplyRank_default_instance_;
class GC_GameServerCfg;
class GC_GameServerCfgDefaultTypeInternal;
extern GC_GameServerCfgDefaultTypeInternal _GC_GameServerCfg_default_instance_;
class GameClientRoomListCfg;
class GameClientRoomListCfgDefaultTypeInternal;
extern GameClientRoomListCfgDefaultTypeInternal _GameClientRoomListCfg_default_instance_;
class GameMsg;
class GameMsgDefaultTypeInternal;
extern GameMsgDefaultTypeInternal _GameMsg_default_instance_;
class InviterInfo;
class InviterInfoDefaultTypeInternal;
extern InviterInfoDefaultTypeInternal _InviterInfo_default_instance_;
class ItemBagInfo;
class ItemBagInfoDefaultTypeInternal;
extern ItemBagInfoDefaultTypeInternal _ItemBagInfo_default_instance_;
class ItemInfo;
class ItemInfoDefaultTypeInternal;
extern ItemInfoDefaultTypeInternal _ItemInfo_default_instance_;
class LC_GetInviterInfo;
class LC_GetInviterInfoDefaultTypeInternal;
extern LC_GetInviterInfoDefaultTypeInternal _LC_GetInviterInfo_default_instance_;
class LC_Login;
class LC_LoginDefaultTypeInternal;
extern LC_LoginDefaultTypeInternal _LC_Login_default_instance_;
class LoginValidatebox;
class LoginValidateboxDefaultTypeInternal;
extern LoginValidateboxDefaultTypeInternal _LoginValidatebox_default_instance_;
class MailInfo;
class MailInfoDefaultTypeInternal;
extern MailInfoDefaultTypeInternal _MailInfo_default_instance_;
class MailListInfo;
class MailListInfoDefaultTypeInternal;
extern MailListInfoDefaultTypeInternal _MailListInfo_default_instance_;
class Marquee;
class MarqueeDefaultTypeInternal;
extern MarqueeDefaultTypeInternal _Marquee_default_instance_;
class Msg_DataInfo;
class Msg_DataInfoDefaultTypeInternal;
extern Msg_DataInfoDefaultTypeInternal _Msg_DataInfo_default_instance_;
class PlayerBaseInfo;
class PlayerBaseInfoDefaultTypeInternal;
extern PlayerBaseInfoDefaultTypeInternal _PlayerBaseInfo_default_instance_;
class PlayerInfoInMemery;
class PlayerInfoInMemeryDefaultTypeInternal;
extern PlayerInfoInMemeryDefaultTypeInternal _PlayerInfoInMemery_default_instance_;
class PlayerMoney;
class PlayerMoneyDefaultTypeInternal;
extern PlayerMoneyDefaultTypeInternal _PlayerMoney_default_instance_;
class PlayerVisualInfo;
class PlayerVisualInfoDefaultTypeInternal;
extern PlayerVisualInfoDefaultTypeInternal _PlayerVisualInfo_default_instance_;
class PrivateRoomInfo;
class PrivateRoomInfoDefaultTypeInternal;
extern PrivateRoomInfoDefaultTypeInternal _PrivateRoomInfo_default_instance_;
class RankItem;
class RankItemDefaultTypeInternal;
extern RankItemDefaultTypeInternal _RankItem_default_instance_;
class RankList;
class RankListDefaultTypeInternal;
extern RankListDefaultTypeInternal _RankList_default_instance_;
class Recharge;
class RechargeDefaultTypeInternal;
extern RechargeDefaultTypeInternal _Recharge_default_instance_;
class SC_Agent_CashMoneyResult;
class SC_Agent_CashMoneyResultDefaultTypeInternal;
extern SC_Agent_CashMoneyResultDefaultTypeInternal _SC_Agent_CashMoneyResult_default_instance_;
class SC_AlipayEdit;
class SC_AlipayEditDefaultTypeInternal;
extern SC_AlipayEditDefaultTypeInternal _SC_AlipayEdit_default_instance_;
class SC_BandAlipay;
class SC_BandAlipayDefaultTypeInternal;
extern SC_BandAlipayDefaultTypeInternal _SC_BandAlipay_default_instance_;
class SC_BankChangePassword;
class SC_BankChangePasswordDefaultTypeInternal;
extern SC_BankChangePasswordDefaultTypeInternal _SC_BankChangePassword_default_instance_;
class SC_BankDeposit;
class SC_BankDepositDefaultTypeInternal;
extern SC_BankDepositDefaultTypeInternal _SC_BankDeposit_default_instance_;
class SC_BankDraw;
class SC_BankDrawDefaultTypeInternal;
extern SC_BankDrawDefaultTypeInternal _SC_BankDraw_default_instance_;
class SC_BankLogin;
class SC_BankLoginDefaultTypeInternal;
extern SC_BankLoginDefaultTypeInternal _SC_BankLogin_default_instance_;
class SC_BankSetPassword;
class SC_BankSetPasswordDefaultTypeInternal;
extern SC_BankSetPasswordDefaultTypeInternal _SC_BankSetPassword_default_instance_;
class SC_BankStatement;
class SC_BankStatementDefaultTypeInternal;
extern SC_BankStatementDefaultTypeInternal _SC_BankStatement_default_instance_;
class SC_BankTransfer;
class SC_BankTransferDefaultTypeInternal;
extern SC_BankTransferDefaultTypeInternal _SC_BankTransfer_default_instance_;
class SC_BindBankCard;
class SC_BindBankCardDefaultTypeInternal;
extern SC_BindBankCardDefaultTypeInternal _SC_BindBankCard_default_instance_;
class SC_BrocastClientUpdateInfo;
class SC_BrocastClientUpdateInfoDefaultTypeInternal;
extern SC_BrocastClientUpdateInfoDefaultTypeInternal _SC_BrocastClientUpdateInfo_default_instance_;
class SC_BuyItem;
class SC_BuyItemDefaultTypeInternal;
extern SC_BuyItemDefaultTypeInternal _SC_BuyItem_default_instance_;
class SC_CashMaintain;
class SC_CashMaintainDefaultTypeInternal;
extern SC_CashMaintainDefaultTypeInternal _SC_CashMaintain_default_instance_;
class SC_CashMoneyResult;
class SC_CashMoneyResultDefaultTypeInternal;
extern SC_CashMoneyResultDefaultTypeInternal _SC_CashMoneyResult_default_instance_;
class SC_CashMoneyType;
class SC_CashMoneyTypeDefaultTypeInternal;
extern SC_CashMoneyTypeDefaultTypeInternal _SC_CashMoneyType_default_instance_;
class SC_ChangeChair;
class SC_ChangeChairDefaultTypeInternal;
extern SC_ChangeChairDefaultTypeInternal _SC_ChangeChair_default_instance_;
class SC_ChangeHeaderIcon;
class SC_ChangeHeaderIconDefaultTypeInternal;
extern SC_ChangeHeaderIconDefaultTypeInternal _SC_ChangeHeaderIcon_default_instance_;
class SC_ChangeTable;
class SC_ChangeTableDefaultTypeInternal;
extern SC_ChangeTableDefaultTypeInternal _SC_ChangeTable_default_instance_;
class SC_ChatPrivate;
class SC_ChatPrivateDefaultTypeInternal;
extern SC_ChatPrivateDefaultTypeInternal _SC_ChatPrivate_default_instance_;
class SC_ChatRoom;
class SC_ChatRoomDefaultTypeInternal;
extern SC_ChatRoomDefaultTypeInternal _SC_ChatRoom_default_instance_;
class SC_ChatServer;
class SC_ChatServerDefaultTypeInternal;
extern SC_ChatServerDefaultTypeInternal _SC_ChatServer_default_instance_;
class SC_ChatTable;
class SC_ChatTableDefaultTypeInternal;
extern SC_ChatTableDefaultTypeInternal _SC_ChatTable_default_instance_;
class SC_ChatWorld;
class SC_ChatWorldDefaultTypeInternal;
extern SC_ChatWorldDefaultTypeInternal _SC_ChatWorld_default_instance_;
class SC_DelItem;
class SC_DelItemDefaultTypeInternal;
extern SC_DelItemDefaultTypeInternal _SC_DelItem_default_instance_;
class SC_DelMail;
class SC_DelMailDefaultTypeInternal;
extern SC_DelMailDefaultTypeInternal _SC_DelMail_default_instance_;
class SC_DeletMsg;
class SC_DeletMsgDefaultTypeInternal;
extern SC_DeletMsgDefaultTypeInternal _SC_DeletMsg_default_instance_;
class SC_EnterRoom;
class SC_EnterRoomDefaultTypeInternal;
extern SC_EnterRoomDefaultTypeInternal _SC_EnterRoom_default_instance_;
class SC_EnterRoomAndSitDown;
class SC_EnterRoomAndSitDownDefaultTypeInternal;
extern SC_EnterRoomAndSitDownDefaultTypeInternal _SC_EnterRoomAndSitDown_default_instance_;
class SC_ExitRoom;
class SC_ExitRoomDefaultTypeInternal;
extern SC_ExitRoomDefaultTypeInternal _SC_ExitRoom_default_instance_;
class SC_FeedBackUpDate;
class SC_FeedBackUpDateDefaultTypeInternal;
extern SC_FeedBackUpDateDefaultTypeInternal _SC_FeedBackUpDate_default_instance_;
class SC_FreezeAccount;
class SC_FreezeAccountDefaultTypeInternal;
extern SC_FreezeAccountDefaultTypeInternal _SC_FreezeAccount_default_instance_;
class SC_GameMaintain;
class SC_GameMaintainDefaultTypeInternal;
extern SC_GameMaintainDefaultTypeInternal _SC_GameMaintain_default_instance_;
class SC_Gamefinish;
class SC_GamefinishDefaultTypeInternal;
extern SC_GamefinishDefaultTypeInternal _SC_Gamefinish_default_instance_;
class SC_GetBankCardInfo;
class SC_GetBankCardInfoDefaultTypeInternal;
extern SC_GetBankCardInfoDefaultTypeInternal _SC_GetBankCardInfo_default_instance_;
class SC_GetHelpMoney;
class SC_GetHelpMoneyDefaultTypeInternal;
extern SC_GetHelpMoneyDefaultTypeInternal _SC_GetHelpMoney_default_instance_;
class SC_HEARTBEAT;
class SC_HEARTBEATDefaultTypeInternal;
extern SC_HEARTBEATDefaultTypeInternal _SC_HEARTBEAT_default_instance_;
class SC_JoinPrivateRoomFailed;
class SC_JoinPrivateRoomFailedDefaultTypeInternal;
extern SC_JoinPrivateRoomFailedDefaultTypeInternal _SC_JoinPrivateRoomFailed_default_instance_;
class SC_KickClient;
class SC_KickClientDefaultTypeInternal;
extern SC_KickClientDefaultTypeInternal _SC_KickClient_default_instance_;
class SC_LoginValidatebox;
class SC_LoginValidateboxDefaultTypeInternal;
extern SC_LoginValidateboxDefaultTypeInternal _SC_LoginValidatebox_default_instance_;
class SC_Marquee;
class SC_MarqueeDefaultTypeInternal;
extern SC_MarqueeDefaultTypeInternal _SC_Marquee_default_instance_;
class SC_NewGameMaintain;
class SC_NewGameMaintainDefaultTypeInternal;
extern SC_NewGameMaintainDefaultTypeInternal _SC_NewGameMaintain_default_instance_;
class SC_NewMarquee;
class SC_NewMarqueeDefaultTypeInternal;
extern SC_NewMarqueeDefaultTypeInternal _SC_NewMarquee_default_instance_;
class SC_NewMsgData;
class SC_NewMsgDataDefaultTypeInternal;
extern SC_NewMsgDataDefaultTypeInternal _SC_NewMsgData_default_instance_;
class SC_NotifyBank;
class SC_NotifyBankDefaultTypeInternal;
extern SC_NotifyBankDefaultTypeInternal _SC_NotifyBank_default_instance_;
class SC_NotifyBankStatement;
class SC_NotifyBankStatementDefaultTypeInternal;
extern SC_NotifyBankStatementDefaultTypeInternal _SC_NotifyBankStatement_default_instance_;
class SC_NotifyEnterRoom;
class SC_NotifyEnterRoomDefaultTypeInternal;
extern SC_NotifyEnterRoomDefaultTypeInternal _SC_NotifyEnterRoom_default_instance_;
class SC_NotifyExitRoom;
class SC_NotifyExitRoomDefaultTypeInternal;
extern SC_NotifyExitRoomDefaultTypeInternal _SC_NotifyExitRoom_default_instance_;
class SC_NotifyMoney;
class SC_NotifyMoneyDefaultTypeInternal;
extern SC_NotifyMoneyDefaultTypeInternal _SC_NotifyMoney_default_instance_;
class SC_NotifySitDown;
class SC_NotifySitDownDefaultTypeInternal;
extern SC_NotifySitDownDefaultTypeInternal _SC_NotifySitDown_default_instance_;
class SC_NotifyStandUp;
class SC_NotifyStandUpDefaultTypeInternal;
extern SC_NotifyStandUpDefaultTypeInternal _SC_NotifyStandUp_default_instance_;
class SC_PlayerPromotion;
class SC_PlayerPromotionDefaultTypeInternal;
extern SC_PlayerPromotionDefaultTypeInternal _SC_PlayerPromotion_default_instance_;
class SC_PlayerReconnection;
class SC_PlayerReconnectionDefaultTypeInternal;
extern SC_PlayerReconnectionDefaultTypeInternal _SC_PlayerReconnection_default_instance_;
class SC_PrivateRoomInfo;
class SC_PrivateRoomInfoDefaultTypeInternal;
extern SC_PrivateRoomInfoDefaultTypeInternal _SC_PrivateRoomInfo_default_instance_;
class SC_QueryPlayerMarquee;
class SC_QueryPlayerMarqueeDefaultTypeInternal;
extern SC_QueryPlayerMarqueeDefaultTypeInternal _SC_QueryPlayerMarquee_default_instance_;
class SC_QueryPlayerMsgData;
class SC_QueryPlayerMsgDataDefaultTypeInternal;
extern SC_QueryPlayerMsgDataDefaultTypeInternal _SC_QueryPlayerMsgData_default_instance_;
class SC_Ready;
class SC_ReadyDefaultTypeInternal;
extern SC_ReadyDefaultTypeInternal _SC_Ready_default_instance_;
class SC_ReadyFailed;
class SC_ReadyFailedDefaultTypeInternal;
extern SC_ReadyFailedDefaultTypeInternal _SC_ReadyFailed_default_instance_;
class SC_ReceiveMailAttachment;
class SC_ReceiveMailAttachmentDefaultTypeInternal;
extern SC_ReceiveMailAttachmentDefaultTypeInternal _SC_ReceiveMailAttachment_default_instance_;
class SC_ReceiveReliefPayment;
class SC_ReceiveReliefPaymentDefaultTypeInternal;
extern SC_ReceiveReliefPaymentDefaultTypeInternal _SC_ReceiveReliefPayment_default_instance_;
class SC_ReceiveRewardLogin;
class SC_ReceiveRewardLoginDefaultTypeInternal;
extern SC_ReceiveRewardLoginDefaultTypeInternal _SC_ReceiveRewardLogin_default_instance_;
class SC_ReceiveRewardOnline;
class SC_ReceiveRewardOnlineDefaultTypeInternal;
extern SC_ReceiveRewardOnlineDefaultTypeInternal _SC_ReceiveRewardOnline_default_instance_;
class SC_ReconnectionPlay;
class SC_ReconnectionPlayDefaultTypeInternal;
extern SC_ReconnectionPlayDefaultTypeInternal _SC_ReconnectionPlay_default_instance_;
class SC_RecviceMail;
class SC_RecviceMailDefaultTypeInternal;
extern SC_RecviceMailDefaultTypeInternal _SC_RecviceMail_default_instance_;
class SC_ReplyPlayerInfo;
class SC_ReplyPlayerInfoDefaultTypeInternal;
extern SC_ReplyPlayerInfoDefaultTypeInternal _SC_ReplyPlayerInfo_default_instance_;
class SC_ReplyPlayerInfoComplete;
class SC_ReplyPlayerInfoCompleteDefaultTypeInternal;
extern SC_ReplyPlayerInfoCompleteDefaultTypeInternal _SC_ReplyPlayerInfoComplete_default_instance_;
class SC_RequestCheckInAward;
class SC_RequestCheckInAwardDefaultTypeInternal;
extern SC_RequestCheckInAwardDefaultTypeInternal _SC_RequestCheckInAward_default_instance_;
class SC_RequestNewAward;
class SC_RequestNewAwardDefaultTypeInternal;
extern SC_RequestNewAwardDefaultTypeInternal _SC_RequestNewAward_default_instance_;
class SC_RequestSms;
class SC_RequestSmsDefaultTypeInternal;
extern SC_RequestSmsDefaultTypeInternal _SC_RequestSms_default_instance_;
class SC_ResetAccount;
class SC_ResetAccountDefaultTypeInternal;
extern SC_ResetAccountDefaultTypeInternal _SC_ResetAccount_default_instance_;
class SC_SendMail;
class SC_SendMailDefaultTypeInternal;
extern SC_SendMailDefaultTypeInternal _SC_SendMail_default_instance_;
class SC_SetNickname;
class SC_SetNicknameDefaultTypeInternal;
extern SC_SetNicknameDefaultTypeInternal _SC_SetNickname_default_instance_;
class SC_SetPassword;
class SC_SetPasswordDefaultTypeInternal;
extern SC_SetPasswordDefaultTypeInternal _SC_SetPassword_default_instance_;
class SC_ShowTax;
class SC_ShowTaxDefaultTypeInternal;
extern SC_ShowTaxDefaultTypeInternal _SC_ShowTax_default_instance_;
class SC_SimpleRespons;
class SC_SimpleResponsDefaultTypeInternal;
extern SC_SimpleResponsDefaultTypeInternal _SC_SimpleRespons_default_instance_;
class SC_SitDown;
class SC_SitDownDefaultTypeInternal;
extern SC_SitDownDefaultTypeInternal _SC_SitDown_default_instance_;
class SC_StandUp;
class SC_StandUpDefaultTypeInternal;
extern SC_StandUpDefaultTypeInternal _SC_StandUp_default_instance_;
class SC_StandUpAndExitRoom;
class SC_StandUpAndExitRoomDefaultTypeInternal;
extern SC_StandUpAndExitRoomDefaultTypeInternal _SC_StandUpAndExitRoom_default_instance_;
class SC_UseItem;
class SC_UseItemDefaultTypeInternal;
extern SC_UseItemDefaultTypeInternal _SC_UseItem_default_instance_;
class SD_Delonline_player;
class SD_Delonline_playerDefaultTypeInternal;
extern SD_Delonline_playerDefaultTypeInternal _SD_Delonline_player_default_instance_;

namespace protobuf_public_5fmsg_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_public_5fmsg_2eproto

enum C_RequestPublicKey_MsgID {
  C_RequestPublicKey_MsgID_ID = 999
};
bool C_RequestPublicKey_MsgID_IsValid(int value);
const C_RequestPublicKey_MsgID C_RequestPublicKey_MsgID_MsgID_MIN = C_RequestPublicKey_MsgID_ID;
const C_RequestPublicKey_MsgID C_RequestPublicKey_MsgID_MsgID_MAX = C_RequestPublicKey_MsgID_ID;
const int C_RequestPublicKey_MsgID_MsgID_ARRAYSIZE = C_RequestPublicKey_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* C_RequestPublicKey_MsgID_descriptor();
inline const ::std::string& C_RequestPublicKey_MsgID_Name(C_RequestPublicKey_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    C_RequestPublicKey_MsgID_descriptor(), value);
}
inline bool C_RequestPublicKey_MsgID_Parse(
    const ::std::string& name, C_RequestPublicKey_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<C_RequestPublicKey_MsgID>(
    C_RequestPublicKey_MsgID_descriptor(), name, value);
}
enum C_PublicKey_MsgID {
  C_PublicKey_MsgID_ID = 1000
};
bool C_PublicKey_MsgID_IsValid(int value);
const C_PublicKey_MsgID C_PublicKey_MsgID_MsgID_MIN = C_PublicKey_MsgID_ID;
const C_PublicKey_MsgID C_PublicKey_MsgID_MsgID_MAX = C_PublicKey_MsgID_ID;
const int C_PublicKey_MsgID_MsgID_ARRAYSIZE = C_PublicKey_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* C_PublicKey_MsgID_descriptor();
inline const ::std::string& C_PublicKey_MsgID_Name(C_PublicKey_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    C_PublicKey_MsgID_descriptor(), value);
}
inline bool C_PublicKey_MsgID_Parse(
    const ::std::string& name, C_PublicKey_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<C_PublicKey_MsgID>(
    C_PublicKey_MsgID_descriptor(), name, value);
}
enum CL_RegAccount_MsgID {
  CL_RegAccount_MsgID_ID = 1001
};
bool CL_RegAccount_MsgID_IsValid(int value);
const CL_RegAccount_MsgID CL_RegAccount_MsgID_MsgID_MIN = CL_RegAccount_MsgID_ID;
const CL_RegAccount_MsgID CL_RegAccount_MsgID_MsgID_MAX = CL_RegAccount_MsgID_ID;
const int CL_RegAccount_MsgID_MsgID_ARRAYSIZE = CL_RegAccount_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CL_RegAccount_MsgID_descriptor();
inline const ::std::string& CL_RegAccount_MsgID_Name(CL_RegAccount_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CL_RegAccount_MsgID_descriptor(), value);
}
inline bool CL_RegAccount_MsgID_Parse(
    const ::std::string& name, CL_RegAccount_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CL_RegAccount_MsgID>(
    CL_RegAccount_MsgID_descriptor(), name, value);
}
enum CL_Login_MsgID {
  CL_Login_MsgID_ID = 1003
};
bool CL_Login_MsgID_IsValid(int value);
const CL_Login_MsgID CL_Login_MsgID_MsgID_MIN = CL_Login_MsgID_ID;
const CL_Login_MsgID CL_Login_MsgID_MsgID_MAX = CL_Login_MsgID_ID;
const int CL_Login_MsgID_MsgID_ARRAYSIZE = CL_Login_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CL_Login_MsgID_descriptor();
inline const ::std::string& CL_Login_MsgID_Name(CL_Login_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CL_Login_MsgID_descriptor(), value);
}
inline bool CL_Login_MsgID_Parse(
    const ::std::string& name, CL_Login_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CL_Login_MsgID>(
    CL_Login_MsgID_descriptor(), name, value);
}
enum LC_Login_MsgID {
  LC_Login_MsgID_ID = 1004
};
bool LC_Login_MsgID_IsValid(int value);
const LC_Login_MsgID LC_Login_MsgID_MsgID_MIN = LC_Login_MsgID_ID;
const LC_Login_MsgID LC_Login_MsgID_MsgID_MAX = LC_Login_MsgID_ID;
const int LC_Login_MsgID_MsgID_ARRAYSIZE = LC_Login_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LC_Login_MsgID_descriptor();
inline const ::std::string& LC_Login_MsgID_Name(LC_Login_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LC_Login_MsgID_descriptor(), value);
}
inline bool LC_Login_MsgID_Parse(
    const ::std::string& name, LC_Login_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LC_Login_MsgID>(
    LC_Login_MsgID_descriptor(), name, value);
}
enum CL_LoginBySms_MsgID {
  CL_LoginBySms_MsgID_ID = 1005
};
bool CL_LoginBySms_MsgID_IsValid(int value);
const CL_LoginBySms_MsgID CL_LoginBySms_MsgID_MsgID_MIN = CL_LoginBySms_MsgID_ID;
const CL_LoginBySms_MsgID CL_LoginBySms_MsgID_MsgID_MAX = CL_LoginBySms_MsgID_ID;
const int CL_LoginBySms_MsgID_MsgID_ARRAYSIZE = CL_LoginBySms_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CL_LoginBySms_MsgID_descriptor();
inline const ::std::string& CL_LoginBySms_MsgID_Name(CL_LoginBySms_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CL_LoginBySms_MsgID_descriptor(), value);
}
inline bool CL_LoginBySms_MsgID_Parse(
    const ::std::string& name, CL_LoginBySms_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CL_LoginBySms_MsgID>(
    CL_LoginBySms_MsgID_descriptor(), name, value);
}
enum SC_KickClient_MsgID {
  SC_KickClient_MsgID_ID = 1006
};
bool SC_KickClient_MsgID_IsValid(int value);
const SC_KickClient_MsgID SC_KickClient_MsgID_MsgID_MIN = SC_KickClient_MsgID_ID;
const SC_KickClient_MsgID SC_KickClient_MsgID_MsgID_MAX = SC_KickClient_MsgID_ID;
const int SC_KickClient_MsgID_MsgID_ARRAYSIZE = SC_KickClient_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_KickClient_MsgID_descriptor();
inline const ::std::string& SC_KickClient_MsgID_Name(SC_KickClient_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_KickClient_MsgID_descriptor(), value);
}
inline bool SC_KickClient_MsgID_Parse(
    const ::std::string& name, SC_KickClient_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_KickClient_MsgID>(
    SC_KickClient_MsgID_descriptor(), name, value);
}
enum CS_RequestSms_MsgID {
  CS_RequestSms_MsgID_ID = 1010
};
bool CS_RequestSms_MsgID_IsValid(int value);
const CS_RequestSms_MsgID CS_RequestSms_MsgID_MsgID_MIN = CS_RequestSms_MsgID_ID;
const CS_RequestSms_MsgID CS_RequestSms_MsgID_MsgID_MAX = CS_RequestSms_MsgID_ID;
const int CS_RequestSms_MsgID_MsgID_ARRAYSIZE = CS_RequestSms_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_RequestSms_MsgID_descriptor();
inline const ::std::string& CS_RequestSms_MsgID_Name(CS_RequestSms_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_RequestSms_MsgID_descriptor(), value);
}
inline bool CS_RequestSms_MsgID_Parse(
    const ::std::string& name, CS_RequestSms_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_RequestSms_MsgID>(
    CS_RequestSms_MsgID_descriptor(), name, value);
}
enum SC_RequestSms_MsgID {
  SC_RequestSms_MsgID_ID = 1011
};
bool SC_RequestSms_MsgID_IsValid(int value);
const SC_RequestSms_MsgID SC_RequestSms_MsgID_MsgID_MIN = SC_RequestSms_MsgID_ID;
const SC_RequestSms_MsgID SC_RequestSms_MsgID_MsgID_MAX = SC_RequestSms_MsgID_ID;
const int SC_RequestSms_MsgID_MsgID_ARRAYSIZE = SC_RequestSms_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_RequestSms_MsgID_descriptor();
inline const ::std::string& SC_RequestSms_MsgID_Name(SC_RequestSms_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_RequestSms_MsgID_descriptor(), value);
}
inline bool SC_RequestSms_MsgID_Parse(
    const ::std::string& name, SC_RequestSms_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_RequestSms_MsgID>(
    SC_RequestSms_MsgID_descriptor(), name, value);
}
enum CS_ResetAccount_MsgID {
  CS_ResetAccount_MsgID_ID = 1012
};
bool CS_ResetAccount_MsgID_IsValid(int value);
const CS_ResetAccount_MsgID CS_ResetAccount_MsgID_MsgID_MIN = CS_ResetAccount_MsgID_ID;
const CS_ResetAccount_MsgID CS_ResetAccount_MsgID_MsgID_MAX = CS_ResetAccount_MsgID_ID;
const int CS_ResetAccount_MsgID_MsgID_ARRAYSIZE = CS_ResetAccount_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ResetAccount_MsgID_descriptor();
inline const ::std::string& CS_ResetAccount_MsgID_Name(CS_ResetAccount_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ResetAccount_MsgID_descriptor(), value);
}
inline bool CS_ResetAccount_MsgID_Parse(
    const ::std::string& name, CS_ResetAccount_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ResetAccount_MsgID>(
    CS_ResetAccount_MsgID_descriptor(), name, value);
}
enum SC_ResetAccount_MsgID {
  SC_ResetAccount_MsgID_ID = 1013
};
bool SC_ResetAccount_MsgID_IsValid(int value);
const SC_ResetAccount_MsgID SC_ResetAccount_MsgID_MsgID_MIN = SC_ResetAccount_MsgID_ID;
const SC_ResetAccount_MsgID SC_ResetAccount_MsgID_MsgID_MAX = SC_ResetAccount_MsgID_ID;
const int SC_ResetAccount_MsgID_MsgID_ARRAYSIZE = SC_ResetAccount_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ResetAccount_MsgID_descriptor();
inline const ::std::string& SC_ResetAccount_MsgID_Name(SC_ResetAccount_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ResetAccount_MsgID_descriptor(), value);
}
inline bool SC_ResetAccount_MsgID_Parse(
    const ::std::string& name, SC_ResetAccount_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ResetAccount_MsgID>(
    SC_ResetAccount_MsgID_descriptor(), name, value);
}
enum CS_SetPassword_MsgID {
  CS_SetPassword_MsgID_ID = 1014
};
bool CS_SetPassword_MsgID_IsValid(int value);
const CS_SetPassword_MsgID CS_SetPassword_MsgID_MsgID_MIN = CS_SetPassword_MsgID_ID;
const CS_SetPassword_MsgID CS_SetPassword_MsgID_MsgID_MAX = CS_SetPassword_MsgID_ID;
const int CS_SetPassword_MsgID_MsgID_ARRAYSIZE = CS_SetPassword_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_SetPassword_MsgID_descriptor();
inline const ::std::string& CS_SetPassword_MsgID_Name(CS_SetPassword_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_SetPassword_MsgID_descriptor(), value);
}
inline bool CS_SetPassword_MsgID_Parse(
    const ::std::string& name, CS_SetPassword_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_SetPassword_MsgID>(
    CS_SetPassword_MsgID_descriptor(), name, value);
}
enum SC_SetPassword_MsgID {
  SC_SetPassword_MsgID_ID = 1015
};
bool SC_SetPassword_MsgID_IsValid(int value);
const SC_SetPassword_MsgID SC_SetPassword_MsgID_MsgID_MIN = SC_SetPassword_MsgID_ID;
const SC_SetPassword_MsgID SC_SetPassword_MsgID_MsgID_MAX = SC_SetPassword_MsgID_ID;
const int SC_SetPassword_MsgID_MsgID_ARRAYSIZE = SC_SetPassword_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_SetPassword_MsgID_descriptor();
inline const ::std::string& SC_SetPassword_MsgID_Name(SC_SetPassword_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_SetPassword_MsgID_descriptor(), value);
}
inline bool SC_SetPassword_MsgID_Parse(
    const ::std::string& name, SC_SetPassword_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_SetPassword_MsgID>(
    SC_SetPassword_MsgID_descriptor(), name, value);
}
enum CS_SetPasswordBySms_MsgID {
  CS_SetPasswordBySms_MsgID_ID = 1016
};
bool CS_SetPasswordBySms_MsgID_IsValid(int value);
const CS_SetPasswordBySms_MsgID CS_SetPasswordBySms_MsgID_MsgID_MIN = CS_SetPasswordBySms_MsgID_ID;
const CS_SetPasswordBySms_MsgID CS_SetPasswordBySms_MsgID_MsgID_MAX = CS_SetPasswordBySms_MsgID_ID;
const int CS_SetPasswordBySms_MsgID_MsgID_ARRAYSIZE = CS_SetPasswordBySms_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_SetPasswordBySms_MsgID_descriptor();
inline const ::std::string& CS_SetPasswordBySms_MsgID_Name(CS_SetPasswordBySms_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_SetPasswordBySms_MsgID_descriptor(), value);
}
inline bool CS_SetPasswordBySms_MsgID_Parse(
    const ::std::string& name, CS_SetPasswordBySms_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_SetPasswordBySms_MsgID>(
    CS_SetPasswordBySms_MsgID_descriptor(), name, value);
}
enum CS_SetNickname_MsgID {
  CS_SetNickname_MsgID_ID = 1020
};
bool CS_SetNickname_MsgID_IsValid(int value);
const CS_SetNickname_MsgID CS_SetNickname_MsgID_MsgID_MIN = CS_SetNickname_MsgID_ID;
const CS_SetNickname_MsgID CS_SetNickname_MsgID_MsgID_MAX = CS_SetNickname_MsgID_ID;
const int CS_SetNickname_MsgID_MsgID_ARRAYSIZE = CS_SetNickname_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_SetNickname_MsgID_descriptor();
inline const ::std::string& CS_SetNickname_MsgID_Name(CS_SetNickname_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_SetNickname_MsgID_descriptor(), value);
}
inline bool CS_SetNickname_MsgID_Parse(
    const ::std::string& name, CS_SetNickname_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_SetNickname_MsgID>(
    CS_SetNickname_MsgID_descriptor(), name, value);
}
enum SC_SetNickname_MsgID {
  SC_SetNickname_MsgID_ID = 1021
};
bool SC_SetNickname_MsgID_IsValid(int value);
const SC_SetNickname_MsgID SC_SetNickname_MsgID_MsgID_MIN = SC_SetNickname_MsgID_ID;
const SC_SetNickname_MsgID SC_SetNickname_MsgID_MsgID_MAX = SC_SetNickname_MsgID_ID;
const int SC_SetNickname_MsgID_MsgID_ARRAYSIZE = SC_SetNickname_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_SetNickname_MsgID_descriptor();
inline const ::std::string& SC_SetNickname_MsgID_Name(SC_SetNickname_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_SetNickname_MsgID_descriptor(), value);
}
inline bool SC_SetNickname_MsgID_Parse(
    const ::std::string& name, SC_SetNickname_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_SetNickname_MsgID>(
    SC_SetNickname_MsgID_descriptor(), name, value);
}
enum CS_ChangeHeaderIcon_MsgID {
  CS_ChangeHeaderIcon_MsgID_ID = 1022
};
bool CS_ChangeHeaderIcon_MsgID_IsValid(int value);
const CS_ChangeHeaderIcon_MsgID CS_ChangeHeaderIcon_MsgID_MsgID_MIN = CS_ChangeHeaderIcon_MsgID_ID;
const CS_ChangeHeaderIcon_MsgID CS_ChangeHeaderIcon_MsgID_MsgID_MAX = CS_ChangeHeaderIcon_MsgID_ID;
const int CS_ChangeHeaderIcon_MsgID_MsgID_ARRAYSIZE = CS_ChangeHeaderIcon_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ChangeHeaderIcon_MsgID_descriptor();
inline const ::std::string& CS_ChangeHeaderIcon_MsgID_Name(CS_ChangeHeaderIcon_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ChangeHeaderIcon_MsgID_descriptor(), value);
}
inline bool CS_ChangeHeaderIcon_MsgID_Parse(
    const ::std::string& name, CS_ChangeHeaderIcon_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ChangeHeaderIcon_MsgID>(
    CS_ChangeHeaderIcon_MsgID_descriptor(), name, value);
}
enum SC_ChangeHeaderIcon_MsgID {
  SC_ChangeHeaderIcon_MsgID_ID = 1023
};
bool SC_ChangeHeaderIcon_MsgID_IsValid(int value);
const SC_ChangeHeaderIcon_MsgID SC_ChangeHeaderIcon_MsgID_MsgID_MIN = SC_ChangeHeaderIcon_MsgID_ID;
const SC_ChangeHeaderIcon_MsgID SC_ChangeHeaderIcon_MsgID_MsgID_MAX = SC_ChangeHeaderIcon_MsgID_ID;
const int SC_ChangeHeaderIcon_MsgID_MsgID_ARRAYSIZE = SC_ChangeHeaderIcon_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ChangeHeaderIcon_MsgID_descriptor();
inline const ::std::string& SC_ChangeHeaderIcon_MsgID_Name(SC_ChangeHeaderIcon_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ChangeHeaderIcon_MsgID_descriptor(), value);
}
inline bool SC_ChangeHeaderIcon_MsgID_Parse(
    const ::std::string& name, SC_ChangeHeaderIcon_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ChangeHeaderIcon_MsgID>(
    SC_ChangeHeaderIcon_MsgID_descriptor(), name, value);
}
enum CL_GetInviterInfo_MsgID {
  CL_GetInviterInfo_MsgID_ID = 1024
};
bool CL_GetInviterInfo_MsgID_IsValid(int value);
const CL_GetInviterInfo_MsgID CL_GetInviterInfo_MsgID_MsgID_MIN = CL_GetInviterInfo_MsgID_ID;
const CL_GetInviterInfo_MsgID CL_GetInviterInfo_MsgID_MsgID_MAX = CL_GetInviterInfo_MsgID_ID;
const int CL_GetInviterInfo_MsgID_MsgID_ARRAYSIZE = CL_GetInviterInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CL_GetInviterInfo_MsgID_descriptor();
inline const ::std::string& CL_GetInviterInfo_MsgID_Name(CL_GetInviterInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CL_GetInviterInfo_MsgID_descriptor(), value);
}
inline bool CL_GetInviterInfo_MsgID_Parse(
    const ::std::string& name, CL_GetInviterInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CL_GetInviterInfo_MsgID>(
    CL_GetInviterInfo_MsgID_descriptor(), name, value);
}
enum LC_GetInviterInfo_MsgID {
  LC_GetInviterInfo_MsgID_ID = 1025
};
bool LC_GetInviterInfo_MsgID_IsValid(int value);
const LC_GetInviterInfo_MsgID LC_GetInviterInfo_MsgID_MsgID_MIN = LC_GetInviterInfo_MsgID_ID;
const LC_GetInviterInfo_MsgID LC_GetInviterInfo_MsgID_MsgID_MAX = LC_GetInviterInfo_MsgID_ID;
const int LC_GetInviterInfo_MsgID_MsgID_ARRAYSIZE = LC_GetInviterInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LC_GetInviterInfo_MsgID_descriptor();
inline const ::std::string& LC_GetInviterInfo_MsgID_Name(LC_GetInviterInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LC_GetInviterInfo_MsgID_descriptor(), value);
}
inline bool LC_GetInviterInfo_MsgID_Parse(
    const ::std::string& name, LC_GetInviterInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LC_GetInviterInfo_MsgID>(
    LC_GetInviterInfo_MsgID_descriptor(), name, value);
}
enum CS_RequestPlayerInfo_MsgID {
  CS_RequestPlayerInfo_MsgID_ID = 1100
};
bool CS_RequestPlayerInfo_MsgID_IsValid(int value);
const CS_RequestPlayerInfo_MsgID CS_RequestPlayerInfo_MsgID_MsgID_MIN = CS_RequestPlayerInfo_MsgID_ID;
const CS_RequestPlayerInfo_MsgID CS_RequestPlayerInfo_MsgID_MsgID_MAX = CS_RequestPlayerInfo_MsgID_ID;
const int CS_RequestPlayerInfo_MsgID_MsgID_ARRAYSIZE = CS_RequestPlayerInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_RequestPlayerInfo_MsgID_descriptor();
inline const ::std::string& CS_RequestPlayerInfo_MsgID_Name(CS_RequestPlayerInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_RequestPlayerInfo_MsgID_descriptor(), value);
}
inline bool CS_RequestPlayerInfo_MsgID_Parse(
    const ::std::string& name, CS_RequestPlayerInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_RequestPlayerInfo_MsgID>(
    CS_RequestPlayerInfo_MsgID_descriptor(), name, value);
}
enum SC_ReplyPlayerInfo_MsgID {
  SC_ReplyPlayerInfo_MsgID_ID = 1101
};
bool SC_ReplyPlayerInfo_MsgID_IsValid(int value);
const SC_ReplyPlayerInfo_MsgID SC_ReplyPlayerInfo_MsgID_MsgID_MIN = SC_ReplyPlayerInfo_MsgID_ID;
const SC_ReplyPlayerInfo_MsgID SC_ReplyPlayerInfo_MsgID_MsgID_MAX = SC_ReplyPlayerInfo_MsgID_ID;
const int SC_ReplyPlayerInfo_MsgID_MsgID_ARRAYSIZE = SC_ReplyPlayerInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ReplyPlayerInfo_MsgID_descriptor();
inline const ::std::string& SC_ReplyPlayerInfo_MsgID_Name(SC_ReplyPlayerInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ReplyPlayerInfo_MsgID_descriptor(), value);
}
inline bool SC_ReplyPlayerInfo_MsgID_Parse(
    const ::std::string& name, SC_ReplyPlayerInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ReplyPlayerInfo_MsgID>(
    SC_ReplyPlayerInfo_MsgID_descriptor(), name, value);
}
enum SC_ReplyPlayerInfoComplete_MsgID {
  SC_ReplyPlayerInfoComplete_MsgID_ID = 1102
};
bool SC_ReplyPlayerInfoComplete_MsgID_IsValid(int value);
const SC_ReplyPlayerInfoComplete_MsgID SC_ReplyPlayerInfoComplete_MsgID_MsgID_MIN = SC_ReplyPlayerInfoComplete_MsgID_ID;
const SC_ReplyPlayerInfoComplete_MsgID SC_ReplyPlayerInfoComplete_MsgID_MsgID_MAX = SC_ReplyPlayerInfoComplete_MsgID_ID;
const int SC_ReplyPlayerInfoComplete_MsgID_MsgID_ARRAYSIZE = SC_ReplyPlayerInfoComplete_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ReplyPlayerInfoComplete_MsgID_descriptor();
inline const ::std::string& SC_ReplyPlayerInfoComplete_MsgID_Name(SC_ReplyPlayerInfoComplete_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ReplyPlayerInfoComplete_MsgID_descriptor(), value);
}
inline bool SC_ReplyPlayerInfoComplete_MsgID_Parse(
    const ::std::string& name, SC_ReplyPlayerInfoComplete_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ReplyPlayerInfoComplete_MsgID>(
    SC_ReplyPlayerInfoComplete_MsgID_descriptor(), name, value);
}
enum CS_LoginValidatebox_MsgID {
  CS_LoginValidatebox_MsgID_ID = 1103
};
bool CS_LoginValidatebox_MsgID_IsValid(int value);
const CS_LoginValidatebox_MsgID CS_LoginValidatebox_MsgID_MsgID_MIN = CS_LoginValidatebox_MsgID_ID;
const CS_LoginValidatebox_MsgID CS_LoginValidatebox_MsgID_MsgID_MAX = CS_LoginValidatebox_MsgID_ID;
const int CS_LoginValidatebox_MsgID_MsgID_ARRAYSIZE = CS_LoginValidatebox_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_LoginValidatebox_MsgID_descriptor();
inline const ::std::string& CS_LoginValidatebox_MsgID_Name(CS_LoginValidatebox_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_LoginValidatebox_MsgID_descriptor(), value);
}
inline bool CS_LoginValidatebox_MsgID_Parse(
    const ::std::string& name, CS_LoginValidatebox_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_LoginValidatebox_MsgID>(
    CS_LoginValidatebox_MsgID_descriptor(), name, value);
}
enum SC_LoginValidatebox_MsgID {
  SC_LoginValidatebox_MsgID_ID = 1104
};
bool SC_LoginValidatebox_MsgID_IsValid(int value);
const SC_LoginValidatebox_MsgID SC_LoginValidatebox_MsgID_MsgID_MIN = SC_LoginValidatebox_MsgID_ID;
const SC_LoginValidatebox_MsgID SC_LoginValidatebox_MsgID_MsgID_MAX = SC_LoginValidatebox_MsgID_ID;
const int SC_LoginValidatebox_MsgID_MsgID_ARRAYSIZE = SC_LoginValidatebox_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LoginValidatebox_MsgID_descriptor();
inline const ::std::string& SC_LoginValidatebox_MsgID_Name(SC_LoginValidatebox_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LoginValidatebox_MsgID_descriptor(), value);
}
inline bool SC_LoginValidatebox_MsgID_Parse(
    const ::std::string& name, SC_LoginValidatebox_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LoginValidatebox_MsgID>(
    SC_LoginValidatebox_MsgID_descriptor(), name, value);
}
enum CS_ChangeGame_MsgID {
  CS_ChangeGame_MsgID_ID = 1150
};
bool CS_ChangeGame_MsgID_IsValid(int value);
const CS_ChangeGame_MsgID CS_ChangeGame_MsgID_MsgID_MIN = CS_ChangeGame_MsgID_ID;
const CS_ChangeGame_MsgID CS_ChangeGame_MsgID_MsgID_MAX = CS_ChangeGame_MsgID_ID;
const int CS_ChangeGame_MsgID_MsgID_ARRAYSIZE = CS_ChangeGame_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ChangeGame_MsgID_descriptor();
inline const ::std::string& CS_ChangeGame_MsgID_Name(CS_ChangeGame_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ChangeGame_MsgID_descriptor(), value);
}
inline bool CS_ChangeGame_MsgID_Parse(
    const ::std::string& name, CS_ChangeGame_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ChangeGame_MsgID>(
    CS_ChangeGame_MsgID_descriptor(), name, value);
}
enum CS_JoinPrivateRoom_MsgID {
  CS_JoinPrivateRoom_MsgID_ID = 1151
};
bool CS_JoinPrivateRoom_MsgID_IsValid(int value);
const CS_JoinPrivateRoom_MsgID CS_JoinPrivateRoom_MsgID_MsgID_MIN = CS_JoinPrivateRoom_MsgID_ID;
const CS_JoinPrivateRoom_MsgID CS_JoinPrivateRoom_MsgID_MsgID_MAX = CS_JoinPrivateRoom_MsgID_ID;
const int CS_JoinPrivateRoom_MsgID_MsgID_ARRAYSIZE = CS_JoinPrivateRoom_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_JoinPrivateRoom_MsgID_descriptor();
inline const ::std::string& CS_JoinPrivateRoom_MsgID_Name(CS_JoinPrivateRoom_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_JoinPrivateRoom_MsgID_descriptor(), value);
}
inline bool CS_JoinPrivateRoom_MsgID_Parse(
    const ::std::string& name, CS_JoinPrivateRoom_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_JoinPrivateRoom_MsgID>(
    CS_JoinPrivateRoom_MsgID_descriptor(), name, value);
}
enum SC_JoinPrivateRoomFailed_MsgID {
  SC_JoinPrivateRoomFailed_MsgID_ID = 1152
};
bool SC_JoinPrivateRoomFailed_MsgID_IsValid(int value);
const SC_JoinPrivateRoomFailed_MsgID SC_JoinPrivateRoomFailed_MsgID_MsgID_MIN = SC_JoinPrivateRoomFailed_MsgID_ID;
const SC_JoinPrivateRoomFailed_MsgID SC_JoinPrivateRoomFailed_MsgID_MsgID_MAX = SC_JoinPrivateRoomFailed_MsgID_ID;
const int SC_JoinPrivateRoomFailed_MsgID_MsgID_ARRAYSIZE = SC_JoinPrivateRoomFailed_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_JoinPrivateRoomFailed_MsgID_descriptor();
inline const ::std::string& SC_JoinPrivateRoomFailed_MsgID_Name(SC_JoinPrivateRoomFailed_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_JoinPrivateRoomFailed_MsgID_descriptor(), value);
}
inline bool SC_JoinPrivateRoomFailed_MsgID_Parse(
    const ::std::string& name, SC_JoinPrivateRoomFailed_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_JoinPrivateRoomFailed_MsgID>(
    SC_JoinPrivateRoomFailed_MsgID_descriptor(), name, value);
}
enum CS_PrivateRoomInfo_MsgID {
  CS_PrivateRoomInfo_MsgID_ID = 1153
};
bool CS_PrivateRoomInfo_MsgID_IsValid(int value);
const CS_PrivateRoomInfo_MsgID CS_PrivateRoomInfo_MsgID_MsgID_MIN = CS_PrivateRoomInfo_MsgID_ID;
const CS_PrivateRoomInfo_MsgID CS_PrivateRoomInfo_MsgID_MsgID_MAX = CS_PrivateRoomInfo_MsgID_ID;
const int CS_PrivateRoomInfo_MsgID_MsgID_ARRAYSIZE = CS_PrivateRoomInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_PrivateRoomInfo_MsgID_descriptor();
inline const ::std::string& CS_PrivateRoomInfo_MsgID_Name(CS_PrivateRoomInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_PrivateRoomInfo_MsgID_descriptor(), value);
}
inline bool CS_PrivateRoomInfo_MsgID_Parse(
    const ::std::string& name, CS_PrivateRoomInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_PrivateRoomInfo_MsgID>(
    CS_PrivateRoomInfo_MsgID_descriptor(), name, value);
}
enum SC_PrivateRoomInfo_MsgID {
  SC_PrivateRoomInfo_MsgID_ID = 1154
};
bool SC_PrivateRoomInfo_MsgID_IsValid(int value);
const SC_PrivateRoomInfo_MsgID SC_PrivateRoomInfo_MsgID_MsgID_MIN = SC_PrivateRoomInfo_MsgID_ID;
const SC_PrivateRoomInfo_MsgID SC_PrivateRoomInfo_MsgID_MsgID_MAX = SC_PrivateRoomInfo_MsgID_ID;
const int SC_PrivateRoomInfo_MsgID_MsgID_ARRAYSIZE = SC_PrivateRoomInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_PrivateRoomInfo_MsgID_descriptor();
inline const ::std::string& SC_PrivateRoomInfo_MsgID_Name(SC_PrivateRoomInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_PrivateRoomInfo_MsgID_descriptor(), value);
}
inline bool SC_PrivateRoomInfo_MsgID_Parse(
    const ::std::string& name, SC_PrivateRoomInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_PrivateRoomInfo_MsgID>(
    SC_PrivateRoomInfo_MsgID_descriptor(), name, value);
}
enum GC_GameServerCfg_MsgID {
  GC_GameServerCfg_MsgID_ID = 1200
};
bool GC_GameServerCfg_MsgID_IsValid(int value);
const GC_GameServerCfg_MsgID GC_GameServerCfg_MsgID_MsgID_MIN = GC_GameServerCfg_MsgID_ID;
const GC_GameServerCfg_MsgID GC_GameServerCfg_MsgID_MsgID_MAX = GC_GameServerCfg_MsgID_ID;
const int GC_GameServerCfg_MsgID_MsgID_ARRAYSIZE = GC_GameServerCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* GC_GameServerCfg_MsgID_descriptor();
inline const ::std::string& GC_GameServerCfg_MsgID_Name(GC_GameServerCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    GC_GameServerCfg_MsgID_descriptor(), value);
}
inline bool GC_GameServerCfg_MsgID_Parse(
    const ::std::string& name, GC_GameServerCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GC_GameServerCfg_MsgID>(
    GC_GameServerCfg_MsgID_descriptor(), name, value);
}
enum CG_GameServerCfg_MsgID {
  CG_GameServerCfg_MsgID_ID = 1201
};
bool CG_GameServerCfg_MsgID_IsValid(int value);
const CG_GameServerCfg_MsgID CG_GameServerCfg_MsgID_MsgID_MIN = CG_GameServerCfg_MsgID_ID;
const CG_GameServerCfg_MsgID CG_GameServerCfg_MsgID_MsgID_MAX = CG_GameServerCfg_MsgID_ID;
const int CG_GameServerCfg_MsgID_MsgID_ARRAYSIZE = CG_GameServerCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CG_GameServerCfg_MsgID_descriptor();
inline const ::std::string& CG_GameServerCfg_MsgID_Name(CG_GameServerCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CG_GameServerCfg_MsgID_descriptor(), value);
}
inline bool CG_GameServerCfg_MsgID_Parse(
    const ::std::string& name, CG_GameServerCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CG_GameServerCfg_MsgID>(
    CG_GameServerCfg_MsgID_descriptor(), name, value);
}
enum CS_BankSetPassword_MsgID {
  CS_BankSetPassword_MsgID_ID = 2000
};
bool CS_BankSetPassword_MsgID_IsValid(int value);
const CS_BankSetPassword_MsgID CS_BankSetPassword_MsgID_MsgID_MIN = CS_BankSetPassword_MsgID_ID;
const CS_BankSetPassword_MsgID CS_BankSetPassword_MsgID_MsgID_MAX = CS_BankSetPassword_MsgID_ID;
const int CS_BankSetPassword_MsgID_MsgID_ARRAYSIZE = CS_BankSetPassword_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_BankSetPassword_MsgID_descriptor();
inline const ::std::string& CS_BankSetPassword_MsgID_Name(CS_BankSetPassword_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_BankSetPassword_MsgID_descriptor(), value);
}
inline bool CS_BankSetPassword_MsgID_Parse(
    const ::std::string& name, CS_BankSetPassword_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_BankSetPassword_MsgID>(
    CS_BankSetPassword_MsgID_descriptor(), name, value);
}
enum SC_BankSetPassword_MsgID {
  SC_BankSetPassword_MsgID_ID = 2001
};
bool SC_BankSetPassword_MsgID_IsValid(int value);
const SC_BankSetPassword_MsgID SC_BankSetPassword_MsgID_MsgID_MIN = SC_BankSetPassword_MsgID_ID;
const SC_BankSetPassword_MsgID SC_BankSetPassword_MsgID_MsgID_MAX = SC_BankSetPassword_MsgID_ID;
const int SC_BankSetPassword_MsgID_MsgID_ARRAYSIZE = SC_BankSetPassword_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_BankSetPassword_MsgID_descriptor();
inline const ::std::string& SC_BankSetPassword_MsgID_Name(SC_BankSetPassword_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_BankSetPassword_MsgID_descriptor(), value);
}
inline bool SC_BankSetPassword_MsgID_Parse(
    const ::std::string& name, SC_BankSetPassword_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_BankSetPassword_MsgID>(
    SC_BankSetPassword_MsgID_descriptor(), name, value);
}
enum CS_BankChangePassword_MsgID {
  CS_BankChangePassword_MsgID_ID = 2002
};
bool CS_BankChangePassword_MsgID_IsValid(int value);
const CS_BankChangePassword_MsgID CS_BankChangePassword_MsgID_MsgID_MIN = CS_BankChangePassword_MsgID_ID;
const CS_BankChangePassword_MsgID CS_BankChangePassword_MsgID_MsgID_MAX = CS_BankChangePassword_MsgID_ID;
const int CS_BankChangePassword_MsgID_MsgID_ARRAYSIZE = CS_BankChangePassword_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_BankChangePassword_MsgID_descriptor();
inline const ::std::string& CS_BankChangePassword_MsgID_Name(CS_BankChangePassword_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_BankChangePassword_MsgID_descriptor(), value);
}
inline bool CS_BankChangePassword_MsgID_Parse(
    const ::std::string& name, CS_BankChangePassword_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_BankChangePassword_MsgID>(
    CS_BankChangePassword_MsgID_descriptor(), name, value);
}
enum SC_BankChangePassword_MsgID {
  SC_BankChangePassword_MsgID_ID = 2003
};
bool SC_BankChangePassword_MsgID_IsValid(int value);
const SC_BankChangePassword_MsgID SC_BankChangePassword_MsgID_MsgID_MIN = SC_BankChangePassword_MsgID_ID;
const SC_BankChangePassword_MsgID SC_BankChangePassword_MsgID_MsgID_MAX = SC_BankChangePassword_MsgID_ID;
const int SC_BankChangePassword_MsgID_MsgID_ARRAYSIZE = SC_BankChangePassword_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_BankChangePassword_MsgID_descriptor();
inline const ::std::string& SC_BankChangePassword_MsgID_Name(SC_BankChangePassword_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_BankChangePassword_MsgID_descriptor(), value);
}
inline bool SC_BankChangePassword_MsgID_Parse(
    const ::std::string& name, SC_BankChangePassword_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_BankChangePassword_MsgID>(
    SC_BankChangePassword_MsgID_descriptor(), name, value);
}
enum CS_BankLogin_MsgID {
  CS_BankLogin_MsgID_ID = 2004
};
bool CS_BankLogin_MsgID_IsValid(int value);
const CS_BankLogin_MsgID CS_BankLogin_MsgID_MsgID_MIN = CS_BankLogin_MsgID_ID;
const CS_BankLogin_MsgID CS_BankLogin_MsgID_MsgID_MAX = CS_BankLogin_MsgID_ID;
const int CS_BankLogin_MsgID_MsgID_ARRAYSIZE = CS_BankLogin_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_BankLogin_MsgID_descriptor();
inline const ::std::string& CS_BankLogin_MsgID_Name(CS_BankLogin_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_BankLogin_MsgID_descriptor(), value);
}
inline bool CS_BankLogin_MsgID_Parse(
    const ::std::string& name, CS_BankLogin_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_BankLogin_MsgID>(
    CS_BankLogin_MsgID_descriptor(), name, value);
}
enum SC_BankLogin_MsgID {
  SC_BankLogin_MsgID_ID = 2005
};
bool SC_BankLogin_MsgID_IsValid(int value);
const SC_BankLogin_MsgID SC_BankLogin_MsgID_MsgID_MIN = SC_BankLogin_MsgID_ID;
const SC_BankLogin_MsgID SC_BankLogin_MsgID_MsgID_MAX = SC_BankLogin_MsgID_ID;
const int SC_BankLogin_MsgID_MsgID_ARRAYSIZE = SC_BankLogin_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_BankLogin_MsgID_descriptor();
inline const ::std::string& SC_BankLogin_MsgID_Name(SC_BankLogin_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_BankLogin_MsgID_descriptor(), value);
}
inline bool SC_BankLogin_MsgID_Parse(
    const ::std::string& name, SC_BankLogin_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_BankLogin_MsgID>(
    SC_BankLogin_MsgID_descriptor(), name, value);
}
enum CS_BankDeposit_MsgID {
  CS_BankDeposit_MsgID_ID = 2010
};
bool CS_BankDeposit_MsgID_IsValid(int value);
const CS_BankDeposit_MsgID CS_BankDeposit_MsgID_MsgID_MIN = CS_BankDeposit_MsgID_ID;
const CS_BankDeposit_MsgID CS_BankDeposit_MsgID_MsgID_MAX = CS_BankDeposit_MsgID_ID;
const int CS_BankDeposit_MsgID_MsgID_ARRAYSIZE = CS_BankDeposit_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_BankDeposit_MsgID_descriptor();
inline const ::std::string& CS_BankDeposit_MsgID_Name(CS_BankDeposit_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_BankDeposit_MsgID_descriptor(), value);
}
inline bool CS_BankDeposit_MsgID_Parse(
    const ::std::string& name, CS_BankDeposit_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_BankDeposit_MsgID>(
    CS_BankDeposit_MsgID_descriptor(), name, value);
}
enum SC_BankDeposit_MsgID {
  SC_BankDeposit_MsgID_ID = 2011
};
bool SC_BankDeposit_MsgID_IsValid(int value);
const SC_BankDeposit_MsgID SC_BankDeposit_MsgID_MsgID_MIN = SC_BankDeposit_MsgID_ID;
const SC_BankDeposit_MsgID SC_BankDeposit_MsgID_MsgID_MAX = SC_BankDeposit_MsgID_ID;
const int SC_BankDeposit_MsgID_MsgID_ARRAYSIZE = SC_BankDeposit_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_BankDeposit_MsgID_descriptor();
inline const ::std::string& SC_BankDeposit_MsgID_Name(SC_BankDeposit_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_BankDeposit_MsgID_descriptor(), value);
}
inline bool SC_BankDeposit_MsgID_Parse(
    const ::std::string& name, SC_BankDeposit_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_BankDeposit_MsgID>(
    SC_BankDeposit_MsgID_descriptor(), name, value);
}
enum CS_BankDraw_MsgID {
  CS_BankDraw_MsgID_ID = 2012
};
bool CS_BankDraw_MsgID_IsValid(int value);
const CS_BankDraw_MsgID CS_BankDraw_MsgID_MsgID_MIN = CS_BankDraw_MsgID_ID;
const CS_BankDraw_MsgID CS_BankDraw_MsgID_MsgID_MAX = CS_BankDraw_MsgID_ID;
const int CS_BankDraw_MsgID_MsgID_ARRAYSIZE = CS_BankDraw_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_BankDraw_MsgID_descriptor();
inline const ::std::string& CS_BankDraw_MsgID_Name(CS_BankDraw_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_BankDraw_MsgID_descriptor(), value);
}
inline bool CS_BankDraw_MsgID_Parse(
    const ::std::string& name, CS_BankDraw_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_BankDraw_MsgID>(
    CS_BankDraw_MsgID_descriptor(), name, value);
}
enum SC_BankDraw_MsgID {
  SC_BankDraw_MsgID_ID = 2013
};
bool SC_BankDraw_MsgID_IsValid(int value);
const SC_BankDraw_MsgID SC_BankDraw_MsgID_MsgID_MIN = SC_BankDraw_MsgID_ID;
const SC_BankDraw_MsgID SC_BankDraw_MsgID_MsgID_MAX = SC_BankDraw_MsgID_ID;
const int SC_BankDraw_MsgID_MsgID_ARRAYSIZE = SC_BankDraw_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_BankDraw_MsgID_descriptor();
inline const ::std::string& SC_BankDraw_MsgID_Name(SC_BankDraw_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_BankDraw_MsgID_descriptor(), value);
}
inline bool SC_BankDraw_MsgID_Parse(
    const ::std::string& name, SC_BankDraw_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_BankDraw_MsgID>(
    SC_BankDraw_MsgID_descriptor(), name, value);
}
enum SC_NotifyBankStatement_MsgID {
  SC_NotifyBankStatement_MsgID_ID = 2014
};
bool SC_NotifyBankStatement_MsgID_IsValid(int value);
const SC_NotifyBankStatement_MsgID SC_NotifyBankStatement_MsgID_MsgID_MIN = SC_NotifyBankStatement_MsgID_ID;
const SC_NotifyBankStatement_MsgID SC_NotifyBankStatement_MsgID_MsgID_MAX = SC_NotifyBankStatement_MsgID_ID;
const int SC_NotifyBankStatement_MsgID_MsgID_ARRAYSIZE = SC_NotifyBankStatement_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_NotifyBankStatement_MsgID_descriptor();
inline const ::std::string& SC_NotifyBankStatement_MsgID_Name(SC_NotifyBankStatement_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_NotifyBankStatement_MsgID_descriptor(), value);
}
inline bool SC_NotifyBankStatement_MsgID_Parse(
    const ::std::string& name, SC_NotifyBankStatement_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_NotifyBankStatement_MsgID>(
    SC_NotifyBankStatement_MsgID_descriptor(), name, value);
}
enum CS_BankStatement_MsgID {
  CS_BankStatement_MsgID_ID = 2015
};
bool CS_BankStatement_MsgID_IsValid(int value);
const CS_BankStatement_MsgID CS_BankStatement_MsgID_MsgID_MIN = CS_BankStatement_MsgID_ID;
const CS_BankStatement_MsgID CS_BankStatement_MsgID_MsgID_MAX = CS_BankStatement_MsgID_ID;
const int CS_BankStatement_MsgID_MsgID_ARRAYSIZE = CS_BankStatement_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_BankStatement_MsgID_descriptor();
inline const ::std::string& CS_BankStatement_MsgID_Name(CS_BankStatement_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_BankStatement_MsgID_descriptor(), value);
}
inline bool CS_BankStatement_MsgID_Parse(
    const ::std::string& name, CS_BankStatement_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_BankStatement_MsgID>(
    CS_BankStatement_MsgID_descriptor(), name, value);
}
enum SC_BankStatement_MsgID {
  SC_BankStatement_MsgID_ID = 2016
};
bool SC_BankStatement_MsgID_IsValid(int value);
const SC_BankStatement_MsgID SC_BankStatement_MsgID_MsgID_MIN = SC_BankStatement_MsgID_ID;
const SC_BankStatement_MsgID SC_BankStatement_MsgID_MsgID_MAX = SC_BankStatement_MsgID_ID;
const int SC_BankStatement_MsgID_MsgID_ARRAYSIZE = SC_BankStatement_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_BankStatement_MsgID_descriptor();
inline const ::std::string& SC_BankStatement_MsgID_Name(SC_BankStatement_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_BankStatement_MsgID_descriptor(), value);
}
inline bool SC_BankStatement_MsgID_Parse(
    const ::std::string& name, SC_BankStatement_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_BankStatement_MsgID>(
    SC_BankStatement_MsgID_descriptor(), name, value);
}
enum CS_BankTransfer_MsgID {
  CS_BankTransfer_MsgID_ID = 2017
};
bool CS_BankTransfer_MsgID_IsValid(int value);
const CS_BankTransfer_MsgID CS_BankTransfer_MsgID_MsgID_MIN = CS_BankTransfer_MsgID_ID;
const CS_BankTransfer_MsgID CS_BankTransfer_MsgID_MsgID_MAX = CS_BankTransfer_MsgID_ID;
const int CS_BankTransfer_MsgID_MsgID_ARRAYSIZE = CS_BankTransfer_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_BankTransfer_MsgID_descriptor();
inline const ::std::string& CS_BankTransfer_MsgID_Name(CS_BankTransfer_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_BankTransfer_MsgID_descriptor(), value);
}
inline bool CS_BankTransfer_MsgID_Parse(
    const ::std::string& name, CS_BankTransfer_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_BankTransfer_MsgID>(
    CS_BankTransfer_MsgID_descriptor(), name, value);
}
enum SC_BankTransfer_MsgID {
  SC_BankTransfer_MsgID_ID = 2018
};
bool SC_BankTransfer_MsgID_IsValid(int value);
const SC_BankTransfer_MsgID SC_BankTransfer_MsgID_MsgID_MIN = SC_BankTransfer_MsgID_ID;
const SC_BankTransfer_MsgID SC_BankTransfer_MsgID_MsgID_MAX = SC_BankTransfer_MsgID_ID;
const int SC_BankTransfer_MsgID_MsgID_ARRAYSIZE = SC_BankTransfer_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_BankTransfer_MsgID_descriptor();
inline const ::std::string& SC_BankTransfer_MsgID_Name(SC_BankTransfer_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_BankTransfer_MsgID_descriptor(), value);
}
inline bool SC_BankTransfer_MsgID_Parse(
    const ::std::string& name, SC_BankTransfer_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_BankTransfer_MsgID>(
    SC_BankTransfer_MsgID_descriptor(), name, value);
}
enum SC_NotifyMoney_MsgID {
  SC_NotifyMoney_MsgID_ID = 2019
};
bool SC_NotifyMoney_MsgID_IsValid(int value);
const SC_NotifyMoney_MsgID SC_NotifyMoney_MsgID_MsgID_MIN = SC_NotifyMoney_MsgID_ID;
const SC_NotifyMoney_MsgID SC_NotifyMoney_MsgID_MsgID_MAX = SC_NotifyMoney_MsgID_ID;
const int SC_NotifyMoney_MsgID_MsgID_ARRAYSIZE = SC_NotifyMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_NotifyMoney_MsgID_descriptor();
inline const ::std::string& SC_NotifyMoney_MsgID_Name(SC_NotifyMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_NotifyMoney_MsgID_descriptor(), value);
}
inline bool SC_NotifyMoney_MsgID_Parse(
    const ::std::string& name, SC_NotifyMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_NotifyMoney_MsgID>(
    SC_NotifyMoney_MsgID_descriptor(), name, value);
}
enum CS_BankTransferByGuid_MsgID {
  CS_BankTransferByGuid_MsgID_ID = 2020
};
bool CS_BankTransferByGuid_MsgID_IsValid(int value);
const CS_BankTransferByGuid_MsgID CS_BankTransferByGuid_MsgID_MsgID_MIN = CS_BankTransferByGuid_MsgID_ID;
const CS_BankTransferByGuid_MsgID CS_BankTransferByGuid_MsgID_MsgID_MAX = CS_BankTransferByGuid_MsgID_ID;
const int CS_BankTransferByGuid_MsgID_MsgID_ARRAYSIZE = CS_BankTransferByGuid_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_BankTransferByGuid_MsgID_descriptor();
inline const ::std::string& CS_BankTransferByGuid_MsgID_Name(CS_BankTransferByGuid_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_BankTransferByGuid_MsgID_descriptor(), value);
}
inline bool CS_BankTransferByGuid_MsgID_Parse(
    const ::std::string& name, CS_BankTransferByGuid_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_BankTransferByGuid_MsgID>(
    CS_BankTransferByGuid_MsgID_descriptor(), name, value);
}
enum CS_BuyItem_MsgID {
  CS_BuyItem_MsgID_ID = 2100
};
bool CS_BuyItem_MsgID_IsValid(int value);
const CS_BuyItem_MsgID CS_BuyItem_MsgID_MsgID_MIN = CS_BuyItem_MsgID_ID;
const CS_BuyItem_MsgID CS_BuyItem_MsgID_MsgID_MAX = CS_BuyItem_MsgID_ID;
const int CS_BuyItem_MsgID_MsgID_ARRAYSIZE = CS_BuyItem_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_BuyItem_MsgID_descriptor();
inline const ::std::string& CS_BuyItem_MsgID_Name(CS_BuyItem_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_BuyItem_MsgID_descriptor(), value);
}
inline bool CS_BuyItem_MsgID_Parse(
    const ::std::string& name, CS_BuyItem_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_BuyItem_MsgID>(
    CS_BuyItem_MsgID_descriptor(), name, value);
}
enum SC_BuyItem_MsgID {
  SC_BuyItem_MsgID_ID = 2101
};
bool SC_BuyItem_MsgID_IsValid(int value);
const SC_BuyItem_MsgID SC_BuyItem_MsgID_MsgID_MIN = SC_BuyItem_MsgID_ID;
const SC_BuyItem_MsgID SC_BuyItem_MsgID_MsgID_MAX = SC_BuyItem_MsgID_ID;
const int SC_BuyItem_MsgID_MsgID_ARRAYSIZE = SC_BuyItem_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_BuyItem_MsgID_descriptor();
inline const ::std::string& SC_BuyItem_MsgID_Name(SC_BuyItem_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_BuyItem_MsgID_descriptor(), value);
}
inline bool SC_BuyItem_MsgID_Parse(
    const ::std::string& name, SC_BuyItem_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_BuyItem_MsgID>(
    SC_BuyItem_MsgID_descriptor(), name, value);
}
enum CS_DelItem_MsgID {
  CS_DelItem_MsgID_ID = 2102
};
bool CS_DelItem_MsgID_IsValid(int value);
const CS_DelItem_MsgID CS_DelItem_MsgID_MsgID_MIN = CS_DelItem_MsgID_ID;
const CS_DelItem_MsgID CS_DelItem_MsgID_MsgID_MAX = CS_DelItem_MsgID_ID;
const int CS_DelItem_MsgID_MsgID_ARRAYSIZE = CS_DelItem_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_DelItem_MsgID_descriptor();
inline const ::std::string& CS_DelItem_MsgID_Name(CS_DelItem_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_DelItem_MsgID_descriptor(), value);
}
inline bool CS_DelItem_MsgID_Parse(
    const ::std::string& name, CS_DelItem_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_DelItem_MsgID>(
    CS_DelItem_MsgID_descriptor(), name, value);
}
enum SC_DelItem_MsgID {
  SC_DelItem_MsgID_ID = 2103
};
bool SC_DelItem_MsgID_IsValid(int value);
const SC_DelItem_MsgID SC_DelItem_MsgID_MsgID_MIN = SC_DelItem_MsgID_ID;
const SC_DelItem_MsgID SC_DelItem_MsgID_MsgID_MAX = SC_DelItem_MsgID_ID;
const int SC_DelItem_MsgID_MsgID_ARRAYSIZE = SC_DelItem_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_DelItem_MsgID_descriptor();
inline const ::std::string& SC_DelItem_MsgID_Name(SC_DelItem_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_DelItem_MsgID_descriptor(), value);
}
inline bool SC_DelItem_MsgID_Parse(
    const ::std::string& name, SC_DelItem_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_DelItem_MsgID>(
    SC_DelItem_MsgID_descriptor(), name, value);
}
enum CS_UseItem_MsgID {
  CS_UseItem_MsgID_ID = 2104
};
bool CS_UseItem_MsgID_IsValid(int value);
const CS_UseItem_MsgID CS_UseItem_MsgID_MsgID_MIN = CS_UseItem_MsgID_ID;
const CS_UseItem_MsgID CS_UseItem_MsgID_MsgID_MAX = CS_UseItem_MsgID_ID;
const int CS_UseItem_MsgID_MsgID_ARRAYSIZE = CS_UseItem_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_UseItem_MsgID_descriptor();
inline const ::std::string& CS_UseItem_MsgID_Name(CS_UseItem_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_UseItem_MsgID_descriptor(), value);
}
inline bool CS_UseItem_MsgID_Parse(
    const ::std::string& name, CS_UseItem_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_UseItem_MsgID>(
    CS_UseItem_MsgID_descriptor(), name, value);
}
enum SC_UseItem_MsgID {
  SC_UseItem_MsgID_ID = 2105
};
bool SC_UseItem_MsgID_IsValid(int value);
const SC_UseItem_MsgID SC_UseItem_MsgID_MsgID_MIN = SC_UseItem_MsgID_ID;
const SC_UseItem_MsgID SC_UseItem_MsgID_MsgID_MAX = SC_UseItem_MsgID_ID;
const int SC_UseItem_MsgID_MsgID_ARRAYSIZE = SC_UseItem_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_UseItem_MsgID_descriptor();
inline const ::std::string& SC_UseItem_MsgID_Name(SC_UseItem_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_UseItem_MsgID_descriptor(), value);
}
inline bool SC_UseItem_MsgID_Parse(
    const ::std::string& name, SC_UseItem_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_UseItem_MsgID>(
    SC_UseItem_MsgID_descriptor(), name, value);
}
enum CS_ChatWorld_MsgID {
  CS_ChatWorld_MsgID_ID = 2200
};
bool CS_ChatWorld_MsgID_IsValid(int value);
const CS_ChatWorld_MsgID CS_ChatWorld_MsgID_MsgID_MIN = CS_ChatWorld_MsgID_ID;
const CS_ChatWorld_MsgID CS_ChatWorld_MsgID_MsgID_MAX = CS_ChatWorld_MsgID_ID;
const int CS_ChatWorld_MsgID_MsgID_ARRAYSIZE = CS_ChatWorld_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ChatWorld_MsgID_descriptor();
inline const ::std::string& CS_ChatWorld_MsgID_Name(CS_ChatWorld_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ChatWorld_MsgID_descriptor(), value);
}
inline bool CS_ChatWorld_MsgID_Parse(
    const ::std::string& name, CS_ChatWorld_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ChatWorld_MsgID>(
    CS_ChatWorld_MsgID_descriptor(), name, value);
}
enum SC_ChatWorld_MsgID {
  SC_ChatWorld_MsgID_ID = 2201
};
bool SC_ChatWorld_MsgID_IsValid(int value);
const SC_ChatWorld_MsgID SC_ChatWorld_MsgID_MsgID_MIN = SC_ChatWorld_MsgID_ID;
const SC_ChatWorld_MsgID SC_ChatWorld_MsgID_MsgID_MAX = SC_ChatWorld_MsgID_ID;
const int SC_ChatWorld_MsgID_MsgID_ARRAYSIZE = SC_ChatWorld_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ChatWorld_MsgID_descriptor();
inline const ::std::string& SC_ChatWorld_MsgID_Name(SC_ChatWorld_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ChatWorld_MsgID_descriptor(), value);
}
inline bool SC_ChatWorld_MsgID_Parse(
    const ::std::string& name, SC_ChatWorld_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ChatWorld_MsgID>(
    SC_ChatWorld_MsgID_descriptor(), name, value);
}
enum CS_ChatPrivate_MsgID {
  CS_ChatPrivate_MsgID_ID = 2202
};
bool CS_ChatPrivate_MsgID_IsValid(int value);
const CS_ChatPrivate_MsgID CS_ChatPrivate_MsgID_MsgID_MIN = CS_ChatPrivate_MsgID_ID;
const CS_ChatPrivate_MsgID CS_ChatPrivate_MsgID_MsgID_MAX = CS_ChatPrivate_MsgID_ID;
const int CS_ChatPrivate_MsgID_MsgID_ARRAYSIZE = CS_ChatPrivate_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ChatPrivate_MsgID_descriptor();
inline const ::std::string& CS_ChatPrivate_MsgID_Name(CS_ChatPrivate_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ChatPrivate_MsgID_descriptor(), value);
}
inline bool CS_ChatPrivate_MsgID_Parse(
    const ::std::string& name, CS_ChatPrivate_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ChatPrivate_MsgID>(
    CS_ChatPrivate_MsgID_descriptor(), name, value);
}
enum SC_ChatPrivate_MsgID {
  SC_ChatPrivate_MsgID_ID = 2203
};
bool SC_ChatPrivate_MsgID_IsValid(int value);
const SC_ChatPrivate_MsgID SC_ChatPrivate_MsgID_MsgID_MIN = SC_ChatPrivate_MsgID_ID;
const SC_ChatPrivate_MsgID SC_ChatPrivate_MsgID_MsgID_MAX = SC_ChatPrivate_MsgID_ID;
const int SC_ChatPrivate_MsgID_MsgID_ARRAYSIZE = SC_ChatPrivate_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ChatPrivate_MsgID_descriptor();
inline const ::std::string& SC_ChatPrivate_MsgID_Name(SC_ChatPrivate_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ChatPrivate_MsgID_descriptor(), value);
}
inline bool SC_ChatPrivate_MsgID_Parse(
    const ::std::string& name, SC_ChatPrivate_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ChatPrivate_MsgID>(
    SC_ChatPrivate_MsgID_descriptor(), name, value);
}
enum CS_ChatServer_MsgID {
  CS_ChatServer_MsgID_ID = 2204
};
bool CS_ChatServer_MsgID_IsValid(int value);
const CS_ChatServer_MsgID CS_ChatServer_MsgID_MsgID_MIN = CS_ChatServer_MsgID_ID;
const CS_ChatServer_MsgID CS_ChatServer_MsgID_MsgID_MAX = CS_ChatServer_MsgID_ID;
const int CS_ChatServer_MsgID_MsgID_ARRAYSIZE = CS_ChatServer_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ChatServer_MsgID_descriptor();
inline const ::std::string& CS_ChatServer_MsgID_Name(CS_ChatServer_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ChatServer_MsgID_descriptor(), value);
}
inline bool CS_ChatServer_MsgID_Parse(
    const ::std::string& name, CS_ChatServer_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ChatServer_MsgID>(
    CS_ChatServer_MsgID_descriptor(), name, value);
}
enum SC_ChatServer_MsgID {
  SC_ChatServer_MsgID_ID = 2205
};
bool SC_ChatServer_MsgID_IsValid(int value);
const SC_ChatServer_MsgID SC_ChatServer_MsgID_MsgID_MIN = SC_ChatServer_MsgID_ID;
const SC_ChatServer_MsgID SC_ChatServer_MsgID_MsgID_MAX = SC_ChatServer_MsgID_ID;
const int SC_ChatServer_MsgID_MsgID_ARRAYSIZE = SC_ChatServer_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ChatServer_MsgID_descriptor();
inline const ::std::string& SC_ChatServer_MsgID_Name(SC_ChatServer_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ChatServer_MsgID_descriptor(), value);
}
inline bool SC_ChatServer_MsgID_Parse(
    const ::std::string& name, SC_ChatServer_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ChatServer_MsgID>(
    SC_ChatServer_MsgID_descriptor(), name, value);
}
enum CS_ChatRoom_MsgID {
  CS_ChatRoom_MsgID_ID = 2206
};
bool CS_ChatRoom_MsgID_IsValid(int value);
const CS_ChatRoom_MsgID CS_ChatRoom_MsgID_MsgID_MIN = CS_ChatRoom_MsgID_ID;
const CS_ChatRoom_MsgID CS_ChatRoom_MsgID_MsgID_MAX = CS_ChatRoom_MsgID_ID;
const int CS_ChatRoom_MsgID_MsgID_ARRAYSIZE = CS_ChatRoom_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ChatRoom_MsgID_descriptor();
inline const ::std::string& CS_ChatRoom_MsgID_Name(CS_ChatRoom_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ChatRoom_MsgID_descriptor(), value);
}
inline bool CS_ChatRoom_MsgID_Parse(
    const ::std::string& name, CS_ChatRoom_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ChatRoom_MsgID>(
    CS_ChatRoom_MsgID_descriptor(), name, value);
}
enum SC_ChatRoom_MsgID {
  SC_ChatRoom_MsgID_ID = 2207
};
bool SC_ChatRoom_MsgID_IsValid(int value);
const SC_ChatRoom_MsgID SC_ChatRoom_MsgID_MsgID_MIN = SC_ChatRoom_MsgID_ID;
const SC_ChatRoom_MsgID SC_ChatRoom_MsgID_MsgID_MAX = SC_ChatRoom_MsgID_ID;
const int SC_ChatRoom_MsgID_MsgID_ARRAYSIZE = SC_ChatRoom_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ChatRoom_MsgID_descriptor();
inline const ::std::string& SC_ChatRoom_MsgID_Name(SC_ChatRoom_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ChatRoom_MsgID_descriptor(), value);
}
inline bool SC_ChatRoom_MsgID_Parse(
    const ::std::string& name, SC_ChatRoom_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ChatRoom_MsgID>(
    SC_ChatRoom_MsgID_descriptor(), name, value);
}
enum CS_ChatTable_MsgID {
  CS_ChatTable_MsgID_ID = 2208
};
bool CS_ChatTable_MsgID_IsValid(int value);
const CS_ChatTable_MsgID CS_ChatTable_MsgID_MsgID_MIN = CS_ChatTable_MsgID_ID;
const CS_ChatTable_MsgID CS_ChatTable_MsgID_MsgID_MAX = CS_ChatTable_MsgID_ID;
const int CS_ChatTable_MsgID_MsgID_ARRAYSIZE = CS_ChatTable_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ChatTable_MsgID_descriptor();
inline const ::std::string& CS_ChatTable_MsgID_Name(CS_ChatTable_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ChatTable_MsgID_descriptor(), value);
}
inline bool CS_ChatTable_MsgID_Parse(
    const ::std::string& name, CS_ChatTable_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ChatTable_MsgID>(
    CS_ChatTable_MsgID_descriptor(), name, value);
}
enum SC_ChatTable_MsgID {
  SC_ChatTable_MsgID_ID = 2209
};
bool SC_ChatTable_MsgID_IsValid(int value);
const SC_ChatTable_MsgID SC_ChatTable_MsgID_MsgID_MIN = SC_ChatTable_MsgID_ID;
const SC_ChatTable_MsgID SC_ChatTable_MsgID_MsgID_MAX = SC_ChatTable_MsgID_ID;
const int SC_ChatTable_MsgID_MsgID_ARRAYSIZE = SC_ChatTable_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ChatTable_MsgID_descriptor();
inline const ::std::string& SC_ChatTable_MsgID_Name(SC_ChatTable_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ChatTable_MsgID_descriptor(), value);
}
inline bool SC_ChatTable_MsgID_Parse(
    const ::std::string& name, SC_ChatTable_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ChatTable_MsgID>(
    SC_ChatTable_MsgID_descriptor(), name, value);
}
enum SC_Marquee_MsgID {
  SC_Marquee_MsgID_ID = 2210
};
bool SC_Marquee_MsgID_IsValid(int value);
const SC_Marquee_MsgID SC_Marquee_MsgID_MsgID_MIN = SC_Marquee_MsgID_ID;
const SC_Marquee_MsgID SC_Marquee_MsgID_MsgID_MAX = SC_Marquee_MsgID_ID;
const int SC_Marquee_MsgID_MsgID_ARRAYSIZE = SC_Marquee_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_Marquee_MsgID_descriptor();
inline const ::std::string& SC_Marquee_MsgID_Name(SC_Marquee_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_Marquee_MsgID_descriptor(), value);
}
inline bool SC_Marquee_MsgID_Parse(
    const ::std::string& name, SC_Marquee_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_Marquee_MsgID>(
    SC_Marquee_MsgID_descriptor(), name, value);
}
enum CS_QueryPlayerMarquee_MsgID {
  CS_QueryPlayerMarquee_MsgID_ID = 2211
};
bool CS_QueryPlayerMarquee_MsgID_IsValid(int value);
const CS_QueryPlayerMarquee_MsgID CS_QueryPlayerMarquee_MsgID_MsgID_MIN = CS_QueryPlayerMarquee_MsgID_ID;
const CS_QueryPlayerMarquee_MsgID CS_QueryPlayerMarquee_MsgID_MsgID_MAX = CS_QueryPlayerMarquee_MsgID_ID;
const int CS_QueryPlayerMarquee_MsgID_MsgID_ARRAYSIZE = CS_QueryPlayerMarquee_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_QueryPlayerMarquee_MsgID_descriptor();
inline const ::std::string& CS_QueryPlayerMarquee_MsgID_Name(CS_QueryPlayerMarquee_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_QueryPlayerMarquee_MsgID_descriptor(), value);
}
inline bool CS_QueryPlayerMarquee_MsgID_Parse(
    const ::std::string& name, CS_QueryPlayerMarquee_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_QueryPlayerMarquee_MsgID>(
    CS_QueryPlayerMarquee_MsgID_descriptor(), name, value);
}
enum SC_QueryPlayerMarquee_MsgID {
  SC_QueryPlayerMarquee_MsgID_ID = 2212
};
bool SC_QueryPlayerMarquee_MsgID_IsValid(int value);
const SC_QueryPlayerMarquee_MsgID SC_QueryPlayerMarquee_MsgID_MsgID_MIN = SC_QueryPlayerMarquee_MsgID_ID;
const SC_QueryPlayerMarquee_MsgID SC_QueryPlayerMarquee_MsgID_MsgID_MAX = SC_QueryPlayerMarquee_MsgID_ID;
const int SC_QueryPlayerMarquee_MsgID_MsgID_ARRAYSIZE = SC_QueryPlayerMarquee_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_QueryPlayerMarquee_MsgID_descriptor();
inline const ::std::string& SC_QueryPlayerMarquee_MsgID_Name(SC_QueryPlayerMarquee_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_QueryPlayerMarquee_MsgID_descriptor(), value);
}
inline bool SC_QueryPlayerMarquee_MsgID_Parse(
    const ::std::string& name, SC_QueryPlayerMarquee_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_QueryPlayerMarquee_MsgID>(
    SC_QueryPlayerMarquee_MsgID_descriptor(), name, value);
}
enum SC_NewMarquee_MsgID {
  SC_NewMarquee_MsgID_ID = 2213
};
bool SC_NewMarquee_MsgID_IsValid(int value);
const SC_NewMarquee_MsgID SC_NewMarquee_MsgID_MsgID_MIN = SC_NewMarquee_MsgID_ID;
const SC_NewMarquee_MsgID SC_NewMarquee_MsgID_MsgID_MAX = SC_NewMarquee_MsgID_ID;
const int SC_NewMarquee_MsgID_MsgID_ARRAYSIZE = SC_NewMarquee_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_NewMarquee_MsgID_descriptor();
inline const ::std::string& SC_NewMarquee_MsgID_Name(SC_NewMarquee_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_NewMarquee_MsgID_descriptor(), value);
}
inline bool SC_NewMarquee_MsgID_Parse(
    const ::std::string& name, SC_NewMarquee_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_NewMarquee_MsgID>(
    SC_NewMarquee_MsgID_descriptor(), name, value);
}
enum CS_SendMail_MsgID {
  CS_SendMail_MsgID_ID = 2280
};
bool CS_SendMail_MsgID_IsValid(int value);
const CS_SendMail_MsgID CS_SendMail_MsgID_MsgID_MIN = CS_SendMail_MsgID_ID;
const CS_SendMail_MsgID CS_SendMail_MsgID_MsgID_MAX = CS_SendMail_MsgID_ID;
const int CS_SendMail_MsgID_MsgID_ARRAYSIZE = CS_SendMail_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_SendMail_MsgID_descriptor();
inline const ::std::string& CS_SendMail_MsgID_Name(CS_SendMail_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_SendMail_MsgID_descriptor(), value);
}
inline bool CS_SendMail_MsgID_Parse(
    const ::std::string& name, CS_SendMail_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_SendMail_MsgID>(
    CS_SendMail_MsgID_descriptor(), name, value);
}
enum SC_SendMail_MsgID {
  SC_SendMail_MsgID_ID = 2281
};
bool SC_SendMail_MsgID_IsValid(int value);
const SC_SendMail_MsgID SC_SendMail_MsgID_MsgID_MIN = SC_SendMail_MsgID_ID;
const SC_SendMail_MsgID SC_SendMail_MsgID_MsgID_MAX = SC_SendMail_MsgID_ID;
const int SC_SendMail_MsgID_MsgID_ARRAYSIZE = SC_SendMail_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_SendMail_MsgID_descriptor();
inline const ::std::string& SC_SendMail_MsgID_Name(SC_SendMail_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_SendMail_MsgID_descriptor(), value);
}
inline bool SC_SendMail_MsgID_Parse(
    const ::std::string& name, SC_SendMail_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_SendMail_MsgID>(
    SC_SendMail_MsgID_descriptor(), name, value);
}
enum SC_RecviceMail_MsgID {
  SC_RecviceMail_MsgID_ID = 2282
};
bool SC_RecviceMail_MsgID_IsValid(int value);
const SC_RecviceMail_MsgID SC_RecviceMail_MsgID_MsgID_MIN = SC_RecviceMail_MsgID_ID;
const SC_RecviceMail_MsgID SC_RecviceMail_MsgID_MsgID_MAX = SC_RecviceMail_MsgID_ID;
const int SC_RecviceMail_MsgID_MsgID_ARRAYSIZE = SC_RecviceMail_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_RecviceMail_MsgID_descriptor();
inline const ::std::string& SC_RecviceMail_MsgID_Name(SC_RecviceMail_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_RecviceMail_MsgID_descriptor(), value);
}
inline bool SC_RecviceMail_MsgID_Parse(
    const ::std::string& name, SC_RecviceMail_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_RecviceMail_MsgID>(
    SC_RecviceMail_MsgID_descriptor(), name, value);
}
enum CS_DelMail_MsgID {
  CS_DelMail_MsgID_ID = 2285
};
bool CS_DelMail_MsgID_IsValid(int value);
const CS_DelMail_MsgID CS_DelMail_MsgID_MsgID_MIN = CS_DelMail_MsgID_ID;
const CS_DelMail_MsgID CS_DelMail_MsgID_MsgID_MAX = CS_DelMail_MsgID_ID;
const int CS_DelMail_MsgID_MsgID_ARRAYSIZE = CS_DelMail_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_DelMail_MsgID_descriptor();
inline const ::std::string& CS_DelMail_MsgID_Name(CS_DelMail_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_DelMail_MsgID_descriptor(), value);
}
inline bool CS_DelMail_MsgID_Parse(
    const ::std::string& name, CS_DelMail_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_DelMail_MsgID>(
    CS_DelMail_MsgID_descriptor(), name, value);
}
enum SC_DelMail_MsgID {
  SC_DelMail_MsgID_ID = 2286
};
bool SC_DelMail_MsgID_IsValid(int value);
const SC_DelMail_MsgID SC_DelMail_MsgID_MsgID_MIN = SC_DelMail_MsgID_ID;
const SC_DelMail_MsgID SC_DelMail_MsgID_MsgID_MAX = SC_DelMail_MsgID_ID;
const int SC_DelMail_MsgID_MsgID_ARRAYSIZE = SC_DelMail_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_DelMail_MsgID_descriptor();
inline const ::std::string& SC_DelMail_MsgID_Name(SC_DelMail_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_DelMail_MsgID_descriptor(), value);
}
inline bool SC_DelMail_MsgID_Parse(
    const ::std::string& name, SC_DelMail_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_DelMail_MsgID>(
    SC_DelMail_MsgID_descriptor(), name, value);
}
enum CS_ReceiveMailAttachment_MsgID {
  CS_ReceiveMailAttachment_MsgID_ID = 2287
};
bool CS_ReceiveMailAttachment_MsgID_IsValid(int value);
const CS_ReceiveMailAttachment_MsgID CS_ReceiveMailAttachment_MsgID_MsgID_MIN = CS_ReceiveMailAttachment_MsgID_ID;
const CS_ReceiveMailAttachment_MsgID CS_ReceiveMailAttachment_MsgID_MsgID_MAX = CS_ReceiveMailAttachment_MsgID_ID;
const int CS_ReceiveMailAttachment_MsgID_MsgID_ARRAYSIZE = CS_ReceiveMailAttachment_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ReceiveMailAttachment_MsgID_descriptor();
inline const ::std::string& CS_ReceiveMailAttachment_MsgID_Name(CS_ReceiveMailAttachment_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ReceiveMailAttachment_MsgID_descriptor(), value);
}
inline bool CS_ReceiveMailAttachment_MsgID_Parse(
    const ::std::string& name, CS_ReceiveMailAttachment_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ReceiveMailAttachment_MsgID>(
    CS_ReceiveMailAttachment_MsgID_descriptor(), name, value);
}
enum SC_ReceiveMailAttachment_MsgID {
  SC_ReceiveMailAttachment_MsgID_ID = 2288
};
bool SC_ReceiveMailAttachment_MsgID_IsValid(int value);
const SC_ReceiveMailAttachment_MsgID SC_ReceiveMailAttachment_MsgID_MsgID_MIN = SC_ReceiveMailAttachment_MsgID_ID;
const SC_ReceiveMailAttachment_MsgID SC_ReceiveMailAttachment_MsgID_MsgID_MAX = SC_ReceiveMailAttachment_MsgID_ID;
const int SC_ReceiveMailAttachment_MsgID_MsgID_ARRAYSIZE = SC_ReceiveMailAttachment_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ReceiveMailAttachment_MsgID_descriptor();
inline const ::std::string& SC_ReceiveMailAttachment_MsgID_Name(SC_ReceiveMailAttachment_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ReceiveMailAttachment_MsgID_descriptor(), value);
}
inline bool SC_ReceiveMailAttachment_MsgID_Parse(
    const ::std::string& name, SC_ReceiveMailAttachment_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ReceiveMailAttachment_MsgID>(
    SC_ReceiveMailAttachment_MsgID_descriptor(), name, value);
}
enum CS_ReceiveRewardLogin_MsgID {
  CS_ReceiveRewardLogin_MsgID_ID = 2300
};
bool CS_ReceiveRewardLogin_MsgID_IsValid(int value);
const CS_ReceiveRewardLogin_MsgID CS_ReceiveRewardLogin_MsgID_MsgID_MIN = CS_ReceiveRewardLogin_MsgID_ID;
const CS_ReceiveRewardLogin_MsgID CS_ReceiveRewardLogin_MsgID_MsgID_MAX = CS_ReceiveRewardLogin_MsgID_ID;
const int CS_ReceiveRewardLogin_MsgID_MsgID_ARRAYSIZE = CS_ReceiveRewardLogin_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ReceiveRewardLogin_MsgID_descriptor();
inline const ::std::string& CS_ReceiveRewardLogin_MsgID_Name(CS_ReceiveRewardLogin_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ReceiveRewardLogin_MsgID_descriptor(), value);
}
inline bool CS_ReceiveRewardLogin_MsgID_Parse(
    const ::std::string& name, CS_ReceiveRewardLogin_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ReceiveRewardLogin_MsgID>(
    CS_ReceiveRewardLogin_MsgID_descriptor(), name, value);
}
enum SC_ReceiveRewardLogin_MsgID {
  SC_ReceiveRewardLogin_MsgID_ID = 2301
};
bool SC_ReceiveRewardLogin_MsgID_IsValid(int value);
const SC_ReceiveRewardLogin_MsgID SC_ReceiveRewardLogin_MsgID_MsgID_MIN = SC_ReceiveRewardLogin_MsgID_ID;
const SC_ReceiveRewardLogin_MsgID SC_ReceiveRewardLogin_MsgID_MsgID_MAX = SC_ReceiveRewardLogin_MsgID_ID;
const int SC_ReceiveRewardLogin_MsgID_MsgID_ARRAYSIZE = SC_ReceiveRewardLogin_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ReceiveRewardLogin_MsgID_descriptor();
inline const ::std::string& SC_ReceiveRewardLogin_MsgID_Name(SC_ReceiveRewardLogin_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ReceiveRewardLogin_MsgID_descriptor(), value);
}
inline bool SC_ReceiveRewardLogin_MsgID_Parse(
    const ::std::string& name, SC_ReceiveRewardLogin_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ReceiveRewardLogin_MsgID>(
    SC_ReceiveRewardLogin_MsgID_descriptor(), name, value);
}
enum CS_ReceiveRewardOnline_MsgID {
  CS_ReceiveRewardOnline_MsgID_ID = 2302
};
bool CS_ReceiveRewardOnline_MsgID_IsValid(int value);
const CS_ReceiveRewardOnline_MsgID CS_ReceiveRewardOnline_MsgID_MsgID_MIN = CS_ReceiveRewardOnline_MsgID_ID;
const CS_ReceiveRewardOnline_MsgID CS_ReceiveRewardOnline_MsgID_MsgID_MAX = CS_ReceiveRewardOnline_MsgID_ID;
const int CS_ReceiveRewardOnline_MsgID_MsgID_ARRAYSIZE = CS_ReceiveRewardOnline_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ReceiveRewardOnline_MsgID_descriptor();
inline const ::std::string& CS_ReceiveRewardOnline_MsgID_Name(CS_ReceiveRewardOnline_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ReceiveRewardOnline_MsgID_descriptor(), value);
}
inline bool CS_ReceiveRewardOnline_MsgID_Parse(
    const ::std::string& name, CS_ReceiveRewardOnline_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ReceiveRewardOnline_MsgID>(
    CS_ReceiveRewardOnline_MsgID_descriptor(), name, value);
}
enum SC_ReceiveRewardOnline_MsgID {
  SC_ReceiveRewardOnline_MsgID_ID = 2303
};
bool SC_ReceiveRewardOnline_MsgID_IsValid(int value);
const SC_ReceiveRewardOnline_MsgID SC_ReceiveRewardOnline_MsgID_MsgID_MIN = SC_ReceiveRewardOnline_MsgID_ID;
const SC_ReceiveRewardOnline_MsgID SC_ReceiveRewardOnline_MsgID_MsgID_MAX = SC_ReceiveRewardOnline_MsgID_ID;
const int SC_ReceiveRewardOnline_MsgID_MsgID_ARRAYSIZE = SC_ReceiveRewardOnline_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ReceiveRewardOnline_MsgID_descriptor();
inline const ::std::string& SC_ReceiveRewardOnline_MsgID_Name(SC_ReceiveRewardOnline_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ReceiveRewardOnline_MsgID_descriptor(), value);
}
inline bool SC_ReceiveRewardOnline_MsgID_Parse(
    const ::std::string& name, SC_ReceiveRewardOnline_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ReceiveRewardOnline_MsgID>(
    SC_ReceiveRewardOnline_MsgID_descriptor(), name, value);
}
enum CS_ReceiveReliefPayment_MsgID {
  CS_ReceiveReliefPayment_MsgID_ID = 2304
};
bool CS_ReceiveReliefPayment_MsgID_IsValid(int value);
const CS_ReceiveReliefPayment_MsgID CS_ReceiveReliefPayment_MsgID_MsgID_MIN = CS_ReceiveReliefPayment_MsgID_ID;
const CS_ReceiveReliefPayment_MsgID CS_ReceiveReliefPayment_MsgID_MsgID_MAX = CS_ReceiveReliefPayment_MsgID_ID;
const int CS_ReceiveReliefPayment_MsgID_MsgID_ARRAYSIZE = CS_ReceiveReliefPayment_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ReceiveReliefPayment_MsgID_descriptor();
inline const ::std::string& CS_ReceiveReliefPayment_MsgID_Name(CS_ReceiveReliefPayment_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ReceiveReliefPayment_MsgID_descriptor(), value);
}
inline bool CS_ReceiveReliefPayment_MsgID_Parse(
    const ::std::string& name, CS_ReceiveReliefPayment_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ReceiveReliefPayment_MsgID>(
    CS_ReceiveReliefPayment_MsgID_descriptor(), name, value);
}
enum SC_ReceiveReliefPayment_MsgID {
  SC_ReceiveReliefPayment_MsgID_ID = 2305
};
bool SC_ReceiveReliefPayment_MsgID_IsValid(int value);
const SC_ReceiveReliefPayment_MsgID SC_ReceiveReliefPayment_MsgID_MsgID_MIN = SC_ReceiveReliefPayment_MsgID_ID;
const SC_ReceiveReliefPayment_MsgID SC_ReceiveReliefPayment_MsgID_MsgID_MAX = SC_ReceiveReliefPayment_MsgID_ID;
const int SC_ReceiveReliefPayment_MsgID_MsgID_ARRAYSIZE = SC_ReceiveReliefPayment_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ReceiveReliefPayment_MsgID_descriptor();
inline const ::std::string& SC_ReceiveReliefPayment_MsgID_Name(SC_ReceiveReliefPayment_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ReceiveReliefPayment_MsgID_descriptor(), value);
}
inline bool SC_ReceiveReliefPayment_MsgID_Parse(
    const ::std::string& name, SC_ReceiveReliefPayment_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ReceiveReliefPayment_MsgID>(
    SC_ReceiveReliefPayment_MsgID_descriptor(), name, value);
}
enum CE_RequestRank_MsgID {
  CE_RequestRank_MsgID_ID = 2400
};
bool CE_RequestRank_MsgID_IsValid(int value);
const CE_RequestRank_MsgID CE_RequestRank_MsgID_MsgID_MIN = CE_RequestRank_MsgID_ID;
const CE_RequestRank_MsgID CE_RequestRank_MsgID_MsgID_MAX = CE_RequestRank_MsgID_ID;
const int CE_RequestRank_MsgID_MsgID_ARRAYSIZE = CE_RequestRank_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CE_RequestRank_MsgID_descriptor();
inline const ::std::string& CE_RequestRank_MsgID_Name(CE_RequestRank_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CE_RequestRank_MsgID_descriptor(), value);
}
inline bool CE_RequestRank_MsgID_Parse(
    const ::std::string& name, CE_RequestRank_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CE_RequestRank_MsgID>(
    CE_RequestRank_MsgID_descriptor(), name, value);
}
enum EC_ReplyRank_MsgID {
  EC_ReplyRank_MsgID_ID = 2401
};
bool EC_ReplyRank_MsgID_IsValid(int value);
const EC_ReplyRank_MsgID EC_ReplyRank_MsgID_MsgID_MIN = EC_ReplyRank_MsgID_ID;
const EC_ReplyRank_MsgID EC_ReplyRank_MsgID_MsgID_MAX = EC_ReplyRank_MsgID_ID;
const int EC_ReplyRank_MsgID_MsgID_ARRAYSIZE = EC_ReplyRank_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* EC_ReplyRank_MsgID_descriptor();
inline const ::std::string& EC_ReplyRank_MsgID_Name(EC_ReplyRank_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    EC_ReplyRank_MsgID_descriptor(), value);
}
inline bool EC_ReplyRank_MsgID_Parse(
    const ::std::string& name, EC_ReplyRank_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EC_ReplyRank_MsgID>(
    EC_ReplyRank_MsgID_descriptor(), name, value);
}
enum CS_EnterRoom_MsgID {
  CS_EnterRoom_MsgID_ID = 11000
};
bool CS_EnterRoom_MsgID_IsValid(int value);
const CS_EnterRoom_MsgID CS_EnterRoom_MsgID_MsgID_MIN = CS_EnterRoom_MsgID_ID;
const CS_EnterRoom_MsgID CS_EnterRoom_MsgID_MsgID_MAX = CS_EnterRoom_MsgID_ID;
const int CS_EnterRoom_MsgID_MsgID_ARRAYSIZE = CS_EnterRoom_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_EnterRoom_MsgID_descriptor();
inline const ::std::string& CS_EnterRoom_MsgID_Name(CS_EnterRoom_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_EnterRoom_MsgID_descriptor(), value);
}
inline bool CS_EnterRoom_MsgID_Parse(
    const ::std::string& name, CS_EnterRoom_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_EnterRoom_MsgID>(
    CS_EnterRoom_MsgID_descriptor(), name, value);
}
enum SC_EnterRoom_MsgID {
  SC_EnterRoom_MsgID_ID = 11001
};
bool SC_EnterRoom_MsgID_IsValid(int value);
const SC_EnterRoom_MsgID SC_EnterRoom_MsgID_MsgID_MIN = SC_EnterRoom_MsgID_ID;
const SC_EnterRoom_MsgID SC_EnterRoom_MsgID_MsgID_MAX = SC_EnterRoom_MsgID_ID;
const int SC_EnterRoom_MsgID_MsgID_ARRAYSIZE = SC_EnterRoom_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_EnterRoom_MsgID_descriptor();
inline const ::std::string& SC_EnterRoom_MsgID_Name(SC_EnterRoom_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_EnterRoom_MsgID_descriptor(), value);
}
inline bool SC_EnterRoom_MsgID_Parse(
    const ::std::string& name, SC_EnterRoom_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_EnterRoom_MsgID>(
    SC_EnterRoom_MsgID_descriptor(), name, value);
}
enum SC_NotifyEnterRoom_MsgID {
  SC_NotifyEnterRoom_MsgID_ID = 11002
};
bool SC_NotifyEnterRoom_MsgID_IsValid(int value);
const SC_NotifyEnterRoom_MsgID SC_NotifyEnterRoom_MsgID_MsgID_MIN = SC_NotifyEnterRoom_MsgID_ID;
const SC_NotifyEnterRoom_MsgID SC_NotifyEnterRoom_MsgID_MsgID_MAX = SC_NotifyEnterRoom_MsgID_ID;
const int SC_NotifyEnterRoom_MsgID_MsgID_ARRAYSIZE = SC_NotifyEnterRoom_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_NotifyEnterRoom_MsgID_descriptor();
inline const ::std::string& SC_NotifyEnterRoom_MsgID_Name(SC_NotifyEnterRoom_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_NotifyEnterRoom_MsgID_descriptor(), value);
}
inline bool SC_NotifyEnterRoom_MsgID_Parse(
    const ::std::string& name, SC_NotifyEnterRoom_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_NotifyEnterRoom_MsgID>(
    SC_NotifyEnterRoom_MsgID_descriptor(), name, value);
}
enum CS_ExitRoom_MsgID {
  CS_ExitRoom_MsgID_ID = 11003
};
bool CS_ExitRoom_MsgID_IsValid(int value);
const CS_ExitRoom_MsgID CS_ExitRoom_MsgID_MsgID_MIN = CS_ExitRoom_MsgID_ID;
const CS_ExitRoom_MsgID CS_ExitRoom_MsgID_MsgID_MAX = CS_ExitRoom_MsgID_ID;
const int CS_ExitRoom_MsgID_MsgID_ARRAYSIZE = CS_ExitRoom_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ExitRoom_MsgID_descriptor();
inline const ::std::string& CS_ExitRoom_MsgID_Name(CS_ExitRoom_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ExitRoom_MsgID_descriptor(), value);
}
inline bool CS_ExitRoom_MsgID_Parse(
    const ::std::string& name, CS_ExitRoom_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ExitRoom_MsgID>(
    CS_ExitRoom_MsgID_descriptor(), name, value);
}
enum SC_ExitRoom_MsgID {
  SC_ExitRoom_MsgID_ID = 11004
};
bool SC_ExitRoom_MsgID_IsValid(int value);
const SC_ExitRoom_MsgID SC_ExitRoom_MsgID_MsgID_MIN = SC_ExitRoom_MsgID_ID;
const SC_ExitRoom_MsgID SC_ExitRoom_MsgID_MsgID_MAX = SC_ExitRoom_MsgID_ID;
const int SC_ExitRoom_MsgID_MsgID_ARRAYSIZE = SC_ExitRoom_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ExitRoom_MsgID_descriptor();
inline const ::std::string& SC_ExitRoom_MsgID_Name(SC_ExitRoom_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ExitRoom_MsgID_descriptor(), value);
}
inline bool SC_ExitRoom_MsgID_Parse(
    const ::std::string& name, SC_ExitRoom_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ExitRoom_MsgID>(
    SC_ExitRoom_MsgID_descriptor(), name, value);
}
enum SC_NotifyExitRoom_MsgID {
  SC_NotifyExitRoom_MsgID_ID = 11005
};
bool SC_NotifyExitRoom_MsgID_IsValid(int value);
const SC_NotifyExitRoom_MsgID SC_NotifyExitRoom_MsgID_MsgID_MIN = SC_NotifyExitRoom_MsgID_ID;
const SC_NotifyExitRoom_MsgID SC_NotifyExitRoom_MsgID_MsgID_MAX = SC_NotifyExitRoom_MsgID_ID;
const int SC_NotifyExitRoom_MsgID_MsgID_ARRAYSIZE = SC_NotifyExitRoom_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_NotifyExitRoom_MsgID_descriptor();
inline const ::std::string& SC_NotifyExitRoom_MsgID_Name(SC_NotifyExitRoom_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_NotifyExitRoom_MsgID_descriptor(), value);
}
inline bool SC_NotifyExitRoom_MsgID_Parse(
    const ::std::string& name, SC_NotifyExitRoom_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_NotifyExitRoom_MsgID>(
    SC_NotifyExitRoom_MsgID_descriptor(), name, value);
}
enum CS_AutoEnterRoom_MsgID {
  CS_AutoEnterRoom_MsgID_ID = 11006
};
bool CS_AutoEnterRoom_MsgID_IsValid(int value);
const CS_AutoEnterRoom_MsgID CS_AutoEnterRoom_MsgID_MsgID_MIN = CS_AutoEnterRoom_MsgID_ID;
const CS_AutoEnterRoom_MsgID CS_AutoEnterRoom_MsgID_MsgID_MAX = CS_AutoEnterRoom_MsgID_ID;
const int CS_AutoEnterRoom_MsgID_MsgID_ARRAYSIZE = CS_AutoEnterRoom_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_AutoEnterRoom_MsgID_descriptor();
inline const ::std::string& CS_AutoEnterRoom_MsgID_Name(CS_AutoEnterRoom_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_AutoEnterRoom_MsgID_descriptor(), value);
}
inline bool CS_AutoEnterRoom_MsgID_Parse(
    const ::std::string& name, CS_AutoEnterRoom_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_AutoEnterRoom_MsgID>(
    CS_AutoEnterRoom_MsgID_descriptor(), name, value);
}
enum CS_AutoSitDown_MsgID {
  CS_AutoSitDown_MsgID_ID = 11010
};
bool CS_AutoSitDown_MsgID_IsValid(int value);
const CS_AutoSitDown_MsgID CS_AutoSitDown_MsgID_MsgID_MIN = CS_AutoSitDown_MsgID_ID;
const CS_AutoSitDown_MsgID CS_AutoSitDown_MsgID_MsgID_MAX = CS_AutoSitDown_MsgID_ID;
const int CS_AutoSitDown_MsgID_MsgID_ARRAYSIZE = CS_AutoSitDown_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_AutoSitDown_MsgID_descriptor();
inline const ::std::string& CS_AutoSitDown_MsgID_Name(CS_AutoSitDown_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_AutoSitDown_MsgID_descriptor(), value);
}
inline bool CS_AutoSitDown_MsgID_Parse(
    const ::std::string& name, CS_AutoSitDown_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_AutoSitDown_MsgID>(
    CS_AutoSitDown_MsgID_descriptor(), name, value);
}
enum CS_SitDown_MsgID {
  CS_SitDown_MsgID_ID = 11011
};
bool CS_SitDown_MsgID_IsValid(int value);
const CS_SitDown_MsgID CS_SitDown_MsgID_MsgID_MIN = CS_SitDown_MsgID_ID;
const CS_SitDown_MsgID CS_SitDown_MsgID_MsgID_MAX = CS_SitDown_MsgID_ID;
const int CS_SitDown_MsgID_MsgID_ARRAYSIZE = CS_SitDown_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_SitDown_MsgID_descriptor();
inline const ::std::string& CS_SitDown_MsgID_Name(CS_SitDown_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_SitDown_MsgID_descriptor(), value);
}
inline bool CS_SitDown_MsgID_Parse(
    const ::std::string& name, CS_SitDown_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_SitDown_MsgID>(
    CS_SitDown_MsgID_descriptor(), name, value);
}
enum SC_SitDown_MsgID {
  SC_SitDown_MsgID_ID = 11012
};
bool SC_SitDown_MsgID_IsValid(int value);
const SC_SitDown_MsgID SC_SitDown_MsgID_MsgID_MIN = SC_SitDown_MsgID_ID;
const SC_SitDown_MsgID SC_SitDown_MsgID_MsgID_MAX = SC_SitDown_MsgID_ID;
const int SC_SitDown_MsgID_MsgID_ARRAYSIZE = SC_SitDown_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_SitDown_MsgID_descriptor();
inline const ::std::string& SC_SitDown_MsgID_Name(SC_SitDown_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_SitDown_MsgID_descriptor(), value);
}
inline bool SC_SitDown_MsgID_Parse(
    const ::std::string& name, SC_SitDown_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_SitDown_MsgID>(
    SC_SitDown_MsgID_descriptor(), name, value);
}
enum SC_NotifySitDown_MsgID {
  SC_NotifySitDown_MsgID_ID = 11013
};
bool SC_NotifySitDown_MsgID_IsValid(int value);
const SC_NotifySitDown_MsgID SC_NotifySitDown_MsgID_MsgID_MIN = SC_NotifySitDown_MsgID_ID;
const SC_NotifySitDown_MsgID SC_NotifySitDown_MsgID_MsgID_MAX = SC_NotifySitDown_MsgID_ID;
const int SC_NotifySitDown_MsgID_MsgID_ARRAYSIZE = SC_NotifySitDown_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_NotifySitDown_MsgID_descriptor();
inline const ::std::string& SC_NotifySitDown_MsgID_Name(SC_NotifySitDown_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_NotifySitDown_MsgID_descriptor(), value);
}
inline bool SC_NotifySitDown_MsgID_Parse(
    const ::std::string& name, SC_NotifySitDown_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_NotifySitDown_MsgID>(
    SC_NotifySitDown_MsgID_descriptor(), name, value);
}
enum CS_StandUp_MsgID {
  CS_StandUp_MsgID_ID = 11020
};
bool CS_StandUp_MsgID_IsValid(int value);
const CS_StandUp_MsgID CS_StandUp_MsgID_MsgID_MIN = CS_StandUp_MsgID_ID;
const CS_StandUp_MsgID CS_StandUp_MsgID_MsgID_MAX = CS_StandUp_MsgID_ID;
const int CS_StandUp_MsgID_MsgID_ARRAYSIZE = CS_StandUp_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_StandUp_MsgID_descriptor();
inline const ::std::string& CS_StandUp_MsgID_Name(CS_StandUp_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_StandUp_MsgID_descriptor(), value);
}
inline bool CS_StandUp_MsgID_Parse(
    const ::std::string& name, CS_StandUp_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_StandUp_MsgID>(
    CS_StandUp_MsgID_descriptor(), name, value);
}
enum SC_StandUp_MsgID {
  SC_StandUp_MsgID_ID = 11021
};
bool SC_StandUp_MsgID_IsValid(int value);
const SC_StandUp_MsgID SC_StandUp_MsgID_MsgID_MIN = SC_StandUp_MsgID_ID;
const SC_StandUp_MsgID SC_StandUp_MsgID_MsgID_MAX = SC_StandUp_MsgID_ID;
const int SC_StandUp_MsgID_MsgID_ARRAYSIZE = SC_StandUp_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_StandUp_MsgID_descriptor();
inline const ::std::string& SC_StandUp_MsgID_Name(SC_StandUp_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_StandUp_MsgID_descriptor(), value);
}
inline bool SC_StandUp_MsgID_Parse(
    const ::std::string& name, SC_StandUp_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_StandUp_MsgID>(
    SC_StandUp_MsgID_descriptor(), name, value);
}
enum SC_NotifyStandUp_MsgID {
  SC_NotifyStandUp_MsgID_ID = 11022
};
bool SC_NotifyStandUp_MsgID_IsValid(int value);
const SC_NotifyStandUp_MsgID SC_NotifyStandUp_MsgID_MsgID_MIN = SC_NotifyStandUp_MsgID_ID;
const SC_NotifyStandUp_MsgID SC_NotifyStandUp_MsgID_MsgID_MAX = SC_NotifyStandUp_MsgID_ID;
const int SC_NotifyStandUp_MsgID_MsgID_ARRAYSIZE = SC_NotifyStandUp_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_NotifyStandUp_MsgID_descriptor();
inline const ::std::string& SC_NotifyStandUp_MsgID_Name(SC_NotifyStandUp_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_NotifyStandUp_MsgID_descriptor(), value);
}
inline bool SC_NotifyStandUp_MsgID_Parse(
    const ::std::string& name, SC_NotifyStandUp_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_NotifyStandUp_MsgID>(
    SC_NotifyStandUp_MsgID_descriptor(), name, value);
}
enum CS_EnterRoomAndSitDown_MsgID {
  CS_EnterRoomAndSitDown_MsgID_ID = 11030
};
bool CS_EnterRoomAndSitDown_MsgID_IsValid(int value);
const CS_EnterRoomAndSitDown_MsgID CS_EnterRoomAndSitDown_MsgID_MsgID_MIN = CS_EnterRoomAndSitDown_MsgID_ID;
const CS_EnterRoomAndSitDown_MsgID CS_EnterRoomAndSitDown_MsgID_MsgID_MAX = CS_EnterRoomAndSitDown_MsgID_ID;
const int CS_EnterRoomAndSitDown_MsgID_MsgID_ARRAYSIZE = CS_EnterRoomAndSitDown_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_EnterRoomAndSitDown_MsgID_descriptor();
inline const ::std::string& CS_EnterRoomAndSitDown_MsgID_Name(CS_EnterRoomAndSitDown_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_EnterRoomAndSitDown_MsgID_descriptor(), value);
}
inline bool CS_EnterRoomAndSitDown_MsgID_Parse(
    const ::std::string& name, CS_EnterRoomAndSitDown_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_EnterRoomAndSitDown_MsgID>(
    CS_EnterRoomAndSitDown_MsgID_descriptor(), name, value);
}
enum SC_EnterRoomAndSitDown_MsgID {
  SC_EnterRoomAndSitDown_MsgID_ID = 11031
};
bool SC_EnterRoomAndSitDown_MsgID_IsValid(int value);
const SC_EnterRoomAndSitDown_MsgID SC_EnterRoomAndSitDown_MsgID_MsgID_MIN = SC_EnterRoomAndSitDown_MsgID_ID;
const SC_EnterRoomAndSitDown_MsgID SC_EnterRoomAndSitDown_MsgID_MsgID_MAX = SC_EnterRoomAndSitDown_MsgID_ID;
const int SC_EnterRoomAndSitDown_MsgID_MsgID_ARRAYSIZE = SC_EnterRoomAndSitDown_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_EnterRoomAndSitDown_MsgID_descriptor();
inline const ::std::string& SC_EnterRoomAndSitDown_MsgID_Name(SC_EnterRoomAndSitDown_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_EnterRoomAndSitDown_MsgID_descriptor(), value);
}
inline bool SC_EnterRoomAndSitDown_MsgID_Parse(
    const ::std::string& name, SC_EnterRoomAndSitDown_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_EnterRoomAndSitDown_MsgID>(
    SC_EnterRoomAndSitDown_MsgID_descriptor(), name, value);
}
enum CS_StandUpAndExitRoom_MsgID {
  CS_StandUpAndExitRoom_MsgID_ID = 11032
};
bool CS_StandUpAndExitRoom_MsgID_IsValid(int value);
const CS_StandUpAndExitRoom_MsgID CS_StandUpAndExitRoom_MsgID_MsgID_MIN = CS_StandUpAndExitRoom_MsgID_ID;
const CS_StandUpAndExitRoom_MsgID CS_StandUpAndExitRoom_MsgID_MsgID_MAX = CS_StandUpAndExitRoom_MsgID_ID;
const int CS_StandUpAndExitRoom_MsgID_MsgID_ARRAYSIZE = CS_StandUpAndExitRoom_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_StandUpAndExitRoom_MsgID_descriptor();
inline const ::std::string& CS_StandUpAndExitRoom_MsgID_Name(CS_StandUpAndExitRoom_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_StandUpAndExitRoom_MsgID_descriptor(), value);
}
inline bool CS_StandUpAndExitRoom_MsgID_Parse(
    const ::std::string& name, CS_StandUpAndExitRoom_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_StandUpAndExitRoom_MsgID>(
    CS_StandUpAndExitRoom_MsgID_descriptor(), name, value);
}
enum SC_StandUpAndExitRoom_MsgID {
  SC_StandUpAndExitRoom_MsgID_ID = 11033
};
bool SC_StandUpAndExitRoom_MsgID_IsValid(int value);
const SC_StandUpAndExitRoom_MsgID SC_StandUpAndExitRoom_MsgID_MsgID_MIN = SC_StandUpAndExitRoom_MsgID_ID;
const SC_StandUpAndExitRoom_MsgID SC_StandUpAndExitRoom_MsgID_MsgID_MAX = SC_StandUpAndExitRoom_MsgID_ID;
const int SC_StandUpAndExitRoom_MsgID_MsgID_ARRAYSIZE = SC_StandUpAndExitRoom_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_StandUpAndExitRoom_MsgID_descriptor();
inline const ::std::string& SC_StandUpAndExitRoom_MsgID_Name(SC_StandUpAndExitRoom_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_StandUpAndExitRoom_MsgID_descriptor(), value);
}
inline bool SC_StandUpAndExitRoom_MsgID_Parse(
    const ::std::string& name, SC_StandUpAndExitRoom_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_StandUpAndExitRoom_MsgID>(
    SC_StandUpAndExitRoom_MsgID_descriptor(), name, value);
}
enum CS_ChangeChair_MsgID {
  CS_ChangeChair_MsgID_ID = 11034
};
bool CS_ChangeChair_MsgID_IsValid(int value);
const CS_ChangeChair_MsgID CS_ChangeChair_MsgID_MsgID_MIN = CS_ChangeChair_MsgID_ID;
const CS_ChangeChair_MsgID CS_ChangeChair_MsgID_MsgID_MAX = CS_ChangeChair_MsgID_ID;
const int CS_ChangeChair_MsgID_MsgID_ARRAYSIZE = CS_ChangeChair_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ChangeChair_MsgID_descriptor();
inline const ::std::string& CS_ChangeChair_MsgID_Name(CS_ChangeChair_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ChangeChair_MsgID_descriptor(), value);
}
inline bool CS_ChangeChair_MsgID_Parse(
    const ::std::string& name, CS_ChangeChair_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ChangeChair_MsgID>(
    CS_ChangeChair_MsgID_descriptor(), name, value);
}
enum SC_ChangeChair_MsgID {
  SC_ChangeChair_MsgID_ID = 11035
};
bool SC_ChangeChair_MsgID_IsValid(int value);
const SC_ChangeChair_MsgID SC_ChangeChair_MsgID_MsgID_MIN = SC_ChangeChair_MsgID_ID;
const SC_ChangeChair_MsgID SC_ChangeChair_MsgID_MsgID_MAX = SC_ChangeChair_MsgID_ID;
const int SC_ChangeChair_MsgID_MsgID_ARRAYSIZE = SC_ChangeChair_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ChangeChair_MsgID_descriptor();
inline const ::std::string& SC_ChangeChair_MsgID_Name(SC_ChangeChair_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ChangeChair_MsgID_descriptor(), value);
}
inline bool SC_ChangeChair_MsgID_Parse(
    const ::std::string& name, SC_ChangeChair_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ChangeChair_MsgID>(
    SC_ChangeChair_MsgID_descriptor(), name, value);
}
enum CS_ChangeTable_MsgID {
  CS_ChangeTable_MsgID_ID = 11036
};
bool CS_ChangeTable_MsgID_IsValid(int value);
const CS_ChangeTable_MsgID CS_ChangeTable_MsgID_MsgID_MIN = CS_ChangeTable_MsgID_ID;
const CS_ChangeTable_MsgID CS_ChangeTable_MsgID_MsgID_MAX = CS_ChangeTable_MsgID_ID;
const int CS_ChangeTable_MsgID_MsgID_ARRAYSIZE = CS_ChangeTable_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ChangeTable_MsgID_descriptor();
inline const ::std::string& CS_ChangeTable_MsgID_Name(CS_ChangeTable_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ChangeTable_MsgID_descriptor(), value);
}
inline bool CS_ChangeTable_MsgID_Parse(
    const ::std::string& name, CS_ChangeTable_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ChangeTable_MsgID>(
    CS_ChangeTable_MsgID_descriptor(), name, value);
}
enum CS_Ready_MsgID {
  CS_Ready_MsgID_ID = 11050
};
bool CS_Ready_MsgID_IsValid(int value);
const CS_Ready_MsgID CS_Ready_MsgID_MsgID_MIN = CS_Ready_MsgID_ID;
const CS_Ready_MsgID CS_Ready_MsgID_MsgID_MAX = CS_Ready_MsgID_ID;
const int CS_Ready_MsgID_MsgID_ARRAYSIZE = CS_Ready_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_Ready_MsgID_descriptor();
inline const ::std::string& CS_Ready_MsgID_Name(CS_Ready_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_Ready_MsgID_descriptor(), value);
}
inline bool CS_Ready_MsgID_Parse(
    const ::std::string& name, CS_Ready_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_Ready_MsgID>(
    CS_Ready_MsgID_descriptor(), name, value);
}
enum SC_Ready_MsgID {
  SC_Ready_MsgID_ID = 11051
};
bool SC_Ready_MsgID_IsValid(int value);
const SC_Ready_MsgID SC_Ready_MsgID_MsgID_MIN = SC_Ready_MsgID_ID;
const SC_Ready_MsgID SC_Ready_MsgID_MsgID_MAX = SC_Ready_MsgID_ID;
const int SC_Ready_MsgID_MsgID_ARRAYSIZE = SC_Ready_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_Ready_MsgID_descriptor();
inline const ::std::string& SC_Ready_MsgID_Name(SC_Ready_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_Ready_MsgID_descriptor(), value);
}
inline bool SC_Ready_MsgID_Parse(
    const ::std::string& name, SC_Ready_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_Ready_MsgID>(
    SC_Ready_MsgID_descriptor(), name, value);
}
enum CS_Exit_MsgID {
  CS_Exit_MsgID_ID = 11052
};
bool CS_Exit_MsgID_IsValid(int value);
const CS_Exit_MsgID CS_Exit_MsgID_MsgID_MIN = CS_Exit_MsgID_ID;
const CS_Exit_MsgID CS_Exit_MsgID_MsgID_MAX = CS_Exit_MsgID_ID;
const int CS_Exit_MsgID_MsgID_ARRAYSIZE = CS_Exit_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_Exit_MsgID_descriptor();
inline const ::std::string& CS_Exit_MsgID_Name(CS_Exit_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_Exit_MsgID_descriptor(), value);
}
inline bool CS_Exit_MsgID_Parse(
    const ::std::string& name, CS_Exit_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_Exit_MsgID>(
    CS_Exit_MsgID_descriptor(), name, value);
}
enum SC_ReadyFailed_MsgID {
  SC_ReadyFailed_MsgID_ID = 11053
};
bool SC_ReadyFailed_MsgID_IsValid(int value);
const SC_ReadyFailed_MsgID SC_ReadyFailed_MsgID_MsgID_MIN = SC_ReadyFailed_MsgID_ID;
const SC_ReadyFailed_MsgID SC_ReadyFailed_MsgID_MsgID_MAX = SC_ReadyFailed_MsgID_ID;
const int SC_ReadyFailed_MsgID_MsgID_ARRAYSIZE = SC_ReadyFailed_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ReadyFailed_MsgID_descriptor();
inline const ::std::string& SC_ReadyFailed_MsgID_Name(SC_ReadyFailed_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ReadyFailed_MsgID_descriptor(), value);
}
inline bool SC_ReadyFailed_MsgID_Parse(
    const ::std::string& name, SC_ReadyFailed_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ReadyFailed_MsgID>(
    SC_ReadyFailed_MsgID_descriptor(), name, value);
}
enum SC_Gamefinish_MsgID {
  SC_Gamefinish_MsgID_ID = 11054
};
bool SC_Gamefinish_MsgID_IsValid(int value);
const SC_Gamefinish_MsgID SC_Gamefinish_MsgID_MsgID_MIN = SC_Gamefinish_MsgID_ID;
const SC_Gamefinish_MsgID SC_Gamefinish_MsgID_MsgID_MAX = SC_Gamefinish_MsgID_ID;
const int SC_Gamefinish_MsgID_MsgID_ARRAYSIZE = SC_Gamefinish_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_Gamefinish_MsgID_descriptor();
inline const ::std::string& SC_Gamefinish_MsgID_Name(SC_Gamefinish_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_Gamefinish_MsgID_descriptor(), value);
}
inline bool SC_Gamefinish_MsgID_Parse(
    const ::std::string& name, SC_Gamefinish_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_Gamefinish_MsgID>(
    SC_Gamefinish_MsgID_descriptor(), name, value);
}
enum SC_PlayerReconnection_MsgID {
  SC_PlayerReconnection_MsgID_ID = 11055
};
bool SC_PlayerReconnection_MsgID_IsValid(int value);
const SC_PlayerReconnection_MsgID SC_PlayerReconnection_MsgID_MsgID_MIN = SC_PlayerReconnection_MsgID_ID;
const SC_PlayerReconnection_MsgID SC_PlayerReconnection_MsgID_MsgID_MAX = SC_PlayerReconnection_MsgID_ID;
const int SC_PlayerReconnection_MsgID_MsgID_ARRAYSIZE = SC_PlayerReconnection_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_PlayerReconnection_MsgID_descriptor();
inline const ::std::string& SC_PlayerReconnection_MsgID_Name(SC_PlayerReconnection_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_PlayerReconnection_MsgID_descriptor(), value);
}
inline bool SC_PlayerReconnection_MsgID_Parse(
    const ::std::string& name, SC_PlayerReconnection_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_PlayerReconnection_MsgID>(
    SC_PlayerReconnection_MsgID_descriptor(), name, value);
}
enum SC_ChangeTable_MsgID {
  SC_ChangeTable_MsgID_ID = 11056
};
bool SC_ChangeTable_MsgID_IsValid(int value);
const SC_ChangeTable_MsgID SC_ChangeTable_MsgID_MsgID_MIN = SC_ChangeTable_MsgID_ID;
const SC_ChangeTable_MsgID SC_ChangeTable_MsgID_MsgID_MAX = SC_ChangeTable_MsgID_ID;
const int SC_ChangeTable_MsgID_MsgID_ARRAYSIZE = SC_ChangeTable_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ChangeTable_MsgID_descriptor();
inline const ::std::string& SC_ChangeTable_MsgID_Name(SC_ChangeTable_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ChangeTable_MsgID_descriptor(), value);
}
inline bool SC_ChangeTable_MsgID_Parse(
    const ::std::string& name, SC_ChangeTable_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ChangeTable_MsgID>(
    SC_ChangeTable_MsgID_descriptor(), name, value);
}
enum SC_HEARTBEAT_MsgID {
  SC_HEARTBEAT_MsgID_ID = 11057
};
bool SC_HEARTBEAT_MsgID_IsValid(int value);
const SC_HEARTBEAT_MsgID SC_HEARTBEAT_MsgID_MsgID_MIN = SC_HEARTBEAT_MsgID_ID;
const SC_HEARTBEAT_MsgID SC_HEARTBEAT_MsgID_MsgID_MAX = SC_HEARTBEAT_MsgID_ID;
const int SC_HEARTBEAT_MsgID_MsgID_ARRAYSIZE = SC_HEARTBEAT_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_HEARTBEAT_MsgID_descriptor();
inline const ::std::string& SC_HEARTBEAT_MsgID_Name(SC_HEARTBEAT_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_HEARTBEAT_MsgID_descriptor(), value);
}
inline bool SC_HEARTBEAT_MsgID_Parse(
    const ::std::string& name, SC_HEARTBEAT_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_HEARTBEAT_MsgID>(
    SC_HEARTBEAT_MsgID_descriptor(), name, value);
}
enum CS_HEARTBEAT_MsgID {
  CS_HEARTBEAT_MsgID_ID = 11058
};
bool CS_HEARTBEAT_MsgID_IsValid(int value);
const CS_HEARTBEAT_MsgID CS_HEARTBEAT_MsgID_MsgID_MIN = CS_HEARTBEAT_MsgID_ID;
const CS_HEARTBEAT_MsgID CS_HEARTBEAT_MsgID_MsgID_MAX = CS_HEARTBEAT_MsgID_ID;
const int CS_HEARTBEAT_MsgID_MsgID_ARRAYSIZE = CS_HEARTBEAT_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_HEARTBEAT_MsgID_descriptor();
inline const ::std::string& CS_HEARTBEAT_MsgID_Name(CS_HEARTBEAT_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_HEARTBEAT_MsgID_descriptor(), value);
}
inline bool CS_HEARTBEAT_MsgID_Parse(
    const ::std::string& name, CS_HEARTBEAT_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_HEARTBEAT_MsgID>(
    CS_HEARTBEAT_MsgID_descriptor(), name, value);
}
enum CS_ReconnectionPlay_MsgID {
  CS_ReconnectionPlay_MsgID_ID = 11059
};
bool CS_ReconnectionPlay_MsgID_IsValid(int value);
const CS_ReconnectionPlay_MsgID CS_ReconnectionPlay_MsgID_MsgID_MIN = CS_ReconnectionPlay_MsgID_ID;
const CS_ReconnectionPlay_MsgID CS_ReconnectionPlay_MsgID_MsgID_MAX = CS_ReconnectionPlay_MsgID_ID;
const int CS_ReconnectionPlay_MsgID_MsgID_ARRAYSIZE = CS_ReconnectionPlay_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_ReconnectionPlay_MsgID_descriptor();
inline const ::std::string& CS_ReconnectionPlay_MsgID_Name(CS_ReconnectionPlay_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_ReconnectionPlay_MsgID_descriptor(), value);
}
inline bool CS_ReconnectionPlay_MsgID_Parse(
    const ::std::string& name, CS_ReconnectionPlay_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_ReconnectionPlay_MsgID>(
    CS_ReconnectionPlay_MsgID_descriptor(), name, value);
}
enum SC_ReconnectionPlay_MsgID {
  SC_ReconnectionPlay_MsgID_ID = 11067
};
bool SC_ReconnectionPlay_MsgID_IsValid(int value);
const SC_ReconnectionPlay_MsgID SC_ReconnectionPlay_MsgID_MsgID_MIN = SC_ReconnectionPlay_MsgID_ID;
const SC_ReconnectionPlay_MsgID SC_ReconnectionPlay_MsgID_MsgID_MAX = SC_ReconnectionPlay_MsgID_ID;
const int SC_ReconnectionPlay_MsgID_MsgID_ARRAYSIZE = SC_ReconnectionPlay_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ReconnectionPlay_MsgID_descriptor();
inline const ::std::string& SC_ReconnectionPlay_MsgID_Name(SC_ReconnectionPlay_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ReconnectionPlay_MsgID_descriptor(), value);
}
inline bool SC_ReconnectionPlay_MsgID_Parse(
    const ::std::string& name, SC_ReconnectionPlay_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ReconnectionPlay_MsgID>(
    SC_ReconnectionPlay_MsgID_descriptor(), name, value);
}
enum SC_SimpleRespons_MsgID {
  SC_SimpleRespons_MsgID_ID = 11060
};
bool SC_SimpleRespons_MsgID_IsValid(int value);
const SC_SimpleRespons_MsgID SC_SimpleRespons_MsgID_MsgID_MIN = SC_SimpleRespons_MsgID_ID;
const SC_SimpleRespons_MsgID SC_SimpleRespons_MsgID_MsgID_MAX = SC_SimpleRespons_MsgID_ID;
const int SC_SimpleRespons_MsgID_MsgID_ARRAYSIZE = SC_SimpleRespons_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_SimpleRespons_MsgID_descriptor();
inline const ::std::string& SC_SimpleRespons_MsgID_Name(SC_SimpleRespons_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_SimpleRespons_MsgID_descriptor(), value);
}
inline bool SC_SimpleRespons_MsgID_Parse(
    const ::std::string& name, SC_SimpleRespons_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_SimpleRespons_MsgID>(
    SC_SimpleRespons_MsgID_descriptor(), name, value);
}
enum CS_QueryPlayerMsgData_MsgID {
  CS_QueryPlayerMsgData_MsgID_ID = 11061
};
bool CS_QueryPlayerMsgData_MsgID_IsValid(int value);
const CS_QueryPlayerMsgData_MsgID CS_QueryPlayerMsgData_MsgID_MsgID_MIN = CS_QueryPlayerMsgData_MsgID_ID;
const CS_QueryPlayerMsgData_MsgID CS_QueryPlayerMsgData_MsgID_MsgID_MAX = CS_QueryPlayerMsgData_MsgID_ID;
const int CS_QueryPlayerMsgData_MsgID_MsgID_ARRAYSIZE = CS_QueryPlayerMsgData_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_QueryPlayerMsgData_MsgID_descriptor();
inline const ::std::string& CS_QueryPlayerMsgData_MsgID_Name(CS_QueryPlayerMsgData_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_QueryPlayerMsgData_MsgID_descriptor(), value);
}
inline bool CS_QueryPlayerMsgData_MsgID_Parse(
    const ::std::string& name, CS_QueryPlayerMsgData_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_QueryPlayerMsgData_MsgID>(
    CS_QueryPlayerMsgData_MsgID_descriptor(), name, value);
}
enum SC_QueryPlayerMsgData_MsgID {
  SC_QueryPlayerMsgData_MsgID_ID = 11062
};
bool SC_QueryPlayerMsgData_MsgID_IsValid(int value);
const SC_QueryPlayerMsgData_MsgID SC_QueryPlayerMsgData_MsgID_MsgID_MIN = SC_QueryPlayerMsgData_MsgID_ID;
const SC_QueryPlayerMsgData_MsgID SC_QueryPlayerMsgData_MsgID_MsgID_MAX = SC_QueryPlayerMsgData_MsgID_ID;
const int SC_QueryPlayerMsgData_MsgID_MsgID_ARRAYSIZE = SC_QueryPlayerMsgData_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_QueryPlayerMsgData_MsgID_descriptor();
inline const ::std::string& SC_QueryPlayerMsgData_MsgID_Name(SC_QueryPlayerMsgData_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_QueryPlayerMsgData_MsgID_descriptor(), value);
}
inline bool SC_QueryPlayerMsgData_MsgID_Parse(
    const ::std::string& name, SC_QueryPlayerMsgData_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_QueryPlayerMsgData_MsgID>(
    SC_QueryPlayerMsgData_MsgID_descriptor(), name, value);
}
enum SC_NewMsgData_MsgID {
  SC_NewMsgData_MsgID_ID = 11063
};
bool SC_NewMsgData_MsgID_IsValid(int value);
const SC_NewMsgData_MsgID SC_NewMsgData_MsgID_MsgID_MIN = SC_NewMsgData_MsgID_ID;
const SC_NewMsgData_MsgID SC_NewMsgData_MsgID_MsgID_MAX = SC_NewMsgData_MsgID_ID;
const int SC_NewMsgData_MsgID_MsgID_ARRAYSIZE = SC_NewMsgData_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_NewMsgData_MsgID_descriptor();
inline const ::std::string& SC_NewMsgData_MsgID_Name(SC_NewMsgData_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_NewMsgData_MsgID_descriptor(), value);
}
inline bool SC_NewMsgData_MsgID_Parse(
    const ::std::string& name, SC_NewMsgData_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_NewMsgData_MsgID>(
    SC_NewMsgData_MsgID_descriptor(), name, value);
}
enum CS_SetMsgReadFlag_MsgID {
  CS_SetMsgReadFlag_MsgID_ID = 11064
};
bool CS_SetMsgReadFlag_MsgID_IsValid(int value);
const CS_SetMsgReadFlag_MsgID CS_SetMsgReadFlag_MsgID_MsgID_MIN = CS_SetMsgReadFlag_MsgID_ID;
const CS_SetMsgReadFlag_MsgID CS_SetMsgReadFlag_MsgID_MsgID_MAX = CS_SetMsgReadFlag_MsgID_ID;
const int CS_SetMsgReadFlag_MsgID_MsgID_ARRAYSIZE = CS_SetMsgReadFlag_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_SetMsgReadFlag_MsgID_descriptor();
inline const ::std::string& CS_SetMsgReadFlag_MsgID_Name(CS_SetMsgReadFlag_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_SetMsgReadFlag_MsgID_descriptor(), value);
}
inline bool CS_SetMsgReadFlag_MsgID_Parse(
    const ::std::string& name, CS_SetMsgReadFlag_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_SetMsgReadFlag_MsgID>(
    CS_SetMsgReadFlag_MsgID_descriptor(), name, value);
}
enum SC_FeedBackUpDate_MsgID {
  SC_FeedBackUpDate_MsgID_ID = 11065
};
bool SC_FeedBackUpDate_MsgID_IsValid(int value);
const SC_FeedBackUpDate_MsgID SC_FeedBackUpDate_MsgID_MsgID_MIN = SC_FeedBackUpDate_MsgID_ID;
const SC_FeedBackUpDate_MsgID SC_FeedBackUpDate_MsgID_MsgID_MAX = SC_FeedBackUpDate_MsgID_ID;
const int SC_FeedBackUpDate_MsgID_MsgID_ARRAYSIZE = SC_FeedBackUpDate_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_FeedBackUpDate_MsgID_descriptor();
inline const ::std::string& SC_FeedBackUpDate_MsgID_Name(SC_FeedBackUpDate_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_FeedBackUpDate_MsgID_descriptor(), value);
}
inline bool SC_FeedBackUpDate_MsgID_Parse(
    const ::std::string& name, SC_FeedBackUpDate_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_FeedBackUpDate_MsgID>(
    SC_FeedBackUpDate_MsgID_descriptor(), name, value);
}
enum SC_DeletMsg_MsgID {
  SC_DeletMsg_MsgID_ID = 11066
};
bool SC_DeletMsg_MsgID_IsValid(int value);
const SC_DeletMsg_MsgID SC_DeletMsg_MsgID_MsgID_MIN = SC_DeletMsg_MsgID_ID;
const SC_DeletMsg_MsgID SC_DeletMsg_MsgID_MsgID_MAX = SC_DeletMsg_MsgID_ID;
const int SC_DeletMsg_MsgID_MsgID_ARRAYSIZE = SC_DeletMsg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_DeletMsg_MsgID_descriptor();
inline const ::std::string& SC_DeletMsg_MsgID_Name(SC_DeletMsg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_DeletMsg_MsgID_descriptor(), value);
}
inline bool SC_DeletMsg_MsgID_Parse(
    const ::std::string& name, SC_DeletMsg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_DeletMsg_MsgID>(
    SC_DeletMsg_MsgID_descriptor(), name, value);
}
enum CS_CashMoney_MsgID {
  CS_CashMoney_MsgID_ID = 11070
};
bool CS_CashMoney_MsgID_IsValid(int value);
const CS_CashMoney_MsgID CS_CashMoney_MsgID_MsgID_MIN = CS_CashMoney_MsgID_ID;
const CS_CashMoney_MsgID CS_CashMoney_MsgID_MsgID_MAX = CS_CashMoney_MsgID_ID;
const int CS_CashMoney_MsgID_MsgID_ARRAYSIZE = CS_CashMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_CashMoney_MsgID_descriptor();
inline const ::std::string& CS_CashMoney_MsgID_Name(CS_CashMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_CashMoney_MsgID_descriptor(), value);
}
inline bool CS_CashMoney_MsgID_Parse(
    const ::std::string& name, CS_CashMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_CashMoney_MsgID>(
    CS_CashMoney_MsgID_descriptor(), name, value);
}
enum SC_CashMoneyResult_MsgID {
  SC_CashMoneyResult_MsgID_ID = 11071
};
bool SC_CashMoneyResult_MsgID_IsValid(int value);
const SC_CashMoneyResult_MsgID SC_CashMoneyResult_MsgID_MsgID_MIN = SC_CashMoneyResult_MsgID_ID;
const SC_CashMoneyResult_MsgID SC_CashMoneyResult_MsgID_MsgID_MAX = SC_CashMoneyResult_MsgID_ID;
const int SC_CashMoneyResult_MsgID_MsgID_ARRAYSIZE = SC_CashMoneyResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_CashMoneyResult_MsgID_descriptor();
inline const ::std::string& SC_CashMoneyResult_MsgID_Name(SC_CashMoneyResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_CashMoneyResult_MsgID_descriptor(), value);
}
inline bool SC_CashMoneyResult_MsgID_Parse(
    const ::std::string& name, SC_CashMoneyResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_CashMoneyResult_MsgID>(
    SC_CashMoneyResult_MsgID_descriptor(), name, value);
}
enum CS_CashMoneyType_MsgID {
  CS_CashMoneyType_MsgID_ID = 11072
};
bool CS_CashMoneyType_MsgID_IsValid(int value);
const CS_CashMoneyType_MsgID CS_CashMoneyType_MsgID_MsgID_MIN = CS_CashMoneyType_MsgID_ID;
const CS_CashMoneyType_MsgID CS_CashMoneyType_MsgID_MsgID_MAX = CS_CashMoneyType_MsgID_ID;
const int CS_CashMoneyType_MsgID_MsgID_ARRAYSIZE = CS_CashMoneyType_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_CashMoneyType_MsgID_descriptor();
inline const ::std::string& CS_CashMoneyType_MsgID_Name(CS_CashMoneyType_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_CashMoneyType_MsgID_descriptor(), value);
}
inline bool CS_CashMoneyType_MsgID_Parse(
    const ::std::string& name, CS_CashMoneyType_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_CashMoneyType_MsgID>(
    CS_CashMoneyType_MsgID_descriptor(), name, value);
}
enum SC_CashMoneyType_MsgID {
  SC_CashMoneyType_MsgID_ID = 11073
};
bool SC_CashMoneyType_MsgID_IsValid(int value);
const SC_CashMoneyType_MsgID SC_CashMoneyType_MsgID_MsgID_MIN = SC_CashMoneyType_MsgID_ID;
const SC_CashMoneyType_MsgID SC_CashMoneyType_MsgID_MsgID_MAX = SC_CashMoneyType_MsgID_ID;
const int SC_CashMoneyType_MsgID_MsgID_ARRAYSIZE = SC_CashMoneyType_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_CashMoneyType_MsgID_descriptor();
inline const ::std::string& SC_CashMoneyType_MsgID_Name(SC_CashMoneyType_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_CashMoneyType_MsgID_descriptor(), value);
}
inline bool SC_CashMoneyType_MsgID_Parse(
    const ::std::string& name, SC_CashMoneyType_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_CashMoneyType_MsgID>(
    SC_CashMoneyType_MsgID_descriptor(), name, value);
}
enum SC_NotifyBank_MsgID {
  SC_NotifyBank_MsgID_ID = 11074
};
bool SC_NotifyBank_MsgID_IsValid(int value);
const SC_NotifyBank_MsgID SC_NotifyBank_MsgID_MsgID_MIN = SC_NotifyBank_MsgID_ID;
const SC_NotifyBank_MsgID SC_NotifyBank_MsgID_MsgID_MAX = SC_NotifyBank_MsgID_ID;
const int SC_NotifyBank_MsgID_MsgID_ARRAYSIZE = SC_NotifyBank_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_NotifyBank_MsgID_descriptor();
inline const ::std::string& SC_NotifyBank_MsgID_Name(SC_NotifyBank_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_NotifyBank_MsgID_descriptor(), value);
}
inline bool SC_NotifyBank_MsgID_Parse(
    const ::std::string& name, SC_NotifyBank_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_NotifyBank_MsgID>(
    SC_NotifyBank_MsgID_descriptor(), name, value);
}
enum CS_BandAlipay_MsgID {
  CS_BandAlipay_MsgID_ID = 11077
};
bool CS_BandAlipay_MsgID_IsValid(int value);
const CS_BandAlipay_MsgID CS_BandAlipay_MsgID_MsgID_MIN = CS_BandAlipay_MsgID_ID;
const CS_BandAlipay_MsgID CS_BandAlipay_MsgID_MsgID_MAX = CS_BandAlipay_MsgID_ID;
const int CS_BandAlipay_MsgID_MsgID_ARRAYSIZE = CS_BandAlipay_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_BandAlipay_MsgID_descriptor();
inline const ::std::string& CS_BandAlipay_MsgID_Name(CS_BandAlipay_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_BandAlipay_MsgID_descriptor(), value);
}
inline bool CS_BandAlipay_MsgID_Parse(
    const ::std::string& name, CS_BandAlipay_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_BandAlipay_MsgID>(
    CS_BandAlipay_MsgID_descriptor(), name, value);
}
enum SC_BandAlipay_MsgID {
  SC_BandAlipay_MsgID_ID = 11078
};
bool SC_BandAlipay_MsgID_IsValid(int value);
const SC_BandAlipay_MsgID SC_BandAlipay_MsgID_MsgID_MIN = SC_BandAlipay_MsgID_ID;
const SC_BandAlipay_MsgID SC_BandAlipay_MsgID_MsgID_MAX = SC_BandAlipay_MsgID_ID;
const int SC_BandAlipay_MsgID_MsgID_ARRAYSIZE = SC_BandAlipay_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_BandAlipay_MsgID_descriptor();
inline const ::std::string& SC_BandAlipay_MsgID_Name(SC_BandAlipay_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_BandAlipay_MsgID_descriptor(), value);
}
inline bool SC_BandAlipay_MsgID_Parse(
    const ::std::string& name, SC_BandAlipay_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_BandAlipay_MsgID>(
    SC_BandAlipay_MsgID_descriptor(), name, value);
}
enum CS_Trusteeship_MsgID {
  CS_Trusteeship_MsgID_ID = 11079
};
bool CS_Trusteeship_MsgID_IsValid(int value);
const CS_Trusteeship_MsgID CS_Trusteeship_MsgID_MsgID_MIN = CS_Trusteeship_MsgID_ID;
const CS_Trusteeship_MsgID CS_Trusteeship_MsgID_MsgID_MAX = CS_Trusteeship_MsgID_ID;
const int CS_Trusteeship_MsgID_MsgID_ARRAYSIZE = CS_Trusteeship_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_Trusteeship_MsgID_descriptor();
inline const ::std::string& CS_Trusteeship_MsgID_Name(CS_Trusteeship_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_Trusteeship_MsgID_descriptor(), value);
}
inline bool CS_Trusteeship_MsgID_Parse(
    const ::std::string& name, CS_Trusteeship_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_Trusteeship_MsgID>(
    CS_Trusteeship_MsgID_descriptor(), name, value);
}
enum SC_ShowTax_MsgID {
  SC_ShowTax_MsgID_ID = 11080
};
bool SC_ShowTax_MsgID_IsValid(int value);
const SC_ShowTax_MsgID SC_ShowTax_MsgID_MsgID_MIN = SC_ShowTax_MsgID_ID;
const SC_ShowTax_MsgID SC_ShowTax_MsgID_MsgID_MAX = SC_ShowTax_MsgID_ID;
const int SC_ShowTax_MsgID_MsgID_ARRAYSIZE = SC_ShowTax_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_ShowTax_MsgID_descriptor();
inline const ::std::string& SC_ShowTax_MsgID_Name(SC_ShowTax_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_ShowTax_MsgID_descriptor(), value);
}
inline bool SC_ShowTax_MsgID_Parse(
    const ::std::string& name, SC_ShowTax_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_ShowTax_MsgID>(
    SC_ShowTax_MsgID_descriptor(), name, value);
}
enum SD_Delonline_player_MsgID {
  SD_Delonline_player_MsgID_ID = 11081
};
bool SD_Delonline_player_MsgID_IsValid(int value);
const SD_Delonline_player_MsgID SD_Delonline_player_MsgID_MsgID_MIN = SD_Delonline_player_MsgID_ID;
const SD_Delonline_player_MsgID SD_Delonline_player_MsgID_MsgID_MAX = SD_Delonline_player_MsgID_ID;
const int SD_Delonline_player_MsgID_MsgID_ARRAYSIZE = SD_Delonline_player_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_Delonline_player_MsgID_descriptor();
inline const ::std::string& SD_Delonline_player_MsgID_Name(SD_Delonline_player_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_Delonline_player_MsgID_descriptor(), value);
}
inline bool SD_Delonline_player_MsgID_Parse(
    const ::std::string& name, SD_Delonline_player_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_Delonline_player_MsgID>(
    SD_Delonline_player_MsgID_descriptor(), name, value);
}
enum SC_AlipayEdit_MsgID {
  SC_AlipayEdit_MsgID_ID = 11082
};
bool SC_AlipayEdit_MsgID_IsValid(int value);
const SC_AlipayEdit_MsgID SC_AlipayEdit_MsgID_MsgID_MIN = SC_AlipayEdit_MsgID_ID;
const SC_AlipayEdit_MsgID SC_AlipayEdit_MsgID_MsgID_MAX = SC_AlipayEdit_MsgID_ID;
const int SC_AlipayEdit_MsgID_MsgID_ARRAYSIZE = SC_AlipayEdit_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_AlipayEdit_MsgID_descriptor();
inline const ::std::string& SC_AlipayEdit_MsgID_Name(SC_AlipayEdit_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_AlipayEdit_MsgID_descriptor(), value);
}
inline bool SC_AlipayEdit_MsgID_Parse(
    const ::std::string& name, SC_AlipayEdit_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_AlipayEdit_MsgID>(
    SC_AlipayEdit_MsgID_descriptor(), name, value);
}
enum SC_BrocastClientUpdateInfo_MsgID {
  SC_BrocastClientUpdateInfo_MsgID_ID = 11083
};
bool SC_BrocastClientUpdateInfo_MsgID_IsValid(int value);
const SC_BrocastClientUpdateInfo_MsgID SC_BrocastClientUpdateInfo_MsgID_MsgID_MIN = SC_BrocastClientUpdateInfo_MsgID_ID;
const SC_BrocastClientUpdateInfo_MsgID SC_BrocastClientUpdateInfo_MsgID_MsgID_MAX = SC_BrocastClientUpdateInfo_MsgID_ID;
const int SC_BrocastClientUpdateInfo_MsgID_MsgID_ARRAYSIZE = SC_BrocastClientUpdateInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_BrocastClientUpdateInfo_MsgID_descriptor();
inline const ::std::string& SC_BrocastClientUpdateInfo_MsgID_Name(SC_BrocastClientUpdateInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_BrocastClientUpdateInfo_MsgID_descriptor(), value);
}
inline bool SC_BrocastClientUpdateInfo_MsgID_Parse(
    const ::std::string& name, SC_BrocastClientUpdateInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_BrocastClientUpdateInfo_MsgID>(
    SC_BrocastClientUpdateInfo_MsgID_descriptor(), name, value);
}
enum SC_FreezeAccount_MsgID {
  SC_FreezeAccount_MsgID_ID = 11084
};
bool SC_FreezeAccount_MsgID_IsValid(int value);
const SC_FreezeAccount_MsgID SC_FreezeAccount_MsgID_MsgID_MIN = SC_FreezeAccount_MsgID_ID;
const SC_FreezeAccount_MsgID SC_FreezeAccount_MsgID_MsgID_MAX = SC_FreezeAccount_MsgID_ID;
const int SC_FreezeAccount_MsgID_MsgID_ARRAYSIZE = SC_FreezeAccount_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_FreezeAccount_MsgID_descriptor();
inline const ::std::string& SC_FreezeAccount_MsgID_Name(SC_FreezeAccount_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_FreezeAccount_MsgID_descriptor(), value);
}
inline bool SC_FreezeAccount_MsgID_Parse(
    const ::std::string& name, SC_FreezeAccount_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_FreezeAccount_MsgID>(
    SC_FreezeAccount_MsgID_descriptor(), name, value);
}
enum SC_GameMaintain_MsgID {
  SC_GameMaintain_MsgID_ID = 11085
};
bool SC_GameMaintain_MsgID_IsValid(int value);
const SC_GameMaintain_MsgID SC_GameMaintain_MsgID_MsgID_MIN = SC_GameMaintain_MsgID_ID;
const SC_GameMaintain_MsgID SC_GameMaintain_MsgID_MsgID_MAX = SC_GameMaintain_MsgID_ID;
const int SC_GameMaintain_MsgID_MsgID_ARRAYSIZE = SC_GameMaintain_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_GameMaintain_MsgID_descriptor();
inline const ::std::string& SC_GameMaintain_MsgID_Name(SC_GameMaintain_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_GameMaintain_MsgID_descriptor(), value);
}
inline bool SC_GameMaintain_MsgID_Parse(
    const ::std::string& name, SC_GameMaintain_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_GameMaintain_MsgID>(
    SC_GameMaintain_MsgID_descriptor(), name, value);
}
enum SC_CashMaintain_MsgID {
  SC_CashMaintain_MsgID_ID = 11086
};
bool SC_CashMaintain_MsgID_IsValid(int value);
const SC_CashMaintain_MsgID SC_CashMaintain_MsgID_MsgID_MIN = SC_CashMaintain_MsgID_ID;
const SC_CashMaintain_MsgID SC_CashMaintain_MsgID_MsgID_MAX = SC_CashMaintain_MsgID_ID;
const int SC_CashMaintain_MsgID_MsgID_ARRAYSIZE = SC_CashMaintain_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_CashMaintain_MsgID_descriptor();
inline const ::std::string& SC_CashMaintain_MsgID_Name(SC_CashMaintain_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_CashMaintain_MsgID_descriptor(), value);
}
inline bool SC_CashMaintain_MsgID_Parse(
    const ::std::string& name, SC_CashMaintain_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_CashMaintain_MsgID>(
    SC_CashMaintain_MsgID_descriptor(), name, value);
}
enum CS_GetHelpMoney_MsgID {
  CS_GetHelpMoney_MsgID_ID = 11087
};
bool CS_GetHelpMoney_MsgID_IsValid(int value);
const CS_GetHelpMoney_MsgID CS_GetHelpMoney_MsgID_MsgID_MIN = CS_GetHelpMoney_MsgID_ID;
const CS_GetHelpMoney_MsgID CS_GetHelpMoney_MsgID_MsgID_MAX = CS_GetHelpMoney_MsgID_ID;
const int CS_GetHelpMoney_MsgID_MsgID_ARRAYSIZE = CS_GetHelpMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_GetHelpMoney_MsgID_descriptor();
inline const ::std::string& CS_GetHelpMoney_MsgID_Name(CS_GetHelpMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_GetHelpMoney_MsgID_descriptor(), value);
}
inline bool CS_GetHelpMoney_MsgID_Parse(
    const ::std::string& name, CS_GetHelpMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_GetHelpMoney_MsgID>(
    CS_GetHelpMoney_MsgID_descriptor(), name, value);
}
enum SC_GetHelpMoney_MsgID {
  SC_GetHelpMoney_MsgID_ID = 11088
};
bool SC_GetHelpMoney_MsgID_IsValid(int value);
const SC_GetHelpMoney_MsgID SC_GetHelpMoney_MsgID_MsgID_MIN = SC_GetHelpMoney_MsgID_ID;
const SC_GetHelpMoney_MsgID SC_GetHelpMoney_MsgID_MsgID_MAX = SC_GetHelpMoney_MsgID_ID;
const int SC_GetHelpMoney_MsgID_MsgID_ARRAYSIZE = SC_GetHelpMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_GetHelpMoney_MsgID_descriptor();
inline const ::std::string& SC_GetHelpMoney_MsgID_Name(SC_GetHelpMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_GetHelpMoney_MsgID_descriptor(), value);
}
inline bool SC_GetHelpMoney_MsgID_Parse(
    const ::std::string& name, SC_GetHelpMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_GetHelpMoney_MsgID>(
    SC_GetHelpMoney_MsgID_descriptor(), name, value);
}
enum CS_Agent_CashMoney_MsgID {
  CS_Agent_CashMoney_MsgID_ID = 11089
};
bool CS_Agent_CashMoney_MsgID_IsValid(int value);
const CS_Agent_CashMoney_MsgID CS_Agent_CashMoney_MsgID_MsgID_MIN = CS_Agent_CashMoney_MsgID_ID;
const CS_Agent_CashMoney_MsgID CS_Agent_CashMoney_MsgID_MsgID_MAX = CS_Agent_CashMoney_MsgID_ID;
const int CS_Agent_CashMoney_MsgID_MsgID_ARRAYSIZE = CS_Agent_CashMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_Agent_CashMoney_MsgID_descriptor();
inline const ::std::string& CS_Agent_CashMoney_MsgID_Name(CS_Agent_CashMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_Agent_CashMoney_MsgID_descriptor(), value);
}
inline bool CS_Agent_CashMoney_MsgID_Parse(
    const ::std::string& name, CS_Agent_CashMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_Agent_CashMoney_MsgID>(
    CS_Agent_CashMoney_MsgID_descriptor(), name, value);
}
enum SC_Agent_CashMoneyResult_MsgID {
  SC_Agent_CashMoneyResult_MsgID_ID = 11090
};
bool SC_Agent_CashMoneyResult_MsgID_IsValid(int value);
const SC_Agent_CashMoneyResult_MsgID SC_Agent_CashMoneyResult_MsgID_MsgID_MIN = SC_Agent_CashMoneyResult_MsgID_ID;
const SC_Agent_CashMoneyResult_MsgID SC_Agent_CashMoneyResult_MsgID_MsgID_MAX = SC_Agent_CashMoneyResult_MsgID_ID;
const int SC_Agent_CashMoneyResult_MsgID_MsgID_ARRAYSIZE = SC_Agent_CashMoneyResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_Agent_CashMoneyResult_MsgID_descriptor();
inline const ::std::string& SC_Agent_CashMoneyResult_MsgID_Name(SC_Agent_CashMoneyResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_Agent_CashMoneyResult_MsgID_descriptor(), value);
}
inline bool SC_Agent_CashMoneyResult_MsgID_Parse(
    const ::std::string& name, SC_Agent_CashMoneyResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_Agent_CashMoneyResult_MsgID>(
    SC_Agent_CashMoneyResult_MsgID_descriptor(), name, value);
}
enum CS_RequestNewAward_MsgID {
  CS_RequestNewAward_MsgID_ID = 11091
};
bool CS_RequestNewAward_MsgID_IsValid(int value);
const CS_RequestNewAward_MsgID CS_RequestNewAward_MsgID_MsgID_MIN = CS_RequestNewAward_MsgID_ID;
const CS_RequestNewAward_MsgID CS_RequestNewAward_MsgID_MsgID_MAX = CS_RequestNewAward_MsgID_ID;
const int CS_RequestNewAward_MsgID_MsgID_ARRAYSIZE = CS_RequestNewAward_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_RequestNewAward_MsgID_descriptor();
inline const ::std::string& CS_RequestNewAward_MsgID_Name(CS_RequestNewAward_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_RequestNewAward_MsgID_descriptor(), value);
}
inline bool CS_RequestNewAward_MsgID_Parse(
    const ::std::string& name, CS_RequestNewAward_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_RequestNewAward_MsgID>(
    CS_RequestNewAward_MsgID_descriptor(), name, value);
}
enum SC_RequestNewAward_MsgID {
  SC_RequestNewAward_MsgID_ID = 11092
};
bool SC_RequestNewAward_MsgID_IsValid(int value);
const SC_RequestNewAward_MsgID SC_RequestNewAward_MsgID_MsgID_MIN = SC_RequestNewAward_MsgID_ID;
const SC_RequestNewAward_MsgID SC_RequestNewAward_MsgID_MsgID_MAX = SC_RequestNewAward_MsgID_ID;
const int SC_RequestNewAward_MsgID_MsgID_ARRAYSIZE = SC_RequestNewAward_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_RequestNewAward_MsgID_descriptor();
inline const ::std::string& SC_RequestNewAward_MsgID_Name(SC_RequestNewAward_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_RequestNewAward_MsgID_descriptor(), value);
}
inline bool SC_RequestNewAward_MsgID_Parse(
    const ::std::string& name, SC_RequestNewAward_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_RequestNewAward_MsgID>(
    SC_RequestNewAward_MsgID_descriptor(), name, value);
}
enum CS_RequestCheckInAward_MsgID {
  CS_RequestCheckInAward_MsgID_ID = 11093
};
bool CS_RequestCheckInAward_MsgID_IsValid(int value);
const CS_RequestCheckInAward_MsgID CS_RequestCheckInAward_MsgID_MsgID_MIN = CS_RequestCheckInAward_MsgID_ID;
const CS_RequestCheckInAward_MsgID CS_RequestCheckInAward_MsgID_MsgID_MAX = CS_RequestCheckInAward_MsgID_ID;
const int CS_RequestCheckInAward_MsgID_MsgID_ARRAYSIZE = CS_RequestCheckInAward_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_RequestCheckInAward_MsgID_descriptor();
inline const ::std::string& CS_RequestCheckInAward_MsgID_Name(CS_RequestCheckInAward_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_RequestCheckInAward_MsgID_descriptor(), value);
}
inline bool CS_RequestCheckInAward_MsgID_Parse(
    const ::std::string& name, CS_RequestCheckInAward_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_RequestCheckInAward_MsgID>(
    CS_RequestCheckInAward_MsgID_descriptor(), name, value);
}
enum SC_RequestCheckInAward_MsgID {
  SC_RequestCheckInAward_MsgID_ID = 11094
};
bool SC_RequestCheckInAward_MsgID_IsValid(int value);
const SC_RequestCheckInAward_MsgID SC_RequestCheckInAward_MsgID_MsgID_MIN = SC_RequestCheckInAward_MsgID_ID;
const SC_RequestCheckInAward_MsgID SC_RequestCheckInAward_MsgID_MsgID_MAX = SC_RequestCheckInAward_MsgID_ID;
const int SC_RequestCheckInAward_MsgID_MsgID_ARRAYSIZE = SC_RequestCheckInAward_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_RequestCheckInAward_MsgID_descriptor();
inline const ::std::string& SC_RequestCheckInAward_MsgID_Name(SC_RequestCheckInAward_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_RequestCheckInAward_MsgID_descriptor(), value);
}
inline bool SC_RequestCheckInAward_MsgID_Parse(
    const ::std::string& name, SC_RequestCheckInAward_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_RequestCheckInAward_MsgID>(
    SC_RequestCheckInAward_MsgID_descriptor(), name, value);
}
enum CS_BindBankCard_MsgID {
  CS_BindBankCard_MsgID_ID = 11095
};
bool CS_BindBankCard_MsgID_IsValid(int value);
const CS_BindBankCard_MsgID CS_BindBankCard_MsgID_MsgID_MIN = CS_BindBankCard_MsgID_ID;
const CS_BindBankCard_MsgID CS_BindBankCard_MsgID_MsgID_MAX = CS_BindBankCard_MsgID_ID;
const int CS_BindBankCard_MsgID_MsgID_ARRAYSIZE = CS_BindBankCard_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_BindBankCard_MsgID_descriptor();
inline const ::std::string& CS_BindBankCard_MsgID_Name(CS_BindBankCard_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_BindBankCard_MsgID_descriptor(), value);
}
inline bool CS_BindBankCard_MsgID_Parse(
    const ::std::string& name, CS_BindBankCard_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_BindBankCard_MsgID>(
    CS_BindBankCard_MsgID_descriptor(), name, value);
}
enum SC_BindBankCard_MsgID {
  SC_BindBankCard_MsgID_ID = 11096
};
bool SC_BindBankCard_MsgID_IsValid(int value);
const SC_BindBankCard_MsgID SC_BindBankCard_MsgID_MsgID_MIN = SC_BindBankCard_MsgID_ID;
const SC_BindBankCard_MsgID SC_BindBankCard_MsgID_MsgID_MAX = SC_BindBankCard_MsgID_ID;
const int SC_BindBankCard_MsgID_MsgID_ARRAYSIZE = SC_BindBankCard_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_BindBankCard_MsgID_descriptor();
inline const ::std::string& SC_BindBankCard_MsgID_Name(SC_BindBankCard_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_BindBankCard_MsgID_descriptor(), value);
}
inline bool SC_BindBankCard_MsgID_Parse(
    const ::std::string& name, SC_BindBankCard_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_BindBankCard_MsgID>(
    SC_BindBankCard_MsgID_descriptor(), name, value);
}
enum CS_GetBankCardInfo_MsgID {
  CS_GetBankCardInfo_MsgID_ID = 11097
};
bool CS_GetBankCardInfo_MsgID_IsValid(int value);
const CS_GetBankCardInfo_MsgID CS_GetBankCardInfo_MsgID_MsgID_MIN = CS_GetBankCardInfo_MsgID_ID;
const CS_GetBankCardInfo_MsgID CS_GetBankCardInfo_MsgID_MsgID_MAX = CS_GetBankCardInfo_MsgID_ID;
const int CS_GetBankCardInfo_MsgID_MsgID_ARRAYSIZE = CS_GetBankCardInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_GetBankCardInfo_MsgID_descriptor();
inline const ::std::string& CS_GetBankCardInfo_MsgID_Name(CS_GetBankCardInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_GetBankCardInfo_MsgID_descriptor(), value);
}
inline bool CS_GetBankCardInfo_MsgID_Parse(
    const ::std::string& name, CS_GetBankCardInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_GetBankCardInfo_MsgID>(
    CS_GetBankCardInfo_MsgID_descriptor(), name, value);
}
enum SC_GetBankCardInfo_MsgID {
  SC_GetBankCardInfo_MsgID_ID = 11098
};
bool SC_GetBankCardInfo_MsgID_IsValid(int value);
const SC_GetBankCardInfo_MsgID SC_GetBankCardInfo_MsgID_MsgID_MIN = SC_GetBankCardInfo_MsgID_ID;
const SC_GetBankCardInfo_MsgID SC_GetBankCardInfo_MsgID_MsgID_MAX = SC_GetBankCardInfo_MsgID_ID;
const int SC_GetBankCardInfo_MsgID_MsgID_ARRAYSIZE = SC_GetBankCardInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_GetBankCardInfo_MsgID_descriptor();
inline const ::std::string& SC_GetBankCardInfo_MsgID_Name(SC_GetBankCardInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_GetBankCardInfo_MsgID_descriptor(), value);
}
inline bool SC_GetBankCardInfo_MsgID_Parse(
    const ::std::string& name, SC_GetBankCardInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_GetBankCardInfo_MsgID>(
    SC_GetBankCardInfo_MsgID_descriptor(), name, value);
}
enum CS_NewGameMaintain_MsgID {
  CS_NewGameMaintain_MsgID_ID = 11099
};
bool CS_NewGameMaintain_MsgID_IsValid(int value);
const CS_NewGameMaintain_MsgID CS_NewGameMaintain_MsgID_MsgID_MIN = CS_NewGameMaintain_MsgID_ID;
const CS_NewGameMaintain_MsgID CS_NewGameMaintain_MsgID_MsgID_MAX = CS_NewGameMaintain_MsgID_ID;
const int CS_NewGameMaintain_MsgID_MsgID_ARRAYSIZE = CS_NewGameMaintain_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_NewGameMaintain_MsgID_descriptor();
inline const ::std::string& CS_NewGameMaintain_MsgID_Name(CS_NewGameMaintain_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_NewGameMaintain_MsgID_descriptor(), value);
}
inline bool CS_NewGameMaintain_MsgID_Parse(
    const ::std::string& name, CS_NewGameMaintain_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_NewGameMaintain_MsgID>(
    CS_NewGameMaintain_MsgID_descriptor(), name, value);
}
enum SC_NewGameMaintain_MsgID {
  SC_NewGameMaintain_MsgID_ID = 11100
};
bool SC_NewGameMaintain_MsgID_IsValid(int value);
const SC_NewGameMaintain_MsgID SC_NewGameMaintain_MsgID_MsgID_MIN = SC_NewGameMaintain_MsgID_ID;
const SC_NewGameMaintain_MsgID SC_NewGameMaintain_MsgID_MsgID_MAX = SC_NewGameMaintain_MsgID_ID;
const int SC_NewGameMaintain_MsgID_MsgID_ARRAYSIZE = SC_NewGameMaintain_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_NewGameMaintain_MsgID_descriptor();
inline const ::std::string& SC_NewGameMaintain_MsgID_Name(SC_NewGameMaintain_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_NewGameMaintain_MsgID_descriptor(), value);
}
inline bool SC_NewGameMaintain_MsgID_Parse(
    const ::std::string& name, SC_NewGameMaintain_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_NewGameMaintain_MsgID>(
    SC_NewGameMaintain_MsgID_descriptor(), name, value);
}
enum CS_PlayerPromotion_MsgID {
  CS_PlayerPromotion_MsgID_ID = 11101
};
bool CS_PlayerPromotion_MsgID_IsValid(int value);
const CS_PlayerPromotion_MsgID CS_PlayerPromotion_MsgID_MsgID_MIN = CS_PlayerPromotion_MsgID_ID;
const CS_PlayerPromotion_MsgID CS_PlayerPromotion_MsgID_MsgID_MAX = CS_PlayerPromotion_MsgID_ID;
const int CS_PlayerPromotion_MsgID_MsgID_ARRAYSIZE = CS_PlayerPromotion_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_PlayerPromotion_MsgID_descriptor();
inline const ::std::string& CS_PlayerPromotion_MsgID_Name(CS_PlayerPromotion_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_PlayerPromotion_MsgID_descriptor(), value);
}
inline bool CS_PlayerPromotion_MsgID_Parse(
    const ::std::string& name, CS_PlayerPromotion_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_PlayerPromotion_MsgID>(
    CS_PlayerPromotion_MsgID_descriptor(), name, value);
}
enum SC_PlayerPromotion_MsgID {
  SC_PlayerPromotion_MsgID_ID = 11102
};
bool SC_PlayerPromotion_MsgID_IsValid(int value);
const SC_PlayerPromotion_MsgID SC_PlayerPromotion_MsgID_MsgID_MIN = SC_PlayerPromotion_MsgID_ID;
const SC_PlayerPromotion_MsgID SC_PlayerPromotion_MsgID_MsgID_MAX = SC_PlayerPromotion_MsgID_ID;
const int SC_PlayerPromotion_MsgID_MsgID_ARRAYSIZE = SC_PlayerPromotion_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_PlayerPromotion_MsgID_descriptor();
inline const ::std::string& SC_PlayerPromotion_MsgID_Name(SC_PlayerPromotion_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_PlayerPromotion_MsgID_descriptor(), value);
}
inline bool SC_PlayerPromotion_MsgID_Parse(
    const ::std::string& name, SC_PlayerPromotion_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_PlayerPromotion_MsgID>(
    SC_PlayerPromotion_MsgID_descriptor(), name, value);
}
// ===================================================================

class C_RequestPublicKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:C_RequestPublicKey) */ {
 public:
  C_RequestPublicKey();
  virtual ~C_RequestPublicKey();

  C_RequestPublicKey(const C_RequestPublicKey& from);

  inline C_RequestPublicKey& operator=(const C_RequestPublicKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_RequestPublicKey& default_instance();

  static inline const C_RequestPublicKey* internal_default_instance() {
    return reinterpret_cast<const C_RequestPublicKey*>(
               &_C_RequestPublicKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(C_RequestPublicKey* other);

  // implements Message ----------------------------------------------

  inline C_RequestPublicKey* New() const PROTOBUF_FINAL { return New(NULL); }

  C_RequestPublicKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_RequestPublicKey& from);
  void MergeFrom(const C_RequestPublicKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_RequestPublicKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef C_RequestPublicKey_MsgID MsgID;
  static const MsgID ID =
    C_RequestPublicKey_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return C_RequestPublicKey_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    C_RequestPublicKey_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    C_RequestPublicKey_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    C_RequestPublicKey_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return C_RequestPublicKey_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return C_RequestPublicKey_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return C_RequestPublicKey_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string channel_id = 1;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // optional string version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string re_ip = 3;
  bool has_re_ip() const;
  void clear_re_ip();
  static const int kReIpFieldNumber = 3;
  const ::std::string& re_ip() const;
  void set_re_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_re_ip(::std::string&& value);
  #endif
  void set_re_ip(const char* value);
  void set_re_ip(const char* value, size_t size);
  ::std::string* mutable_re_ip();
  ::std::string* release_re_ip();
  void set_allocated_re_ip(::std::string* re_ip);

  // optional int32 android_uid = 4;
  bool has_android_uid() const;
  void clear_android_uid();
  static const int kAndroidUidFieldNumber = 4;
  ::google::protobuf::int32 android_uid() const;
  void set_android_uid(::google::protobuf::int32 value);

  // optional int32 android_pid = 5;
  bool has_android_pid() const;
  void clear_android_pid();
  static const int kAndroidPidFieldNumber = 5;
  ::google::protobuf::int32 android_pid() const;
  void set_android_pid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C_RequestPublicKey)
 private:
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_version();
  void clear_has_version();
  void set_has_re_ip();
  void clear_has_re_ip();
  void set_has_android_uid();
  void clear_has_android_uid();
  void set_has_android_pid();
  void clear_has_android_pid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr re_ip_;
  ::google::protobuf::int32 android_uid_;
  ::google::protobuf::int32 android_pid_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class C_PublicKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:C_PublicKey) */ {
 public:
  C_PublicKey();
  virtual ~C_PublicKey();

  C_PublicKey(const C_PublicKey& from);

  inline C_PublicKey& operator=(const C_PublicKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_PublicKey& default_instance();

  static inline const C_PublicKey* internal_default_instance() {
    return reinterpret_cast<const C_PublicKey*>(
               &_C_PublicKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(C_PublicKey* other);

  // implements Message ----------------------------------------------

  inline C_PublicKey* New() const PROTOBUF_FINAL { return New(NULL); }

  C_PublicKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_PublicKey& from);
  void MergeFrom(const C_PublicKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_PublicKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef C_PublicKey_MsgID MsgID;
  static const MsgID ID =
    C_PublicKey_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return C_PublicKey_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    C_PublicKey_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    C_PublicKey_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    C_PublicKey_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return C_PublicKey_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return C_PublicKey_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return C_PublicKey_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string public_key = 1;
  bool has_public_key() const;
  void clear_public_key();
  static const int kPublicKeyFieldNumber = 1;
  const ::std::string& public_key() const;
  void set_public_key(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key(::std::string&& value);
  #endif
  void set_public_key(const char* value);
  void set_public_key(const char* value, size_t size);
  ::std::string* mutable_public_key();
  ::std::string* release_public_key();
  void set_allocated_public_key(::std::string* public_key);

  // @@protoc_insertion_point(class_scope:C_PublicKey)
 private:
  void set_has_public_key();
  void clear_has_public_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr public_key_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CL_RegAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CL_RegAccount) */ {
 public:
  CL_RegAccount();
  virtual ~CL_RegAccount();

  CL_RegAccount(const CL_RegAccount& from);

  inline CL_RegAccount& operator=(const CL_RegAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CL_RegAccount& default_instance();

  static inline const CL_RegAccount* internal_default_instance() {
    return reinterpret_cast<const CL_RegAccount*>(
               &_CL_RegAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CL_RegAccount* other);

  // implements Message ----------------------------------------------

  inline CL_RegAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  CL_RegAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CL_RegAccount& from);
  void MergeFrom(const CL_RegAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CL_RegAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CL_RegAccount_MsgID MsgID;
  static const MsgID ID =
    CL_RegAccount_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CL_RegAccount_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CL_RegAccount_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CL_RegAccount_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CL_RegAccount_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CL_RegAccount_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CL_RegAccount_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CL_RegAccount_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string phone = 3;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 3;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional string phone_type = 4;
  bool has_phone_type() const;
  void clear_phone_type();
  static const int kPhoneTypeFieldNumber = 4;
  const ::std::string& phone_type() const;
  void set_phone_type(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_type(::std::string&& value);
  #endif
  void set_phone_type(const char* value);
  void set_phone_type(const char* value, size_t size);
  ::std::string* mutable_phone_type();
  ::std::string* release_phone_type();
  void set_allocated_phone_type(::std::string* phone_type);

  // optional string version = 5;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 5;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string channel_id = 6;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 6;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // optional string package_name = 7;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 7;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional string imei = 8;
  bool has_imei() const;
  void clear_imei();
  static const int kImeiFieldNumber = 8;
  const ::std::string& imei() const;
  void set_imei(const ::std::string& value);
  #if LANG_CXX11
  void set_imei(::std::string&& value);
  #endif
  void set_imei(const char* value);
  void set_imei(const char* value, size_t size);
  ::std::string* mutable_imei();
  ::std::string* release_imei();
  void set_allocated_imei(::std::string* imei);

  // optional string ip = 9;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 9;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string ip_area = 10;
  bool has_ip_area() const;
  void clear_ip_area();
  static const int kIpAreaFieldNumber = 10;
  const ::std::string& ip_area() const;
  void set_ip_area(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_area(::std::string&& value);
  #endif
  void set_ip_area(const char* value);
  void set_ip_area(const char* value, size_t size);
  ::std::string* mutable_ip_area();
  ::std::string* release_ip_area();
  void set_allocated_ip_area(::std::string* ip_area);

  // optional int32 android_uid = 11;
  bool has_android_uid() const;
  void clear_android_uid();
  static const int kAndroidUidFieldNumber = 11;
  ::google::protobuf::int32 android_uid() const;
  void set_android_uid(::google::protobuf::int32 value);

  // optional int32 android_pid = 12;
  bool has_android_pid() const;
  void clear_android_pid();
  static const int kAndroidPidFieldNumber = 12;
  ::google::protobuf::int32 android_pid() const;
  void set_android_pid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CL_RegAccount)
 private:
  void set_has_account();
  void clear_has_account();
  void set_has_password();
  void clear_has_password();
  void set_has_phone();
  void clear_has_phone();
  void set_has_phone_type();
  void clear_has_phone_type();
  void set_has_version();
  void clear_has_version();
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_imei();
  void clear_has_imei();
  void set_has_ip();
  void clear_has_ip();
  void set_has_ip_area();
  void clear_has_ip_area();
  void set_has_android_uid();
  void clear_has_android_uid();
  void set_has_android_pid();
  void clear_has_android_pid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr phone_type_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr imei_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr ip_area_;
  ::google::protobuf::int32 android_uid_;
  ::google::protobuf::int32 android_pid_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CL_Login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CL_Login) */ {
 public:
  CL_Login();
  virtual ~CL_Login();

  CL_Login(const CL_Login& from);

  inline CL_Login& operator=(const CL_Login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CL_Login& default_instance();

  static inline const CL_Login* internal_default_instance() {
    return reinterpret_cast<const CL_Login*>(
               &_CL_Login_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CL_Login* other);

  // implements Message ----------------------------------------------

  inline CL_Login* New() const PROTOBUF_FINAL { return New(NULL); }

  CL_Login* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CL_Login& from);
  void MergeFrom(const CL_Login& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CL_Login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CL_Login_MsgID MsgID;
  static const MsgID ID =
    CL_Login_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CL_Login_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CL_Login_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CL_Login_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CL_Login_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CL_Login_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CL_Login_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CL_Login_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string phone = 3;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 3;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional string phone_type = 4;
  bool has_phone_type() const;
  void clear_phone_type();
  static const int kPhoneTypeFieldNumber = 4;
  const ::std::string& phone_type() const;
  void set_phone_type(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_type(::std::string&& value);
  #endif
  void set_phone_type(const char* value);
  void set_phone_type(const char* value, size_t size);
  ::std::string* mutable_phone_type();
  ::std::string* release_phone_type();
  void set_allocated_phone_type(::std::string* phone_type);

  // optional string imei = 5;
  bool has_imei() const;
  void clear_imei();
  static const int kImeiFieldNumber = 5;
  const ::std::string& imei() const;
  void set_imei(const ::std::string& value);
  #if LANG_CXX11
  void set_imei(::std::string&& value);
  #endif
  void set_imei(const char* value);
  void set_imei(const char* value, size_t size);
  ::std::string* mutable_imei();
  ::std::string* release_imei();
  void set_allocated_imei(::std::string* imei);

  // optional string ip = 6;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 6;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string version = 7;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 7;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string channel_id = 8;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 8;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // optional string package_name = 9;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 9;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional string ip_area = 10;
  bool has_ip_area() const;
  void clear_ip_area();
  static const int kIpAreaFieldNumber = 10;
  const ::std::string& ip_area() const;
  void set_ip_area(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_area(::std::string&& value);
  #endif
  void set_ip_area(const char* value);
  void set_ip_area(const char* value, size_t size);
  ::std::string* mutable_ip_area();
  ::std::string* release_ip_area();
  void set_allocated_ip_area(::std::string* ip_area);

  // @@protoc_insertion_point(class_scope:CL_Login)
 private:
  void set_has_account();
  void clear_has_account();
  void set_has_password();
  void clear_has_password();
  void set_has_phone();
  void clear_has_phone();
  void set_has_phone_type();
  void clear_has_phone_type();
  void set_has_imei();
  void clear_has_imei();
  void set_has_ip();
  void clear_has_ip();
  void set_has_version();
  void clear_has_version();
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_ip_area();
  void clear_has_ip_area();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr phone_type_;
  ::google::protobuf::internal::ArenaStringPtr imei_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr ip_area_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginValidatebox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginValidatebox) */ {
 public:
  LoginValidatebox();
  virtual ~LoginValidatebox();

  LoginValidatebox(const LoginValidatebox& from);

  inline LoginValidatebox& operator=(const LoginValidatebox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginValidatebox& default_instance();

  static inline const LoginValidatebox* internal_default_instance() {
    return reinterpret_cast<const LoginValidatebox*>(
               &_LoginValidatebox_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(LoginValidatebox* other);

  // implements Message ----------------------------------------------

  inline LoginValidatebox* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginValidatebox* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginValidatebox& from);
  void MergeFrom(const LoginValidatebox& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginValidatebox* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 question = 1;
  int question_size() const;
  void clear_question();
  static const int kQuestionFieldNumber = 1;
  ::google::protobuf::int32 question(int index) const;
  void set_question(int index, ::google::protobuf::int32 value);
  void add_question(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      question() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_question();

  // repeated int32 answer = 2;
  int answer_size() const;
  void clear_answer();
  static const int kAnswerFieldNumber = 2;
  ::google::protobuf::int32 answer(int index) const;
  void set_answer(int index, ::google::protobuf::int32 value);
  void add_answer(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      answer() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_answer();

  // @@protoc_insertion_point(class_scope:LoginValidatebox)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > question_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > answer_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LC_Login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LC_Login) */ {
 public:
  LC_Login();
  virtual ~LC_Login();

  LC_Login(const LC_Login& from);

  inline LC_Login& operator=(const LC_Login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LC_Login& default_instance();

  static inline const LC_Login* internal_default_instance() {
    return reinterpret_cast<const LC_Login*>(
               &_LC_Login_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(LC_Login* other);

  // implements Message ----------------------------------------------

  inline LC_Login* New() const PROTOBUF_FINAL { return New(NULL); }

  LC_Login* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LC_Login& from);
  void MergeFrom(const LC_Login& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LC_Login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LC_Login_MsgID MsgID;
  static const MsgID ID =
    LC_Login_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LC_Login_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LC_Login_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LC_Login_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LC_Login_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LC_Login_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LC_Login_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LC_Login_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 3;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 3;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string nickname = 5;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 5;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string password = 7;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 7;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string alipay_account = 8;
  bool has_alipay_account() const;
  void clear_alipay_account();
  static const int kAlipayAccountFieldNumber = 8;
  const ::std::string& alipay_account() const;
  void set_alipay_account(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account(::std::string&& value);
  #endif
  void set_alipay_account(const char* value);
  void set_alipay_account(const char* value, size_t size);
  ::std::string* mutable_alipay_account();
  ::std::string* release_alipay_account();
  void set_allocated_alipay_account(::std::string* alipay_account);

  // optional string alipay_name = 9;
  bool has_alipay_name() const;
  void clear_alipay_name();
  static const int kAlipayNameFieldNumber = 9;
  const ::std::string& alipay_name() const;
  void set_alipay_name(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name(::std::string&& value);
  #endif
  void set_alipay_name(const char* value);
  void set_alipay_name(const char* value, size_t size);
  ::std::string* mutable_alipay_name();
  ::std::string* release_alipay_name();
  void set_allocated_alipay_name(::std::string* alipay_name);

  // optional string ip_area = 13;
  bool has_ip_area() const;
  void clear_ip_area();
  static const int kIpAreaFieldNumber = 13;
  const ::std::string& ip_area() const;
  void set_ip_area(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_area(::std::string&& value);
  #endif
  void set_ip_area(const char* value);
  void set_ip_area(const char* value, size_t size);
  ::std::string* mutable_ip_area();
  ::std::string* release_ip_area();
  void set_allocated_ip_area(::std::string* ip_area);

  // optional .LoginValidatebox pb_validatebox = 11;
  bool has_pb_validatebox() const;
  void clear_pb_validatebox();
  static const int kPbValidateboxFieldNumber = 11;
  const ::LoginValidatebox& pb_validatebox() const;
  ::LoginValidatebox* mutable_pb_validatebox();
  ::LoginValidatebox* release_pb_validatebox();
  void set_allocated_pb_validatebox(::LoginValidatebox* pb_validatebox);

  // optional int32 result = 1 [default = 0];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 game_id = 4;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 4;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // optional bool is_guest = 6;
  bool has_is_guest() const;
  void clear_is_guest();
  static const int kIsGuestFieldNumber = 6;
  bool is_guest() const;
  void set_is_guest(bool value);

  // optional bool is_validatebox = 10;
  bool has_is_validatebox() const;
  void clear_is_validatebox();
  static const int kIsValidateboxFieldNumber = 10;
  bool is_validatebox() const;
  void set_is_validatebox(bool value);

  // optional bool enable_transfer = 14;
  bool has_enable_transfer() const;
  void clear_enable_transfer();
  static const int kEnableTransferFieldNumber = 14;
  bool enable_transfer() const;
  void set_enable_transfer(bool value);

  // optional int32 change_alipay_num = 12;
  bool has_change_alipay_num() const;
  void clear_change_alipay_num();
  static const int kChangeAlipayNumFieldNumber = 12;
  ::google::protobuf::int32 change_alipay_num() const;
  void set_change_alipay_num(::google::protobuf::int32 value);

  // optional int32 is_first = 15 [default = 2];
  bool has_is_first() const;
  void clear_is_first();
  static const int kIsFirstFieldNumber = 15;
  ::google::protobuf::int32 is_first() const;
  void set_is_first(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LC_Login)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_guid();
  void clear_has_guid();
  void set_has_account();
  void clear_has_account();
  void set_has_game_id();
  void clear_has_game_id();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_is_guest();
  void clear_has_is_guest();
  void set_has_password();
  void clear_has_password();
  void set_has_alipay_account();
  void clear_has_alipay_account();
  void set_has_alipay_name();
  void clear_has_alipay_name();
  void set_has_is_validatebox();
  void clear_has_is_validatebox();
  void set_has_pb_validatebox();
  void clear_has_pb_validatebox();
  void set_has_change_alipay_num();
  void clear_has_change_alipay_num();
  void set_has_ip_area();
  void clear_has_ip_area();
  void set_has_enable_transfer();
  void clear_has_enable_transfer();
  void set_has_is_first();
  void clear_has_is_first();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_;
  ::google::protobuf::internal::ArenaStringPtr ip_area_;
  ::LoginValidatebox* pb_validatebox_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 game_id_;
  bool is_guest_;
  bool is_validatebox_;
  bool enable_transfer_;
  ::google::protobuf::int32 change_alipay_num_;
  ::google::protobuf::int32 is_first_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CL_LoginBySms : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CL_LoginBySms) */ {
 public:
  CL_LoginBySms();
  virtual ~CL_LoginBySms();

  CL_LoginBySms(const CL_LoginBySms& from);

  inline CL_LoginBySms& operator=(const CL_LoginBySms& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CL_LoginBySms& default_instance();

  static inline const CL_LoginBySms* internal_default_instance() {
    return reinterpret_cast<const CL_LoginBySms*>(
               &_CL_LoginBySms_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CL_LoginBySms* other);

  // implements Message ----------------------------------------------

  inline CL_LoginBySms* New() const PROTOBUF_FINAL { return New(NULL); }

  CL_LoginBySms* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CL_LoginBySms& from);
  void MergeFrom(const CL_LoginBySms& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CL_LoginBySms* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CL_LoginBySms_MsgID MsgID;
  static const MsgID ID =
    CL_LoginBySms_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CL_LoginBySms_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CL_LoginBySms_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CL_LoginBySms_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CL_LoginBySms_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CL_LoginBySms_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CL_LoginBySms_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CL_LoginBySms_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string sms_no = 2;
  bool has_sms_no() const;
  void clear_sms_no();
  static const int kSmsNoFieldNumber = 2;
  const ::std::string& sms_no() const;
  void set_sms_no(const ::std::string& value);
  #if LANG_CXX11
  void set_sms_no(::std::string&& value);
  #endif
  void set_sms_no(const char* value);
  void set_sms_no(const char* value, size_t size);
  ::std::string* mutable_sms_no();
  ::std::string* release_sms_no();
  void set_allocated_sms_no(::std::string* sms_no);

  // optional string phone = 3;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 3;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional string phone_type = 4;
  bool has_phone_type() const;
  void clear_phone_type();
  static const int kPhoneTypeFieldNumber = 4;
  const ::std::string& phone_type() const;
  void set_phone_type(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_type(::std::string&& value);
  #endif
  void set_phone_type(const char* value);
  void set_phone_type(const char* value, size_t size);
  ::std::string* mutable_phone_type();
  ::std::string* release_phone_type();
  void set_allocated_phone_type(::std::string* phone_type);

  // optional string version = 5;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 5;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string channel_id = 6;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 6;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // optional string package_name = 7;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 7;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional string imei = 8;
  bool has_imei() const;
  void clear_imei();
  static const int kImeiFieldNumber = 8;
  const ::std::string& imei() const;
  void set_imei(const ::std::string& value);
  #if LANG_CXX11
  void set_imei(::std::string&& value);
  #endif
  void set_imei(const char* value);
  void set_imei(const char* value, size_t size);
  ::std::string* mutable_imei();
  ::std::string* release_imei();
  void set_allocated_imei(::std::string* imei);

  // optional string ip = 9;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 9;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string ip_area = 10;
  bool has_ip_area() const;
  void clear_ip_area();
  static const int kIpAreaFieldNumber = 10;
  const ::std::string& ip_area() const;
  void set_ip_area(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_area(::std::string&& value);
  #endif
  void set_ip_area(const char* value);
  void set_ip_area(const char* value, size_t size);
  ::std::string* mutable_ip_area();
  ::std::string* release_ip_area();
  void set_allocated_ip_area(::std::string* ip_area);

  // @@protoc_insertion_point(class_scope:CL_LoginBySms)
 private:
  void set_has_account();
  void clear_has_account();
  void set_has_sms_no();
  void clear_has_sms_no();
  void set_has_phone();
  void clear_has_phone();
  void set_has_phone_type();
  void clear_has_phone_type();
  void set_has_version();
  void clear_has_version();
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_imei();
  void clear_has_imei();
  void set_has_ip();
  void clear_has_ip();
  void set_has_ip_area();
  void clear_has_ip_area();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr sms_no_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr phone_type_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr imei_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr ip_area_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_KickClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_KickClient) */ {
 public:
  SC_KickClient();
  virtual ~SC_KickClient();

  SC_KickClient(const SC_KickClient& from);

  inline SC_KickClient& operator=(const SC_KickClient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_KickClient& default_instance();

  static inline const SC_KickClient* internal_default_instance() {
    return reinterpret_cast<const SC_KickClient*>(
               &_SC_KickClient_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SC_KickClient* other);

  // implements Message ----------------------------------------------

  inline SC_KickClient* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_KickClient* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_KickClient& from);
  void MergeFrom(const SC_KickClient& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_KickClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_KickClient_MsgID MsgID;
  static const MsgID ID =
    SC_KickClient_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_KickClient_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_KickClient_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_KickClient_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_KickClient_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_KickClient_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_KickClient_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_KickClient_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_KickClient)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CL_LoginAll : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CL_LoginAll) */ {
 public:
  CL_LoginAll();
  virtual ~CL_LoginAll();

  CL_LoginAll(const CL_LoginAll& from);

  inline CL_LoginAll& operator=(const CL_LoginAll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CL_LoginAll& default_instance();

  static inline const CL_LoginAll* internal_default_instance() {
    return reinterpret_cast<const CL_LoginAll*>(
               &_CL_LoginAll_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CL_LoginAll* other);

  // implements Message ----------------------------------------------

  inline CL_LoginAll* New() const PROTOBUF_FINAL { return New(NULL); }

  CL_LoginAll* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CL_LoginAll& from);
  void MergeFrom(const CL_LoginAll& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CL_LoginAll* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CL_RegAccount reg = 2;
  bool has_reg() const;
  void clear_reg();
  static const int kRegFieldNumber = 2;
  const ::CL_RegAccount& reg() const;
  ::CL_RegAccount* mutable_reg();
  ::CL_RegAccount* release_reg();
  void set_allocated_reg(::CL_RegAccount* reg);

  // optional .CL_Login login = 3;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 3;
  const ::CL_Login& login() const;
  ::CL_Login* mutable_login();
  ::CL_Login* release_login();
  void set_allocated_login(::CL_Login* login);

  // optional .CL_LoginBySms sms = 4;
  bool has_sms() const;
  void clear_sms();
  static const int kSmsFieldNumber = 4;
  const ::CL_LoginBySms& sms() const;
  ::CL_LoginBySms* mutable_sms();
  ::CL_LoginBySms* release_sms();
  void set_allocated_sms(::CL_LoginBySms* sms);

  // optional int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 gate_id = 5;
  bool has_gate_id() const;
  void clear_gate_id();
  static const int kGateIdFieldNumber = 5;
  ::google::protobuf::int32 gate_id() const;
  void set_gate_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CL_LoginAll)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_reg();
  void clear_has_reg();
  void set_has_login();
  void clear_has_login();
  void set_has_sms();
  void clear_has_sms();
  void set_has_gate_id();
  void clear_has_gate_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CL_RegAccount* reg_;
  ::CL_Login* login_;
  ::CL_LoginBySms* sms_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 gate_id_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_RequestSms : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_RequestSms) */ {
 public:
  CS_RequestSms();
  virtual ~CS_RequestSms();

  CS_RequestSms(const CS_RequestSms& from);

  inline CS_RequestSms& operator=(const CS_RequestSms& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_RequestSms& default_instance();

  static inline const CS_RequestSms* internal_default_instance() {
    return reinterpret_cast<const CS_RequestSms*>(
               &_CS_RequestSms_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CS_RequestSms* other);

  // implements Message ----------------------------------------------

  inline CS_RequestSms* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_RequestSms* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_RequestSms& from);
  void MergeFrom(const CS_RequestSms& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_RequestSms* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_RequestSms_MsgID MsgID;
  static const MsgID ID =
    CS_RequestSms_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_RequestSms_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_RequestSms_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_RequestSms_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_RequestSms_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_RequestSms_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_RequestSms_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_RequestSms_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string tel = 1;
  bool has_tel() const;
  void clear_tel();
  static const int kTelFieldNumber = 1;
  const ::std::string& tel() const;
  void set_tel(const ::std::string& value);
  #if LANG_CXX11
  void set_tel(::std::string&& value);
  #endif
  void set_tel(const char* value);
  void set_tel(const char* value, size_t size);
  ::std::string* mutable_tel();
  ::std::string* release_tel();
  void set_allocated_tel(::std::string* tel);

  // optional int32 intention = 2;
  bool has_intention() const;
  void clear_intention();
  static const int kIntentionFieldNumber = 2;
  ::google::protobuf::int32 intention() const;
  void set_intention(::google::protobuf::int32 value);

  // optional int32 gate_session_id = 3;
  bool has_gate_session_id() const;
  void clear_gate_session_id();
  static const int kGateSessionIdFieldNumber = 3;
  ::google::protobuf::int32 gate_session_id() const;
  void set_gate_session_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_RequestSms)
 private:
  void set_has_tel();
  void clear_has_tel();
  void set_has_intention();
  void clear_has_intention();
  void set_has_gate_session_id();
  void clear_has_gate_session_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tel_;
  ::google::protobuf::int32 intention_;
  ::google::protobuf::int32 gate_session_id_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_RequestSms : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_RequestSms) */ {
 public:
  SC_RequestSms();
  virtual ~SC_RequestSms();

  SC_RequestSms(const SC_RequestSms& from);

  inline SC_RequestSms& operator=(const SC_RequestSms& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_RequestSms& default_instance();

  static inline const SC_RequestSms* internal_default_instance() {
    return reinterpret_cast<const SC_RequestSms*>(
               &_SC_RequestSms_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(SC_RequestSms* other);

  // implements Message ----------------------------------------------

  inline SC_RequestSms* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_RequestSms* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_RequestSms& from);
  void MergeFrom(const SC_RequestSms& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_RequestSms* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_RequestSms_MsgID MsgID;
  static const MsgID ID =
    SC_RequestSms_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_RequestSms_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_RequestSms_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_RequestSms_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_RequestSms_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_RequestSms_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_RequestSms_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_RequestSms_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string sms_no = 2;
  bool has_sms_no() const;
  void clear_sms_no();
  static const int kSmsNoFieldNumber = 2;
  const ::std::string& sms_no() const;
  void set_sms_no(const ::std::string& value);
  #if LANG_CXX11
  void set_sms_no(::std::string&& value);
  #endif
  void set_sms_no(const char* value);
  void set_sms_no(const char* value, size_t size);
  ::std::string* mutable_sms_no();
  ::std::string* release_sms_no();
  void set_allocated_sms_no(::std::string* sms_no);

  // optional string tel = 3;
  bool has_tel() const;
  void clear_tel();
  static const int kTelFieldNumber = 3;
  const ::std::string& tel() const;
  void set_tel(const ::std::string& value);
  #if LANG_CXX11
  void set_tel(::std::string&& value);
  #endif
  void set_tel(const char* value);
  void set_tel(const char* value, size_t size);
  ::std::string* mutable_tel();
  ::std::string* release_tel();
  void set_allocated_tel(::std::string* tel);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_RequestSms)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_sms_no();
  void clear_has_sms_no();
  void set_has_tel();
  void clear_has_tel();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sms_no_;
  ::google::protobuf::internal::ArenaStringPtr tel_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ResetAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ResetAccount) */ {
 public:
  CS_ResetAccount();
  virtual ~CS_ResetAccount();

  CS_ResetAccount(const CS_ResetAccount& from);

  inline CS_ResetAccount& operator=(const CS_ResetAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ResetAccount& default_instance();

  static inline const CS_ResetAccount* internal_default_instance() {
    return reinterpret_cast<const CS_ResetAccount*>(
               &_CS_ResetAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CS_ResetAccount* other);

  // implements Message ----------------------------------------------

  inline CS_ResetAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ResetAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ResetAccount& from);
  void MergeFrom(const CS_ResetAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ResetAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ResetAccount_MsgID MsgID;
  static const MsgID ID =
    CS_ResetAccount_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ResetAccount_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ResetAccount_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ResetAccount_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ResetAccount_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ResetAccount_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ResetAccount_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ResetAccount_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string sms_no = 4;
  bool has_sms_no() const;
  void clear_sms_no();
  static const int kSmsNoFieldNumber = 4;
  const ::std::string& sms_no() const;
  void set_sms_no(const ::std::string& value);
  #if LANG_CXX11
  void set_sms_no(::std::string&& value);
  #endif
  void set_sms_no(const char* value);
  void set_sms_no(const char* value, size_t size);
  ::std::string* mutable_sms_no();
  ::std::string* release_sms_no();
  void set_allocated_sms_no(::std::string* sms_no);

  // @@protoc_insertion_point(class_scope:CS_ResetAccount)
 private:
  void set_has_account();
  void clear_has_account();
  void set_has_password();
  void clear_has_password();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_sms_no();
  void clear_has_sms_no();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr sms_no_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ResetAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ResetAccount) */ {
 public:
  SC_ResetAccount();
  virtual ~SC_ResetAccount();

  SC_ResetAccount(const SC_ResetAccount& from);

  inline SC_ResetAccount& operator=(const SC_ResetAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ResetAccount& default_instance();

  static inline const SC_ResetAccount* internal_default_instance() {
    return reinterpret_cast<const SC_ResetAccount*>(
               &_SC_ResetAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SC_ResetAccount* other);

  // implements Message ----------------------------------------------

  inline SC_ResetAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ResetAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ResetAccount& from);
  void MergeFrom(const SC_ResetAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ResetAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ResetAccount_MsgID MsgID;
  static const MsgID ID =
    SC_ResetAccount_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ResetAccount_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ResetAccount_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ResetAccount_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ResetAccount_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ResetAccount_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ResetAccount_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ResetAccount_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_ResetAccount)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_account();
  void clear_has_account();
  void set_has_nickname();
  void clear_has_nickname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_SetPassword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_SetPassword) */ {
 public:
  CS_SetPassword();
  virtual ~CS_SetPassword();

  CS_SetPassword(const CS_SetPassword& from);

  inline CS_SetPassword& operator=(const CS_SetPassword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_SetPassword& default_instance();

  static inline const CS_SetPassword* internal_default_instance() {
    return reinterpret_cast<const CS_SetPassword*>(
               &_CS_SetPassword_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CS_SetPassword* other);

  // implements Message ----------------------------------------------

  inline CS_SetPassword* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_SetPassword* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_SetPassword& from);
  void MergeFrom(const CS_SetPassword& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_SetPassword* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_SetPassword_MsgID MsgID;
  static const MsgID ID =
    CS_SetPassword_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_SetPassword_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_SetPassword_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_SetPassword_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_SetPassword_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_SetPassword_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_SetPassword_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_SetPassword_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string old_password = 1;
  bool has_old_password() const;
  void clear_old_password();
  static const int kOldPasswordFieldNumber = 1;
  const ::std::string& old_password() const;
  void set_old_password(const ::std::string& value);
  #if LANG_CXX11
  void set_old_password(::std::string&& value);
  #endif
  void set_old_password(const char* value);
  void set_old_password(const char* value, size_t size);
  ::std::string* mutable_old_password();
  ::std::string* release_old_password();
  void set_allocated_old_password(::std::string* old_password);

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:CS_SetPassword)
 private:
  void set_has_old_password();
  void clear_has_old_password();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr old_password_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_SetPassword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_SetPassword) */ {
 public:
  SC_SetPassword();
  virtual ~SC_SetPassword();

  SC_SetPassword(const SC_SetPassword& from);

  inline SC_SetPassword& operator=(const SC_SetPassword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SetPassword& default_instance();

  static inline const SC_SetPassword* internal_default_instance() {
    return reinterpret_cast<const SC_SetPassword*>(
               &_SC_SetPassword_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(SC_SetPassword* other);

  // implements Message ----------------------------------------------

  inline SC_SetPassword* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_SetPassword* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_SetPassword& from);
  void MergeFrom(const SC_SetPassword& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_SetPassword* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_SetPassword_MsgID MsgID;
  static const MsgID ID =
    SC_SetPassword_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_SetPassword_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_SetPassword_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_SetPassword_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_SetPassword_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_SetPassword_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_SetPassword_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_SetPassword_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_SetPassword)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_SetPasswordBySms : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_SetPasswordBySms) */ {
 public:
  CS_SetPasswordBySms();
  virtual ~CS_SetPasswordBySms();

  CS_SetPasswordBySms(const CS_SetPasswordBySms& from);

  inline CS_SetPasswordBySms& operator=(const CS_SetPasswordBySms& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_SetPasswordBySms& default_instance();

  static inline const CS_SetPasswordBySms* internal_default_instance() {
    return reinterpret_cast<const CS_SetPasswordBySms*>(
               &_CS_SetPasswordBySms_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CS_SetPasswordBySms* other);

  // implements Message ----------------------------------------------

  inline CS_SetPasswordBySms* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_SetPasswordBySms* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_SetPasswordBySms& from);
  void MergeFrom(const CS_SetPasswordBySms& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_SetPasswordBySms* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_SetPasswordBySms_MsgID MsgID;
  static const MsgID ID =
    CS_SetPasswordBySms_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_SetPasswordBySms_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_SetPasswordBySms_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_SetPasswordBySms_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_SetPasswordBySms_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_SetPasswordBySms_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_SetPasswordBySms_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_SetPasswordBySms_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string password = 1;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 1;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string sms_no = 2;
  bool has_sms_no() const;
  void clear_sms_no();
  static const int kSmsNoFieldNumber = 2;
  const ::std::string& sms_no() const;
  void set_sms_no(const ::std::string& value);
  #if LANG_CXX11
  void set_sms_no(::std::string&& value);
  #endif
  void set_sms_no(const char* value);
  void set_sms_no(const char* value, size_t size);
  ::std::string* mutable_sms_no();
  ::std::string* release_sms_no();
  void set_allocated_sms_no(::std::string* sms_no);

  // @@protoc_insertion_point(class_scope:CS_SetPasswordBySms)
 private:
  void set_has_password();
  void clear_has_password();
  void set_has_sms_no();
  void clear_has_sms_no();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr sms_no_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_SetNickname : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_SetNickname) */ {
 public:
  CS_SetNickname();
  virtual ~CS_SetNickname();

  CS_SetNickname(const CS_SetNickname& from);

  inline CS_SetNickname& operator=(const CS_SetNickname& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_SetNickname& default_instance();

  static inline const CS_SetNickname* internal_default_instance() {
    return reinterpret_cast<const CS_SetNickname*>(
               &_CS_SetNickname_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CS_SetNickname* other);

  // implements Message ----------------------------------------------

  inline CS_SetNickname* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_SetNickname* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_SetNickname& from);
  void MergeFrom(const CS_SetNickname& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_SetNickname* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_SetNickname_MsgID MsgID;
  static const MsgID ID =
    CS_SetNickname_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_SetNickname_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_SetNickname_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_SetNickname_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_SetNickname_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_SetNickname_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_SetNickname_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_SetNickname_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string nickname = 1;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 1;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // @@protoc_insertion_point(class_scope:CS_SetNickname)
 private:
  void set_has_nickname();
  void clear_has_nickname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_SetNickname : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_SetNickname) */ {
 public:
  SC_SetNickname();
  virtual ~SC_SetNickname();

  SC_SetNickname(const SC_SetNickname& from);

  inline SC_SetNickname& operator=(const SC_SetNickname& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SetNickname& default_instance();

  static inline const SC_SetNickname* internal_default_instance() {
    return reinterpret_cast<const SC_SetNickname*>(
               &_SC_SetNickname_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(SC_SetNickname* other);

  // implements Message ----------------------------------------------

  inline SC_SetNickname* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_SetNickname* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_SetNickname& from);
  void MergeFrom(const SC_SetNickname& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_SetNickname* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_SetNickname_MsgID MsgID;
  static const MsgID ID =
    SC_SetNickname_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_SetNickname_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_SetNickname_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_SetNickname_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_SetNickname_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_SetNickname_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_SetNickname_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_SetNickname_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string nickname = 1;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 1;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_SetNickname)
 private:
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ChangeHeaderIcon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ChangeHeaderIcon) */ {
 public:
  CS_ChangeHeaderIcon();
  virtual ~CS_ChangeHeaderIcon();

  CS_ChangeHeaderIcon(const CS_ChangeHeaderIcon& from);

  inline CS_ChangeHeaderIcon& operator=(const CS_ChangeHeaderIcon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ChangeHeaderIcon& default_instance();

  static inline const CS_ChangeHeaderIcon* internal_default_instance() {
    return reinterpret_cast<const CS_ChangeHeaderIcon*>(
               &_CS_ChangeHeaderIcon_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CS_ChangeHeaderIcon* other);

  // implements Message ----------------------------------------------

  inline CS_ChangeHeaderIcon* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ChangeHeaderIcon* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ChangeHeaderIcon& from);
  void MergeFrom(const CS_ChangeHeaderIcon& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ChangeHeaderIcon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ChangeHeaderIcon_MsgID MsgID;
  static const MsgID ID =
    CS_ChangeHeaderIcon_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ChangeHeaderIcon_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ChangeHeaderIcon_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ChangeHeaderIcon_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ChangeHeaderIcon_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ChangeHeaderIcon_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ChangeHeaderIcon_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ChangeHeaderIcon_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 header_icon = 1 [default = 0];
  bool has_header_icon() const;
  void clear_header_icon();
  static const int kHeaderIconFieldNumber = 1;
  ::google::protobuf::int32 header_icon() const;
  void set_header_icon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_ChangeHeaderIcon)
 private:
  void set_has_header_icon();
  void clear_has_header_icon();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 header_icon_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ChangeHeaderIcon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ChangeHeaderIcon) */ {
 public:
  SC_ChangeHeaderIcon();
  virtual ~SC_ChangeHeaderIcon();

  SC_ChangeHeaderIcon(const SC_ChangeHeaderIcon& from);

  inline SC_ChangeHeaderIcon& operator=(const SC_ChangeHeaderIcon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ChangeHeaderIcon& default_instance();

  static inline const SC_ChangeHeaderIcon* internal_default_instance() {
    return reinterpret_cast<const SC_ChangeHeaderIcon*>(
               &_SC_ChangeHeaderIcon_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(SC_ChangeHeaderIcon* other);

  // implements Message ----------------------------------------------

  inline SC_ChangeHeaderIcon* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ChangeHeaderIcon* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ChangeHeaderIcon& from);
  void MergeFrom(const SC_ChangeHeaderIcon& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ChangeHeaderIcon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ChangeHeaderIcon_MsgID MsgID;
  static const MsgID ID =
    SC_ChangeHeaderIcon_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ChangeHeaderIcon_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ChangeHeaderIcon_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ChangeHeaderIcon_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ChangeHeaderIcon_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ChangeHeaderIcon_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ChangeHeaderIcon_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ChangeHeaderIcon_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 header_icon = 1 [default = 0];
  bool has_header_icon() const;
  void clear_header_icon();
  static const int kHeaderIconFieldNumber = 1;
  ::google::protobuf::int32 header_icon() const;
  void set_header_icon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_ChangeHeaderIcon)
 private:
  void set_has_header_icon();
  void clear_has_header_icon();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 header_icon_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InviterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InviterInfo) */ {
 public:
  InviterInfo();
  virtual ~InviterInfo();

  InviterInfo(const InviterInfo& from);

  inline InviterInfo& operator=(const InviterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviterInfo& default_instance();

  static inline const InviterInfo* internal_default_instance() {
    return reinterpret_cast<const InviterInfo*>(
               &_InviterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(InviterInfo* other);

  // implements Message ----------------------------------------------

  inline InviterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  InviterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InviterInfo& from);
  void MergeFrom(const InviterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InviterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string alipay_name_y = 3;
  bool has_alipay_name_y() const;
  void clear_alipay_name_y();
  static const int kAlipayNameYFieldNumber = 3;
  const ::std::string& alipay_name_y() const;
  void set_alipay_name_y(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name_y(::std::string&& value);
  #endif
  void set_alipay_name_y(const char* value);
  void set_alipay_name_y(const char* value, size_t size);
  ::std::string* mutable_alipay_name_y();
  ::std::string* release_alipay_name_y();
  void set_allocated_alipay_name_y(::std::string* alipay_name_y);

  // optional string alipay_account_y = 4;
  bool has_alipay_account_y() const;
  void clear_alipay_account_y();
  static const int kAlipayAccountYFieldNumber = 4;
  const ::std::string& alipay_account_y() const;
  void set_alipay_account_y(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account_y(::std::string&& value);
  #endif
  void set_alipay_account_y(const char* value);
  void set_alipay_account_y(const char* value, size_t size);
  ::std::string* mutable_alipay_account_y();
  ::std::string* release_alipay_account_y();
  void set_allocated_alipay_account_y(::std::string* alipay_account_y);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:InviterInfo)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_account();
  void clear_has_account();
  void set_has_alipay_name_y();
  void clear_has_alipay_name_y();
  void set_has_alipay_account_y();
  void clear_has_alipay_account_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_y_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_y_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CL_GetInviterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CL_GetInviterInfo) */ {
 public:
  CL_GetInviterInfo();
  virtual ~CL_GetInviterInfo();

  CL_GetInviterInfo(const CL_GetInviterInfo& from);

  inline CL_GetInviterInfo& operator=(const CL_GetInviterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CL_GetInviterInfo& default_instance();

  static inline const CL_GetInviterInfo* internal_default_instance() {
    return reinterpret_cast<const CL_GetInviterInfo*>(
               &_CL_GetInviterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(CL_GetInviterInfo* other);

  // implements Message ----------------------------------------------

  inline CL_GetInviterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CL_GetInviterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CL_GetInviterInfo& from);
  void MergeFrom(const CL_GetInviterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CL_GetInviterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CL_GetInviterInfo_MsgID MsgID;
  static const MsgID ID =
    CL_GetInviterInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CL_GetInviterInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CL_GetInviterInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CL_GetInviterInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CL_GetInviterInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CL_GetInviterInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CL_GetInviterInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CL_GetInviterInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string invite_code = 1;
  bool has_invite_code() const;
  void clear_invite_code();
  static const int kInviteCodeFieldNumber = 1;
  const ::std::string& invite_code() const;
  void set_invite_code(const ::std::string& value);
  #if LANG_CXX11
  void set_invite_code(::std::string&& value);
  #endif
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  ::std::string* mutable_invite_code();
  ::std::string* release_invite_code();
  void set_allocated_invite_code(::std::string* invite_code);

  // optional int32 gate_session_id = 2;
  bool has_gate_session_id() const;
  void clear_gate_session_id();
  static const int kGateSessionIdFieldNumber = 2;
  ::google::protobuf::int32 gate_session_id() const;
  void set_gate_session_id(::google::protobuf::int32 value);

  // optional int32 gate_id = 3;
  bool has_gate_id() const;
  void clear_gate_id();
  static const int kGateIdFieldNumber = 3;
  ::google::protobuf::int32 gate_id() const;
  void set_gate_id(::google::protobuf::int32 value);

  // optional int32 guid = 4;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 4;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CL_GetInviterInfo)
 private:
  void set_has_invite_code();
  void clear_has_invite_code();
  void set_has_gate_session_id();
  void clear_has_gate_session_id();
  void set_has_gate_id();
  void clear_has_gate_id();
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr invite_code_;
  ::google::protobuf::int32 gate_session_id_;
  ::google::protobuf::int32 gate_id_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LC_GetInviterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LC_GetInviterInfo) */ {
 public:
  LC_GetInviterInfo();
  virtual ~LC_GetInviterInfo();

  LC_GetInviterInfo(const LC_GetInviterInfo& from);

  inline LC_GetInviterInfo& operator=(const LC_GetInviterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LC_GetInviterInfo& default_instance();

  static inline const LC_GetInviterInfo* internal_default_instance() {
    return reinterpret_cast<const LC_GetInviterInfo*>(
               &_LC_GetInviterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(LC_GetInviterInfo* other);

  // implements Message ----------------------------------------------

  inline LC_GetInviterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  LC_GetInviterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LC_GetInviterInfo& from);
  void MergeFrom(const LC_GetInviterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LC_GetInviterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LC_GetInviterInfo_MsgID MsgID;
  static const MsgID ID =
    LC_GetInviterInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LC_GetInviterInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LC_GetInviterInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LC_GetInviterInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LC_GetInviterInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LC_GetInviterInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LC_GetInviterInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LC_GetInviterInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string alipay_account = 3;
  bool has_alipay_account() const;
  void clear_alipay_account();
  static const int kAlipayAccountFieldNumber = 3;
  const ::std::string& alipay_account() const;
  void set_alipay_account(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account(::std::string&& value);
  #endif
  void set_alipay_account(const char* value);
  void set_alipay_account(const char* value, size_t size);
  ::std::string* mutable_alipay_account();
  ::std::string* release_alipay_account();
  void set_allocated_alipay_account(::std::string* alipay_account);

  // optional string alipay_name = 4;
  bool has_alipay_name() const;
  void clear_alipay_name();
  static const int kAlipayNameFieldNumber = 4;
  const ::std::string& alipay_name() const;
  void set_alipay_name(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name(::std::string&& value);
  #endif
  void set_alipay_name(const char* value);
  void set_alipay_name(const char* value, size_t size);
  ::std::string* mutable_alipay_name();
  ::std::string* release_alipay_name();
  void set_allocated_alipay_name(::std::string* alipay_name);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 gate_session_id = 5;
  bool has_gate_session_id() const;
  void clear_gate_session_id();
  static const int kGateSessionIdFieldNumber = 5;
  ::google::protobuf::int32 gate_session_id() const;
  void set_gate_session_id(::google::protobuf::int32 value);

  // optional int32 gate_id = 6;
  bool has_gate_id() const;
  void clear_gate_id();
  static const int kGateIdFieldNumber = 6;
  ::google::protobuf::int32 gate_id() const;
  void set_gate_id(::google::protobuf::int32 value);

  // optional int32 guid_self = 7;
  bool has_guid_self() const;
  void clear_guid_self();
  static const int kGuidSelfFieldNumber = 7;
  ::google::protobuf::int32 guid_self() const;
  void set_guid_self(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LC_GetInviterInfo)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_account();
  void clear_has_account();
  void set_has_alipay_account();
  void clear_has_alipay_account();
  void set_has_alipay_name();
  void clear_has_alipay_name();
  void set_has_gate_session_id();
  void clear_has_gate_session_id();
  void set_has_gate_id();
  void clear_has_gate_id();
  void set_has_guid_self();
  void clear_has_guid_self();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 gate_session_id_;
  ::google::protobuf::int32 gate_id_;
  ::google::protobuf::int32 guid_self_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_RequestPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_RequestPlayerInfo) */ {
 public:
  CS_RequestPlayerInfo();
  virtual ~CS_RequestPlayerInfo();

  CS_RequestPlayerInfo(const CS_RequestPlayerInfo& from);

  inline CS_RequestPlayerInfo& operator=(const CS_RequestPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_RequestPlayerInfo& default_instance();

  static inline const CS_RequestPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const CS_RequestPlayerInfo*>(
               &_CS_RequestPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(CS_RequestPlayerInfo* other);

  // implements Message ----------------------------------------------

  inline CS_RequestPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_RequestPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_RequestPlayerInfo& from);
  void MergeFrom(const CS_RequestPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_RequestPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_RequestPlayerInfo_MsgID MsgID;
  static const MsgID ID =
    CS_RequestPlayerInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_RequestPlayerInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_RequestPlayerInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_RequestPlayerInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_RequestPlayerInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_RequestPlayerInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_RequestPlayerInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_RequestPlayerInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_RequestPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ReplyPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ReplyPlayerInfo) */ {
 public:
  SC_ReplyPlayerInfo();
  virtual ~SC_ReplyPlayerInfo();

  SC_ReplyPlayerInfo(const SC_ReplyPlayerInfo& from);

  inline SC_ReplyPlayerInfo& operator=(const SC_ReplyPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ReplyPlayerInfo& default_instance();

  static inline const SC_ReplyPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const SC_ReplyPlayerInfo*>(
               &_SC_ReplyPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(SC_ReplyPlayerInfo* other);

  // implements Message ----------------------------------------------

  inline SC_ReplyPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ReplyPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ReplyPlayerInfo& from);
  void MergeFrom(const SC_ReplyPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ReplyPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ReplyPlayerInfo_MsgID MsgID;
  static const MsgID ID =
    SC_ReplyPlayerInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ReplyPlayerInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ReplyPlayerInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ReplyPlayerInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ReplyPlayerInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ReplyPlayerInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ReplyPlayerInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ReplyPlayerInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .PlayerBaseInfo pb_base_info = 1;
  bool has_pb_base_info() const;
  void clear_pb_base_info();
  static const int kPbBaseInfoFieldNumber = 1;
  const ::PlayerBaseInfo& pb_base_info() const;
  ::PlayerBaseInfo* mutable_pb_base_info();
  ::PlayerBaseInfo* release_pb_base_info();
  void set_allocated_pb_base_info(::PlayerBaseInfo* pb_base_info);

  // optional .ItemBagInfo pb_item_bag = 2;
  bool has_pb_item_bag() const;
  void clear_pb_item_bag();
  static const int kPbItemBagFieldNumber = 2;
  const ::ItemBagInfo& pb_item_bag() const;
  ::ItemBagInfo* mutable_pb_item_bag();
  ::ItemBagInfo* release_pb_item_bag();
  void set_allocated_pb_item_bag(::ItemBagInfo* pb_item_bag);

  // optional .MailListInfo pb_mail_list = 3;
  bool has_pb_mail_list() const;
  void clear_pb_mail_list();
  static const int kPbMailListFieldNumber = 3;
  const ::MailListInfo& pb_mail_list() const;
  ::MailListInfo* mutable_pb_mail_list();
  ::MailListInfo* release_pb_mail_list();
  void set_allocated_pb_mail_list(::MailListInfo* pb_mail_list);

  // @@protoc_insertion_point(class_scope:SC_ReplyPlayerInfo)
 private:
  void set_has_pb_base_info();
  void clear_has_pb_base_info();
  void set_has_pb_item_bag();
  void clear_has_pb_item_bag();
  void set_has_pb_mail_list();
  void clear_has_pb_mail_list();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::PlayerBaseInfo* pb_base_info_;
  ::ItemBagInfo* pb_item_bag_;
  ::MailListInfo* pb_mail_list_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg) */ {
 public:
  GameMsg();
  virtual ~GameMsg();

  GameMsg(const GameMsg& from);

  inline GameMsg& operator=(const GameMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameMsg& default_instance();

  static inline const GameMsg* internal_default_instance() {
    return reinterpret_cast<const GameMsg*>(
               &_GameMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(GameMsg* other);

  // implements Message ----------------------------------------------

  inline GameMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  GameMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameMsg& from);
  void MergeFrom(const GameMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 first_game_type = 1;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 1;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional int32 second_game_type = 2;
  bool has_second_game_type() const;
  void clear_second_game_type();
  static const int kSecondGameTypeFieldNumber = 2;
  ::google::protobuf::int32 second_game_type() const;
  void set_second_game_type(::google::protobuf::int32 value);

  // optional int32 room_id = 3;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // optional int32 table_id = 4;
  bool has_table_id() const;
  void clear_table_id();
  static const int kTableIdFieldNumber = 4;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // optional int32 chair_id = 5;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 5;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg)
 private:
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_second_game_type();
  void clear_has_second_game_type();
  void set_has_room_id();
  void clear_has_room_id();
  void set_has_table_id();
  void clear_has_table_id();
  void set_has_chair_id();
  void clear_has_chair_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 first_game_type_;
  ::google::protobuf::int32 second_game_type_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 chair_id_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ReplyPlayerInfoComplete : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ReplyPlayerInfoComplete) */ {
 public:
  SC_ReplyPlayerInfoComplete();
  virtual ~SC_ReplyPlayerInfoComplete();

  SC_ReplyPlayerInfoComplete(const SC_ReplyPlayerInfoComplete& from);

  inline SC_ReplyPlayerInfoComplete& operator=(const SC_ReplyPlayerInfoComplete& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ReplyPlayerInfoComplete& default_instance();

  static inline const SC_ReplyPlayerInfoComplete* internal_default_instance() {
    return reinterpret_cast<const SC_ReplyPlayerInfoComplete*>(
               &_SC_ReplyPlayerInfoComplete_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(SC_ReplyPlayerInfoComplete* other);

  // implements Message ----------------------------------------------

  inline SC_ReplyPlayerInfoComplete* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ReplyPlayerInfoComplete* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ReplyPlayerInfoComplete& from);
  void MergeFrom(const SC_ReplyPlayerInfoComplete& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ReplyPlayerInfoComplete* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ReplyPlayerInfoComplete_MsgID MsgID;
  static const MsgID ID =
    SC_ReplyPlayerInfoComplete_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ReplyPlayerInfoComplete_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ReplyPlayerInfoComplete_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ReplyPlayerInfoComplete_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ReplyPlayerInfoComplete_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ReplyPlayerInfoComplete_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ReplyPlayerInfoComplete_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ReplyPlayerInfoComplete_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .GameMsg pb_gmMessage = 1;
  bool has_pb_gmmessage() const;
  void clear_pb_gmmessage();
  static const int kPbGmMessageFieldNumber = 1;
  const ::GameMsg& pb_gmmessage() const;
  ::GameMsg* mutable_pb_gmmessage();
  ::GameMsg* release_pb_gmmessage();
  void set_allocated_pb_gmmessage(::GameMsg* pb_gmmessage);

  // @@protoc_insertion_point(class_scope:SC_ReplyPlayerInfoComplete)
 private:
  void set_has_pb_gmmessage();
  void clear_has_pb_gmmessage();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::GameMsg* pb_gmmessage_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_LoginValidatebox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_LoginValidatebox) */ {
 public:
  CS_LoginValidatebox();
  virtual ~CS_LoginValidatebox();

  CS_LoginValidatebox(const CS_LoginValidatebox& from);

  inline CS_LoginValidatebox& operator=(const CS_LoginValidatebox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_LoginValidatebox& default_instance();

  static inline const CS_LoginValidatebox* internal_default_instance() {
    return reinterpret_cast<const CS_LoginValidatebox*>(
               &_CS_LoginValidatebox_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(CS_LoginValidatebox* other);

  // implements Message ----------------------------------------------

  inline CS_LoginValidatebox* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_LoginValidatebox* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_LoginValidatebox& from);
  void MergeFrom(const CS_LoginValidatebox& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_LoginValidatebox* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_LoginValidatebox_MsgID MsgID;
  static const MsgID ID =
    CS_LoginValidatebox_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_LoginValidatebox_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_LoginValidatebox_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_LoginValidatebox_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_LoginValidatebox_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_LoginValidatebox_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_LoginValidatebox_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_LoginValidatebox_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 answer = 2;
  int answer_size() const;
  void clear_answer();
  static const int kAnswerFieldNumber = 2;
  ::google::protobuf::int32 answer(int index) const;
  void set_answer(int index, ::google::protobuf::int32 value);
  void add_answer(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      answer() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_answer();

  // @@protoc_insertion_point(class_scope:CS_LoginValidatebox)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > answer_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_LoginValidatebox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LoginValidatebox) */ {
 public:
  SC_LoginValidatebox();
  virtual ~SC_LoginValidatebox();

  SC_LoginValidatebox(const SC_LoginValidatebox& from);

  inline SC_LoginValidatebox& operator=(const SC_LoginValidatebox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LoginValidatebox& default_instance();

  static inline const SC_LoginValidatebox* internal_default_instance() {
    return reinterpret_cast<const SC_LoginValidatebox*>(
               &_SC_LoginValidatebox_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(SC_LoginValidatebox* other);

  // implements Message ----------------------------------------------

  inline SC_LoginValidatebox* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_LoginValidatebox* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_LoginValidatebox& from);
  void MergeFrom(const SC_LoginValidatebox& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_LoginValidatebox* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_LoginValidatebox_MsgID MsgID;
  static const MsgID ID =
    SC_LoginValidatebox_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_LoginValidatebox_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_LoginValidatebox_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_LoginValidatebox_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_LoginValidatebox_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_LoginValidatebox_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_LoginValidatebox_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_LoginValidatebox_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .LoginValidatebox pb_validatebox = 2;
  bool has_pb_validatebox() const;
  void clear_pb_validatebox();
  static const int kPbValidateboxFieldNumber = 2;
  const ::LoginValidatebox& pb_validatebox() const;
  ::LoginValidatebox* mutable_pb_validatebox();
  ::LoginValidatebox* release_pb_validatebox();
  void set_allocated_pb_validatebox(::LoginValidatebox* pb_validatebox);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_LoginValidatebox)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_pb_validatebox();
  void clear_has_pb_validatebox();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::LoginValidatebox* pb_validatebox_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ChangeGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ChangeGame) */ {
 public:
  CS_ChangeGame();
  virtual ~CS_ChangeGame();

  CS_ChangeGame(const CS_ChangeGame& from);

  inline CS_ChangeGame& operator=(const CS_ChangeGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ChangeGame& default_instance();

  static inline const CS_ChangeGame* internal_default_instance() {
    return reinterpret_cast<const CS_ChangeGame*>(
               &_CS_ChangeGame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(CS_ChangeGame* other);

  // implements Message ----------------------------------------------

  inline CS_ChangeGame* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ChangeGame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ChangeGame& from);
  void MergeFrom(const CS_ChangeGame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ChangeGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ChangeGame_MsgID MsgID;
  static const MsgID ID =
    CS_ChangeGame_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ChangeGame_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ChangeGame_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ChangeGame_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ChangeGame_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ChangeGame_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ChangeGame_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ChangeGame_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 first_game_type = 1;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 1;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional int32 second_game_type = 2;
  bool has_second_game_type() const;
  void clear_second_game_type();
  static const int kSecondGameTypeFieldNumber = 2;
  ::google::protobuf::int32 second_game_type() const;
  void set_second_game_type(::google::protobuf::int32 value);

  // optional int32 private_room_opt = 3;
  bool has_private_room_opt() const;
  void clear_private_room_opt();
  static const int kPrivateRoomOptFieldNumber = 3;
  ::google::protobuf::int32 private_room_opt() const;
  void set_private_room_opt(::google::protobuf::int32 value);

  // optional int32 owner_guid = 4;
  bool has_owner_guid() const;
  void clear_owner_guid();
  static const int kOwnerGuidFieldNumber = 4;
  ::google::protobuf::int32 owner_guid() const;
  void set_owner_guid(::google::protobuf::int32 value);

  // optional int32 private_room_chair_count = 5;
  bool has_private_room_chair_count() const;
  void clear_private_room_chair_count();
  static const int kPrivateRoomChairCountFieldNumber = 5;
  ::google::protobuf::int32 private_room_chair_count() const;
  void set_private_room_chair_count(::google::protobuf::int32 value);

  // optional int32 private_room_score_type = 6;
  bool has_private_room_score_type() const;
  void clear_private_room_score_type();
  static const int kPrivateRoomScoreTypeFieldNumber = 6;
  ::google::protobuf::int32 private_room_score_type() const;
  void set_private_room_score_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_ChangeGame)
 private:
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_second_game_type();
  void clear_has_second_game_type();
  void set_has_private_room_opt();
  void clear_has_private_room_opt();
  void set_has_owner_guid();
  void clear_has_owner_guid();
  void set_has_private_room_chair_count();
  void clear_has_private_room_chair_count();
  void set_has_private_room_score_type();
  void clear_has_private_room_score_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 first_game_type_;
  ::google::protobuf::int32 second_game_type_;
  ::google::protobuf::int32 private_room_opt_;
  ::google::protobuf::int32 owner_guid_;
  ::google::protobuf::int32 private_room_chair_count_;
  ::google::protobuf::int32 private_room_score_type_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_JoinPrivateRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_JoinPrivateRoom) */ {
 public:
  CS_JoinPrivateRoom();
  virtual ~CS_JoinPrivateRoom();

  CS_JoinPrivateRoom(const CS_JoinPrivateRoom& from);

  inline CS_JoinPrivateRoom& operator=(const CS_JoinPrivateRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_JoinPrivateRoom& default_instance();

  static inline const CS_JoinPrivateRoom* internal_default_instance() {
    return reinterpret_cast<const CS_JoinPrivateRoom*>(
               &_CS_JoinPrivateRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(CS_JoinPrivateRoom* other);

  // implements Message ----------------------------------------------

  inline CS_JoinPrivateRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_JoinPrivateRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_JoinPrivateRoom& from);
  void MergeFrom(const CS_JoinPrivateRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_JoinPrivateRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_JoinPrivateRoom_MsgID MsgID;
  static const MsgID ID =
    CS_JoinPrivateRoom_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_JoinPrivateRoom_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_JoinPrivateRoom_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_JoinPrivateRoom_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_JoinPrivateRoom_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_JoinPrivateRoom_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_JoinPrivateRoom_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_JoinPrivateRoom_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 owner_guid = 1;
  bool has_owner_guid() const;
  void clear_owner_guid();
  static const int kOwnerGuidFieldNumber = 1;
  ::google::protobuf::int32 owner_guid() const;
  void set_owner_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_JoinPrivateRoom)
 private:
  void set_has_owner_guid();
  void clear_has_owner_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 owner_guid_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_JoinPrivateRoomFailed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_JoinPrivateRoomFailed) */ {
 public:
  SC_JoinPrivateRoomFailed();
  virtual ~SC_JoinPrivateRoomFailed();

  SC_JoinPrivateRoomFailed(const SC_JoinPrivateRoomFailed& from);

  inline SC_JoinPrivateRoomFailed& operator=(const SC_JoinPrivateRoomFailed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_JoinPrivateRoomFailed& default_instance();

  static inline const SC_JoinPrivateRoomFailed* internal_default_instance() {
    return reinterpret_cast<const SC_JoinPrivateRoomFailed*>(
               &_SC_JoinPrivateRoomFailed_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(SC_JoinPrivateRoomFailed* other);

  // implements Message ----------------------------------------------

  inline SC_JoinPrivateRoomFailed* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_JoinPrivateRoomFailed* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_JoinPrivateRoomFailed& from);
  void MergeFrom(const SC_JoinPrivateRoomFailed& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_JoinPrivateRoomFailed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_JoinPrivateRoomFailed_MsgID MsgID;
  static const MsgID ID =
    SC_JoinPrivateRoomFailed_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_JoinPrivateRoomFailed_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_JoinPrivateRoomFailed_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_JoinPrivateRoomFailed_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_JoinPrivateRoomFailed_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_JoinPrivateRoomFailed_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_JoinPrivateRoomFailed_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_JoinPrivateRoomFailed_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 owner_guid = 1;
  bool has_owner_guid() const;
  void clear_owner_guid();
  static const int kOwnerGuidFieldNumber = 1;
  ::google::protobuf::int32 owner_guid() const;
  void set_owner_guid(::google::protobuf::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_JoinPrivateRoomFailed)
 private:
  void set_has_owner_guid();
  void clear_has_owner_guid();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 owner_guid_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_PrivateRoomInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_PrivateRoomInfo) */ {
 public:
  CS_PrivateRoomInfo();
  virtual ~CS_PrivateRoomInfo();

  CS_PrivateRoomInfo(const CS_PrivateRoomInfo& from);

  inline CS_PrivateRoomInfo& operator=(const CS_PrivateRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_PrivateRoomInfo& default_instance();

  static inline const CS_PrivateRoomInfo* internal_default_instance() {
    return reinterpret_cast<const CS_PrivateRoomInfo*>(
               &_CS_PrivateRoomInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(CS_PrivateRoomInfo* other);

  // implements Message ----------------------------------------------

  inline CS_PrivateRoomInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_PrivateRoomInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_PrivateRoomInfo& from);
  void MergeFrom(const CS_PrivateRoomInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_PrivateRoomInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_PrivateRoomInfo_MsgID MsgID;
  static const MsgID ID =
    CS_PrivateRoomInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_PrivateRoomInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_PrivateRoomInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_PrivateRoomInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_PrivateRoomInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_PrivateRoomInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_PrivateRoomInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_PrivateRoomInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_PrivateRoomInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PrivateRoomInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PrivateRoomInfo) */ {
 public:
  PrivateRoomInfo();
  virtual ~PrivateRoomInfo();

  PrivateRoomInfo(const PrivateRoomInfo& from);

  inline PrivateRoomInfo& operator=(const PrivateRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrivateRoomInfo& default_instance();

  static inline const PrivateRoomInfo* internal_default_instance() {
    return reinterpret_cast<const PrivateRoomInfo*>(
               &_PrivateRoomInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(PrivateRoomInfo* other);

  // implements Message ----------------------------------------------

  inline PrivateRoomInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PrivateRoomInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PrivateRoomInfo& from);
  void MergeFrom(const PrivateRoomInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PrivateRoomInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 table_count = 2;
  int table_count_size() const;
  void clear_table_count();
  static const int kTableCountFieldNumber = 2;
  ::google::protobuf::int32 table_count(int index) const;
  void set_table_count(int index, ::google::protobuf::int32 value);
  void add_table_count(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      table_count() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_table_count();

  // repeated int32 cell_money = 3;
  int cell_money_size() const;
  void clear_cell_money();
  static const int kCellMoneyFieldNumber = 3;
  ::google::protobuf::int32 cell_money(int index) const;
  void set_cell_money(int index, ::google::protobuf::int32 value);
  void add_cell_money(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cell_money() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cell_money();

  // optional int32 first_game_type = 1;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 1;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PrivateRoomInfo)
 private:
  void set_has_first_game_type();
  void clear_has_first_game_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > table_count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cell_money_;
  ::google::protobuf::int32 first_game_type_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_PrivateRoomInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_PrivateRoomInfo) */ {
 public:
  SC_PrivateRoomInfo();
  virtual ~SC_PrivateRoomInfo();

  SC_PrivateRoomInfo(const SC_PrivateRoomInfo& from);

  inline SC_PrivateRoomInfo& operator=(const SC_PrivateRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_PrivateRoomInfo& default_instance();

  static inline const SC_PrivateRoomInfo* internal_default_instance() {
    return reinterpret_cast<const SC_PrivateRoomInfo*>(
               &_SC_PrivateRoomInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(SC_PrivateRoomInfo* other);

  // implements Message ----------------------------------------------

  inline SC_PrivateRoomInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_PrivateRoomInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_PrivateRoomInfo& from);
  void MergeFrom(const SC_PrivateRoomInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_PrivateRoomInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_PrivateRoomInfo_MsgID MsgID;
  static const MsgID ID =
    SC_PrivateRoomInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_PrivateRoomInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_PrivateRoomInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_PrivateRoomInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_PrivateRoomInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_PrivateRoomInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_PrivateRoomInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_PrivateRoomInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PrivateRoomInfo pb_info = 1;
  int pb_info_size() const;
  void clear_pb_info();
  static const int kPbInfoFieldNumber = 1;
  const ::PrivateRoomInfo& pb_info(int index) const;
  ::PrivateRoomInfo* mutable_pb_info(int index);
  ::PrivateRoomInfo* add_pb_info();
  ::google::protobuf::RepeatedPtrField< ::PrivateRoomInfo >*
      mutable_pb_info();
  const ::google::protobuf::RepeatedPtrField< ::PrivateRoomInfo >&
      pb_info() const;

  // @@protoc_insertion_point(class_scope:SC_PrivateRoomInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PrivateRoomInfo > pb_info_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GC_GameServerCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GC_GameServerCfg) */ {
 public:
  GC_GameServerCfg();
  virtual ~GC_GameServerCfg();

  GC_GameServerCfg(const GC_GameServerCfg& from);

  inline GC_GameServerCfg& operator=(const GC_GameServerCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_GameServerCfg& default_instance();

  static inline const GC_GameServerCfg* internal_default_instance() {
    return reinterpret_cast<const GC_GameServerCfg*>(
               &_GC_GameServerCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(GC_GameServerCfg* other);

  // implements Message ----------------------------------------------

  inline GC_GameServerCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  GC_GameServerCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GC_GameServerCfg& from);
  void MergeFrom(const GC_GameServerCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GC_GameServerCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GC_GameServerCfg_MsgID MsgID;
  static const MsgID ID =
    GC_GameServerCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return GC_GameServerCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    GC_GameServerCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    GC_GameServerCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    GC_GameServerCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return GC_GameServerCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return GC_GameServerCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return GC_GameServerCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .GameClientRoomListCfg pb_cfg = 1;
  int pb_cfg_size() const;
  void clear_pb_cfg();
  static const int kPbCfgFieldNumber = 1;
  const ::GameClientRoomListCfg& pb_cfg(int index) const;
  ::GameClientRoomListCfg* mutable_pb_cfg(int index);
  ::GameClientRoomListCfg* add_pb_cfg();
  ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg >*
      mutable_pb_cfg();
  const ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg >&
      pb_cfg() const;

  // @@protoc_insertion_point(class_scope:GC_GameServerCfg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg > pb_cfg_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CG_GameServerCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CG_GameServerCfg) */ {
 public:
  CG_GameServerCfg();
  virtual ~CG_GameServerCfg();

  CG_GameServerCfg(const CG_GameServerCfg& from);

  inline CG_GameServerCfg& operator=(const CG_GameServerCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_GameServerCfg& default_instance();

  static inline const CG_GameServerCfg* internal_default_instance() {
    return reinterpret_cast<const CG_GameServerCfg*>(
               &_CG_GameServerCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(CG_GameServerCfg* other);

  // implements Message ----------------------------------------------

  inline CG_GameServerCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  CG_GameServerCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CG_GameServerCfg& from);
  void MergeFrom(const CG_GameServerCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CG_GameServerCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CG_GameServerCfg_MsgID MsgID;
  static const MsgID ID =
    CG_GameServerCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CG_GameServerCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CG_GameServerCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CG_GameServerCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CG_GameServerCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CG_GameServerCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CG_GameServerCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CG_GameServerCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CG_GameServerCfg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_BankSetPassword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_BankSetPassword) */ {
 public:
  CS_BankSetPassword();
  virtual ~CS_BankSetPassword();

  CS_BankSetPassword(const CS_BankSetPassword& from);

  inline CS_BankSetPassword& operator=(const CS_BankSetPassword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_BankSetPassword& default_instance();

  static inline const CS_BankSetPassword* internal_default_instance() {
    return reinterpret_cast<const CS_BankSetPassword*>(
               &_CS_BankSetPassword_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(CS_BankSetPassword* other);

  // implements Message ----------------------------------------------

  inline CS_BankSetPassword* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_BankSetPassword* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_BankSetPassword& from);
  void MergeFrom(const CS_BankSetPassword& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_BankSetPassword* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_BankSetPassword_MsgID MsgID;
  static const MsgID ID =
    CS_BankSetPassword_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_BankSetPassword_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_BankSetPassword_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_BankSetPassword_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_BankSetPassword_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_BankSetPassword_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_BankSetPassword_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_BankSetPassword_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string password = 1;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 1;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:CS_BankSetPassword)
 private:
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_BankSetPassword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_BankSetPassword) */ {
 public:
  SC_BankSetPassword();
  virtual ~SC_BankSetPassword();

  SC_BankSetPassword(const SC_BankSetPassword& from);

  inline SC_BankSetPassword& operator=(const SC_BankSetPassword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_BankSetPassword& default_instance();

  static inline const SC_BankSetPassword* internal_default_instance() {
    return reinterpret_cast<const SC_BankSetPassword*>(
               &_SC_BankSetPassword_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(SC_BankSetPassword* other);

  // implements Message ----------------------------------------------

  inline SC_BankSetPassword* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_BankSetPassword* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_BankSetPassword& from);
  void MergeFrom(const SC_BankSetPassword& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_BankSetPassword* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_BankSetPassword_MsgID MsgID;
  static const MsgID ID =
    SC_BankSetPassword_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_BankSetPassword_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_BankSetPassword_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_BankSetPassword_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_BankSetPassword_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_BankSetPassword_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_BankSetPassword_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_BankSetPassword_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_BankSetPassword)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_BankChangePassword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_BankChangePassword) */ {
 public:
  CS_BankChangePassword();
  virtual ~CS_BankChangePassword();

  CS_BankChangePassword(const CS_BankChangePassword& from);

  inline CS_BankChangePassword& operator=(const CS_BankChangePassword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_BankChangePassword& default_instance();

  static inline const CS_BankChangePassword* internal_default_instance() {
    return reinterpret_cast<const CS_BankChangePassword*>(
               &_CS_BankChangePassword_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(CS_BankChangePassword* other);

  // implements Message ----------------------------------------------

  inline CS_BankChangePassword* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_BankChangePassword* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_BankChangePassword& from);
  void MergeFrom(const CS_BankChangePassword& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_BankChangePassword* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_BankChangePassword_MsgID MsgID;
  static const MsgID ID =
    CS_BankChangePassword_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_BankChangePassword_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_BankChangePassword_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_BankChangePassword_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_BankChangePassword_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_BankChangePassword_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_BankChangePassword_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_BankChangePassword_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string old_password = 1;
  bool has_old_password() const;
  void clear_old_password();
  static const int kOldPasswordFieldNumber = 1;
  const ::std::string& old_password() const;
  void set_old_password(const ::std::string& value);
  #if LANG_CXX11
  void set_old_password(::std::string&& value);
  #endif
  void set_old_password(const char* value);
  void set_old_password(const char* value, size_t size);
  ::std::string* mutable_old_password();
  ::std::string* release_old_password();
  void set_allocated_old_password(::std::string* old_password);

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:CS_BankChangePassword)
 private:
  void set_has_old_password();
  void clear_has_old_password();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr old_password_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_BankChangePassword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_BankChangePassword) */ {
 public:
  SC_BankChangePassword();
  virtual ~SC_BankChangePassword();

  SC_BankChangePassword(const SC_BankChangePassword& from);

  inline SC_BankChangePassword& operator=(const SC_BankChangePassword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_BankChangePassword& default_instance();

  static inline const SC_BankChangePassword* internal_default_instance() {
    return reinterpret_cast<const SC_BankChangePassword*>(
               &_SC_BankChangePassword_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(SC_BankChangePassword* other);

  // implements Message ----------------------------------------------

  inline SC_BankChangePassword* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_BankChangePassword* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_BankChangePassword& from);
  void MergeFrom(const SC_BankChangePassword& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_BankChangePassword* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_BankChangePassword_MsgID MsgID;
  static const MsgID ID =
    SC_BankChangePassword_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_BankChangePassword_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_BankChangePassword_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_BankChangePassword_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_BankChangePassword_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_BankChangePassword_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_BankChangePassword_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_BankChangePassword_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_BankChangePassword)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_BankLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_BankLogin) */ {
 public:
  CS_BankLogin();
  virtual ~CS_BankLogin();

  CS_BankLogin(const CS_BankLogin& from);

  inline CS_BankLogin& operator=(const CS_BankLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_BankLogin& default_instance();

  static inline const CS_BankLogin* internal_default_instance() {
    return reinterpret_cast<const CS_BankLogin*>(
               &_CS_BankLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(CS_BankLogin* other);

  // implements Message ----------------------------------------------

  inline CS_BankLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_BankLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_BankLogin& from);
  void MergeFrom(const CS_BankLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_BankLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_BankLogin_MsgID MsgID;
  static const MsgID ID =
    CS_BankLogin_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_BankLogin_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_BankLogin_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_BankLogin_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_BankLogin_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_BankLogin_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_BankLogin_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_BankLogin_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string password = 1;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 1;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:CS_BankLogin)
 private:
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_BankLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_BankLogin) */ {
 public:
  SC_BankLogin();
  virtual ~SC_BankLogin();

  SC_BankLogin(const SC_BankLogin& from);

  inline SC_BankLogin& operator=(const SC_BankLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_BankLogin& default_instance();

  static inline const SC_BankLogin* internal_default_instance() {
    return reinterpret_cast<const SC_BankLogin*>(
               &_SC_BankLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(SC_BankLogin* other);

  // implements Message ----------------------------------------------

  inline SC_BankLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_BankLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_BankLogin& from);
  void MergeFrom(const SC_BankLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_BankLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_BankLogin_MsgID MsgID;
  static const MsgID ID =
    SC_BankLogin_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_BankLogin_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_BankLogin_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_BankLogin_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_BankLogin_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_BankLogin_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_BankLogin_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_BankLogin_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_BankLogin)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_BankDeposit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_BankDeposit) */ {
 public:
  CS_BankDeposit();
  virtual ~CS_BankDeposit();

  CS_BankDeposit(const CS_BankDeposit& from);

  inline CS_BankDeposit& operator=(const CS_BankDeposit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_BankDeposit& default_instance();

  static inline const CS_BankDeposit* internal_default_instance() {
    return reinterpret_cast<const CS_BankDeposit*>(
               &_CS_BankDeposit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(CS_BankDeposit* other);

  // implements Message ----------------------------------------------

  inline CS_BankDeposit* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_BankDeposit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_BankDeposit& from);
  void MergeFrom(const CS_BankDeposit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_BankDeposit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_BankDeposit_MsgID MsgID;
  static const MsgID ID =
    CS_BankDeposit_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_BankDeposit_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_BankDeposit_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_BankDeposit_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_BankDeposit_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_BankDeposit_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_BankDeposit_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_BankDeposit_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 money = 1;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 1;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CS_BankDeposit)
 private:
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_BankDeposit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_BankDeposit) */ {
 public:
  SC_BankDeposit();
  virtual ~SC_BankDeposit();

  SC_BankDeposit(const SC_BankDeposit& from);

  inline SC_BankDeposit& operator=(const SC_BankDeposit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_BankDeposit& default_instance();

  static inline const SC_BankDeposit* internal_default_instance() {
    return reinterpret_cast<const SC_BankDeposit*>(
               &_SC_BankDeposit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(SC_BankDeposit* other);

  // implements Message ----------------------------------------------

  inline SC_BankDeposit* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_BankDeposit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_BankDeposit& from);
  void MergeFrom(const SC_BankDeposit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_BankDeposit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_BankDeposit_MsgID MsgID;
  static const MsgID ID =
    SC_BankDeposit_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_BankDeposit_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_BankDeposit_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_BankDeposit_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_BankDeposit_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_BankDeposit_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_BankDeposit_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_BankDeposit_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_BankDeposit)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_BankDraw : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_BankDraw) */ {
 public:
  CS_BankDraw();
  virtual ~CS_BankDraw();

  CS_BankDraw(const CS_BankDraw& from);

  inline CS_BankDraw& operator=(const CS_BankDraw& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_BankDraw& default_instance();

  static inline const CS_BankDraw* internal_default_instance() {
    return reinterpret_cast<const CS_BankDraw*>(
               &_CS_BankDraw_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(CS_BankDraw* other);

  // implements Message ----------------------------------------------

  inline CS_BankDraw* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_BankDraw* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_BankDraw& from);
  void MergeFrom(const CS_BankDraw& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_BankDraw* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_BankDraw_MsgID MsgID;
  static const MsgID ID =
    CS_BankDraw_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_BankDraw_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_BankDraw_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_BankDraw_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_BankDraw_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_BankDraw_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_BankDraw_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_BankDraw_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 money = 1;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 1;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CS_BankDraw)
 private:
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_BankDraw : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_BankDraw) */ {
 public:
  SC_BankDraw();
  virtual ~SC_BankDraw();

  SC_BankDraw(const SC_BankDraw& from);

  inline SC_BankDraw& operator=(const SC_BankDraw& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_BankDraw& default_instance();

  static inline const SC_BankDraw* internal_default_instance() {
    return reinterpret_cast<const SC_BankDraw*>(
               &_SC_BankDraw_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(SC_BankDraw* other);

  // implements Message ----------------------------------------------

  inline SC_BankDraw* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_BankDraw* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_BankDraw& from);
  void MergeFrom(const SC_BankDraw& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_BankDraw* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_BankDraw_MsgID MsgID;
  static const MsgID ID =
    SC_BankDraw_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_BankDraw_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_BankDraw_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_BankDraw_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_BankDraw_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_BankDraw_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_BankDraw_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_BankDraw_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_BankDraw)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NotifyBankStatement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_NotifyBankStatement) */ {
 public:
  SC_NotifyBankStatement();
  virtual ~SC_NotifyBankStatement();

  SC_NotifyBankStatement(const SC_NotifyBankStatement& from);

  inline SC_NotifyBankStatement& operator=(const SC_NotifyBankStatement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NotifyBankStatement& default_instance();

  static inline const SC_NotifyBankStatement* internal_default_instance() {
    return reinterpret_cast<const SC_NotifyBankStatement*>(
               &_SC_NotifyBankStatement_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(SC_NotifyBankStatement* other);

  // implements Message ----------------------------------------------

  inline SC_NotifyBankStatement* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NotifyBankStatement* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NotifyBankStatement& from);
  void MergeFrom(const SC_NotifyBankStatement& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NotifyBankStatement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_NotifyBankStatement_MsgID MsgID;
  static const MsgID ID =
    SC_NotifyBankStatement_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_NotifyBankStatement_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_NotifyBankStatement_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_NotifyBankStatement_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_NotifyBankStatement_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_NotifyBankStatement_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_NotifyBankStatement_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_NotifyBankStatement_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .BankStatement pb_statement = 1;
  bool has_pb_statement() const;
  void clear_pb_statement();
  static const int kPbStatementFieldNumber = 1;
  const ::BankStatement& pb_statement() const;
  ::BankStatement* mutable_pb_statement();
  ::BankStatement* release_pb_statement();
  void set_allocated_pb_statement(::BankStatement* pb_statement);

  // @@protoc_insertion_point(class_scope:SC_NotifyBankStatement)
 private:
  void set_has_pb_statement();
  void clear_has_pb_statement();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::BankStatement* pb_statement_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_BankStatement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_BankStatement) */ {
 public:
  CS_BankStatement();
  virtual ~CS_BankStatement();

  CS_BankStatement(const CS_BankStatement& from);

  inline CS_BankStatement& operator=(const CS_BankStatement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_BankStatement& default_instance();

  static inline const CS_BankStatement* internal_default_instance() {
    return reinterpret_cast<const CS_BankStatement*>(
               &_CS_BankStatement_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(CS_BankStatement* other);

  // implements Message ----------------------------------------------

  inline CS_BankStatement* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_BankStatement* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_BankStatement& from);
  void MergeFrom(const CS_BankStatement& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_BankStatement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_BankStatement_MsgID MsgID;
  static const MsgID ID =
    CS_BankStatement_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_BankStatement_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_BankStatement_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_BankStatement_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_BankStatement_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_BankStatement_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_BankStatement_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_BankStatement_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 cur_serial = 1;
  bool has_cur_serial() const;
  void clear_cur_serial();
  static const int kCurSerialFieldNumber = 1;
  ::google::protobuf::int64 cur_serial() const;
  void set_cur_serial(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CS_BankStatement)
 private:
  void set_has_cur_serial();
  void clear_has_cur_serial();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 cur_serial_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_BankStatement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_BankStatement) */ {
 public:
  SC_BankStatement();
  virtual ~SC_BankStatement();

  SC_BankStatement(const SC_BankStatement& from);

  inline SC_BankStatement& operator=(const SC_BankStatement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_BankStatement& default_instance();

  static inline const SC_BankStatement* internal_default_instance() {
    return reinterpret_cast<const SC_BankStatement*>(
               &_SC_BankStatement_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(SC_BankStatement* other);

  // implements Message ----------------------------------------------

  inline SC_BankStatement* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_BankStatement* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_BankStatement& from);
  void MergeFrom(const SC_BankStatement& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_BankStatement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_BankStatement_MsgID MsgID;
  static const MsgID ID =
    SC_BankStatement_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_BankStatement_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_BankStatement_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_BankStatement_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_BankStatement_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_BankStatement_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_BankStatement_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_BankStatement_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .BankStatement pb_statement = 1;
  int pb_statement_size() const;
  void clear_pb_statement();
  static const int kPbStatementFieldNumber = 1;
  const ::BankStatement& pb_statement(int index) const;
  ::BankStatement* mutable_pb_statement(int index);
  ::BankStatement* add_pb_statement();
  ::google::protobuf::RepeatedPtrField< ::BankStatement >*
      mutable_pb_statement();
  const ::google::protobuf::RepeatedPtrField< ::BankStatement >&
      pb_statement() const;

  // @@protoc_insertion_point(class_scope:SC_BankStatement)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BankStatement > pb_statement_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_BankTransfer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_BankTransfer) */ {
 public:
  CS_BankTransfer();
  virtual ~CS_BankTransfer();

  CS_BankTransfer(const CS_BankTransfer& from);

  inline CS_BankTransfer& operator=(const CS_BankTransfer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_BankTransfer& default_instance();

  static inline const CS_BankTransfer* internal_default_instance() {
    return reinterpret_cast<const CS_BankTransfer*>(
               &_CS_BankTransfer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(CS_BankTransfer* other);

  // implements Message ----------------------------------------------

  inline CS_BankTransfer* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_BankTransfer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_BankTransfer& from);
  void MergeFrom(const CS_BankTransfer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_BankTransfer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_BankTransfer_MsgID MsgID;
  static const MsgID ID =
    CS_BankTransfer_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_BankTransfer_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_BankTransfer_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_BankTransfer_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_BankTransfer_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_BankTransfer_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_BankTransfer_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_BankTransfer_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CS_BankTransfer)
 private:
  void set_has_account();
  void clear_has_account();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::int64 money_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_BankTransfer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_BankTransfer) */ {
 public:
  SC_BankTransfer();
  virtual ~SC_BankTransfer();

  SC_BankTransfer(const SC_BankTransfer& from);

  inline SC_BankTransfer& operator=(const SC_BankTransfer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_BankTransfer& default_instance();

  static inline const SC_BankTransfer* internal_default_instance() {
    return reinterpret_cast<const SC_BankTransfer*>(
               &_SC_BankTransfer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(SC_BankTransfer* other);

  // implements Message ----------------------------------------------

  inline SC_BankTransfer* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_BankTransfer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_BankTransfer& from);
  void MergeFrom(const SC_BankTransfer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_BankTransfer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_BankTransfer_MsgID MsgID;
  static const MsgID ID =
    SC_BankTransfer_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_BankTransfer_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_BankTransfer_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_BankTransfer_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_BankTransfer_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_BankTransfer_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_BankTransfer_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_BankTransfer_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int64 bank = 3;
  bool has_bank() const;
  void clear_bank();
  static const int kBankFieldNumber = 3;
  ::google::protobuf::int64 bank() const;
  void set_bank(::google::protobuf::int64 value);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_BankTransfer)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_money();
  void clear_has_money();
  void set_has_bank();
  void clear_has_bank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int64 bank_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NotifyMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_NotifyMoney) */ {
 public:
  SC_NotifyMoney();
  virtual ~SC_NotifyMoney();

  SC_NotifyMoney(const SC_NotifyMoney& from);

  inline SC_NotifyMoney& operator=(const SC_NotifyMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NotifyMoney& default_instance();

  static inline const SC_NotifyMoney* internal_default_instance() {
    return reinterpret_cast<const SC_NotifyMoney*>(
               &_SC_NotifyMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(SC_NotifyMoney* other);

  // implements Message ----------------------------------------------

  inline SC_NotifyMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NotifyMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NotifyMoney& from);
  void MergeFrom(const SC_NotifyMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NotifyMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_NotifyMoney_MsgID MsgID;
  static const MsgID ID =
    SC_NotifyMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_NotifyMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_NotifyMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_NotifyMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_NotifyMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_NotifyMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_NotifyMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_NotifyMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int64 change_money = 3;
  bool has_change_money() const;
  void clear_change_money();
  static const int kChangeMoneyFieldNumber = 3;
  ::google::protobuf::int64 change_money() const;
  void set_change_money(::google::protobuf::int64 value);

  // optional int32 opt_type = 1;
  bool has_opt_type() const;
  void clear_opt_type();
  static const int kOptTypeFieldNumber = 1;
  ::google::protobuf::int32 opt_type() const;
  void set_opt_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_NotifyMoney)
 private:
  void set_has_opt_type();
  void clear_has_opt_type();
  void set_has_money();
  void clear_has_money();
  void set_has_change_money();
  void clear_has_change_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int64 change_money_;
  ::google::protobuf::int32 opt_type_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_BankTransferByGuid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_BankTransferByGuid) */ {
 public:
  CS_BankTransferByGuid();
  virtual ~CS_BankTransferByGuid();

  CS_BankTransferByGuid(const CS_BankTransferByGuid& from);

  inline CS_BankTransferByGuid& operator=(const CS_BankTransferByGuid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_BankTransferByGuid& default_instance();

  static inline const CS_BankTransferByGuid* internal_default_instance() {
    return reinterpret_cast<const CS_BankTransferByGuid*>(
               &_CS_BankTransferByGuid_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(CS_BankTransferByGuid* other);

  // implements Message ----------------------------------------------

  inline CS_BankTransferByGuid* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_BankTransferByGuid* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_BankTransferByGuid& from);
  void MergeFrom(const CS_BankTransferByGuid& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_BankTransferByGuid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_BankTransferByGuid_MsgID MsgID;
  static const MsgID ID =
    CS_BankTransferByGuid_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_BankTransferByGuid_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_BankTransferByGuid_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_BankTransferByGuid_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_BankTransferByGuid_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_BankTransferByGuid_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_BankTransferByGuid_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_BankTransferByGuid_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_BankTransferByGuid)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_BuyItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_BuyItem) */ {
 public:
  CS_BuyItem();
  virtual ~CS_BuyItem();

  CS_BuyItem(const CS_BuyItem& from);

  inline CS_BuyItem& operator=(const CS_BuyItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_BuyItem& default_instance();

  static inline const CS_BuyItem* internal_default_instance() {
    return reinterpret_cast<const CS_BuyItem*>(
               &_CS_BuyItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(CS_BuyItem* other);

  // implements Message ----------------------------------------------

  inline CS_BuyItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_BuyItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_BuyItem& from);
  void MergeFrom(const CS_BuyItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_BuyItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_BuyItem_MsgID MsgID;
  static const MsgID ID =
    CS_BuyItem_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_BuyItem_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_BuyItem_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_BuyItem_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_BuyItem_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_BuyItem_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_BuyItem_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_BuyItem_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 item_id = 1;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::int32 item_id() const;
  void set_item_id(::google::protobuf::int32 value);

  // optional int32 item_num = 2;
  bool has_item_num() const;
  void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  ::google::protobuf::int32 item_num() const;
  void set_item_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_BuyItem)
 private:
  void set_has_item_id();
  void clear_has_item_id();
  void set_has_item_num();
  void clear_has_item_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 item_num_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_BuyItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_BuyItem) */ {
 public:
  SC_BuyItem();
  virtual ~SC_BuyItem();

  SC_BuyItem(const SC_BuyItem& from);

  inline SC_BuyItem& operator=(const SC_BuyItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_BuyItem& default_instance();

  static inline const SC_BuyItem* internal_default_instance() {
    return reinterpret_cast<const SC_BuyItem*>(
               &_SC_BuyItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(SC_BuyItem* other);

  // implements Message ----------------------------------------------

  inline SC_BuyItem* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_BuyItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_BuyItem& from);
  void MergeFrom(const SC_BuyItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_BuyItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_BuyItem_MsgID MsgID;
  static const MsgID ID =
    SC_BuyItem_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_BuyItem_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_BuyItem_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_BuyItem_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_BuyItem_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_BuyItem_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_BuyItem_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_BuyItem_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 item_id = 1;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::int32 item_id() const;
  void set_item_id(::google::protobuf::int32 value);

  // optional int32 item_num = 2;
  bool has_item_num() const;
  void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  ::google::protobuf::int32 item_num() const;
  void set_item_num(::google::protobuf::int32 value);

  // optional int32 result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_BuyItem)
 private:
  void set_has_item_id();
  void clear_has_item_id();
  void set_has_item_num();
  void clear_has_item_num();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 item_num_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_DelItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_DelItem) */ {
 public:
  CS_DelItem();
  virtual ~CS_DelItem();

  CS_DelItem(const CS_DelItem& from);

  inline CS_DelItem& operator=(const CS_DelItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_DelItem& default_instance();

  static inline const CS_DelItem* internal_default_instance() {
    return reinterpret_cast<const CS_DelItem*>(
               &_CS_DelItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(CS_DelItem* other);

  // implements Message ----------------------------------------------

  inline CS_DelItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_DelItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_DelItem& from);
  void MergeFrom(const CS_DelItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_DelItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_DelItem_MsgID MsgID;
  static const MsgID ID =
    CS_DelItem_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_DelItem_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_DelItem_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_DelItem_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_DelItem_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_DelItem_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_DelItem_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_DelItem_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 item_id = 1;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::int32 item_id() const;
  void set_item_id(::google::protobuf::int32 value);

  // optional int32 item_num = 2;
  bool has_item_num() const;
  void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  ::google::protobuf::int32 item_num() const;
  void set_item_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_DelItem)
 private:
  void set_has_item_id();
  void clear_has_item_id();
  void set_has_item_num();
  void clear_has_item_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 item_num_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_DelItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_DelItem) */ {
 public:
  SC_DelItem();
  virtual ~SC_DelItem();

  SC_DelItem(const SC_DelItem& from);

  inline SC_DelItem& operator=(const SC_DelItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_DelItem& default_instance();

  static inline const SC_DelItem* internal_default_instance() {
    return reinterpret_cast<const SC_DelItem*>(
               &_SC_DelItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(SC_DelItem* other);

  // implements Message ----------------------------------------------

  inline SC_DelItem* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_DelItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_DelItem& from);
  void MergeFrom(const SC_DelItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_DelItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_DelItem_MsgID MsgID;
  static const MsgID ID =
    SC_DelItem_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_DelItem_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_DelItem_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_DelItem_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_DelItem_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_DelItem_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_DelItem_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_DelItem_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 item_id = 1;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::int32 item_id() const;
  void set_item_id(::google::protobuf::int32 value);

  // optional int32 item_num = 2;
  bool has_item_num() const;
  void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  ::google::protobuf::int32 item_num() const;
  void set_item_num(::google::protobuf::int32 value);

  // optional int32 result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_DelItem)
 private:
  void set_has_item_id();
  void clear_has_item_id();
  void set_has_item_num();
  void clear_has_item_num();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 item_num_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_UseItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_UseItem) */ {
 public:
  CS_UseItem();
  virtual ~CS_UseItem();

  CS_UseItem(const CS_UseItem& from);

  inline CS_UseItem& operator=(const CS_UseItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_UseItem& default_instance();

  static inline const CS_UseItem* internal_default_instance() {
    return reinterpret_cast<const CS_UseItem*>(
               &_CS_UseItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(CS_UseItem* other);

  // implements Message ----------------------------------------------

  inline CS_UseItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_UseItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_UseItem& from);
  void MergeFrom(const CS_UseItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_UseItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_UseItem_MsgID MsgID;
  static const MsgID ID =
    CS_UseItem_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_UseItem_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_UseItem_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_UseItem_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_UseItem_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_UseItem_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_UseItem_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_UseItem_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 item_id = 1;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::int32 item_id() const;
  void set_item_id(::google::protobuf::int32 value);

  // optional int32 item_num = 2;
  bool has_item_num() const;
  void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  ::google::protobuf::int32 item_num() const;
  void set_item_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_UseItem)
 private:
  void set_has_item_id();
  void clear_has_item_id();
  void set_has_item_num();
  void clear_has_item_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 item_num_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_UseItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_UseItem) */ {
 public:
  SC_UseItem();
  virtual ~SC_UseItem();

  SC_UseItem(const SC_UseItem& from);

  inline SC_UseItem& operator=(const SC_UseItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_UseItem& default_instance();

  static inline const SC_UseItem* internal_default_instance() {
    return reinterpret_cast<const SC_UseItem*>(
               &_SC_UseItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(SC_UseItem* other);

  // implements Message ----------------------------------------------

  inline SC_UseItem* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_UseItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_UseItem& from);
  void MergeFrom(const SC_UseItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_UseItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_UseItem_MsgID MsgID;
  static const MsgID ID =
    SC_UseItem_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_UseItem_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_UseItem_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_UseItem_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_UseItem_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_UseItem_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_UseItem_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_UseItem_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 item_id = 1;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::int32 item_id() const;
  void set_item_id(::google::protobuf::int32 value);

  // optional int32 item_num = 2;
  bool has_item_num() const;
  void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  ::google::protobuf::int32 item_num() const;
  void set_item_num(::google::protobuf::int32 value);

  // optional int32 result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_UseItem)
 private:
  void set_has_item_id();
  void clear_has_item_id();
  void set_has_item_num();
  void clear_has_item_num();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 item_num_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ChatWorld : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ChatWorld) */ {
 public:
  CS_ChatWorld();
  virtual ~CS_ChatWorld();

  CS_ChatWorld(const CS_ChatWorld& from);

  inline CS_ChatWorld& operator=(const CS_ChatWorld& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ChatWorld& default_instance();

  static inline const CS_ChatWorld* internal_default_instance() {
    return reinterpret_cast<const CS_ChatWorld*>(
               &_CS_ChatWorld_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(CS_ChatWorld* other);

  // implements Message ----------------------------------------------

  inline CS_ChatWorld* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ChatWorld* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ChatWorld& from);
  void MergeFrom(const CS_ChatWorld& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ChatWorld* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ChatWorld_MsgID MsgID;
  static const MsgID ID =
    CS_ChatWorld_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ChatWorld_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ChatWorld_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ChatWorld_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ChatWorld_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ChatWorld_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ChatWorld_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ChatWorld_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string chat_content = 1;
  bool has_chat_content() const;
  void clear_chat_content();
  static const int kChatContentFieldNumber = 1;
  const ::std::string& chat_content() const;
  void set_chat_content(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_content(::std::string&& value);
  #endif
  void set_chat_content(const char* value);
  void set_chat_content(const char* value, size_t size);
  ::std::string* mutable_chat_content();
  ::std::string* release_chat_content();
  void set_allocated_chat_content(::std::string* chat_content);

  // @@protoc_insertion_point(class_scope:CS_ChatWorld)
 private:
  void set_has_chat_content();
  void clear_has_chat_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_content_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ChatWorld : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ChatWorld) */ {
 public:
  SC_ChatWorld();
  virtual ~SC_ChatWorld();

  SC_ChatWorld(const SC_ChatWorld& from);

  inline SC_ChatWorld& operator=(const SC_ChatWorld& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ChatWorld& default_instance();

  static inline const SC_ChatWorld* internal_default_instance() {
    return reinterpret_cast<const SC_ChatWorld*>(
               &_SC_ChatWorld_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(SC_ChatWorld* other);

  // implements Message ----------------------------------------------

  inline SC_ChatWorld* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ChatWorld* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ChatWorld& from);
  void MergeFrom(const SC_ChatWorld& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ChatWorld* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ChatWorld_MsgID MsgID;
  static const MsgID ID =
    SC_ChatWorld_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ChatWorld_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ChatWorld_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ChatWorld_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ChatWorld_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ChatWorld_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ChatWorld_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ChatWorld_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string chat_content = 1;
  bool has_chat_content() const;
  void clear_chat_content();
  static const int kChatContentFieldNumber = 1;
  const ::std::string& chat_content() const;
  void set_chat_content(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_content(::std::string&& value);
  #endif
  void set_chat_content(const char* value);
  void set_chat_content(const char* value, size_t size);
  ::std::string* mutable_chat_content();
  ::std::string* release_chat_content();
  void set_allocated_chat_content(::std::string* chat_content);

  // optional string chat_name = 3;
  bool has_chat_name() const;
  void clear_chat_name();
  static const int kChatNameFieldNumber = 3;
  const ::std::string& chat_name() const;
  void set_chat_name(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_name(::std::string&& value);
  #endif
  void set_chat_name(const char* value);
  void set_chat_name(const char* value, size_t size);
  ::std::string* mutable_chat_name();
  ::std::string* release_chat_name();
  void set_allocated_chat_name(::std::string* chat_name);

  // optional int32 chat_guid = 2;
  bool has_chat_guid() const;
  void clear_chat_guid();
  static const int kChatGuidFieldNumber = 2;
  ::google::protobuf::int32 chat_guid() const;
  void set_chat_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_ChatWorld)
 private:
  void set_has_chat_content();
  void clear_has_chat_content();
  void set_has_chat_guid();
  void clear_has_chat_guid();
  void set_has_chat_name();
  void clear_has_chat_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_content_;
  ::google::protobuf::internal::ArenaStringPtr chat_name_;
  ::google::protobuf::int32 chat_guid_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ChatPrivate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ChatPrivate) */ {
 public:
  CS_ChatPrivate();
  virtual ~CS_ChatPrivate();

  CS_ChatPrivate(const CS_ChatPrivate& from);

  inline CS_ChatPrivate& operator=(const CS_ChatPrivate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ChatPrivate& default_instance();

  static inline const CS_ChatPrivate* internal_default_instance() {
    return reinterpret_cast<const CS_ChatPrivate*>(
               &_CS_ChatPrivate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(CS_ChatPrivate* other);

  // implements Message ----------------------------------------------

  inline CS_ChatPrivate* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ChatPrivate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ChatPrivate& from);
  void MergeFrom(const CS_ChatPrivate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ChatPrivate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ChatPrivate_MsgID MsgID;
  static const MsgID ID =
    CS_ChatPrivate_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ChatPrivate_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ChatPrivate_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ChatPrivate_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ChatPrivate_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ChatPrivate_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ChatPrivate_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ChatPrivate_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string chat_content = 1;
  bool has_chat_content() const;
  void clear_chat_content();
  static const int kChatContentFieldNumber = 1;
  const ::std::string& chat_content() const;
  void set_chat_content(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_content(::std::string&& value);
  #endif
  void set_chat_content(const char* value);
  void set_chat_content(const char* value, size_t size);
  ::std::string* mutable_chat_content();
  ::std::string* release_chat_content();
  void set_allocated_chat_content(::std::string* chat_content);

  // optional string private_name = 2;
  bool has_private_name() const;
  void clear_private_name();
  static const int kPrivateNameFieldNumber = 2;
  const ::std::string& private_name() const;
  void set_private_name(const ::std::string& value);
  #if LANG_CXX11
  void set_private_name(::std::string&& value);
  #endif
  void set_private_name(const char* value);
  void set_private_name(const char* value, size_t size);
  ::std::string* mutable_private_name();
  ::std::string* release_private_name();
  void set_allocated_private_name(::std::string* private_name);

  // @@protoc_insertion_point(class_scope:CS_ChatPrivate)
 private:
  void set_has_chat_content();
  void clear_has_chat_content();
  void set_has_private_name();
  void clear_has_private_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_content_;
  ::google::protobuf::internal::ArenaStringPtr private_name_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ChatPrivate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ChatPrivate) */ {
 public:
  SC_ChatPrivate();
  virtual ~SC_ChatPrivate();

  SC_ChatPrivate(const SC_ChatPrivate& from);

  inline SC_ChatPrivate& operator=(const SC_ChatPrivate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ChatPrivate& default_instance();

  static inline const SC_ChatPrivate* internal_default_instance() {
    return reinterpret_cast<const SC_ChatPrivate*>(
               &_SC_ChatPrivate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(SC_ChatPrivate* other);

  // implements Message ----------------------------------------------

  inline SC_ChatPrivate* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ChatPrivate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ChatPrivate& from);
  void MergeFrom(const SC_ChatPrivate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ChatPrivate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ChatPrivate_MsgID MsgID;
  static const MsgID ID =
    SC_ChatPrivate_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ChatPrivate_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ChatPrivate_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ChatPrivate_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ChatPrivate_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ChatPrivate_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ChatPrivate_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ChatPrivate_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string chat_content = 1;
  bool has_chat_content() const;
  void clear_chat_content();
  static const int kChatContentFieldNumber = 1;
  const ::std::string& chat_content() const;
  void set_chat_content(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_content(::std::string&& value);
  #endif
  void set_chat_content(const char* value);
  void set_chat_content(const char* value, size_t size);
  ::std::string* mutable_chat_content();
  ::std::string* release_chat_content();
  void set_allocated_chat_content(::std::string* chat_content);

  // optional string private_name = 2;
  bool has_private_name() const;
  void clear_private_name();
  static const int kPrivateNameFieldNumber = 2;
  const ::std::string& private_name() const;
  void set_private_name(const ::std::string& value);
  #if LANG_CXX11
  void set_private_name(::std::string&& value);
  #endif
  void set_private_name(const char* value);
  void set_private_name(const char* value, size_t size);
  ::std::string* mutable_private_name();
  ::std::string* release_private_name();
  void set_allocated_private_name(::std::string* private_name);

  // optional string chat_name = 3;
  bool has_chat_name() const;
  void clear_chat_name();
  static const int kChatNameFieldNumber = 3;
  const ::std::string& chat_name() const;
  void set_chat_name(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_name(::std::string&& value);
  #endif
  void set_chat_name(const char* value);
  void set_chat_name(const char* value, size_t size);
  ::std::string* mutable_chat_name();
  ::std::string* release_chat_name();
  void set_allocated_chat_name(::std::string* chat_name);

  // @@protoc_insertion_point(class_scope:SC_ChatPrivate)
 private:
  void set_has_chat_content();
  void clear_has_chat_content();
  void set_has_private_name();
  void clear_has_private_name();
  void set_has_chat_name();
  void clear_has_chat_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_content_;
  ::google::protobuf::internal::ArenaStringPtr private_name_;
  ::google::protobuf::internal::ArenaStringPtr chat_name_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ChatServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ChatServer) */ {
 public:
  CS_ChatServer();
  virtual ~CS_ChatServer();

  CS_ChatServer(const CS_ChatServer& from);

  inline CS_ChatServer& operator=(const CS_ChatServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ChatServer& default_instance();

  static inline const CS_ChatServer* internal_default_instance() {
    return reinterpret_cast<const CS_ChatServer*>(
               &_CS_ChatServer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(CS_ChatServer* other);

  // implements Message ----------------------------------------------

  inline CS_ChatServer* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ChatServer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ChatServer& from);
  void MergeFrom(const CS_ChatServer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ChatServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ChatServer_MsgID MsgID;
  static const MsgID ID =
    CS_ChatServer_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ChatServer_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ChatServer_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ChatServer_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ChatServer_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ChatServer_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ChatServer_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ChatServer_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string chat_content = 1;
  bool has_chat_content() const;
  void clear_chat_content();
  static const int kChatContentFieldNumber = 1;
  const ::std::string& chat_content() const;
  void set_chat_content(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_content(::std::string&& value);
  #endif
  void set_chat_content(const char* value);
  void set_chat_content(const char* value, size_t size);
  ::std::string* mutable_chat_content();
  ::std::string* release_chat_content();
  void set_allocated_chat_content(::std::string* chat_content);

  // @@protoc_insertion_point(class_scope:CS_ChatServer)
 private:
  void set_has_chat_content();
  void clear_has_chat_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_content_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ChatServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ChatServer) */ {
 public:
  SC_ChatServer();
  virtual ~SC_ChatServer();

  SC_ChatServer(const SC_ChatServer& from);

  inline SC_ChatServer& operator=(const SC_ChatServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ChatServer& default_instance();

  static inline const SC_ChatServer* internal_default_instance() {
    return reinterpret_cast<const SC_ChatServer*>(
               &_SC_ChatServer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(SC_ChatServer* other);

  // implements Message ----------------------------------------------

  inline SC_ChatServer* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ChatServer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ChatServer& from);
  void MergeFrom(const SC_ChatServer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ChatServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ChatServer_MsgID MsgID;
  static const MsgID ID =
    SC_ChatServer_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ChatServer_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ChatServer_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ChatServer_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ChatServer_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ChatServer_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ChatServer_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ChatServer_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string chat_content = 1;
  bool has_chat_content() const;
  void clear_chat_content();
  static const int kChatContentFieldNumber = 1;
  const ::std::string& chat_content() const;
  void set_chat_content(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_content(::std::string&& value);
  #endif
  void set_chat_content(const char* value);
  void set_chat_content(const char* value, size_t size);
  ::std::string* mutable_chat_content();
  ::std::string* release_chat_content();
  void set_allocated_chat_content(::std::string* chat_content);

  // optional string chat_name = 3;
  bool has_chat_name() const;
  void clear_chat_name();
  static const int kChatNameFieldNumber = 3;
  const ::std::string& chat_name() const;
  void set_chat_name(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_name(::std::string&& value);
  #endif
  void set_chat_name(const char* value);
  void set_chat_name(const char* value, size_t size);
  ::std::string* mutable_chat_name();
  ::std::string* release_chat_name();
  void set_allocated_chat_name(::std::string* chat_name);

  // optional int32 chat_guid = 2;
  bool has_chat_guid() const;
  void clear_chat_guid();
  static const int kChatGuidFieldNumber = 2;
  ::google::protobuf::int32 chat_guid() const;
  void set_chat_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_ChatServer)
 private:
  void set_has_chat_content();
  void clear_has_chat_content();
  void set_has_chat_guid();
  void clear_has_chat_guid();
  void set_has_chat_name();
  void clear_has_chat_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_content_;
  ::google::protobuf::internal::ArenaStringPtr chat_name_;
  ::google::protobuf::int32 chat_guid_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ChatRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ChatRoom) */ {
 public:
  CS_ChatRoom();
  virtual ~CS_ChatRoom();

  CS_ChatRoom(const CS_ChatRoom& from);

  inline CS_ChatRoom& operator=(const CS_ChatRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ChatRoom& default_instance();

  static inline const CS_ChatRoom* internal_default_instance() {
    return reinterpret_cast<const CS_ChatRoom*>(
               &_CS_ChatRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(CS_ChatRoom* other);

  // implements Message ----------------------------------------------

  inline CS_ChatRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ChatRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ChatRoom& from);
  void MergeFrom(const CS_ChatRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ChatRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ChatRoom_MsgID MsgID;
  static const MsgID ID =
    CS_ChatRoom_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ChatRoom_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ChatRoom_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ChatRoom_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ChatRoom_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ChatRoom_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ChatRoom_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ChatRoom_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string chat_content = 1;
  bool has_chat_content() const;
  void clear_chat_content();
  static const int kChatContentFieldNumber = 1;
  const ::std::string& chat_content() const;
  void set_chat_content(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_content(::std::string&& value);
  #endif
  void set_chat_content(const char* value);
  void set_chat_content(const char* value, size_t size);
  ::std::string* mutable_chat_content();
  ::std::string* release_chat_content();
  void set_allocated_chat_content(::std::string* chat_content);

  // @@protoc_insertion_point(class_scope:CS_ChatRoom)
 private:
  void set_has_chat_content();
  void clear_has_chat_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_content_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ChatRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ChatRoom) */ {
 public:
  SC_ChatRoom();
  virtual ~SC_ChatRoom();

  SC_ChatRoom(const SC_ChatRoom& from);

  inline SC_ChatRoom& operator=(const SC_ChatRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ChatRoom& default_instance();

  static inline const SC_ChatRoom* internal_default_instance() {
    return reinterpret_cast<const SC_ChatRoom*>(
               &_SC_ChatRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(SC_ChatRoom* other);

  // implements Message ----------------------------------------------

  inline SC_ChatRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ChatRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ChatRoom& from);
  void MergeFrom(const SC_ChatRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ChatRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ChatRoom_MsgID MsgID;
  static const MsgID ID =
    SC_ChatRoom_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ChatRoom_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ChatRoom_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ChatRoom_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ChatRoom_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ChatRoom_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ChatRoom_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ChatRoom_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string chat_content = 1;
  bool has_chat_content() const;
  void clear_chat_content();
  static const int kChatContentFieldNumber = 1;
  const ::std::string& chat_content() const;
  void set_chat_content(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_content(::std::string&& value);
  #endif
  void set_chat_content(const char* value);
  void set_chat_content(const char* value, size_t size);
  ::std::string* mutable_chat_content();
  ::std::string* release_chat_content();
  void set_allocated_chat_content(::std::string* chat_content);

  // optional string chat_name = 3;
  bool has_chat_name() const;
  void clear_chat_name();
  static const int kChatNameFieldNumber = 3;
  const ::std::string& chat_name() const;
  void set_chat_name(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_name(::std::string&& value);
  #endif
  void set_chat_name(const char* value);
  void set_chat_name(const char* value, size_t size);
  ::std::string* mutable_chat_name();
  ::std::string* release_chat_name();
  void set_allocated_chat_name(::std::string* chat_name);

  // optional int32 chat_guid = 2;
  bool has_chat_guid() const;
  void clear_chat_guid();
  static const int kChatGuidFieldNumber = 2;
  ::google::protobuf::int32 chat_guid() const;
  void set_chat_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_ChatRoom)
 private:
  void set_has_chat_content();
  void clear_has_chat_content();
  void set_has_chat_guid();
  void clear_has_chat_guid();
  void set_has_chat_name();
  void clear_has_chat_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_content_;
  ::google::protobuf::internal::ArenaStringPtr chat_name_;
  ::google::protobuf::int32 chat_guid_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ChatTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ChatTable) */ {
 public:
  CS_ChatTable();
  virtual ~CS_ChatTable();

  CS_ChatTable(const CS_ChatTable& from);

  inline CS_ChatTable& operator=(const CS_ChatTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ChatTable& default_instance();

  static inline const CS_ChatTable* internal_default_instance() {
    return reinterpret_cast<const CS_ChatTable*>(
               &_CS_ChatTable_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(CS_ChatTable* other);

  // implements Message ----------------------------------------------

  inline CS_ChatTable* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ChatTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ChatTable& from);
  void MergeFrom(const CS_ChatTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ChatTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ChatTable_MsgID MsgID;
  static const MsgID ID =
    CS_ChatTable_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ChatTable_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ChatTable_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ChatTable_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ChatTable_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ChatTable_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ChatTable_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ChatTable_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string chat_content = 1;
  bool has_chat_content() const;
  void clear_chat_content();
  static const int kChatContentFieldNumber = 1;
  const ::std::string& chat_content() const;
  void set_chat_content(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_content(::std::string&& value);
  #endif
  void set_chat_content(const char* value);
  void set_chat_content(const char* value, size_t size);
  ::std::string* mutable_chat_content();
  ::std::string* release_chat_content();
  void set_allocated_chat_content(::std::string* chat_content);

  // @@protoc_insertion_point(class_scope:CS_ChatTable)
 private:
  void set_has_chat_content();
  void clear_has_chat_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_content_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ChatTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ChatTable) */ {
 public:
  SC_ChatTable();
  virtual ~SC_ChatTable();

  SC_ChatTable(const SC_ChatTable& from);

  inline SC_ChatTable& operator=(const SC_ChatTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ChatTable& default_instance();

  static inline const SC_ChatTable* internal_default_instance() {
    return reinterpret_cast<const SC_ChatTable*>(
               &_SC_ChatTable_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(SC_ChatTable* other);

  // implements Message ----------------------------------------------

  inline SC_ChatTable* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ChatTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ChatTable& from);
  void MergeFrom(const SC_ChatTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ChatTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ChatTable_MsgID MsgID;
  static const MsgID ID =
    SC_ChatTable_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ChatTable_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ChatTable_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ChatTable_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ChatTable_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ChatTable_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ChatTable_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ChatTable_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string chat_content = 1;
  bool has_chat_content() const;
  void clear_chat_content();
  static const int kChatContentFieldNumber = 1;
  const ::std::string& chat_content() const;
  void set_chat_content(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_content(::std::string&& value);
  #endif
  void set_chat_content(const char* value);
  void set_chat_content(const char* value, size_t size);
  ::std::string* mutable_chat_content();
  ::std::string* release_chat_content();
  void set_allocated_chat_content(::std::string* chat_content);

  // optional string chat_name = 3;
  bool has_chat_name() const;
  void clear_chat_name();
  static const int kChatNameFieldNumber = 3;
  const ::std::string& chat_name() const;
  void set_chat_name(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_name(::std::string&& value);
  #endif
  void set_chat_name(const char* value);
  void set_chat_name(const char* value, size_t size);
  ::std::string* mutable_chat_name();
  ::std::string* release_chat_name();
  void set_allocated_chat_name(::std::string* chat_name);

  // optional int32 chat_guid = 2;
  bool has_chat_guid() const;
  void clear_chat_guid();
  static const int kChatGuidFieldNumber = 2;
  ::google::protobuf::int32 chat_guid() const;
  void set_chat_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_ChatTable)
 private:
  void set_has_chat_content();
  void clear_has_chat_content();
  void set_has_chat_guid();
  void clear_has_chat_guid();
  void set_has_chat_name();
  void clear_has_chat_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chat_content_;
  ::google::protobuf::internal::ArenaStringPtr chat_name_;
  ::google::protobuf::int32 chat_guid_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_Marquee : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_Marquee) */ {
 public:
  SC_Marquee();
  virtual ~SC_Marquee();

  SC_Marquee(const SC_Marquee& from);

  inline SC_Marquee& operator=(const SC_Marquee& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_Marquee& default_instance();

  static inline const SC_Marquee* internal_default_instance() {
    return reinterpret_cast<const SC_Marquee*>(
               &_SC_Marquee_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(SC_Marquee* other);

  // implements Message ----------------------------------------------

  inline SC_Marquee* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_Marquee* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_Marquee& from);
  void MergeFrom(const SC_Marquee& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_Marquee* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_Marquee_MsgID MsgID;
  static const MsgID ID =
    SC_Marquee_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_Marquee_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_Marquee_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_Marquee_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_Marquee_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_Marquee_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_Marquee_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_Marquee_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string content = 1;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:SC_Marquee)
 private:
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_QueryPlayerMarquee : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_QueryPlayerMarquee) */ {
 public:
  CS_QueryPlayerMarquee();
  virtual ~CS_QueryPlayerMarquee();

  CS_QueryPlayerMarquee(const CS_QueryPlayerMarquee& from);

  inline CS_QueryPlayerMarquee& operator=(const CS_QueryPlayerMarquee& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_QueryPlayerMarquee& default_instance();

  static inline const CS_QueryPlayerMarquee* internal_default_instance() {
    return reinterpret_cast<const CS_QueryPlayerMarquee*>(
               &_CS_QueryPlayerMarquee_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(CS_QueryPlayerMarquee* other);

  // implements Message ----------------------------------------------

  inline CS_QueryPlayerMarquee* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_QueryPlayerMarquee* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_QueryPlayerMarquee& from);
  void MergeFrom(const CS_QueryPlayerMarquee& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_QueryPlayerMarquee* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_QueryPlayerMarquee_MsgID MsgID;
  static const MsgID ID =
    CS_QueryPlayerMarquee_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_QueryPlayerMarquee_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_QueryPlayerMarquee_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_QueryPlayerMarquee_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_QueryPlayerMarquee_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_QueryPlayerMarquee_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_QueryPlayerMarquee_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_QueryPlayerMarquee_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_QueryPlayerMarquee)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_QueryPlayerMarquee : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_QueryPlayerMarquee) */ {
 public:
  SC_QueryPlayerMarquee();
  virtual ~SC_QueryPlayerMarquee();

  SC_QueryPlayerMarquee(const SC_QueryPlayerMarquee& from);

  inline SC_QueryPlayerMarquee& operator=(const SC_QueryPlayerMarquee& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_QueryPlayerMarquee& default_instance();

  static inline const SC_QueryPlayerMarquee* internal_default_instance() {
    return reinterpret_cast<const SC_QueryPlayerMarquee*>(
               &_SC_QueryPlayerMarquee_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(SC_QueryPlayerMarquee* other);

  // implements Message ----------------------------------------------

  inline SC_QueryPlayerMarquee* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_QueryPlayerMarquee* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_QueryPlayerMarquee& from);
  void MergeFrom(const SC_QueryPlayerMarquee& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_QueryPlayerMarquee* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_QueryPlayerMarquee_MsgID MsgID;
  static const MsgID ID =
    SC_QueryPlayerMarquee_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_QueryPlayerMarquee_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_QueryPlayerMarquee_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_QueryPlayerMarquee_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_QueryPlayerMarquee_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_QueryPlayerMarquee_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_QueryPlayerMarquee_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_QueryPlayerMarquee_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .Marquee pb_msg_data = 1;
  int pb_msg_data_size() const;
  void clear_pb_msg_data();
  static const int kPbMsgDataFieldNumber = 1;
  const ::Marquee& pb_msg_data(int index) const;
  ::Marquee* mutable_pb_msg_data(int index);
  ::Marquee* add_pb_msg_data();
  ::google::protobuf::RepeatedPtrField< ::Marquee >*
      mutable_pb_msg_data();
  const ::google::protobuf::RepeatedPtrField< ::Marquee >&
      pb_msg_data() const;

  // @@protoc_insertion_point(class_scope:SC_QueryPlayerMarquee)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Marquee > pb_msg_data_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NewMarquee : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_NewMarquee) */ {
 public:
  SC_NewMarquee();
  virtual ~SC_NewMarquee();

  SC_NewMarquee(const SC_NewMarquee& from);

  inline SC_NewMarquee& operator=(const SC_NewMarquee& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NewMarquee& default_instance();

  static inline const SC_NewMarquee* internal_default_instance() {
    return reinterpret_cast<const SC_NewMarquee*>(
               &_SC_NewMarquee_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(SC_NewMarquee* other);

  // implements Message ----------------------------------------------

  inline SC_NewMarquee* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NewMarquee* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NewMarquee& from);
  void MergeFrom(const SC_NewMarquee& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NewMarquee* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_NewMarquee_MsgID MsgID;
  static const MsgID ID =
    SC_NewMarquee_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_NewMarquee_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_NewMarquee_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_NewMarquee_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_NewMarquee_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_NewMarquee_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_NewMarquee_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_NewMarquee_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .Marquee pb_msg_data = 1;
  int pb_msg_data_size() const;
  void clear_pb_msg_data();
  static const int kPbMsgDataFieldNumber = 1;
  const ::Marquee& pb_msg_data(int index) const;
  ::Marquee* mutable_pb_msg_data(int index);
  ::Marquee* add_pb_msg_data();
  ::google::protobuf::RepeatedPtrField< ::Marquee >*
      mutable_pb_msg_data();
  const ::google::protobuf::RepeatedPtrField< ::Marquee >&
      pb_msg_data() const;

  // @@protoc_insertion_point(class_scope:SC_NewMarquee)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Marquee > pb_msg_data_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_SendMail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_SendMail) */ {
 public:
  CS_SendMail();
  virtual ~CS_SendMail();

  CS_SendMail(const CS_SendMail& from);

  inline CS_SendMail& operator=(const CS_SendMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_SendMail& default_instance();

  static inline const CS_SendMail* internal_default_instance() {
    return reinterpret_cast<const CS_SendMail*>(
               &_CS_SendMail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(CS_SendMail* other);

  // implements Message ----------------------------------------------

  inline CS_SendMail* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_SendMail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_SendMail& from);
  void MergeFrom(const CS_SendMail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_SendMail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_SendMail_MsgID MsgID;
  static const MsgID ID =
    CS_SendMail_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_SendMail_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_SendMail_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_SendMail_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_SendMail_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_SendMail_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_SendMail_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_SendMail_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .MailInfo pb_mail = 1;
  bool has_pb_mail() const;
  void clear_pb_mail();
  static const int kPbMailFieldNumber = 1;
  const ::MailInfo& pb_mail() const;
  ::MailInfo* mutable_pb_mail();
  ::MailInfo* release_pb_mail();
  void set_allocated_pb_mail(::MailInfo* pb_mail);

  // @@protoc_insertion_point(class_scope:CS_SendMail)
 private:
  void set_has_pb_mail();
  void clear_has_pb_mail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::MailInfo* pb_mail_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_SendMail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_SendMail) */ {
 public:
  SC_SendMail();
  virtual ~SC_SendMail();

  SC_SendMail(const SC_SendMail& from);

  inline SC_SendMail& operator=(const SC_SendMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SendMail& default_instance();

  static inline const SC_SendMail* internal_default_instance() {
    return reinterpret_cast<const SC_SendMail*>(
               &_SC_SendMail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(SC_SendMail* other);

  // implements Message ----------------------------------------------

  inline SC_SendMail* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_SendMail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_SendMail& from);
  void MergeFrom(const SC_SendMail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_SendMail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_SendMail_MsgID MsgID;
  static const MsgID ID =
    SC_SendMail_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_SendMail_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_SendMail_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_SendMail_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_SendMail_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_SendMail_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_SendMail_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_SendMail_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .MailInfo pb_mail = 2;
  bool has_pb_mail() const;
  void clear_pb_mail();
  static const int kPbMailFieldNumber = 2;
  const ::MailInfo& pb_mail() const;
  ::MailInfo* mutable_pb_mail();
  ::MailInfo* release_pb_mail();
  void set_allocated_pb_mail(::MailInfo* pb_mail);

  // optional int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_SendMail)
 private:
  void set_has_ret();
  void clear_has_ret();
  void set_has_pb_mail();
  void clear_has_pb_mail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::MailInfo* pb_mail_;
  ::google::protobuf::int32 ret_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_RecviceMail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_RecviceMail) */ {
 public:
  SC_RecviceMail();
  virtual ~SC_RecviceMail();

  SC_RecviceMail(const SC_RecviceMail& from);

  inline SC_RecviceMail& operator=(const SC_RecviceMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_RecviceMail& default_instance();

  static inline const SC_RecviceMail* internal_default_instance() {
    return reinterpret_cast<const SC_RecviceMail*>(
               &_SC_RecviceMail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(SC_RecviceMail* other);

  // implements Message ----------------------------------------------

  inline SC_RecviceMail* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_RecviceMail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_RecviceMail& from);
  void MergeFrom(const SC_RecviceMail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_RecviceMail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_RecviceMail_MsgID MsgID;
  static const MsgID ID =
    SC_RecviceMail_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_RecviceMail_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_RecviceMail_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_RecviceMail_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_RecviceMail_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_RecviceMail_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_RecviceMail_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_RecviceMail_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .MailInfo pb_mail = 1;
  bool has_pb_mail() const;
  void clear_pb_mail();
  static const int kPbMailFieldNumber = 1;
  const ::MailInfo& pb_mail() const;
  ::MailInfo* mutable_pb_mail();
  ::MailInfo* release_pb_mail();
  void set_allocated_pb_mail(::MailInfo* pb_mail);

  // @@protoc_insertion_point(class_scope:SC_RecviceMail)
 private:
  void set_has_pb_mail();
  void clear_has_pb_mail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::MailInfo* pb_mail_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_DelMail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_DelMail) */ {
 public:
  CS_DelMail();
  virtual ~CS_DelMail();

  CS_DelMail(const CS_DelMail& from);

  inline CS_DelMail& operator=(const CS_DelMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_DelMail& default_instance();

  static inline const CS_DelMail* internal_default_instance() {
    return reinterpret_cast<const CS_DelMail*>(
               &_CS_DelMail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(CS_DelMail* other);

  // implements Message ----------------------------------------------

  inline CS_DelMail* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_DelMail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_DelMail& from);
  void MergeFrom(const CS_DelMail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_DelMail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_DelMail_MsgID MsgID;
  static const MsgID ID =
    CS_DelMail_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_DelMail_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_DelMail_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_DelMail_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_DelMail_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_DelMail_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_DelMail_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_DelMail_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string mail_id = 1;
  bool has_mail_id() const;
  void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  const ::std::string& mail_id() const;
  void set_mail_id(const ::std::string& value);
  #if LANG_CXX11
  void set_mail_id(::std::string&& value);
  #endif
  void set_mail_id(const char* value);
  void set_mail_id(const char* value, size_t size);
  ::std::string* mutable_mail_id();
  ::std::string* release_mail_id();
  void set_allocated_mail_id(::std::string* mail_id);

  // @@protoc_insertion_point(class_scope:CS_DelMail)
 private:
  void set_has_mail_id();
  void clear_has_mail_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr mail_id_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_DelMail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_DelMail) */ {
 public:
  SC_DelMail();
  virtual ~SC_DelMail();

  SC_DelMail(const SC_DelMail& from);

  inline SC_DelMail& operator=(const SC_DelMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_DelMail& default_instance();

  static inline const SC_DelMail* internal_default_instance() {
    return reinterpret_cast<const SC_DelMail*>(
               &_SC_DelMail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(SC_DelMail* other);

  // implements Message ----------------------------------------------

  inline SC_DelMail* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_DelMail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_DelMail& from);
  void MergeFrom(const SC_DelMail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_DelMail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_DelMail_MsgID MsgID;
  static const MsgID ID =
    SC_DelMail_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_DelMail_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_DelMail_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_DelMail_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_DelMail_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_DelMail_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_DelMail_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_DelMail_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string mail_id = 2;
  bool has_mail_id() const;
  void clear_mail_id();
  static const int kMailIdFieldNumber = 2;
  const ::std::string& mail_id() const;
  void set_mail_id(const ::std::string& value);
  #if LANG_CXX11
  void set_mail_id(::std::string&& value);
  #endif
  void set_mail_id(const char* value);
  void set_mail_id(const char* value, size_t size);
  ::std::string* mutable_mail_id();
  ::std::string* release_mail_id();
  void set_allocated_mail_id(::std::string* mail_id);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_DelMail)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_mail_id();
  void clear_has_mail_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr mail_id_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ReceiveMailAttachment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ReceiveMailAttachment) */ {
 public:
  CS_ReceiveMailAttachment();
  virtual ~CS_ReceiveMailAttachment();

  CS_ReceiveMailAttachment(const CS_ReceiveMailAttachment& from);

  inline CS_ReceiveMailAttachment& operator=(const CS_ReceiveMailAttachment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ReceiveMailAttachment& default_instance();

  static inline const CS_ReceiveMailAttachment* internal_default_instance() {
    return reinterpret_cast<const CS_ReceiveMailAttachment*>(
               &_CS_ReceiveMailAttachment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(CS_ReceiveMailAttachment* other);

  // implements Message ----------------------------------------------

  inline CS_ReceiveMailAttachment* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ReceiveMailAttachment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ReceiveMailAttachment& from);
  void MergeFrom(const CS_ReceiveMailAttachment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ReceiveMailAttachment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ReceiveMailAttachment_MsgID MsgID;
  static const MsgID ID =
    CS_ReceiveMailAttachment_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ReceiveMailAttachment_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ReceiveMailAttachment_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ReceiveMailAttachment_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ReceiveMailAttachment_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ReceiveMailAttachment_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ReceiveMailAttachment_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ReceiveMailAttachment_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string mail_id = 1;
  bool has_mail_id() const;
  void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  const ::std::string& mail_id() const;
  void set_mail_id(const ::std::string& value);
  #if LANG_CXX11
  void set_mail_id(::std::string&& value);
  #endif
  void set_mail_id(const char* value);
  void set_mail_id(const char* value, size_t size);
  ::std::string* mutable_mail_id();
  ::std::string* release_mail_id();
  void set_allocated_mail_id(::std::string* mail_id);

  // @@protoc_insertion_point(class_scope:CS_ReceiveMailAttachment)
 private:
  void set_has_mail_id();
  void clear_has_mail_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr mail_id_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ReceiveMailAttachment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ReceiveMailAttachment) */ {
 public:
  SC_ReceiveMailAttachment();
  virtual ~SC_ReceiveMailAttachment();

  SC_ReceiveMailAttachment(const SC_ReceiveMailAttachment& from);

  inline SC_ReceiveMailAttachment& operator=(const SC_ReceiveMailAttachment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ReceiveMailAttachment& default_instance();

  static inline const SC_ReceiveMailAttachment* internal_default_instance() {
    return reinterpret_cast<const SC_ReceiveMailAttachment*>(
               &_SC_ReceiveMailAttachment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(SC_ReceiveMailAttachment* other);

  // implements Message ----------------------------------------------

  inline SC_ReceiveMailAttachment* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ReceiveMailAttachment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ReceiveMailAttachment& from);
  void MergeFrom(const SC_ReceiveMailAttachment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ReceiveMailAttachment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ReceiveMailAttachment_MsgID MsgID;
  static const MsgID ID =
    SC_ReceiveMailAttachment_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ReceiveMailAttachment_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ReceiveMailAttachment_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ReceiveMailAttachment_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ReceiveMailAttachment_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ReceiveMailAttachment_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ReceiveMailAttachment_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ReceiveMailAttachment_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .ItemInfo pb_attachment = 3;
  int pb_attachment_size() const;
  void clear_pb_attachment();
  static const int kPbAttachmentFieldNumber = 3;
  const ::ItemInfo& pb_attachment(int index) const;
  ::ItemInfo* mutable_pb_attachment(int index);
  ::ItemInfo* add_pb_attachment();
  ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
      mutable_pb_attachment();
  const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
      pb_attachment() const;

  // optional string mail_id = 2;
  bool has_mail_id() const;
  void clear_mail_id();
  static const int kMailIdFieldNumber = 2;
  const ::std::string& mail_id() const;
  void set_mail_id(const ::std::string& value);
  #if LANG_CXX11
  void set_mail_id(::std::string&& value);
  #endif
  void set_mail_id(const char* value);
  void set_mail_id(const char* value, size_t size);
  ::std::string* mutable_mail_id();
  ::std::string* release_mail_id();
  void set_allocated_mail_id(::std::string* mail_id);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_ReceiveMailAttachment)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_mail_id();
  void clear_has_mail_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ItemInfo > pb_attachment_;
  ::google::protobuf::internal::ArenaStringPtr mail_id_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ReceiveRewardLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ReceiveRewardLogin) */ {
 public:
  CS_ReceiveRewardLogin();
  virtual ~CS_ReceiveRewardLogin();

  CS_ReceiveRewardLogin(const CS_ReceiveRewardLogin& from);

  inline CS_ReceiveRewardLogin& operator=(const CS_ReceiveRewardLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ReceiveRewardLogin& default_instance();

  static inline const CS_ReceiveRewardLogin* internal_default_instance() {
    return reinterpret_cast<const CS_ReceiveRewardLogin*>(
               &_CS_ReceiveRewardLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(CS_ReceiveRewardLogin* other);

  // implements Message ----------------------------------------------

  inline CS_ReceiveRewardLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ReceiveRewardLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ReceiveRewardLogin& from);
  void MergeFrom(const CS_ReceiveRewardLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ReceiveRewardLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ReceiveRewardLogin_MsgID MsgID;
  static const MsgID ID =
    CS_ReceiveRewardLogin_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ReceiveRewardLogin_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ReceiveRewardLogin_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ReceiveRewardLogin_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ReceiveRewardLogin_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ReceiveRewardLogin_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ReceiveRewardLogin_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ReceiveRewardLogin_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_ReceiveRewardLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ReceiveRewardLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ReceiveRewardLogin) */ {
 public:
  SC_ReceiveRewardLogin();
  virtual ~SC_ReceiveRewardLogin();

  SC_ReceiveRewardLogin(const SC_ReceiveRewardLogin& from);

  inline SC_ReceiveRewardLogin& operator=(const SC_ReceiveRewardLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ReceiveRewardLogin& default_instance();

  static inline const SC_ReceiveRewardLogin* internal_default_instance() {
    return reinterpret_cast<const SC_ReceiveRewardLogin*>(
               &_SC_ReceiveRewardLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(SC_ReceiveRewardLogin* other);

  // implements Message ----------------------------------------------

  inline SC_ReceiveRewardLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ReceiveRewardLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ReceiveRewardLogin& from);
  void MergeFrom(const SC_ReceiveRewardLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ReceiveRewardLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ReceiveRewardLogin_MsgID MsgID;
  static const MsgID ID =
    SC_ReceiveRewardLogin_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ReceiveRewardLogin_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ReceiveRewardLogin_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ReceiveRewardLogin_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ReceiveRewardLogin_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ReceiveRewardLogin_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ReceiveRewardLogin_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ReceiveRewardLogin_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_ReceiveRewardLogin)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ReceiveRewardOnline : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ReceiveRewardOnline) */ {
 public:
  CS_ReceiveRewardOnline();
  virtual ~CS_ReceiveRewardOnline();

  CS_ReceiveRewardOnline(const CS_ReceiveRewardOnline& from);

  inline CS_ReceiveRewardOnline& operator=(const CS_ReceiveRewardOnline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ReceiveRewardOnline& default_instance();

  static inline const CS_ReceiveRewardOnline* internal_default_instance() {
    return reinterpret_cast<const CS_ReceiveRewardOnline*>(
               &_CS_ReceiveRewardOnline_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(CS_ReceiveRewardOnline* other);

  // implements Message ----------------------------------------------

  inline CS_ReceiveRewardOnline* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ReceiveRewardOnline* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ReceiveRewardOnline& from);
  void MergeFrom(const CS_ReceiveRewardOnline& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ReceiveRewardOnline* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ReceiveRewardOnline_MsgID MsgID;
  static const MsgID ID =
    CS_ReceiveRewardOnline_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ReceiveRewardOnline_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ReceiveRewardOnline_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ReceiveRewardOnline_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ReceiveRewardOnline_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ReceiveRewardOnline_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ReceiveRewardOnline_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ReceiveRewardOnline_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_ReceiveRewardOnline)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ReceiveRewardOnline : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ReceiveRewardOnline) */ {
 public:
  SC_ReceiveRewardOnline();
  virtual ~SC_ReceiveRewardOnline();

  SC_ReceiveRewardOnline(const SC_ReceiveRewardOnline& from);

  inline SC_ReceiveRewardOnline& operator=(const SC_ReceiveRewardOnline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ReceiveRewardOnline& default_instance();

  static inline const SC_ReceiveRewardOnline* internal_default_instance() {
    return reinterpret_cast<const SC_ReceiveRewardOnline*>(
               &_SC_ReceiveRewardOnline_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(SC_ReceiveRewardOnline* other);

  // implements Message ----------------------------------------------

  inline SC_ReceiveRewardOnline* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ReceiveRewardOnline* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ReceiveRewardOnline& from);
  void MergeFrom(const SC_ReceiveRewardOnline& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ReceiveRewardOnline* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ReceiveRewardOnline_MsgID MsgID;
  static const MsgID ID =
    SC_ReceiveRewardOnline_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ReceiveRewardOnline_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ReceiveRewardOnline_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ReceiveRewardOnline_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ReceiveRewardOnline_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ReceiveRewardOnline_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ReceiveRewardOnline_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ReceiveRewardOnline_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_ReceiveRewardOnline)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ReceiveReliefPayment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ReceiveReliefPayment) */ {
 public:
  CS_ReceiveReliefPayment();
  virtual ~CS_ReceiveReliefPayment();

  CS_ReceiveReliefPayment(const CS_ReceiveReliefPayment& from);

  inline CS_ReceiveReliefPayment& operator=(const CS_ReceiveReliefPayment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ReceiveReliefPayment& default_instance();

  static inline const CS_ReceiveReliefPayment* internal_default_instance() {
    return reinterpret_cast<const CS_ReceiveReliefPayment*>(
               &_CS_ReceiveReliefPayment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(CS_ReceiveReliefPayment* other);

  // implements Message ----------------------------------------------

  inline CS_ReceiveReliefPayment* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ReceiveReliefPayment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ReceiveReliefPayment& from);
  void MergeFrom(const CS_ReceiveReliefPayment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ReceiveReliefPayment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ReceiveReliefPayment_MsgID MsgID;
  static const MsgID ID =
    CS_ReceiveReliefPayment_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ReceiveReliefPayment_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ReceiveReliefPayment_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ReceiveReliefPayment_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ReceiveReliefPayment_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ReceiveReliefPayment_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ReceiveReliefPayment_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ReceiveReliefPayment_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_ReceiveReliefPayment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ReceiveReliefPayment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ReceiveReliefPayment) */ {
 public:
  SC_ReceiveReliefPayment();
  virtual ~SC_ReceiveReliefPayment();

  SC_ReceiveReliefPayment(const SC_ReceiveReliefPayment& from);

  inline SC_ReceiveReliefPayment& operator=(const SC_ReceiveReliefPayment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ReceiveReliefPayment& default_instance();

  static inline const SC_ReceiveReliefPayment* internal_default_instance() {
    return reinterpret_cast<const SC_ReceiveReliefPayment*>(
               &_SC_ReceiveReliefPayment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(SC_ReceiveReliefPayment* other);

  // implements Message ----------------------------------------------

  inline SC_ReceiveReliefPayment* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ReceiveReliefPayment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ReceiveReliefPayment& from);
  void MergeFrom(const SC_ReceiveReliefPayment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ReceiveReliefPayment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ReceiveReliefPayment_MsgID MsgID;
  static const MsgID ID =
    SC_ReceiveReliefPayment_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ReceiveReliefPayment_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ReceiveReliefPayment_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ReceiveReliefPayment_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ReceiveReliefPayment_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ReceiveReliefPayment_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ReceiveReliefPayment_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ReceiveReliefPayment_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_ReceiveReliefPayment)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CE_RequestRank : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CE_RequestRank) */ {
 public:
  CE_RequestRank();
  virtual ~CE_RequestRank();

  CE_RequestRank(const CE_RequestRank& from);

  inline CE_RequestRank& operator=(const CE_RequestRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CE_RequestRank& default_instance();

  static inline const CE_RequestRank* internal_default_instance() {
    return reinterpret_cast<const CE_RequestRank*>(
               &_CE_RequestRank_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(CE_RequestRank* other);

  // implements Message ----------------------------------------------

  inline CE_RequestRank* New() const PROTOBUF_FINAL { return New(NULL); }

  CE_RequestRank* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CE_RequestRank& from);
  void MergeFrom(const CE_RequestRank& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CE_RequestRank* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CE_RequestRank_MsgID MsgID;
  static const MsgID ID =
    CE_RequestRank_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CE_RequestRank_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CE_RequestRank_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CE_RequestRank_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CE_RequestRank_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CE_RequestRank_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CE_RequestRank_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CE_RequestRank_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 rank_type = 1;
  bool has_rank_type() const;
  void clear_rank_type();
  static const int kRankTypeFieldNumber = 1;
  ::google::protobuf::int32 rank_type() const;
  void set_rank_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CE_RequestRank)
 private:
  void set_has_rank_type();
  void clear_has_rank_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 rank_type_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EC_ReplyRank : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EC_ReplyRank) */ {
 public:
  EC_ReplyRank();
  virtual ~EC_ReplyRank();

  EC_ReplyRank(const EC_ReplyRank& from);

  inline EC_ReplyRank& operator=(const EC_ReplyRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EC_ReplyRank& default_instance();

  static inline const EC_ReplyRank* internal_default_instance() {
    return reinterpret_cast<const EC_ReplyRank*>(
               &_EC_ReplyRank_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(EC_ReplyRank* other);

  // implements Message ----------------------------------------------

  inline EC_ReplyRank* New() const PROTOBUF_FINAL { return New(NULL); }

  EC_ReplyRank* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EC_ReplyRank& from);
  void MergeFrom(const EC_ReplyRank& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EC_ReplyRank* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EC_ReplyRank_MsgID MsgID;
  static const MsgID ID =
    EC_ReplyRank_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return EC_ReplyRank_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    EC_ReplyRank_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    EC_ReplyRank_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    EC_ReplyRank_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return EC_ReplyRank_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return EC_ReplyRank_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return EC_ReplyRank_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .RankItem pb_rank = 2;
  int pb_rank_size() const;
  void clear_pb_rank();
  static const int kPbRankFieldNumber = 2;
  const ::RankItem& pb_rank(int index) const;
  ::RankItem* mutable_pb_rank(int index);
  ::RankItem* add_pb_rank();
  ::google::protobuf::RepeatedPtrField< ::RankItem >*
      mutable_pb_rank();
  const ::google::protobuf::RepeatedPtrField< ::RankItem >&
      pb_rank() const;

  // optional int32 rank_type = 1;
  bool has_rank_type() const;
  void clear_rank_type();
  static const int kRankTypeFieldNumber = 1;
  ::google::protobuf::int32 rank_type() const;
  void set_rank_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EC_ReplyRank)
 private:
  void set_has_rank_type();
  void clear_has_rank_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RankItem > pb_rank_;
  ::google::protobuf::int32 rank_type_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_EnterRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_EnterRoom) */ {
 public:
  CS_EnterRoom();
  virtual ~CS_EnterRoom();

  CS_EnterRoom(const CS_EnterRoom& from);

  inline CS_EnterRoom& operator=(const CS_EnterRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_EnterRoom& default_instance();

  static inline const CS_EnterRoom* internal_default_instance() {
    return reinterpret_cast<const CS_EnterRoom*>(
               &_CS_EnterRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(CS_EnterRoom* other);

  // implements Message ----------------------------------------------

  inline CS_EnterRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_EnterRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_EnterRoom& from);
  void MergeFrom(const CS_EnterRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_EnterRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_EnterRoom_MsgID MsgID;
  static const MsgID ID =
    CS_EnterRoom_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_EnterRoom_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_EnterRoom_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_EnterRoom_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_EnterRoom_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_EnterRoom_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_EnterRoom_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_EnterRoom_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_EnterRoom)
 private:
  void set_has_room_id();
  void clear_has_room_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 room_id_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_EnterRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_EnterRoom) */ {
 public:
  SC_EnterRoom();
  virtual ~SC_EnterRoom();

  SC_EnterRoom(const SC_EnterRoom& from);

  inline SC_EnterRoom& operator=(const SC_EnterRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_EnterRoom& default_instance();

  static inline const SC_EnterRoom* internal_default_instance() {
    return reinterpret_cast<const SC_EnterRoom*>(
               &_SC_EnterRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(SC_EnterRoom* other);

  // implements Message ----------------------------------------------

  inline SC_EnterRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_EnterRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_EnterRoom& from);
  void MergeFrom(const SC_EnterRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_EnterRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_EnterRoom_MsgID MsgID;
  static const MsgID ID =
    SC_EnterRoom_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_EnterRoom_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_EnterRoom_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_EnterRoom_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_EnterRoom_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_EnterRoom_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_EnterRoom_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_EnterRoom_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_EnterRoom)
 private:
  void set_has_room_id();
  void clear_has_room_id();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NotifyEnterRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_NotifyEnterRoom) */ {
 public:
  SC_NotifyEnterRoom();
  virtual ~SC_NotifyEnterRoom();

  SC_NotifyEnterRoom(const SC_NotifyEnterRoom& from);

  inline SC_NotifyEnterRoom& operator=(const SC_NotifyEnterRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NotifyEnterRoom& default_instance();

  static inline const SC_NotifyEnterRoom* internal_default_instance() {
    return reinterpret_cast<const SC_NotifyEnterRoom*>(
               &_SC_NotifyEnterRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(SC_NotifyEnterRoom* other);

  // implements Message ----------------------------------------------

  inline SC_NotifyEnterRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NotifyEnterRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NotifyEnterRoom& from);
  void MergeFrom(const SC_NotifyEnterRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NotifyEnterRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_NotifyEnterRoom_MsgID MsgID;
  static const MsgID ID =
    SC_NotifyEnterRoom_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_NotifyEnterRoom_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_NotifyEnterRoom_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_NotifyEnterRoom_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_NotifyEnterRoom_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_NotifyEnterRoom_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_NotifyEnterRoom_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_NotifyEnterRoom_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_NotifyEnterRoom)
 private:
  void set_has_room_id();
  void clear_has_room_id();
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ExitRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ExitRoom) */ {
 public:
  CS_ExitRoom();
  virtual ~CS_ExitRoom();

  CS_ExitRoom(const CS_ExitRoom& from);

  inline CS_ExitRoom& operator=(const CS_ExitRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ExitRoom& default_instance();

  static inline const CS_ExitRoom* internal_default_instance() {
    return reinterpret_cast<const CS_ExitRoom*>(
               &_CS_ExitRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(CS_ExitRoom* other);

  // implements Message ----------------------------------------------

  inline CS_ExitRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ExitRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ExitRoom& from);
  void MergeFrom(const CS_ExitRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ExitRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ExitRoom_MsgID MsgID;
  static const MsgID ID =
    CS_ExitRoom_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ExitRoom_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ExitRoom_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ExitRoom_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ExitRoom_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ExitRoom_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ExitRoom_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ExitRoom_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_ExitRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ExitRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ExitRoom) */ {
 public:
  SC_ExitRoom();
  virtual ~SC_ExitRoom();

  SC_ExitRoom(const SC_ExitRoom& from);

  inline SC_ExitRoom& operator=(const SC_ExitRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ExitRoom& default_instance();

  static inline const SC_ExitRoom* internal_default_instance() {
    return reinterpret_cast<const SC_ExitRoom*>(
               &_SC_ExitRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(SC_ExitRoom* other);

  // implements Message ----------------------------------------------

  inline SC_ExitRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ExitRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ExitRoom& from);
  void MergeFrom(const SC_ExitRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ExitRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ExitRoom_MsgID MsgID;
  static const MsgID ID =
    SC_ExitRoom_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ExitRoom_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ExitRoom_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ExitRoom_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ExitRoom_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ExitRoom_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ExitRoom_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ExitRoom_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_ExitRoom)
 private:
  void set_has_room_id();
  void clear_has_room_id();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NotifyExitRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_NotifyExitRoom) */ {
 public:
  SC_NotifyExitRoom();
  virtual ~SC_NotifyExitRoom();

  SC_NotifyExitRoom(const SC_NotifyExitRoom& from);

  inline SC_NotifyExitRoom& operator=(const SC_NotifyExitRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NotifyExitRoom& default_instance();

  static inline const SC_NotifyExitRoom* internal_default_instance() {
    return reinterpret_cast<const SC_NotifyExitRoom*>(
               &_SC_NotifyExitRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(SC_NotifyExitRoom* other);

  // implements Message ----------------------------------------------

  inline SC_NotifyExitRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NotifyExitRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NotifyExitRoom& from);
  void MergeFrom(const SC_NotifyExitRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NotifyExitRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_NotifyExitRoom_MsgID MsgID;
  static const MsgID ID =
    SC_NotifyExitRoom_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_NotifyExitRoom_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_NotifyExitRoom_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_NotifyExitRoom_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_NotifyExitRoom_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_NotifyExitRoom_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_NotifyExitRoom_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_NotifyExitRoom_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_NotifyExitRoom)
 private:
  void set_has_room_id();
  void clear_has_room_id();
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_AutoEnterRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_AutoEnterRoom) */ {
 public:
  CS_AutoEnterRoom();
  virtual ~CS_AutoEnterRoom();

  CS_AutoEnterRoom(const CS_AutoEnterRoom& from);

  inline CS_AutoEnterRoom& operator=(const CS_AutoEnterRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_AutoEnterRoom& default_instance();

  static inline const CS_AutoEnterRoom* internal_default_instance() {
    return reinterpret_cast<const CS_AutoEnterRoom*>(
               &_CS_AutoEnterRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(CS_AutoEnterRoom* other);

  // implements Message ----------------------------------------------

  inline CS_AutoEnterRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_AutoEnterRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_AutoEnterRoom& from);
  void MergeFrom(const CS_AutoEnterRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_AutoEnterRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_AutoEnterRoom_MsgID MsgID;
  static const MsgID ID =
    CS_AutoEnterRoom_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_AutoEnterRoom_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_AutoEnterRoom_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_AutoEnterRoom_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_AutoEnterRoom_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_AutoEnterRoom_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_AutoEnterRoom_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_AutoEnterRoom_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_AutoEnterRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_AutoSitDown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_AutoSitDown) */ {
 public:
  CS_AutoSitDown();
  virtual ~CS_AutoSitDown();

  CS_AutoSitDown(const CS_AutoSitDown& from);

  inline CS_AutoSitDown& operator=(const CS_AutoSitDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_AutoSitDown& default_instance();

  static inline const CS_AutoSitDown* internal_default_instance() {
    return reinterpret_cast<const CS_AutoSitDown*>(
               &_CS_AutoSitDown_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(CS_AutoSitDown* other);

  // implements Message ----------------------------------------------

  inline CS_AutoSitDown* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_AutoSitDown* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_AutoSitDown& from);
  void MergeFrom(const CS_AutoSitDown& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_AutoSitDown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_AutoSitDown_MsgID MsgID;
  static const MsgID ID =
    CS_AutoSitDown_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_AutoSitDown_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_AutoSitDown_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_AutoSitDown_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_AutoSitDown_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_AutoSitDown_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_AutoSitDown_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_AutoSitDown_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_AutoSitDown)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_SitDown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_SitDown) */ {
 public:
  CS_SitDown();
  virtual ~CS_SitDown();

  CS_SitDown(const CS_SitDown& from);

  inline CS_SitDown& operator=(const CS_SitDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_SitDown& default_instance();

  static inline const CS_SitDown* internal_default_instance() {
    return reinterpret_cast<const CS_SitDown*>(
               &_CS_SitDown_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(CS_SitDown* other);

  // implements Message ----------------------------------------------

  inline CS_SitDown* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_SitDown* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_SitDown& from);
  void MergeFrom(const CS_SitDown& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_SitDown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_SitDown_MsgID MsgID;
  static const MsgID ID =
    CS_SitDown_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_SitDown_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_SitDown_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_SitDown_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_SitDown_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_SitDown_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_SitDown_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_SitDown_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 table_id = 1;
  bool has_table_id() const;
  void clear_table_id();
  static const int kTableIdFieldNumber = 1;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // optional int32 chair_id = 2;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 2;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_SitDown)
 private:
  void set_has_table_id();
  void clear_has_table_id();
  void set_has_chair_id();
  void clear_has_chair_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 chair_id_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_SitDown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_SitDown) */ {
 public:
  SC_SitDown();
  virtual ~SC_SitDown();

  SC_SitDown(const SC_SitDown& from);

  inline SC_SitDown& operator=(const SC_SitDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SitDown& default_instance();

  static inline const SC_SitDown* internal_default_instance() {
    return reinterpret_cast<const SC_SitDown*>(
               &_SC_SitDown_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(SC_SitDown* other);

  // implements Message ----------------------------------------------

  inline SC_SitDown* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_SitDown* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_SitDown& from);
  void MergeFrom(const SC_SitDown& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_SitDown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_SitDown_MsgID MsgID;
  static const MsgID ID =
    SC_SitDown_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_SitDown_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_SitDown_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_SitDown_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_SitDown_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_SitDown_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_SitDown_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_SitDown_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 table_id = 1;
  bool has_table_id() const;
  void clear_table_id();
  static const int kTableIdFieldNumber = 1;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // optional int32 chair_id = 2;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 2;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional int32 result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_SitDown)
 private:
  void set_has_table_id();
  void clear_has_table_id();
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 chair_id_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NotifySitDown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_NotifySitDown) */ {
 public:
  SC_NotifySitDown();
  virtual ~SC_NotifySitDown();

  SC_NotifySitDown(const SC_NotifySitDown& from);

  inline SC_NotifySitDown& operator=(const SC_NotifySitDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NotifySitDown& default_instance();

  static inline const SC_NotifySitDown* internal_default_instance() {
    return reinterpret_cast<const SC_NotifySitDown*>(
               &_SC_NotifySitDown_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(SC_NotifySitDown* other);

  // implements Message ----------------------------------------------

  inline SC_NotifySitDown* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NotifySitDown* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NotifySitDown& from);
  void MergeFrom(const SC_NotifySitDown& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NotifySitDown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_NotifySitDown_MsgID MsgID;
  static const MsgID ID =
    SC_NotifySitDown_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_NotifySitDown_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_NotifySitDown_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_NotifySitDown_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_NotifySitDown_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_NotifySitDown_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_NotifySitDown_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_NotifySitDown_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .PlayerVisualInfo pb_visual_info = 2;
  bool has_pb_visual_info() const;
  void clear_pb_visual_info();
  static const int kPbVisualInfoFieldNumber = 2;
  const ::PlayerVisualInfo& pb_visual_info() const;
  ::PlayerVisualInfo* mutable_pb_visual_info();
  ::PlayerVisualInfo* release_pb_visual_info();
  void set_allocated_pb_visual_info(::PlayerVisualInfo* pb_visual_info);

  // optional int32 table_id = 1;
  bool has_table_id() const;
  void clear_table_id();
  static const int kTableIdFieldNumber = 1;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // optional bool is_onfline = 4;
  bool has_is_onfline() const;
  void clear_is_onfline();
  static const int kIsOnflineFieldNumber = 4;
  bool is_onfline() const;
  void set_is_onfline(bool value);

  // @@protoc_insertion_point(class_scope:SC_NotifySitDown)
 private:
  void set_has_table_id();
  void clear_has_table_id();
  void set_has_pb_visual_info();
  void clear_has_pb_visual_info();
  void set_has_is_onfline();
  void clear_has_is_onfline();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::PlayerVisualInfo* pb_visual_info_;
  ::google::protobuf::int32 table_id_;
  bool is_onfline_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_StandUp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_StandUp) */ {
 public:
  CS_StandUp();
  virtual ~CS_StandUp();

  CS_StandUp(const CS_StandUp& from);

  inline CS_StandUp& operator=(const CS_StandUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_StandUp& default_instance();

  static inline const CS_StandUp* internal_default_instance() {
    return reinterpret_cast<const CS_StandUp*>(
               &_CS_StandUp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(CS_StandUp* other);

  // implements Message ----------------------------------------------

  inline CS_StandUp* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_StandUp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_StandUp& from);
  void MergeFrom(const CS_StandUp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_StandUp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_StandUp_MsgID MsgID;
  static const MsgID ID =
    CS_StandUp_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_StandUp_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_StandUp_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_StandUp_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_StandUp_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_StandUp_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_StandUp_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_StandUp_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_StandUp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_StandUp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_StandUp) */ {
 public:
  SC_StandUp();
  virtual ~SC_StandUp();

  SC_StandUp(const SC_StandUp& from);

  inline SC_StandUp& operator=(const SC_StandUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_StandUp& default_instance();

  static inline const SC_StandUp* internal_default_instance() {
    return reinterpret_cast<const SC_StandUp*>(
               &_SC_StandUp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(SC_StandUp* other);

  // implements Message ----------------------------------------------

  inline SC_StandUp* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_StandUp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_StandUp& from);
  void MergeFrom(const SC_StandUp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_StandUp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_StandUp_MsgID MsgID;
  static const MsgID ID =
    SC_StandUp_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_StandUp_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_StandUp_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_StandUp_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_StandUp_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_StandUp_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_StandUp_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_StandUp_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 table_id = 1;
  bool has_table_id() const;
  void clear_table_id();
  static const int kTableIdFieldNumber = 1;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // optional int32 chair_id = 2;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 2;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional int32 result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_StandUp)
 private:
  void set_has_table_id();
  void clear_has_table_id();
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 chair_id_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NotifyStandUp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_NotifyStandUp) */ {
 public:
  SC_NotifyStandUp();
  virtual ~SC_NotifyStandUp();

  SC_NotifyStandUp(const SC_NotifyStandUp& from);

  inline SC_NotifyStandUp& operator=(const SC_NotifyStandUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NotifyStandUp& default_instance();

  static inline const SC_NotifyStandUp* internal_default_instance() {
    return reinterpret_cast<const SC_NotifyStandUp*>(
               &_SC_NotifyStandUp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(SC_NotifyStandUp* other);

  // implements Message ----------------------------------------------

  inline SC_NotifyStandUp* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NotifyStandUp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NotifyStandUp& from);
  void MergeFrom(const SC_NotifyStandUp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NotifyStandUp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_NotifyStandUp_MsgID MsgID;
  static const MsgID ID =
    SC_NotifyStandUp_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_NotifyStandUp_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_NotifyStandUp_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_NotifyStandUp_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_NotifyStandUp_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_NotifyStandUp_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_NotifyStandUp_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_NotifyStandUp_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 table_id = 1;
  bool has_table_id() const;
  void clear_table_id();
  static const int kTableIdFieldNumber = 1;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // optional int32 chair_id = 2;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 2;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional int32 guid = 3;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional bool is_offline = 4;
  bool has_is_offline() const;
  void clear_is_offline();
  static const int kIsOfflineFieldNumber = 4;
  bool is_offline() const;
  void set_is_offline(bool value);

  // @@protoc_insertion_point(class_scope:SC_NotifyStandUp)
 private:
  void set_has_table_id();
  void clear_has_table_id();
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_guid();
  void clear_has_guid();
  void set_has_is_offline();
  void clear_has_is_offline();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 chair_id_;
  ::google::protobuf::int32 guid_;
  bool is_offline_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_EnterRoomAndSitDown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_EnterRoomAndSitDown) */ {
 public:
  CS_EnterRoomAndSitDown();
  virtual ~CS_EnterRoomAndSitDown();

  CS_EnterRoomAndSitDown(const CS_EnterRoomAndSitDown& from);

  inline CS_EnterRoomAndSitDown& operator=(const CS_EnterRoomAndSitDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_EnterRoomAndSitDown& default_instance();

  static inline const CS_EnterRoomAndSitDown* internal_default_instance() {
    return reinterpret_cast<const CS_EnterRoomAndSitDown*>(
               &_CS_EnterRoomAndSitDown_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(CS_EnterRoomAndSitDown* other);

  // implements Message ----------------------------------------------

  inline CS_EnterRoomAndSitDown* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_EnterRoomAndSitDown* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_EnterRoomAndSitDown& from);
  void MergeFrom(const CS_EnterRoomAndSitDown& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_EnterRoomAndSitDown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_EnterRoomAndSitDown_MsgID MsgID;
  static const MsgID ID =
    CS_EnterRoomAndSitDown_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_EnterRoomAndSitDown_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_EnterRoomAndSitDown_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_EnterRoomAndSitDown_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_EnterRoomAndSitDown_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_EnterRoomAndSitDown_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_EnterRoomAndSitDown_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_EnterRoomAndSitDown_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_EnterRoomAndSitDown)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_EnterRoomAndSitDown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_EnterRoomAndSitDown) */ {
 public:
  SC_EnterRoomAndSitDown();
  virtual ~SC_EnterRoomAndSitDown();

  SC_EnterRoomAndSitDown(const SC_EnterRoomAndSitDown& from);

  inline SC_EnterRoomAndSitDown& operator=(const SC_EnterRoomAndSitDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_EnterRoomAndSitDown& default_instance();

  static inline const SC_EnterRoomAndSitDown* internal_default_instance() {
    return reinterpret_cast<const SC_EnterRoomAndSitDown*>(
               &_SC_EnterRoomAndSitDown_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(SC_EnterRoomAndSitDown* other);

  // implements Message ----------------------------------------------

  inline SC_EnterRoomAndSitDown* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_EnterRoomAndSitDown* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_EnterRoomAndSitDown& from);
  void MergeFrom(const SC_EnterRoomAndSitDown& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_EnterRoomAndSitDown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_EnterRoomAndSitDown_MsgID MsgID;
  static const MsgID ID =
    SC_EnterRoomAndSitDown_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_EnterRoomAndSitDown_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_EnterRoomAndSitDown_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_EnterRoomAndSitDown_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_EnterRoomAndSitDown_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_EnterRoomAndSitDown_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_EnterRoomAndSitDown_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_EnterRoomAndSitDown_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PlayerVisualInfo pb_visual_info = 5;
  int pb_visual_info_size() const;
  void clear_pb_visual_info();
  static const int kPbVisualInfoFieldNumber = 5;
  const ::PlayerVisualInfo& pb_visual_info(int index) const;
  ::PlayerVisualInfo* mutable_pb_visual_info(int index);
  ::PlayerVisualInfo* add_pb_visual_info();
  ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >*
      mutable_pb_visual_info();
  const ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >&
      pb_visual_info() const;

  // optional string ip_area = 9;
  bool has_ip_area() const;
  void clear_ip_area();
  static const int kIpAreaFieldNumber = 9;
  const ::std::string& ip_area() const;
  void set_ip_area(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_area(::std::string&& value);
  #endif
  void set_ip_area(const char* value);
  void set_ip_area(const char* value, size_t size);
  ::std::string* mutable_ip_area();
  ::std::string* release_ip_area();
  void set_allocated_ip_area(::std::string* ip_area);

  // optional int32 room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // optional int32 table_id = 2;
  bool has_table_id() const;
  void clear_table_id();
  static const int kTableIdFieldNumber = 2;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // optional int32 chair_id = 3;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 3;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional int32 result = 4;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 game_id = 6;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 6;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // optional int32 first_game_type = 7;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 7;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional int32 second_game_type = 8;
  bool has_second_game_type() const;
  void clear_second_game_type();
  static const int kSecondGameTypeFieldNumber = 8;
  ::google::protobuf::int32 second_game_type() const;
  void set_second_game_type(::google::protobuf::int32 value);

  // optional bool private_room = 10;
  bool has_private_room() const;
  void clear_private_room();
  static const int kPrivateRoomFieldNumber = 10;
  bool private_room() const;
  void set_private_room(bool value);

  // optional int32 balance_money = 11;
  bool has_balance_money() const;
  void clear_balance_money();
  static const int kBalanceMoneyFieldNumber = 11;
  ::google::protobuf::int32 balance_money() const;
  void set_balance_money(::google::protobuf::int32 value);

  // optional int32 private_room_score_type = 12;
  bool has_private_room_score_type() const;
  void clear_private_room_score_type();
  static const int kPrivateRoomScoreTypeFieldNumber = 12;
  ::google::protobuf::int32 private_room_score_type() const;
  void set_private_room_score_type(::google::protobuf::int32 value);

  // optional int32 private_room_cell_money = 13;
  bool has_private_room_cell_money() const;
  void clear_private_room_cell_money();
  static const int kPrivateRoomCellMoneyFieldNumber = 13;
  ::google::protobuf::int32 private_room_cell_money() const;
  void set_private_room_cell_money(::google::protobuf::int32 value);

  // optional int32 private_room_id = 14;
  bool has_private_room_id() const;
  void clear_private_room_id();
  static const int kPrivateRoomIdFieldNumber = 14;
  ::google::protobuf::int32 private_room_id() const;
  void set_private_room_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_EnterRoomAndSitDown)
 private:
  void set_has_room_id();
  void clear_has_room_id();
  void set_has_table_id();
  void clear_has_table_id();
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_result();
  void clear_has_result();
  void set_has_game_id();
  void clear_has_game_id();
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_second_game_type();
  void clear_has_second_game_type();
  void set_has_ip_area();
  void clear_has_ip_area();
  void set_has_private_room();
  void clear_has_private_room();
  void set_has_balance_money();
  void clear_has_balance_money();
  void set_has_private_room_score_type();
  void clear_has_private_room_score_type();
  void set_has_private_room_cell_money();
  void clear_has_private_room_cell_money();
  void set_has_private_room_id();
  void clear_has_private_room_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo > pb_visual_info_;
  ::google::protobuf::internal::ArenaStringPtr ip_area_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 chair_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 game_id_;
  ::google::protobuf::int32 first_game_type_;
  ::google::protobuf::int32 second_game_type_;
  bool private_room_;
  ::google::protobuf::int32 balance_money_;
  ::google::protobuf::int32 private_room_score_type_;
  ::google::protobuf::int32 private_room_cell_money_;
  ::google::protobuf::int32 private_room_id_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_StandUpAndExitRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_StandUpAndExitRoom) */ {
 public:
  CS_StandUpAndExitRoom();
  virtual ~CS_StandUpAndExitRoom();

  CS_StandUpAndExitRoom(const CS_StandUpAndExitRoom& from);

  inline CS_StandUpAndExitRoom& operator=(const CS_StandUpAndExitRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_StandUpAndExitRoom& default_instance();

  static inline const CS_StandUpAndExitRoom* internal_default_instance() {
    return reinterpret_cast<const CS_StandUpAndExitRoom*>(
               &_CS_StandUpAndExitRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(CS_StandUpAndExitRoom* other);

  // implements Message ----------------------------------------------

  inline CS_StandUpAndExitRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_StandUpAndExitRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_StandUpAndExitRoom& from);
  void MergeFrom(const CS_StandUpAndExitRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_StandUpAndExitRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_StandUpAndExitRoom_MsgID MsgID;
  static const MsgID ID =
    CS_StandUpAndExitRoom_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_StandUpAndExitRoom_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_StandUpAndExitRoom_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_StandUpAndExitRoom_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_StandUpAndExitRoom_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_StandUpAndExitRoom_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_StandUpAndExitRoom_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_StandUpAndExitRoom_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_StandUpAndExitRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_StandUpAndExitRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_StandUpAndExitRoom) */ {
 public:
  SC_StandUpAndExitRoom();
  virtual ~SC_StandUpAndExitRoom();

  SC_StandUpAndExitRoom(const SC_StandUpAndExitRoom& from);

  inline SC_StandUpAndExitRoom& operator=(const SC_StandUpAndExitRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_StandUpAndExitRoom& default_instance();

  static inline const SC_StandUpAndExitRoom* internal_default_instance() {
    return reinterpret_cast<const SC_StandUpAndExitRoom*>(
               &_SC_StandUpAndExitRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    106;

  void Swap(SC_StandUpAndExitRoom* other);

  // implements Message ----------------------------------------------

  inline SC_StandUpAndExitRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_StandUpAndExitRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_StandUpAndExitRoom& from);
  void MergeFrom(const SC_StandUpAndExitRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_StandUpAndExitRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_StandUpAndExitRoom_MsgID MsgID;
  static const MsgID ID =
    SC_StandUpAndExitRoom_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_StandUpAndExitRoom_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_StandUpAndExitRoom_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_StandUpAndExitRoom_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_StandUpAndExitRoom_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_StandUpAndExitRoom_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_StandUpAndExitRoom_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_StandUpAndExitRoom_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // optional int32 table_id = 2;
  bool has_table_id() const;
  void clear_table_id();
  static const int kTableIdFieldNumber = 2;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // optional int32 chair_id = 3;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 3;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional int32 result = 4;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_StandUpAndExitRoom)
 private:
  void set_has_room_id();
  void clear_has_room_id();
  void set_has_table_id();
  void clear_has_table_id();
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 chair_id_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ChangeChair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ChangeChair) */ {
 public:
  CS_ChangeChair();
  virtual ~CS_ChangeChair();

  CS_ChangeChair(const CS_ChangeChair& from);

  inline CS_ChangeChair& operator=(const CS_ChangeChair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ChangeChair& default_instance();

  static inline const CS_ChangeChair* internal_default_instance() {
    return reinterpret_cast<const CS_ChangeChair*>(
               &_CS_ChangeChair_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    107;

  void Swap(CS_ChangeChair* other);

  // implements Message ----------------------------------------------

  inline CS_ChangeChair* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ChangeChair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ChangeChair& from);
  void MergeFrom(const CS_ChangeChair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ChangeChair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ChangeChair_MsgID MsgID;
  static const MsgID ID =
    CS_ChangeChair_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ChangeChair_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ChangeChair_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ChangeChair_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ChangeChair_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ChangeChair_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ChangeChair_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ChangeChair_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_ChangeChair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ChangeChair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ChangeChair) */ {
 public:
  SC_ChangeChair();
  virtual ~SC_ChangeChair();

  SC_ChangeChair(const SC_ChangeChair& from);

  inline SC_ChangeChair& operator=(const SC_ChangeChair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ChangeChair& default_instance();

  static inline const SC_ChangeChair* internal_default_instance() {
    return reinterpret_cast<const SC_ChangeChair*>(
               &_SC_ChangeChair_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    108;

  void Swap(SC_ChangeChair* other);

  // implements Message ----------------------------------------------

  inline SC_ChangeChair* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ChangeChair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ChangeChair& from);
  void MergeFrom(const SC_ChangeChair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ChangeChair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ChangeChair_MsgID MsgID;
  static const MsgID ID =
    SC_ChangeChair_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ChangeChair_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ChangeChair_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ChangeChair_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ChangeChair_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ChangeChair_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ChangeChair_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ChangeChair_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PlayerVisualInfo pb_visual_info = 4;
  int pb_visual_info_size() const;
  void clear_pb_visual_info();
  static const int kPbVisualInfoFieldNumber = 4;
  const ::PlayerVisualInfo& pb_visual_info(int index) const;
  ::PlayerVisualInfo* mutable_pb_visual_info(int index);
  ::PlayerVisualInfo* add_pb_visual_info();
  ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >*
      mutable_pb_visual_info();
  const ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >&
      pb_visual_info() const;

  // optional int32 table_id = 1;
  bool has_table_id() const;
  void clear_table_id();
  static const int kTableIdFieldNumber = 1;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // optional int32 chair_id = 2;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 2;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional int32 result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_ChangeChair)
 private:
  void set_has_table_id();
  void clear_has_table_id();
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo > pb_visual_info_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 chair_id_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ChangeTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ChangeTable) */ {
 public:
  CS_ChangeTable();
  virtual ~CS_ChangeTable();

  CS_ChangeTable(const CS_ChangeTable& from);

  inline CS_ChangeTable& operator=(const CS_ChangeTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ChangeTable& default_instance();

  static inline const CS_ChangeTable* internal_default_instance() {
    return reinterpret_cast<const CS_ChangeTable*>(
               &_CS_ChangeTable_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(CS_ChangeTable* other);

  // implements Message ----------------------------------------------

  inline CS_ChangeTable* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ChangeTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ChangeTable& from);
  void MergeFrom(const CS_ChangeTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ChangeTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ChangeTable_MsgID MsgID;
  static const MsgID ID =
    CS_ChangeTable_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ChangeTable_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ChangeTable_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ChangeTable_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ChangeTable_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ChangeTable_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ChangeTable_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ChangeTable_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_ChangeTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_Ready : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_Ready) */ {
 public:
  CS_Ready();
  virtual ~CS_Ready();

  CS_Ready(const CS_Ready& from);

  inline CS_Ready& operator=(const CS_Ready& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_Ready& default_instance();

  static inline const CS_Ready* internal_default_instance() {
    return reinterpret_cast<const CS_Ready*>(
               &_CS_Ready_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    110;

  void Swap(CS_Ready* other);

  // implements Message ----------------------------------------------

  inline CS_Ready* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_Ready* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_Ready& from);
  void MergeFrom(const CS_Ready& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_Ready* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_Ready_MsgID MsgID;
  static const MsgID ID =
    CS_Ready_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_Ready_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_Ready_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_Ready_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_Ready_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_Ready_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_Ready_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_Ready_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_Ready)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_Ready : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_Ready) */ {
 public:
  SC_Ready();
  virtual ~SC_Ready();

  SC_Ready(const SC_Ready& from);

  inline SC_Ready& operator=(const SC_Ready& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_Ready& default_instance();

  static inline const SC_Ready* internal_default_instance() {
    return reinterpret_cast<const SC_Ready*>(
               &_SC_Ready_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(SC_Ready* other);

  // implements Message ----------------------------------------------

  inline SC_Ready* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_Ready* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_Ready& from);
  void MergeFrom(const SC_Ready& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_Ready* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_Ready_MsgID MsgID;
  static const MsgID ID =
    SC_Ready_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_Ready_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_Ready_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_Ready_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_Ready_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_Ready_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_Ready_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_Ready_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 ready_chair_id = 1;
  bool has_ready_chair_id() const;
  void clear_ready_chair_id();
  static const int kReadyChairIdFieldNumber = 1;
  ::google::protobuf::int32 ready_chair_id() const;
  void set_ready_chair_id(::google::protobuf::int32 value);

  // optional bool is_ready = 2;
  bool has_is_ready() const;
  void clear_is_ready();
  static const int kIsReadyFieldNumber = 2;
  bool is_ready() const;
  void set_is_ready(bool value);

  // @@protoc_insertion_point(class_scope:SC_Ready)
 private:
  void set_has_ready_chair_id();
  void clear_has_ready_chair_id();
  void set_has_is_ready();
  void clear_has_is_ready();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 ready_chair_id_;
  bool is_ready_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_Exit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_Exit) */ {
 public:
  CS_Exit();
  virtual ~CS_Exit();

  CS_Exit(const CS_Exit& from);

  inline CS_Exit& operator=(const CS_Exit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_Exit& default_instance();

  static inline const CS_Exit* internal_default_instance() {
    return reinterpret_cast<const CS_Exit*>(
               &_CS_Exit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(CS_Exit* other);

  // implements Message ----------------------------------------------

  inline CS_Exit* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_Exit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_Exit& from);
  void MergeFrom(const CS_Exit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_Exit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_Exit_MsgID MsgID;
  static const MsgID ID =
    CS_Exit_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_Exit_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_Exit_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_Exit_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_Exit_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_Exit_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_Exit_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_Exit_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_Exit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ReadyFailed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ReadyFailed) */ {
 public:
  SC_ReadyFailed();
  virtual ~SC_ReadyFailed();

  SC_ReadyFailed(const SC_ReadyFailed& from);

  inline SC_ReadyFailed& operator=(const SC_ReadyFailed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ReadyFailed& default_instance();

  static inline const SC_ReadyFailed* internal_default_instance() {
    return reinterpret_cast<const SC_ReadyFailed*>(
               &_SC_ReadyFailed_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(SC_ReadyFailed* other);

  // implements Message ----------------------------------------------

  inline SC_ReadyFailed* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ReadyFailed* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ReadyFailed& from);
  void MergeFrom(const SC_ReadyFailed& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ReadyFailed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ReadyFailed_MsgID MsgID;
  static const MsgID ID =
    SC_ReadyFailed_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ReadyFailed_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ReadyFailed_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ReadyFailed_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ReadyFailed_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ReadyFailed_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ReadyFailed_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ReadyFailed_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_ReadyFailed)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_Gamefinish : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_Gamefinish) */ {
 public:
  SC_Gamefinish();
  virtual ~SC_Gamefinish();

  SC_Gamefinish(const SC_Gamefinish& from);

  inline SC_Gamefinish& operator=(const SC_Gamefinish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_Gamefinish& default_instance();

  static inline const SC_Gamefinish* internal_default_instance() {
    return reinterpret_cast<const SC_Gamefinish*>(
               &_SC_Gamefinish_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    114;

  void Swap(SC_Gamefinish* other);

  // implements Message ----------------------------------------------

  inline SC_Gamefinish* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_Gamefinish* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_Gamefinish& from);
  void MergeFrom(const SC_Gamefinish& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_Gamefinish* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_Gamefinish_MsgID MsgID;
  static const MsgID ID =
    SC_Gamefinish_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_Gamefinish_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_Gamefinish_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_Gamefinish_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_Gamefinish_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_Gamefinish_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_Gamefinish_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_Gamefinish_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 money = 1;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 1;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SC_Gamefinish)
 private:
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_PlayerReconnection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_PlayerReconnection) */ {
 public:
  SC_PlayerReconnection();
  virtual ~SC_PlayerReconnection();

  SC_PlayerReconnection(const SC_PlayerReconnection& from);

  inline SC_PlayerReconnection& operator=(const SC_PlayerReconnection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_PlayerReconnection& default_instance();

  static inline const SC_PlayerReconnection* internal_default_instance() {
    return reinterpret_cast<const SC_PlayerReconnection*>(
               &_SC_PlayerReconnection_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    115;

  void Swap(SC_PlayerReconnection* other);

  // implements Message ----------------------------------------------

  inline SC_PlayerReconnection* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_PlayerReconnection* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_PlayerReconnection& from);
  void MergeFrom(const SC_PlayerReconnection& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_PlayerReconnection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_PlayerReconnection_MsgID MsgID;
  static const MsgID ID =
    SC_PlayerReconnection_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_PlayerReconnection_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_PlayerReconnection_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_PlayerReconnection_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_PlayerReconnection_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_PlayerReconnection_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_PlayerReconnection_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_PlayerReconnection_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PlayerVisualInfo pb_visual_info = 5;
  int pb_visual_info_size() const;
  void clear_pb_visual_info();
  static const int kPbVisualInfoFieldNumber = 5;
  const ::PlayerVisualInfo& pb_visual_info(int index) const;
  ::PlayerVisualInfo* mutable_pb_visual_info(int index);
  ::PlayerVisualInfo* add_pb_visual_info();
  ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >*
      mutable_pb_visual_info();
  const ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >&
      pb_visual_info() const;

  // optional string ip_area = 9;
  bool has_ip_area() const;
  void clear_ip_area();
  static const int kIpAreaFieldNumber = 9;
  const ::std::string& ip_area() const;
  void set_ip_area(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_area(::std::string&& value);
  #endif
  void set_ip_area(const char* value);
  void set_ip_area(const char* value, size_t size);
  ::std::string* mutable_ip_area();
  ::std::string* release_ip_area();
  void set_allocated_ip_area(::std::string* ip_area);

  // optional int32 room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // optional int32 table_id = 2;
  bool has_table_id() const;
  void clear_table_id();
  static const int kTableIdFieldNumber = 2;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // optional int32 chair_id = 3;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 3;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional int32 result = 4;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 game_id = 6;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 6;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // optional int32 first_game_type = 7;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 7;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional int32 second_game_type = 8;
  bool has_second_game_type() const;
  void clear_second_game_type();
  static const int kSecondGameTypeFieldNumber = 8;
  ::google::protobuf::int32 second_game_type() const;
  void set_second_game_type(::google::protobuf::int32 value);

  // optional bool is_ready = 10;
  bool has_is_ready() const;
  void clear_is_ready();
  static const int kIsReadyFieldNumber = 10;
  bool is_ready() const;
  void set_is_ready(bool value);

  // optional bool private_room = 11;
  bool has_private_room() const;
  void clear_private_room();
  static const int kPrivateRoomFieldNumber = 11;
  bool private_room() const;
  void set_private_room(bool value);

  // optional int32 private_room_score_type = 12;
  bool has_private_room_score_type() const;
  void clear_private_room_score_type();
  static const int kPrivateRoomScoreTypeFieldNumber = 12;
  ::google::protobuf::int32 private_room_score_type() const;
  void set_private_room_score_type(::google::protobuf::int32 value);

  // optional int32 private_room_cell_money = 13;
  bool has_private_room_cell_money() const;
  void clear_private_room_cell_money();
  static const int kPrivateRoomCellMoneyFieldNumber = 13;
  ::google::protobuf::int32 private_room_cell_money() const;
  void set_private_room_cell_money(::google::protobuf::int32 value);

  // optional int32 private_room_id = 14;
  bool has_private_room_id() const;
  void clear_private_room_id();
  static const int kPrivateRoomIdFieldNumber = 14;
  ::google::protobuf::int32 private_room_id() const;
  void set_private_room_id(::google::protobuf::int32 value);

  // optional int32 private_room_has_start = 15;
  bool has_private_room_has_start() const;
  void clear_private_room_has_start();
  static const int kPrivateRoomHasStartFieldNumber = 15;
  ::google::protobuf::int32 private_room_has_start() const;
  void set_private_room_has_start(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_PlayerReconnection)
 private:
  void set_has_room_id();
  void clear_has_room_id();
  void set_has_table_id();
  void clear_has_table_id();
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_result();
  void clear_has_result();
  void set_has_game_id();
  void clear_has_game_id();
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_second_game_type();
  void clear_has_second_game_type();
  void set_has_ip_area();
  void clear_has_ip_area();
  void set_has_is_ready();
  void clear_has_is_ready();
  void set_has_private_room();
  void clear_has_private_room();
  void set_has_private_room_score_type();
  void clear_has_private_room_score_type();
  void set_has_private_room_cell_money();
  void clear_has_private_room_cell_money();
  void set_has_private_room_id();
  void clear_has_private_room_id();
  void set_has_private_room_has_start();
  void clear_has_private_room_has_start();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo > pb_visual_info_;
  ::google::protobuf::internal::ArenaStringPtr ip_area_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 chair_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 game_id_;
  ::google::protobuf::int32 first_game_type_;
  ::google::protobuf::int32 second_game_type_;
  bool is_ready_;
  bool private_room_;
  ::google::protobuf::int32 private_room_score_type_;
  ::google::protobuf::int32 private_room_cell_money_;
  ::google::protobuf::int32 private_room_id_;
  ::google::protobuf::int32 private_room_has_start_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ChangeTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ChangeTable) */ {
 public:
  SC_ChangeTable();
  virtual ~SC_ChangeTable();

  SC_ChangeTable(const SC_ChangeTable& from);

  inline SC_ChangeTable& operator=(const SC_ChangeTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ChangeTable& default_instance();

  static inline const SC_ChangeTable* internal_default_instance() {
    return reinterpret_cast<const SC_ChangeTable*>(
               &_SC_ChangeTable_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    116;

  void Swap(SC_ChangeTable* other);

  // implements Message ----------------------------------------------

  inline SC_ChangeTable* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ChangeTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ChangeTable& from);
  void MergeFrom(const SC_ChangeTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ChangeTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ChangeTable_MsgID MsgID;
  static const MsgID ID =
    SC_ChangeTable_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ChangeTable_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ChangeTable_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ChangeTable_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ChangeTable_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ChangeTable_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ChangeTable_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ChangeTable_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PlayerVisualInfo pb_visual_info = 5;
  int pb_visual_info_size() const;
  void clear_pb_visual_info();
  static const int kPbVisualInfoFieldNumber = 5;
  const ::PlayerVisualInfo& pb_visual_info(int index) const;
  ::PlayerVisualInfo* mutable_pb_visual_info(int index);
  ::PlayerVisualInfo* add_pb_visual_info();
  ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >*
      mutable_pb_visual_info();
  const ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >&
      pb_visual_info() const;

  // optional string ip_area = 9;
  bool has_ip_area() const;
  void clear_ip_area();
  static const int kIpAreaFieldNumber = 9;
  const ::std::string& ip_area() const;
  void set_ip_area(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_area(::std::string&& value);
  #endif
  void set_ip_area(const char* value);
  void set_ip_area(const char* value, size_t size);
  ::std::string* mutable_ip_area();
  ::std::string* release_ip_area();
  void set_allocated_ip_area(::std::string* ip_area);

  // optional int32 room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // optional int32 table_id = 2;
  bool has_table_id() const;
  void clear_table_id();
  static const int kTableIdFieldNumber = 2;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // optional int32 chair_id = 3;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 3;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional int32 result = 4;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 game_id = 6;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 6;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // optional int32 first_game_type = 7;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 7;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional int32 second_game_type = 8;
  bool has_second_game_type() const;
  void clear_second_game_type();
  static const int kSecondGameTypeFieldNumber = 8;
  ::google::protobuf::int32 second_game_type() const;
  void set_second_game_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_ChangeTable)
 private:
  void set_has_room_id();
  void clear_has_room_id();
  void set_has_table_id();
  void clear_has_table_id();
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_result();
  void clear_has_result();
  void set_has_game_id();
  void clear_has_game_id();
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_second_game_type();
  void clear_has_second_game_type();
  void set_has_ip_area();
  void clear_has_ip_area();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo > pb_visual_info_;
  ::google::protobuf::internal::ArenaStringPtr ip_area_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 chair_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 game_id_;
  ::google::protobuf::int32 first_game_type_;
  ::google::protobuf::int32 second_game_type_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HEARTBEAT : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HEARTBEAT) */ {
 public:
  SC_HEARTBEAT();
  virtual ~SC_HEARTBEAT();

  SC_HEARTBEAT(const SC_HEARTBEAT& from);

  inline SC_HEARTBEAT& operator=(const SC_HEARTBEAT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HEARTBEAT& default_instance();

  static inline const SC_HEARTBEAT* internal_default_instance() {
    return reinterpret_cast<const SC_HEARTBEAT*>(
               &_SC_HEARTBEAT_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    117;

  void Swap(SC_HEARTBEAT* other);

  // implements Message ----------------------------------------------

  inline SC_HEARTBEAT* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HEARTBEAT* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HEARTBEAT& from);
  void MergeFrom(const SC_HEARTBEAT& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HEARTBEAT* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_HEARTBEAT_MsgID MsgID;
  static const MsgID ID =
    SC_HEARTBEAT_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_HEARTBEAT_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_HEARTBEAT_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_HEARTBEAT_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_HEARTBEAT_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_HEARTBEAT_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_HEARTBEAT_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_HEARTBEAT_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 severTime = 1;
  bool has_severtime() const;
  void clear_severtime();
  static const int kSeverTimeFieldNumber = 1;
  ::google::protobuf::int32 severtime() const;
  void set_severtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_HEARTBEAT)
 private:
  void set_has_severtime();
  void clear_has_severtime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 severtime_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_HEARTBEAT : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_HEARTBEAT) */ {
 public:
  CS_HEARTBEAT();
  virtual ~CS_HEARTBEAT();

  CS_HEARTBEAT(const CS_HEARTBEAT& from);

  inline CS_HEARTBEAT& operator=(const CS_HEARTBEAT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_HEARTBEAT& default_instance();

  static inline const CS_HEARTBEAT* internal_default_instance() {
    return reinterpret_cast<const CS_HEARTBEAT*>(
               &_CS_HEARTBEAT_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    118;

  void Swap(CS_HEARTBEAT* other);

  // implements Message ----------------------------------------------

  inline CS_HEARTBEAT* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_HEARTBEAT* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_HEARTBEAT& from);
  void MergeFrom(const CS_HEARTBEAT& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_HEARTBEAT* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_HEARTBEAT_MsgID MsgID;
  static const MsgID ID =
    CS_HEARTBEAT_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_HEARTBEAT_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_HEARTBEAT_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_HEARTBEAT_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_HEARTBEAT_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_HEARTBEAT_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_HEARTBEAT_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_HEARTBEAT_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_HEARTBEAT)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ReconnectionPlay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_ReconnectionPlay) */ {
 public:
  CS_ReconnectionPlay();
  virtual ~CS_ReconnectionPlay();

  CS_ReconnectionPlay(const CS_ReconnectionPlay& from);

  inline CS_ReconnectionPlay& operator=(const CS_ReconnectionPlay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ReconnectionPlay& default_instance();

  static inline const CS_ReconnectionPlay* internal_default_instance() {
    return reinterpret_cast<const CS_ReconnectionPlay*>(
               &_CS_ReconnectionPlay_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    119;

  void Swap(CS_ReconnectionPlay* other);

  // implements Message ----------------------------------------------

  inline CS_ReconnectionPlay* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ReconnectionPlay* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ReconnectionPlay& from);
  void MergeFrom(const CS_ReconnectionPlay& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ReconnectionPlay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_ReconnectionPlay_MsgID MsgID;
  static const MsgID ID =
    CS_ReconnectionPlay_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_ReconnectionPlay_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_ReconnectionPlay_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_ReconnectionPlay_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_ReconnectionPlay_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_ReconnectionPlay_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_ReconnectionPlay_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_ReconnectionPlay_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_ReconnectionPlay)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ReconnectionPlay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ReconnectionPlay) */ {
 public:
  SC_ReconnectionPlay();
  virtual ~SC_ReconnectionPlay();

  SC_ReconnectionPlay(const SC_ReconnectionPlay& from);

  inline SC_ReconnectionPlay& operator=(const SC_ReconnectionPlay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ReconnectionPlay& default_instance();

  static inline const SC_ReconnectionPlay* internal_default_instance() {
    return reinterpret_cast<const SC_ReconnectionPlay*>(
               &_SC_ReconnectionPlay_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    120;

  void Swap(SC_ReconnectionPlay* other);

  // implements Message ----------------------------------------------

  inline SC_ReconnectionPlay* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ReconnectionPlay* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ReconnectionPlay& from);
  void MergeFrom(const SC_ReconnectionPlay& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ReconnectionPlay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ReconnectionPlay_MsgID MsgID;
  static const MsgID ID =
    SC_ReconnectionPlay_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ReconnectionPlay_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ReconnectionPlay_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ReconnectionPlay_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ReconnectionPlay_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ReconnectionPlay_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ReconnectionPlay_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ReconnectionPlay_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bool find_table = 1;
  bool has_find_table() const;
  void clear_find_table();
  static const int kFindTableFieldNumber = 1;
  bool find_table() const;
  void set_find_table(bool value);

  // @@protoc_insertion_point(class_scope:SC_ReconnectionPlay)
 private:
  void set_has_find_table();
  void clear_has_find_table();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool find_table_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_SimpleRespons : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_SimpleRespons) */ {
 public:
  SC_SimpleRespons();
  virtual ~SC_SimpleRespons();

  SC_SimpleRespons(const SC_SimpleRespons& from);

  inline SC_SimpleRespons& operator=(const SC_SimpleRespons& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SimpleRespons& default_instance();

  static inline const SC_SimpleRespons* internal_default_instance() {
    return reinterpret_cast<const SC_SimpleRespons*>(
               &_SC_SimpleRespons_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    121;

  void Swap(SC_SimpleRespons* other);

  // implements Message ----------------------------------------------

  inline SC_SimpleRespons* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_SimpleRespons* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_SimpleRespons& from);
  void MergeFrom(const SC_SimpleRespons& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_SimpleRespons* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_SimpleRespons_MsgID MsgID;
  static const MsgID ID =
    SC_SimpleRespons_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_SimpleRespons_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_SimpleRespons_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_SimpleRespons_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_SimpleRespons_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_SimpleRespons_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_SimpleRespons_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_SimpleRespons_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_SimpleRespons)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_QueryPlayerMsgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_QueryPlayerMsgData) */ {
 public:
  CS_QueryPlayerMsgData();
  virtual ~CS_QueryPlayerMsgData();

  CS_QueryPlayerMsgData(const CS_QueryPlayerMsgData& from);

  inline CS_QueryPlayerMsgData& operator=(const CS_QueryPlayerMsgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_QueryPlayerMsgData& default_instance();

  static inline const CS_QueryPlayerMsgData* internal_default_instance() {
    return reinterpret_cast<const CS_QueryPlayerMsgData*>(
               &_CS_QueryPlayerMsgData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    122;

  void Swap(CS_QueryPlayerMsgData* other);

  // implements Message ----------------------------------------------

  inline CS_QueryPlayerMsgData* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_QueryPlayerMsgData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_QueryPlayerMsgData& from);
  void MergeFrom(const CS_QueryPlayerMsgData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_QueryPlayerMsgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_QueryPlayerMsgData_MsgID MsgID;
  static const MsgID ID =
    CS_QueryPlayerMsgData_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_QueryPlayerMsgData_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_QueryPlayerMsgData_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_QueryPlayerMsgData_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_QueryPlayerMsgData_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_QueryPlayerMsgData_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_QueryPlayerMsgData_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_QueryPlayerMsgData_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_QueryPlayerMsgData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_QueryPlayerMsgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_QueryPlayerMsgData) */ {
 public:
  SC_QueryPlayerMsgData();
  virtual ~SC_QueryPlayerMsgData();

  SC_QueryPlayerMsgData(const SC_QueryPlayerMsgData& from);

  inline SC_QueryPlayerMsgData& operator=(const SC_QueryPlayerMsgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_QueryPlayerMsgData& default_instance();

  static inline const SC_QueryPlayerMsgData* internal_default_instance() {
    return reinterpret_cast<const SC_QueryPlayerMsgData*>(
               &_SC_QueryPlayerMsgData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    123;

  void Swap(SC_QueryPlayerMsgData* other);

  // implements Message ----------------------------------------------

  inline SC_QueryPlayerMsgData* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_QueryPlayerMsgData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_QueryPlayerMsgData& from);
  void MergeFrom(const SC_QueryPlayerMsgData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_QueryPlayerMsgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_QueryPlayerMsgData_MsgID MsgID;
  static const MsgID ID =
    SC_QueryPlayerMsgData_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_QueryPlayerMsgData_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_QueryPlayerMsgData_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_QueryPlayerMsgData_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_QueryPlayerMsgData_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_QueryPlayerMsgData_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_QueryPlayerMsgData_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_QueryPlayerMsgData_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .Msg_DataInfo pb_msg_data = 1;
  int pb_msg_data_size() const;
  void clear_pb_msg_data();
  static const int kPbMsgDataFieldNumber = 1;
  const ::Msg_DataInfo& pb_msg_data(int index) const;
  ::Msg_DataInfo* mutable_pb_msg_data(int index);
  ::Msg_DataInfo* add_pb_msg_data();
  ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >*
      mutable_pb_msg_data();
  const ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >&
      pb_msg_data() const;

  // @@protoc_insertion_point(class_scope:SC_QueryPlayerMsgData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo > pb_msg_data_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NewMsgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_NewMsgData) */ {
 public:
  SC_NewMsgData();
  virtual ~SC_NewMsgData();

  SC_NewMsgData(const SC_NewMsgData& from);

  inline SC_NewMsgData& operator=(const SC_NewMsgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NewMsgData& default_instance();

  static inline const SC_NewMsgData* internal_default_instance() {
    return reinterpret_cast<const SC_NewMsgData*>(
               &_SC_NewMsgData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    124;

  void Swap(SC_NewMsgData* other);

  // implements Message ----------------------------------------------

  inline SC_NewMsgData* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NewMsgData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NewMsgData& from);
  void MergeFrom(const SC_NewMsgData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NewMsgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_NewMsgData_MsgID MsgID;
  static const MsgID ID =
    SC_NewMsgData_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_NewMsgData_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_NewMsgData_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_NewMsgData_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_NewMsgData_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_NewMsgData_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_NewMsgData_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_NewMsgData_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .Msg_DataInfo pb_msg_data = 1;
  int pb_msg_data_size() const;
  void clear_pb_msg_data();
  static const int kPbMsgDataFieldNumber = 1;
  const ::Msg_DataInfo& pb_msg_data(int index) const;
  ::Msg_DataInfo* mutable_pb_msg_data(int index);
  ::Msg_DataInfo* add_pb_msg_data();
  ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >*
      mutable_pb_msg_data();
  const ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >&
      pb_msg_data() const;

  // @@protoc_insertion_point(class_scope:SC_NewMsgData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo > pb_msg_data_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_SetMsgReadFlag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_SetMsgReadFlag) */ {
 public:
  CS_SetMsgReadFlag();
  virtual ~CS_SetMsgReadFlag();

  CS_SetMsgReadFlag(const CS_SetMsgReadFlag& from);

  inline CS_SetMsgReadFlag& operator=(const CS_SetMsgReadFlag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_SetMsgReadFlag& default_instance();

  static inline const CS_SetMsgReadFlag* internal_default_instance() {
    return reinterpret_cast<const CS_SetMsgReadFlag*>(
               &_CS_SetMsgReadFlag_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    125;

  void Swap(CS_SetMsgReadFlag* other);

  // implements Message ----------------------------------------------

  inline CS_SetMsgReadFlag* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_SetMsgReadFlag* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_SetMsgReadFlag& from);
  void MergeFrom(const CS_SetMsgReadFlag& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_SetMsgReadFlag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_SetMsgReadFlag_MsgID MsgID;
  static const MsgID ID =
    CS_SetMsgReadFlag_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_SetMsgReadFlag_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_SetMsgReadFlag_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_SetMsgReadFlag_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_SetMsgReadFlag_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_SetMsgReadFlag_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_SetMsgReadFlag_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_SetMsgReadFlag_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 msg_type = 2;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 2;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_SetMsgReadFlag)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_msg_type();
  void clear_has_msg_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 msg_type_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_FeedBackUpDate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_FeedBackUpDate) */ {
 public:
  SC_FeedBackUpDate();
  virtual ~SC_FeedBackUpDate();

  SC_FeedBackUpDate(const SC_FeedBackUpDate& from);

  inline SC_FeedBackUpDate& operator=(const SC_FeedBackUpDate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_FeedBackUpDate& default_instance();

  static inline const SC_FeedBackUpDate* internal_default_instance() {
    return reinterpret_cast<const SC_FeedBackUpDate*>(
               &_SC_FeedBackUpDate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    126;

  void Swap(SC_FeedBackUpDate* other);

  // implements Message ----------------------------------------------

  inline SC_FeedBackUpDate* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_FeedBackUpDate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_FeedBackUpDate& from);
  void MergeFrom(const SC_FeedBackUpDate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_FeedBackUpDate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_FeedBackUpDate_MsgID MsgID;
  static const MsgID ID =
    SC_FeedBackUpDate_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_FeedBackUpDate_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_FeedBackUpDate_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_FeedBackUpDate_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_FeedBackUpDate_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_FeedBackUpDate_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_FeedBackUpDate_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_FeedBackUpDate_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 feedbackid = 1;
  bool has_feedbackid() const;
  void clear_feedbackid();
  static const int kFeedbackidFieldNumber = 1;
  ::google::protobuf::int32 feedbackid() const;
  void set_feedbackid(::google::protobuf::int32 value);

  // optional int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 updateTime = 3;
  bool has_updatetime() const;
  void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 3;
  ::google::protobuf::int32 updatetime() const;
  void set_updatetime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_FeedBackUpDate)
 private:
  void set_has_feedbackid();
  void clear_has_feedbackid();
  void set_has_type();
  void clear_has_type();
  void set_has_updatetime();
  void clear_has_updatetime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 feedbackid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 updatetime_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_DeletMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_DeletMsg) */ {
 public:
  SC_DeletMsg();
  virtual ~SC_DeletMsg();

  SC_DeletMsg(const SC_DeletMsg& from);

  inline SC_DeletMsg& operator=(const SC_DeletMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_DeletMsg& default_instance();

  static inline const SC_DeletMsg* internal_default_instance() {
    return reinterpret_cast<const SC_DeletMsg*>(
               &_SC_DeletMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    127;

  void Swap(SC_DeletMsg* other);

  // implements Message ----------------------------------------------

  inline SC_DeletMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_DeletMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_DeletMsg& from);
  void MergeFrom(const SC_DeletMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_DeletMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_DeletMsg_MsgID MsgID;
  static const MsgID ID =
    SC_DeletMsg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_DeletMsg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_DeletMsg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_DeletMsg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_DeletMsg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_DeletMsg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_DeletMsg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_DeletMsg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 msg_id = 1;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msg_id() const;
  void set_msg_id(::google::protobuf::int32 value);

  // optional int32 msg_type = 2;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 2;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_DeletMsg)
 private:
  void set_has_msg_id();
  void clear_has_msg_id();
  void set_has_msg_type();
  void clear_has_msg_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 msg_id_;
  ::google::protobuf::int32 msg_type_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_CashMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_CashMoney) */ {
 public:
  CS_CashMoney();
  virtual ~CS_CashMoney();

  CS_CashMoney(const CS_CashMoney& from);

  inline CS_CashMoney& operator=(const CS_CashMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_CashMoney& default_instance();

  static inline const CS_CashMoney* internal_default_instance() {
    return reinterpret_cast<const CS_CashMoney*>(
               &_CS_CashMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    128;

  void Swap(CS_CashMoney* other);

  // implements Message ----------------------------------------------

  inline CS_CashMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_CashMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_CashMoney& from);
  void MergeFrom(const CS_CashMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_CashMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_CashMoney_MsgID MsgID;
  static const MsgID ID =
    CS_CashMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_CashMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_CashMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_CashMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_CashMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_CashMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_CashMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_CashMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 money = 1;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 1;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // optional int32 cash_type = 2;
  bool has_cash_type() const;
  void clear_cash_type();
  static const int kCashTypeFieldNumber = 2;
  ::google::protobuf::int32 cash_type() const;
  void set_cash_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_CashMoney)
 private:
  void set_has_money();
  void clear_has_money();
  void set_has_cash_type();
  void clear_has_cash_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 cash_type_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_CashMoneyResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_CashMoneyResult) */ {
 public:
  SC_CashMoneyResult();
  virtual ~SC_CashMoneyResult();

  SC_CashMoneyResult(const SC_CashMoneyResult& from);

  inline SC_CashMoneyResult& operator=(const SC_CashMoneyResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_CashMoneyResult& default_instance();

  static inline const SC_CashMoneyResult* internal_default_instance() {
    return reinterpret_cast<const SC_CashMoneyResult*>(
               &_SC_CashMoneyResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    129;

  void Swap(SC_CashMoneyResult* other);

  // implements Message ----------------------------------------------

  inline SC_CashMoneyResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_CashMoneyResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_CashMoneyResult& from);
  void MergeFrom(const SC_CashMoneyResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_CashMoneyResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_CashMoneyResult_MsgID MsgID;
  static const MsgID ID =
    SC_CashMoneyResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_CashMoneyResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_CashMoneyResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_CashMoneyResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_CashMoneyResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_CashMoneyResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_CashMoneyResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_CashMoneyResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 bank = 2;
  bool has_bank() const;
  void clear_bank();
  static const int kBankFieldNumber = 2;
  ::google::protobuf::int64 bank() const;
  void set_bank(::google::protobuf::int64 value);

  // optional int64 money = 3;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_CashMoneyResult)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_bank();
  void clear_has_bank();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 bank_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_CashMoneyType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_CashMoneyType) */ {
 public:
  CS_CashMoneyType();
  virtual ~CS_CashMoneyType();

  CS_CashMoneyType(const CS_CashMoneyType& from);

  inline CS_CashMoneyType& operator=(const CS_CashMoneyType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_CashMoneyType& default_instance();

  static inline const CS_CashMoneyType* internal_default_instance() {
    return reinterpret_cast<const CS_CashMoneyType*>(
               &_CS_CashMoneyType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    130;

  void Swap(CS_CashMoneyType* other);

  // implements Message ----------------------------------------------

  inline CS_CashMoneyType* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_CashMoneyType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_CashMoneyType& from);
  void MergeFrom(const CS_CashMoneyType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_CashMoneyType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_CashMoneyType_MsgID MsgID;
  static const MsgID ID =
    CS_CashMoneyType_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_CashMoneyType_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_CashMoneyType_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_CashMoneyType_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_CashMoneyType_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_CashMoneyType_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_CashMoneyType_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_CashMoneyType_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_CashMoneyType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_CashMoneyType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_CashMoneyType) */ {
 public:
  SC_CashMoneyType();
  virtual ~SC_CashMoneyType();

  SC_CashMoneyType(const SC_CashMoneyType& from);

  inline SC_CashMoneyType& operator=(const SC_CashMoneyType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_CashMoneyType& default_instance();

  static inline const SC_CashMoneyType* internal_default_instance() {
    return reinterpret_cast<const SC_CashMoneyType*>(
               &_SC_CashMoneyType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    131;

  void Swap(SC_CashMoneyType* other);

  // implements Message ----------------------------------------------

  inline SC_CashMoneyType* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_CashMoneyType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_CashMoneyType& from);
  void MergeFrom(const SC_CashMoneyType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_CashMoneyType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_CashMoneyType_MsgID MsgID;
  static const MsgID ID =
    SC_CashMoneyType_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_CashMoneyType_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_CashMoneyType_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_CashMoneyType_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_CashMoneyType_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_CashMoneyType_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_CashMoneyType_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_CashMoneyType_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CashMoneyType pb_cash_info = 1;
  int pb_cash_info_size() const;
  void clear_pb_cash_info();
  static const int kPbCashInfoFieldNumber = 1;
  const ::CashMoneyType& pb_cash_info(int index) const;
  ::CashMoneyType* mutable_pb_cash_info(int index);
  ::CashMoneyType* add_pb_cash_info();
  ::google::protobuf::RepeatedPtrField< ::CashMoneyType >*
      mutable_pb_cash_info();
  const ::google::protobuf::RepeatedPtrField< ::CashMoneyType >&
      pb_cash_info() const;

  // @@protoc_insertion_point(class_scope:SC_CashMoneyType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CashMoneyType > pb_cash_info_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NotifyBank : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_NotifyBank) */ {
 public:
  SC_NotifyBank();
  virtual ~SC_NotifyBank();

  SC_NotifyBank(const SC_NotifyBank& from);

  inline SC_NotifyBank& operator=(const SC_NotifyBank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NotifyBank& default_instance();

  static inline const SC_NotifyBank* internal_default_instance() {
    return reinterpret_cast<const SC_NotifyBank*>(
               &_SC_NotifyBank_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    132;

  void Swap(SC_NotifyBank* other);

  // implements Message ----------------------------------------------

  inline SC_NotifyBank* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NotifyBank* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NotifyBank& from);
  void MergeFrom(const SC_NotifyBank& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NotifyBank* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_NotifyBank_MsgID MsgID;
  static const MsgID ID =
    SC_NotifyBank_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_NotifyBank_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_NotifyBank_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_NotifyBank_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_NotifyBank_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_NotifyBank_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_NotifyBank_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_NotifyBank_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 bank = 2;
  bool has_bank() const;
  void clear_bank();
  static const int kBankFieldNumber = 2;
  ::google::protobuf::int64 bank() const;
  void set_bank(::google::protobuf::int64 value);

  // optional int64 change_bank = 3;
  bool has_change_bank() const;
  void clear_change_bank();
  static const int kChangeBankFieldNumber = 3;
  ::google::protobuf::int64 change_bank() const;
  void set_change_bank(::google::protobuf::int64 value);

  // optional int32 opt_type = 1;
  bool has_opt_type() const;
  void clear_opt_type();
  static const int kOptTypeFieldNumber = 1;
  ::google::protobuf::int32 opt_type() const;
  void set_opt_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_NotifyBank)
 private:
  void set_has_opt_type();
  void clear_has_opt_type();
  void set_has_bank();
  void clear_has_bank();
  void set_has_change_bank();
  void clear_has_change_bank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 bank_;
  ::google::protobuf::int64 change_bank_;
  ::google::protobuf::int32 opt_type_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_BandAlipay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_BandAlipay) */ {
 public:
  CS_BandAlipay();
  virtual ~CS_BandAlipay();

  CS_BandAlipay(const CS_BandAlipay& from);

  inline CS_BandAlipay& operator=(const CS_BandAlipay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_BandAlipay& default_instance();

  static inline const CS_BandAlipay* internal_default_instance() {
    return reinterpret_cast<const CS_BandAlipay*>(
               &_CS_BandAlipay_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    133;

  void Swap(CS_BandAlipay* other);

  // implements Message ----------------------------------------------

  inline CS_BandAlipay* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_BandAlipay* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_BandAlipay& from);
  void MergeFrom(const CS_BandAlipay& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_BandAlipay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_BandAlipay_MsgID MsgID;
  static const MsgID ID =
    CS_BandAlipay_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_BandAlipay_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_BandAlipay_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_BandAlipay_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_BandAlipay_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_BandAlipay_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_BandAlipay_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_BandAlipay_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string alipay_account = 1;
  bool has_alipay_account() const;
  void clear_alipay_account();
  static const int kAlipayAccountFieldNumber = 1;
  const ::std::string& alipay_account() const;
  void set_alipay_account(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account(::std::string&& value);
  #endif
  void set_alipay_account(const char* value);
  void set_alipay_account(const char* value, size_t size);
  ::std::string* mutable_alipay_account();
  ::std::string* release_alipay_account();
  void set_allocated_alipay_account(::std::string* alipay_account);

  // optional string alipay_name = 2;
  bool has_alipay_name() const;
  void clear_alipay_name();
  static const int kAlipayNameFieldNumber = 2;
  const ::std::string& alipay_name() const;
  void set_alipay_name(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name(::std::string&& value);
  #endif
  void set_alipay_name(const char* value);
  void set_alipay_name(const char* value, size_t size);
  ::std::string* mutable_alipay_name();
  ::std::string* release_alipay_name();
  void set_allocated_alipay_name(::std::string* alipay_name);

  // @@protoc_insertion_point(class_scope:CS_BandAlipay)
 private:
  void set_has_alipay_account();
  void clear_has_alipay_account();
  void set_has_alipay_name();
  void clear_has_alipay_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_BandAlipay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_BandAlipay) */ {
 public:
  SC_BandAlipay();
  virtual ~SC_BandAlipay();

  SC_BandAlipay(const SC_BandAlipay& from);

  inline SC_BandAlipay& operator=(const SC_BandAlipay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_BandAlipay& default_instance();

  static inline const SC_BandAlipay* internal_default_instance() {
    return reinterpret_cast<const SC_BandAlipay*>(
               &_SC_BandAlipay_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    134;

  void Swap(SC_BandAlipay* other);

  // implements Message ----------------------------------------------

  inline SC_BandAlipay* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_BandAlipay* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_BandAlipay& from);
  void MergeFrom(const SC_BandAlipay& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_BandAlipay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_BandAlipay_MsgID MsgID;
  static const MsgID ID =
    SC_BandAlipay_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_BandAlipay_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_BandAlipay_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_BandAlipay_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_BandAlipay_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_BandAlipay_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_BandAlipay_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_BandAlipay_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string alipay_account = 2;
  bool has_alipay_account() const;
  void clear_alipay_account();
  static const int kAlipayAccountFieldNumber = 2;
  const ::std::string& alipay_account() const;
  void set_alipay_account(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account(::std::string&& value);
  #endif
  void set_alipay_account(const char* value);
  void set_alipay_account(const char* value, size_t size);
  ::std::string* mutable_alipay_account();
  ::std::string* release_alipay_account();
  void set_allocated_alipay_account(::std::string* alipay_account);

  // optional string alipay_name = 3;
  bool has_alipay_name() const;
  void clear_alipay_name();
  static const int kAlipayNameFieldNumber = 3;
  const ::std::string& alipay_name() const;
  void set_alipay_name(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name(::std::string&& value);
  #endif
  void set_alipay_name(const char* value);
  void set_alipay_name(const char* value, size_t size);
  ::std::string* mutable_alipay_name();
  ::std::string* release_alipay_name();
  void set_allocated_alipay_name(::std::string* alipay_name);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_BandAlipay)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_alipay_account();
  void clear_has_alipay_account();
  void set_has_alipay_name();
  void clear_has_alipay_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_Trusteeship : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_Trusteeship) */ {
 public:
  CS_Trusteeship();
  virtual ~CS_Trusteeship();

  CS_Trusteeship(const CS_Trusteeship& from);

  inline CS_Trusteeship& operator=(const CS_Trusteeship& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_Trusteeship& default_instance();

  static inline const CS_Trusteeship* internal_default_instance() {
    return reinterpret_cast<const CS_Trusteeship*>(
               &_CS_Trusteeship_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    135;

  void Swap(CS_Trusteeship* other);

  // implements Message ----------------------------------------------

  inline CS_Trusteeship* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_Trusteeship* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_Trusteeship& from);
  void MergeFrom(const CS_Trusteeship& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_Trusteeship* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_Trusteeship_MsgID MsgID;
  static const MsgID ID =
    CS_Trusteeship_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_Trusteeship_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_Trusteeship_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_Trusteeship_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_Trusteeship_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_Trusteeship_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_Trusteeship_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_Trusteeship_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 1;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_Trusteeship)
 private:
  void set_has_flag();
  void clear_has_flag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_ShowTax : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ShowTax) */ {
 public:
  SC_ShowTax();
  virtual ~SC_ShowTax();

  SC_ShowTax(const SC_ShowTax& from);

  inline SC_ShowTax& operator=(const SC_ShowTax& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ShowTax& default_instance();

  static inline const SC_ShowTax* internal_default_instance() {
    return reinterpret_cast<const SC_ShowTax*>(
               &_SC_ShowTax_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    136;

  void Swap(SC_ShowTax* other);

  // implements Message ----------------------------------------------

  inline SC_ShowTax* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_ShowTax* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_ShowTax& from);
  void MergeFrom(const SC_ShowTax& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_ShowTax* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_ShowTax_MsgID MsgID;
  static const MsgID ID =
    SC_ShowTax_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_ShowTax_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_ShowTax_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_ShowTax_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_ShowTax_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_ShowTax_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_ShowTax_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_ShowTax_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 1;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_ShowTax)
 private:
  void set_has_flag();
  void clear_has_flag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_Delonline_player : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_Delonline_player) */ {
 public:
  SD_Delonline_player();
  virtual ~SD_Delonline_player();

  SD_Delonline_player(const SD_Delonline_player& from);

  inline SD_Delonline_player& operator=(const SD_Delonline_player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_Delonline_player& default_instance();

  static inline const SD_Delonline_player* internal_default_instance() {
    return reinterpret_cast<const SD_Delonline_player*>(
               &_SD_Delonline_player_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    137;

  void Swap(SD_Delonline_player* other);

  // implements Message ----------------------------------------------

  inline SD_Delonline_player* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_Delonline_player* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_Delonline_player& from);
  void MergeFrom(const SD_Delonline_player& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_Delonline_player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_Delonline_player_MsgID MsgID;
  static const MsgID ID =
    SD_Delonline_player_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_Delonline_player_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_Delonline_player_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_Delonline_player_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_Delonline_player_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_Delonline_player_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_Delonline_player_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_Delonline_player_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 game_id = 2;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_Delonline_player)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_game_id();
  void clear_has_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 game_id_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_AlipayEdit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_AlipayEdit) */ {
 public:
  SC_AlipayEdit();
  virtual ~SC_AlipayEdit();

  SC_AlipayEdit(const SC_AlipayEdit& from);

  inline SC_AlipayEdit& operator=(const SC_AlipayEdit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_AlipayEdit& default_instance();

  static inline const SC_AlipayEdit* internal_default_instance() {
    return reinterpret_cast<const SC_AlipayEdit*>(
               &_SC_AlipayEdit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    138;

  void Swap(SC_AlipayEdit* other);

  // implements Message ----------------------------------------------

  inline SC_AlipayEdit* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_AlipayEdit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_AlipayEdit& from);
  void MergeFrom(const SC_AlipayEdit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_AlipayEdit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_AlipayEdit_MsgID MsgID;
  static const MsgID ID =
    SC_AlipayEdit_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_AlipayEdit_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_AlipayEdit_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_AlipayEdit_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_AlipayEdit_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_AlipayEdit_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_AlipayEdit_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_AlipayEdit_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string alipay_name = 2;
  bool has_alipay_name() const;
  void clear_alipay_name();
  static const int kAlipayNameFieldNumber = 2;
  const ::std::string& alipay_name() const;
  void set_alipay_name(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name(::std::string&& value);
  #endif
  void set_alipay_name(const char* value);
  void set_alipay_name(const char* value, size_t size);
  ::std::string* mutable_alipay_name();
  ::std::string* release_alipay_name();
  void set_allocated_alipay_name(::std::string* alipay_name);

  // optional string alipay_name_y = 3;
  bool has_alipay_name_y() const;
  void clear_alipay_name_y();
  static const int kAlipayNameYFieldNumber = 3;
  const ::std::string& alipay_name_y() const;
  void set_alipay_name_y(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name_y(::std::string&& value);
  #endif
  void set_alipay_name_y(const char* value);
  void set_alipay_name_y(const char* value, size_t size);
  ::std::string* mutable_alipay_name_y();
  ::std::string* release_alipay_name_y();
  void set_allocated_alipay_name_y(::std::string* alipay_name_y);

  // optional string alipay_account = 4;
  bool has_alipay_account() const;
  void clear_alipay_account();
  static const int kAlipayAccountFieldNumber = 4;
  const ::std::string& alipay_account() const;
  void set_alipay_account(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account(::std::string&& value);
  #endif
  void set_alipay_account(const char* value);
  void set_alipay_account(const char* value, size_t size);
  ::std::string* mutable_alipay_account();
  ::std::string* release_alipay_account();
  void set_allocated_alipay_account(::std::string* alipay_account);

  // optional string alipay_account_y = 5;
  bool has_alipay_account_y() const;
  void clear_alipay_account_y();
  static const int kAlipayAccountYFieldNumber = 5;
  const ::std::string& alipay_account_y() const;
  void set_alipay_account_y(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account_y(::std::string&& value);
  #endif
  void set_alipay_account_y(const char* value);
  void set_alipay_account_y(const char* value, size_t size);
  ::std::string* mutable_alipay_account_y();
  ::std::string* release_alipay_account_y();
  void set_allocated_alipay_account_y(::std::string* alipay_account_y);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_AlipayEdit)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_alipay_name();
  void clear_has_alipay_name();
  void set_has_alipay_name_y();
  void clear_has_alipay_name_y();
  void set_has_alipay_account();
  void clear_has_alipay_account();
  void set_has_alipay_account_y();
  void clear_has_alipay_account_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_y_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_y_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_BrocastClientUpdateInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_BrocastClientUpdateInfo) */ {
 public:
  SC_BrocastClientUpdateInfo();
  virtual ~SC_BrocastClientUpdateInfo();

  SC_BrocastClientUpdateInfo(const SC_BrocastClientUpdateInfo& from);

  inline SC_BrocastClientUpdateInfo& operator=(const SC_BrocastClientUpdateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_BrocastClientUpdateInfo& default_instance();

  static inline const SC_BrocastClientUpdateInfo* internal_default_instance() {
    return reinterpret_cast<const SC_BrocastClientUpdateInfo*>(
               &_SC_BrocastClientUpdateInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    139;

  void Swap(SC_BrocastClientUpdateInfo* other);

  // implements Message ----------------------------------------------

  inline SC_BrocastClientUpdateInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_BrocastClientUpdateInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_BrocastClientUpdateInfo& from);
  void MergeFrom(const SC_BrocastClientUpdateInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_BrocastClientUpdateInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_BrocastClientUpdateInfo_MsgID MsgID;
  static const MsgID ID =
    SC_BrocastClientUpdateInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_BrocastClientUpdateInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_BrocastClientUpdateInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_BrocastClientUpdateInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_BrocastClientUpdateInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_BrocastClientUpdateInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_BrocastClientUpdateInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_BrocastClientUpdateInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string update_info = 1;
  bool has_update_info() const;
  void clear_update_info();
  static const int kUpdateInfoFieldNumber = 1;
  const ::std::string& update_info() const;
  void set_update_info(const ::std::string& value);
  #if LANG_CXX11
  void set_update_info(::std::string&& value);
  #endif
  void set_update_info(const char* value);
  void set_update_info(const char* value, size_t size);
  ::std::string* mutable_update_info();
  ::std::string* release_update_info();
  void set_allocated_update_info(::std::string* update_info);

  // @@protoc_insertion_point(class_scope:SC_BrocastClientUpdateInfo)
 private:
  void set_has_update_info();
  void clear_has_update_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr update_info_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_FreezeAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_FreezeAccount) */ {
 public:
  SC_FreezeAccount();
  virtual ~SC_FreezeAccount();

  SC_FreezeAccount(const SC_FreezeAccount& from);

  inline SC_FreezeAccount& operator=(const SC_FreezeAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_FreezeAccount& default_instance();

  static inline const SC_FreezeAccount* internal_default_instance() {
    return reinterpret_cast<const SC_FreezeAccount*>(
               &_SC_FreezeAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    140;

  void Swap(SC_FreezeAccount* other);

  // implements Message ----------------------------------------------

  inline SC_FreezeAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_FreezeAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_FreezeAccount& from);
  void MergeFrom(const SC_FreezeAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_FreezeAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_FreezeAccount_MsgID MsgID;
  static const MsgID ID =
    SC_FreezeAccount_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_FreezeAccount_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_FreezeAccount_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_FreezeAccount_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_FreezeAccount_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_FreezeAccount_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_FreezeAccount_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_FreezeAccount_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_FreezeAccount)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 status_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_GameMaintain : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_GameMaintain) */ {
 public:
  SC_GameMaintain();
  virtual ~SC_GameMaintain();

  SC_GameMaintain(const SC_GameMaintain& from);

  inline SC_GameMaintain& operator=(const SC_GameMaintain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_GameMaintain& default_instance();

  static inline const SC_GameMaintain* internal_default_instance() {
    return reinterpret_cast<const SC_GameMaintain*>(
               &_SC_GameMaintain_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    141;

  void Swap(SC_GameMaintain* other);

  // implements Message ----------------------------------------------

  inline SC_GameMaintain* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_GameMaintain* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_GameMaintain& from);
  void MergeFrom(const SC_GameMaintain& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_GameMaintain* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_GameMaintain_MsgID MsgID;
  static const MsgID ID =
    SC_GameMaintain_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_GameMaintain_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_GameMaintain_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_GameMaintain_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_GameMaintain_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_GameMaintain_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_GameMaintain_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_GameMaintain_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 first_game_type = 2;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 2;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional int32 second_game_type = 3;
  bool has_second_game_type() const;
  void clear_second_game_type();
  static const int kSecondGameTypeFieldNumber = 3;
  ::google::protobuf::int32 second_game_type() const;
  void set_second_game_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_GameMaintain)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_second_game_type();
  void clear_has_second_game_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 first_game_type_;
  ::google::protobuf::int32 second_game_type_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_CashMaintain : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_CashMaintain) */ {
 public:
  SC_CashMaintain();
  virtual ~SC_CashMaintain();

  SC_CashMaintain(const SC_CashMaintain& from);

  inline SC_CashMaintain& operator=(const SC_CashMaintain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_CashMaintain& default_instance();

  static inline const SC_CashMaintain* internal_default_instance() {
    return reinterpret_cast<const SC_CashMaintain*>(
               &_SC_CashMaintain_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    142;

  void Swap(SC_CashMaintain* other);

  // implements Message ----------------------------------------------

  inline SC_CashMaintain* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_CashMaintain* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_CashMaintain& from);
  void MergeFrom(const SC_CashMaintain& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_CashMaintain* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_CashMaintain_MsgID MsgID;
  static const MsgID ID =
    SC_CashMaintain_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_CashMaintain_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_CashMaintain_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_CashMaintain_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_CashMaintain_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_CashMaintain_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_CashMaintain_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_CashMaintain_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_CashMaintain)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_GetHelpMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_GetHelpMoney) */ {
 public:
  CS_GetHelpMoney();
  virtual ~CS_GetHelpMoney();

  CS_GetHelpMoney(const CS_GetHelpMoney& from);

  inline CS_GetHelpMoney& operator=(const CS_GetHelpMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_GetHelpMoney& default_instance();

  static inline const CS_GetHelpMoney* internal_default_instance() {
    return reinterpret_cast<const CS_GetHelpMoney*>(
               &_CS_GetHelpMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    143;

  void Swap(CS_GetHelpMoney* other);

  // implements Message ----------------------------------------------

  inline CS_GetHelpMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_GetHelpMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_GetHelpMoney& from);
  void MergeFrom(const CS_GetHelpMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_GetHelpMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_GetHelpMoney_MsgID MsgID;
  static const MsgID ID =
    CS_GetHelpMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_GetHelpMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_GetHelpMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_GetHelpMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_GetHelpMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_GetHelpMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_GetHelpMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_GetHelpMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 get_rightnow = 1;
  bool has_get_rightnow() const;
  void clear_get_rightnow();
  static const int kGetRightnowFieldNumber = 1;
  ::google::protobuf::int32 get_rightnow() const;
  void set_get_rightnow(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_GetHelpMoney)
 private:
  void set_has_get_rightnow();
  void clear_has_get_rightnow();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 get_rightnow_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_GetHelpMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_GetHelpMoney) */ {
 public:
  SC_GetHelpMoney();
  virtual ~SC_GetHelpMoney();

  SC_GetHelpMoney(const SC_GetHelpMoney& from);

  inline SC_GetHelpMoney& operator=(const SC_GetHelpMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_GetHelpMoney& default_instance();

  static inline const SC_GetHelpMoney* internal_default_instance() {
    return reinterpret_cast<const SC_GetHelpMoney*>(
               &_SC_GetHelpMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    144;

  void Swap(SC_GetHelpMoney* other);

  // implements Message ----------------------------------------------

  inline SC_GetHelpMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_GetHelpMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_GetHelpMoney& from);
  void MergeFrom(const SC_GetHelpMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_GetHelpMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_GetHelpMoney_MsgID MsgID;
  static const MsgID ID =
    SC_GetHelpMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_GetHelpMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_GetHelpMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_GetHelpMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_GetHelpMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_GetHelpMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_GetHelpMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_GetHelpMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result_cash = 1;
  bool has_result_cash() const;
  void clear_result_cash();
  static const int kResultCashFieldNumber = 1;
  ::google::protobuf::int32 result_cash() const;
  void set_result_cash(::google::protobuf::int32 value);

  // optional int32 left_times = 2;
  bool has_left_times() const;
  void clear_left_times();
  static const int kLeftTimesFieldNumber = 2;
  ::google::protobuf::int32 left_times() const;
  void set_left_times(::google::protobuf::int32 value);

  // optional int32 cash_money = 3;
  bool has_cash_money() const;
  void clear_cash_money();
  static const int kCashMoneyFieldNumber = 3;
  ::google::protobuf::int32 cash_money() const;
  void set_cash_money(::google::protobuf::int32 value);

  // optional int32 money_must_less = 4;
  bool has_money_must_less() const;
  void clear_money_must_less();
  static const int kMoneyMustLessFieldNumber = 4;
  ::google::protobuf::int32 money_must_less() const;
  void set_money_must_less(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_GetHelpMoney)
 private:
  void set_has_result_cash();
  void clear_has_result_cash();
  void set_has_left_times();
  void clear_has_left_times();
  void set_has_cash_money();
  void clear_has_cash_money();
  void set_has_money_must_less();
  void clear_has_money_must_less();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_cash_;
  ::google::protobuf::int32 left_times_;
  ::google::protobuf::int32 cash_money_;
  ::google::protobuf::int32 money_must_less_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_Agent_CashMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_Agent_CashMoney) */ {
 public:
  CS_Agent_CashMoney();
  virtual ~CS_Agent_CashMoney();

  CS_Agent_CashMoney(const CS_Agent_CashMoney& from);

  inline CS_Agent_CashMoney& operator=(const CS_Agent_CashMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_Agent_CashMoney& default_instance();

  static inline const CS_Agent_CashMoney* internal_default_instance() {
    return reinterpret_cast<const CS_Agent_CashMoney*>(
               &_CS_Agent_CashMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    145;

  void Swap(CS_Agent_CashMoney* other);

  // implements Message ----------------------------------------------

  inline CS_Agent_CashMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_Agent_CashMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_Agent_CashMoney& from);
  void MergeFrom(const CS_Agent_CashMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_Agent_CashMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_Agent_CashMoney_MsgID MsgID;
  static const MsgID ID =
    CS_Agent_CashMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_Agent_CashMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_Agent_CashMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_Agent_CashMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_Agent_CashMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_Agent_CashMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_Agent_CashMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_Agent_CashMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 money = 1;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 1;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // optional int32 agent_id = 2;
  bool has_agent_id() const;
  void clear_agent_id();
  static const int kAgentIdFieldNumber = 2;
  ::google::protobuf::int32 agent_id() const;
  void set_agent_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_Agent_CashMoney)
 private:
  void set_has_money();
  void clear_has_money();
  void set_has_agent_id();
  void clear_has_agent_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 agent_id_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_Agent_CashMoneyResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_Agent_CashMoneyResult) */ {
 public:
  SC_Agent_CashMoneyResult();
  virtual ~SC_Agent_CashMoneyResult();

  SC_Agent_CashMoneyResult(const SC_Agent_CashMoneyResult& from);

  inline SC_Agent_CashMoneyResult& operator=(const SC_Agent_CashMoneyResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_Agent_CashMoneyResult& default_instance();

  static inline const SC_Agent_CashMoneyResult* internal_default_instance() {
    return reinterpret_cast<const SC_Agent_CashMoneyResult*>(
               &_SC_Agent_CashMoneyResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    146;

  void Swap(SC_Agent_CashMoneyResult* other);

  // implements Message ----------------------------------------------

  inline SC_Agent_CashMoneyResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_Agent_CashMoneyResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_Agent_CashMoneyResult& from);
  void MergeFrom(const SC_Agent_CashMoneyResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_Agent_CashMoneyResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_Agent_CashMoneyResult_MsgID MsgID;
  static const MsgID ID =
    SC_Agent_CashMoneyResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_Agent_CashMoneyResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_Agent_CashMoneyResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_Agent_CashMoneyResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_Agent_CashMoneyResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_Agent_CashMoneyResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_Agent_CashMoneyResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_Agent_CashMoneyResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 bank = 2;
  bool has_bank() const;
  void clear_bank();
  static const int kBankFieldNumber = 2;
  ::google::protobuf::int64 bank() const;
  void set_bank(::google::protobuf::int64 value);

  // optional int64 money = 3;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_Agent_CashMoneyResult)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_bank();
  void clear_has_bank();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 bank_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_RequestNewAward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_RequestNewAward) */ {
 public:
  CS_RequestNewAward();
  virtual ~CS_RequestNewAward();

  CS_RequestNewAward(const CS_RequestNewAward& from);

  inline CS_RequestNewAward& operator=(const CS_RequestNewAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_RequestNewAward& default_instance();

  static inline const CS_RequestNewAward* internal_default_instance() {
    return reinterpret_cast<const CS_RequestNewAward*>(
               &_CS_RequestNewAward_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    147;

  void Swap(CS_RequestNewAward* other);

  // implements Message ----------------------------------------------

  inline CS_RequestNewAward* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_RequestNewAward* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_RequestNewAward& from);
  void MergeFrom(const CS_RequestNewAward& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_RequestNewAward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_RequestNewAward_MsgID MsgID;
  static const MsgID ID =
    CS_RequestNewAward_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_RequestNewAward_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_RequestNewAward_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_RequestNewAward_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_RequestNewAward_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_RequestNewAward_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_RequestNewAward_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_RequestNewAward_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_RequestNewAward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_RequestNewAward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_RequestNewAward) */ {
 public:
  SC_RequestNewAward();
  virtual ~SC_RequestNewAward();

  SC_RequestNewAward(const SC_RequestNewAward& from);

  inline SC_RequestNewAward& operator=(const SC_RequestNewAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_RequestNewAward& default_instance();

  static inline const SC_RequestNewAward* internal_default_instance() {
    return reinterpret_cast<const SC_RequestNewAward*>(
               &_SC_RequestNewAward_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    148;

  void Swap(SC_RequestNewAward* other);

  // implements Message ----------------------------------------------

  inline SC_RequestNewAward* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_RequestNewAward* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_RequestNewAward& from);
  void MergeFrom(const SC_RequestNewAward& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_RequestNewAward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_RequestNewAward_MsgID MsgID;
  static const MsgID ID =
    SC_RequestNewAward_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_RequestNewAward_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_RequestNewAward_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_RequestNewAward_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_RequestNewAward_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_RequestNewAward_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_RequestNewAward_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_RequestNewAward_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 newaward_result = 1;
  bool has_newaward_result() const;
  void clear_newaward_result();
  static const int kNewawardResultFieldNumber = 1;
  ::google::protobuf::int32 newaward_result() const;
  void set_newaward_result(::google::protobuf::int32 value);

  // optional int32 money = 2 [default = 0];
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_RequestNewAward)
 private:
  void set_has_newaward_result();
  void clear_has_newaward_result();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 newaward_result_;
  ::google::protobuf::int32 money_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_RequestCheckInAward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_RequestCheckInAward) */ {
 public:
  CS_RequestCheckInAward();
  virtual ~CS_RequestCheckInAward();

  CS_RequestCheckInAward(const CS_RequestCheckInAward& from);

  inline CS_RequestCheckInAward& operator=(const CS_RequestCheckInAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_RequestCheckInAward& default_instance();

  static inline const CS_RequestCheckInAward* internal_default_instance() {
    return reinterpret_cast<const CS_RequestCheckInAward*>(
               &_CS_RequestCheckInAward_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    149;

  void Swap(CS_RequestCheckInAward* other);

  // implements Message ----------------------------------------------

  inline CS_RequestCheckInAward* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_RequestCheckInAward* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_RequestCheckInAward& from);
  void MergeFrom(const CS_RequestCheckInAward& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_RequestCheckInAward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_RequestCheckInAward_MsgID MsgID;
  static const MsgID ID =
    CS_RequestCheckInAward_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_RequestCheckInAward_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_RequestCheckInAward_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_RequestCheckInAward_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_RequestCheckInAward_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_RequestCheckInAward_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_RequestCheckInAward_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_RequestCheckInAward_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_RequestCheckInAward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_RequestCheckInAward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_RequestCheckInAward) */ {
 public:
  SC_RequestCheckInAward();
  virtual ~SC_RequestCheckInAward();

  SC_RequestCheckInAward(const SC_RequestCheckInAward& from);

  inline SC_RequestCheckInAward& operator=(const SC_RequestCheckInAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_RequestCheckInAward& default_instance();

  static inline const SC_RequestCheckInAward* internal_default_instance() {
    return reinterpret_cast<const SC_RequestCheckInAward*>(
               &_SC_RequestCheckInAward_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    150;

  void Swap(SC_RequestCheckInAward* other);

  // implements Message ----------------------------------------------

  inline SC_RequestCheckInAward* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_RequestCheckInAward* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_RequestCheckInAward& from);
  void MergeFrom(const SC_RequestCheckInAward& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_RequestCheckInAward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_RequestCheckInAward_MsgID MsgID;
  static const MsgID ID =
    SC_RequestCheckInAward_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_RequestCheckInAward_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_RequestCheckInAward_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_RequestCheckInAward_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_RequestCheckInAward_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_RequestCheckInAward_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_RequestCheckInAward_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_RequestCheckInAward_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 checkin_result = 1;
  bool has_checkin_result() const;
  void clear_checkin_result();
  static const int kCheckinResultFieldNumber = 1;
  ::google::protobuf::int32 checkin_result() const;
  void set_checkin_result(::google::protobuf::int32 value);

  // optional int32 money = 2 [default = 0];
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_RequestCheckInAward)
 private:
  void set_has_checkin_result();
  void clear_has_checkin_result();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 checkin_result_;
  ::google::protobuf::int32 money_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_BindBankCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_BindBankCard) */ {
 public:
  CS_BindBankCard();
  virtual ~CS_BindBankCard();

  CS_BindBankCard(const CS_BindBankCard& from);

  inline CS_BindBankCard& operator=(const CS_BindBankCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_BindBankCard& default_instance();

  static inline const CS_BindBankCard* internal_default_instance() {
    return reinterpret_cast<const CS_BindBankCard*>(
               &_CS_BindBankCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    151;

  void Swap(CS_BindBankCard* other);

  // implements Message ----------------------------------------------

  inline CS_BindBankCard* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_BindBankCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_BindBankCard& from);
  void MergeFrom(const CS_BindBankCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_BindBankCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_BindBankCard_MsgID MsgID;
  static const MsgID ID =
    CS_BindBankCard_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_BindBankCard_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_BindBankCard_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_BindBankCard_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_BindBankCard_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_BindBankCard_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_BindBankCard_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_BindBankCard_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .BankCardInfo pb_info = 1;
  bool has_pb_info() const;
  void clear_pb_info();
  static const int kPbInfoFieldNumber = 1;
  const ::BankCardInfo& pb_info() const;
  ::BankCardInfo* mutable_pb_info();
  ::BankCardInfo* release_pb_info();
  void set_allocated_pb_info(::BankCardInfo* pb_info);

  // @@protoc_insertion_point(class_scope:CS_BindBankCard)
 private:
  void set_has_pb_info();
  void clear_has_pb_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::BankCardInfo* pb_info_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_BindBankCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_BindBankCard) */ {
 public:
  SC_BindBankCard();
  virtual ~SC_BindBankCard();

  SC_BindBankCard(const SC_BindBankCard& from);

  inline SC_BindBankCard& operator=(const SC_BindBankCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_BindBankCard& default_instance();

  static inline const SC_BindBankCard* internal_default_instance() {
    return reinterpret_cast<const SC_BindBankCard*>(
               &_SC_BindBankCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    152;

  void Swap(SC_BindBankCard* other);

  // implements Message ----------------------------------------------

  inline SC_BindBankCard* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_BindBankCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_BindBankCard& from);
  void MergeFrom(const SC_BindBankCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_BindBankCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_BindBankCard_MsgID MsgID;
  static const MsgID ID =
    SC_BindBankCard_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_BindBankCard_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_BindBankCard_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_BindBankCard_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_BindBankCard_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_BindBankCard_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_BindBankCard_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_BindBankCard_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 bind_result = 1;
  bool has_bind_result() const;
  void clear_bind_result();
  static const int kBindResultFieldNumber = 1;
  ::google::protobuf::int32 bind_result() const;
  void set_bind_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_BindBankCard)
 private:
  void set_has_bind_result();
  void clear_has_bind_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 bind_result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_GetBankCardInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_GetBankCardInfo) */ {
 public:
  CS_GetBankCardInfo();
  virtual ~CS_GetBankCardInfo();

  CS_GetBankCardInfo(const CS_GetBankCardInfo& from);

  inline CS_GetBankCardInfo& operator=(const CS_GetBankCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_GetBankCardInfo& default_instance();

  static inline const CS_GetBankCardInfo* internal_default_instance() {
    return reinterpret_cast<const CS_GetBankCardInfo*>(
               &_CS_GetBankCardInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    153;

  void Swap(CS_GetBankCardInfo* other);

  // implements Message ----------------------------------------------

  inline CS_GetBankCardInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_GetBankCardInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_GetBankCardInfo& from);
  void MergeFrom(const CS_GetBankCardInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_GetBankCardInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_GetBankCardInfo_MsgID MsgID;
  static const MsgID ID =
    CS_GetBankCardInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_GetBankCardInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_GetBankCardInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_GetBankCardInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_GetBankCardInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_GetBankCardInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_GetBankCardInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_GetBankCardInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_GetBankCardInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_GetBankCardInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_GetBankCardInfo) */ {
 public:
  SC_GetBankCardInfo();
  virtual ~SC_GetBankCardInfo();

  SC_GetBankCardInfo(const SC_GetBankCardInfo& from);

  inline SC_GetBankCardInfo& operator=(const SC_GetBankCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_GetBankCardInfo& default_instance();

  static inline const SC_GetBankCardInfo* internal_default_instance() {
    return reinterpret_cast<const SC_GetBankCardInfo*>(
               &_SC_GetBankCardInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    154;

  void Swap(SC_GetBankCardInfo* other);

  // implements Message ----------------------------------------------

  inline SC_GetBankCardInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_GetBankCardInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_GetBankCardInfo& from);
  void MergeFrom(const SC_GetBankCardInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_GetBankCardInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_GetBankCardInfo_MsgID MsgID;
  static const MsgID ID =
    SC_GetBankCardInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_GetBankCardInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_GetBankCardInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_GetBankCardInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_GetBankCardInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_GetBankCardInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_GetBankCardInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_GetBankCardInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .BankCardInfo pb_info = 1;
  bool has_pb_info() const;
  void clear_pb_info();
  static const int kPbInfoFieldNumber = 1;
  const ::BankCardInfo& pb_info() const;
  ::BankCardInfo* mutable_pb_info();
  ::BankCardInfo* release_pb_info();
  void set_allocated_pb_info(::BankCardInfo* pb_info);

  // @@protoc_insertion_point(class_scope:SC_GetBankCardInfo)
 private:
  void set_has_pb_info();
  void clear_has_pb_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::BankCardInfo* pb_info_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_NewGameMaintain : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_NewGameMaintain) */ {
 public:
  CS_NewGameMaintain();
  virtual ~CS_NewGameMaintain();

  CS_NewGameMaintain(const CS_NewGameMaintain& from);

  inline CS_NewGameMaintain& operator=(const CS_NewGameMaintain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_NewGameMaintain& default_instance();

  static inline const CS_NewGameMaintain* internal_default_instance() {
    return reinterpret_cast<const CS_NewGameMaintain*>(
               &_CS_NewGameMaintain_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    155;

  void Swap(CS_NewGameMaintain* other);

  // implements Message ----------------------------------------------

  inline CS_NewGameMaintain* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_NewGameMaintain* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_NewGameMaintain& from);
  void MergeFrom(const CS_NewGameMaintain& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_NewGameMaintain* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_NewGameMaintain_MsgID MsgID;
  static const MsgID ID =
    CS_NewGameMaintain_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_NewGameMaintain_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_NewGameMaintain_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_NewGameMaintain_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_NewGameMaintain_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_NewGameMaintain_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_NewGameMaintain_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_NewGameMaintain_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_NewGameMaintain)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NewGameMaintain : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_NewGameMaintain) */ {
 public:
  SC_NewGameMaintain();
  virtual ~SC_NewGameMaintain();

  SC_NewGameMaintain(const SC_NewGameMaintain& from);

  inline SC_NewGameMaintain& operator=(const SC_NewGameMaintain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NewGameMaintain& default_instance();

  static inline const SC_NewGameMaintain* internal_default_instance() {
    return reinterpret_cast<const SC_NewGameMaintain*>(
               &_SC_NewGameMaintain_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    156;

  void Swap(SC_NewGameMaintain* other);

  // implements Message ----------------------------------------------

  inline SC_NewGameMaintain* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NewGameMaintain* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NewGameMaintain& from);
  void MergeFrom(const SC_NewGameMaintain& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NewGameMaintain* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_NewGameMaintain_MsgID MsgID;
  static const MsgID ID =
    SC_NewGameMaintain_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_NewGameMaintain_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_NewGameMaintain_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_NewGameMaintain_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_NewGameMaintain_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_NewGameMaintain_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_NewGameMaintain_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_NewGameMaintain_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 first_game_type = 1;
  int first_game_type_size() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 1;
  ::google::protobuf::int32 first_game_type(int index) const;
  void set_first_game_type(int index, ::google::protobuf::int32 value);
  void add_first_game_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      first_game_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_first_game_type();

  // @@protoc_insertion_point(class_scope:SC_NewGameMaintain)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > first_game_type_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_PlayerPromotion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_PlayerPromotion) */ {
 public:
  CS_PlayerPromotion();
  virtual ~CS_PlayerPromotion();

  CS_PlayerPromotion(const CS_PlayerPromotion& from);

  inline CS_PlayerPromotion& operator=(const CS_PlayerPromotion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_PlayerPromotion& default_instance();

  static inline const CS_PlayerPromotion* internal_default_instance() {
    return reinterpret_cast<const CS_PlayerPromotion*>(
               &_CS_PlayerPromotion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    157;

  void Swap(CS_PlayerPromotion* other);

  // implements Message ----------------------------------------------

  inline CS_PlayerPromotion* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_PlayerPromotion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_PlayerPromotion& from);
  void MergeFrom(const CS_PlayerPromotion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_PlayerPromotion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_PlayerPromotion_MsgID MsgID;
  static const MsgID ID =
    CS_PlayerPromotion_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_PlayerPromotion_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_PlayerPromotion_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_PlayerPromotion_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_PlayerPromotion_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_PlayerPromotion_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_PlayerPromotion_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_PlayerPromotion_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_PlayerPromotion)
 private:
  void set_has_index();
  void clear_has_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 index_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_PlayerPromotion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_PlayerPromotion) */ {
 public:
  SC_PlayerPromotion();
  virtual ~SC_PlayerPromotion();

  SC_PlayerPromotion(const SC_PlayerPromotion& from);

  inline SC_PlayerPromotion& operator=(const SC_PlayerPromotion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_PlayerPromotion& default_instance();

  static inline const SC_PlayerPromotion* internal_default_instance() {
    return reinterpret_cast<const SC_PlayerPromotion*>(
               &_SC_PlayerPromotion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    158;

  void Swap(SC_PlayerPromotion* other);

  // implements Message ----------------------------------------------

  inline SC_PlayerPromotion* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_PlayerPromotion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_PlayerPromotion& from);
  void MergeFrom(const SC_PlayerPromotion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_PlayerPromotion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_PlayerPromotion_MsgID MsgID;
  static const MsgID ID =
    SC_PlayerPromotion_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_PlayerPromotion_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_PlayerPromotion_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_PlayerPromotion_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_PlayerPromotion_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_PlayerPromotion_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_PlayerPromotion_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_PlayerPromotion_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 promotion_result = 1;
  bool has_promotion_result() const;
  void clear_promotion_result();
  static const int kPromotionResultFieldNumber = 1;
  ::google::protobuf::int32 promotion_result() const;
  void set_promotion_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_PlayerPromotion)
 private:
  void set_has_promotion_result();
  void clear_has_promotion_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 promotion_result_;
  friend struct protobuf_public_5fmsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// C_RequestPublicKey

// optional string channel_id = 1;
inline bool C_RequestPublicKey::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_RequestPublicKey::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_RequestPublicKey::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_RequestPublicKey::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& C_RequestPublicKey::channel_id() const {
  // @@protoc_insertion_point(field_get:C_RequestPublicKey.channel_id)
  return channel_id_.GetNoArena();
}
inline void C_RequestPublicKey::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:C_RequestPublicKey.channel_id)
}
#if LANG_CXX11
inline void C_RequestPublicKey::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_RequestPublicKey.channel_id)
}
#endif
inline void C_RequestPublicKey::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_RequestPublicKey.channel_id)
}
inline void C_RequestPublicKey::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_RequestPublicKey.channel_id)
}
inline ::std::string* C_RequestPublicKey::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:C_RequestPublicKey.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_RequestPublicKey::release_channel_id() {
  // @@protoc_insertion_point(field_release:C_RequestPublicKey.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_RequestPublicKey::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:C_RequestPublicKey.channel_id)
}

// optional string version = 2;
inline bool C_RequestPublicKey::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C_RequestPublicKey::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C_RequestPublicKey::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C_RequestPublicKey::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& C_RequestPublicKey::version() const {
  // @@protoc_insertion_point(field_get:C_RequestPublicKey.version)
  return version_.GetNoArena();
}
inline void C_RequestPublicKey::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:C_RequestPublicKey.version)
}
#if LANG_CXX11
inline void C_RequestPublicKey::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_RequestPublicKey.version)
}
#endif
inline void C_RequestPublicKey::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_RequestPublicKey.version)
}
inline void C_RequestPublicKey::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_RequestPublicKey.version)
}
inline ::std::string* C_RequestPublicKey::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:C_RequestPublicKey.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_RequestPublicKey::release_version() {
  // @@protoc_insertion_point(field_release:C_RequestPublicKey.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_RequestPublicKey::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:C_RequestPublicKey.version)
}

// optional string re_ip = 3;
inline bool C_RequestPublicKey::has_re_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C_RequestPublicKey::set_has_re_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C_RequestPublicKey::clear_has_re_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C_RequestPublicKey::clear_re_ip() {
  re_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_re_ip();
}
inline const ::std::string& C_RequestPublicKey::re_ip() const {
  // @@protoc_insertion_point(field_get:C_RequestPublicKey.re_ip)
  return re_ip_.GetNoArena();
}
inline void C_RequestPublicKey::set_re_ip(const ::std::string& value) {
  set_has_re_ip();
  re_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:C_RequestPublicKey.re_ip)
}
#if LANG_CXX11
inline void C_RequestPublicKey::set_re_ip(::std::string&& value) {
  set_has_re_ip();
  re_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_RequestPublicKey.re_ip)
}
#endif
inline void C_RequestPublicKey::set_re_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_re_ip();
  re_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_RequestPublicKey.re_ip)
}
inline void C_RequestPublicKey::set_re_ip(const char* value, size_t size) {
  set_has_re_ip();
  re_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_RequestPublicKey.re_ip)
}
inline ::std::string* C_RequestPublicKey::mutable_re_ip() {
  set_has_re_ip();
  // @@protoc_insertion_point(field_mutable:C_RequestPublicKey.re_ip)
  return re_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_RequestPublicKey::release_re_ip() {
  // @@protoc_insertion_point(field_release:C_RequestPublicKey.re_ip)
  clear_has_re_ip();
  return re_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_RequestPublicKey::set_allocated_re_ip(::std::string* re_ip) {
  if (re_ip != NULL) {
    set_has_re_ip();
  } else {
    clear_has_re_ip();
  }
  re_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), re_ip);
  // @@protoc_insertion_point(field_set_allocated:C_RequestPublicKey.re_ip)
}

// optional int32 android_uid = 4;
inline bool C_RequestPublicKey::has_android_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C_RequestPublicKey::set_has_android_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C_RequestPublicKey::clear_has_android_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C_RequestPublicKey::clear_android_uid() {
  android_uid_ = 0;
  clear_has_android_uid();
}
inline ::google::protobuf::int32 C_RequestPublicKey::android_uid() const {
  // @@protoc_insertion_point(field_get:C_RequestPublicKey.android_uid)
  return android_uid_;
}
inline void C_RequestPublicKey::set_android_uid(::google::protobuf::int32 value) {
  set_has_android_uid();
  android_uid_ = value;
  // @@protoc_insertion_point(field_set:C_RequestPublicKey.android_uid)
}

// optional int32 android_pid = 5;
inline bool C_RequestPublicKey::has_android_pid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C_RequestPublicKey::set_has_android_pid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C_RequestPublicKey::clear_has_android_pid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C_RequestPublicKey::clear_android_pid() {
  android_pid_ = 0;
  clear_has_android_pid();
}
inline ::google::protobuf::int32 C_RequestPublicKey::android_pid() const {
  // @@protoc_insertion_point(field_get:C_RequestPublicKey.android_pid)
  return android_pid_;
}
inline void C_RequestPublicKey::set_android_pid(::google::protobuf::int32 value) {
  set_has_android_pid();
  android_pid_ = value;
  // @@protoc_insertion_point(field_set:C_RequestPublicKey.android_pid)
}

// -------------------------------------------------------------------

// C_PublicKey

// optional string public_key = 1;
inline bool C_PublicKey::has_public_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_PublicKey::set_has_public_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_PublicKey::clear_has_public_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_PublicKey::clear_public_key() {
  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_public_key();
}
inline const ::std::string& C_PublicKey::public_key() const {
  // @@protoc_insertion_point(field_get:C_PublicKey.public_key)
  return public_key_.GetNoArena();
}
inline void C_PublicKey::set_public_key(const ::std::string& value) {
  set_has_public_key();
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:C_PublicKey.public_key)
}
#if LANG_CXX11
inline void C_PublicKey::set_public_key(::std::string&& value) {
  set_has_public_key();
  public_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:C_PublicKey.public_key)
}
#endif
inline void C_PublicKey::set_public_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_public_key();
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:C_PublicKey.public_key)
}
inline void C_PublicKey::set_public_key(const char* value, size_t size) {
  set_has_public_key();
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:C_PublicKey.public_key)
}
inline ::std::string* C_PublicKey::mutable_public_key() {
  set_has_public_key();
  // @@protoc_insertion_point(field_mutable:C_PublicKey.public_key)
  return public_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_PublicKey::release_public_key() {
  // @@protoc_insertion_point(field_release:C_PublicKey.public_key)
  clear_has_public_key();
  return public_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_PublicKey::set_allocated_public_key(::std::string* public_key) {
  if (public_key != NULL) {
    set_has_public_key();
  } else {
    clear_has_public_key();
  }
  public_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key);
  // @@protoc_insertion_point(field_set_allocated:C_PublicKey.public_key)
}

// -------------------------------------------------------------------

// CL_RegAccount

// optional string account = 1;
inline bool CL_RegAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CL_RegAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CL_RegAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CL_RegAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& CL_RegAccount::account() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.account)
  return account_.GetNoArena();
}
inline void CL_RegAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.account)
}
#if LANG_CXX11
inline void CL_RegAccount::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.account)
}
#endif
inline void CL_RegAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.account)
}
inline void CL_RegAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.account)
}
inline ::std::string* CL_RegAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_RegAccount::release_account() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_RegAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.account)
}

// optional string password = 2;
inline bool CL_RegAccount::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CL_RegAccount::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CL_RegAccount::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CL_RegAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& CL_RegAccount::password() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.password)
  return password_.GetNoArena();
}
inline void CL_RegAccount::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.password)
}
#if LANG_CXX11
inline void CL_RegAccount::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.password)
}
#endif
inline void CL_RegAccount::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.password)
}
inline void CL_RegAccount::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.password)
}
inline ::std::string* CL_RegAccount::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_RegAccount::release_password() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_RegAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.password)
}

// optional string phone = 3;
inline bool CL_RegAccount::has_phone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CL_RegAccount::set_has_phone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CL_RegAccount::clear_has_phone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CL_RegAccount::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& CL_RegAccount::phone() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.phone)
  return phone_.GetNoArena();
}
inline void CL_RegAccount::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.phone)
}
#if LANG_CXX11
inline void CL_RegAccount::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.phone)
}
#endif
inline void CL_RegAccount::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.phone)
}
inline void CL_RegAccount::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.phone)
}
inline ::std::string* CL_RegAccount::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_RegAccount::release_phone() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_RegAccount::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.phone)
}

// optional string phone_type = 4;
inline bool CL_RegAccount::has_phone_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CL_RegAccount::set_has_phone_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CL_RegAccount::clear_has_phone_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CL_RegAccount::clear_phone_type() {
  phone_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_type();
}
inline const ::std::string& CL_RegAccount::phone_type() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.phone_type)
  return phone_type_.GetNoArena();
}
inline void CL_RegAccount::set_phone_type(const ::std::string& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.phone_type)
}
#if LANG_CXX11
inline void CL_RegAccount::set_phone_type(::std::string&& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.phone_type)
}
#endif
inline void CL_RegAccount::set_phone_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.phone_type)
}
inline void CL_RegAccount::set_phone_type(const char* value, size_t size) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.phone_type)
}
inline ::std::string* CL_RegAccount::mutable_phone_type() {
  set_has_phone_type();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.phone_type)
  return phone_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_RegAccount::release_phone_type() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.phone_type)
  clear_has_phone_type();
  return phone_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_RegAccount::set_allocated_phone_type(::std::string* phone_type) {
  if (phone_type != NULL) {
    set_has_phone_type();
  } else {
    clear_has_phone_type();
  }
  phone_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_type);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.phone_type)
}

// optional string version = 5;
inline bool CL_RegAccount::has_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CL_RegAccount::set_has_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CL_RegAccount::clear_has_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CL_RegAccount::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& CL_RegAccount::version() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.version)
  return version_.GetNoArena();
}
inline void CL_RegAccount::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.version)
}
#if LANG_CXX11
inline void CL_RegAccount::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.version)
}
#endif
inline void CL_RegAccount::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.version)
}
inline void CL_RegAccount::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.version)
}
inline ::std::string* CL_RegAccount::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_RegAccount::release_version() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_RegAccount::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.version)
}

// optional string channel_id = 6;
inline bool CL_RegAccount::has_channel_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CL_RegAccount::set_has_channel_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CL_RegAccount::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CL_RegAccount::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& CL_RegAccount::channel_id() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.channel_id)
  return channel_id_.GetNoArena();
}
inline void CL_RegAccount::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.channel_id)
}
#if LANG_CXX11
inline void CL_RegAccount::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.channel_id)
}
#endif
inline void CL_RegAccount::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.channel_id)
}
inline void CL_RegAccount::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.channel_id)
}
inline ::std::string* CL_RegAccount::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_RegAccount::release_channel_id() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_RegAccount::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.channel_id)
}

// optional string package_name = 7;
inline bool CL_RegAccount::has_package_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CL_RegAccount::set_has_package_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CL_RegAccount::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CL_RegAccount::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& CL_RegAccount::package_name() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.package_name)
  return package_name_.GetNoArena();
}
inline void CL_RegAccount::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.package_name)
}
#if LANG_CXX11
inline void CL_RegAccount::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.package_name)
}
#endif
inline void CL_RegAccount::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.package_name)
}
inline void CL_RegAccount::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.package_name)
}
inline ::std::string* CL_RegAccount::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_RegAccount::release_package_name() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_RegAccount::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.package_name)
}

// optional string imei = 8;
inline bool CL_RegAccount::has_imei() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CL_RegAccount::set_has_imei() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CL_RegAccount::clear_has_imei() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CL_RegAccount::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
inline const ::std::string& CL_RegAccount::imei() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.imei)
  return imei_.GetNoArena();
}
inline void CL_RegAccount::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.imei)
}
#if LANG_CXX11
inline void CL_RegAccount::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.imei)
}
#endif
inline void CL_RegAccount::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.imei)
}
inline void CL_RegAccount::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.imei)
}
inline ::std::string* CL_RegAccount::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_RegAccount::release_imei() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_RegAccount::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.imei)
}

// optional string ip = 9;
inline bool CL_RegAccount::has_ip() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CL_RegAccount::set_has_ip() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CL_RegAccount::clear_has_ip() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CL_RegAccount::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& CL_RegAccount::ip() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.ip)
  return ip_.GetNoArena();
}
inline void CL_RegAccount::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.ip)
}
#if LANG_CXX11
inline void CL_RegAccount::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.ip)
}
#endif
inline void CL_RegAccount::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.ip)
}
inline void CL_RegAccount::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.ip)
}
inline ::std::string* CL_RegAccount::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_RegAccount::release_ip() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_RegAccount::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.ip)
}

// optional string ip_area = 10;
inline bool CL_RegAccount::has_ip_area() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CL_RegAccount::set_has_ip_area() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CL_RegAccount::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CL_RegAccount::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
inline const ::std::string& CL_RegAccount::ip_area() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.ip_area)
  return ip_area_.GetNoArena();
}
inline void CL_RegAccount::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_RegAccount.ip_area)
}
#if LANG_CXX11
inline void CL_RegAccount::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_RegAccount.ip_area)
}
#endif
inline void CL_RegAccount::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_RegAccount.ip_area)
}
inline void CL_RegAccount::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_RegAccount.ip_area)
}
inline ::std::string* CL_RegAccount::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:CL_RegAccount.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_RegAccount::release_ip_area() {
  // @@protoc_insertion_point(field_release:CL_RegAccount.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_RegAccount::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:CL_RegAccount.ip_area)
}

// optional int32 android_uid = 11;
inline bool CL_RegAccount::has_android_uid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CL_RegAccount::set_has_android_uid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CL_RegAccount::clear_has_android_uid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CL_RegAccount::clear_android_uid() {
  android_uid_ = 0;
  clear_has_android_uid();
}
inline ::google::protobuf::int32 CL_RegAccount::android_uid() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.android_uid)
  return android_uid_;
}
inline void CL_RegAccount::set_android_uid(::google::protobuf::int32 value) {
  set_has_android_uid();
  android_uid_ = value;
  // @@protoc_insertion_point(field_set:CL_RegAccount.android_uid)
}

// optional int32 android_pid = 12;
inline bool CL_RegAccount::has_android_pid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CL_RegAccount::set_has_android_pid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CL_RegAccount::clear_has_android_pid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CL_RegAccount::clear_android_pid() {
  android_pid_ = 0;
  clear_has_android_pid();
}
inline ::google::protobuf::int32 CL_RegAccount::android_pid() const {
  // @@protoc_insertion_point(field_get:CL_RegAccount.android_pid)
  return android_pid_;
}
inline void CL_RegAccount::set_android_pid(::google::protobuf::int32 value) {
  set_has_android_pid();
  android_pid_ = value;
  // @@protoc_insertion_point(field_set:CL_RegAccount.android_pid)
}

// -------------------------------------------------------------------

// CL_Login

// optional string account = 1;
inline bool CL_Login::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CL_Login::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CL_Login::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CL_Login::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& CL_Login::account() const {
  // @@protoc_insertion_point(field_get:CL_Login.account)
  return account_.GetNoArena();
}
inline void CL_Login::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.account)
}
#if LANG_CXX11
inline void CL_Login::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.account)
}
#endif
inline void CL_Login::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.account)
}
inline void CL_Login::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.account)
}
inline ::std::string* CL_Login::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:CL_Login.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_Login::release_account() {
  // @@protoc_insertion_point(field_release:CL_Login.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_Login::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.account)
}

// optional string password = 2;
inline bool CL_Login::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CL_Login::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CL_Login::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CL_Login::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& CL_Login::password() const {
  // @@protoc_insertion_point(field_get:CL_Login.password)
  return password_.GetNoArena();
}
inline void CL_Login::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.password)
}
#if LANG_CXX11
inline void CL_Login::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.password)
}
#endif
inline void CL_Login::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.password)
}
inline void CL_Login::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.password)
}
inline ::std::string* CL_Login::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CL_Login.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_Login::release_password() {
  // @@protoc_insertion_point(field_release:CL_Login.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_Login::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.password)
}

// optional string phone = 3;
inline bool CL_Login::has_phone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CL_Login::set_has_phone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CL_Login::clear_has_phone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CL_Login::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& CL_Login::phone() const {
  // @@protoc_insertion_point(field_get:CL_Login.phone)
  return phone_.GetNoArena();
}
inline void CL_Login::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.phone)
}
#if LANG_CXX11
inline void CL_Login::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.phone)
}
#endif
inline void CL_Login::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.phone)
}
inline void CL_Login::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.phone)
}
inline ::std::string* CL_Login::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:CL_Login.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_Login::release_phone() {
  // @@protoc_insertion_point(field_release:CL_Login.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_Login::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.phone)
}

// optional string phone_type = 4;
inline bool CL_Login::has_phone_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CL_Login::set_has_phone_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CL_Login::clear_has_phone_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CL_Login::clear_phone_type() {
  phone_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_type();
}
inline const ::std::string& CL_Login::phone_type() const {
  // @@protoc_insertion_point(field_get:CL_Login.phone_type)
  return phone_type_.GetNoArena();
}
inline void CL_Login::set_phone_type(const ::std::string& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.phone_type)
}
#if LANG_CXX11
inline void CL_Login::set_phone_type(::std::string&& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.phone_type)
}
#endif
inline void CL_Login::set_phone_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.phone_type)
}
inline void CL_Login::set_phone_type(const char* value, size_t size) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.phone_type)
}
inline ::std::string* CL_Login::mutable_phone_type() {
  set_has_phone_type();
  // @@protoc_insertion_point(field_mutable:CL_Login.phone_type)
  return phone_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_Login::release_phone_type() {
  // @@protoc_insertion_point(field_release:CL_Login.phone_type)
  clear_has_phone_type();
  return phone_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_Login::set_allocated_phone_type(::std::string* phone_type) {
  if (phone_type != NULL) {
    set_has_phone_type();
  } else {
    clear_has_phone_type();
  }
  phone_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_type);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.phone_type)
}

// optional string imei = 5;
inline bool CL_Login::has_imei() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CL_Login::set_has_imei() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CL_Login::clear_has_imei() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CL_Login::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
inline const ::std::string& CL_Login::imei() const {
  // @@protoc_insertion_point(field_get:CL_Login.imei)
  return imei_.GetNoArena();
}
inline void CL_Login::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.imei)
}
#if LANG_CXX11
inline void CL_Login::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.imei)
}
#endif
inline void CL_Login::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.imei)
}
inline void CL_Login::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.imei)
}
inline ::std::string* CL_Login::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:CL_Login.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_Login::release_imei() {
  // @@protoc_insertion_point(field_release:CL_Login.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_Login::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.imei)
}

// optional string ip = 6;
inline bool CL_Login::has_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CL_Login::set_has_ip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CL_Login::clear_has_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CL_Login::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& CL_Login::ip() const {
  // @@protoc_insertion_point(field_get:CL_Login.ip)
  return ip_.GetNoArena();
}
inline void CL_Login::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.ip)
}
#if LANG_CXX11
inline void CL_Login::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.ip)
}
#endif
inline void CL_Login::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.ip)
}
inline void CL_Login::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.ip)
}
inline ::std::string* CL_Login::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:CL_Login.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_Login::release_ip() {
  // @@protoc_insertion_point(field_release:CL_Login.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_Login::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.ip)
}

// optional string version = 7;
inline bool CL_Login::has_version() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CL_Login::set_has_version() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CL_Login::clear_has_version() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CL_Login::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& CL_Login::version() const {
  // @@protoc_insertion_point(field_get:CL_Login.version)
  return version_.GetNoArena();
}
inline void CL_Login::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.version)
}
#if LANG_CXX11
inline void CL_Login::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.version)
}
#endif
inline void CL_Login::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.version)
}
inline void CL_Login::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.version)
}
inline ::std::string* CL_Login::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:CL_Login.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_Login::release_version() {
  // @@protoc_insertion_point(field_release:CL_Login.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_Login::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.version)
}

// optional string channel_id = 8;
inline bool CL_Login::has_channel_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CL_Login::set_has_channel_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CL_Login::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CL_Login::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& CL_Login::channel_id() const {
  // @@protoc_insertion_point(field_get:CL_Login.channel_id)
  return channel_id_.GetNoArena();
}
inline void CL_Login::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.channel_id)
}
#if LANG_CXX11
inline void CL_Login::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.channel_id)
}
#endif
inline void CL_Login::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.channel_id)
}
inline void CL_Login::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.channel_id)
}
inline ::std::string* CL_Login::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:CL_Login.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_Login::release_channel_id() {
  // @@protoc_insertion_point(field_release:CL_Login.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_Login::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.channel_id)
}

// optional string package_name = 9;
inline bool CL_Login::has_package_name() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CL_Login::set_has_package_name() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CL_Login::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CL_Login::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& CL_Login::package_name() const {
  // @@protoc_insertion_point(field_get:CL_Login.package_name)
  return package_name_.GetNoArena();
}
inline void CL_Login::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.package_name)
}
#if LANG_CXX11
inline void CL_Login::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.package_name)
}
#endif
inline void CL_Login::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.package_name)
}
inline void CL_Login::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.package_name)
}
inline ::std::string* CL_Login::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:CL_Login.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_Login::release_package_name() {
  // @@protoc_insertion_point(field_release:CL_Login.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_Login::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.package_name)
}

// optional string ip_area = 10;
inline bool CL_Login::has_ip_area() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CL_Login::set_has_ip_area() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CL_Login::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CL_Login::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
inline const ::std::string& CL_Login::ip_area() const {
  // @@protoc_insertion_point(field_get:CL_Login.ip_area)
  return ip_area_.GetNoArena();
}
inline void CL_Login::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_Login.ip_area)
}
#if LANG_CXX11
inline void CL_Login::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_Login.ip_area)
}
#endif
inline void CL_Login::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_Login.ip_area)
}
inline void CL_Login::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_Login.ip_area)
}
inline ::std::string* CL_Login::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:CL_Login.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_Login::release_ip_area() {
  // @@protoc_insertion_point(field_release:CL_Login.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_Login::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:CL_Login.ip_area)
}

// -------------------------------------------------------------------

// LoginValidatebox

// repeated int32 question = 1;
inline int LoginValidatebox::question_size() const {
  return question_.size();
}
inline void LoginValidatebox::clear_question() {
  question_.Clear();
}
inline ::google::protobuf::int32 LoginValidatebox::question(int index) const {
  // @@protoc_insertion_point(field_get:LoginValidatebox.question)
  return question_.Get(index);
}
inline void LoginValidatebox::set_question(int index, ::google::protobuf::int32 value) {
  question_.Set(index, value);
  // @@protoc_insertion_point(field_set:LoginValidatebox.question)
}
inline void LoginValidatebox::add_question(::google::protobuf::int32 value) {
  question_.Add(value);
  // @@protoc_insertion_point(field_add:LoginValidatebox.question)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LoginValidatebox::question() const {
  // @@protoc_insertion_point(field_list:LoginValidatebox.question)
  return question_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LoginValidatebox::mutable_question() {
  // @@protoc_insertion_point(field_mutable_list:LoginValidatebox.question)
  return &question_;
}

// repeated int32 answer = 2;
inline int LoginValidatebox::answer_size() const {
  return answer_.size();
}
inline void LoginValidatebox::clear_answer() {
  answer_.Clear();
}
inline ::google::protobuf::int32 LoginValidatebox::answer(int index) const {
  // @@protoc_insertion_point(field_get:LoginValidatebox.answer)
  return answer_.Get(index);
}
inline void LoginValidatebox::set_answer(int index, ::google::protobuf::int32 value) {
  answer_.Set(index, value);
  // @@protoc_insertion_point(field_set:LoginValidatebox.answer)
}
inline void LoginValidatebox::add_answer(::google::protobuf::int32 value) {
  answer_.Add(value);
  // @@protoc_insertion_point(field_add:LoginValidatebox.answer)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LoginValidatebox::answer() const {
  // @@protoc_insertion_point(field_list:LoginValidatebox.answer)
  return answer_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LoginValidatebox::mutable_answer() {
  // @@protoc_insertion_point(field_mutable_list:LoginValidatebox.answer)
  return &answer_;
}

// -------------------------------------------------------------------

// LC_Login

// optional int32 result = 1 [default = 0];
inline bool LC_Login::has_result() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LC_Login::set_has_result() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LC_Login::clear_has_result() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LC_Login::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 LC_Login::result() const {
  // @@protoc_insertion_point(field_get:LC_Login.result)
  return result_;
}
inline void LC_Login::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.result)
}

// optional int32 guid = 2;
inline bool LC_Login::has_guid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LC_Login::set_has_guid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LC_Login::clear_has_guid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LC_Login::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LC_Login::guid() const {
  // @@protoc_insertion_point(field_get:LC_Login.guid)
  return guid_;
}
inline void LC_Login::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.guid)
}

// optional string account = 3;
inline bool LC_Login::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LC_Login::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LC_Login::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LC_Login::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& LC_Login::account() const {
  // @@protoc_insertion_point(field_get:LC_Login.account)
  return account_.GetNoArena();
}
inline void LC_Login::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_Login.account)
}
#if LANG_CXX11
inline void LC_Login::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_Login.account)
}
#endif
inline void LC_Login::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_Login.account)
}
inline void LC_Login::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_Login.account)
}
inline ::std::string* LC_Login::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:LC_Login.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LC_Login::release_account() {
  // @@protoc_insertion_point(field_release:LC_Login.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LC_Login::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:LC_Login.account)
}

// optional int32 game_id = 4;
inline bool LC_Login::has_game_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LC_Login::set_has_game_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LC_Login::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LC_Login::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 LC_Login::game_id() const {
  // @@protoc_insertion_point(field_get:LC_Login.game_id)
  return game_id_;
}
inline void LC_Login::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.game_id)
}

// optional string nickname = 5;
inline bool LC_Login::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LC_Login::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LC_Login::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LC_Login::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& LC_Login::nickname() const {
  // @@protoc_insertion_point(field_get:LC_Login.nickname)
  return nickname_.GetNoArena();
}
inline void LC_Login::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_Login.nickname)
}
#if LANG_CXX11
inline void LC_Login::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_Login.nickname)
}
#endif
inline void LC_Login::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_Login.nickname)
}
inline void LC_Login::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_Login.nickname)
}
inline ::std::string* LC_Login::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:LC_Login.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LC_Login::release_nickname() {
  // @@protoc_insertion_point(field_release:LC_Login.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LC_Login::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:LC_Login.nickname)
}

// optional bool is_guest = 6;
inline bool LC_Login::has_is_guest() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LC_Login::set_has_is_guest() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LC_Login::clear_has_is_guest() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LC_Login::clear_is_guest() {
  is_guest_ = false;
  clear_has_is_guest();
}
inline bool LC_Login::is_guest() const {
  // @@protoc_insertion_point(field_get:LC_Login.is_guest)
  return is_guest_;
}
inline void LC_Login::set_is_guest(bool value) {
  set_has_is_guest();
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.is_guest)
}

// optional string password = 7;
inline bool LC_Login::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LC_Login::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LC_Login::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LC_Login::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& LC_Login::password() const {
  // @@protoc_insertion_point(field_get:LC_Login.password)
  return password_.GetNoArena();
}
inline void LC_Login::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_Login.password)
}
#if LANG_CXX11
inline void LC_Login::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_Login.password)
}
#endif
inline void LC_Login::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_Login.password)
}
inline void LC_Login::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_Login.password)
}
inline ::std::string* LC_Login::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:LC_Login.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LC_Login::release_password() {
  // @@protoc_insertion_point(field_release:LC_Login.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LC_Login::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:LC_Login.password)
}

// optional string alipay_account = 8;
inline bool LC_Login::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LC_Login::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LC_Login::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LC_Login::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
inline const ::std::string& LC_Login::alipay_account() const {
  // @@protoc_insertion_point(field_get:LC_Login.alipay_account)
  return alipay_account_.GetNoArena();
}
inline void LC_Login::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_Login.alipay_account)
}
#if LANG_CXX11
inline void LC_Login::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_Login.alipay_account)
}
#endif
inline void LC_Login::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_Login.alipay_account)
}
inline void LC_Login::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_Login.alipay_account)
}
inline ::std::string* LC_Login::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:LC_Login.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LC_Login::release_alipay_account() {
  // @@protoc_insertion_point(field_release:LC_Login.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LC_Login::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:LC_Login.alipay_account)
}

// optional string alipay_name = 9;
inline bool LC_Login::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LC_Login::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LC_Login::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LC_Login::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
inline const ::std::string& LC_Login::alipay_name() const {
  // @@protoc_insertion_point(field_get:LC_Login.alipay_name)
  return alipay_name_.GetNoArena();
}
inline void LC_Login::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_Login.alipay_name)
}
#if LANG_CXX11
inline void LC_Login::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_Login.alipay_name)
}
#endif
inline void LC_Login::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_Login.alipay_name)
}
inline void LC_Login::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_Login.alipay_name)
}
inline ::std::string* LC_Login::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:LC_Login.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LC_Login::release_alipay_name() {
  // @@protoc_insertion_point(field_release:LC_Login.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LC_Login::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:LC_Login.alipay_name)
}

// optional bool is_validatebox = 10;
inline bool LC_Login::has_is_validatebox() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LC_Login::set_has_is_validatebox() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LC_Login::clear_has_is_validatebox() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LC_Login::clear_is_validatebox() {
  is_validatebox_ = false;
  clear_has_is_validatebox();
}
inline bool LC_Login::is_validatebox() const {
  // @@protoc_insertion_point(field_get:LC_Login.is_validatebox)
  return is_validatebox_;
}
inline void LC_Login::set_is_validatebox(bool value) {
  set_has_is_validatebox();
  is_validatebox_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.is_validatebox)
}

// optional .LoginValidatebox pb_validatebox = 11;
inline bool LC_Login::has_pb_validatebox() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LC_Login::set_has_pb_validatebox() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LC_Login::clear_has_pb_validatebox() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LC_Login::clear_pb_validatebox() {
  if (pb_validatebox_ != NULL) pb_validatebox_->::LoginValidatebox::Clear();
  clear_has_pb_validatebox();
}
inline const ::LoginValidatebox& LC_Login::pb_validatebox() const {
  // @@protoc_insertion_point(field_get:LC_Login.pb_validatebox)
  return pb_validatebox_ != NULL ? *pb_validatebox_
                         : *::LoginValidatebox::internal_default_instance();
}
inline ::LoginValidatebox* LC_Login::mutable_pb_validatebox() {
  set_has_pb_validatebox();
  if (pb_validatebox_ == NULL) {
    pb_validatebox_ = new ::LoginValidatebox;
  }
  // @@protoc_insertion_point(field_mutable:LC_Login.pb_validatebox)
  return pb_validatebox_;
}
inline ::LoginValidatebox* LC_Login::release_pb_validatebox() {
  // @@protoc_insertion_point(field_release:LC_Login.pb_validatebox)
  clear_has_pb_validatebox();
  ::LoginValidatebox* temp = pb_validatebox_;
  pb_validatebox_ = NULL;
  return temp;
}
inline void LC_Login::set_allocated_pb_validatebox(::LoginValidatebox* pb_validatebox) {
  delete pb_validatebox_;
  pb_validatebox_ = pb_validatebox;
  if (pb_validatebox) {
    set_has_pb_validatebox();
  } else {
    clear_has_pb_validatebox();
  }
  // @@protoc_insertion_point(field_set_allocated:LC_Login.pb_validatebox)
}

// optional int32 change_alipay_num = 12;
inline bool LC_Login::has_change_alipay_num() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void LC_Login::set_has_change_alipay_num() {
  _has_bits_[0] |= 0x00002000u;
}
inline void LC_Login::clear_has_change_alipay_num() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void LC_Login::clear_change_alipay_num() {
  change_alipay_num_ = 0;
  clear_has_change_alipay_num();
}
inline ::google::protobuf::int32 LC_Login::change_alipay_num() const {
  // @@protoc_insertion_point(field_get:LC_Login.change_alipay_num)
  return change_alipay_num_;
}
inline void LC_Login::set_change_alipay_num(::google::protobuf::int32 value) {
  set_has_change_alipay_num();
  change_alipay_num_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.change_alipay_num)
}

// optional string ip_area = 13;
inline bool LC_Login::has_ip_area() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LC_Login::set_has_ip_area() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LC_Login::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LC_Login::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
inline const ::std::string& LC_Login::ip_area() const {
  // @@protoc_insertion_point(field_get:LC_Login.ip_area)
  return ip_area_.GetNoArena();
}
inline void LC_Login::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_Login.ip_area)
}
#if LANG_CXX11
inline void LC_Login::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_Login.ip_area)
}
#endif
inline void LC_Login::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_Login.ip_area)
}
inline void LC_Login::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_Login.ip_area)
}
inline ::std::string* LC_Login::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:LC_Login.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LC_Login::release_ip_area() {
  // @@protoc_insertion_point(field_release:LC_Login.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LC_Login::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:LC_Login.ip_area)
}

// optional bool enable_transfer = 14;
inline bool LC_Login::has_enable_transfer() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LC_Login::set_has_enable_transfer() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LC_Login::clear_has_enable_transfer() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LC_Login::clear_enable_transfer() {
  enable_transfer_ = false;
  clear_has_enable_transfer();
}
inline bool LC_Login::enable_transfer() const {
  // @@protoc_insertion_point(field_get:LC_Login.enable_transfer)
  return enable_transfer_;
}
inline void LC_Login::set_enable_transfer(bool value) {
  set_has_enable_transfer();
  enable_transfer_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.enable_transfer)
}

// optional int32 is_first = 15 [default = 2];
inline bool LC_Login::has_is_first() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void LC_Login::set_has_is_first() {
  _has_bits_[0] |= 0x00004000u;
}
inline void LC_Login::clear_has_is_first() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void LC_Login::clear_is_first() {
  is_first_ = 2;
  clear_has_is_first();
}
inline ::google::protobuf::int32 LC_Login::is_first() const {
  // @@protoc_insertion_point(field_get:LC_Login.is_first)
  return is_first_;
}
inline void LC_Login::set_is_first(::google::protobuf::int32 value) {
  set_has_is_first();
  is_first_ = value;
  // @@protoc_insertion_point(field_set:LC_Login.is_first)
}

// -------------------------------------------------------------------

// CL_LoginBySms

// optional string account = 1;
inline bool CL_LoginBySms::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CL_LoginBySms::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CL_LoginBySms::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CL_LoginBySms::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& CL_LoginBySms::account() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.account)
  return account_.GetNoArena();
}
inline void CL_LoginBySms::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.account)
}
#if LANG_CXX11
inline void CL_LoginBySms::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.account)
}
#endif
inline void CL_LoginBySms::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.account)
}
inline void CL_LoginBySms::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.account)
}
inline ::std::string* CL_LoginBySms::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_LoginBySms::release_account() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_LoginBySms::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.account)
}

// optional string sms_no = 2;
inline bool CL_LoginBySms::has_sms_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CL_LoginBySms::set_has_sms_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CL_LoginBySms::clear_has_sms_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CL_LoginBySms::clear_sms_no() {
  sms_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sms_no();
}
inline const ::std::string& CL_LoginBySms::sms_no() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.sms_no)
  return sms_no_.GetNoArena();
}
inline void CL_LoginBySms::set_sms_no(const ::std::string& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.sms_no)
}
#if LANG_CXX11
inline void CL_LoginBySms::set_sms_no(::std::string&& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.sms_no)
}
#endif
inline void CL_LoginBySms::set_sms_no(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.sms_no)
}
inline void CL_LoginBySms::set_sms_no(const char* value, size_t size) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.sms_no)
}
inline ::std::string* CL_LoginBySms::mutable_sms_no() {
  set_has_sms_no();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.sms_no)
  return sms_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_LoginBySms::release_sms_no() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.sms_no)
  clear_has_sms_no();
  return sms_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_LoginBySms::set_allocated_sms_no(::std::string* sms_no) {
  if (sms_no != NULL) {
    set_has_sms_no();
  } else {
    clear_has_sms_no();
  }
  sms_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sms_no);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.sms_no)
}

// optional string phone = 3;
inline bool CL_LoginBySms::has_phone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CL_LoginBySms::set_has_phone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CL_LoginBySms::clear_has_phone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CL_LoginBySms::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& CL_LoginBySms::phone() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.phone)
  return phone_.GetNoArena();
}
inline void CL_LoginBySms::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.phone)
}
#if LANG_CXX11
inline void CL_LoginBySms::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.phone)
}
#endif
inline void CL_LoginBySms::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.phone)
}
inline void CL_LoginBySms::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.phone)
}
inline ::std::string* CL_LoginBySms::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_LoginBySms::release_phone() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_LoginBySms::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.phone)
}

// optional string phone_type = 4;
inline bool CL_LoginBySms::has_phone_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CL_LoginBySms::set_has_phone_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CL_LoginBySms::clear_has_phone_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CL_LoginBySms::clear_phone_type() {
  phone_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_type();
}
inline const ::std::string& CL_LoginBySms::phone_type() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.phone_type)
  return phone_type_.GetNoArena();
}
inline void CL_LoginBySms::set_phone_type(const ::std::string& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.phone_type)
}
#if LANG_CXX11
inline void CL_LoginBySms::set_phone_type(::std::string&& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.phone_type)
}
#endif
inline void CL_LoginBySms::set_phone_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.phone_type)
}
inline void CL_LoginBySms::set_phone_type(const char* value, size_t size) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.phone_type)
}
inline ::std::string* CL_LoginBySms::mutable_phone_type() {
  set_has_phone_type();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.phone_type)
  return phone_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_LoginBySms::release_phone_type() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.phone_type)
  clear_has_phone_type();
  return phone_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_LoginBySms::set_allocated_phone_type(::std::string* phone_type) {
  if (phone_type != NULL) {
    set_has_phone_type();
  } else {
    clear_has_phone_type();
  }
  phone_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_type);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.phone_type)
}

// optional string version = 5;
inline bool CL_LoginBySms::has_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CL_LoginBySms::set_has_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CL_LoginBySms::clear_has_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CL_LoginBySms::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& CL_LoginBySms::version() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.version)
  return version_.GetNoArena();
}
inline void CL_LoginBySms::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.version)
}
#if LANG_CXX11
inline void CL_LoginBySms::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.version)
}
#endif
inline void CL_LoginBySms::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.version)
}
inline void CL_LoginBySms::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.version)
}
inline ::std::string* CL_LoginBySms::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_LoginBySms::release_version() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_LoginBySms::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.version)
}

// optional string channel_id = 6;
inline bool CL_LoginBySms::has_channel_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CL_LoginBySms::set_has_channel_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CL_LoginBySms::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CL_LoginBySms::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& CL_LoginBySms::channel_id() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.channel_id)
  return channel_id_.GetNoArena();
}
inline void CL_LoginBySms::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.channel_id)
}
#if LANG_CXX11
inline void CL_LoginBySms::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.channel_id)
}
#endif
inline void CL_LoginBySms::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.channel_id)
}
inline void CL_LoginBySms::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.channel_id)
}
inline ::std::string* CL_LoginBySms::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_LoginBySms::release_channel_id() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_LoginBySms::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.channel_id)
}

// optional string package_name = 7;
inline bool CL_LoginBySms::has_package_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CL_LoginBySms::set_has_package_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CL_LoginBySms::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CL_LoginBySms::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& CL_LoginBySms::package_name() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.package_name)
  return package_name_.GetNoArena();
}
inline void CL_LoginBySms::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.package_name)
}
#if LANG_CXX11
inline void CL_LoginBySms::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.package_name)
}
#endif
inline void CL_LoginBySms::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.package_name)
}
inline void CL_LoginBySms::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.package_name)
}
inline ::std::string* CL_LoginBySms::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_LoginBySms::release_package_name() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_LoginBySms::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.package_name)
}

// optional string imei = 8;
inline bool CL_LoginBySms::has_imei() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CL_LoginBySms::set_has_imei() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CL_LoginBySms::clear_has_imei() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CL_LoginBySms::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
inline const ::std::string& CL_LoginBySms::imei() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.imei)
  return imei_.GetNoArena();
}
inline void CL_LoginBySms::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.imei)
}
#if LANG_CXX11
inline void CL_LoginBySms::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.imei)
}
#endif
inline void CL_LoginBySms::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.imei)
}
inline void CL_LoginBySms::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.imei)
}
inline ::std::string* CL_LoginBySms::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_LoginBySms::release_imei() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_LoginBySms::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.imei)
}

// optional string ip = 9;
inline bool CL_LoginBySms::has_ip() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CL_LoginBySms::set_has_ip() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CL_LoginBySms::clear_has_ip() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CL_LoginBySms::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& CL_LoginBySms::ip() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.ip)
  return ip_.GetNoArena();
}
inline void CL_LoginBySms::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.ip)
}
#if LANG_CXX11
inline void CL_LoginBySms::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.ip)
}
#endif
inline void CL_LoginBySms::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.ip)
}
inline void CL_LoginBySms::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.ip)
}
inline ::std::string* CL_LoginBySms::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_LoginBySms::release_ip() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_LoginBySms::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.ip)
}

// optional string ip_area = 10;
inline bool CL_LoginBySms::has_ip_area() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CL_LoginBySms::set_has_ip_area() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CL_LoginBySms::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CL_LoginBySms::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
inline const ::std::string& CL_LoginBySms::ip_area() const {
  // @@protoc_insertion_point(field_get:CL_LoginBySms.ip_area)
  return ip_area_.GetNoArena();
}
inline void CL_LoginBySms::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_LoginBySms.ip_area)
}
#if LANG_CXX11
inline void CL_LoginBySms::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_LoginBySms.ip_area)
}
#endif
inline void CL_LoginBySms::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_LoginBySms.ip_area)
}
inline void CL_LoginBySms::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_LoginBySms.ip_area)
}
inline ::std::string* CL_LoginBySms::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:CL_LoginBySms.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_LoginBySms::release_ip_area() {
  // @@protoc_insertion_point(field_release:CL_LoginBySms.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_LoginBySms::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:CL_LoginBySms.ip_area)
}

// -------------------------------------------------------------------

// SC_KickClient

// optional int32 result = 1;
inline bool SC_KickClient::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_KickClient::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_KickClient::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_KickClient::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_KickClient::result() const {
  // @@protoc_insertion_point(field_get:SC_KickClient.result)
  return result_;
}
inline void SC_KickClient::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_KickClient.result)
}

// -------------------------------------------------------------------

// CL_LoginAll

// optional int32 type = 1;
inline bool CL_LoginAll::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CL_LoginAll::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CL_LoginAll::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CL_LoginAll::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CL_LoginAll::type() const {
  // @@protoc_insertion_point(field_get:CL_LoginAll.type)
  return type_;
}
inline void CL_LoginAll::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CL_LoginAll.type)
}

// optional .CL_RegAccount reg = 2;
inline bool CL_LoginAll::has_reg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CL_LoginAll::set_has_reg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CL_LoginAll::clear_has_reg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CL_LoginAll::clear_reg() {
  if (reg_ != NULL) reg_->::CL_RegAccount::Clear();
  clear_has_reg();
}
inline const ::CL_RegAccount& CL_LoginAll::reg() const {
  // @@protoc_insertion_point(field_get:CL_LoginAll.reg)
  return reg_ != NULL ? *reg_
                         : *::CL_RegAccount::internal_default_instance();
}
inline ::CL_RegAccount* CL_LoginAll::mutable_reg() {
  set_has_reg();
  if (reg_ == NULL) {
    reg_ = new ::CL_RegAccount;
  }
  // @@protoc_insertion_point(field_mutable:CL_LoginAll.reg)
  return reg_;
}
inline ::CL_RegAccount* CL_LoginAll::release_reg() {
  // @@protoc_insertion_point(field_release:CL_LoginAll.reg)
  clear_has_reg();
  ::CL_RegAccount* temp = reg_;
  reg_ = NULL;
  return temp;
}
inline void CL_LoginAll::set_allocated_reg(::CL_RegAccount* reg) {
  delete reg_;
  reg_ = reg;
  if (reg) {
    set_has_reg();
  } else {
    clear_has_reg();
  }
  // @@protoc_insertion_point(field_set_allocated:CL_LoginAll.reg)
}

// optional .CL_Login login = 3;
inline bool CL_LoginAll::has_login() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CL_LoginAll::set_has_login() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CL_LoginAll::clear_has_login() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CL_LoginAll::clear_login() {
  if (login_ != NULL) login_->::CL_Login::Clear();
  clear_has_login();
}
inline const ::CL_Login& CL_LoginAll::login() const {
  // @@protoc_insertion_point(field_get:CL_LoginAll.login)
  return login_ != NULL ? *login_
                         : *::CL_Login::internal_default_instance();
}
inline ::CL_Login* CL_LoginAll::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::CL_Login;
  }
  // @@protoc_insertion_point(field_mutable:CL_LoginAll.login)
  return login_;
}
inline ::CL_Login* CL_LoginAll::release_login() {
  // @@protoc_insertion_point(field_release:CL_LoginAll.login)
  clear_has_login();
  ::CL_Login* temp = login_;
  login_ = NULL;
  return temp;
}
inline void CL_LoginAll::set_allocated_login(::CL_Login* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:CL_LoginAll.login)
}

// optional .CL_LoginBySms sms = 4;
inline bool CL_LoginAll::has_sms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CL_LoginAll::set_has_sms() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CL_LoginAll::clear_has_sms() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CL_LoginAll::clear_sms() {
  if (sms_ != NULL) sms_->::CL_LoginBySms::Clear();
  clear_has_sms();
}
inline const ::CL_LoginBySms& CL_LoginAll::sms() const {
  // @@protoc_insertion_point(field_get:CL_LoginAll.sms)
  return sms_ != NULL ? *sms_
                         : *::CL_LoginBySms::internal_default_instance();
}
inline ::CL_LoginBySms* CL_LoginAll::mutable_sms() {
  set_has_sms();
  if (sms_ == NULL) {
    sms_ = new ::CL_LoginBySms;
  }
  // @@protoc_insertion_point(field_mutable:CL_LoginAll.sms)
  return sms_;
}
inline ::CL_LoginBySms* CL_LoginAll::release_sms() {
  // @@protoc_insertion_point(field_release:CL_LoginAll.sms)
  clear_has_sms();
  ::CL_LoginBySms* temp = sms_;
  sms_ = NULL;
  return temp;
}
inline void CL_LoginAll::set_allocated_sms(::CL_LoginBySms* sms) {
  delete sms_;
  sms_ = sms;
  if (sms) {
    set_has_sms();
  } else {
    clear_has_sms();
  }
  // @@protoc_insertion_point(field_set_allocated:CL_LoginAll.sms)
}

// optional int32 gate_id = 5;
inline bool CL_LoginAll::has_gate_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CL_LoginAll::set_has_gate_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CL_LoginAll::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CL_LoginAll::clear_gate_id() {
  gate_id_ = 0;
  clear_has_gate_id();
}
inline ::google::protobuf::int32 CL_LoginAll::gate_id() const {
  // @@protoc_insertion_point(field_get:CL_LoginAll.gate_id)
  return gate_id_;
}
inline void CL_LoginAll::set_gate_id(::google::protobuf::int32 value) {
  set_has_gate_id();
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:CL_LoginAll.gate_id)
}

// -------------------------------------------------------------------

// CS_RequestSms

// optional string tel = 1;
inline bool CS_RequestSms::has_tel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_RequestSms::set_has_tel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_RequestSms::clear_has_tel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_RequestSms::clear_tel() {
  tel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tel();
}
inline const ::std::string& CS_RequestSms::tel() const {
  // @@protoc_insertion_point(field_get:CS_RequestSms.tel)
  return tel_.GetNoArena();
}
inline void CS_RequestSms::set_tel(const ::std::string& value) {
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_RequestSms.tel)
}
#if LANG_CXX11
inline void CS_RequestSms::set_tel(::std::string&& value) {
  set_has_tel();
  tel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_RequestSms.tel)
}
#endif
inline void CS_RequestSms::set_tel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_RequestSms.tel)
}
inline void CS_RequestSms::set_tel(const char* value, size_t size) {
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_RequestSms.tel)
}
inline ::std::string* CS_RequestSms::mutable_tel() {
  set_has_tel();
  // @@protoc_insertion_point(field_mutable:CS_RequestSms.tel)
  return tel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_RequestSms::release_tel() {
  // @@protoc_insertion_point(field_release:CS_RequestSms.tel)
  clear_has_tel();
  return tel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_RequestSms::set_allocated_tel(::std::string* tel) {
  if (tel != NULL) {
    set_has_tel();
  } else {
    clear_has_tel();
  }
  tel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tel);
  // @@protoc_insertion_point(field_set_allocated:CS_RequestSms.tel)
}

// optional int32 intention = 2;
inline bool CS_RequestSms::has_intention() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_RequestSms::set_has_intention() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_RequestSms::clear_has_intention() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_RequestSms::clear_intention() {
  intention_ = 0;
  clear_has_intention();
}
inline ::google::protobuf::int32 CS_RequestSms::intention() const {
  // @@protoc_insertion_point(field_get:CS_RequestSms.intention)
  return intention_;
}
inline void CS_RequestSms::set_intention(::google::protobuf::int32 value) {
  set_has_intention();
  intention_ = value;
  // @@protoc_insertion_point(field_set:CS_RequestSms.intention)
}

// optional int32 gate_session_id = 3;
inline bool CS_RequestSms::has_gate_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CS_RequestSms::set_has_gate_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CS_RequestSms::clear_has_gate_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CS_RequestSms::clear_gate_session_id() {
  gate_session_id_ = 0;
  clear_has_gate_session_id();
}
inline ::google::protobuf::int32 CS_RequestSms::gate_session_id() const {
  // @@protoc_insertion_point(field_get:CS_RequestSms.gate_session_id)
  return gate_session_id_;
}
inline void CS_RequestSms::set_gate_session_id(::google::protobuf::int32 value) {
  set_has_gate_session_id();
  gate_session_id_ = value;
  // @@protoc_insertion_point(field_set:CS_RequestSms.gate_session_id)
}

// -------------------------------------------------------------------

// SC_RequestSms

// optional int32 result = 1;
inline bool SC_RequestSms::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_RequestSms::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_RequestSms::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_RequestSms::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_RequestSms::result() const {
  // @@protoc_insertion_point(field_get:SC_RequestSms.result)
  return result_;
}
inline void SC_RequestSms::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_RequestSms.result)
}

// optional string sms_no = 2;
inline bool SC_RequestSms::has_sms_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_RequestSms::set_has_sms_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_RequestSms::clear_has_sms_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_RequestSms::clear_sms_no() {
  sms_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sms_no();
}
inline const ::std::string& SC_RequestSms::sms_no() const {
  // @@protoc_insertion_point(field_get:SC_RequestSms.sms_no)
  return sms_no_.GetNoArena();
}
inline void SC_RequestSms::set_sms_no(const ::std::string& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_RequestSms.sms_no)
}
#if LANG_CXX11
inline void SC_RequestSms::set_sms_no(::std::string&& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_RequestSms.sms_no)
}
#endif
inline void SC_RequestSms::set_sms_no(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_RequestSms.sms_no)
}
inline void SC_RequestSms::set_sms_no(const char* value, size_t size) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_RequestSms.sms_no)
}
inline ::std::string* SC_RequestSms::mutable_sms_no() {
  set_has_sms_no();
  // @@protoc_insertion_point(field_mutable:SC_RequestSms.sms_no)
  return sms_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_RequestSms::release_sms_no() {
  // @@protoc_insertion_point(field_release:SC_RequestSms.sms_no)
  clear_has_sms_no();
  return sms_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_RequestSms::set_allocated_sms_no(::std::string* sms_no) {
  if (sms_no != NULL) {
    set_has_sms_no();
  } else {
    clear_has_sms_no();
  }
  sms_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sms_no);
  // @@protoc_insertion_point(field_set_allocated:SC_RequestSms.sms_no)
}

// optional string tel = 3;
inline bool SC_RequestSms::has_tel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_RequestSms::set_has_tel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_RequestSms::clear_has_tel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_RequestSms::clear_tel() {
  tel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tel();
}
inline const ::std::string& SC_RequestSms::tel() const {
  // @@protoc_insertion_point(field_get:SC_RequestSms.tel)
  return tel_.GetNoArena();
}
inline void SC_RequestSms::set_tel(const ::std::string& value) {
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_RequestSms.tel)
}
#if LANG_CXX11
inline void SC_RequestSms::set_tel(::std::string&& value) {
  set_has_tel();
  tel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_RequestSms.tel)
}
#endif
inline void SC_RequestSms::set_tel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_RequestSms.tel)
}
inline void SC_RequestSms::set_tel(const char* value, size_t size) {
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_RequestSms.tel)
}
inline ::std::string* SC_RequestSms::mutable_tel() {
  set_has_tel();
  // @@protoc_insertion_point(field_mutable:SC_RequestSms.tel)
  return tel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_RequestSms::release_tel() {
  // @@protoc_insertion_point(field_release:SC_RequestSms.tel)
  clear_has_tel();
  return tel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_RequestSms::set_allocated_tel(::std::string* tel) {
  if (tel != NULL) {
    set_has_tel();
  } else {
    clear_has_tel();
  }
  tel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tel);
  // @@protoc_insertion_point(field_set_allocated:SC_RequestSms.tel)
}

// -------------------------------------------------------------------

// CS_ResetAccount

// optional string account = 1;
inline bool CS_ResetAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_ResetAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_ResetAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_ResetAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& CS_ResetAccount::account() const {
  // @@protoc_insertion_point(field_get:CS_ResetAccount.account)
  return account_.GetNoArena();
}
inline void CS_ResetAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ResetAccount.account)
}
#if LANG_CXX11
inline void CS_ResetAccount::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ResetAccount.account)
}
#endif
inline void CS_ResetAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ResetAccount.account)
}
inline void CS_ResetAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ResetAccount.account)
}
inline ::std::string* CS_ResetAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:CS_ResetAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_ResetAccount::release_account() {
  // @@protoc_insertion_point(field_release:CS_ResetAccount.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_ResetAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:CS_ResetAccount.account)
}

// optional string password = 2;
inline bool CS_ResetAccount::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_ResetAccount::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_ResetAccount::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_ResetAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& CS_ResetAccount::password() const {
  // @@protoc_insertion_point(field_get:CS_ResetAccount.password)
  return password_.GetNoArena();
}
inline void CS_ResetAccount::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ResetAccount.password)
}
#if LANG_CXX11
inline void CS_ResetAccount::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ResetAccount.password)
}
#endif
inline void CS_ResetAccount::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ResetAccount.password)
}
inline void CS_ResetAccount::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ResetAccount.password)
}
inline ::std::string* CS_ResetAccount::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CS_ResetAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_ResetAccount::release_password() {
  // @@protoc_insertion_point(field_release:CS_ResetAccount.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_ResetAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CS_ResetAccount.password)
}

// optional string nickname = 3;
inline bool CS_ResetAccount::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CS_ResetAccount::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CS_ResetAccount::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CS_ResetAccount::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& CS_ResetAccount::nickname() const {
  // @@protoc_insertion_point(field_get:CS_ResetAccount.nickname)
  return nickname_.GetNoArena();
}
inline void CS_ResetAccount::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ResetAccount.nickname)
}
#if LANG_CXX11
inline void CS_ResetAccount::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ResetAccount.nickname)
}
#endif
inline void CS_ResetAccount::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ResetAccount.nickname)
}
inline void CS_ResetAccount::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ResetAccount.nickname)
}
inline ::std::string* CS_ResetAccount::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:CS_ResetAccount.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_ResetAccount::release_nickname() {
  // @@protoc_insertion_point(field_release:CS_ResetAccount.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_ResetAccount::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:CS_ResetAccount.nickname)
}

// optional string sms_no = 4;
inline bool CS_ResetAccount::has_sms_no() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CS_ResetAccount::set_has_sms_no() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CS_ResetAccount::clear_has_sms_no() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CS_ResetAccount::clear_sms_no() {
  sms_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sms_no();
}
inline const ::std::string& CS_ResetAccount::sms_no() const {
  // @@protoc_insertion_point(field_get:CS_ResetAccount.sms_no)
  return sms_no_.GetNoArena();
}
inline void CS_ResetAccount::set_sms_no(const ::std::string& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ResetAccount.sms_no)
}
#if LANG_CXX11
inline void CS_ResetAccount::set_sms_no(::std::string&& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ResetAccount.sms_no)
}
#endif
inline void CS_ResetAccount::set_sms_no(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ResetAccount.sms_no)
}
inline void CS_ResetAccount::set_sms_no(const char* value, size_t size) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ResetAccount.sms_no)
}
inline ::std::string* CS_ResetAccount::mutable_sms_no() {
  set_has_sms_no();
  // @@protoc_insertion_point(field_mutable:CS_ResetAccount.sms_no)
  return sms_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_ResetAccount::release_sms_no() {
  // @@protoc_insertion_point(field_release:CS_ResetAccount.sms_no)
  clear_has_sms_no();
  return sms_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_ResetAccount::set_allocated_sms_no(::std::string* sms_no) {
  if (sms_no != NULL) {
    set_has_sms_no();
  } else {
    clear_has_sms_no();
  }
  sms_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sms_no);
  // @@protoc_insertion_point(field_set_allocated:CS_ResetAccount.sms_no)
}

// -------------------------------------------------------------------

// SC_ResetAccount

// optional int32 result = 1;
inline bool SC_ResetAccount::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_ResetAccount::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_ResetAccount::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_ResetAccount::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_ResetAccount::result() const {
  // @@protoc_insertion_point(field_get:SC_ResetAccount.result)
  return result_;
}
inline void SC_ResetAccount::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ResetAccount.result)
}

// optional string account = 2;
inline bool SC_ResetAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ResetAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ResetAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ResetAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& SC_ResetAccount::account() const {
  // @@protoc_insertion_point(field_get:SC_ResetAccount.account)
  return account_.GetNoArena();
}
inline void SC_ResetAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ResetAccount.account)
}
#if LANG_CXX11
inline void SC_ResetAccount::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ResetAccount.account)
}
#endif
inline void SC_ResetAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ResetAccount.account)
}
inline void SC_ResetAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ResetAccount.account)
}
inline ::std::string* SC_ResetAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:SC_ResetAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ResetAccount::release_account() {
  // @@protoc_insertion_point(field_release:SC_ResetAccount.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ResetAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:SC_ResetAccount.account)
}

// optional string nickname = 3;
inline bool SC_ResetAccount::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ResetAccount::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ResetAccount::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ResetAccount::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& SC_ResetAccount::nickname() const {
  // @@protoc_insertion_point(field_get:SC_ResetAccount.nickname)
  return nickname_.GetNoArena();
}
inline void SC_ResetAccount::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ResetAccount.nickname)
}
#if LANG_CXX11
inline void SC_ResetAccount::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ResetAccount.nickname)
}
#endif
inline void SC_ResetAccount::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ResetAccount.nickname)
}
inline void SC_ResetAccount::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ResetAccount.nickname)
}
inline ::std::string* SC_ResetAccount::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:SC_ResetAccount.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ResetAccount::release_nickname() {
  // @@protoc_insertion_point(field_release:SC_ResetAccount.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ResetAccount::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:SC_ResetAccount.nickname)
}

// -------------------------------------------------------------------

// CS_SetPassword

// optional string old_password = 1;
inline bool CS_SetPassword::has_old_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_SetPassword::set_has_old_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_SetPassword::clear_has_old_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_SetPassword::clear_old_password() {
  old_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_old_password();
}
inline const ::std::string& CS_SetPassword::old_password() const {
  // @@protoc_insertion_point(field_get:CS_SetPassword.old_password)
  return old_password_.GetNoArena();
}
inline void CS_SetPassword::set_old_password(const ::std::string& value) {
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_SetPassword.old_password)
}
#if LANG_CXX11
inline void CS_SetPassword::set_old_password(::std::string&& value) {
  set_has_old_password();
  old_password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_SetPassword.old_password)
}
#endif
inline void CS_SetPassword::set_old_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_SetPassword.old_password)
}
inline void CS_SetPassword::set_old_password(const char* value, size_t size) {
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_SetPassword.old_password)
}
inline ::std::string* CS_SetPassword::mutable_old_password() {
  set_has_old_password();
  // @@protoc_insertion_point(field_mutable:CS_SetPassword.old_password)
  return old_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_SetPassword::release_old_password() {
  // @@protoc_insertion_point(field_release:CS_SetPassword.old_password)
  clear_has_old_password();
  return old_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_SetPassword::set_allocated_old_password(::std::string* old_password) {
  if (old_password != NULL) {
    set_has_old_password();
  } else {
    clear_has_old_password();
  }
  old_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), old_password);
  // @@protoc_insertion_point(field_set_allocated:CS_SetPassword.old_password)
}

// optional string password = 2;
inline bool CS_SetPassword::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_SetPassword::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_SetPassword::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_SetPassword::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& CS_SetPassword::password() const {
  // @@protoc_insertion_point(field_get:CS_SetPassword.password)
  return password_.GetNoArena();
}
inline void CS_SetPassword::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_SetPassword.password)
}
#if LANG_CXX11
inline void CS_SetPassword::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_SetPassword.password)
}
#endif
inline void CS_SetPassword::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_SetPassword.password)
}
inline void CS_SetPassword::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_SetPassword.password)
}
inline ::std::string* CS_SetPassword::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CS_SetPassword.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_SetPassword::release_password() {
  // @@protoc_insertion_point(field_release:CS_SetPassword.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_SetPassword::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CS_SetPassword.password)
}

// -------------------------------------------------------------------

// SC_SetPassword

// optional int32 result = 1;
inline bool SC_SetPassword::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_SetPassword::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_SetPassword::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_SetPassword::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_SetPassword::result() const {
  // @@protoc_insertion_point(field_get:SC_SetPassword.result)
  return result_;
}
inline void SC_SetPassword::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_SetPassword.result)
}

// -------------------------------------------------------------------

// CS_SetPasswordBySms

// optional string password = 1;
inline bool CS_SetPasswordBySms::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_SetPasswordBySms::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_SetPasswordBySms::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_SetPasswordBySms::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& CS_SetPasswordBySms::password() const {
  // @@protoc_insertion_point(field_get:CS_SetPasswordBySms.password)
  return password_.GetNoArena();
}
inline void CS_SetPasswordBySms::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_SetPasswordBySms.password)
}
#if LANG_CXX11
inline void CS_SetPasswordBySms::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_SetPasswordBySms.password)
}
#endif
inline void CS_SetPasswordBySms::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_SetPasswordBySms.password)
}
inline void CS_SetPasswordBySms::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_SetPasswordBySms.password)
}
inline ::std::string* CS_SetPasswordBySms::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CS_SetPasswordBySms.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_SetPasswordBySms::release_password() {
  // @@protoc_insertion_point(field_release:CS_SetPasswordBySms.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_SetPasswordBySms::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CS_SetPasswordBySms.password)
}

// optional string sms_no = 2;
inline bool CS_SetPasswordBySms::has_sms_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_SetPasswordBySms::set_has_sms_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_SetPasswordBySms::clear_has_sms_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_SetPasswordBySms::clear_sms_no() {
  sms_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sms_no();
}
inline const ::std::string& CS_SetPasswordBySms::sms_no() const {
  // @@protoc_insertion_point(field_get:CS_SetPasswordBySms.sms_no)
  return sms_no_.GetNoArena();
}
inline void CS_SetPasswordBySms::set_sms_no(const ::std::string& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_SetPasswordBySms.sms_no)
}
#if LANG_CXX11
inline void CS_SetPasswordBySms::set_sms_no(::std::string&& value) {
  set_has_sms_no();
  sms_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_SetPasswordBySms.sms_no)
}
#endif
inline void CS_SetPasswordBySms::set_sms_no(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_SetPasswordBySms.sms_no)
}
inline void CS_SetPasswordBySms::set_sms_no(const char* value, size_t size) {
  set_has_sms_no();
  sms_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_SetPasswordBySms.sms_no)
}
inline ::std::string* CS_SetPasswordBySms::mutable_sms_no() {
  set_has_sms_no();
  // @@protoc_insertion_point(field_mutable:CS_SetPasswordBySms.sms_no)
  return sms_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_SetPasswordBySms::release_sms_no() {
  // @@protoc_insertion_point(field_release:CS_SetPasswordBySms.sms_no)
  clear_has_sms_no();
  return sms_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_SetPasswordBySms::set_allocated_sms_no(::std::string* sms_no) {
  if (sms_no != NULL) {
    set_has_sms_no();
  } else {
    clear_has_sms_no();
  }
  sms_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sms_no);
  // @@protoc_insertion_point(field_set_allocated:CS_SetPasswordBySms.sms_no)
}

// -------------------------------------------------------------------

// CS_SetNickname

// optional string nickname = 1;
inline bool CS_SetNickname::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_SetNickname::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_SetNickname::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_SetNickname::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& CS_SetNickname::nickname() const {
  // @@protoc_insertion_point(field_get:CS_SetNickname.nickname)
  return nickname_.GetNoArena();
}
inline void CS_SetNickname::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_SetNickname.nickname)
}
#if LANG_CXX11
inline void CS_SetNickname::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_SetNickname.nickname)
}
#endif
inline void CS_SetNickname::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_SetNickname.nickname)
}
inline void CS_SetNickname::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_SetNickname.nickname)
}
inline ::std::string* CS_SetNickname::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:CS_SetNickname.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_SetNickname::release_nickname() {
  // @@protoc_insertion_point(field_release:CS_SetNickname.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_SetNickname::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:CS_SetNickname.nickname)
}

// -------------------------------------------------------------------

// SC_SetNickname

// optional string nickname = 1;
inline bool SC_SetNickname::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_SetNickname::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_SetNickname::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_SetNickname::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& SC_SetNickname::nickname() const {
  // @@protoc_insertion_point(field_get:SC_SetNickname.nickname)
  return nickname_.GetNoArena();
}
inline void SC_SetNickname::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_SetNickname.nickname)
}
#if LANG_CXX11
inline void SC_SetNickname::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_SetNickname.nickname)
}
#endif
inline void SC_SetNickname::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_SetNickname.nickname)
}
inline void SC_SetNickname::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_SetNickname.nickname)
}
inline ::std::string* SC_SetNickname::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:SC_SetNickname.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_SetNickname::release_nickname() {
  // @@protoc_insertion_point(field_release:SC_SetNickname.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_SetNickname::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:SC_SetNickname.nickname)
}

// optional int32 result = 2;
inline bool SC_SetNickname::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_SetNickname::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_SetNickname::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_SetNickname::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_SetNickname::result() const {
  // @@protoc_insertion_point(field_get:SC_SetNickname.result)
  return result_;
}
inline void SC_SetNickname::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_SetNickname.result)
}

// -------------------------------------------------------------------

// CS_ChangeHeaderIcon

// optional int32 header_icon = 1 [default = 0];
inline bool CS_ChangeHeaderIcon::has_header_icon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_ChangeHeaderIcon::set_has_header_icon() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_ChangeHeaderIcon::clear_has_header_icon() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_ChangeHeaderIcon::clear_header_icon() {
  header_icon_ = 0;
  clear_has_header_icon();
}
inline ::google::protobuf::int32 CS_ChangeHeaderIcon::header_icon() const {
  // @@protoc_insertion_point(field_get:CS_ChangeHeaderIcon.header_icon)
  return header_icon_;
}
inline void CS_ChangeHeaderIcon::set_header_icon(::google::protobuf::int32 value) {
  set_has_header_icon();
  header_icon_ = value;
  // @@protoc_insertion_point(field_set:CS_ChangeHeaderIcon.header_icon)
}

// -------------------------------------------------------------------

// SC_ChangeHeaderIcon

// optional int32 header_icon = 1 [default = 0];
inline bool SC_ChangeHeaderIcon::has_header_icon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ChangeHeaderIcon::set_has_header_icon() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ChangeHeaderIcon::clear_has_header_icon() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ChangeHeaderIcon::clear_header_icon() {
  header_icon_ = 0;
  clear_has_header_icon();
}
inline ::google::protobuf::int32 SC_ChangeHeaderIcon::header_icon() const {
  // @@protoc_insertion_point(field_get:SC_ChangeHeaderIcon.header_icon)
  return header_icon_;
}
inline void SC_ChangeHeaderIcon::set_header_icon(::google::protobuf::int32 value) {
  set_has_header_icon();
  header_icon_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeHeaderIcon.header_icon)
}

// -------------------------------------------------------------------

// InviterInfo

// optional int32 guid = 1;
inline bool InviterInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InviterInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InviterInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InviterInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 InviterInfo::guid() const {
  // @@protoc_insertion_point(field_get:InviterInfo.guid)
  return guid_;
}
inline void InviterInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:InviterInfo.guid)
}

// optional string account = 2;
inline bool InviterInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviterInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviterInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviterInfo::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& InviterInfo::account() const {
  // @@protoc_insertion_point(field_get:InviterInfo.account)
  return account_.GetNoArena();
}
inline void InviterInfo::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InviterInfo.account)
}
#if LANG_CXX11
inline void InviterInfo::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InviterInfo.account)
}
#endif
inline void InviterInfo::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InviterInfo.account)
}
inline void InviterInfo::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InviterInfo.account)
}
inline ::std::string* InviterInfo::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:InviterInfo.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InviterInfo::release_account() {
  // @@protoc_insertion_point(field_release:InviterInfo.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviterInfo::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:InviterInfo.account)
}

// optional string alipay_name_y = 3;
inline bool InviterInfo::has_alipay_name_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InviterInfo::set_has_alipay_name_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InviterInfo::clear_has_alipay_name_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InviterInfo::clear_alipay_name_y() {
  alipay_name_y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name_y();
}
inline const ::std::string& InviterInfo::alipay_name_y() const {
  // @@protoc_insertion_point(field_get:InviterInfo.alipay_name_y)
  return alipay_name_y_.GetNoArena();
}
inline void InviterInfo::set_alipay_name_y(const ::std::string& value) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InviterInfo.alipay_name_y)
}
#if LANG_CXX11
inline void InviterInfo::set_alipay_name_y(::std::string&& value) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InviterInfo.alipay_name_y)
}
#endif
inline void InviterInfo::set_alipay_name_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InviterInfo.alipay_name_y)
}
inline void InviterInfo::set_alipay_name_y(const char* value, size_t size) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InviterInfo.alipay_name_y)
}
inline ::std::string* InviterInfo::mutable_alipay_name_y() {
  set_has_alipay_name_y();
  // @@protoc_insertion_point(field_mutable:InviterInfo.alipay_name_y)
  return alipay_name_y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InviterInfo::release_alipay_name_y() {
  // @@protoc_insertion_point(field_release:InviterInfo.alipay_name_y)
  clear_has_alipay_name_y();
  return alipay_name_y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviterInfo::set_allocated_alipay_name_y(::std::string* alipay_name_y) {
  if (alipay_name_y != NULL) {
    set_has_alipay_name_y();
  } else {
    clear_has_alipay_name_y();
  }
  alipay_name_y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name_y);
  // @@protoc_insertion_point(field_set_allocated:InviterInfo.alipay_name_y)
}

// optional string alipay_account_y = 4;
inline bool InviterInfo::has_alipay_account_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InviterInfo::set_has_alipay_account_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InviterInfo::clear_has_alipay_account_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InviterInfo::clear_alipay_account_y() {
  alipay_account_y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account_y();
}
inline const ::std::string& InviterInfo::alipay_account_y() const {
  // @@protoc_insertion_point(field_get:InviterInfo.alipay_account_y)
  return alipay_account_y_.GetNoArena();
}
inline void InviterInfo::set_alipay_account_y(const ::std::string& value) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InviterInfo.alipay_account_y)
}
#if LANG_CXX11
inline void InviterInfo::set_alipay_account_y(::std::string&& value) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:InviterInfo.alipay_account_y)
}
#endif
inline void InviterInfo::set_alipay_account_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InviterInfo.alipay_account_y)
}
inline void InviterInfo::set_alipay_account_y(const char* value, size_t size) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InviterInfo.alipay_account_y)
}
inline ::std::string* InviterInfo::mutable_alipay_account_y() {
  set_has_alipay_account_y();
  // @@protoc_insertion_point(field_mutable:InviterInfo.alipay_account_y)
  return alipay_account_y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InviterInfo::release_alipay_account_y() {
  // @@protoc_insertion_point(field_release:InviterInfo.alipay_account_y)
  clear_has_alipay_account_y();
  return alipay_account_y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviterInfo::set_allocated_alipay_account_y(::std::string* alipay_account_y) {
  if (alipay_account_y != NULL) {
    set_has_alipay_account_y();
  } else {
    clear_has_alipay_account_y();
  }
  alipay_account_y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account_y);
  // @@protoc_insertion_point(field_set_allocated:InviterInfo.alipay_account_y)
}

// -------------------------------------------------------------------

// CL_GetInviterInfo

// optional string invite_code = 1;
inline bool CL_GetInviterInfo::has_invite_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CL_GetInviterInfo::set_has_invite_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CL_GetInviterInfo::clear_has_invite_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CL_GetInviterInfo::clear_invite_code() {
  invite_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invite_code();
}
inline const ::std::string& CL_GetInviterInfo::invite_code() const {
  // @@protoc_insertion_point(field_get:CL_GetInviterInfo.invite_code)
  return invite_code_.GetNoArena();
}
inline void CL_GetInviterInfo::set_invite_code(const ::std::string& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CL_GetInviterInfo.invite_code)
}
#if LANG_CXX11
inline void CL_GetInviterInfo::set_invite_code(::std::string&& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CL_GetInviterInfo.invite_code)
}
#endif
inline void CL_GetInviterInfo::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CL_GetInviterInfo.invite_code)
}
inline void CL_GetInviterInfo::set_invite_code(const char* value, size_t size) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CL_GetInviterInfo.invite_code)
}
inline ::std::string* CL_GetInviterInfo::mutable_invite_code() {
  set_has_invite_code();
  // @@protoc_insertion_point(field_mutable:CL_GetInviterInfo.invite_code)
  return invite_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CL_GetInviterInfo::release_invite_code() {
  // @@protoc_insertion_point(field_release:CL_GetInviterInfo.invite_code)
  clear_has_invite_code();
  return invite_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CL_GetInviterInfo::set_allocated_invite_code(::std::string* invite_code) {
  if (invite_code != NULL) {
    set_has_invite_code();
  } else {
    clear_has_invite_code();
  }
  invite_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invite_code);
  // @@protoc_insertion_point(field_set_allocated:CL_GetInviterInfo.invite_code)
}

// optional int32 gate_session_id = 2;
inline bool CL_GetInviterInfo::has_gate_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CL_GetInviterInfo::set_has_gate_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CL_GetInviterInfo::clear_has_gate_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CL_GetInviterInfo::clear_gate_session_id() {
  gate_session_id_ = 0;
  clear_has_gate_session_id();
}
inline ::google::protobuf::int32 CL_GetInviterInfo::gate_session_id() const {
  // @@protoc_insertion_point(field_get:CL_GetInviterInfo.gate_session_id)
  return gate_session_id_;
}
inline void CL_GetInviterInfo::set_gate_session_id(::google::protobuf::int32 value) {
  set_has_gate_session_id();
  gate_session_id_ = value;
  // @@protoc_insertion_point(field_set:CL_GetInviterInfo.gate_session_id)
}

// optional int32 gate_id = 3;
inline bool CL_GetInviterInfo::has_gate_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CL_GetInviterInfo::set_has_gate_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CL_GetInviterInfo::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CL_GetInviterInfo::clear_gate_id() {
  gate_id_ = 0;
  clear_has_gate_id();
}
inline ::google::protobuf::int32 CL_GetInviterInfo::gate_id() const {
  // @@protoc_insertion_point(field_get:CL_GetInviterInfo.gate_id)
  return gate_id_;
}
inline void CL_GetInviterInfo::set_gate_id(::google::protobuf::int32 value) {
  set_has_gate_id();
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:CL_GetInviterInfo.gate_id)
}

// optional int32 guid = 4;
inline bool CL_GetInviterInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CL_GetInviterInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CL_GetInviterInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CL_GetInviterInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 CL_GetInviterInfo::guid() const {
  // @@protoc_insertion_point(field_get:CL_GetInviterInfo.guid)
  return guid_;
}
inline void CL_GetInviterInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:CL_GetInviterInfo.guid)
}

// -------------------------------------------------------------------

// LC_GetInviterInfo

// optional int32 guid = 1;
inline bool LC_GetInviterInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LC_GetInviterInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LC_GetInviterInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LC_GetInviterInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LC_GetInviterInfo::guid() const {
  // @@protoc_insertion_point(field_get:LC_GetInviterInfo.guid)
  return guid_;
}
inline void LC_GetInviterInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LC_GetInviterInfo.guid)
}

// optional string account = 2;
inline bool LC_GetInviterInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LC_GetInviterInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LC_GetInviterInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LC_GetInviterInfo::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& LC_GetInviterInfo::account() const {
  // @@protoc_insertion_point(field_get:LC_GetInviterInfo.account)
  return account_.GetNoArena();
}
inline void LC_GetInviterInfo::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_GetInviterInfo.account)
}
#if LANG_CXX11
inline void LC_GetInviterInfo::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_GetInviterInfo.account)
}
#endif
inline void LC_GetInviterInfo::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_GetInviterInfo.account)
}
inline void LC_GetInviterInfo::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_GetInviterInfo.account)
}
inline ::std::string* LC_GetInviterInfo::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:LC_GetInviterInfo.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LC_GetInviterInfo::release_account() {
  // @@protoc_insertion_point(field_release:LC_GetInviterInfo.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LC_GetInviterInfo::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:LC_GetInviterInfo.account)
}

// optional string alipay_account = 3;
inline bool LC_GetInviterInfo::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LC_GetInviterInfo::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LC_GetInviterInfo::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LC_GetInviterInfo::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
inline const ::std::string& LC_GetInviterInfo::alipay_account() const {
  // @@protoc_insertion_point(field_get:LC_GetInviterInfo.alipay_account)
  return alipay_account_.GetNoArena();
}
inline void LC_GetInviterInfo::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_GetInviterInfo.alipay_account)
}
#if LANG_CXX11
inline void LC_GetInviterInfo::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_GetInviterInfo.alipay_account)
}
#endif
inline void LC_GetInviterInfo::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_GetInviterInfo.alipay_account)
}
inline void LC_GetInviterInfo::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_GetInviterInfo.alipay_account)
}
inline ::std::string* LC_GetInviterInfo::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:LC_GetInviterInfo.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LC_GetInviterInfo::release_alipay_account() {
  // @@protoc_insertion_point(field_release:LC_GetInviterInfo.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LC_GetInviterInfo::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:LC_GetInviterInfo.alipay_account)
}

// optional string alipay_name = 4;
inline bool LC_GetInviterInfo::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LC_GetInviterInfo::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LC_GetInviterInfo::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LC_GetInviterInfo::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
inline const ::std::string& LC_GetInviterInfo::alipay_name() const {
  // @@protoc_insertion_point(field_get:LC_GetInviterInfo.alipay_name)
  return alipay_name_.GetNoArena();
}
inline void LC_GetInviterInfo::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LC_GetInviterInfo.alipay_name)
}
#if LANG_CXX11
inline void LC_GetInviterInfo::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LC_GetInviterInfo.alipay_name)
}
#endif
inline void LC_GetInviterInfo::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LC_GetInviterInfo.alipay_name)
}
inline void LC_GetInviterInfo::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LC_GetInviterInfo.alipay_name)
}
inline ::std::string* LC_GetInviterInfo::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:LC_GetInviterInfo.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LC_GetInviterInfo::release_alipay_name() {
  // @@protoc_insertion_point(field_release:LC_GetInviterInfo.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LC_GetInviterInfo::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:LC_GetInviterInfo.alipay_name)
}

// optional int32 gate_session_id = 5;
inline bool LC_GetInviterInfo::has_gate_session_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LC_GetInviterInfo::set_has_gate_session_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LC_GetInviterInfo::clear_has_gate_session_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LC_GetInviterInfo::clear_gate_session_id() {
  gate_session_id_ = 0;
  clear_has_gate_session_id();
}
inline ::google::protobuf::int32 LC_GetInviterInfo::gate_session_id() const {
  // @@protoc_insertion_point(field_get:LC_GetInviterInfo.gate_session_id)
  return gate_session_id_;
}
inline void LC_GetInviterInfo::set_gate_session_id(::google::protobuf::int32 value) {
  set_has_gate_session_id();
  gate_session_id_ = value;
  // @@protoc_insertion_point(field_set:LC_GetInviterInfo.gate_session_id)
}

// optional int32 gate_id = 6;
inline bool LC_GetInviterInfo::has_gate_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LC_GetInviterInfo::set_has_gate_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LC_GetInviterInfo::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LC_GetInviterInfo::clear_gate_id() {
  gate_id_ = 0;
  clear_has_gate_id();
}
inline ::google::protobuf::int32 LC_GetInviterInfo::gate_id() const {
  // @@protoc_insertion_point(field_get:LC_GetInviterInfo.gate_id)
  return gate_id_;
}
inline void LC_GetInviterInfo::set_gate_id(::google::protobuf::int32 value) {
  set_has_gate_id();
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:LC_GetInviterInfo.gate_id)
}

// optional int32 guid_self = 7;
inline bool LC_GetInviterInfo::has_guid_self() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LC_GetInviterInfo::set_has_guid_self() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LC_GetInviterInfo::clear_has_guid_self() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LC_GetInviterInfo::clear_guid_self() {
  guid_self_ = 0;
  clear_has_guid_self();
}
inline ::google::protobuf::int32 LC_GetInviterInfo::guid_self() const {
  // @@protoc_insertion_point(field_get:LC_GetInviterInfo.guid_self)
  return guid_self_;
}
inline void LC_GetInviterInfo::set_guid_self(::google::protobuf::int32 value) {
  set_has_guid_self();
  guid_self_ = value;
  // @@protoc_insertion_point(field_set:LC_GetInviterInfo.guid_self)
}

// -------------------------------------------------------------------

// CS_RequestPlayerInfo

// -------------------------------------------------------------------

// SC_ReplyPlayerInfo

// optional .PlayerBaseInfo pb_base_info = 1;
inline bool SC_ReplyPlayerInfo::has_pb_base_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ReplyPlayerInfo::set_has_pb_base_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ReplyPlayerInfo::clear_has_pb_base_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ReplyPlayerInfo::clear_pb_base_info() {
  if (pb_base_info_ != NULL) pb_base_info_->::PlayerBaseInfo::Clear();
  clear_has_pb_base_info();
}
inline const ::PlayerBaseInfo& SC_ReplyPlayerInfo::pb_base_info() const {
  // @@protoc_insertion_point(field_get:SC_ReplyPlayerInfo.pb_base_info)
  return pb_base_info_ != NULL ? *pb_base_info_
                         : *::PlayerBaseInfo::internal_default_instance();
}
inline ::PlayerBaseInfo* SC_ReplyPlayerInfo::mutable_pb_base_info() {
  set_has_pb_base_info();
  if (pb_base_info_ == NULL) {
    pb_base_info_ = new ::PlayerBaseInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_ReplyPlayerInfo.pb_base_info)
  return pb_base_info_;
}
inline ::PlayerBaseInfo* SC_ReplyPlayerInfo::release_pb_base_info() {
  // @@protoc_insertion_point(field_release:SC_ReplyPlayerInfo.pb_base_info)
  clear_has_pb_base_info();
  ::PlayerBaseInfo* temp = pb_base_info_;
  pb_base_info_ = NULL;
  return temp;
}
inline void SC_ReplyPlayerInfo::set_allocated_pb_base_info(::PlayerBaseInfo* pb_base_info) {
  delete pb_base_info_;
  pb_base_info_ = pb_base_info;
  if (pb_base_info) {
    set_has_pb_base_info();
  } else {
    clear_has_pb_base_info();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_ReplyPlayerInfo.pb_base_info)
}

// optional .ItemBagInfo pb_item_bag = 2;
inline bool SC_ReplyPlayerInfo::has_pb_item_bag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ReplyPlayerInfo::set_has_pb_item_bag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ReplyPlayerInfo::clear_has_pb_item_bag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ReplyPlayerInfo::clear_pb_item_bag() {
  if (pb_item_bag_ != NULL) pb_item_bag_->::ItemBagInfo::Clear();
  clear_has_pb_item_bag();
}
inline const ::ItemBagInfo& SC_ReplyPlayerInfo::pb_item_bag() const {
  // @@protoc_insertion_point(field_get:SC_ReplyPlayerInfo.pb_item_bag)
  return pb_item_bag_ != NULL ? *pb_item_bag_
                         : *::ItemBagInfo::internal_default_instance();
}
inline ::ItemBagInfo* SC_ReplyPlayerInfo::mutable_pb_item_bag() {
  set_has_pb_item_bag();
  if (pb_item_bag_ == NULL) {
    pb_item_bag_ = new ::ItemBagInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_ReplyPlayerInfo.pb_item_bag)
  return pb_item_bag_;
}
inline ::ItemBagInfo* SC_ReplyPlayerInfo::release_pb_item_bag() {
  // @@protoc_insertion_point(field_release:SC_ReplyPlayerInfo.pb_item_bag)
  clear_has_pb_item_bag();
  ::ItemBagInfo* temp = pb_item_bag_;
  pb_item_bag_ = NULL;
  return temp;
}
inline void SC_ReplyPlayerInfo::set_allocated_pb_item_bag(::ItemBagInfo* pb_item_bag) {
  delete pb_item_bag_;
  pb_item_bag_ = pb_item_bag;
  if (pb_item_bag) {
    set_has_pb_item_bag();
  } else {
    clear_has_pb_item_bag();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_ReplyPlayerInfo.pb_item_bag)
}

// optional .MailListInfo pb_mail_list = 3;
inline bool SC_ReplyPlayerInfo::has_pb_mail_list() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_ReplyPlayerInfo::set_has_pb_mail_list() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_ReplyPlayerInfo::clear_has_pb_mail_list() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_ReplyPlayerInfo::clear_pb_mail_list() {
  if (pb_mail_list_ != NULL) pb_mail_list_->::MailListInfo::Clear();
  clear_has_pb_mail_list();
}
inline const ::MailListInfo& SC_ReplyPlayerInfo::pb_mail_list() const {
  // @@protoc_insertion_point(field_get:SC_ReplyPlayerInfo.pb_mail_list)
  return pb_mail_list_ != NULL ? *pb_mail_list_
                         : *::MailListInfo::internal_default_instance();
}
inline ::MailListInfo* SC_ReplyPlayerInfo::mutable_pb_mail_list() {
  set_has_pb_mail_list();
  if (pb_mail_list_ == NULL) {
    pb_mail_list_ = new ::MailListInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_ReplyPlayerInfo.pb_mail_list)
  return pb_mail_list_;
}
inline ::MailListInfo* SC_ReplyPlayerInfo::release_pb_mail_list() {
  // @@protoc_insertion_point(field_release:SC_ReplyPlayerInfo.pb_mail_list)
  clear_has_pb_mail_list();
  ::MailListInfo* temp = pb_mail_list_;
  pb_mail_list_ = NULL;
  return temp;
}
inline void SC_ReplyPlayerInfo::set_allocated_pb_mail_list(::MailListInfo* pb_mail_list) {
  delete pb_mail_list_;
  pb_mail_list_ = pb_mail_list;
  if (pb_mail_list) {
    set_has_pb_mail_list();
  } else {
    clear_has_pb_mail_list();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_ReplyPlayerInfo.pb_mail_list)
}

// -------------------------------------------------------------------

// GameMsg

// optional int32 first_game_type = 1;
inline bool GameMsg::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameMsg::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameMsg::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameMsg::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 GameMsg::first_game_type() const {
  // @@protoc_insertion_point(field_get:GameMsg.first_game_type)
  return first_game_type_;
}
inline void GameMsg::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.first_game_type)
}

// optional int32 second_game_type = 2;
inline bool GameMsg::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameMsg::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameMsg::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameMsg::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
inline ::google::protobuf::int32 GameMsg::second_game_type() const {
  // @@protoc_insertion_point(field_get:GameMsg.second_game_type)
  return second_game_type_;
}
inline void GameMsg::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.second_game_type)
}

// optional int32 room_id = 3;
inline bool GameMsg::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameMsg::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameMsg::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameMsg::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 GameMsg::room_id() const {
  // @@protoc_insertion_point(field_get:GameMsg.room_id)
  return room_id_;
}
inline void GameMsg::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.room_id)
}

// optional int32 table_id = 4;
inline bool GameMsg::has_table_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameMsg::set_has_table_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameMsg::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameMsg::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 GameMsg::table_id() const {
  // @@protoc_insertion_point(field_get:GameMsg.table_id)
  return table_id_;
}
inline void GameMsg::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.table_id)
}

// optional int32 chair_id = 5;
inline bool GameMsg::has_chair_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameMsg::set_has_chair_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameMsg::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameMsg::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 GameMsg::chair_id() const {
  // @@protoc_insertion_point(field_get:GameMsg.chair_id)
  return chair_id_;
}
inline void GameMsg::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.chair_id)
}

// -------------------------------------------------------------------

// SC_ReplyPlayerInfoComplete

// optional .GameMsg pb_gmMessage = 1;
inline bool SC_ReplyPlayerInfoComplete::has_pb_gmmessage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ReplyPlayerInfoComplete::set_has_pb_gmmessage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ReplyPlayerInfoComplete::clear_has_pb_gmmessage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ReplyPlayerInfoComplete::clear_pb_gmmessage() {
  if (pb_gmmessage_ != NULL) pb_gmmessage_->::GameMsg::Clear();
  clear_has_pb_gmmessage();
}
inline const ::GameMsg& SC_ReplyPlayerInfoComplete::pb_gmmessage() const {
  // @@protoc_insertion_point(field_get:SC_ReplyPlayerInfoComplete.pb_gmMessage)
  return pb_gmmessage_ != NULL ? *pb_gmmessage_
                         : *::GameMsg::internal_default_instance();
}
inline ::GameMsg* SC_ReplyPlayerInfoComplete::mutable_pb_gmmessage() {
  set_has_pb_gmmessage();
  if (pb_gmmessage_ == NULL) {
    pb_gmmessage_ = new ::GameMsg;
  }
  // @@protoc_insertion_point(field_mutable:SC_ReplyPlayerInfoComplete.pb_gmMessage)
  return pb_gmmessage_;
}
inline ::GameMsg* SC_ReplyPlayerInfoComplete::release_pb_gmmessage() {
  // @@protoc_insertion_point(field_release:SC_ReplyPlayerInfoComplete.pb_gmMessage)
  clear_has_pb_gmmessage();
  ::GameMsg* temp = pb_gmmessage_;
  pb_gmmessage_ = NULL;
  return temp;
}
inline void SC_ReplyPlayerInfoComplete::set_allocated_pb_gmmessage(::GameMsg* pb_gmmessage) {
  delete pb_gmmessage_;
  pb_gmmessage_ = pb_gmmessage;
  if (pb_gmmessage) {
    set_has_pb_gmmessage();
  } else {
    clear_has_pb_gmmessage();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_ReplyPlayerInfoComplete.pb_gmMessage)
}

// -------------------------------------------------------------------

// CS_LoginValidatebox

// repeated int32 answer = 2;
inline int CS_LoginValidatebox::answer_size() const {
  return answer_.size();
}
inline void CS_LoginValidatebox::clear_answer() {
  answer_.Clear();
}
inline ::google::protobuf::int32 CS_LoginValidatebox::answer(int index) const {
  // @@protoc_insertion_point(field_get:CS_LoginValidatebox.answer)
  return answer_.Get(index);
}
inline void CS_LoginValidatebox::set_answer(int index, ::google::protobuf::int32 value) {
  answer_.Set(index, value);
  // @@protoc_insertion_point(field_set:CS_LoginValidatebox.answer)
}
inline void CS_LoginValidatebox::add_answer(::google::protobuf::int32 value) {
  answer_.Add(value);
  // @@protoc_insertion_point(field_add:CS_LoginValidatebox.answer)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CS_LoginValidatebox::answer() const {
  // @@protoc_insertion_point(field_list:CS_LoginValidatebox.answer)
  return answer_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CS_LoginValidatebox::mutable_answer() {
  // @@protoc_insertion_point(field_mutable_list:CS_LoginValidatebox.answer)
  return &answer_;
}

// -------------------------------------------------------------------

// SC_LoginValidatebox

// optional int32 result = 1;
inline bool SC_LoginValidatebox::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_LoginValidatebox::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_LoginValidatebox::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_LoginValidatebox::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_LoginValidatebox::result() const {
  // @@protoc_insertion_point(field_get:SC_LoginValidatebox.result)
  return result_;
}
inline void SC_LoginValidatebox::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_LoginValidatebox.result)
}

// optional .LoginValidatebox pb_validatebox = 2;
inline bool SC_LoginValidatebox::has_pb_validatebox() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LoginValidatebox::set_has_pb_validatebox() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LoginValidatebox::clear_has_pb_validatebox() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LoginValidatebox::clear_pb_validatebox() {
  if (pb_validatebox_ != NULL) pb_validatebox_->::LoginValidatebox::Clear();
  clear_has_pb_validatebox();
}
inline const ::LoginValidatebox& SC_LoginValidatebox::pb_validatebox() const {
  // @@protoc_insertion_point(field_get:SC_LoginValidatebox.pb_validatebox)
  return pb_validatebox_ != NULL ? *pb_validatebox_
                         : *::LoginValidatebox::internal_default_instance();
}
inline ::LoginValidatebox* SC_LoginValidatebox::mutable_pb_validatebox() {
  set_has_pb_validatebox();
  if (pb_validatebox_ == NULL) {
    pb_validatebox_ = new ::LoginValidatebox;
  }
  // @@protoc_insertion_point(field_mutable:SC_LoginValidatebox.pb_validatebox)
  return pb_validatebox_;
}
inline ::LoginValidatebox* SC_LoginValidatebox::release_pb_validatebox() {
  // @@protoc_insertion_point(field_release:SC_LoginValidatebox.pb_validatebox)
  clear_has_pb_validatebox();
  ::LoginValidatebox* temp = pb_validatebox_;
  pb_validatebox_ = NULL;
  return temp;
}
inline void SC_LoginValidatebox::set_allocated_pb_validatebox(::LoginValidatebox* pb_validatebox) {
  delete pb_validatebox_;
  pb_validatebox_ = pb_validatebox;
  if (pb_validatebox) {
    set_has_pb_validatebox();
  } else {
    clear_has_pb_validatebox();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_LoginValidatebox.pb_validatebox)
}

// -------------------------------------------------------------------

// CS_ChangeGame

// optional int32 first_game_type = 1;
inline bool CS_ChangeGame::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_ChangeGame::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_ChangeGame::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_ChangeGame::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 CS_ChangeGame::first_game_type() const {
  // @@protoc_insertion_point(field_get:CS_ChangeGame.first_game_type)
  return first_game_type_;
}
inline void CS_ChangeGame::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:CS_ChangeGame.first_game_type)
}

// optional int32 second_game_type = 2;
inline bool CS_ChangeGame::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_ChangeGame::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_ChangeGame::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_ChangeGame::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
inline ::google::protobuf::int32 CS_ChangeGame::second_game_type() const {
  // @@protoc_insertion_point(field_get:CS_ChangeGame.second_game_type)
  return second_game_type_;
}
inline void CS_ChangeGame::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:CS_ChangeGame.second_game_type)
}

// optional int32 private_room_opt = 3;
inline bool CS_ChangeGame::has_private_room_opt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CS_ChangeGame::set_has_private_room_opt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CS_ChangeGame::clear_has_private_room_opt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CS_ChangeGame::clear_private_room_opt() {
  private_room_opt_ = 0;
  clear_has_private_room_opt();
}
inline ::google::protobuf::int32 CS_ChangeGame::private_room_opt() const {
  // @@protoc_insertion_point(field_get:CS_ChangeGame.private_room_opt)
  return private_room_opt_;
}
inline void CS_ChangeGame::set_private_room_opt(::google::protobuf::int32 value) {
  set_has_private_room_opt();
  private_room_opt_ = value;
  // @@protoc_insertion_point(field_set:CS_ChangeGame.private_room_opt)
}

// optional int32 owner_guid = 4;
inline bool CS_ChangeGame::has_owner_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CS_ChangeGame::set_has_owner_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CS_ChangeGame::clear_has_owner_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CS_ChangeGame::clear_owner_guid() {
  owner_guid_ = 0;
  clear_has_owner_guid();
}
inline ::google::protobuf::int32 CS_ChangeGame::owner_guid() const {
  // @@protoc_insertion_point(field_get:CS_ChangeGame.owner_guid)
  return owner_guid_;
}
inline void CS_ChangeGame::set_owner_guid(::google::protobuf::int32 value) {
  set_has_owner_guid();
  owner_guid_ = value;
  // @@protoc_insertion_point(field_set:CS_ChangeGame.owner_guid)
}

// optional int32 private_room_chair_count = 5;
inline bool CS_ChangeGame::has_private_room_chair_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CS_ChangeGame::set_has_private_room_chair_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CS_ChangeGame::clear_has_private_room_chair_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CS_ChangeGame::clear_private_room_chair_count() {
  private_room_chair_count_ = 0;
  clear_has_private_room_chair_count();
}
inline ::google::protobuf::int32 CS_ChangeGame::private_room_chair_count() const {
  // @@protoc_insertion_point(field_get:CS_ChangeGame.private_room_chair_count)
  return private_room_chair_count_;
}
inline void CS_ChangeGame::set_private_room_chair_count(::google::protobuf::int32 value) {
  set_has_private_room_chair_count();
  private_room_chair_count_ = value;
  // @@protoc_insertion_point(field_set:CS_ChangeGame.private_room_chair_count)
}

// optional int32 private_room_score_type = 6;
inline bool CS_ChangeGame::has_private_room_score_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CS_ChangeGame::set_has_private_room_score_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CS_ChangeGame::clear_has_private_room_score_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CS_ChangeGame::clear_private_room_score_type() {
  private_room_score_type_ = 0;
  clear_has_private_room_score_type();
}
inline ::google::protobuf::int32 CS_ChangeGame::private_room_score_type() const {
  // @@protoc_insertion_point(field_get:CS_ChangeGame.private_room_score_type)
  return private_room_score_type_;
}
inline void CS_ChangeGame::set_private_room_score_type(::google::protobuf::int32 value) {
  set_has_private_room_score_type();
  private_room_score_type_ = value;
  // @@protoc_insertion_point(field_set:CS_ChangeGame.private_room_score_type)
}

// -------------------------------------------------------------------

// CS_JoinPrivateRoom

// optional int32 owner_guid = 1;
inline bool CS_JoinPrivateRoom::has_owner_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_JoinPrivateRoom::set_has_owner_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_JoinPrivateRoom::clear_has_owner_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_JoinPrivateRoom::clear_owner_guid() {
  owner_guid_ = 0;
  clear_has_owner_guid();
}
inline ::google::protobuf::int32 CS_JoinPrivateRoom::owner_guid() const {
  // @@protoc_insertion_point(field_get:CS_JoinPrivateRoom.owner_guid)
  return owner_guid_;
}
inline void CS_JoinPrivateRoom::set_owner_guid(::google::protobuf::int32 value) {
  set_has_owner_guid();
  owner_guid_ = value;
  // @@protoc_insertion_point(field_set:CS_JoinPrivateRoom.owner_guid)
}

// -------------------------------------------------------------------

// SC_JoinPrivateRoomFailed

// optional int32 owner_guid = 1;
inline bool SC_JoinPrivateRoomFailed::has_owner_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_JoinPrivateRoomFailed::set_has_owner_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_JoinPrivateRoomFailed::clear_has_owner_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_JoinPrivateRoomFailed::clear_owner_guid() {
  owner_guid_ = 0;
  clear_has_owner_guid();
}
inline ::google::protobuf::int32 SC_JoinPrivateRoomFailed::owner_guid() const {
  // @@protoc_insertion_point(field_get:SC_JoinPrivateRoomFailed.owner_guid)
  return owner_guid_;
}
inline void SC_JoinPrivateRoomFailed::set_owner_guid(::google::protobuf::int32 value) {
  set_has_owner_guid();
  owner_guid_ = value;
  // @@protoc_insertion_point(field_set:SC_JoinPrivateRoomFailed.owner_guid)
}

// optional int32 result = 2;
inline bool SC_JoinPrivateRoomFailed::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_JoinPrivateRoomFailed::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_JoinPrivateRoomFailed::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_JoinPrivateRoomFailed::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_JoinPrivateRoomFailed::result() const {
  // @@protoc_insertion_point(field_get:SC_JoinPrivateRoomFailed.result)
  return result_;
}
inline void SC_JoinPrivateRoomFailed::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_JoinPrivateRoomFailed.result)
}

// -------------------------------------------------------------------

// CS_PrivateRoomInfo

// -------------------------------------------------------------------

// PrivateRoomInfo

// optional int32 first_game_type = 1;
inline bool PrivateRoomInfo::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PrivateRoomInfo::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PrivateRoomInfo::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PrivateRoomInfo::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 PrivateRoomInfo::first_game_type() const {
  // @@protoc_insertion_point(field_get:PrivateRoomInfo.first_game_type)
  return first_game_type_;
}
inline void PrivateRoomInfo::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:PrivateRoomInfo.first_game_type)
}

// repeated int32 table_count = 2;
inline int PrivateRoomInfo::table_count_size() const {
  return table_count_.size();
}
inline void PrivateRoomInfo::clear_table_count() {
  table_count_.Clear();
}
inline ::google::protobuf::int32 PrivateRoomInfo::table_count(int index) const {
  // @@protoc_insertion_point(field_get:PrivateRoomInfo.table_count)
  return table_count_.Get(index);
}
inline void PrivateRoomInfo::set_table_count(int index, ::google::protobuf::int32 value) {
  table_count_.Set(index, value);
  // @@protoc_insertion_point(field_set:PrivateRoomInfo.table_count)
}
inline void PrivateRoomInfo::add_table_count(::google::protobuf::int32 value) {
  table_count_.Add(value);
  // @@protoc_insertion_point(field_add:PrivateRoomInfo.table_count)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PrivateRoomInfo::table_count() const {
  // @@protoc_insertion_point(field_list:PrivateRoomInfo.table_count)
  return table_count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PrivateRoomInfo::mutable_table_count() {
  // @@protoc_insertion_point(field_mutable_list:PrivateRoomInfo.table_count)
  return &table_count_;
}

// repeated int32 cell_money = 3;
inline int PrivateRoomInfo::cell_money_size() const {
  return cell_money_.size();
}
inline void PrivateRoomInfo::clear_cell_money() {
  cell_money_.Clear();
}
inline ::google::protobuf::int32 PrivateRoomInfo::cell_money(int index) const {
  // @@protoc_insertion_point(field_get:PrivateRoomInfo.cell_money)
  return cell_money_.Get(index);
}
inline void PrivateRoomInfo::set_cell_money(int index, ::google::protobuf::int32 value) {
  cell_money_.Set(index, value);
  // @@protoc_insertion_point(field_set:PrivateRoomInfo.cell_money)
}
inline void PrivateRoomInfo::add_cell_money(::google::protobuf::int32 value) {
  cell_money_.Add(value);
  // @@protoc_insertion_point(field_add:PrivateRoomInfo.cell_money)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PrivateRoomInfo::cell_money() const {
  // @@protoc_insertion_point(field_list:PrivateRoomInfo.cell_money)
  return cell_money_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PrivateRoomInfo::mutable_cell_money() {
  // @@protoc_insertion_point(field_mutable_list:PrivateRoomInfo.cell_money)
  return &cell_money_;
}

// -------------------------------------------------------------------

// SC_PrivateRoomInfo

// repeated .PrivateRoomInfo pb_info = 1;
inline int SC_PrivateRoomInfo::pb_info_size() const {
  return pb_info_.size();
}
inline void SC_PrivateRoomInfo::clear_pb_info() {
  pb_info_.Clear();
}
inline const ::PrivateRoomInfo& SC_PrivateRoomInfo::pb_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_PrivateRoomInfo.pb_info)
  return pb_info_.Get(index);
}
inline ::PrivateRoomInfo* SC_PrivateRoomInfo::mutable_pb_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_PrivateRoomInfo.pb_info)
  return pb_info_.Mutable(index);
}
inline ::PrivateRoomInfo* SC_PrivateRoomInfo::add_pb_info() {
  // @@protoc_insertion_point(field_add:SC_PrivateRoomInfo.pb_info)
  return pb_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PrivateRoomInfo >*
SC_PrivateRoomInfo::mutable_pb_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_PrivateRoomInfo.pb_info)
  return &pb_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PrivateRoomInfo >&
SC_PrivateRoomInfo::pb_info() const {
  // @@protoc_insertion_point(field_list:SC_PrivateRoomInfo.pb_info)
  return pb_info_;
}

// -------------------------------------------------------------------

// GC_GameServerCfg

// repeated .GameClientRoomListCfg pb_cfg = 1;
inline int GC_GameServerCfg::pb_cfg_size() const {
  return pb_cfg_.size();
}
inline void GC_GameServerCfg::clear_pb_cfg() {
  pb_cfg_.Clear();
}
inline const ::GameClientRoomListCfg& GC_GameServerCfg::pb_cfg(int index) const {
  // @@protoc_insertion_point(field_get:GC_GameServerCfg.pb_cfg)
  return pb_cfg_.Get(index);
}
inline ::GameClientRoomListCfg* GC_GameServerCfg::mutable_pb_cfg(int index) {
  // @@protoc_insertion_point(field_mutable:GC_GameServerCfg.pb_cfg)
  return pb_cfg_.Mutable(index);
}
inline ::GameClientRoomListCfg* GC_GameServerCfg::add_pb_cfg() {
  // @@protoc_insertion_point(field_add:GC_GameServerCfg.pb_cfg)
  return pb_cfg_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg >*
GC_GameServerCfg::mutable_pb_cfg() {
  // @@protoc_insertion_point(field_mutable_list:GC_GameServerCfg.pb_cfg)
  return &pb_cfg_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg >&
GC_GameServerCfg::pb_cfg() const {
  // @@protoc_insertion_point(field_list:GC_GameServerCfg.pb_cfg)
  return pb_cfg_;
}

// -------------------------------------------------------------------

// CG_GameServerCfg

// -------------------------------------------------------------------

// CS_BankSetPassword

// optional string password = 1;
inline bool CS_BankSetPassword::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_BankSetPassword::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_BankSetPassword::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_BankSetPassword::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& CS_BankSetPassword::password() const {
  // @@protoc_insertion_point(field_get:CS_BankSetPassword.password)
  return password_.GetNoArena();
}
inline void CS_BankSetPassword::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_BankSetPassword.password)
}
#if LANG_CXX11
inline void CS_BankSetPassword::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_BankSetPassword.password)
}
#endif
inline void CS_BankSetPassword::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_BankSetPassword.password)
}
inline void CS_BankSetPassword::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_BankSetPassword.password)
}
inline ::std::string* CS_BankSetPassword::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CS_BankSetPassword.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_BankSetPassword::release_password() {
  // @@protoc_insertion_point(field_release:CS_BankSetPassword.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_BankSetPassword::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CS_BankSetPassword.password)
}

// -------------------------------------------------------------------

// SC_BankSetPassword

// optional int32 result = 1;
inline bool SC_BankSetPassword::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_BankSetPassword::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_BankSetPassword::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_BankSetPassword::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_BankSetPassword::result() const {
  // @@protoc_insertion_point(field_get:SC_BankSetPassword.result)
  return result_;
}
inline void SC_BankSetPassword::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BankSetPassword.result)
}

// -------------------------------------------------------------------

// CS_BankChangePassword

// optional string old_password = 1;
inline bool CS_BankChangePassword::has_old_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_BankChangePassword::set_has_old_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_BankChangePassword::clear_has_old_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_BankChangePassword::clear_old_password() {
  old_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_old_password();
}
inline const ::std::string& CS_BankChangePassword::old_password() const {
  // @@protoc_insertion_point(field_get:CS_BankChangePassword.old_password)
  return old_password_.GetNoArena();
}
inline void CS_BankChangePassword::set_old_password(const ::std::string& value) {
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_BankChangePassword.old_password)
}
#if LANG_CXX11
inline void CS_BankChangePassword::set_old_password(::std::string&& value) {
  set_has_old_password();
  old_password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_BankChangePassword.old_password)
}
#endif
inline void CS_BankChangePassword::set_old_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_BankChangePassword.old_password)
}
inline void CS_BankChangePassword::set_old_password(const char* value, size_t size) {
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_BankChangePassword.old_password)
}
inline ::std::string* CS_BankChangePassword::mutable_old_password() {
  set_has_old_password();
  // @@protoc_insertion_point(field_mutable:CS_BankChangePassword.old_password)
  return old_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_BankChangePassword::release_old_password() {
  // @@protoc_insertion_point(field_release:CS_BankChangePassword.old_password)
  clear_has_old_password();
  return old_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_BankChangePassword::set_allocated_old_password(::std::string* old_password) {
  if (old_password != NULL) {
    set_has_old_password();
  } else {
    clear_has_old_password();
  }
  old_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), old_password);
  // @@protoc_insertion_point(field_set_allocated:CS_BankChangePassword.old_password)
}

// optional string password = 2;
inline bool CS_BankChangePassword::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_BankChangePassword::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_BankChangePassword::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_BankChangePassword::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& CS_BankChangePassword::password() const {
  // @@protoc_insertion_point(field_get:CS_BankChangePassword.password)
  return password_.GetNoArena();
}
inline void CS_BankChangePassword::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_BankChangePassword.password)
}
#if LANG_CXX11
inline void CS_BankChangePassword::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_BankChangePassword.password)
}
#endif
inline void CS_BankChangePassword::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_BankChangePassword.password)
}
inline void CS_BankChangePassword::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_BankChangePassword.password)
}
inline ::std::string* CS_BankChangePassword::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CS_BankChangePassword.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_BankChangePassword::release_password() {
  // @@protoc_insertion_point(field_release:CS_BankChangePassword.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_BankChangePassword::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CS_BankChangePassword.password)
}

// -------------------------------------------------------------------

// SC_BankChangePassword

// optional int32 result = 1;
inline bool SC_BankChangePassword::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_BankChangePassword::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_BankChangePassword::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_BankChangePassword::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_BankChangePassword::result() const {
  // @@protoc_insertion_point(field_get:SC_BankChangePassword.result)
  return result_;
}
inline void SC_BankChangePassword::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BankChangePassword.result)
}

// -------------------------------------------------------------------

// CS_BankLogin

// optional string password = 1;
inline bool CS_BankLogin::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_BankLogin::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_BankLogin::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_BankLogin::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& CS_BankLogin::password() const {
  // @@protoc_insertion_point(field_get:CS_BankLogin.password)
  return password_.GetNoArena();
}
inline void CS_BankLogin::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_BankLogin.password)
}
#if LANG_CXX11
inline void CS_BankLogin::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_BankLogin.password)
}
#endif
inline void CS_BankLogin::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_BankLogin.password)
}
inline void CS_BankLogin::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_BankLogin.password)
}
inline ::std::string* CS_BankLogin::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CS_BankLogin.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_BankLogin::release_password() {
  // @@protoc_insertion_point(field_release:CS_BankLogin.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_BankLogin::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CS_BankLogin.password)
}

// -------------------------------------------------------------------

// SC_BankLogin

// optional int32 result = 1;
inline bool SC_BankLogin::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_BankLogin::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_BankLogin::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_BankLogin::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_BankLogin::result() const {
  // @@protoc_insertion_point(field_get:SC_BankLogin.result)
  return result_;
}
inline void SC_BankLogin::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BankLogin.result)
}

// -------------------------------------------------------------------

// CS_BankDeposit

// optional int64 money = 1;
inline bool CS_BankDeposit::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_BankDeposit::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_BankDeposit::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_BankDeposit::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 CS_BankDeposit::money() const {
  // @@protoc_insertion_point(field_get:CS_BankDeposit.money)
  return money_;
}
inline void CS_BankDeposit::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CS_BankDeposit.money)
}

// -------------------------------------------------------------------

// SC_BankDeposit

// optional int32 result = 1;
inline bool SC_BankDeposit::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_BankDeposit::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_BankDeposit::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_BankDeposit::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_BankDeposit::result() const {
  // @@protoc_insertion_point(field_get:SC_BankDeposit.result)
  return result_;
}
inline void SC_BankDeposit::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BankDeposit.result)
}

// optional int64 money = 2;
inline bool SC_BankDeposit::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_BankDeposit::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_BankDeposit::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_BankDeposit::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SC_BankDeposit::money() const {
  // @@protoc_insertion_point(field_get:SC_BankDeposit.money)
  return money_;
}
inline void SC_BankDeposit::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_BankDeposit.money)
}

// -------------------------------------------------------------------

// CS_BankDraw

// optional int64 money = 1;
inline bool CS_BankDraw::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_BankDraw::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_BankDraw::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_BankDraw::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 CS_BankDraw::money() const {
  // @@protoc_insertion_point(field_get:CS_BankDraw.money)
  return money_;
}
inline void CS_BankDraw::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CS_BankDraw.money)
}

// -------------------------------------------------------------------

// SC_BankDraw

// optional int32 result = 1;
inline bool SC_BankDraw::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_BankDraw::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_BankDraw::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_BankDraw::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_BankDraw::result() const {
  // @@protoc_insertion_point(field_get:SC_BankDraw.result)
  return result_;
}
inline void SC_BankDraw::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BankDraw.result)
}

// optional int64 money = 2;
inline bool SC_BankDraw::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_BankDraw::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_BankDraw::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_BankDraw::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SC_BankDraw::money() const {
  // @@protoc_insertion_point(field_get:SC_BankDraw.money)
  return money_;
}
inline void SC_BankDraw::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_BankDraw.money)
}

// -------------------------------------------------------------------

// SC_NotifyBankStatement

// optional .BankStatement pb_statement = 1;
inline bool SC_NotifyBankStatement::has_pb_statement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_NotifyBankStatement::set_has_pb_statement() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_NotifyBankStatement::clear_has_pb_statement() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_NotifyBankStatement::clear_pb_statement() {
  if (pb_statement_ != NULL) pb_statement_->::BankStatement::Clear();
  clear_has_pb_statement();
}
inline const ::BankStatement& SC_NotifyBankStatement::pb_statement() const {
  // @@protoc_insertion_point(field_get:SC_NotifyBankStatement.pb_statement)
  return pb_statement_ != NULL ? *pb_statement_
                         : *::BankStatement::internal_default_instance();
}
inline ::BankStatement* SC_NotifyBankStatement::mutable_pb_statement() {
  set_has_pb_statement();
  if (pb_statement_ == NULL) {
    pb_statement_ = new ::BankStatement;
  }
  // @@protoc_insertion_point(field_mutable:SC_NotifyBankStatement.pb_statement)
  return pb_statement_;
}
inline ::BankStatement* SC_NotifyBankStatement::release_pb_statement() {
  // @@protoc_insertion_point(field_release:SC_NotifyBankStatement.pb_statement)
  clear_has_pb_statement();
  ::BankStatement* temp = pb_statement_;
  pb_statement_ = NULL;
  return temp;
}
inline void SC_NotifyBankStatement::set_allocated_pb_statement(::BankStatement* pb_statement) {
  delete pb_statement_;
  pb_statement_ = pb_statement;
  if (pb_statement) {
    set_has_pb_statement();
  } else {
    clear_has_pb_statement();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_NotifyBankStatement.pb_statement)
}

// -------------------------------------------------------------------

// CS_BankStatement

// optional int64 cur_serial = 1;
inline bool CS_BankStatement::has_cur_serial() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_BankStatement::set_has_cur_serial() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_BankStatement::clear_has_cur_serial() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_BankStatement::clear_cur_serial() {
  cur_serial_ = GOOGLE_LONGLONG(0);
  clear_has_cur_serial();
}
inline ::google::protobuf::int64 CS_BankStatement::cur_serial() const {
  // @@protoc_insertion_point(field_get:CS_BankStatement.cur_serial)
  return cur_serial_;
}
inline void CS_BankStatement::set_cur_serial(::google::protobuf::int64 value) {
  set_has_cur_serial();
  cur_serial_ = value;
  // @@protoc_insertion_point(field_set:CS_BankStatement.cur_serial)
}

// -------------------------------------------------------------------

// SC_BankStatement

// repeated .BankStatement pb_statement = 1;
inline int SC_BankStatement::pb_statement_size() const {
  return pb_statement_.size();
}
inline void SC_BankStatement::clear_pb_statement() {
  pb_statement_.Clear();
}
inline const ::BankStatement& SC_BankStatement::pb_statement(int index) const {
  // @@protoc_insertion_point(field_get:SC_BankStatement.pb_statement)
  return pb_statement_.Get(index);
}
inline ::BankStatement* SC_BankStatement::mutable_pb_statement(int index) {
  // @@protoc_insertion_point(field_mutable:SC_BankStatement.pb_statement)
  return pb_statement_.Mutable(index);
}
inline ::BankStatement* SC_BankStatement::add_pb_statement() {
  // @@protoc_insertion_point(field_add:SC_BankStatement.pb_statement)
  return pb_statement_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BankStatement >*
SC_BankStatement::mutable_pb_statement() {
  // @@protoc_insertion_point(field_mutable_list:SC_BankStatement.pb_statement)
  return &pb_statement_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BankStatement >&
SC_BankStatement::pb_statement() const {
  // @@protoc_insertion_point(field_list:SC_BankStatement.pb_statement)
  return pb_statement_;
}

// -------------------------------------------------------------------

// CS_BankTransfer

// optional string account = 1;
inline bool CS_BankTransfer::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_BankTransfer::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_BankTransfer::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_BankTransfer::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& CS_BankTransfer::account() const {
  // @@protoc_insertion_point(field_get:CS_BankTransfer.account)
  return account_.GetNoArena();
}
inline void CS_BankTransfer::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_BankTransfer.account)
}
#if LANG_CXX11
inline void CS_BankTransfer::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_BankTransfer.account)
}
#endif
inline void CS_BankTransfer::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_BankTransfer.account)
}
inline void CS_BankTransfer::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_BankTransfer.account)
}
inline ::std::string* CS_BankTransfer::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:CS_BankTransfer.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_BankTransfer::release_account() {
  // @@protoc_insertion_point(field_release:CS_BankTransfer.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_BankTransfer::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:CS_BankTransfer.account)
}

// optional int64 money = 2;
inline bool CS_BankTransfer::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_BankTransfer::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_BankTransfer::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_BankTransfer::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 CS_BankTransfer::money() const {
  // @@protoc_insertion_point(field_get:CS_BankTransfer.money)
  return money_;
}
inline void CS_BankTransfer::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CS_BankTransfer.money)
}

// -------------------------------------------------------------------

// SC_BankTransfer

// optional int32 result = 1;
inline bool SC_BankTransfer::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_BankTransfer::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_BankTransfer::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_BankTransfer::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_BankTransfer::result() const {
  // @@protoc_insertion_point(field_get:SC_BankTransfer.result)
  return result_;
}
inline void SC_BankTransfer::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BankTransfer.result)
}

// optional int64 money = 2;
inline bool SC_BankTransfer::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_BankTransfer::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_BankTransfer::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_BankTransfer::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SC_BankTransfer::money() const {
  // @@protoc_insertion_point(field_get:SC_BankTransfer.money)
  return money_;
}
inline void SC_BankTransfer::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_BankTransfer.money)
}

// optional int64 bank = 3;
inline bool SC_BankTransfer::has_bank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_BankTransfer::set_has_bank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_BankTransfer::clear_has_bank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_BankTransfer::clear_bank() {
  bank_ = GOOGLE_LONGLONG(0);
  clear_has_bank();
}
inline ::google::protobuf::int64 SC_BankTransfer::bank() const {
  // @@protoc_insertion_point(field_get:SC_BankTransfer.bank)
  return bank_;
}
inline void SC_BankTransfer::set_bank(::google::protobuf::int64 value) {
  set_has_bank();
  bank_ = value;
  // @@protoc_insertion_point(field_set:SC_BankTransfer.bank)
}

// -------------------------------------------------------------------

// SC_NotifyMoney

// optional int32 opt_type = 1;
inline bool SC_NotifyMoney::has_opt_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_NotifyMoney::set_has_opt_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_NotifyMoney::clear_has_opt_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_NotifyMoney::clear_opt_type() {
  opt_type_ = 0;
  clear_has_opt_type();
}
inline ::google::protobuf::int32 SC_NotifyMoney::opt_type() const {
  // @@protoc_insertion_point(field_get:SC_NotifyMoney.opt_type)
  return opt_type_;
}
inline void SC_NotifyMoney::set_opt_type(::google::protobuf::int32 value) {
  set_has_opt_type();
  opt_type_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyMoney.opt_type)
}

// optional int64 money = 2;
inline bool SC_NotifyMoney::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_NotifyMoney::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_NotifyMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_NotifyMoney::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SC_NotifyMoney::money() const {
  // @@protoc_insertion_point(field_get:SC_NotifyMoney.money)
  return money_;
}
inline void SC_NotifyMoney::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyMoney.money)
}

// optional int64 change_money = 3;
inline bool SC_NotifyMoney::has_change_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_NotifyMoney::set_has_change_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_NotifyMoney::clear_has_change_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_NotifyMoney::clear_change_money() {
  change_money_ = GOOGLE_LONGLONG(0);
  clear_has_change_money();
}
inline ::google::protobuf::int64 SC_NotifyMoney::change_money() const {
  // @@protoc_insertion_point(field_get:SC_NotifyMoney.change_money)
  return change_money_;
}
inline void SC_NotifyMoney::set_change_money(::google::protobuf::int64 value) {
  set_has_change_money();
  change_money_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyMoney.change_money)
}

// -------------------------------------------------------------------

// CS_BankTransferByGuid

// optional int32 guid = 1;
inline bool CS_BankTransferByGuid::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_BankTransferByGuid::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_BankTransferByGuid::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_BankTransferByGuid::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 CS_BankTransferByGuid::guid() const {
  // @@protoc_insertion_point(field_get:CS_BankTransferByGuid.guid)
  return guid_;
}
inline void CS_BankTransferByGuid::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:CS_BankTransferByGuid.guid)
}

// optional int64 money = 2;
inline bool CS_BankTransferByGuid::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_BankTransferByGuid::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_BankTransferByGuid::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_BankTransferByGuid::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 CS_BankTransferByGuid::money() const {
  // @@protoc_insertion_point(field_get:CS_BankTransferByGuid.money)
  return money_;
}
inline void CS_BankTransferByGuid::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CS_BankTransferByGuid.money)
}

// -------------------------------------------------------------------

// CS_BuyItem

// optional int32 item_id = 1;
inline bool CS_BuyItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_BuyItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_BuyItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_BuyItem::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
inline ::google::protobuf::int32 CS_BuyItem::item_id() const {
  // @@protoc_insertion_point(field_get:CS_BuyItem.item_id)
  return item_id_;
}
inline void CS_BuyItem::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CS_BuyItem.item_id)
}

// optional int32 item_num = 2;
inline bool CS_BuyItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_BuyItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_BuyItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_BuyItem::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
inline ::google::protobuf::int32 CS_BuyItem::item_num() const {
  // @@protoc_insertion_point(field_get:CS_BuyItem.item_num)
  return item_num_;
}
inline void CS_BuyItem::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:CS_BuyItem.item_num)
}

// -------------------------------------------------------------------

// SC_BuyItem

// optional int32 item_id = 1;
inline bool SC_BuyItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_BuyItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_BuyItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_BuyItem::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
inline ::google::protobuf::int32 SC_BuyItem::item_id() const {
  // @@protoc_insertion_point(field_get:SC_BuyItem.item_id)
  return item_id_;
}
inline void SC_BuyItem::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:SC_BuyItem.item_id)
}

// optional int32 item_num = 2;
inline bool SC_BuyItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_BuyItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_BuyItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_BuyItem::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
inline ::google::protobuf::int32 SC_BuyItem::item_num() const {
  // @@protoc_insertion_point(field_get:SC_BuyItem.item_num)
  return item_num_;
}
inline void SC_BuyItem::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:SC_BuyItem.item_num)
}

// optional int32 result = 3;
inline bool SC_BuyItem::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_BuyItem::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_BuyItem::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_BuyItem::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_BuyItem::result() const {
  // @@protoc_insertion_point(field_get:SC_BuyItem.result)
  return result_;
}
inline void SC_BuyItem::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BuyItem.result)
}

// -------------------------------------------------------------------

// CS_DelItem

// optional int32 item_id = 1;
inline bool CS_DelItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_DelItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_DelItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_DelItem::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
inline ::google::protobuf::int32 CS_DelItem::item_id() const {
  // @@protoc_insertion_point(field_get:CS_DelItem.item_id)
  return item_id_;
}
inline void CS_DelItem::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CS_DelItem.item_id)
}

// optional int32 item_num = 2;
inline bool CS_DelItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_DelItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_DelItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_DelItem::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
inline ::google::protobuf::int32 CS_DelItem::item_num() const {
  // @@protoc_insertion_point(field_get:CS_DelItem.item_num)
  return item_num_;
}
inline void CS_DelItem::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:CS_DelItem.item_num)
}

// -------------------------------------------------------------------

// SC_DelItem

// optional int32 item_id = 1;
inline bool SC_DelItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_DelItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_DelItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_DelItem::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
inline ::google::protobuf::int32 SC_DelItem::item_id() const {
  // @@protoc_insertion_point(field_get:SC_DelItem.item_id)
  return item_id_;
}
inline void SC_DelItem::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:SC_DelItem.item_id)
}

// optional int32 item_num = 2;
inline bool SC_DelItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_DelItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_DelItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_DelItem::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
inline ::google::protobuf::int32 SC_DelItem::item_num() const {
  // @@protoc_insertion_point(field_get:SC_DelItem.item_num)
  return item_num_;
}
inline void SC_DelItem::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:SC_DelItem.item_num)
}

// optional int32 result = 3;
inline bool SC_DelItem::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_DelItem::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_DelItem::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_DelItem::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_DelItem::result() const {
  // @@protoc_insertion_point(field_get:SC_DelItem.result)
  return result_;
}
inline void SC_DelItem::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_DelItem.result)
}

// -------------------------------------------------------------------

// CS_UseItem

// optional int32 item_id = 1;
inline bool CS_UseItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_UseItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_UseItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_UseItem::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
inline ::google::protobuf::int32 CS_UseItem::item_id() const {
  // @@protoc_insertion_point(field_get:CS_UseItem.item_id)
  return item_id_;
}
inline void CS_UseItem::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CS_UseItem.item_id)
}

// optional int32 item_num = 2;
inline bool CS_UseItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_UseItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_UseItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_UseItem::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
inline ::google::protobuf::int32 CS_UseItem::item_num() const {
  // @@protoc_insertion_point(field_get:CS_UseItem.item_num)
  return item_num_;
}
inline void CS_UseItem::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:CS_UseItem.item_num)
}

// -------------------------------------------------------------------

// SC_UseItem

// optional int32 item_id = 1;
inline bool SC_UseItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_UseItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_UseItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_UseItem::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
inline ::google::protobuf::int32 SC_UseItem::item_id() const {
  // @@protoc_insertion_point(field_get:SC_UseItem.item_id)
  return item_id_;
}
inline void SC_UseItem::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:SC_UseItem.item_id)
}

// optional int32 item_num = 2;
inline bool SC_UseItem::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_UseItem::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_UseItem::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_UseItem::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
inline ::google::protobuf::int32 SC_UseItem::item_num() const {
  // @@protoc_insertion_point(field_get:SC_UseItem.item_num)
  return item_num_;
}
inline void SC_UseItem::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:SC_UseItem.item_num)
}

// optional int32 result = 3;
inline bool SC_UseItem::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_UseItem::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_UseItem::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_UseItem::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_UseItem::result() const {
  // @@protoc_insertion_point(field_get:SC_UseItem.result)
  return result_;
}
inline void SC_UseItem::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_UseItem.result)
}

// -------------------------------------------------------------------

// CS_ChatWorld

// optional string chat_content = 1;
inline bool CS_ChatWorld::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_ChatWorld::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_ChatWorld::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_ChatWorld::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
inline const ::std::string& CS_ChatWorld::chat_content() const {
  // @@protoc_insertion_point(field_get:CS_ChatWorld.chat_content)
  return chat_content_.GetNoArena();
}
inline void CS_ChatWorld::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ChatWorld.chat_content)
}
#if LANG_CXX11
inline void CS_ChatWorld::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ChatWorld.chat_content)
}
#endif
inline void CS_ChatWorld::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ChatWorld.chat_content)
}
inline void CS_ChatWorld::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ChatWorld.chat_content)
}
inline ::std::string* CS_ChatWorld::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:CS_ChatWorld.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_ChatWorld::release_chat_content() {
  // @@protoc_insertion_point(field_release:CS_ChatWorld.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_ChatWorld::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:CS_ChatWorld.chat_content)
}

// -------------------------------------------------------------------

// SC_ChatWorld

// optional string chat_content = 1;
inline bool SC_ChatWorld::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ChatWorld::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ChatWorld::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ChatWorld::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
inline const ::std::string& SC_ChatWorld::chat_content() const {
  // @@protoc_insertion_point(field_get:SC_ChatWorld.chat_content)
  return chat_content_.GetNoArena();
}
inline void SC_ChatWorld::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatWorld.chat_content)
}
#if LANG_CXX11
inline void SC_ChatWorld::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatWorld.chat_content)
}
#endif
inline void SC_ChatWorld::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatWorld.chat_content)
}
inline void SC_ChatWorld::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatWorld.chat_content)
}
inline ::std::string* SC_ChatWorld::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:SC_ChatWorld.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ChatWorld::release_chat_content() {
  // @@protoc_insertion_point(field_release:SC_ChatWorld.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ChatWorld::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatWorld.chat_content)
}

// optional int32 chat_guid = 2;
inline bool SC_ChatWorld::has_chat_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_ChatWorld::set_has_chat_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_ChatWorld::clear_has_chat_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_ChatWorld::clear_chat_guid() {
  chat_guid_ = 0;
  clear_has_chat_guid();
}
inline ::google::protobuf::int32 SC_ChatWorld::chat_guid() const {
  // @@protoc_insertion_point(field_get:SC_ChatWorld.chat_guid)
  return chat_guid_;
}
inline void SC_ChatWorld::set_chat_guid(::google::protobuf::int32 value) {
  set_has_chat_guid();
  chat_guid_ = value;
  // @@protoc_insertion_point(field_set:SC_ChatWorld.chat_guid)
}

// optional string chat_name = 3;
inline bool SC_ChatWorld::has_chat_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ChatWorld::set_has_chat_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ChatWorld::clear_has_chat_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ChatWorld::clear_chat_name() {
  chat_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_name();
}
inline const ::std::string& SC_ChatWorld::chat_name() const {
  // @@protoc_insertion_point(field_get:SC_ChatWorld.chat_name)
  return chat_name_.GetNoArena();
}
inline void SC_ChatWorld::set_chat_name(const ::std::string& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatWorld.chat_name)
}
#if LANG_CXX11
inline void SC_ChatWorld::set_chat_name(::std::string&& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatWorld.chat_name)
}
#endif
inline void SC_ChatWorld::set_chat_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatWorld.chat_name)
}
inline void SC_ChatWorld::set_chat_name(const char* value, size_t size) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatWorld.chat_name)
}
inline ::std::string* SC_ChatWorld::mutable_chat_name() {
  set_has_chat_name();
  // @@protoc_insertion_point(field_mutable:SC_ChatWorld.chat_name)
  return chat_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ChatWorld::release_chat_name() {
  // @@protoc_insertion_point(field_release:SC_ChatWorld.chat_name)
  clear_has_chat_name();
  return chat_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ChatWorld::set_allocated_chat_name(::std::string* chat_name) {
  if (chat_name != NULL) {
    set_has_chat_name();
  } else {
    clear_has_chat_name();
  }
  chat_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_name);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatWorld.chat_name)
}

// -------------------------------------------------------------------

// CS_ChatPrivate

// optional string chat_content = 1;
inline bool CS_ChatPrivate::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_ChatPrivate::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_ChatPrivate::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_ChatPrivate::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
inline const ::std::string& CS_ChatPrivate::chat_content() const {
  // @@protoc_insertion_point(field_get:CS_ChatPrivate.chat_content)
  return chat_content_.GetNoArena();
}
inline void CS_ChatPrivate::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ChatPrivate.chat_content)
}
#if LANG_CXX11
inline void CS_ChatPrivate::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ChatPrivate.chat_content)
}
#endif
inline void CS_ChatPrivate::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ChatPrivate.chat_content)
}
inline void CS_ChatPrivate::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ChatPrivate.chat_content)
}
inline ::std::string* CS_ChatPrivate::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:CS_ChatPrivate.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_ChatPrivate::release_chat_content() {
  // @@protoc_insertion_point(field_release:CS_ChatPrivate.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_ChatPrivate::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:CS_ChatPrivate.chat_content)
}

// optional string private_name = 2;
inline bool CS_ChatPrivate::has_private_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_ChatPrivate::set_has_private_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_ChatPrivate::clear_has_private_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_ChatPrivate::clear_private_name() {
  private_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_private_name();
}
inline const ::std::string& CS_ChatPrivate::private_name() const {
  // @@protoc_insertion_point(field_get:CS_ChatPrivate.private_name)
  return private_name_.GetNoArena();
}
inline void CS_ChatPrivate::set_private_name(const ::std::string& value) {
  set_has_private_name();
  private_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ChatPrivate.private_name)
}
#if LANG_CXX11
inline void CS_ChatPrivate::set_private_name(::std::string&& value) {
  set_has_private_name();
  private_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ChatPrivate.private_name)
}
#endif
inline void CS_ChatPrivate::set_private_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_private_name();
  private_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ChatPrivate.private_name)
}
inline void CS_ChatPrivate::set_private_name(const char* value, size_t size) {
  set_has_private_name();
  private_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ChatPrivate.private_name)
}
inline ::std::string* CS_ChatPrivate::mutable_private_name() {
  set_has_private_name();
  // @@protoc_insertion_point(field_mutable:CS_ChatPrivate.private_name)
  return private_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_ChatPrivate::release_private_name() {
  // @@protoc_insertion_point(field_release:CS_ChatPrivate.private_name)
  clear_has_private_name();
  return private_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_ChatPrivate::set_allocated_private_name(::std::string* private_name) {
  if (private_name != NULL) {
    set_has_private_name();
  } else {
    clear_has_private_name();
  }
  private_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), private_name);
  // @@protoc_insertion_point(field_set_allocated:CS_ChatPrivate.private_name)
}

// -------------------------------------------------------------------

// SC_ChatPrivate

// optional string chat_content = 1;
inline bool SC_ChatPrivate::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ChatPrivate::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ChatPrivate::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ChatPrivate::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
inline const ::std::string& SC_ChatPrivate::chat_content() const {
  // @@protoc_insertion_point(field_get:SC_ChatPrivate.chat_content)
  return chat_content_.GetNoArena();
}
inline void SC_ChatPrivate::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatPrivate.chat_content)
}
#if LANG_CXX11
inline void SC_ChatPrivate::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatPrivate.chat_content)
}
#endif
inline void SC_ChatPrivate::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatPrivate.chat_content)
}
inline void SC_ChatPrivate::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatPrivate.chat_content)
}
inline ::std::string* SC_ChatPrivate::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:SC_ChatPrivate.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ChatPrivate::release_chat_content() {
  // @@protoc_insertion_point(field_release:SC_ChatPrivate.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ChatPrivate::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatPrivate.chat_content)
}

// optional string private_name = 2;
inline bool SC_ChatPrivate::has_private_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ChatPrivate::set_has_private_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ChatPrivate::clear_has_private_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ChatPrivate::clear_private_name() {
  private_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_private_name();
}
inline const ::std::string& SC_ChatPrivate::private_name() const {
  // @@protoc_insertion_point(field_get:SC_ChatPrivate.private_name)
  return private_name_.GetNoArena();
}
inline void SC_ChatPrivate::set_private_name(const ::std::string& value) {
  set_has_private_name();
  private_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatPrivate.private_name)
}
#if LANG_CXX11
inline void SC_ChatPrivate::set_private_name(::std::string&& value) {
  set_has_private_name();
  private_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatPrivate.private_name)
}
#endif
inline void SC_ChatPrivate::set_private_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_private_name();
  private_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatPrivate.private_name)
}
inline void SC_ChatPrivate::set_private_name(const char* value, size_t size) {
  set_has_private_name();
  private_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatPrivate.private_name)
}
inline ::std::string* SC_ChatPrivate::mutable_private_name() {
  set_has_private_name();
  // @@protoc_insertion_point(field_mutable:SC_ChatPrivate.private_name)
  return private_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ChatPrivate::release_private_name() {
  // @@protoc_insertion_point(field_release:SC_ChatPrivate.private_name)
  clear_has_private_name();
  return private_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ChatPrivate::set_allocated_private_name(::std::string* private_name) {
  if (private_name != NULL) {
    set_has_private_name();
  } else {
    clear_has_private_name();
  }
  private_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), private_name);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatPrivate.private_name)
}

// optional string chat_name = 3;
inline bool SC_ChatPrivate::has_chat_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_ChatPrivate::set_has_chat_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_ChatPrivate::clear_has_chat_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_ChatPrivate::clear_chat_name() {
  chat_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_name();
}
inline const ::std::string& SC_ChatPrivate::chat_name() const {
  // @@protoc_insertion_point(field_get:SC_ChatPrivate.chat_name)
  return chat_name_.GetNoArena();
}
inline void SC_ChatPrivate::set_chat_name(const ::std::string& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatPrivate.chat_name)
}
#if LANG_CXX11
inline void SC_ChatPrivate::set_chat_name(::std::string&& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatPrivate.chat_name)
}
#endif
inline void SC_ChatPrivate::set_chat_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatPrivate.chat_name)
}
inline void SC_ChatPrivate::set_chat_name(const char* value, size_t size) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatPrivate.chat_name)
}
inline ::std::string* SC_ChatPrivate::mutable_chat_name() {
  set_has_chat_name();
  // @@protoc_insertion_point(field_mutable:SC_ChatPrivate.chat_name)
  return chat_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ChatPrivate::release_chat_name() {
  // @@protoc_insertion_point(field_release:SC_ChatPrivate.chat_name)
  clear_has_chat_name();
  return chat_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ChatPrivate::set_allocated_chat_name(::std::string* chat_name) {
  if (chat_name != NULL) {
    set_has_chat_name();
  } else {
    clear_has_chat_name();
  }
  chat_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_name);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatPrivate.chat_name)
}

// -------------------------------------------------------------------

// CS_ChatServer

// optional string chat_content = 1;
inline bool CS_ChatServer::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_ChatServer::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_ChatServer::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_ChatServer::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
inline const ::std::string& CS_ChatServer::chat_content() const {
  // @@protoc_insertion_point(field_get:CS_ChatServer.chat_content)
  return chat_content_.GetNoArena();
}
inline void CS_ChatServer::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ChatServer.chat_content)
}
#if LANG_CXX11
inline void CS_ChatServer::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ChatServer.chat_content)
}
#endif
inline void CS_ChatServer::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ChatServer.chat_content)
}
inline void CS_ChatServer::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ChatServer.chat_content)
}
inline ::std::string* CS_ChatServer::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:CS_ChatServer.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_ChatServer::release_chat_content() {
  // @@protoc_insertion_point(field_release:CS_ChatServer.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_ChatServer::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:CS_ChatServer.chat_content)
}

// -------------------------------------------------------------------

// SC_ChatServer

// optional string chat_content = 1;
inline bool SC_ChatServer::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ChatServer::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ChatServer::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ChatServer::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
inline const ::std::string& SC_ChatServer::chat_content() const {
  // @@protoc_insertion_point(field_get:SC_ChatServer.chat_content)
  return chat_content_.GetNoArena();
}
inline void SC_ChatServer::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatServer.chat_content)
}
#if LANG_CXX11
inline void SC_ChatServer::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatServer.chat_content)
}
#endif
inline void SC_ChatServer::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatServer.chat_content)
}
inline void SC_ChatServer::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatServer.chat_content)
}
inline ::std::string* SC_ChatServer::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:SC_ChatServer.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ChatServer::release_chat_content() {
  // @@protoc_insertion_point(field_release:SC_ChatServer.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ChatServer::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatServer.chat_content)
}

// optional int32 chat_guid = 2;
inline bool SC_ChatServer::has_chat_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_ChatServer::set_has_chat_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_ChatServer::clear_has_chat_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_ChatServer::clear_chat_guid() {
  chat_guid_ = 0;
  clear_has_chat_guid();
}
inline ::google::protobuf::int32 SC_ChatServer::chat_guid() const {
  // @@protoc_insertion_point(field_get:SC_ChatServer.chat_guid)
  return chat_guid_;
}
inline void SC_ChatServer::set_chat_guid(::google::protobuf::int32 value) {
  set_has_chat_guid();
  chat_guid_ = value;
  // @@protoc_insertion_point(field_set:SC_ChatServer.chat_guid)
}

// optional string chat_name = 3;
inline bool SC_ChatServer::has_chat_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ChatServer::set_has_chat_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ChatServer::clear_has_chat_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ChatServer::clear_chat_name() {
  chat_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_name();
}
inline const ::std::string& SC_ChatServer::chat_name() const {
  // @@protoc_insertion_point(field_get:SC_ChatServer.chat_name)
  return chat_name_.GetNoArena();
}
inline void SC_ChatServer::set_chat_name(const ::std::string& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatServer.chat_name)
}
#if LANG_CXX11
inline void SC_ChatServer::set_chat_name(::std::string&& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatServer.chat_name)
}
#endif
inline void SC_ChatServer::set_chat_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatServer.chat_name)
}
inline void SC_ChatServer::set_chat_name(const char* value, size_t size) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatServer.chat_name)
}
inline ::std::string* SC_ChatServer::mutable_chat_name() {
  set_has_chat_name();
  // @@protoc_insertion_point(field_mutable:SC_ChatServer.chat_name)
  return chat_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ChatServer::release_chat_name() {
  // @@protoc_insertion_point(field_release:SC_ChatServer.chat_name)
  clear_has_chat_name();
  return chat_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ChatServer::set_allocated_chat_name(::std::string* chat_name) {
  if (chat_name != NULL) {
    set_has_chat_name();
  } else {
    clear_has_chat_name();
  }
  chat_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_name);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatServer.chat_name)
}

// -------------------------------------------------------------------

// CS_ChatRoom

// optional string chat_content = 1;
inline bool CS_ChatRoom::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_ChatRoom::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_ChatRoom::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_ChatRoom::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
inline const ::std::string& CS_ChatRoom::chat_content() const {
  // @@protoc_insertion_point(field_get:CS_ChatRoom.chat_content)
  return chat_content_.GetNoArena();
}
inline void CS_ChatRoom::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ChatRoom.chat_content)
}
#if LANG_CXX11
inline void CS_ChatRoom::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ChatRoom.chat_content)
}
#endif
inline void CS_ChatRoom::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ChatRoom.chat_content)
}
inline void CS_ChatRoom::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ChatRoom.chat_content)
}
inline ::std::string* CS_ChatRoom::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:CS_ChatRoom.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_ChatRoom::release_chat_content() {
  // @@protoc_insertion_point(field_release:CS_ChatRoom.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_ChatRoom::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:CS_ChatRoom.chat_content)
}

// -------------------------------------------------------------------

// SC_ChatRoom

// optional string chat_content = 1;
inline bool SC_ChatRoom::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ChatRoom::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ChatRoom::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ChatRoom::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
inline const ::std::string& SC_ChatRoom::chat_content() const {
  // @@protoc_insertion_point(field_get:SC_ChatRoom.chat_content)
  return chat_content_.GetNoArena();
}
inline void SC_ChatRoom::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatRoom.chat_content)
}
#if LANG_CXX11
inline void SC_ChatRoom::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatRoom.chat_content)
}
#endif
inline void SC_ChatRoom::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatRoom.chat_content)
}
inline void SC_ChatRoom::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatRoom.chat_content)
}
inline ::std::string* SC_ChatRoom::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:SC_ChatRoom.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ChatRoom::release_chat_content() {
  // @@protoc_insertion_point(field_release:SC_ChatRoom.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ChatRoom::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatRoom.chat_content)
}

// optional int32 chat_guid = 2;
inline bool SC_ChatRoom::has_chat_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_ChatRoom::set_has_chat_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_ChatRoom::clear_has_chat_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_ChatRoom::clear_chat_guid() {
  chat_guid_ = 0;
  clear_has_chat_guid();
}
inline ::google::protobuf::int32 SC_ChatRoom::chat_guid() const {
  // @@protoc_insertion_point(field_get:SC_ChatRoom.chat_guid)
  return chat_guid_;
}
inline void SC_ChatRoom::set_chat_guid(::google::protobuf::int32 value) {
  set_has_chat_guid();
  chat_guid_ = value;
  // @@protoc_insertion_point(field_set:SC_ChatRoom.chat_guid)
}

// optional string chat_name = 3;
inline bool SC_ChatRoom::has_chat_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ChatRoom::set_has_chat_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ChatRoom::clear_has_chat_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ChatRoom::clear_chat_name() {
  chat_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_name();
}
inline const ::std::string& SC_ChatRoom::chat_name() const {
  // @@protoc_insertion_point(field_get:SC_ChatRoom.chat_name)
  return chat_name_.GetNoArena();
}
inline void SC_ChatRoom::set_chat_name(const ::std::string& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatRoom.chat_name)
}
#if LANG_CXX11
inline void SC_ChatRoom::set_chat_name(::std::string&& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatRoom.chat_name)
}
#endif
inline void SC_ChatRoom::set_chat_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatRoom.chat_name)
}
inline void SC_ChatRoom::set_chat_name(const char* value, size_t size) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatRoom.chat_name)
}
inline ::std::string* SC_ChatRoom::mutable_chat_name() {
  set_has_chat_name();
  // @@protoc_insertion_point(field_mutable:SC_ChatRoom.chat_name)
  return chat_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ChatRoom::release_chat_name() {
  // @@protoc_insertion_point(field_release:SC_ChatRoom.chat_name)
  clear_has_chat_name();
  return chat_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ChatRoom::set_allocated_chat_name(::std::string* chat_name) {
  if (chat_name != NULL) {
    set_has_chat_name();
  } else {
    clear_has_chat_name();
  }
  chat_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_name);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatRoom.chat_name)
}

// -------------------------------------------------------------------

// CS_ChatTable

// optional string chat_content = 1;
inline bool CS_ChatTable::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_ChatTable::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_ChatTable::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_ChatTable::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
inline const ::std::string& CS_ChatTable::chat_content() const {
  // @@protoc_insertion_point(field_get:CS_ChatTable.chat_content)
  return chat_content_.GetNoArena();
}
inline void CS_ChatTable::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ChatTable.chat_content)
}
#if LANG_CXX11
inline void CS_ChatTable::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ChatTable.chat_content)
}
#endif
inline void CS_ChatTable::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ChatTable.chat_content)
}
inline void CS_ChatTable::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ChatTable.chat_content)
}
inline ::std::string* CS_ChatTable::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:CS_ChatTable.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_ChatTable::release_chat_content() {
  // @@protoc_insertion_point(field_release:CS_ChatTable.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_ChatTable::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:CS_ChatTable.chat_content)
}

// -------------------------------------------------------------------

// SC_ChatTable

// optional string chat_content = 1;
inline bool SC_ChatTable::has_chat_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ChatTable::set_has_chat_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ChatTable::clear_has_chat_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ChatTable::clear_chat_content() {
  chat_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_content();
}
inline const ::std::string& SC_ChatTable::chat_content() const {
  // @@protoc_insertion_point(field_get:SC_ChatTable.chat_content)
  return chat_content_.GetNoArena();
}
inline void SC_ChatTable::set_chat_content(const ::std::string& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatTable.chat_content)
}
#if LANG_CXX11
inline void SC_ChatTable::set_chat_content(::std::string&& value) {
  set_has_chat_content();
  chat_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatTable.chat_content)
}
#endif
inline void SC_ChatTable::set_chat_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatTable.chat_content)
}
inline void SC_ChatTable::set_chat_content(const char* value, size_t size) {
  set_has_chat_content();
  chat_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatTable.chat_content)
}
inline ::std::string* SC_ChatTable::mutable_chat_content() {
  set_has_chat_content();
  // @@protoc_insertion_point(field_mutable:SC_ChatTable.chat_content)
  return chat_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ChatTable::release_chat_content() {
  // @@protoc_insertion_point(field_release:SC_ChatTable.chat_content)
  clear_has_chat_content();
  return chat_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ChatTable::set_allocated_chat_content(::std::string* chat_content) {
  if (chat_content != NULL) {
    set_has_chat_content();
  } else {
    clear_has_chat_content();
  }
  chat_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_content);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatTable.chat_content)
}

// optional int32 chat_guid = 2;
inline bool SC_ChatTable::has_chat_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_ChatTable::set_has_chat_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_ChatTable::clear_has_chat_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_ChatTable::clear_chat_guid() {
  chat_guid_ = 0;
  clear_has_chat_guid();
}
inline ::google::protobuf::int32 SC_ChatTable::chat_guid() const {
  // @@protoc_insertion_point(field_get:SC_ChatTable.chat_guid)
  return chat_guid_;
}
inline void SC_ChatTable::set_chat_guid(::google::protobuf::int32 value) {
  set_has_chat_guid();
  chat_guid_ = value;
  // @@protoc_insertion_point(field_set:SC_ChatTable.chat_guid)
}

// optional string chat_name = 3;
inline bool SC_ChatTable::has_chat_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ChatTable::set_has_chat_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ChatTable::clear_has_chat_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ChatTable::clear_chat_name() {
  chat_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chat_name();
}
inline const ::std::string& SC_ChatTable::chat_name() const {
  // @@protoc_insertion_point(field_get:SC_ChatTable.chat_name)
  return chat_name_.GetNoArena();
}
inline void SC_ChatTable::set_chat_name(const ::std::string& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChatTable.chat_name)
}
#if LANG_CXX11
inline void SC_ChatTable::set_chat_name(::std::string&& value) {
  set_has_chat_name();
  chat_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChatTable.chat_name)
}
#endif
inline void SC_ChatTable::set_chat_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChatTable.chat_name)
}
inline void SC_ChatTable::set_chat_name(const char* value, size_t size) {
  set_has_chat_name();
  chat_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChatTable.chat_name)
}
inline ::std::string* SC_ChatTable::mutable_chat_name() {
  set_has_chat_name();
  // @@protoc_insertion_point(field_mutable:SC_ChatTable.chat_name)
  return chat_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ChatTable::release_chat_name() {
  // @@protoc_insertion_point(field_release:SC_ChatTable.chat_name)
  clear_has_chat_name();
  return chat_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ChatTable::set_allocated_chat_name(::std::string* chat_name) {
  if (chat_name != NULL) {
    set_has_chat_name();
  } else {
    clear_has_chat_name();
  }
  chat_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_name);
  // @@protoc_insertion_point(field_set_allocated:SC_ChatTable.chat_name)
}

// -------------------------------------------------------------------

// SC_Marquee

// optional string content = 1;
inline bool SC_Marquee::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_Marquee::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_Marquee::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_Marquee::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& SC_Marquee::content() const {
  // @@protoc_insertion_point(field_get:SC_Marquee.content)
  return content_.GetNoArena();
}
inline void SC_Marquee::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_Marquee.content)
}
#if LANG_CXX11
inline void SC_Marquee::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_Marquee.content)
}
#endif
inline void SC_Marquee::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_Marquee.content)
}
inline void SC_Marquee::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_Marquee.content)
}
inline ::std::string* SC_Marquee::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:SC_Marquee.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_Marquee::release_content() {
  // @@protoc_insertion_point(field_release:SC_Marquee.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_Marquee::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:SC_Marquee.content)
}

// -------------------------------------------------------------------

// CS_QueryPlayerMarquee

// -------------------------------------------------------------------

// SC_QueryPlayerMarquee

// repeated .Marquee pb_msg_data = 1;
inline int SC_QueryPlayerMarquee::pb_msg_data_size() const {
  return pb_msg_data_.size();
}
inline void SC_QueryPlayerMarquee::clear_pb_msg_data() {
  pb_msg_data_.Clear();
}
inline const ::Marquee& SC_QueryPlayerMarquee::pb_msg_data(int index) const {
  // @@protoc_insertion_point(field_get:SC_QueryPlayerMarquee.pb_msg_data)
  return pb_msg_data_.Get(index);
}
inline ::Marquee* SC_QueryPlayerMarquee::mutable_pb_msg_data(int index) {
  // @@protoc_insertion_point(field_mutable:SC_QueryPlayerMarquee.pb_msg_data)
  return pb_msg_data_.Mutable(index);
}
inline ::Marquee* SC_QueryPlayerMarquee::add_pb_msg_data() {
  // @@protoc_insertion_point(field_add:SC_QueryPlayerMarquee.pb_msg_data)
  return pb_msg_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Marquee >*
SC_QueryPlayerMarquee::mutable_pb_msg_data() {
  // @@protoc_insertion_point(field_mutable_list:SC_QueryPlayerMarquee.pb_msg_data)
  return &pb_msg_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Marquee >&
SC_QueryPlayerMarquee::pb_msg_data() const {
  // @@protoc_insertion_point(field_list:SC_QueryPlayerMarquee.pb_msg_data)
  return pb_msg_data_;
}

// -------------------------------------------------------------------

// SC_NewMarquee

// repeated .Marquee pb_msg_data = 1;
inline int SC_NewMarquee::pb_msg_data_size() const {
  return pb_msg_data_.size();
}
inline void SC_NewMarquee::clear_pb_msg_data() {
  pb_msg_data_.Clear();
}
inline const ::Marquee& SC_NewMarquee::pb_msg_data(int index) const {
  // @@protoc_insertion_point(field_get:SC_NewMarquee.pb_msg_data)
  return pb_msg_data_.Get(index);
}
inline ::Marquee* SC_NewMarquee::mutable_pb_msg_data(int index) {
  // @@protoc_insertion_point(field_mutable:SC_NewMarquee.pb_msg_data)
  return pb_msg_data_.Mutable(index);
}
inline ::Marquee* SC_NewMarquee::add_pb_msg_data() {
  // @@protoc_insertion_point(field_add:SC_NewMarquee.pb_msg_data)
  return pb_msg_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Marquee >*
SC_NewMarquee::mutable_pb_msg_data() {
  // @@protoc_insertion_point(field_mutable_list:SC_NewMarquee.pb_msg_data)
  return &pb_msg_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Marquee >&
SC_NewMarquee::pb_msg_data() const {
  // @@protoc_insertion_point(field_list:SC_NewMarquee.pb_msg_data)
  return pb_msg_data_;
}

// -------------------------------------------------------------------

// CS_SendMail

// optional .MailInfo pb_mail = 1;
inline bool CS_SendMail::has_pb_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_SendMail::set_has_pb_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_SendMail::clear_has_pb_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_SendMail::clear_pb_mail() {
  if (pb_mail_ != NULL) pb_mail_->::MailInfo::Clear();
  clear_has_pb_mail();
}
inline const ::MailInfo& CS_SendMail::pb_mail() const {
  // @@protoc_insertion_point(field_get:CS_SendMail.pb_mail)
  return pb_mail_ != NULL ? *pb_mail_
                         : *::MailInfo::internal_default_instance();
}
inline ::MailInfo* CS_SendMail::mutable_pb_mail() {
  set_has_pb_mail();
  if (pb_mail_ == NULL) {
    pb_mail_ = new ::MailInfo;
  }
  // @@protoc_insertion_point(field_mutable:CS_SendMail.pb_mail)
  return pb_mail_;
}
inline ::MailInfo* CS_SendMail::release_pb_mail() {
  // @@protoc_insertion_point(field_release:CS_SendMail.pb_mail)
  clear_has_pb_mail();
  ::MailInfo* temp = pb_mail_;
  pb_mail_ = NULL;
  return temp;
}
inline void CS_SendMail::set_allocated_pb_mail(::MailInfo* pb_mail) {
  delete pb_mail_;
  pb_mail_ = pb_mail;
  if (pb_mail) {
    set_has_pb_mail();
  } else {
    clear_has_pb_mail();
  }
  // @@protoc_insertion_point(field_set_allocated:CS_SendMail.pb_mail)
}

// -------------------------------------------------------------------

// SC_SendMail

// optional int32 ret = 1;
inline bool SC_SendMail::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_SendMail::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_SendMail::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_SendMail::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 SC_SendMail::ret() const {
  // @@protoc_insertion_point(field_get:SC_SendMail.ret)
  return ret_;
}
inline void SC_SendMail::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:SC_SendMail.ret)
}

// optional .MailInfo pb_mail = 2;
inline bool SC_SendMail::has_pb_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_SendMail::set_has_pb_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_SendMail::clear_has_pb_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_SendMail::clear_pb_mail() {
  if (pb_mail_ != NULL) pb_mail_->::MailInfo::Clear();
  clear_has_pb_mail();
}
inline const ::MailInfo& SC_SendMail::pb_mail() const {
  // @@protoc_insertion_point(field_get:SC_SendMail.pb_mail)
  return pb_mail_ != NULL ? *pb_mail_
                         : *::MailInfo::internal_default_instance();
}
inline ::MailInfo* SC_SendMail::mutable_pb_mail() {
  set_has_pb_mail();
  if (pb_mail_ == NULL) {
    pb_mail_ = new ::MailInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_SendMail.pb_mail)
  return pb_mail_;
}
inline ::MailInfo* SC_SendMail::release_pb_mail() {
  // @@protoc_insertion_point(field_release:SC_SendMail.pb_mail)
  clear_has_pb_mail();
  ::MailInfo* temp = pb_mail_;
  pb_mail_ = NULL;
  return temp;
}
inline void SC_SendMail::set_allocated_pb_mail(::MailInfo* pb_mail) {
  delete pb_mail_;
  pb_mail_ = pb_mail;
  if (pb_mail) {
    set_has_pb_mail();
  } else {
    clear_has_pb_mail();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_SendMail.pb_mail)
}

// -------------------------------------------------------------------

// SC_RecviceMail

// optional .MailInfo pb_mail = 1;
inline bool SC_RecviceMail::has_pb_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_RecviceMail::set_has_pb_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_RecviceMail::clear_has_pb_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_RecviceMail::clear_pb_mail() {
  if (pb_mail_ != NULL) pb_mail_->::MailInfo::Clear();
  clear_has_pb_mail();
}
inline const ::MailInfo& SC_RecviceMail::pb_mail() const {
  // @@protoc_insertion_point(field_get:SC_RecviceMail.pb_mail)
  return pb_mail_ != NULL ? *pb_mail_
                         : *::MailInfo::internal_default_instance();
}
inline ::MailInfo* SC_RecviceMail::mutable_pb_mail() {
  set_has_pb_mail();
  if (pb_mail_ == NULL) {
    pb_mail_ = new ::MailInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_RecviceMail.pb_mail)
  return pb_mail_;
}
inline ::MailInfo* SC_RecviceMail::release_pb_mail() {
  // @@protoc_insertion_point(field_release:SC_RecviceMail.pb_mail)
  clear_has_pb_mail();
  ::MailInfo* temp = pb_mail_;
  pb_mail_ = NULL;
  return temp;
}
inline void SC_RecviceMail::set_allocated_pb_mail(::MailInfo* pb_mail) {
  delete pb_mail_;
  pb_mail_ = pb_mail;
  if (pb_mail) {
    set_has_pb_mail();
  } else {
    clear_has_pb_mail();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_RecviceMail.pb_mail)
}

// -------------------------------------------------------------------

// CS_DelMail

// optional string mail_id = 1;
inline bool CS_DelMail::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_DelMail::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_DelMail::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_DelMail::clear_mail_id() {
  mail_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mail_id();
}
inline const ::std::string& CS_DelMail::mail_id() const {
  // @@protoc_insertion_point(field_get:CS_DelMail.mail_id)
  return mail_id_.GetNoArena();
}
inline void CS_DelMail::set_mail_id(const ::std::string& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_DelMail.mail_id)
}
#if LANG_CXX11
inline void CS_DelMail::set_mail_id(::std::string&& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_DelMail.mail_id)
}
#endif
inline void CS_DelMail::set_mail_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_DelMail.mail_id)
}
inline void CS_DelMail::set_mail_id(const char* value, size_t size) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_DelMail.mail_id)
}
inline ::std::string* CS_DelMail::mutable_mail_id() {
  set_has_mail_id();
  // @@protoc_insertion_point(field_mutable:CS_DelMail.mail_id)
  return mail_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_DelMail::release_mail_id() {
  // @@protoc_insertion_point(field_release:CS_DelMail.mail_id)
  clear_has_mail_id();
  return mail_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_DelMail::set_allocated_mail_id(::std::string* mail_id) {
  if (mail_id != NULL) {
    set_has_mail_id();
  } else {
    clear_has_mail_id();
  }
  mail_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_id);
  // @@protoc_insertion_point(field_set_allocated:CS_DelMail.mail_id)
}

// -------------------------------------------------------------------

// SC_DelMail

// optional int32 result = 1;
inline bool SC_DelMail::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_DelMail::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_DelMail::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_DelMail::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_DelMail::result() const {
  // @@protoc_insertion_point(field_get:SC_DelMail.result)
  return result_;
}
inline void SC_DelMail::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_DelMail.result)
}

// optional string mail_id = 2;
inline bool SC_DelMail::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_DelMail::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_DelMail::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_DelMail::clear_mail_id() {
  mail_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mail_id();
}
inline const ::std::string& SC_DelMail::mail_id() const {
  // @@protoc_insertion_point(field_get:SC_DelMail.mail_id)
  return mail_id_.GetNoArena();
}
inline void SC_DelMail::set_mail_id(const ::std::string& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_DelMail.mail_id)
}
#if LANG_CXX11
inline void SC_DelMail::set_mail_id(::std::string&& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_DelMail.mail_id)
}
#endif
inline void SC_DelMail::set_mail_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_DelMail.mail_id)
}
inline void SC_DelMail::set_mail_id(const char* value, size_t size) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_DelMail.mail_id)
}
inline ::std::string* SC_DelMail::mutable_mail_id() {
  set_has_mail_id();
  // @@protoc_insertion_point(field_mutable:SC_DelMail.mail_id)
  return mail_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_DelMail::release_mail_id() {
  // @@protoc_insertion_point(field_release:SC_DelMail.mail_id)
  clear_has_mail_id();
  return mail_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_DelMail::set_allocated_mail_id(::std::string* mail_id) {
  if (mail_id != NULL) {
    set_has_mail_id();
  } else {
    clear_has_mail_id();
  }
  mail_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_id);
  // @@protoc_insertion_point(field_set_allocated:SC_DelMail.mail_id)
}

// -------------------------------------------------------------------

// CS_ReceiveMailAttachment

// optional string mail_id = 1;
inline bool CS_ReceiveMailAttachment::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_ReceiveMailAttachment::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_ReceiveMailAttachment::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_ReceiveMailAttachment::clear_mail_id() {
  mail_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mail_id();
}
inline const ::std::string& CS_ReceiveMailAttachment::mail_id() const {
  // @@protoc_insertion_point(field_get:CS_ReceiveMailAttachment.mail_id)
  return mail_id_.GetNoArena();
}
inline void CS_ReceiveMailAttachment::set_mail_id(const ::std::string& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_ReceiveMailAttachment.mail_id)
}
#if LANG_CXX11
inline void CS_ReceiveMailAttachment::set_mail_id(::std::string&& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_ReceiveMailAttachment.mail_id)
}
#endif
inline void CS_ReceiveMailAttachment::set_mail_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_ReceiveMailAttachment.mail_id)
}
inline void CS_ReceiveMailAttachment::set_mail_id(const char* value, size_t size) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_ReceiveMailAttachment.mail_id)
}
inline ::std::string* CS_ReceiveMailAttachment::mutable_mail_id() {
  set_has_mail_id();
  // @@protoc_insertion_point(field_mutable:CS_ReceiveMailAttachment.mail_id)
  return mail_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_ReceiveMailAttachment::release_mail_id() {
  // @@protoc_insertion_point(field_release:CS_ReceiveMailAttachment.mail_id)
  clear_has_mail_id();
  return mail_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_ReceiveMailAttachment::set_allocated_mail_id(::std::string* mail_id) {
  if (mail_id != NULL) {
    set_has_mail_id();
  } else {
    clear_has_mail_id();
  }
  mail_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_id);
  // @@protoc_insertion_point(field_set_allocated:CS_ReceiveMailAttachment.mail_id)
}

// -------------------------------------------------------------------

// SC_ReceiveMailAttachment

// optional int32 result = 1;
inline bool SC_ReceiveMailAttachment::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ReceiveMailAttachment::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ReceiveMailAttachment::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ReceiveMailAttachment::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_ReceiveMailAttachment::result() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveMailAttachment.result)
  return result_;
}
inline void SC_ReceiveMailAttachment::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ReceiveMailAttachment.result)
}

// optional string mail_id = 2;
inline bool SC_ReceiveMailAttachment::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ReceiveMailAttachment::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ReceiveMailAttachment::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ReceiveMailAttachment::clear_mail_id() {
  mail_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mail_id();
}
inline const ::std::string& SC_ReceiveMailAttachment::mail_id() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveMailAttachment.mail_id)
  return mail_id_.GetNoArena();
}
inline void SC_ReceiveMailAttachment::set_mail_id(const ::std::string& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ReceiveMailAttachment.mail_id)
}
#if LANG_CXX11
inline void SC_ReceiveMailAttachment::set_mail_id(::std::string&& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ReceiveMailAttachment.mail_id)
}
#endif
inline void SC_ReceiveMailAttachment::set_mail_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ReceiveMailAttachment.mail_id)
}
inline void SC_ReceiveMailAttachment::set_mail_id(const char* value, size_t size) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ReceiveMailAttachment.mail_id)
}
inline ::std::string* SC_ReceiveMailAttachment::mutable_mail_id() {
  set_has_mail_id();
  // @@protoc_insertion_point(field_mutable:SC_ReceiveMailAttachment.mail_id)
  return mail_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ReceiveMailAttachment::release_mail_id() {
  // @@protoc_insertion_point(field_release:SC_ReceiveMailAttachment.mail_id)
  clear_has_mail_id();
  return mail_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ReceiveMailAttachment::set_allocated_mail_id(::std::string* mail_id) {
  if (mail_id != NULL) {
    set_has_mail_id();
  } else {
    clear_has_mail_id();
  }
  mail_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_id);
  // @@protoc_insertion_point(field_set_allocated:SC_ReceiveMailAttachment.mail_id)
}

// repeated .ItemInfo pb_attachment = 3;
inline int SC_ReceiveMailAttachment::pb_attachment_size() const {
  return pb_attachment_.size();
}
inline void SC_ReceiveMailAttachment::clear_pb_attachment() {
  pb_attachment_.Clear();
}
inline const ::ItemInfo& SC_ReceiveMailAttachment::pb_attachment(int index) const {
  // @@protoc_insertion_point(field_get:SC_ReceiveMailAttachment.pb_attachment)
  return pb_attachment_.Get(index);
}
inline ::ItemInfo* SC_ReceiveMailAttachment::mutable_pb_attachment(int index) {
  // @@protoc_insertion_point(field_mutable:SC_ReceiveMailAttachment.pb_attachment)
  return pb_attachment_.Mutable(index);
}
inline ::ItemInfo* SC_ReceiveMailAttachment::add_pb_attachment() {
  // @@protoc_insertion_point(field_add:SC_ReceiveMailAttachment.pb_attachment)
  return pb_attachment_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
SC_ReceiveMailAttachment::mutable_pb_attachment() {
  // @@protoc_insertion_point(field_mutable_list:SC_ReceiveMailAttachment.pb_attachment)
  return &pb_attachment_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
SC_ReceiveMailAttachment::pb_attachment() const {
  // @@protoc_insertion_point(field_list:SC_ReceiveMailAttachment.pb_attachment)
  return pb_attachment_;
}

// -------------------------------------------------------------------

// CS_ReceiveRewardLogin

// -------------------------------------------------------------------

// SC_ReceiveRewardLogin

// optional int32 result = 1;
inline bool SC_ReceiveRewardLogin::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ReceiveRewardLogin::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ReceiveRewardLogin::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ReceiveRewardLogin::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_ReceiveRewardLogin::result() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveRewardLogin.result)
  return result_;
}
inline void SC_ReceiveRewardLogin::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ReceiveRewardLogin.result)
}

// optional int64 money = 2;
inline bool SC_ReceiveRewardLogin::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ReceiveRewardLogin::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ReceiveRewardLogin::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ReceiveRewardLogin::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SC_ReceiveRewardLogin::money() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveRewardLogin.money)
  return money_;
}
inline void SC_ReceiveRewardLogin::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_ReceiveRewardLogin.money)
}

// -------------------------------------------------------------------

// CS_ReceiveRewardOnline

// -------------------------------------------------------------------

// SC_ReceiveRewardOnline

// optional int32 result = 1;
inline bool SC_ReceiveRewardOnline::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ReceiveRewardOnline::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ReceiveRewardOnline::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ReceiveRewardOnline::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_ReceiveRewardOnline::result() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveRewardOnline.result)
  return result_;
}
inline void SC_ReceiveRewardOnline::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ReceiveRewardOnline.result)
}

// optional int64 money = 2;
inline bool SC_ReceiveRewardOnline::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ReceiveRewardOnline::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ReceiveRewardOnline::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ReceiveRewardOnline::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SC_ReceiveRewardOnline::money() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveRewardOnline.money)
  return money_;
}
inline void SC_ReceiveRewardOnline::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_ReceiveRewardOnline.money)
}

// -------------------------------------------------------------------

// CS_ReceiveReliefPayment

// -------------------------------------------------------------------

// SC_ReceiveReliefPayment

// optional int32 result = 1;
inline bool SC_ReceiveReliefPayment::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ReceiveReliefPayment::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ReceiveReliefPayment::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ReceiveReliefPayment::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_ReceiveReliefPayment::result() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveReliefPayment.result)
  return result_;
}
inline void SC_ReceiveReliefPayment::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ReceiveReliefPayment.result)
}

// optional int64 money = 2;
inline bool SC_ReceiveReliefPayment::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ReceiveReliefPayment::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ReceiveReliefPayment::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ReceiveReliefPayment::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SC_ReceiveReliefPayment::money() const {
  // @@protoc_insertion_point(field_get:SC_ReceiveReliefPayment.money)
  return money_;
}
inline void SC_ReceiveReliefPayment::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_ReceiveReliefPayment.money)
}

// -------------------------------------------------------------------

// CE_RequestRank

// optional int32 rank_type = 1;
inline bool CE_RequestRank::has_rank_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CE_RequestRank::set_has_rank_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CE_RequestRank::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CE_RequestRank::clear_rank_type() {
  rank_type_ = 0;
  clear_has_rank_type();
}
inline ::google::protobuf::int32 CE_RequestRank::rank_type() const {
  // @@protoc_insertion_point(field_get:CE_RequestRank.rank_type)
  return rank_type_;
}
inline void CE_RequestRank::set_rank_type(::google::protobuf::int32 value) {
  set_has_rank_type();
  rank_type_ = value;
  // @@protoc_insertion_point(field_set:CE_RequestRank.rank_type)
}

// -------------------------------------------------------------------

// EC_ReplyRank

// optional int32 rank_type = 1;
inline bool EC_ReplyRank::has_rank_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EC_ReplyRank::set_has_rank_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EC_ReplyRank::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EC_ReplyRank::clear_rank_type() {
  rank_type_ = 0;
  clear_has_rank_type();
}
inline ::google::protobuf::int32 EC_ReplyRank::rank_type() const {
  // @@protoc_insertion_point(field_get:EC_ReplyRank.rank_type)
  return rank_type_;
}
inline void EC_ReplyRank::set_rank_type(::google::protobuf::int32 value) {
  set_has_rank_type();
  rank_type_ = value;
  // @@protoc_insertion_point(field_set:EC_ReplyRank.rank_type)
}

// repeated .RankItem pb_rank = 2;
inline int EC_ReplyRank::pb_rank_size() const {
  return pb_rank_.size();
}
inline void EC_ReplyRank::clear_pb_rank() {
  pb_rank_.Clear();
}
inline const ::RankItem& EC_ReplyRank::pb_rank(int index) const {
  // @@protoc_insertion_point(field_get:EC_ReplyRank.pb_rank)
  return pb_rank_.Get(index);
}
inline ::RankItem* EC_ReplyRank::mutable_pb_rank(int index) {
  // @@protoc_insertion_point(field_mutable:EC_ReplyRank.pb_rank)
  return pb_rank_.Mutable(index);
}
inline ::RankItem* EC_ReplyRank::add_pb_rank() {
  // @@protoc_insertion_point(field_add:EC_ReplyRank.pb_rank)
  return pb_rank_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RankItem >*
EC_ReplyRank::mutable_pb_rank() {
  // @@protoc_insertion_point(field_mutable_list:EC_ReplyRank.pb_rank)
  return &pb_rank_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RankItem >&
EC_ReplyRank::pb_rank() const {
  // @@protoc_insertion_point(field_list:EC_ReplyRank.pb_rank)
  return pb_rank_;
}

// -------------------------------------------------------------------

// CS_EnterRoom

// optional int32 room_id = 1;
inline bool CS_EnterRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_EnterRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_EnterRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_EnterRoom::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 CS_EnterRoom::room_id() const {
  // @@protoc_insertion_point(field_get:CS_EnterRoom.room_id)
  return room_id_;
}
inline void CS_EnterRoom::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:CS_EnterRoom.room_id)
}

// -------------------------------------------------------------------

// SC_EnterRoom

// optional int32 room_id = 1;
inline bool SC_EnterRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_EnterRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_EnterRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_EnterRoom::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 SC_EnterRoom::room_id() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoom.room_id)
  return room_id_;
}
inline void SC_EnterRoom::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoom.room_id)
}

// optional int32 result = 2;
inline bool SC_EnterRoom::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_EnterRoom::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_EnterRoom::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_EnterRoom::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_EnterRoom::result() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoom.result)
  return result_;
}
inline void SC_EnterRoom::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoom.result)
}

// -------------------------------------------------------------------

// SC_NotifyEnterRoom

// optional int32 room_id = 1;
inline bool SC_NotifyEnterRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_NotifyEnterRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_NotifyEnterRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_NotifyEnterRoom::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 SC_NotifyEnterRoom::room_id() const {
  // @@protoc_insertion_point(field_get:SC_NotifyEnterRoom.room_id)
  return room_id_;
}
inline void SC_NotifyEnterRoom::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyEnterRoom.room_id)
}

// optional int32 guid = 2;
inline bool SC_NotifyEnterRoom::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_NotifyEnterRoom::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_NotifyEnterRoom::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_NotifyEnterRoom::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SC_NotifyEnterRoom::guid() const {
  // @@protoc_insertion_point(field_get:SC_NotifyEnterRoom.guid)
  return guid_;
}
inline void SC_NotifyEnterRoom::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyEnterRoom.guid)
}

// -------------------------------------------------------------------

// CS_ExitRoom

// -------------------------------------------------------------------

// SC_ExitRoom

// optional int32 room_id = 1;
inline bool SC_ExitRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ExitRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ExitRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ExitRoom::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 SC_ExitRoom::room_id() const {
  // @@protoc_insertion_point(field_get:SC_ExitRoom.room_id)
  return room_id_;
}
inline void SC_ExitRoom::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ExitRoom.room_id)
}

// optional int32 result = 2;
inline bool SC_ExitRoom::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ExitRoom::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ExitRoom::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ExitRoom::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_ExitRoom::result() const {
  // @@protoc_insertion_point(field_get:SC_ExitRoom.result)
  return result_;
}
inline void SC_ExitRoom::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ExitRoom.result)
}

// -------------------------------------------------------------------

// SC_NotifyExitRoom

// optional int32 room_id = 1;
inline bool SC_NotifyExitRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_NotifyExitRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_NotifyExitRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_NotifyExitRoom::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 SC_NotifyExitRoom::room_id() const {
  // @@protoc_insertion_point(field_get:SC_NotifyExitRoom.room_id)
  return room_id_;
}
inline void SC_NotifyExitRoom::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyExitRoom.room_id)
}

// optional int32 guid = 2;
inline bool SC_NotifyExitRoom::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_NotifyExitRoom::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_NotifyExitRoom::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_NotifyExitRoom::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SC_NotifyExitRoom::guid() const {
  // @@protoc_insertion_point(field_get:SC_NotifyExitRoom.guid)
  return guid_;
}
inline void SC_NotifyExitRoom::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyExitRoom.guid)
}

// -------------------------------------------------------------------

// CS_AutoEnterRoom

// -------------------------------------------------------------------

// CS_AutoSitDown

// -------------------------------------------------------------------

// CS_SitDown

// optional int32 table_id = 1;
inline bool CS_SitDown::has_table_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_SitDown::set_has_table_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_SitDown::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_SitDown::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 CS_SitDown::table_id() const {
  // @@protoc_insertion_point(field_get:CS_SitDown.table_id)
  return table_id_;
}
inline void CS_SitDown::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:CS_SitDown.table_id)
}

// optional int32 chair_id = 2;
inline bool CS_SitDown::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_SitDown::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_SitDown::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_SitDown::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 CS_SitDown::chair_id() const {
  // @@protoc_insertion_point(field_get:CS_SitDown.chair_id)
  return chair_id_;
}
inline void CS_SitDown::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:CS_SitDown.chair_id)
}

// -------------------------------------------------------------------

// SC_SitDown

// optional int32 table_id = 1;
inline bool SC_SitDown::has_table_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_SitDown::set_has_table_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_SitDown::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_SitDown::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 SC_SitDown::table_id() const {
  // @@protoc_insertion_point(field_get:SC_SitDown.table_id)
  return table_id_;
}
inline void SC_SitDown::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_SitDown.table_id)
}

// optional int32 chair_id = 2;
inline bool SC_SitDown::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_SitDown::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_SitDown::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_SitDown::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_SitDown::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_SitDown.chair_id)
  return chair_id_;
}
inline void SC_SitDown::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_SitDown.chair_id)
}

// optional int32 result = 3;
inline bool SC_SitDown::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_SitDown::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_SitDown::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_SitDown::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_SitDown::result() const {
  // @@protoc_insertion_point(field_get:SC_SitDown.result)
  return result_;
}
inline void SC_SitDown::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_SitDown.result)
}

// -------------------------------------------------------------------

// SC_NotifySitDown

// optional int32 table_id = 1;
inline bool SC_NotifySitDown::has_table_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_NotifySitDown::set_has_table_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_NotifySitDown::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_NotifySitDown::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 SC_NotifySitDown::table_id() const {
  // @@protoc_insertion_point(field_get:SC_NotifySitDown.table_id)
  return table_id_;
}
inline void SC_NotifySitDown::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifySitDown.table_id)
}

// optional .PlayerVisualInfo pb_visual_info = 2;
inline bool SC_NotifySitDown::has_pb_visual_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_NotifySitDown::set_has_pb_visual_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_NotifySitDown::clear_has_pb_visual_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_NotifySitDown::clear_pb_visual_info() {
  if (pb_visual_info_ != NULL) pb_visual_info_->::PlayerVisualInfo::Clear();
  clear_has_pb_visual_info();
}
inline const ::PlayerVisualInfo& SC_NotifySitDown::pb_visual_info() const {
  // @@protoc_insertion_point(field_get:SC_NotifySitDown.pb_visual_info)
  return pb_visual_info_ != NULL ? *pb_visual_info_
                         : *::PlayerVisualInfo::internal_default_instance();
}
inline ::PlayerVisualInfo* SC_NotifySitDown::mutable_pb_visual_info() {
  set_has_pb_visual_info();
  if (pb_visual_info_ == NULL) {
    pb_visual_info_ = new ::PlayerVisualInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_NotifySitDown.pb_visual_info)
  return pb_visual_info_;
}
inline ::PlayerVisualInfo* SC_NotifySitDown::release_pb_visual_info() {
  // @@protoc_insertion_point(field_release:SC_NotifySitDown.pb_visual_info)
  clear_has_pb_visual_info();
  ::PlayerVisualInfo* temp = pb_visual_info_;
  pb_visual_info_ = NULL;
  return temp;
}
inline void SC_NotifySitDown::set_allocated_pb_visual_info(::PlayerVisualInfo* pb_visual_info) {
  delete pb_visual_info_;
  pb_visual_info_ = pb_visual_info;
  if (pb_visual_info) {
    set_has_pb_visual_info();
  } else {
    clear_has_pb_visual_info();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_NotifySitDown.pb_visual_info)
}

// optional bool is_onfline = 4;
inline bool SC_NotifySitDown::has_is_onfline() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_NotifySitDown::set_has_is_onfline() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_NotifySitDown::clear_has_is_onfline() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_NotifySitDown::clear_is_onfline() {
  is_onfline_ = false;
  clear_has_is_onfline();
}
inline bool SC_NotifySitDown::is_onfline() const {
  // @@protoc_insertion_point(field_get:SC_NotifySitDown.is_onfline)
  return is_onfline_;
}
inline void SC_NotifySitDown::set_is_onfline(bool value) {
  set_has_is_onfline();
  is_onfline_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifySitDown.is_onfline)
}

// -------------------------------------------------------------------

// CS_StandUp

// -------------------------------------------------------------------

// SC_StandUp

// optional int32 table_id = 1;
inline bool SC_StandUp::has_table_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_StandUp::set_has_table_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_StandUp::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_StandUp::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 SC_StandUp::table_id() const {
  // @@protoc_insertion_point(field_get:SC_StandUp.table_id)
  return table_id_;
}
inline void SC_StandUp::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_StandUp.table_id)
}

// optional int32 chair_id = 2;
inline bool SC_StandUp::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_StandUp::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_StandUp::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_StandUp::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_StandUp::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_StandUp.chair_id)
  return chair_id_;
}
inline void SC_StandUp::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_StandUp.chair_id)
}

// optional int32 result = 3;
inline bool SC_StandUp::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_StandUp::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_StandUp::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_StandUp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_StandUp::result() const {
  // @@protoc_insertion_point(field_get:SC_StandUp.result)
  return result_;
}
inline void SC_StandUp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_StandUp.result)
}

// -------------------------------------------------------------------

// SC_NotifyStandUp

// optional int32 table_id = 1;
inline bool SC_NotifyStandUp::has_table_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_NotifyStandUp::set_has_table_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_NotifyStandUp::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_NotifyStandUp::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 SC_NotifyStandUp::table_id() const {
  // @@protoc_insertion_point(field_get:SC_NotifyStandUp.table_id)
  return table_id_;
}
inline void SC_NotifyStandUp::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyStandUp.table_id)
}

// optional int32 chair_id = 2;
inline bool SC_NotifyStandUp::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_NotifyStandUp::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_NotifyStandUp::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_NotifyStandUp::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_NotifyStandUp::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_NotifyStandUp.chair_id)
  return chair_id_;
}
inline void SC_NotifyStandUp::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyStandUp.chair_id)
}

// optional int32 guid = 3;
inline bool SC_NotifyStandUp::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_NotifyStandUp::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_NotifyStandUp::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_NotifyStandUp::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SC_NotifyStandUp::guid() const {
  // @@protoc_insertion_point(field_get:SC_NotifyStandUp.guid)
  return guid_;
}
inline void SC_NotifyStandUp::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyStandUp.guid)
}

// optional bool is_offline = 4;
inline bool SC_NotifyStandUp::has_is_offline() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_NotifyStandUp::set_has_is_offline() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_NotifyStandUp::clear_has_is_offline() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_NotifyStandUp::clear_is_offline() {
  is_offline_ = false;
  clear_has_is_offline();
}
inline bool SC_NotifyStandUp::is_offline() const {
  // @@protoc_insertion_point(field_get:SC_NotifyStandUp.is_offline)
  return is_offline_;
}
inline void SC_NotifyStandUp::set_is_offline(bool value) {
  set_has_is_offline();
  is_offline_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyStandUp.is_offline)
}

// -------------------------------------------------------------------

// CS_EnterRoomAndSitDown

// -------------------------------------------------------------------

// SC_EnterRoomAndSitDown

// optional int32 room_id = 1;
inline bool SC_EnterRoomAndSitDown::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_EnterRoomAndSitDown::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_EnterRoomAndSitDown::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_EnterRoomAndSitDown::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 SC_EnterRoomAndSitDown::room_id() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.room_id)
  return room_id_;
}
inline void SC_EnterRoomAndSitDown::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.room_id)
}

// optional int32 table_id = 2;
inline bool SC_EnterRoomAndSitDown::has_table_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_EnterRoomAndSitDown::set_has_table_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_EnterRoomAndSitDown::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_EnterRoomAndSitDown::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 SC_EnterRoomAndSitDown::table_id() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.table_id)
  return table_id_;
}
inline void SC_EnterRoomAndSitDown::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.table_id)
}

// optional int32 chair_id = 3;
inline bool SC_EnterRoomAndSitDown::has_chair_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_EnterRoomAndSitDown::set_has_chair_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_EnterRoomAndSitDown::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_EnterRoomAndSitDown::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_EnterRoomAndSitDown::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.chair_id)
  return chair_id_;
}
inline void SC_EnterRoomAndSitDown::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.chair_id)
}

// optional int32 result = 4;
inline bool SC_EnterRoomAndSitDown::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SC_EnterRoomAndSitDown::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SC_EnterRoomAndSitDown::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SC_EnterRoomAndSitDown::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_EnterRoomAndSitDown::result() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.result)
  return result_;
}
inline void SC_EnterRoomAndSitDown::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.result)
}

// repeated .PlayerVisualInfo pb_visual_info = 5;
inline int SC_EnterRoomAndSitDown::pb_visual_info_size() const {
  return pb_visual_info_.size();
}
inline void SC_EnterRoomAndSitDown::clear_pb_visual_info() {
  pb_visual_info_.Clear();
}
inline const ::PlayerVisualInfo& SC_EnterRoomAndSitDown::pb_visual_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.pb_visual_info)
  return pb_visual_info_.Get(index);
}
inline ::PlayerVisualInfo* SC_EnterRoomAndSitDown::mutable_pb_visual_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_EnterRoomAndSitDown.pb_visual_info)
  return pb_visual_info_.Mutable(index);
}
inline ::PlayerVisualInfo* SC_EnterRoomAndSitDown::add_pb_visual_info() {
  // @@protoc_insertion_point(field_add:SC_EnterRoomAndSitDown.pb_visual_info)
  return pb_visual_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >*
SC_EnterRoomAndSitDown::mutable_pb_visual_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_EnterRoomAndSitDown.pb_visual_info)
  return &pb_visual_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >&
SC_EnterRoomAndSitDown::pb_visual_info() const {
  // @@protoc_insertion_point(field_list:SC_EnterRoomAndSitDown.pb_visual_info)
  return pb_visual_info_;
}

// optional int32 game_id = 6;
inline bool SC_EnterRoomAndSitDown::has_game_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SC_EnterRoomAndSitDown::set_has_game_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SC_EnterRoomAndSitDown::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SC_EnterRoomAndSitDown::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 SC_EnterRoomAndSitDown::game_id() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.game_id)
  return game_id_;
}
inline void SC_EnterRoomAndSitDown::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.game_id)
}

// optional int32 first_game_type = 7;
inline bool SC_EnterRoomAndSitDown::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SC_EnterRoomAndSitDown::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SC_EnterRoomAndSitDown::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SC_EnterRoomAndSitDown::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 SC_EnterRoomAndSitDown::first_game_type() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.first_game_type)
  return first_game_type_;
}
inline void SC_EnterRoomAndSitDown::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.first_game_type)
}

// optional int32 second_game_type = 8;
inline bool SC_EnterRoomAndSitDown::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SC_EnterRoomAndSitDown::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SC_EnterRoomAndSitDown::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SC_EnterRoomAndSitDown::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
inline ::google::protobuf::int32 SC_EnterRoomAndSitDown::second_game_type() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.second_game_type)
  return second_game_type_;
}
inline void SC_EnterRoomAndSitDown::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.second_game_type)
}

// optional string ip_area = 9;
inline bool SC_EnterRoomAndSitDown::has_ip_area() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_EnterRoomAndSitDown::set_has_ip_area() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_EnterRoomAndSitDown::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_EnterRoomAndSitDown::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
inline const ::std::string& SC_EnterRoomAndSitDown::ip_area() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.ip_area)
  return ip_area_.GetNoArena();
}
inline void SC_EnterRoomAndSitDown::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.ip_area)
}
#if LANG_CXX11
inline void SC_EnterRoomAndSitDown::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_EnterRoomAndSitDown.ip_area)
}
#endif
inline void SC_EnterRoomAndSitDown::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_EnterRoomAndSitDown.ip_area)
}
inline void SC_EnterRoomAndSitDown::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_EnterRoomAndSitDown.ip_area)
}
inline ::std::string* SC_EnterRoomAndSitDown::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:SC_EnterRoomAndSitDown.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_EnterRoomAndSitDown::release_ip_area() {
  // @@protoc_insertion_point(field_release:SC_EnterRoomAndSitDown.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_EnterRoomAndSitDown::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:SC_EnterRoomAndSitDown.ip_area)
}

// optional bool private_room = 10;
inline bool SC_EnterRoomAndSitDown::has_private_room() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SC_EnterRoomAndSitDown::set_has_private_room() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SC_EnterRoomAndSitDown::clear_has_private_room() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SC_EnterRoomAndSitDown::clear_private_room() {
  private_room_ = false;
  clear_has_private_room();
}
inline bool SC_EnterRoomAndSitDown::private_room() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.private_room)
  return private_room_;
}
inline void SC_EnterRoomAndSitDown::set_private_room(bool value) {
  set_has_private_room();
  private_room_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.private_room)
}

// optional int32 balance_money = 11;
inline bool SC_EnterRoomAndSitDown::has_balance_money() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SC_EnterRoomAndSitDown::set_has_balance_money() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SC_EnterRoomAndSitDown::clear_has_balance_money() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SC_EnterRoomAndSitDown::clear_balance_money() {
  balance_money_ = 0;
  clear_has_balance_money();
}
inline ::google::protobuf::int32 SC_EnterRoomAndSitDown::balance_money() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.balance_money)
  return balance_money_;
}
inline void SC_EnterRoomAndSitDown::set_balance_money(::google::protobuf::int32 value) {
  set_has_balance_money();
  balance_money_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.balance_money)
}

// optional int32 private_room_score_type = 12;
inline bool SC_EnterRoomAndSitDown::has_private_room_score_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SC_EnterRoomAndSitDown::set_has_private_room_score_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SC_EnterRoomAndSitDown::clear_has_private_room_score_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SC_EnterRoomAndSitDown::clear_private_room_score_type() {
  private_room_score_type_ = 0;
  clear_has_private_room_score_type();
}
inline ::google::protobuf::int32 SC_EnterRoomAndSitDown::private_room_score_type() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.private_room_score_type)
  return private_room_score_type_;
}
inline void SC_EnterRoomAndSitDown::set_private_room_score_type(::google::protobuf::int32 value) {
  set_has_private_room_score_type();
  private_room_score_type_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.private_room_score_type)
}

// optional int32 private_room_cell_money = 13;
inline bool SC_EnterRoomAndSitDown::has_private_room_cell_money() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SC_EnterRoomAndSitDown::set_has_private_room_cell_money() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SC_EnterRoomAndSitDown::clear_has_private_room_cell_money() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SC_EnterRoomAndSitDown::clear_private_room_cell_money() {
  private_room_cell_money_ = 0;
  clear_has_private_room_cell_money();
}
inline ::google::protobuf::int32 SC_EnterRoomAndSitDown::private_room_cell_money() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.private_room_cell_money)
  return private_room_cell_money_;
}
inline void SC_EnterRoomAndSitDown::set_private_room_cell_money(::google::protobuf::int32 value) {
  set_has_private_room_cell_money();
  private_room_cell_money_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.private_room_cell_money)
}

// optional int32 private_room_id = 14;
inline bool SC_EnterRoomAndSitDown::has_private_room_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SC_EnterRoomAndSitDown::set_has_private_room_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SC_EnterRoomAndSitDown::clear_has_private_room_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SC_EnterRoomAndSitDown::clear_private_room_id() {
  private_room_id_ = 0;
  clear_has_private_room_id();
}
inline ::google::protobuf::int32 SC_EnterRoomAndSitDown::private_room_id() const {
  // @@protoc_insertion_point(field_get:SC_EnterRoomAndSitDown.private_room_id)
  return private_room_id_;
}
inline void SC_EnterRoomAndSitDown::set_private_room_id(::google::protobuf::int32 value) {
  set_has_private_room_id();
  private_room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_EnterRoomAndSitDown.private_room_id)
}

// -------------------------------------------------------------------

// CS_StandUpAndExitRoom

// -------------------------------------------------------------------

// SC_StandUpAndExitRoom

// optional int32 room_id = 1;
inline bool SC_StandUpAndExitRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_StandUpAndExitRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_StandUpAndExitRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_StandUpAndExitRoom::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 SC_StandUpAndExitRoom::room_id() const {
  // @@protoc_insertion_point(field_get:SC_StandUpAndExitRoom.room_id)
  return room_id_;
}
inline void SC_StandUpAndExitRoom::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_StandUpAndExitRoom.room_id)
}

// optional int32 table_id = 2;
inline bool SC_StandUpAndExitRoom::has_table_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_StandUpAndExitRoom::set_has_table_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_StandUpAndExitRoom::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_StandUpAndExitRoom::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 SC_StandUpAndExitRoom::table_id() const {
  // @@protoc_insertion_point(field_get:SC_StandUpAndExitRoom.table_id)
  return table_id_;
}
inline void SC_StandUpAndExitRoom::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_StandUpAndExitRoom.table_id)
}

// optional int32 chair_id = 3;
inline bool SC_StandUpAndExitRoom::has_chair_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_StandUpAndExitRoom::set_has_chair_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_StandUpAndExitRoom::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_StandUpAndExitRoom::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_StandUpAndExitRoom::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_StandUpAndExitRoom.chair_id)
  return chair_id_;
}
inline void SC_StandUpAndExitRoom::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_StandUpAndExitRoom.chair_id)
}

// optional int32 result = 4;
inline bool SC_StandUpAndExitRoom::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_StandUpAndExitRoom::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_StandUpAndExitRoom::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_StandUpAndExitRoom::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_StandUpAndExitRoom::result() const {
  // @@protoc_insertion_point(field_get:SC_StandUpAndExitRoom.result)
  return result_;
}
inline void SC_StandUpAndExitRoom::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_StandUpAndExitRoom.result)
}

// -------------------------------------------------------------------

// CS_ChangeChair

// -------------------------------------------------------------------

// SC_ChangeChair

// optional int32 table_id = 1;
inline bool SC_ChangeChair::has_table_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ChangeChair::set_has_table_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ChangeChair::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ChangeChair::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 SC_ChangeChair::table_id() const {
  // @@protoc_insertion_point(field_get:SC_ChangeChair.table_id)
  return table_id_;
}
inline void SC_ChangeChair::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeChair.table_id)
}

// optional int32 chair_id = 2;
inline bool SC_ChangeChair::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ChangeChair::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ChangeChair::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ChangeChair::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_ChangeChair::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ChangeChair.chair_id)
  return chair_id_;
}
inline void SC_ChangeChair::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeChair.chair_id)
}

// optional int32 result = 3;
inline bool SC_ChangeChair::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_ChangeChair::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_ChangeChair::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_ChangeChair::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_ChangeChair::result() const {
  // @@protoc_insertion_point(field_get:SC_ChangeChair.result)
  return result_;
}
inline void SC_ChangeChair::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeChair.result)
}

// repeated .PlayerVisualInfo pb_visual_info = 4;
inline int SC_ChangeChair::pb_visual_info_size() const {
  return pb_visual_info_.size();
}
inline void SC_ChangeChair::clear_pb_visual_info() {
  pb_visual_info_.Clear();
}
inline const ::PlayerVisualInfo& SC_ChangeChair::pb_visual_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_ChangeChair.pb_visual_info)
  return pb_visual_info_.Get(index);
}
inline ::PlayerVisualInfo* SC_ChangeChair::mutable_pb_visual_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_ChangeChair.pb_visual_info)
  return pb_visual_info_.Mutable(index);
}
inline ::PlayerVisualInfo* SC_ChangeChair::add_pb_visual_info() {
  // @@protoc_insertion_point(field_add:SC_ChangeChair.pb_visual_info)
  return pb_visual_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >*
SC_ChangeChair::mutable_pb_visual_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_ChangeChair.pb_visual_info)
  return &pb_visual_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >&
SC_ChangeChair::pb_visual_info() const {
  // @@protoc_insertion_point(field_list:SC_ChangeChair.pb_visual_info)
  return pb_visual_info_;
}

// -------------------------------------------------------------------

// CS_ChangeTable

// -------------------------------------------------------------------

// CS_Ready

// -------------------------------------------------------------------

// SC_Ready

// optional int32 ready_chair_id = 1;
inline bool SC_Ready::has_ready_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_Ready::set_has_ready_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_Ready::clear_has_ready_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_Ready::clear_ready_chair_id() {
  ready_chair_id_ = 0;
  clear_has_ready_chair_id();
}
inline ::google::protobuf::int32 SC_Ready::ready_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_Ready.ready_chair_id)
  return ready_chair_id_;
}
inline void SC_Ready::set_ready_chair_id(::google::protobuf::int32 value) {
  set_has_ready_chair_id();
  ready_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_Ready.ready_chair_id)
}

// optional bool is_ready = 2;
inline bool SC_Ready::has_is_ready() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_Ready::set_has_is_ready() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_Ready::clear_has_is_ready() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_Ready::clear_is_ready() {
  is_ready_ = false;
  clear_has_is_ready();
}
inline bool SC_Ready::is_ready() const {
  // @@protoc_insertion_point(field_get:SC_Ready.is_ready)
  return is_ready_;
}
inline void SC_Ready::set_is_ready(bool value) {
  set_has_is_ready();
  is_ready_ = value;
  // @@protoc_insertion_point(field_set:SC_Ready.is_ready)
}

// -------------------------------------------------------------------

// CS_Exit

// -------------------------------------------------------------------

// SC_ReadyFailed

// optional int32 result = 1;
inline bool SC_ReadyFailed::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ReadyFailed::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ReadyFailed::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ReadyFailed::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_ReadyFailed::result() const {
  // @@protoc_insertion_point(field_get:SC_ReadyFailed.result)
  return result_;
}
inline void SC_ReadyFailed::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ReadyFailed.result)
}

// optional int64 money = 2;
inline bool SC_ReadyFailed::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ReadyFailed::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ReadyFailed::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ReadyFailed::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SC_ReadyFailed::money() const {
  // @@protoc_insertion_point(field_get:SC_ReadyFailed.money)
  return money_;
}
inline void SC_ReadyFailed::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_ReadyFailed.money)
}

// -------------------------------------------------------------------

// SC_Gamefinish

// optional int64 money = 1;
inline bool SC_Gamefinish::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_Gamefinish::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_Gamefinish::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_Gamefinish::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SC_Gamefinish::money() const {
  // @@protoc_insertion_point(field_get:SC_Gamefinish.money)
  return money_;
}
inline void SC_Gamefinish::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_Gamefinish.money)
}

// -------------------------------------------------------------------

// SC_PlayerReconnection

// optional int32 room_id = 1;
inline bool SC_PlayerReconnection::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_PlayerReconnection::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_PlayerReconnection::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_PlayerReconnection::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 SC_PlayerReconnection::room_id() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.room_id)
  return room_id_;
}
inline void SC_PlayerReconnection::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.room_id)
}

// optional int32 table_id = 2;
inline bool SC_PlayerReconnection::has_table_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_PlayerReconnection::set_has_table_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_PlayerReconnection::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_PlayerReconnection::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 SC_PlayerReconnection::table_id() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.table_id)
  return table_id_;
}
inline void SC_PlayerReconnection::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.table_id)
}

// optional int32 chair_id = 3;
inline bool SC_PlayerReconnection::has_chair_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_PlayerReconnection::set_has_chair_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_PlayerReconnection::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_PlayerReconnection::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_PlayerReconnection::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.chair_id)
  return chair_id_;
}
inline void SC_PlayerReconnection::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.chair_id)
}

// optional int32 result = 4;
inline bool SC_PlayerReconnection::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SC_PlayerReconnection::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SC_PlayerReconnection::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SC_PlayerReconnection::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_PlayerReconnection::result() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.result)
  return result_;
}
inline void SC_PlayerReconnection::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.result)
}

// repeated .PlayerVisualInfo pb_visual_info = 5;
inline int SC_PlayerReconnection::pb_visual_info_size() const {
  return pb_visual_info_.size();
}
inline void SC_PlayerReconnection::clear_pb_visual_info() {
  pb_visual_info_.Clear();
}
inline const ::PlayerVisualInfo& SC_PlayerReconnection::pb_visual_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.pb_visual_info)
  return pb_visual_info_.Get(index);
}
inline ::PlayerVisualInfo* SC_PlayerReconnection::mutable_pb_visual_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_PlayerReconnection.pb_visual_info)
  return pb_visual_info_.Mutable(index);
}
inline ::PlayerVisualInfo* SC_PlayerReconnection::add_pb_visual_info() {
  // @@protoc_insertion_point(field_add:SC_PlayerReconnection.pb_visual_info)
  return pb_visual_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >*
SC_PlayerReconnection::mutable_pb_visual_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_PlayerReconnection.pb_visual_info)
  return &pb_visual_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >&
SC_PlayerReconnection::pb_visual_info() const {
  // @@protoc_insertion_point(field_list:SC_PlayerReconnection.pb_visual_info)
  return pb_visual_info_;
}

// optional int32 game_id = 6;
inline bool SC_PlayerReconnection::has_game_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SC_PlayerReconnection::set_has_game_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SC_PlayerReconnection::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SC_PlayerReconnection::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 SC_PlayerReconnection::game_id() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.game_id)
  return game_id_;
}
inline void SC_PlayerReconnection::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.game_id)
}

// optional int32 first_game_type = 7;
inline bool SC_PlayerReconnection::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SC_PlayerReconnection::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SC_PlayerReconnection::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SC_PlayerReconnection::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 SC_PlayerReconnection::first_game_type() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.first_game_type)
  return first_game_type_;
}
inline void SC_PlayerReconnection::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.first_game_type)
}

// optional int32 second_game_type = 8;
inline bool SC_PlayerReconnection::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SC_PlayerReconnection::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SC_PlayerReconnection::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SC_PlayerReconnection::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
inline ::google::protobuf::int32 SC_PlayerReconnection::second_game_type() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.second_game_type)
  return second_game_type_;
}
inline void SC_PlayerReconnection::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.second_game_type)
}

// optional string ip_area = 9;
inline bool SC_PlayerReconnection::has_ip_area() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_PlayerReconnection::set_has_ip_area() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_PlayerReconnection::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_PlayerReconnection::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
inline const ::std::string& SC_PlayerReconnection::ip_area() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.ip_area)
  return ip_area_.GetNoArena();
}
inline void SC_PlayerReconnection::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.ip_area)
}
#if LANG_CXX11
inline void SC_PlayerReconnection::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_PlayerReconnection.ip_area)
}
#endif
inline void SC_PlayerReconnection::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_PlayerReconnection.ip_area)
}
inline void SC_PlayerReconnection::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_PlayerReconnection.ip_area)
}
inline ::std::string* SC_PlayerReconnection::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:SC_PlayerReconnection.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_PlayerReconnection::release_ip_area() {
  // @@protoc_insertion_point(field_release:SC_PlayerReconnection.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_PlayerReconnection::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:SC_PlayerReconnection.ip_area)
}

// optional bool is_ready = 10;
inline bool SC_PlayerReconnection::has_is_ready() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SC_PlayerReconnection::set_has_is_ready() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SC_PlayerReconnection::clear_has_is_ready() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SC_PlayerReconnection::clear_is_ready() {
  is_ready_ = false;
  clear_has_is_ready();
}
inline bool SC_PlayerReconnection::is_ready() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.is_ready)
  return is_ready_;
}
inline void SC_PlayerReconnection::set_is_ready(bool value) {
  set_has_is_ready();
  is_ready_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.is_ready)
}

// optional bool private_room = 11;
inline bool SC_PlayerReconnection::has_private_room() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SC_PlayerReconnection::set_has_private_room() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SC_PlayerReconnection::clear_has_private_room() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SC_PlayerReconnection::clear_private_room() {
  private_room_ = false;
  clear_has_private_room();
}
inline bool SC_PlayerReconnection::private_room() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.private_room)
  return private_room_;
}
inline void SC_PlayerReconnection::set_private_room(bool value) {
  set_has_private_room();
  private_room_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.private_room)
}

// optional int32 private_room_score_type = 12;
inline bool SC_PlayerReconnection::has_private_room_score_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SC_PlayerReconnection::set_has_private_room_score_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SC_PlayerReconnection::clear_has_private_room_score_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SC_PlayerReconnection::clear_private_room_score_type() {
  private_room_score_type_ = 0;
  clear_has_private_room_score_type();
}
inline ::google::protobuf::int32 SC_PlayerReconnection::private_room_score_type() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.private_room_score_type)
  return private_room_score_type_;
}
inline void SC_PlayerReconnection::set_private_room_score_type(::google::protobuf::int32 value) {
  set_has_private_room_score_type();
  private_room_score_type_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.private_room_score_type)
}

// optional int32 private_room_cell_money = 13;
inline bool SC_PlayerReconnection::has_private_room_cell_money() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SC_PlayerReconnection::set_has_private_room_cell_money() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SC_PlayerReconnection::clear_has_private_room_cell_money() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SC_PlayerReconnection::clear_private_room_cell_money() {
  private_room_cell_money_ = 0;
  clear_has_private_room_cell_money();
}
inline ::google::protobuf::int32 SC_PlayerReconnection::private_room_cell_money() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.private_room_cell_money)
  return private_room_cell_money_;
}
inline void SC_PlayerReconnection::set_private_room_cell_money(::google::protobuf::int32 value) {
  set_has_private_room_cell_money();
  private_room_cell_money_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.private_room_cell_money)
}

// optional int32 private_room_id = 14;
inline bool SC_PlayerReconnection::has_private_room_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SC_PlayerReconnection::set_has_private_room_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SC_PlayerReconnection::clear_has_private_room_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SC_PlayerReconnection::clear_private_room_id() {
  private_room_id_ = 0;
  clear_has_private_room_id();
}
inline ::google::protobuf::int32 SC_PlayerReconnection::private_room_id() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.private_room_id)
  return private_room_id_;
}
inline void SC_PlayerReconnection::set_private_room_id(::google::protobuf::int32 value) {
  set_has_private_room_id();
  private_room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.private_room_id)
}

// optional int32 private_room_has_start = 15;
inline bool SC_PlayerReconnection::has_private_room_has_start() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SC_PlayerReconnection::set_has_private_room_has_start() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SC_PlayerReconnection::clear_has_private_room_has_start() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SC_PlayerReconnection::clear_private_room_has_start() {
  private_room_has_start_ = 0;
  clear_has_private_room_has_start();
}
inline ::google::protobuf::int32 SC_PlayerReconnection::private_room_has_start() const {
  // @@protoc_insertion_point(field_get:SC_PlayerReconnection.private_room_has_start)
  return private_room_has_start_;
}
inline void SC_PlayerReconnection::set_private_room_has_start(::google::protobuf::int32 value) {
  set_has_private_room_has_start();
  private_room_has_start_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerReconnection.private_room_has_start)
}

// -------------------------------------------------------------------

// SC_ChangeTable

// optional int32 room_id = 1;
inline bool SC_ChangeTable::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_ChangeTable::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_ChangeTable::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_ChangeTable::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 SC_ChangeTable::room_id() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.room_id)
  return room_id_;
}
inline void SC_ChangeTable::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeTable.room_id)
}

// optional int32 table_id = 2;
inline bool SC_ChangeTable::has_table_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_ChangeTable::set_has_table_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_ChangeTable::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_ChangeTable::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 SC_ChangeTable::table_id() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.table_id)
  return table_id_;
}
inline void SC_ChangeTable::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeTable.table_id)
}

// optional int32 chair_id = 3;
inline bool SC_ChangeTable::has_chair_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_ChangeTable::set_has_chair_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_ChangeTable::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_ChangeTable::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_ChangeTable::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.chair_id)
  return chair_id_;
}
inline void SC_ChangeTable::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeTable.chair_id)
}

// optional int32 result = 4;
inline bool SC_ChangeTable::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SC_ChangeTable::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SC_ChangeTable::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SC_ChangeTable::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_ChangeTable::result() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.result)
  return result_;
}
inline void SC_ChangeTable::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeTable.result)
}

// repeated .PlayerVisualInfo pb_visual_info = 5;
inline int SC_ChangeTable::pb_visual_info_size() const {
  return pb_visual_info_.size();
}
inline void SC_ChangeTable::clear_pb_visual_info() {
  pb_visual_info_.Clear();
}
inline const ::PlayerVisualInfo& SC_ChangeTable::pb_visual_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.pb_visual_info)
  return pb_visual_info_.Get(index);
}
inline ::PlayerVisualInfo* SC_ChangeTable::mutable_pb_visual_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_ChangeTable.pb_visual_info)
  return pb_visual_info_.Mutable(index);
}
inline ::PlayerVisualInfo* SC_ChangeTable::add_pb_visual_info() {
  // @@protoc_insertion_point(field_add:SC_ChangeTable.pb_visual_info)
  return pb_visual_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >*
SC_ChangeTable::mutable_pb_visual_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_ChangeTable.pb_visual_info)
  return &pb_visual_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >&
SC_ChangeTable::pb_visual_info() const {
  // @@protoc_insertion_point(field_list:SC_ChangeTable.pb_visual_info)
  return pb_visual_info_;
}

// optional int32 game_id = 6;
inline bool SC_ChangeTable::has_game_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SC_ChangeTable::set_has_game_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SC_ChangeTable::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SC_ChangeTable::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 SC_ChangeTable::game_id() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.game_id)
  return game_id_;
}
inline void SC_ChangeTable::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeTable.game_id)
}

// optional int32 first_game_type = 7;
inline bool SC_ChangeTable::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SC_ChangeTable::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SC_ChangeTable::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SC_ChangeTable::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 SC_ChangeTable::first_game_type() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.first_game_type)
  return first_game_type_;
}
inline void SC_ChangeTable::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeTable.first_game_type)
}

// optional int32 second_game_type = 8;
inline bool SC_ChangeTable::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SC_ChangeTable::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SC_ChangeTable::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SC_ChangeTable::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
inline ::google::protobuf::int32 SC_ChangeTable::second_game_type() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.second_game_type)
  return second_game_type_;
}
inline void SC_ChangeTable::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_ChangeTable.second_game_type)
}

// optional string ip_area = 9;
inline bool SC_ChangeTable::has_ip_area() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ChangeTable::set_has_ip_area() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ChangeTable::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ChangeTable::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
inline const ::std::string& SC_ChangeTable::ip_area() const {
  // @@protoc_insertion_point(field_get:SC_ChangeTable.ip_area)
  return ip_area_.GetNoArena();
}
inline void SC_ChangeTable::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ChangeTable.ip_area)
}
#if LANG_CXX11
inline void SC_ChangeTable::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ChangeTable.ip_area)
}
#endif
inline void SC_ChangeTable::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ChangeTable.ip_area)
}
inline void SC_ChangeTable::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ChangeTable.ip_area)
}
inline ::std::string* SC_ChangeTable::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:SC_ChangeTable.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ChangeTable::release_ip_area() {
  // @@protoc_insertion_point(field_release:SC_ChangeTable.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ChangeTable::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:SC_ChangeTable.ip_area)
}

// -------------------------------------------------------------------

// SC_HEARTBEAT

// optional int32 severTime = 1;
inline bool SC_HEARTBEAT::has_severtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_HEARTBEAT::set_has_severtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_HEARTBEAT::clear_has_severtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_HEARTBEAT::clear_severtime() {
  severtime_ = 0;
  clear_has_severtime();
}
inline ::google::protobuf::int32 SC_HEARTBEAT::severtime() const {
  // @@protoc_insertion_point(field_get:SC_HEARTBEAT.severTime)
  return severtime_;
}
inline void SC_HEARTBEAT::set_severtime(::google::protobuf::int32 value) {
  set_has_severtime();
  severtime_ = value;
  // @@protoc_insertion_point(field_set:SC_HEARTBEAT.severTime)
}

// -------------------------------------------------------------------

// CS_HEARTBEAT

// -------------------------------------------------------------------

// CS_ReconnectionPlay

// -------------------------------------------------------------------

// SC_ReconnectionPlay

// optional bool find_table = 1;
inline bool SC_ReconnectionPlay::has_find_table() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ReconnectionPlay::set_has_find_table() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ReconnectionPlay::clear_has_find_table() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ReconnectionPlay::clear_find_table() {
  find_table_ = false;
  clear_has_find_table();
}
inline bool SC_ReconnectionPlay::find_table() const {
  // @@protoc_insertion_point(field_get:SC_ReconnectionPlay.find_table)
  return find_table_;
}
inline void SC_ReconnectionPlay::set_find_table(bool value) {
  set_has_find_table();
  find_table_ = value;
  // @@protoc_insertion_point(field_set:SC_ReconnectionPlay.find_table)
}

// -------------------------------------------------------------------

// SC_SimpleRespons

// optional int32 status = 1;
inline bool SC_SimpleRespons::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_SimpleRespons::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_SimpleRespons::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_SimpleRespons::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 SC_SimpleRespons::status() const {
  // @@protoc_insertion_point(field_get:SC_SimpleRespons.status)
  return status_;
}
inline void SC_SimpleRespons::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:SC_SimpleRespons.status)
}

// -------------------------------------------------------------------

// CS_QueryPlayerMsgData

// -------------------------------------------------------------------

// SC_QueryPlayerMsgData

// repeated .Msg_DataInfo pb_msg_data = 1;
inline int SC_QueryPlayerMsgData::pb_msg_data_size() const {
  return pb_msg_data_.size();
}
inline void SC_QueryPlayerMsgData::clear_pb_msg_data() {
  pb_msg_data_.Clear();
}
inline const ::Msg_DataInfo& SC_QueryPlayerMsgData::pb_msg_data(int index) const {
  // @@protoc_insertion_point(field_get:SC_QueryPlayerMsgData.pb_msg_data)
  return pb_msg_data_.Get(index);
}
inline ::Msg_DataInfo* SC_QueryPlayerMsgData::mutable_pb_msg_data(int index) {
  // @@protoc_insertion_point(field_mutable:SC_QueryPlayerMsgData.pb_msg_data)
  return pb_msg_data_.Mutable(index);
}
inline ::Msg_DataInfo* SC_QueryPlayerMsgData::add_pb_msg_data() {
  // @@protoc_insertion_point(field_add:SC_QueryPlayerMsgData.pb_msg_data)
  return pb_msg_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >*
SC_QueryPlayerMsgData::mutable_pb_msg_data() {
  // @@protoc_insertion_point(field_mutable_list:SC_QueryPlayerMsgData.pb_msg_data)
  return &pb_msg_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >&
SC_QueryPlayerMsgData::pb_msg_data() const {
  // @@protoc_insertion_point(field_list:SC_QueryPlayerMsgData.pb_msg_data)
  return pb_msg_data_;
}

// -------------------------------------------------------------------

// SC_NewMsgData

// repeated .Msg_DataInfo pb_msg_data = 1;
inline int SC_NewMsgData::pb_msg_data_size() const {
  return pb_msg_data_.size();
}
inline void SC_NewMsgData::clear_pb_msg_data() {
  pb_msg_data_.Clear();
}
inline const ::Msg_DataInfo& SC_NewMsgData::pb_msg_data(int index) const {
  // @@protoc_insertion_point(field_get:SC_NewMsgData.pb_msg_data)
  return pb_msg_data_.Get(index);
}
inline ::Msg_DataInfo* SC_NewMsgData::mutable_pb_msg_data(int index) {
  // @@protoc_insertion_point(field_mutable:SC_NewMsgData.pb_msg_data)
  return pb_msg_data_.Mutable(index);
}
inline ::Msg_DataInfo* SC_NewMsgData::add_pb_msg_data() {
  // @@protoc_insertion_point(field_add:SC_NewMsgData.pb_msg_data)
  return pb_msg_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >*
SC_NewMsgData::mutable_pb_msg_data() {
  // @@protoc_insertion_point(field_mutable_list:SC_NewMsgData.pb_msg_data)
  return &pb_msg_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >&
SC_NewMsgData::pb_msg_data() const {
  // @@protoc_insertion_point(field_list:SC_NewMsgData.pb_msg_data)
  return pb_msg_data_;
}

// -------------------------------------------------------------------

// CS_SetMsgReadFlag

// optional int32 id = 1;
inline bool CS_SetMsgReadFlag::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_SetMsgReadFlag::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_SetMsgReadFlag::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_SetMsgReadFlag::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CS_SetMsgReadFlag::id() const {
  // @@protoc_insertion_point(field_get:CS_SetMsgReadFlag.id)
  return id_;
}
inline void CS_SetMsgReadFlag::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CS_SetMsgReadFlag.id)
}

// optional int32 msg_type = 2;
inline bool CS_SetMsgReadFlag::has_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_SetMsgReadFlag::set_has_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_SetMsgReadFlag::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_SetMsgReadFlag::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::google::protobuf::int32 CS_SetMsgReadFlag::msg_type() const {
  // @@protoc_insertion_point(field_get:CS_SetMsgReadFlag.msg_type)
  return msg_type_;
}
inline void CS_SetMsgReadFlag::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:CS_SetMsgReadFlag.msg_type)
}

// -------------------------------------------------------------------

// SC_FeedBackUpDate

// optional int32 feedbackid = 1;
inline bool SC_FeedBackUpDate::has_feedbackid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_FeedBackUpDate::set_has_feedbackid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_FeedBackUpDate::clear_has_feedbackid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_FeedBackUpDate::clear_feedbackid() {
  feedbackid_ = 0;
  clear_has_feedbackid();
}
inline ::google::protobuf::int32 SC_FeedBackUpDate::feedbackid() const {
  // @@protoc_insertion_point(field_get:SC_FeedBackUpDate.feedbackid)
  return feedbackid_;
}
inline void SC_FeedBackUpDate::set_feedbackid(::google::protobuf::int32 value) {
  set_has_feedbackid();
  feedbackid_ = value;
  // @@protoc_insertion_point(field_set:SC_FeedBackUpDate.feedbackid)
}

// optional int32 type = 2;
inline bool SC_FeedBackUpDate::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_FeedBackUpDate::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_FeedBackUpDate::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_FeedBackUpDate::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SC_FeedBackUpDate::type() const {
  // @@protoc_insertion_point(field_get:SC_FeedBackUpDate.type)
  return type_;
}
inline void SC_FeedBackUpDate::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:SC_FeedBackUpDate.type)
}

// optional int32 updateTime = 3;
inline bool SC_FeedBackUpDate::has_updatetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_FeedBackUpDate::set_has_updatetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_FeedBackUpDate::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_FeedBackUpDate::clear_updatetime() {
  updatetime_ = 0;
  clear_has_updatetime();
}
inline ::google::protobuf::int32 SC_FeedBackUpDate::updatetime() const {
  // @@protoc_insertion_point(field_get:SC_FeedBackUpDate.updateTime)
  return updatetime_;
}
inline void SC_FeedBackUpDate::set_updatetime(::google::protobuf::int32 value) {
  set_has_updatetime();
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:SC_FeedBackUpDate.updateTime)
}

// -------------------------------------------------------------------

// SC_DeletMsg

// optional int32 msg_id = 1;
inline bool SC_DeletMsg::has_msg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_DeletMsg::set_has_msg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_DeletMsg::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_DeletMsg::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
inline ::google::protobuf::int32 SC_DeletMsg::msg_id() const {
  // @@protoc_insertion_point(field_get:SC_DeletMsg.msg_id)
  return msg_id_;
}
inline void SC_DeletMsg::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:SC_DeletMsg.msg_id)
}

// optional int32 msg_type = 2;
inline bool SC_DeletMsg::has_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_DeletMsg::set_has_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_DeletMsg::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_DeletMsg::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::google::protobuf::int32 SC_DeletMsg::msg_type() const {
  // @@protoc_insertion_point(field_get:SC_DeletMsg.msg_type)
  return msg_type_;
}
inline void SC_DeletMsg::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:SC_DeletMsg.msg_type)
}

// -------------------------------------------------------------------

// CS_CashMoney

// optional int32 money = 1;
inline bool CS_CashMoney::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_CashMoney::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_CashMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_CashMoney::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 CS_CashMoney::money() const {
  // @@protoc_insertion_point(field_get:CS_CashMoney.money)
  return money_;
}
inline void CS_CashMoney::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CS_CashMoney.money)
}

// optional int32 cash_type = 2;
inline bool CS_CashMoney::has_cash_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_CashMoney::set_has_cash_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_CashMoney::clear_has_cash_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_CashMoney::clear_cash_type() {
  cash_type_ = 0;
  clear_has_cash_type();
}
inline ::google::protobuf::int32 CS_CashMoney::cash_type() const {
  // @@protoc_insertion_point(field_get:CS_CashMoney.cash_type)
  return cash_type_;
}
inline void CS_CashMoney::set_cash_type(::google::protobuf::int32 value) {
  set_has_cash_type();
  cash_type_ = value;
  // @@protoc_insertion_point(field_set:CS_CashMoney.cash_type)
}

// -------------------------------------------------------------------

// SC_CashMoneyResult

// optional int32 result = 1;
inline bool SC_CashMoneyResult::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_CashMoneyResult::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_CashMoneyResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_CashMoneyResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_CashMoneyResult::result() const {
  // @@protoc_insertion_point(field_get:SC_CashMoneyResult.result)
  return result_;
}
inline void SC_CashMoneyResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_CashMoneyResult.result)
}

// optional int64 bank = 2;
inline bool SC_CashMoneyResult::has_bank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_CashMoneyResult::set_has_bank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_CashMoneyResult::clear_has_bank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_CashMoneyResult::clear_bank() {
  bank_ = GOOGLE_LONGLONG(0);
  clear_has_bank();
}
inline ::google::protobuf::int64 SC_CashMoneyResult::bank() const {
  // @@protoc_insertion_point(field_get:SC_CashMoneyResult.bank)
  return bank_;
}
inline void SC_CashMoneyResult::set_bank(::google::protobuf::int64 value) {
  set_has_bank();
  bank_ = value;
  // @@protoc_insertion_point(field_set:SC_CashMoneyResult.bank)
}

// optional int64 money = 3;
inline bool SC_CashMoneyResult::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_CashMoneyResult::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_CashMoneyResult::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_CashMoneyResult::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SC_CashMoneyResult::money() const {
  // @@protoc_insertion_point(field_get:SC_CashMoneyResult.money)
  return money_;
}
inline void SC_CashMoneyResult::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_CashMoneyResult.money)
}

// -------------------------------------------------------------------

// CS_CashMoneyType

// -------------------------------------------------------------------

// SC_CashMoneyType

// repeated .CashMoneyType pb_cash_info = 1;
inline int SC_CashMoneyType::pb_cash_info_size() const {
  return pb_cash_info_.size();
}
inline void SC_CashMoneyType::clear_pb_cash_info() {
  pb_cash_info_.Clear();
}
inline const ::CashMoneyType& SC_CashMoneyType::pb_cash_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_CashMoneyType.pb_cash_info)
  return pb_cash_info_.Get(index);
}
inline ::CashMoneyType* SC_CashMoneyType::mutable_pb_cash_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_CashMoneyType.pb_cash_info)
  return pb_cash_info_.Mutable(index);
}
inline ::CashMoneyType* SC_CashMoneyType::add_pb_cash_info() {
  // @@protoc_insertion_point(field_add:SC_CashMoneyType.pb_cash_info)
  return pb_cash_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CashMoneyType >*
SC_CashMoneyType::mutable_pb_cash_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_CashMoneyType.pb_cash_info)
  return &pb_cash_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CashMoneyType >&
SC_CashMoneyType::pb_cash_info() const {
  // @@protoc_insertion_point(field_list:SC_CashMoneyType.pb_cash_info)
  return pb_cash_info_;
}

// -------------------------------------------------------------------

// SC_NotifyBank

// optional int32 opt_type = 1;
inline bool SC_NotifyBank::has_opt_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_NotifyBank::set_has_opt_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_NotifyBank::clear_has_opt_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_NotifyBank::clear_opt_type() {
  opt_type_ = 0;
  clear_has_opt_type();
}
inline ::google::protobuf::int32 SC_NotifyBank::opt_type() const {
  // @@protoc_insertion_point(field_get:SC_NotifyBank.opt_type)
  return opt_type_;
}
inline void SC_NotifyBank::set_opt_type(::google::protobuf::int32 value) {
  set_has_opt_type();
  opt_type_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyBank.opt_type)
}

// optional int64 bank = 2;
inline bool SC_NotifyBank::has_bank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_NotifyBank::set_has_bank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_NotifyBank::clear_has_bank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_NotifyBank::clear_bank() {
  bank_ = GOOGLE_LONGLONG(0);
  clear_has_bank();
}
inline ::google::protobuf::int64 SC_NotifyBank::bank() const {
  // @@protoc_insertion_point(field_get:SC_NotifyBank.bank)
  return bank_;
}
inline void SC_NotifyBank::set_bank(::google::protobuf::int64 value) {
  set_has_bank();
  bank_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyBank.bank)
}

// optional int64 change_bank = 3;
inline bool SC_NotifyBank::has_change_bank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_NotifyBank::set_has_change_bank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_NotifyBank::clear_has_change_bank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_NotifyBank::clear_change_bank() {
  change_bank_ = GOOGLE_LONGLONG(0);
  clear_has_change_bank();
}
inline ::google::protobuf::int64 SC_NotifyBank::change_bank() const {
  // @@protoc_insertion_point(field_get:SC_NotifyBank.change_bank)
  return change_bank_;
}
inline void SC_NotifyBank::set_change_bank(::google::protobuf::int64 value) {
  set_has_change_bank();
  change_bank_ = value;
  // @@protoc_insertion_point(field_set:SC_NotifyBank.change_bank)
}

// -------------------------------------------------------------------

// CS_BandAlipay

// optional string alipay_account = 1;
inline bool CS_BandAlipay::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_BandAlipay::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_BandAlipay::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_BandAlipay::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
inline const ::std::string& CS_BandAlipay::alipay_account() const {
  // @@protoc_insertion_point(field_get:CS_BandAlipay.alipay_account)
  return alipay_account_.GetNoArena();
}
inline void CS_BandAlipay::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_BandAlipay.alipay_account)
}
#if LANG_CXX11
inline void CS_BandAlipay::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_BandAlipay.alipay_account)
}
#endif
inline void CS_BandAlipay::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_BandAlipay.alipay_account)
}
inline void CS_BandAlipay::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_BandAlipay.alipay_account)
}
inline ::std::string* CS_BandAlipay::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:CS_BandAlipay.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_BandAlipay::release_alipay_account() {
  // @@protoc_insertion_point(field_release:CS_BandAlipay.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_BandAlipay::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:CS_BandAlipay.alipay_account)
}

// optional string alipay_name = 2;
inline bool CS_BandAlipay::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_BandAlipay::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_BandAlipay::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_BandAlipay::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
inline const ::std::string& CS_BandAlipay::alipay_name() const {
  // @@protoc_insertion_point(field_get:CS_BandAlipay.alipay_name)
  return alipay_name_.GetNoArena();
}
inline void CS_BandAlipay::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_BandAlipay.alipay_name)
}
#if LANG_CXX11
inline void CS_BandAlipay::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_BandAlipay.alipay_name)
}
#endif
inline void CS_BandAlipay::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_BandAlipay.alipay_name)
}
inline void CS_BandAlipay::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_BandAlipay.alipay_name)
}
inline ::std::string* CS_BandAlipay::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:CS_BandAlipay.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_BandAlipay::release_alipay_name() {
  // @@protoc_insertion_point(field_release:CS_BandAlipay.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_BandAlipay::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:CS_BandAlipay.alipay_name)
}

// -------------------------------------------------------------------

// SC_BandAlipay

// optional int32 result = 1;
inline bool SC_BandAlipay::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_BandAlipay::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_BandAlipay::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_BandAlipay::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_BandAlipay::result() const {
  // @@protoc_insertion_point(field_get:SC_BandAlipay.result)
  return result_;
}
inline void SC_BandAlipay::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_BandAlipay.result)
}

// optional string alipay_account = 2;
inline bool SC_BandAlipay::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_BandAlipay::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_BandAlipay::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_BandAlipay::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
inline const ::std::string& SC_BandAlipay::alipay_account() const {
  // @@protoc_insertion_point(field_get:SC_BandAlipay.alipay_account)
  return alipay_account_.GetNoArena();
}
inline void SC_BandAlipay::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_BandAlipay.alipay_account)
}
#if LANG_CXX11
inline void SC_BandAlipay::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_BandAlipay.alipay_account)
}
#endif
inline void SC_BandAlipay::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_BandAlipay.alipay_account)
}
inline void SC_BandAlipay::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_BandAlipay.alipay_account)
}
inline ::std::string* SC_BandAlipay::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:SC_BandAlipay.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_BandAlipay::release_alipay_account() {
  // @@protoc_insertion_point(field_release:SC_BandAlipay.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_BandAlipay::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:SC_BandAlipay.alipay_account)
}

// optional string alipay_name = 3;
inline bool SC_BandAlipay::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_BandAlipay::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_BandAlipay::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_BandAlipay::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
inline const ::std::string& SC_BandAlipay::alipay_name() const {
  // @@protoc_insertion_point(field_get:SC_BandAlipay.alipay_name)
  return alipay_name_.GetNoArena();
}
inline void SC_BandAlipay::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_BandAlipay.alipay_name)
}
#if LANG_CXX11
inline void SC_BandAlipay::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_BandAlipay.alipay_name)
}
#endif
inline void SC_BandAlipay::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_BandAlipay.alipay_name)
}
inline void SC_BandAlipay::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_BandAlipay.alipay_name)
}
inline ::std::string* SC_BandAlipay::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:SC_BandAlipay.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_BandAlipay::release_alipay_name() {
  // @@protoc_insertion_point(field_release:SC_BandAlipay.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_BandAlipay::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:SC_BandAlipay.alipay_name)
}

// -------------------------------------------------------------------

// CS_Trusteeship

// optional int32 flag = 1;
inline bool CS_Trusteeship::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_Trusteeship::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_Trusteeship::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_Trusteeship::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 CS_Trusteeship::flag() const {
  // @@protoc_insertion_point(field_get:CS_Trusteeship.flag)
  return flag_;
}
inline void CS_Trusteeship::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:CS_Trusteeship.flag)
}

// -------------------------------------------------------------------

// SC_ShowTax

// optional int32 flag = 1;
inline bool SC_ShowTax::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_ShowTax::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_ShowTax::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_ShowTax::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 SC_ShowTax::flag() const {
  // @@protoc_insertion_point(field_get:SC_ShowTax.flag)
  return flag_;
}
inline void SC_ShowTax::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:SC_ShowTax.flag)
}

// -------------------------------------------------------------------

// SD_Delonline_player

// optional int32 guid = 1;
inline bool SD_Delonline_player::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_Delonline_player::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_Delonline_player::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_Delonline_player::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_Delonline_player::guid() const {
  // @@protoc_insertion_point(field_get:SD_Delonline_player.guid)
  return guid_;
}
inline void SD_Delonline_player::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_Delonline_player.guid)
}

// optional int32 game_id = 2;
inline bool SD_Delonline_player::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_Delonline_player::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_Delonline_player::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_Delonline_player::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 SD_Delonline_player::game_id() const {
  // @@protoc_insertion_point(field_get:SD_Delonline_player.game_id)
  return game_id_;
}
inline void SD_Delonline_player::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SD_Delonline_player.game_id)
}

// -------------------------------------------------------------------

// SC_AlipayEdit

// optional int32 guid = 1;
inline bool SC_AlipayEdit::has_guid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SC_AlipayEdit::set_has_guid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SC_AlipayEdit::clear_has_guid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SC_AlipayEdit::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SC_AlipayEdit::guid() const {
  // @@protoc_insertion_point(field_get:SC_AlipayEdit.guid)
  return guid_;
}
inline void SC_AlipayEdit::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SC_AlipayEdit.guid)
}

// optional string alipay_name = 2;
inline bool SC_AlipayEdit::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_AlipayEdit::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_AlipayEdit::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_AlipayEdit::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
inline const ::std::string& SC_AlipayEdit::alipay_name() const {
  // @@protoc_insertion_point(field_get:SC_AlipayEdit.alipay_name)
  return alipay_name_.GetNoArena();
}
inline void SC_AlipayEdit::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_AlipayEdit.alipay_name)
}
#if LANG_CXX11
inline void SC_AlipayEdit::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_AlipayEdit.alipay_name)
}
#endif
inline void SC_AlipayEdit::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_AlipayEdit.alipay_name)
}
inline void SC_AlipayEdit::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_AlipayEdit.alipay_name)
}
inline ::std::string* SC_AlipayEdit::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:SC_AlipayEdit.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_AlipayEdit::release_alipay_name() {
  // @@protoc_insertion_point(field_release:SC_AlipayEdit.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_AlipayEdit::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:SC_AlipayEdit.alipay_name)
}

// optional string alipay_name_y = 3;
inline bool SC_AlipayEdit::has_alipay_name_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_AlipayEdit::set_has_alipay_name_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_AlipayEdit::clear_has_alipay_name_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_AlipayEdit::clear_alipay_name_y() {
  alipay_name_y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name_y();
}
inline const ::std::string& SC_AlipayEdit::alipay_name_y() const {
  // @@protoc_insertion_point(field_get:SC_AlipayEdit.alipay_name_y)
  return alipay_name_y_.GetNoArena();
}
inline void SC_AlipayEdit::set_alipay_name_y(const ::std::string& value) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_AlipayEdit.alipay_name_y)
}
#if LANG_CXX11
inline void SC_AlipayEdit::set_alipay_name_y(::std::string&& value) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_AlipayEdit.alipay_name_y)
}
#endif
inline void SC_AlipayEdit::set_alipay_name_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_AlipayEdit.alipay_name_y)
}
inline void SC_AlipayEdit::set_alipay_name_y(const char* value, size_t size) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_AlipayEdit.alipay_name_y)
}
inline ::std::string* SC_AlipayEdit::mutable_alipay_name_y() {
  set_has_alipay_name_y();
  // @@protoc_insertion_point(field_mutable:SC_AlipayEdit.alipay_name_y)
  return alipay_name_y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_AlipayEdit::release_alipay_name_y() {
  // @@protoc_insertion_point(field_release:SC_AlipayEdit.alipay_name_y)
  clear_has_alipay_name_y();
  return alipay_name_y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_AlipayEdit::set_allocated_alipay_name_y(::std::string* alipay_name_y) {
  if (alipay_name_y != NULL) {
    set_has_alipay_name_y();
  } else {
    clear_has_alipay_name_y();
  }
  alipay_name_y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name_y);
  // @@protoc_insertion_point(field_set_allocated:SC_AlipayEdit.alipay_name_y)
}

// optional string alipay_account = 4;
inline bool SC_AlipayEdit::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_AlipayEdit::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_AlipayEdit::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_AlipayEdit::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
inline const ::std::string& SC_AlipayEdit::alipay_account() const {
  // @@protoc_insertion_point(field_get:SC_AlipayEdit.alipay_account)
  return alipay_account_.GetNoArena();
}
inline void SC_AlipayEdit::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_AlipayEdit.alipay_account)
}
#if LANG_CXX11
inline void SC_AlipayEdit::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_AlipayEdit.alipay_account)
}
#endif
inline void SC_AlipayEdit::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_AlipayEdit.alipay_account)
}
inline void SC_AlipayEdit::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_AlipayEdit.alipay_account)
}
inline ::std::string* SC_AlipayEdit::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:SC_AlipayEdit.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_AlipayEdit::release_alipay_account() {
  // @@protoc_insertion_point(field_release:SC_AlipayEdit.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_AlipayEdit::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:SC_AlipayEdit.alipay_account)
}

// optional string alipay_account_y = 5;
inline bool SC_AlipayEdit::has_alipay_account_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_AlipayEdit::set_has_alipay_account_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_AlipayEdit::clear_has_alipay_account_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_AlipayEdit::clear_alipay_account_y() {
  alipay_account_y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account_y();
}
inline const ::std::string& SC_AlipayEdit::alipay_account_y() const {
  // @@protoc_insertion_point(field_get:SC_AlipayEdit.alipay_account_y)
  return alipay_account_y_.GetNoArena();
}
inline void SC_AlipayEdit::set_alipay_account_y(const ::std::string& value) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_AlipayEdit.alipay_account_y)
}
#if LANG_CXX11
inline void SC_AlipayEdit::set_alipay_account_y(::std::string&& value) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_AlipayEdit.alipay_account_y)
}
#endif
inline void SC_AlipayEdit::set_alipay_account_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_AlipayEdit.alipay_account_y)
}
inline void SC_AlipayEdit::set_alipay_account_y(const char* value, size_t size) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_AlipayEdit.alipay_account_y)
}
inline ::std::string* SC_AlipayEdit::mutable_alipay_account_y() {
  set_has_alipay_account_y();
  // @@protoc_insertion_point(field_mutable:SC_AlipayEdit.alipay_account_y)
  return alipay_account_y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_AlipayEdit::release_alipay_account_y() {
  // @@protoc_insertion_point(field_release:SC_AlipayEdit.alipay_account_y)
  clear_has_alipay_account_y();
  return alipay_account_y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_AlipayEdit::set_allocated_alipay_account_y(::std::string* alipay_account_y) {
  if (alipay_account_y != NULL) {
    set_has_alipay_account_y();
  } else {
    clear_has_alipay_account_y();
  }
  alipay_account_y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account_y);
  // @@protoc_insertion_point(field_set_allocated:SC_AlipayEdit.alipay_account_y)
}

// -------------------------------------------------------------------

// SC_BrocastClientUpdateInfo

// optional string update_info = 1;
inline bool SC_BrocastClientUpdateInfo::has_update_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_BrocastClientUpdateInfo::set_has_update_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_BrocastClientUpdateInfo::clear_has_update_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_BrocastClientUpdateInfo::clear_update_info() {
  update_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_update_info();
}
inline const ::std::string& SC_BrocastClientUpdateInfo::update_info() const {
  // @@protoc_insertion_point(field_get:SC_BrocastClientUpdateInfo.update_info)
  return update_info_.GetNoArena();
}
inline void SC_BrocastClientUpdateInfo::set_update_info(const ::std::string& value) {
  set_has_update_info();
  update_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_BrocastClientUpdateInfo.update_info)
}
#if LANG_CXX11
inline void SC_BrocastClientUpdateInfo::set_update_info(::std::string&& value) {
  set_has_update_info();
  update_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_BrocastClientUpdateInfo.update_info)
}
#endif
inline void SC_BrocastClientUpdateInfo::set_update_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_update_info();
  update_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_BrocastClientUpdateInfo.update_info)
}
inline void SC_BrocastClientUpdateInfo::set_update_info(const char* value, size_t size) {
  set_has_update_info();
  update_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_BrocastClientUpdateInfo.update_info)
}
inline ::std::string* SC_BrocastClientUpdateInfo::mutable_update_info() {
  set_has_update_info();
  // @@protoc_insertion_point(field_mutable:SC_BrocastClientUpdateInfo.update_info)
  return update_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_BrocastClientUpdateInfo::release_update_info() {
  // @@protoc_insertion_point(field_release:SC_BrocastClientUpdateInfo.update_info)
  clear_has_update_info();
  return update_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_BrocastClientUpdateInfo::set_allocated_update_info(::std::string* update_info) {
  if (update_info != NULL) {
    set_has_update_info();
  } else {
    clear_has_update_info();
  }
  update_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), update_info);
  // @@protoc_insertion_point(field_set_allocated:SC_BrocastClientUpdateInfo.update_info)
}

// -------------------------------------------------------------------

// SC_FreezeAccount

// optional int32 guid = 1;
inline bool SC_FreezeAccount::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_FreezeAccount::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_FreezeAccount::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_FreezeAccount::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SC_FreezeAccount::guid() const {
  // @@protoc_insertion_point(field_get:SC_FreezeAccount.guid)
  return guid_;
}
inline void SC_FreezeAccount::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SC_FreezeAccount.guid)
}

// optional int32 status = 2;
inline bool SC_FreezeAccount::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_FreezeAccount::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_FreezeAccount::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_FreezeAccount::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 SC_FreezeAccount::status() const {
  // @@protoc_insertion_point(field_get:SC_FreezeAccount.status)
  return status_;
}
inline void SC_FreezeAccount::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:SC_FreezeAccount.status)
}

// -------------------------------------------------------------------

// SC_GameMaintain

// optional int32 result = 1;
inline bool SC_GameMaintain::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_GameMaintain::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_GameMaintain::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_GameMaintain::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_GameMaintain::result() const {
  // @@protoc_insertion_point(field_get:SC_GameMaintain.result)
  return result_;
}
inline void SC_GameMaintain::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_GameMaintain.result)
}

// optional int32 first_game_type = 2;
inline bool SC_GameMaintain::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_GameMaintain::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_GameMaintain::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_GameMaintain::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 SC_GameMaintain::first_game_type() const {
  // @@protoc_insertion_point(field_get:SC_GameMaintain.first_game_type)
  return first_game_type_;
}
inline void SC_GameMaintain::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_GameMaintain.first_game_type)
}

// optional int32 second_game_type = 3;
inline bool SC_GameMaintain::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_GameMaintain::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_GameMaintain::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_GameMaintain::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
inline ::google::protobuf::int32 SC_GameMaintain::second_game_type() const {
  // @@protoc_insertion_point(field_get:SC_GameMaintain.second_game_type)
  return second_game_type_;
}
inline void SC_GameMaintain::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_GameMaintain.second_game_type)
}

// -------------------------------------------------------------------

// SC_CashMaintain

// optional int32 result = 1;
inline bool SC_CashMaintain::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_CashMaintain::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_CashMaintain::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_CashMaintain::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_CashMaintain::result() const {
  // @@protoc_insertion_point(field_get:SC_CashMaintain.result)
  return result_;
}
inline void SC_CashMaintain::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_CashMaintain.result)
}

// -------------------------------------------------------------------

// CS_GetHelpMoney

// optional int32 get_rightnow = 1;
inline bool CS_GetHelpMoney::has_get_rightnow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_GetHelpMoney::set_has_get_rightnow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_GetHelpMoney::clear_has_get_rightnow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_GetHelpMoney::clear_get_rightnow() {
  get_rightnow_ = 0;
  clear_has_get_rightnow();
}
inline ::google::protobuf::int32 CS_GetHelpMoney::get_rightnow() const {
  // @@protoc_insertion_point(field_get:CS_GetHelpMoney.get_rightnow)
  return get_rightnow_;
}
inline void CS_GetHelpMoney::set_get_rightnow(::google::protobuf::int32 value) {
  set_has_get_rightnow();
  get_rightnow_ = value;
  // @@protoc_insertion_point(field_set:CS_GetHelpMoney.get_rightnow)
}

// -------------------------------------------------------------------

// SC_GetHelpMoney

// optional int32 result_cash = 1;
inline bool SC_GetHelpMoney::has_result_cash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_GetHelpMoney::set_has_result_cash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_GetHelpMoney::clear_has_result_cash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_GetHelpMoney::clear_result_cash() {
  result_cash_ = 0;
  clear_has_result_cash();
}
inline ::google::protobuf::int32 SC_GetHelpMoney::result_cash() const {
  // @@protoc_insertion_point(field_get:SC_GetHelpMoney.result_cash)
  return result_cash_;
}
inline void SC_GetHelpMoney::set_result_cash(::google::protobuf::int32 value) {
  set_has_result_cash();
  result_cash_ = value;
  // @@protoc_insertion_point(field_set:SC_GetHelpMoney.result_cash)
}

// optional int32 left_times = 2;
inline bool SC_GetHelpMoney::has_left_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_GetHelpMoney::set_has_left_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_GetHelpMoney::clear_has_left_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_GetHelpMoney::clear_left_times() {
  left_times_ = 0;
  clear_has_left_times();
}
inline ::google::protobuf::int32 SC_GetHelpMoney::left_times() const {
  // @@protoc_insertion_point(field_get:SC_GetHelpMoney.left_times)
  return left_times_;
}
inline void SC_GetHelpMoney::set_left_times(::google::protobuf::int32 value) {
  set_has_left_times();
  left_times_ = value;
  // @@protoc_insertion_point(field_set:SC_GetHelpMoney.left_times)
}

// optional int32 cash_money = 3;
inline bool SC_GetHelpMoney::has_cash_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_GetHelpMoney::set_has_cash_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_GetHelpMoney::clear_has_cash_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_GetHelpMoney::clear_cash_money() {
  cash_money_ = 0;
  clear_has_cash_money();
}
inline ::google::protobuf::int32 SC_GetHelpMoney::cash_money() const {
  // @@protoc_insertion_point(field_get:SC_GetHelpMoney.cash_money)
  return cash_money_;
}
inline void SC_GetHelpMoney::set_cash_money(::google::protobuf::int32 value) {
  set_has_cash_money();
  cash_money_ = value;
  // @@protoc_insertion_point(field_set:SC_GetHelpMoney.cash_money)
}

// optional int32 money_must_less = 4;
inline bool SC_GetHelpMoney::has_money_must_less() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_GetHelpMoney::set_has_money_must_less() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_GetHelpMoney::clear_has_money_must_less() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_GetHelpMoney::clear_money_must_less() {
  money_must_less_ = 0;
  clear_has_money_must_less();
}
inline ::google::protobuf::int32 SC_GetHelpMoney::money_must_less() const {
  // @@protoc_insertion_point(field_get:SC_GetHelpMoney.money_must_less)
  return money_must_less_;
}
inline void SC_GetHelpMoney::set_money_must_less(::google::protobuf::int32 value) {
  set_has_money_must_less();
  money_must_less_ = value;
  // @@protoc_insertion_point(field_set:SC_GetHelpMoney.money_must_less)
}

// -------------------------------------------------------------------

// CS_Agent_CashMoney

// optional int32 money = 1;
inline bool CS_Agent_CashMoney::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_Agent_CashMoney::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_Agent_CashMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_Agent_CashMoney::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 CS_Agent_CashMoney::money() const {
  // @@protoc_insertion_point(field_get:CS_Agent_CashMoney.money)
  return money_;
}
inline void CS_Agent_CashMoney::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CS_Agent_CashMoney.money)
}

// optional int32 agent_id = 2;
inline bool CS_Agent_CashMoney::has_agent_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_Agent_CashMoney::set_has_agent_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_Agent_CashMoney::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_Agent_CashMoney::clear_agent_id() {
  agent_id_ = 0;
  clear_has_agent_id();
}
inline ::google::protobuf::int32 CS_Agent_CashMoney::agent_id() const {
  // @@protoc_insertion_point(field_get:CS_Agent_CashMoney.agent_id)
  return agent_id_;
}
inline void CS_Agent_CashMoney::set_agent_id(::google::protobuf::int32 value) {
  set_has_agent_id();
  agent_id_ = value;
  // @@protoc_insertion_point(field_set:CS_Agent_CashMoney.agent_id)
}

// -------------------------------------------------------------------

// SC_Agent_CashMoneyResult

// optional int32 result = 1;
inline bool SC_Agent_CashMoneyResult::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_Agent_CashMoneyResult::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_Agent_CashMoneyResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_Agent_CashMoneyResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_Agent_CashMoneyResult::result() const {
  // @@protoc_insertion_point(field_get:SC_Agent_CashMoneyResult.result)
  return result_;
}
inline void SC_Agent_CashMoneyResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_Agent_CashMoneyResult.result)
}

// optional int64 bank = 2;
inline bool SC_Agent_CashMoneyResult::has_bank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_Agent_CashMoneyResult::set_has_bank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_Agent_CashMoneyResult::clear_has_bank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_Agent_CashMoneyResult::clear_bank() {
  bank_ = GOOGLE_LONGLONG(0);
  clear_has_bank();
}
inline ::google::protobuf::int64 SC_Agent_CashMoneyResult::bank() const {
  // @@protoc_insertion_point(field_get:SC_Agent_CashMoneyResult.bank)
  return bank_;
}
inline void SC_Agent_CashMoneyResult::set_bank(::google::protobuf::int64 value) {
  set_has_bank();
  bank_ = value;
  // @@protoc_insertion_point(field_set:SC_Agent_CashMoneyResult.bank)
}

// optional int64 money = 3;
inline bool SC_Agent_CashMoneyResult::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_Agent_CashMoneyResult::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_Agent_CashMoneyResult::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_Agent_CashMoneyResult::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SC_Agent_CashMoneyResult::money() const {
  // @@protoc_insertion_point(field_get:SC_Agent_CashMoneyResult.money)
  return money_;
}
inline void SC_Agent_CashMoneyResult::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_Agent_CashMoneyResult.money)
}

// -------------------------------------------------------------------

// CS_RequestNewAward

// -------------------------------------------------------------------

// SC_RequestNewAward

// optional int32 newaward_result = 1;
inline bool SC_RequestNewAward::has_newaward_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_RequestNewAward::set_has_newaward_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_RequestNewAward::clear_has_newaward_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_RequestNewAward::clear_newaward_result() {
  newaward_result_ = 0;
  clear_has_newaward_result();
}
inline ::google::protobuf::int32 SC_RequestNewAward::newaward_result() const {
  // @@protoc_insertion_point(field_get:SC_RequestNewAward.newaward_result)
  return newaward_result_;
}
inline void SC_RequestNewAward::set_newaward_result(::google::protobuf::int32 value) {
  set_has_newaward_result();
  newaward_result_ = value;
  // @@protoc_insertion_point(field_set:SC_RequestNewAward.newaward_result)
}

// optional int32 money = 2 [default = 0];
inline bool SC_RequestNewAward::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_RequestNewAward::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_RequestNewAward::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_RequestNewAward::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 SC_RequestNewAward::money() const {
  // @@protoc_insertion_point(field_get:SC_RequestNewAward.money)
  return money_;
}
inline void SC_RequestNewAward::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_RequestNewAward.money)
}

// -------------------------------------------------------------------

// CS_RequestCheckInAward

// -------------------------------------------------------------------

// SC_RequestCheckInAward

// optional int32 checkin_result = 1;
inline bool SC_RequestCheckInAward::has_checkin_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_RequestCheckInAward::set_has_checkin_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_RequestCheckInAward::clear_has_checkin_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_RequestCheckInAward::clear_checkin_result() {
  checkin_result_ = 0;
  clear_has_checkin_result();
}
inline ::google::protobuf::int32 SC_RequestCheckInAward::checkin_result() const {
  // @@protoc_insertion_point(field_get:SC_RequestCheckInAward.checkin_result)
  return checkin_result_;
}
inline void SC_RequestCheckInAward::set_checkin_result(::google::protobuf::int32 value) {
  set_has_checkin_result();
  checkin_result_ = value;
  // @@protoc_insertion_point(field_set:SC_RequestCheckInAward.checkin_result)
}

// optional int32 money = 2 [default = 0];
inline bool SC_RequestCheckInAward::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_RequestCheckInAward::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_RequestCheckInAward::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_RequestCheckInAward::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 SC_RequestCheckInAward::money() const {
  // @@protoc_insertion_point(field_get:SC_RequestCheckInAward.money)
  return money_;
}
inline void SC_RequestCheckInAward::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_RequestCheckInAward.money)
}

// -------------------------------------------------------------------

// CS_BindBankCard

// optional .BankCardInfo pb_info = 1;
inline bool CS_BindBankCard::has_pb_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_BindBankCard::set_has_pb_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_BindBankCard::clear_has_pb_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_BindBankCard::clear_pb_info() {
  if (pb_info_ != NULL) pb_info_->::BankCardInfo::Clear();
  clear_has_pb_info();
}
inline const ::BankCardInfo& CS_BindBankCard::pb_info() const {
  // @@protoc_insertion_point(field_get:CS_BindBankCard.pb_info)
  return pb_info_ != NULL ? *pb_info_
                         : *::BankCardInfo::internal_default_instance();
}
inline ::BankCardInfo* CS_BindBankCard::mutable_pb_info() {
  set_has_pb_info();
  if (pb_info_ == NULL) {
    pb_info_ = new ::BankCardInfo;
  }
  // @@protoc_insertion_point(field_mutable:CS_BindBankCard.pb_info)
  return pb_info_;
}
inline ::BankCardInfo* CS_BindBankCard::release_pb_info() {
  // @@protoc_insertion_point(field_release:CS_BindBankCard.pb_info)
  clear_has_pb_info();
  ::BankCardInfo* temp = pb_info_;
  pb_info_ = NULL;
  return temp;
}
inline void CS_BindBankCard::set_allocated_pb_info(::BankCardInfo* pb_info) {
  delete pb_info_;
  pb_info_ = pb_info;
  if (pb_info) {
    set_has_pb_info();
  } else {
    clear_has_pb_info();
  }
  // @@protoc_insertion_point(field_set_allocated:CS_BindBankCard.pb_info)
}

// -------------------------------------------------------------------

// SC_BindBankCard

// optional int32 bind_result = 1;
inline bool SC_BindBankCard::has_bind_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_BindBankCard::set_has_bind_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_BindBankCard::clear_has_bind_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_BindBankCard::clear_bind_result() {
  bind_result_ = 0;
  clear_has_bind_result();
}
inline ::google::protobuf::int32 SC_BindBankCard::bind_result() const {
  // @@protoc_insertion_point(field_get:SC_BindBankCard.bind_result)
  return bind_result_;
}
inline void SC_BindBankCard::set_bind_result(::google::protobuf::int32 value) {
  set_has_bind_result();
  bind_result_ = value;
  // @@protoc_insertion_point(field_set:SC_BindBankCard.bind_result)
}

// -------------------------------------------------------------------

// CS_GetBankCardInfo

// -------------------------------------------------------------------

// SC_GetBankCardInfo

// optional .BankCardInfo pb_info = 1;
inline bool SC_GetBankCardInfo::has_pb_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_GetBankCardInfo::set_has_pb_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_GetBankCardInfo::clear_has_pb_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_GetBankCardInfo::clear_pb_info() {
  if (pb_info_ != NULL) pb_info_->::BankCardInfo::Clear();
  clear_has_pb_info();
}
inline const ::BankCardInfo& SC_GetBankCardInfo::pb_info() const {
  // @@protoc_insertion_point(field_get:SC_GetBankCardInfo.pb_info)
  return pb_info_ != NULL ? *pb_info_
                         : *::BankCardInfo::internal_default_instance();
}
inline ::BankCardInfo* SC_GetBankCardInfo::mutable_pb_info() {
  set_has_pb_info();
  if (pb_info_ == NULL) {
    pb_info_ = new ::BankCardInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_GetBankCardInfo.pb_info)
  return pb_info_;
}
inline ::BankCardInfo* SC_GetBankCardInfo::release_pb_info() {
  // @@protoc_insertion_point(field_release:SC_GetBankCardInfo.pb_info)
  clear_has_pb_info();
  ::BankCardInfo* temp = pb_info_;
  pb_info_ = NULL;
  return temp;
}
inline void SC_GetBankCardInfo::set_allocated_pb_info(::BankCardInfo* pb_info) {
  delete pb_info_;
  pb_info_ = pb_info;
  if (pb_info) {
    set_has_pb_info();
  } else {
    clear_has_pb_info();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_GetBankCardInfo.pb_info)
}

// -------------------------------------------------------------------

// CS_NewGameMaintain

// -------------------------------------------------------------------

// SC_NewGameMaintain

// repeated int32 first_game_type = 1;
inline int SC_NewGameMaintain::first_game_type_size() const {
  return first_game_type_.size();
}
inline void SC_NewGameMaintain::clear_first_game_type() {
  first_game_type_.Clear();
}
inline ::google::protobuf::int32 SC_NewGameMaintain::first_game_type(int index) const {
  // @@protoc_insertion_point(field_get:SC_NewGameMaintain.first_game_type)
  return first_game_type_.Get(index);
}
inline void SC_NewGameMaintain::set_first_game_type(int index, ::google::protobuf::int32 value) {
  first_game_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_NewGameMaintain.first_game_type)
}
inline void SC_NewGameMaintain::add_first_game_type(::google::protobuf::int32 value) {
  first_game_type_.Add(value);
  // @@protoc_insertion_point(field_add:SC_NewGameMaintain.first_game_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_NewGameMaintain::first_game_type() const {
  // @@protoc_insertion_point(field_list:SC_NewGameMaintain.first_game_type)
  return first_game_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_NewGameMaintain::mutable_first_game_type() {
  // @@protoc_insertion_point(field_mutable_list:SC_NewGameMaintain.first_game_type)
  return &first_game_type_;
}

// -------------------------------------------------------------------

// CS_PlayerPromotion

// optional int32 index = 1;
inline bool CS_PlayerPromotion::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_PlayerPromotion::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_PlayerPromotion::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_PlayerPromotion::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 CS_PlayerPromotion::index() const {
  // @@protoc_insertion_point(field_get:CS_PlayerPromotion.index)
  return index_;
}
inline void CS_PlayerPromotion::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:CS_PlayerPromotion.index)
}

// -------------------------------------------------------------------

// SC_PlayerPromotion

// optional int32 promotion_result = 1;
inline bool SC_PlayerPromotion::has_promotion_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_PlayerPromotion::set_has_promotion_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_PlayerPromotion::clear_has_promotion_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_PlayerPromotion::clear_promotion_result() {
  promotion_result_ = 0;
  clear_has_promotion_result();
}
inline ::google::protobuf::int32 SC_PlayerPromotion::promotion_result() const {
  // @@protoc_insertion_point(field_get:SC_PlayerPromotion.promotion_result)
  return promotion_result_;
}
inline void SC_PlayerPromotion::set_promotion_result(::google::protobuf::int32 value) {
  set_has_promotion_result();
  promotion_result_ = value;
  // @@protoc_insertion_point(field_set:SC_PlayerPromotion.promotion_result)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::C_RequestPublicKey_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::C_RequestPublicKey_MsgID>() {
  return ::C_RequestPublicKey_MsgID_descriptor();
}
template <> struct is_proto_enum< ::C_PublicKey_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::C_PublicKey_MsgID>() {
  return ::C_PublicKey_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CL_RegAccount_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CL_RegAccount_MsgID>() {
  return ::CL_RegAccount_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CL_Login_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CL_Login_MsgID>() {
  return ::CL_Login_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LC_Login_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LC_Login_MsgID>() {
  return ::LC_Login_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CL_LoginBySms_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CL_LoginBySms_MsgID>() {
  return ::CL_LoginBySms_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_KickClient_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_KickClient_MsgID>() {
  return ::SC_KickClient_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_RequestSms_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_RequestSms_MsgID>() {
  return ::CS_RequestSms_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_RequestSms_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_RequestSms_MsgID>() {
  return ::SC_RequestSms_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ResetAccount_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ResetAccount_MsgID>() {
  return ::CS_ResetAccount_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ResetAccount_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ResetAccount_MsgID>() {
  return ::SC_ResetAccount_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_SetPassword_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_SetPassword_MsgID>() {
  return ::CS_SetPassword_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_SetPassword_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_SetPassword_MsgID>() {
  return ::SC_SetPassword_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_SetPasswordBySms_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_SetPasswordBySms_MsgID>() {
  return ::CS_SetPasswordBySms_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_SetNickname_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_SetNickname_MsgID>() {
  return ::CS_SetNickname_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_SetNickname_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_SetNickname_MsgID>() {
  return ::SC_SetNickname_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ChangeHeaderIcon_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ChangeHeaderIcon_MsgID>() {
  return ::CS_ChangeHeaderIcon_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ChangeHeaderIcon_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ChangeHeaderIcon_MsgID>() {
  return ::SC_ChangeHeaderIcon_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CL_GetInviterInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CL_GetInviterInfo_MsgID>() {
  return ::CL_GetInviterInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LC_GetInviterInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LC_GetInviterInfo_MsgID>() {
  return ::LC_GetInviterInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_RequestPlayerInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_RequestPlayerInfo_MsgID>() {
  return ::CS_RequestPlayerInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ReplyPlayerInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ReplyPlayerInfo_MsgID>() {
  return ::SC_ReplyPlayerInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ReplyPlayerInfoComplete_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ReplyPlayerInfoComplete_MsgID>() {
  return ::SC_ReplyPlayerInfoComplete_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_LoginValidatebox_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_LoginValidatebox_MsgID>() {
  return ::CS_LoginValidatebox_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_LoginValidatebox_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LoginValidatebox_MsgID>() {
  return ::SC_LoginValidatebox_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ChangeGame_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ChangeGame_MsgID>() {
  return ::CS_ChangeGame_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_JoinPrivateRoom_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_JoinPrivateRoom_MsgID>() {
  return ::CS_JoinPrivateRoom_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_JoinPrivateRoomFailed_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_JoinPrivateRoomFailed_MsgID>() {
  return ::SC_JoinPrivateRoomFailed_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_PrivateRoomInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_PrivateRoomInfo_MsgID>() {
  return ::CS_PrivateRoomInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_PrivateRoomInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_PrivateRoomInfo_MsgID>() {
  return ::SC_PrivateRoomInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::GC_GameServerCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GC_GameServerCfg_MsgID>() {
  return ::GC_GameServerCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CG_GameServerCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CG_GameServerCfg_MsgID>() {
  return ::CG_GameServerCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_BankSetPassword_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_BankSetPassword_MsgID>() {
  return ::CS_BankSetPassword_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_BankSetPassword_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_BankSetPassword_MsgID>() {
  return ::SC_BankSetPassword_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_BankChangePassword_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_BankChangePassword_MsgID>() {
  return ::CS_BankChangePassword_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_BankChangePassword_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_BankChangePassword_MsgID>() {
  return ::SC_BankChangePassword_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_BankLogin_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_BankLogin_MsgID>() {
  return ::CS_BankLogin_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_BankLogin_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_BankLogin_MsgID>() {
  return ::SC_BankLogin_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_BankDeposit_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_BankDeposit_MsgID>() {
  return ::CS_BankDeposit_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_BankDeposit_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_BankDeposit_MsgID>() {
  return ::SC_BankDeposit_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_BankDraw_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_BankDraw_MsgID>() {
  return ::CS_BankDraw_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_BankDraw_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_BankDraw_MsgID>() {
  return ::SC_BankDraw_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_NotifyBankStatement_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_NotifyBankStatement_MsgID>() {
  return ::SC_NotifyBankStatement_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_BankStatement_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_BankStatement_MsgID>() {
  return ::CS_BankStatement_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_BankStatement_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_BankStatement_MsgID>() {
  return ::SC_BankStatement_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_BankTransfer_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_BankTransfer_MsgID>() {
  return ::CS_BankTransfer_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_BankTransfer_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_BankTransfer_MsgID>() {
  return ::SC_BankTransfer_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_NotifyMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_NotifyMoney_MsgID>() {
  return ::SC_NotifyMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_BankTransferByGuid_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_BankTransferByGuid_MsgID>() {
  return ::CS_BankTransferByGuid_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_BuyItem_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_BuyItem_MsgID>() {
  return ::CS_BuyItem_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_BuyItem_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_BuyItem_MsgID>() {
  return ::SC_BuyItem_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_DelItem_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_DelItem_MsgID>() {
  return ::CS_DelItem_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_DelItem_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_DelItem_MsgID>() {
  return ::SC_DelItem_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_UseItem_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_UseItem_MsgID>() {
  return ::CS_UseItem_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_UseItem_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_UseItem_MsgID>() {
  return ::SC_UseItem_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ChatWorld_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ChatWorld_MsgID>() {
  return ::CS_ChatWorld_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ChatWorld_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ChatWorld_MsgID>() {
  return ::SC_ChatWorld_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ChatPrivate_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ChatPrivate_MsgID>() {
  return ::CS_ChatPrivate_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ChatPrivate_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ChatPrivate_MsgID>() {
  return ::SC_ChatPrivate_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ChatServer_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ChatServer_MsgID>() {
  return ::CS_ChatServer_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ChatServer_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ChatServer_MsgID>() {
  return ::SC_ChatServer_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ChatRoom_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ChatRoom_MsgID>() {
  return ::CS_ChatRoom_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ChatRoom_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ChatRoom_MsgID>() {
  return ::SC_ChatRoom_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ChatTable_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ChatTable_MsgID>() {
  return ::CS_ChatTable_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ChatTable_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ChatTable_MsgID>() {
  return ::SC_ChatTable_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_Marquee_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_Marquee_MsgID>() {
  return ::SC_Marquee_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_QueryPlayerMarquee_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_QueryPlayerMarquee_MsgID>() {
  return ::CS_QueryPlayerMarquee_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_QueryPlayerMarquee_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_QueryPlayerMarquee_MsgID>() {
  return ::SC_QueryPlayerMarquee_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_NewMarquee_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_NewMarquee_MsgID>() {
  return ::SC_NewMarquee_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_SendMail_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_SendMail_MsgID>() {
  return ::CS_SendMail_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_SendMail_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_SendMail_MsgID>() {
  return ::SC_SendMail_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_RecviceMail_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_RecviceMail_MsgID>() {
  return ::SC_RecviceMail_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_DelMail_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_DelMail_MsgID>() {
  return ::CS_DelMail_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_DelMail_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_DelMail_MsgID>() {
  return ::SC_DelMail_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ReceiveMailAttachment_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ReceiveMailAttachment_MsgID>() {
  return ::CS_ReceiveMailAttachment_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ReceiveMailAttachment_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ReceiveMailAttachment_MsgID>() {
  return ::SC_ReceiveMailAttachment_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ReceiveRewardLogin_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ReceiveRewardLogin_MsgID>() {
  return ::CS_ReceiveRewardLogin_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ReceiveRewardLogin_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ReceiveRewardLogin_MsgID>() {
  return ::SC_ReceiveRewardLogin_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ReceiveRewardOnline_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ReceiveRewardOnline_MsgID>() {
  return ::CS_ReceiveRewardOnline_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ReceiveRewardOnline_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ReceiveRewardOnline_MsgID>() {
  return ::SC_ReceiveRewardOnline_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ReceiveReliefPayment_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ReceiveReliefPayment_MsgID>() {
  return ::CS_ReceiveReliefPayment_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ReceiveReliefPayment_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ReceiveReliefPayment_MsgID>() {
  return ::SC_ReceiveReliefPayment_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CE_RequestRank_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CE_RequestRank_MsgID>() {
  return ::CE_RequestRank_MsgID_descriptor();
}
template <> struct is_proto_enum< ::EC_ReplyRank_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EC_ReplyRank_MsgID>() {
  return ::EC_ReplyRank_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_EnterRoom_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_EnterRoom_MsgID>() {
  return ::CS_EnterRoom_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_EnterRoom_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_EnterRoom_MsgID>() {
  return ::SC_EnterRoom_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_NotifyEnterRoom_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_NotifyEnterRoom_MsgID>() {
  return ::SC_NotifyEnterRoom_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ExitRoom_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ExitRoom_MsgID>() {
  return ::CS_ExitRoom_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ExitRoom_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ExitRoom_MsgID>() {
  return ::SC_ExitRoom_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_NotifyExitRoom_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_NotifyExitRoom_MsgID>() {
  return ::SC_NotifyExitRoom_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_AutoEnterRoom_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_AutoEnterRoom_MsgID>() {
  return ::CS_AutoEnterRoom_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_AutoSitDown_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_AutoSitDown_MsgID>() {
  return ::CS_AutoSitDown_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_SitDown_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_SitDown_MsgID>() {
  return ::CS_SitDown_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_SitDown_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_SitDown_MsgID>() {
  return ::SC_SitDown_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_NotifySitDown_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_NotifySitDown_MsgID>() {
  return ::SC_NotifySitDown_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_StandUp_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_StandUp_MsgID>() {
  return ::CS_StandUp_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_StandUp_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_StandUp_MsgID>() {
  return ::SC_StandUp_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_NotifyStandUp_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_NotifyStandUp_MsgID>() {
  return ::SC_NotifyStandUp_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_EnterRoomAndSitDown_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_EnterRoomAndSitDown_MsgID>() {
  return ::CS_EnterRoomAndSitDown_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_EnterRoomAndSitDown_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_EnterRoomAndSitDown_MsgID>() {
  return ::SC_EnterRoomAndSitDown_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_StandUpAndExitRoom_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_StandUpAndExitRoom_MsgID>() {
  return ::CS_StandUpAndExitRoom_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_StandUpAndExitRoom_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_StandUpAndExitRoom_MsgID>() {
  return ::SC_StandUpAndExitRoom_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ChangeChair_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ChangeChair_MsgID>() {
  return ::CS_ChangeChair_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ChangeChair_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ChangeChair_MsgID>() {
  return ::SC_ChangeChair_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ChangeTable_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ChangeTable_MsgID>() {
  return ::CS_ChangeTable_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_Ready_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_Ready_MsgID>() {
  return ::CS_Ready_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_Ready_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_Ready_MsgID>() {
  return ::SC_Ready_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_Exit_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_Exit_MsgID>() {
  return ::CS_Exit_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ReadyFailed_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ReadyFailed_MsgID>() {
  return ::SC_ReadyFailed_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_Gamefinish_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_Gamefinish_MsgID>() {
  return ::SC_Gamefinish_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_PlayerReconnection_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_PlayerReconnection_MsgID>() {
  return ::SC_PlayerReconnection_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ChangeTable_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ChangeTable_MsgID>() {
  return ::SC_ChangeTable_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_HEARTBEAT_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_HEARTBEAT_MsgID>() {
  return ::SC_HEARTBEAT_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_HEARTBEAT_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_HEARTBEAT_MsgID>() {
  return ::CS_HEARTBEAT_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_ReconnectionPlay_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_ReconnectionPlay_MsgID>() {
  return ::CS_ReconnectionPlay_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ReconnectionPlay_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ReconnectionPlay_MsgID>() {
  return ::SC_ReconnectionPlay_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_SimpleRespons_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_SimpleRespons_MsgID>() {
  return ::SC_SimpleRespons_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_QueryPlayerMsgData_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_QueryPlayerMsgData_MsgID>() {
  return ::CS_QueryPlayerMsgData_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_QueryPlayerMsgData_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_QueryPlayerMsgData_MsgID>() {
  return ::SC_QueryPlayerMsgData_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_NewMsgData_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_NewMsgData_MsgID>() {
  return ::SC_NewMsgData_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_SetMsgReadFlag_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_SetMsgReadFlag_MsgID>() {
  return ::CS_SetMsgReadFlag_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_FeedBackUpDate_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_FeedBackUpDate_MsgID>() {
  return ::SC_FeedBackUpDate_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_DeletMsg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_DeletMsg_MsgID>() {
  return ::SC_DeletMsg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_CashMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_CashMoney_MsgID>() {
  return ::CS_CashMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_CashMoneyResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_CashMoneyResult_MsgID>() {
  return ::SC_CashMoneyResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_CashMoneyType_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_CashMoneyType_MsgID>() {
  return ::CS_CashMoneyType_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_CashMoneyType_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_CashMoneyType_MsgID>() {
  return ::SC_CashMoneyType_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_NotifyBank_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_NotifyBank_MsgID>() {
  return ::SC_NotifyBank_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_BandAlipay_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_BandAlipay_MsgID>() {
  return ::CS_BandAlipay_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_BandAlipay_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_BandAlipay_MsgID>() {
  return ::SC_BandAlipay_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_Trusteeship_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_Trusteeship_MsgID>() {
  return ::CS_Trusteeship_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_ShowTax_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_ShowTax_MsgID>() {
  return ::SC_ShowTax_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_Delonline_player_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_Delonline_player_MsgID>() {
  return ::SD_Delonline_player_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_AlipayEdit_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_AlipayEdit_MsgID>() {
  return ::SC_AlipayEdit_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_BrocastClientUpdateInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_BrocastClientUpdateInfo_MsgID>() {
  return ::SC_BrocastClientUpdateInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_FreezeAccount_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_FreezeAccount_MsgID>() {
  return ::SC_FreezeAccount_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_GameMaintain_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_GameMaintain_MsgID>() {
  return ::SC_GameMaintain_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_CashMaintain_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_CashMaintain_MsgID>() {
  return ::SC_CashMaintain_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_GetHelpMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_GetHelpMoney_MsgID>() {
  return ::CS_GetHelpMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_GetHelpMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_GetHelpMoney_MsgID>() {
  return ::SC_GetHelpMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_Agent_CashMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_Agent_CashMoney_MsgID>() {
  return ::CS_Agent_CashMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_Agent_CashMoneyResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_Agent_CashMoneyResult_MsgID>() {
  return ::SC_Agent_CashMoneyResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_RequestNewAward_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_RequestNewAward_MsgID>() {
  return ::CS_RequestNewAward_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_RequestNewAward_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_RequestNewAward_MsgID>() {
  return ::SC_RequestNewAward_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_RequestCheckInAward_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_RequestCheckInAward_MsgID>() {
  return ::CS_RequestCheckInAward_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_RequestCheckInAward_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_RequestCheckInAward_MsgID>() {
  return ::SC_RequestCheckInAward_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_BindBankCard_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_BindBankCard_MsgID>() {
  return ::CS_BindBankCard_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_BindBankCard_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_BindBankCard_MsgID>() {
  return ::SC_BindBankCard_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_GetBankCardInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_GetBankCardInfo_MsgID>() {
  return ::CS_GetBankCardInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_GetBankCardInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_GetBankCardInfo_MsgID>() {
  return ::SC_GetBankCardInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_NewGameMaintain_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_NewGameMaintain_MsgID>() {
  return ::CS_NewGameMaintain_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_NewGameMaintain_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_NewGameMaintain_MsgID>() {
  return ::SC_NewGameMaintain_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_PlayerPromotion_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_PlayerPromotion_MsgID>() {
  return ::CS_PlayerPromotion_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_PlayerPromotion_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_PlayerPromotion_MsgID>() {
  return ::SC_PlayerPromotion_MsgID_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_public_5fmsg_2eproto__INCLUDED
