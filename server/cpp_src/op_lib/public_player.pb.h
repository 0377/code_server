// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: public_player.proto

#ifndef PROTOBUF_public_5fplayer_2eproto__INCLUDED
#define PROTOBUF_public_5fplayer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class AgentsTransferData;
class AgentsTransferDataDefaultTypeInternal;
extern AgentsTransferDataDefaultTypeInternal _AgentsTransferData_default_instance_;
class AndroidInfo;
class AndroidInfoDefaultTypeInternal;
extern AndroidInfoDefaultTypeInternal _AndroidInfo_default_instance_;
class BankCardInfo;
class BankCardInfoDefaultTypeInternal;
extern BankCardInfoDefaultTypeInternal _BankCardInfo_default_instance_;
class BankStatement;
class BankStatementDefaultTypeInternal;
extern BankStatementDefaultTypeInternal _BankStatement_default_instance_;
class CashFalse;
class CashFalseDefaultTypeInternal;
extern CashFalseDefaultTypeInternal _CashFalse_default_instance_;
class CashMoneyType;
class CashMoneyTypeDefaultTypeInternal;
extern CashMoneyTypeDefaultTypeInternal _CashMoneyType_default_instance_;
class GameClientRoomListCfg;
class GameClientRoomListCfgDefaultTypeInternal;
extern GameClientRoomListCfgDefaultTypeInternal _GameClientRoomListCfg_default_instance_;
class ItemBagInfo;
class ItemBagInfoDefaultTypeInternal;
extern ItemBagInfoDefaultTypeInternal _ItemBagInfo_default_instance_;
class ItemInfo;
class ItemInfoDefaultTypeInternal;
extern ItemInfoDefaultTypeInternal _ItemInfo_default_instance_;
class MailInfo;
class MailInfoDefaultTypeInternal;
extern MailInfoDefaultTypeInternal _MailInfo_default_instance_;
class MailListInfo;
class MailListInfoDefaultTypeInternal;
extern MailListInfoDefaultTypeInternal _MailListInfo_default_instance_;
class Marquee;
class MarqueeDefaultTypeInternal;
extern MarqueeDefaultTypeInternal _Marquee_default_instance_;
class Msg_DataInfo;
class Msg_DataInfoDefaultTypeInternal;
extern Msg_DataInfoDefaultTypeInternal _Msg_DataInfo_default_instance_;
class PlayerBaseInfo;
class PlayerBaseInfoDefaultTypeInternal;
extern PlayerBaseInfoDefaultTypeInternal _PlayerBaseInfo_default_instance_;
class PlayerInfoInMemery;
class PlayerInfoInMemeryDefaultTypeInternal;
extern PlayerInfoInMemeryDefaultTypeInternal _PlayerInfoInMemery_default_instance_;
class PlayerMoney;
class PlayerMoneyDefaultTypeInternal;
extern PlayerMoneyDefaultTypeInternal _PlayerMoney_default_instance_;
class PlayerVisualInfo;
class PlayerVisualInfoDefaultTypeInternal;
extern PlayerVisualInfoDefaultTypeInternal _PlayerVisualInfo_default_instance_;
class RankItem;
class RankItemDefaultTypeInternal;
extern RankItemDefaultTypeInternal _RankItem_default_instance_;
class RankList;
class RankListDefaultTypeInternal;
extern RankListDefaultTypeInternal _RankList_default_instance_;
class Recharge;
class RechargeDefaultTypeInternal;
extern RechargeDefaultTypeInternal _Recharge_default_instance_;

namespace protobuf_public_5fplayer_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_public_5fplayer_2eproto

// ===================================================================

class GameClientRoomListCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameClientRoomListCfg) */ {
 public:
  GameClientRoomListCfg();
  virtual ~GameClientRoomListCfg();

  GameClientRoomListCfg(const GameClientRoomListCfg& from);

  inline GameClientRoomListCfg& operator=(const GameClientRoomListCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameClientRoomListCfg& default_instance();

  static inline const GameClientRoomListCfg* internal_default_instance() {
    return reinterpret_cast<const GameClientRoomListCfg*>(
               &_GameClientRoomListCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GameClientRoomListCfg* other);

  // implements Message ----------------------------------------------

  inline GameClientRoomListCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  GameClientRoomListCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameClientRoomListCfg& from);
  void MergeFrom(const GameClientRoomListCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameClientRoomListCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string game_name = 4;
  bool has_game_name() const;
  void clear_game_name();
  static const int kGameNameFieldNumber = 4;
  const ::std::string& game_name() const;
  void set_game_name(const ::std::string& value);
  #if LANG_CXX11
  void set_game_name(::std::string&& value);
  #endif
  void set_game_name(const char* value);
  void set_game_name(const char* value, size_t size);
  ::std::string* mutable_game_name();
  ::std::string* release_game_name();
  void set_allocated_game_name(::std::string* game_name);

  // optional string room_lua_cfg = 9;
  bool has_room_lua_cfg() const;
  void clear_room_lua_cfg();
  static const int kRoomLuaCfgFieldNumber = 9;
  const ::std::string& room_lua_cfg() const;
  void set_room_lua_cfg(const ::std::string& value);
  #if LANG_CXX11
  void set_room_lua_cfg(::std::string&& value);
  #endif
  void set_room_lua_cfg(const char* value);
  void set_room_lua_cfg(const char* value, size_t size);
  ::std::string* mutable_room_lua_cfg();
  ::std::string* release_room_lua_cfg();
  void set_allocated_room_lua_cfg(::std::string* room_lua_cfg);

  // optional int32 game_id = 1;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // optional int32 second_game_type = 2;
  bool has_second_game_type() const;
  void clear_second_game_type();
  static const int kSecondGameTypeFieldNumber = 2;
  ::google::protobuf::int32 second_game_type() const;
  void set_second_game_type(::google::protobuf::int32 value);

  // optional int32 first_game_type = 3;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 3;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional int32 table_count = 5;
  bool has_table_count() const;
  void clear_table_count();
  static const int kTableCountFieldNumber = 5;
  ::google::protobuf::int32 table_count() const;
  void set_table_count(::google::protobuf::int32 value);

  // optional int32 money_limit = 6;
  bool has_money_limit() const;
  void clear_money_limit();
  static const int kMoneyLimitFieldNumber = 6;
  ::google::protobuf::int32 money_limit() const;
  void set_money_limit(::google::protobuf::int32 value);

  // optional int32 cell_money = 7;
  bool has_cell_money() const;
  void clear_cell_money();
  static const int kCellMoneyFieldNumber = 7;
  ::google::protobuf::int32 cell_money() const;
  void set_cell_money(::google::protobuf::int32 value);

  // optional int32 tax = 8;
  bool has_tax() const;
  void clear_tax();
  static const int kTaxFieldNumber = 8;
  ::google::protobuf::int32 tax() const;
  void set_tax(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameClientRoomListCfg)
 private:
  void set_has_game_id();
  void clear_has_game_id();
  void set_has_second_game_type();
  void clear_has_second_game_type();
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_game_name();
  void clear_has_game_name();
  void set_has_table_count();
  void clear_has_table_count();
  void set_has_money_limit();
  void clear_has_money_limit();
  void set_has_cell_money();
  void clear_has_cell_money();
  void set_has_tax();
  void clear_has_tax();
  void set_has_room_lua_cfg();
  void clear_has_room_lua_cfg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr game_name_;
  ::google::protobuf::internal::ArenaStringPtr room_lua_cfg_;
  ::google::protobuf::int32 game_id_;
  ::google::protobuf::int32 second_game_type_;
  ::google::protobuf::int32 first_game_type_;
  ::google::protobuf::int32 table_count_;
  ::google::protobuf::int32 money_limit_;
  ::google::protobuf::int32 cell_money_;
  ::google::protobuf::int32 tax_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerBaseInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerBaseInfo) */ {
 public:
  PlayerBaseInfo();
  virtual ~PlayerBaseInfo();

  PlayerBaseInfo(const PlayerBaseInfo& from);

  inline PlayerBaseInfo& operator=(const PlayerBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerBaseInfo& default_instance();

  static inline const PlayerBaseInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerBaseInfo*>(
               &_PlayerBaseInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PlayerBaseInfo* other);

  // implements Message ----------------------------------------------

  inline PlayerBaseInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerBaseInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerBaseInfo& from);
  void MergeFrom(const PlayerBaseInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerBaseInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 bank = 1 [default = 0];
  bool has_bank() const;
  void clear_bank();
  static const int kBankFieldNumber = 1;
  ::google::protobuf::int64 bank() const;
  void set_bank(::google::protobuf::int64 value);

  // optional int32 login_award_day = 2;
  bool has_login_award_day() const;
  void clear_login_award_day();
  static const int kLoginAwardDayFieldNumber = 2;
  ::google::protobuf::int32 login_award_day() const;
  void set_login_award_day(::google::protobuf::int32 value);

  // optional int32 login_award_receive_day = 3;
  bool has_login_award_receive_day() const;
  void clear_login_award_receive_day();
  static const int kLoginAwardReceiveDayFieldNumber = 3;
  ::google::protobuf::int32 login_award_receive_day() const;
  void set_login_award_receive_day(::google::protobuf::int32 value);

  // optional int32 online_award_time = 4;
  bool has_online_award_time() const;
  void clear_online_award_time();
  static const int kOnlineAwardTimeFieldNumber = 4;
  ::google::protobuf::int32 online_award_time() const;
  void set_online_award_time(::google::protobuf::int32 value);

  // optional int32 online_award_num = 5;
  bool has_online_award_num() const;
  void clear_online_award_num();
  static const int kOnlineAwardNumFieldNumber = 5;
  ::google::protobuf::int32 online_award_num() const;
  void set_online_award_num(::google::protobuf::int32 value);

  // optional int32 relief_payment_count = 6;
  bool has_relief_payment_count() const;
  void clear_relief_payment_count();
  static const int kReliefPaymentCountFieldNumber = 6;
  ::google::protobuf::int32 relief_payment_count() const;
  void set_relief_payment_count(::google::protobuf::int32 value);

  // optional int32 header_icon = 9 [default = 0];
  bool has_header_icon() const;
  void clear_header_icon();
  static const int kHeaderIconFieldNumber = 9;
  ::google::protobuf::int32 header_icon() const;
  void set_header_icon(::google::protobuf::int32 value);

  // optional int64 money = 8 [default = 0];
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 8;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 slotma_addition = 10 [default = 0];
  bool has_slotma_addition() const;
  void clear_slotma_addition();
  static const int kSlotmaAdditionFieldNumber = 10;
  ::google::protobuf::int32 slotma_addition() const;
  void set_slotma_addition(::google::protobuf::int32 value);

  // optional int32 newplayer_reward = 11 [default = 0];
  bool has_newplayer_reward() const;
  void clear_newplayer_reward();
  static const int kNewplayerRewardFieldNumber = 11;
  ::google::protobuf::int32 newplayer_reward() const;
  void set_newplayer_reward(::google::protobuf::int32 value);

  // optional int32 level = 7 [default = 1];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 7;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerBaseInfo)
 private:
  void set_has_bank();
  void clear_has_bank();
  void set_has_login_award_day();
  void clear_has_login_award_day();
  void set_has_login_award_receive_day();
  void clear_has_login_award_receive_day();
  void set_has_online_award_time();
  void clear_has_online_award_time();
  void set_has_online_award_num();
  void clear_has_online_award_num();
  void set_has_relief_payment_count();
  void clear_has_relief_payment_count();
  void set_has_level();
  void clear_has_level();
  void set_has_money();
  void clear_has_money();
  void set_has_header_icon();
  void clear_has_header_icon();
  void set_has_slotma_addition();
  void clear_has_slotma_addition();
  void set_has_newplayer_reward();
  void clear_has_newplayer_reward();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 bank_;
  ::google::protobuf::int32 login_award_day_;
  ::google::protobuf::int32 login_award_receive_day_;
  ::google::protobuf::int32 online_award_time_;
  ::google::protobuf::int32 online_award_num_;
  ::google::protobuf::int32 relief_payment_count_;
  ::google::protobuf::int32 header_icon_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 slotma_addition_;
  ::google::protobuf::int32 newplayer_reward_;
  ::google::protobuf::int32 level_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerVisualInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerVisualInfo) */ {
 public:
  PlayerVisualInfo();
  virtual ~PlayerVisualInfo();

  PlayerVisualInfo(const PlayerVisualInfo& from);

  inline PlayerVisualInfo& operator=(const PlayerVisualInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerVisualInfo& default_instance();

  static inline const PlayerVisualInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerVisualInfo*>(
               &_PlayerVisualInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PlayerVisualInfo* other);

  // implements Message ----------------------------------------------

  inline PlayerVisualInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerVisualInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerVisualInfo& from);
  void MergeFrom(const PlayerVisualInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerVisualInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 3;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 3;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string nickname = 4;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 4;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string ip_area = 8;
  bool has_ip_area() const;
  void clear_ip_area();
  static const int kIpAreaFieldNumber = 8;
  const ::std::string& ip_area() const;
  void set_ip_area(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_area(::std::string&& value);
  #endif
  void set_ip_area(const char* value);
  void set_ip_area(const char* value, size_t size);
  ::std::string* mutable_ip_area();
  ::std::string* release_ip_area();
  void set_allocated_ip_area(::std::string* ip_area);

  // optional int32 chair_id = 1;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int64 money = 6 [default = 0];
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 6;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional bool is_ready = 9;
  bool has_is_ready() const;
  void clear_is_ready();
  static const int kIsReadyFieldNumber = 9;
  bool is_ready() const;
  void set_is_ready(bool value);

  // optional int32 level = 5 [default = 1];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional int32 header_icon = 7 [default = -1];
  bool has_header_icon() const;
  void clear_header_icon();
  static const int kHeaderIconFieldNumber = 7;
  ::google::protobuf::int32 header_icon() const;
  void set_header_icon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerVisualInfo)
 private:
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_guid();
  void clear_has_guid();
  void set_has_account();
  void clear_has_account();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_level();
  void clear_has_level();
  void set_has_money();
  void clear_has_money();
  void set_has_header_icon();
  void clear_has_header_icon();
  void set_has_ip_area();
  void clear_has_ip_area();
  void set_has_is_ready();
  void clear_has_is_ready();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr ip_area_;
  ::google::protobuf::int32 chair_id_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int64 money_;
  bool is_ready_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 header_icon_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ItemInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ItemInfo) */ {
 public:
  ItemInfo();
  virtual ~ItemInfo();

  ItemInfo(const ItemInfo& from);

  inline ItemInfo& operator=(const ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemInfo& default_instance();

  static inline const ItemInfo* internal_default_instance() {
    return reinterpret_cast<const ItemInfo*>(
               &_ItemInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ItemInfo* other);

  // implements Message ----------------------------------------------

  inline ItemInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ItemInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ItemInfo& from);
  void MergeFrom(const ItemInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ItemInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 item_id = 1;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::int32 item_id() const;
  void set_item_id(::google::protobuf::int32 value);

  // optional int32 item_num = 2;
  bool has_item_num() const;
  void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  ::google::protobuf::int32 item_num() const;
  void set_item_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ItemInfo)
 private:
  void set_has_item_id();
  void clear_has_item_id();
  void set_has_item_num();
  void clear_has_item_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 item_num_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Msg_DataInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Msg_DataInfo) */ {
 public:
  Msg_DataInfo();
  virtual ~Msg_DataInfo();

  Msg_DataInfo(const Msg_DataInfo& from);

  inline Msg_DataInfo& operator=(const Msg_DataInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_DataInfo& default_instance();

  static inline const Msg_DataInfo* internal_default_instance() {
    return reinterpret_cast<const Msg_DataInfo*>(
               &_Msg_DataInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Msg_DataInfo* other);

  // implements Message ----------------------------------------------

  inline Msg_DataInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  Msg_DataInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Msg_DataInfo& from);
  void MergeFrom(const Msg_DataInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Msg_DataInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string content = 6;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 6;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 start_time = 2;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  ::google::protobuf::int32 start_time() const;
  void set_start_time(::google::protobuf::int32 value);

  // optional int32 end_time = 3;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  ::google::protobuf::int32 end_time() const;
  void set_end_time(::google::protobuf::int32 value);

  // optional int32 msg_type = 4;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 4;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // optional int32 is_read = 5;
  bool has_is_read() const;
  void clear_is_read();
  static const int kIsReadFieldNumber = 5;
  ::google::protobuf::int32 is_read() const;
  void set_is_read(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg_DataInfo)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_end_time();
  void clear_has_end_time();
  void set_has_msg_type();
  void clear_has_msg_type();
  void set_has_is_read();
  void clear_has_is_read();
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 start_time_;
  ::google::protobuf::int32 end_time_;
  ::google::protobuf::int32 msg_type_;
  ::google::protobuf::int32 is_read_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ItemBagInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ItemBagInfo) */ {
 public:
  ItemBagInfo();
  virtual ~ItemBagInfo();

  ItemBagInfo(const ItemBagInfo& from);

  inline ItemBagInfo& operator=(const ItemBagInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemBagInfo& default_instance();

  static inline const ItemBagInfo* internal_default_instance() {
    return reinterpret_cast<const ItemBagInfo*>(
               &_ItemBagInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ItemBagInfo* other);

  // implements Message ----------------------------------------------

  inline ItemBagInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ItemBagInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ItemBagInfo& from);
  void MergeFrom(const ItemBagInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ItemBagInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ItemInfo pb_items = 1;
  int pb_items_size() const;
  void clear_pb_items();
  static const int kPbItemsFieldNumber = 1;
  const ::ItemInfo& pb_items(int index) const;
  ::ItemInfo* mutable_pb_items(int index);
  ::ItemInfo* add_pb_items();
  ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
      mutable_pb_items();
  const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
      pb_items() const;

  // @@protoc_insertion_point(class_scope:ItemBagInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ItemInfo > pb_items_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MailInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MailInfo) */ {
 public:
  MailInfo();
  virtual ~MailInfo();

  MailInfo(const MailInfo& from);

  inline MailInfo& operator=(const MailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailInfo& default_instance();

  static inline const MailInfo* internal_default_instance() {
    return reinterpret_cast<const MailInfo*>(
               &_MailInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(MailInfo* other);

  // implements Message ----------------------------------------------

  inline MailInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MailInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MailInfo& from);
  void MergeFrom(const MailInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MailInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ItemInfo pb_attachment = 8;
  int pb_attachment_size() const;
  void clear_pb_attachment();
  static const int kPbAttachmentFieldNumber = 8;
  const ::ItemInfo& pb_attachment(int index) const;
  ::ItemInfo* mutable_pb_attachment(int index);
  ::ItemInfo* add_pb_attachment();
  ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
      mutable_pb_attachment();
  const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
      pb_attachment() const;

  // optional string mail_id = 1;
  bool has_mail_id() const;
  void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  const ::std::string& mail_id() const;
  void set_mail_id(const ::std::string& value);
  #if LANG_CXX11
  void set_mail_id(::std::string&& value);
  #endif
  void set_mail_id(const char* value);
  void set_mail_id(const char* value, size_t size);
  ::std::string* mutable_mail_id();
  ::std::string* release_mail_id();
  void set_allocated_mail_id(::std::string* mail_id);

  // optional string send_name = 5;
  bool has_send_name() const;
  void clear_send_name();
  static const int kSendNameFieldNumber = 5;
  const ::std::string& send_name() const;
  void set_send_name(const ::std::string& value);
  #if LANG_CXX11
  void set_send_name(::std::string&& value);
  #endif
  void set_send_name(const char* value);
  void set_send_name(const char* value, size_t size);
  ::std::string* mutable_send_name();
  ::std::string* release_send_name();
  void set_allocated_send_name(::std::string* send_name);

  // optional string title = 6;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 6;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string content = 7;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 7;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional int32 expiration_time = 2;
  bool has_expiration_time() const;
  void clear_expiration_time();
  static const int kExpirationTimeFieldNumber = 2;
  ::google::protobuf::int32 expiration_time() const;
  void set_expiration_time(::google::protobuf::int32 value);

  // optional int32 guid = 3;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 send_guid = 4;
  bool has_send_guid() const;
  void clear_send_guid();
  static const int kSendGuidFieldNumber = 4;
  ::google::protobuf::int32 send_guid() const;
  void set_send_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MailInfo)
 private:
  void set_has_mail_id();
  void clear_has_mail_id();
  void set_has_expiration_time();
  void clear_has_expiration_time();
  void set_has_guid();
  void clear_has_guid();
  void set_has_send_guid();
  void clear_has_send_guid();
  void set_has_send_name();
  void clear_has_send_name();
  void set_has_title();
  void clear_has_title();
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ItemInfo > pb_attachment_;
  ::google::protobuf::internal::ArenaStringPtr mail_id_;
  ::google::protobuf::internal::ArenaStringPtr send_name_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 expiration_time_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 send_guid_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MailListInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MailListInfo) */ {
 public:
  MailListInfo();
  virtual ~MailListInfo();

  MailListInfo(const MailListInfo& from);

  inline MailListInfo& operator=(const MailListInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailListInfo& default_instance();

  static inline const MailListInfo* internal_default_instance() {
    return reinterpret_cast<const MailListInfo*>(
               &_MailListInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(MailListInfo* other);

  // implements Message ----------------------------------------------

  inline MailListInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MailListInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MailListInfo& from);
  void MergeFrom(const MailListInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MailListInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MailInfo pb_mails = 1;
  int pb_mails_size() const;
  void clear_pb_mails();
  static const int kPbMailsFieldNumber = 1;
  const ::MailInfo& pb_mails(int index) const;
  ::MailInfo* mutable_pb_mails(int index);
  ::MailInfo* add_pb_mails();
  ::google::protobuf::RepeatedPtrField< ::MailInfo >*
      mutable_pb_mails();
  const ::google::protobuf::RepeatedPtrField< ::MailInfo >&
      pb_mails() const;

  // @@protoc_insertion_point(class_scope:MailListInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MailInfo > pb_mails_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BankStatement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BankStatement) */ {
 public:
  BankStatement();
  virtual ~BankStatement();

  BankStatement(const BankStatement& from);

  inline BankStatement& operator=(const BankStatement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BankStatement& default_instance();

  static inline const BankStatement* internal_default_instance() {
    return reinterpret_cast<const BankStatement*>(
               &_BankStatement_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(BankStatement* other);

  // implements Message ----------------------------------------------

  inline BankStatement* New() const PROTOBUF_FINAL { return New(NULL); }

  BankStatement* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BankStatement& from);
  void MergeFrom(const BankStatement& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BankStatement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string target = 5;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 5;
  const ::std::string& target() const;
  void set_target(const ::std::string& value);
  #if LANG_CXX11
  void set_target(::std::string&& value);
  #endif
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  ::std::string* mutable_target();
  ::std::string* release_target();
  void set_allocated_target(::std::string* target);

  // optional int64 serial = 1;
  bool has_serial() const;
  void clear_serial();
  static const int kSerialFieldNumber = 1;
  ::google::protobuf::int64 serial() const;
  void set_serial(::google::protobuf::int64 value);

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 time = 3;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional int64 money = 6;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 6;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int64 bank_balance = 7;
  bool has_bank_balance() const;
  void clear_bank_balance();
  static const int kBankBalanceFieldNumber = 7;
  ::google::protobuf::int64 bank_balance() const;
  void set_bank_balance(::google::protobuf::int64 value);

  // optional int32 opt = 4;
  bool has_opt() const;
  void clear_opt();
  static const int kOptFieldNumber = 4;
  ::google::protobuf::int32 opt() const;
  void set_opt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BankStatement)
 private:
  void set_has_serial();
  void clear_has_serial();
  void set_has_guid();
  void clear_has_guid();
  void set_has_time();
  void clear_has_time();
  void set_has_opt();
  void clear_has_opt();
  void set_has_target();
  void clear_has_target();
  void set_has_money();
  void clear_has_money();
  void set_has_bank_balance();
  void clear_has_bank_balance();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr target_;
  ::google::protobuf::int64 serial_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int64 bank_balance_;
  ::google::protobuf::int32 opt_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RankItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RankItem) */ {
 public:
  RankItem();
  virtual ~RankItem();

  RankItem(const RankItem& from);

  inline RankItem& operator=(const RankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankItem& default_instance();

  static inline const RankItem* internal_default_instance() {
    return reinterpret_cast<const RankItem*>(
               &_RankItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(RankItem* other);

  // implements Message ----------------------------------------------

  inline RankItem* New() const PROTOBUF_FINAL { return New(NULL); }

  RankItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RankItem& from);
  void MergeFrom(const RankItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RankItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 rank = 1;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int64 money = 4;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 4;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:RankItem)
 private:
  void set_has_rank();
  void clear_has_rank();
  void set_has_guid();
  void clear_has_guid();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int64 money_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RankList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RankList) */ {
 public:
  RankList();
  virtual ~RankList();

  RankList(const RankList& from);

  inline RankList& operator=(const RankList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankList& default_instance();

  static inline const RankList* internal_default_instance() {
    return reinterpret_cast<const RankList*>(
               &_RankList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(RankList* other);

  // implements Message ----------------------------------------------

  inline RankList* New() const PROTOBUF_FINAL { return New(NULL); }

  RankList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RankList& from);
  void MergeFrom(const RankList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RankList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RankItem pb_rank_list = 1;
  int pb_rank_list_size() const;
  void clear_pb_rank_list();
  static const int kPbRankListFieldNumber = 1;
  const ::RankItem& pb_rank_list(int index) const;
  ::RankItem* mutable_pb_rank_list(int index);
  ::RankItem* add_pb_rank_list();
  ::google::protobuf::RepeatedPtrField< ::RankItem >*
      mutable_pb_rank_list();
  const ::google::protobuf::RepeatedPtrField< ::RankItem >&
      pb_rank_list() const;

  // @@protoc_insertion_point(class_scope:RankList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RankItem > pb_rank_list_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AndroidInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AndroidInfo) */ {
 public:
  AndroidInfo();
  virtual ~AndroidInfo();

  AndroidInfo(const AndroidInfo& from);

  inline AndroidInfo& operator=(const AndroidInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AndroidInfo& default_instance();

  static inline const AndroidInfo* internal_default_instance() {
    return reinterpret_cast<const AndroidInfo*>(
               &_AndroidInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(AndroidInfo* other);

  // implements Message ----------------------------------------------

  inline AndroidInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AndroidInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AndroidInfo& from);
  void MergeFrom(const AndroidInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AndroidInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 game_id = 4;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 4;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // optional int64 money = 5;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 5;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AndroidInfo)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_account();
  void clear_has_account();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_game_id();
  void clear_has_game_id();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 game_id_;
  ::google::protobuf::int64 money_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CashFalse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CashFalse) */ {
 public:
  CashFalse();
  virtual ~CashFalse();

  CashFalse(const CashFalse& from);

  inline CashFalse& operator=(const CashFalse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CashFalse& default_instance();

  static inline const CashFalse* internal_default_instance() {
    return reinterpret_cast<const CashFalse*>(
               &_CashFalse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CashFalse* other);

  // implements Message ----------------------------------------------

  inline CashFalse* New() const PROTOBUF_FINAL { return New(NULL); }

  CashFalse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CashFalse& from);
  void MergeFrom(const CashFalse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CashFalse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 order_id = 2;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  ::google::protobuf::int32 order_id() const;
  void set_order_id(::google::protobuf::int32 value);

  // optional int64 coins = 3;
  bool has_coins() const;
  void clear_coins();
  static const int kCoinsFieldNumber = 3;
  ::google::protobuf::int64 coins() const;
  void set_coins(::google::protobuf::int64 value);

  // optional int32 status = 4;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 status_c = 5;
  bool has_status_c() const;
  void clear_status_c();
  static const int kStatusCFieldNumber = 5;
  ::google::protobuf::int32 status_c() const;
  void set_status_c(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CashFalse)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_order_id();
  void clear_has_order_id();
  void set_has_coins();
  void clear_has_coins();
  void set_has_status();
  void clear_has_status();
  void set_has_status_c();
  void clear_has_status_c();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 order_id_;
  ::google::protobuf::int64 coins_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 status_c_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CashMoneyType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CashMoneyType) */ {
 public:
  CashMoneyType();
  virtual ~CashMoneyType();

  CashMoneyType(const CashMoneyType& from);

  inline CashMoneyType& operator=(const CashMoneyType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CashMoneyType& default_instance();

  static inline const CashMoneyType* internal_default_instance() {
    return reinterpret_cast<const CashMoneyType*>(
               &_CashMoneyType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CashMoneyType* other);

  // implements Message ----------------------------------------------

  inline CashMoneyType* New() const PROTOBUF_FINAL { return New(NULL); }

  CashMoneyType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CashMoneyType& from);
  void MergeFrom(const CashMoneyType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CashMoneyType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string created_at = 2;
  bool has_created_at() const;
  void clear_created_at();
  static const int kCreatedAtFieldNumber = 2;
  const ::std::string& created_at() const;
  void set_created_at(const ::std::string& value);
  #if LANG_CXX11
  void set_created_at(::std::string&& value);
  #endif
  void set_created_at(const char* value);
  void set_created_at(const char* value, size_t size);
  ::std::string* mutable_created_at();
  ::std::string* release_created_at();
  void set_allocated_created_at(::std::string* created_at);

  // optional int32 money = 1;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 1;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // optional int32 status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CashMoneyType)
 private:
  void set_has_money();
  void clear_has_money();
  void set_has_created_at();
  void clear_has_created_at();
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr created_at_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 status_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerMoney) */ {
 public:
  PlayerMoney();
  virtual ~PlayerMoney();

  PlayerMoney(const PlayerMoney& from);

  inline PlayerMoney& operator=(const PlayerMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerMoney& default_instance();

  static inline const PlayerMoney* internal_default_instance() {
    return reinterpret_cast<const PlayerMoney*>(
               &_PlayerMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(PlayerMoney* other);

  // implements Message ----------------------------------------------

  inline PlayerMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerMoney& from);
  void MergeFrom(const PlayerMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 money = 1;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 1;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int64 bank = 2;
  bool has_bank() const;
  void clear_bank();
  static const int kBankFieldNumber = 2;
  ::google::protobuf::int64 bank() const;
  void set_bank(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PlayerMoney)
 private:
  void set_has_money();
  void clear_has_money();
  void set_has_bank();
  void clear_has_bank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int64 bank_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Recharge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Recharge) */ {
 public:
  Recharge();
  virtual ~Recharge();

  Recharge(const Recharge& from);

  inline Recharge& operator=(const Recharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Recharge& default_instance();

  static inline const Recharge* internal_default_instance() {
    return reinterpret_cast<const Recharge*>(
               &_Recharge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(Recharge* other);

  // implements Message ----------------------------------------------

  inline Recharge* New() const PROTOBUF_FINAL { return New(NULL); }

  Recharge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Recharge& from);
  void MergeFrom(const Recharge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Recharge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int64 exchange_gold = 3;
  bool has_exchange_gold() const;
  void clear_exchange_gold();
  static const int kExchangeGoldFieldNumber = 3;
  ::google::protobuf::int64 exchange_gold() const;
  void set_exchange_gold(::google::protobuf::int64 value);

  // optional int32 pay_status = 4;
  bool has_pay_status() const;
  void clear_pay_status();
  static const int kPayStatusFieldNumber = 4;
  ::google::protobuf::int32 pay_status() const;
  void set_pay_status(::google::protobuf::int32 value);

  // optional int32 server_status = 5;
  bool has_server_status() const;
  void clear_server_status();
  static const int kServerStatusFieldNumber = 5;
  ::google::protobuf::int32 server_status() const;
  void set_server_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Recharge)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_id();
  void clear_has_id();
  void set_has_exchange_gold();
  void clear_has_exchange_gold();
  void set_has_pay_status();
  void clear_has_pay_status();
  void set_has_server_status();
  void clear_has_server_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int64 exchange_gold_;
  ::google::protobuf::int32 pay_status_;
  ::google::protobuf::int32 server_status_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Marquee : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Marquee) */ {
 public:
  Marquee();
  virtual ~Marquee();

  Marquee(const Marquee& from);

  inline Marquee& operator=(const Marquee& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Marquee& default_instance();

  static inline const Marquee* internal_default_instance() {
    return reinterpret_cast<const Marquee*>(
               &_Marquee_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(Marquee* other);

  // implements Message ----------------------------------------------

  inline Marquee* New() const PROTOBUF_FINAL { return New(NULL); }

  Marquee* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Marquee& from);
  void MergeFrom(const Marquee& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Marquee* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string content = 4;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 4;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 start_time = 2;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  ::google::protobuf::int32 start_time() const;
  void set_start_time(::google::protobuf::int32 value);

  // optional int32 end_time = 3;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  ::google::protobuf::int32 end_time() const;
  void set_end_time(::google::protobuf::int32 value);

  // optional int32 number = 5;
  bool has_number() const;
  void clear_number();
  static const int kNumberFieldNumber = 5;
  ::google::protobuf::int32 number() const;
  void set_number(::google::protobuf::int32 value);

  // optional int32 interval_time = 6;
  bool has_interval_time() const;
  void clear_interval_time();
  static const int kIntervalTimeFieldNumber = 6;
  ::google::protobuf::int32 interval_time() const;
  void set_interval_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Marquee)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_end_time();
  void clear_has_end_time();
  void set_has_content();
  void clear_has_content();
  void set_has_number();
  void clear_has_number();
  void set_has_interval_time();
  void clear_has_interval_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 start_time_;
  ::google::protobuf::int32 end_time_;
  ::google::protobuf::int32 number_;
  ::google::protobuf::int32 interval_time_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AgentsTransferData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AgentsTransferData) */ {
 public:
  AgentsTransferData();
  virtual ~AgentsTransferData();

  AgentsTransferData(const AgentsTransferData& from);

  inline AgentsTransferData& operator=(const AgentsTransferData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AgentsTransferData& default_instance();

  static inline const AgentsTransferData* internal_default_instance() {
    return reinterpret_cast<const AgentsTransferData*>(
               &_AgentsTransferData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(AgentsTransferData* other);

  // implements Message ----------------------------------------------

  inline AgentsTransferData* New() const PROTOBUF_FINAL { return New(NULL); }

  AgentsTransferData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AgentsTransferData& from);
  void MergeFrom(const AgentsTransferData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AgentsTransferData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 AgentsID = 1;
  bool has_agentsid() const;
  void clear_agentsid();
  static const int kAgentsIDFieldNumber = 1;
  ::google::protobuf::int32 agentsid() const;
  void set_agentsid(::google::protobuf::int32 value);

  // optional int32 PlayerID = 2;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 2;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // optional int32 transfer_id = 3;
  bool has_transfer_id() const;
  void clear_transfer_id();
  static const int kTransferIdFieldNumber = 3;
  ::google::protobuf::int32 transfer_id() const;
  void set_transfer_id(::google::protobuf::int32 value);

  // optional int32 transfer_type = 4;
  bool has_transfer_type() const;
  void clear_transfer_type();
  static const int kTransferTypeFieldNumber = 4;
  ::google::protobuf::int32 transfer_type() const;
  void set_transfer_type(::google::protobuf::int32 value);

  // optional int32 transfer_money = 5;
  bool has_transfer_money() const;
  void clear_transfer_money();
  static const int kTransferMoneyFieldNumber = 5;
  ::google::protobuf::int32 transfer_money() const;
  void set_transfer_money(::google::protobuf::int32 value);

  // optional int32 retID = 6;
  bool has_retid() const;
  void clear_retid();
  static const int kRetIDFieldNumber = 6;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // optional int32 reCode = 7;
  bool has_recode() const;
  void clear_recode();
  static const int kReCodeFieldNumber = 7;
  ::google::protobuf::int32 recode() const;
  void set_recode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AgentsTransferData)
 private:
  void set_has_agentsid();
  void clear_has_agentsid();
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_transfer_id();
  void clear_has_transfer_id();
  void set_has_transfer_type();
  void clear_has_transfer_type();
  void set_has_transfer_money();
  void clear_has_transfer_money();
  void set_has_retid();
  void clear_has_retid();
  void set_has_recode();
  void clear_has_recode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 agentsid_;
  ::google::protobuf::int32 playerid_;
  ::google::protobuf::int32 transfer_id_;
  ::google::protobuf::int32 transfer_type_;
  ::google::protobuf::int32 transfer_money_;
  ::google::protobuf::int32 retid_;
  ::google::protobuf::int32 recode_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BankCardInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BankCardInfo) */ {
 public:
  BankCardInfo();
  virtual ~BankCardInfo();

  BankCardInfo(const BankCardInfo& from);

  inline BankCardInfo& operator=(const BankCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BankCardInfo& default_instance();

  static inline const BankCardInfo* internal_default_instance() {
    return reinterpret_cast<const BankCardInfo*>(
               &_BankCardInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(BankCardInfo* other);

  // implements Message ----------------------------------------------

  inline BankCardInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BankCardInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BankCardInfo& from);
  void MergeFrom(const BankCardInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BankCardInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string card_num = 3;
  bool has_card_num() const;
  void clear_card_num();
  static const int kCardNumFieldNumber = 3;
  const ::std::string& card_num() const;
  void set_card_num(const ::std::string& value);
  #if LANG_CXX11
  void set_card_num(::std::string&& value);
  #endif
  void set_card_num(const char* value);
  void set_card_num(const char* value, size_t size);
  ::std::string* mutable_card_num();
  ::std::string* release_card_num();
  void set_allocated_card_num(::std::string* card_num);

  // optional string user_name = 4;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 4;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional string bank_name = 5;
  bool has_bank_name() const;
  void clear_bank_name();
  static const int kBankNameFieldNumber = 5;
  const ::std::string& bank_name() const;
  void set_bank_name(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_name(::std::string&& value);
  #endif
  void set_bank_name(const char* value);
  void set_bank_name(const char* value, size_t size);
  ::std::string* mutable_bank_name();
  ::std::string* release_bank_name();
  void set_allocated_bank_name(::std::string* bank_name);

  // optional string bank_addr = 6;
  bool has_bank_addr() const;
  void clear_bank_addr();
  static const int kBankAddrFieldNumber = 6;
  const ::std::string& bank_addr() const;
  void set_bank_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_addr(::std::string&& value);
  #endif
  void set_bank_addr(const char* value);
  void set_bank_addr(const char* value, size_t size);
  ::std::string* mutable_bank_addr();
  ::std::string* release_bank_addr();
  void set_allocated_bank_addr(::std::string* bank_addr);

  // optional string bank_code = 7;
  bool has_bank_code() const;
  void clear_bank_code();
  static const int kBankCodeFieldNumber = 7;
  const ::std::string& bank_code() const;
  void set_bank_code(const ::std::string& value);
  #if LANG_CXX11
  void set_bank_code(::std::string&& value);
  #endif
  void set_bank_code(const char* value);
  void set_bank_code(const char* value, size_t size);
  ::std::string* mutable_bank_code();
  ::std::string* release_bank_code();
  void set_allocated_bank_code(::std::string* bank_code);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BankCardInfo)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_account();
  void clear_has_account();
  void set_has_card_num();
  void clear_has_card_num();
  void set_has_user_name();
  void clear_has_user_name();
  void set_has_bank_name();
  void clear_has_bank_name();
  void set_has_bank_addr();
  void clear_has_bank_addr();
  void set_has_bank_code();
  void clear_has_bank_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr card_num_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr bank_name_;
  ::google::protobuf::internal::ArenaStringPtr bank_addr_;
  ::google::protobuf::internal::ArenaStringPtr bank_code_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerInfoInMemery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerInfoInMemery) */ {
 public:
  PlayerInfoInMemery();
  virtual ~PlayerInfoInMemery();

  PlayerInfoInMemery(const PlayerInfoInMemery& from);

  inline PlayerInfoInMemery& operator=(const PlayerInfoInMemery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInfoInMemery& default_instance();

  static inline const PlayerInfoInMemery* internal_default_instance() {
    return reinterpret_cast<const PlayerInfoInMemery*>(
               &_PlayerInfoInMemery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(PlayerInfoInMemery* other);

  // implements Message ----------------------------------------------

  inline PlayerInfoInMemery* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerInfoInMemery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerInfoInMemery& from);
  void MergeFrom(const PlayerInfoInMemery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerInfoInMemery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // optional int32 bank = 3;
  bool has_bank() const;
  void clear_bank();
  static const int kBankFieldNumber = 3;
  ::google::protobuf::int32 bank() const;
  void set_bank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerInfoInMemery)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();
  void set_has_bank();
  void clear_has_bank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 bank_;
  friend struct protobuf_public_5fplayer_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GameClientRoomListCfg

// optional int32 game_id = 1;
inline bool GameClientRoomListCfg::has_game_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameClientRoomListCfg::set_has_game_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameClientRoomListCfg::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameClientRoomListCfg::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 GameClientRoomListCfg::game_id() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.game_id)
  return game_id_;
}
inline void GameClientRoomListCfg::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.game_id)
}

// optional int32 second_game_type = 2;
inline bool GameClientRoomListCfg::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameClientRoomListCfg::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameClientRoomListCfg::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameClientRoomListCfg::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
inline ::google::protobuf::int32 GameClientRoomListCfg::second_game_type() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.second_game_type)
  return second_game_type_;
}
inline void GameClientRoomListCfg::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.second_game_type)
}

// optional int32 first_game_type = 3;
inline bool GameClientRoomListCfg::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameClientRoomListCfg::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameClientRoomListCfg::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameClientRoomListCfg::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 GameClientRoomListCfg::first_game_type() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.first_game_type)
  return first_game_type_;
}
inline void GameClientRoomListCfg::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.first_game_type)
}

// optional string game_name = 4;
inline bool GameClientRoomListCfg::has_game_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameClientRoomListCfg::set_has_game_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameClientRoomListCfg::clear_has_game_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameClientRoomListCfg::clear_game_name() {
  game_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_name();
}
inline const ::std::string& GameClientRoomListCfg::game_name() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.game_name)
  return game_name_.GetNoArena();
}
inline void GameClientRoomListCfg::set_game_name(const ::std::string& value) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.game_name)
}
#if LANG_CXX11
inline void GameClientRoomListCfg::set_game_name(::std::string&& value) {
  set_has_game_name();
  game_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameClientRoomListCfg.game_name)
}
#endif
inline void GameClientRoomListCfg::set_game_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameClientRoomListCfg.game_name)
}
inline void GameClientRoomListCfg::set_game_name(const char* value, size_t size) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameClientRoomListCfg.game_name)
}
inline ::std::string* GameClientRoomListCfg::mutable_game_name() {
  set_has_game_name();
  // @@protoc_insertion_point(field_mutable:GameClientRoomListCfg.game_name)
  return game_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameClientRoomListCfg::release_game_name() {
  // @@protoc_insertion_point(field_release:GameClientRoomListCfg.game_name)
  clear_has_game_name();
  return game_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameClientRoomListCfg::set_allocated_game_name(::std::string* game_name) {
  if (game_name != NULL) {
    set_has_game_name();
  } else {
    clear_has_game_name();
  }
  game_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_name);
  // @@protoc_insertion_point(field_set_allocated:GameClientRoomListCfg.game_name)
}

// optional int32 table_count = 5;
inline bool GameClientRoomListCfg::has_table_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameClientRoomListCfg::set_has_table_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameClientRoomListCfg::clear_has_table_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameClientRoomListCfg::clear_table_count() {
  table_count_ = 0;
  clear_has_table_count();
}
inline ::google::protobuf::int32 GameClientRoomListCfg::table_count() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.table_count)
  return table_count_;
}
inline void GameClientRoomListCfg::set_table_count(::google::protobuf::int32 value) {
  set_has_table_count();
  table_count_ = value;
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.table_count)
}

// optional int32 money_limit = 6;
inline bool GameClientRoomListCfg::has_money_limit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GameClientRoomListCfg::set_has_money_limit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GameClientRoomListCfg::clear_has_money_limit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GameClientRoomListCfg::clear_money_limit() {
  money_limit_ = 0;
  clear_has_money_limit();
}
inline ::google::protobuf::int32 GameClientRoomListCfg::money_limit() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.money_limit)
  return money_limit_;
}
inline void GameClientRoomListCfg::set_money_limit(::google::protobuf::int32 value) {
  set_has_money_limit();
  money_limit_ = value;
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.money_limit)
}

// optional int32 cell_money = 7;
inline bool GameClientRoomListCfg::has_cell_money() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GameClientRoomListCfg::set_has_cell_money() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GameClientRoomListCfg::clear_has_cell_money() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GameClientRoomListCfg::clear_cell_money() {
  cell_money_ = 0;
  clear_has_cell_money();
}
inline ::google::protobuf::int32 GameClientRoomListCfg::cell_money() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.cell_money)
  return cell_money_;
}
inline void GameClientRoomListCfg::set_cell_money(::google::protobuf::int32 value) {
  set_has_cell_money();
  cell_money_ = value;
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.cell_money)
}

// optional int32 tax = 8;
inline bool GameClientRoomListCfg::has_tax() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GameClientRoomListCfg::set_has_tax() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GameClientRoomListCfg::clear_has_tax() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GameClientRoomListCfg::clear_tax() {
  tax_ = 0;
  clear_has_tax();
}
inline ::google::protobuf::int32 GameClientRoomListCfg::tax() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.tax)
  return tax_;
}
inline void GameClientRoomListCfg::set_tax(::google::protobuf::int32 value) {
  set_has_tax();
  tax_ = value;
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.tax)
}

// optional string room_lua_cfg = 9;
inline bool GameClientRoomListCfg::has_room_lua_cfg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameClientRoomListCfg::set_has_room_lua_cfg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameClientRoomListCfg::clear_has_room_lua_cfg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameClientRoomListCfg::clear_room_lua_cfg() {
  room_lua_cfg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_lua_cfg();
}
inline const ::std::string& GameClientRoomListCfg::room_lua_cfg() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.room_lua_cfg)
  return room_lua_cfg_.GetNoArena();
}
inline void GameClientRoomListCfg::set_room_lua_cfg(const ::std::string& value) {
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.room_lua_cfg)
}
#if LANG_CXX11
inline void GameClientRoomListCfg::set_room_lua_cfg(::std::string&& value) {
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameClientRoomListCfg.room_lua_cfg)
}
#endif
inline void GameClientRoomListCfg::set_room_lua_cfg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameClientRoomListCfg.room_lua_cfg)
}
inline void GameClientRoomListCfg::set_room_lua_cfg(const char* value, size_t size) {
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameClientRoomListCfg.room_lua_cfg)
}
inline ::std::string* GameClientRoomListCfg::mutable_room_lua_cfg() {
  set_has_room_lua_cfg();
  // @@protoc_insertion_point(field_mutable:GameClientRoomListCfg.room_lua_cfg)
  return room_lua_cfg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameClientRoomListCfg::release_room_lua_cfg() {
  // @@protoc_insertion_point(field_release:GameClientRoomListCfg.room_lua_cfg)
  clear_has_room_lua_cfg();
  return room_lua_cfg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameClientRoomListCfg::set_allocated_room_lua_cfg(::std::string* room_lua_cfg) {
  if (room_lua_cfg != NULL) {
    set_has_room_lua_cfg();
  } else {
    clear_has_room_lua_cfg();
  }
  room_lua_cfg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_lua_cfg);
  // @@protoc_insertion_point(field_set_allocated:GameClientRoomListCfg.room_lua_cfg)
}

// -------------------------------------------------------------------

// PlayerBaseInfo

// optional int64 bank = 1 [default = 0];
inline bool PlayerBaseInfo::has_bank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerBaseInfo::set_has_bank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerBaseInfo::clear_has_bank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerBaseInfo::clear_bank() {
  bank_ = GOOGLE_LONGLONG(0);
  clear_has_bank();
}
inline ::google::protobuf::int64 PlayerBaseInfo::bank() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.bank)
  return bank_;
}
inline void PlayerBaseInfo::set_bank(::google::protobuf::int64 value) {
  set_has_bank();
  bank_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.bank)
}

// optional int32 login_award_day = 2;
inline bool PlayerBaseInfo::has_login_award_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerBaseInfo::set_has_login_award_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerBaseInfo::clear_has_login_award_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerBaseInfo::clear_login_award_day() {
  login_award_day_ = 0;
  clear_has_login_award_day();
}
inline ::google::protobuf::int32 PlayerBaseInfo::login_award_day() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.login_award_day)
  return login_award_day_;
}
inline void PlayerBaseInfo::set_login_award_day(::google::protobuf::int32 value) {
  set_has_login_award_day();
  login_award_day_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.login_award_day)
}

// optional int32 login_award_receive_day = 3;
inline bool PlayerBaseInfo::has_login_award_receive_day() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerBaseInfo::set_has_login_award_receive_day() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerBaseInfo::clear_has_login_award_receive_day() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerBaseInfo::clear_login_award_receive_day() {
  login_award_receive_day_ = 0;
  clear_has_login_award_receive_day();
}
inline ::google::protobuf::int32 PlayerBaseInfo::login_award_receive_day() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.login_award_receive_day)
  return login_award_receive_day_;
}
inline void PlayerBaseInfo::set_login_award_receive_day(::google::protobuf::int32 value) {
  set_has_login_award_receive_day();
  login_award_receive_day_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.login_award_receive_day)
}

// optional int32 online_award_time = 4;
inline bool PlayerBaseInfo::has_online_award_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerBaseInfo::set_has_online_award_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerBaseInfo::clear_has_online_award_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerBaseInfo::clear_online_award_time() {
  online_award_time_ = 0;
  clear_has_online_award_time();
}
inline ::google::protobuf::int32 PlayerBaseInfo::online_award_time() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.online_award_time)
  return online_award_time_;
}
inline void PlayerBaseInfo::set_online_award_time(::google::protobuf::int32 value) {
  set_has_online_award_time();
  online_award_time_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.online_award_time)
}

// optional int32 online_award_num = 5;
inline bool PlayerBaseInfo::has_online_award_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerBaseInfo::set_has_online_award_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerBaseInfo::clear_has_online_award_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerBaseInfo::clear_online_award_num() {
  online_award_num_ = 0;
  clear_has_online_award_num();
}
inline ::google::protobuf::int32 PlayerBaseInfo::online_award_num() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.online_award_num)
  return online_award_num_;
}
inline void PlayerBaseInfo::set_online_award_num(::google::protobuf::int32 value) {
  set_has_online_award_num();
  online_award_num_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.online_award_num)
}

// optional int32 relief_payment_count = 6;
inline bool PlayerBaseInfo::has_relief_payment_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerBaseInfo::set_has_relief_payment_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerBaseInfo::clear_has_relief_payment_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerBaseInfo::clear_relief_payment_count() {
  relief_payment_count_ = 0;
  clear_has_relief_payment_count();
}
inline ::google::protobuf::int32 PlayerBaseInfo::relief_payment_count() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.relief_payment_count)
  return relief_payment_count_;
}
inline void PlayerBaseInfo::set_relief_payment_count(::google::protobuf::int32 value) {
  set_has_relief_payment_count();
  relief_payment_count_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.relief_payment_count)
}

// optional int32 level = 7 [default = 1];
inline bool PlayerBaseInfo::has_level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PlayerBaseInfo::set_has_level() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PlayerBaseInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PlayerBaseInfo::clear_level() {
  level_ = 1;
  clear_has_level();
}
inline ::google::protobuf::int32 PlayerBaseInfo::level() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.level)
  return level_;
}
inline void PlayerBaseInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.level)
}

// optional int64 money = 8 [default = 0];
inline bool PlayerBaseInfo::has_money() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerBaseInfo::set_has_money() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerBaseInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerBaseInfo::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 PlayerBaseInfo::money() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.money)
  return money_;
}
inline void PlayerBaseInfo::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.money)
}

// optional int32 header_icon = 9 [default = 0];
inline bool PlayerBaseInfo::has_header_icon() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerBaseInfo::set_has_header_icon() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerBaseInfo::clear_has_header_icon() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerBaseInfo::clear_header_icon() {
  header_icon_ = 0;
  clear_has_header_icon();
}
inline ::google::protobuf::int32 PlayerBaseInfo::header_icon() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.header_icon)
  return header_icon_;
}
inline void PlayerBaseInfo::set_header_icon(::google::protobuf::int32 value) {
  set_has_header_icon();
  header_icon_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.header_icon)
}

// optional int32 slotma_addition = 10 [default = 0];
inline bool PlayerBaseInfo::has_slotma_addition() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlayerBaseInfo::set_has_slotma_addition() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlayerBaseInfo::clear_has_slotma_addition() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlayerBaseInfo::clear_slotma_addition() {
  slotma_addition_ = 0;
  clear_has_slotma_addition();
}
inline ::google::protobuf::int32 PlayerBaseInfo::slotma_addition() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.slotma_addition)
  return slotma_addition_;
}
inline void PlayerBaseInfo::set_slotma_addition(::google::protobuf::int32 value) {
  set_has_slotma_addition();
  slotma_addition_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.slotma_addition)
}

// optional int32 newplayer_reward = 11 [default = 0];
inline bool PlayerBaseInfo::has_newplayer_reward() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PlayerBaseInfo::set_has_newplayer_reward() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PlayerBaseInfo::clear_has_newplayer_reward() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PlayerBaseInfo::clear_newplayer_reward() {
  newplayer_reward_ = 0;
  clear_has_newplayer_reward();
}
inline ::google::protobuf::int32 PlayerBaseInfo::newplayer_reward() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.newplayer_reward)
  return newplayer_reward_;
}
inline void PlayerBaseInfo::set_newplayer_reward(::google::protobuf::int32 value) {
  set_has_newplayer_reward();
  newplayer_reward_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.newplayer_reward)
}

// -------------------------------------------------------------------

// PlayerVisualInfo

// optional int32 chair_id = 1;
inline bool PlayerVisualInfo::has_chair_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerVisualInfo::set_has_chair_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerVisualInfo::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerVisualInfo::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 PlayerVisualInfo::chair_id() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.chair_id)
  return chair_id_;
}
inline void PlayerVisualInfo::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.chair_id)
}

// optional int32 guid = 2;
inline bool PlayerVisualInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerVisualInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerVisualInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerVisualInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 PlayerVisualInfo::guid() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.guid)
  return guid_;
}
inline void PlayerVisualInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.guid)
}

// optional string account = 3;
inline bool PlayerVisualInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerVisualInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerVisualInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerVisualInfo::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& PlayerVisualInfo::account() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.account)
  return account_.GetNoArena();
}
inline void PlayerVisualInfo::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.account)
}
#if LANG_CXX11
inline void PlayerVisualInfo::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerVisualInfo.account)
}
#endif
inline void PlayerVisualInfo::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerVisualInfo.account)
}
inline void PlayerVisualInfo::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerVisualInfo.account)
}
inline ::std::string* PlayerVisualInfo::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:PlayerVisualInfo.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerVisualInfo::release_account() {
  // @@protoc_insertion_point(field_release:PlayerVisualInfo.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerVisualInfo::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:PlayerVisualInfo.account)
}

// optional string nickname = 4;
inline bool PlayerVisualInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerVisualInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerVisualInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerVisualInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& PlayerVisualInfo::nickname() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.nickname)
  return nickname_.GetNoArena();
}
inline void PlayerVisualInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.nickname)
}
#if LANG_CXX11
inline void PlayerVisualInfo::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerVisualInfo.nickname)
}
#endif
inline void PlayerVisualInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerVisualInfo.nickname)
}
inline void PlayerVisualInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerVisualInfo.nickname)
}
inline ::std::string* PlayerVisualInfo::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:PlayerVisualInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerVisualInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:PlayerVisualInfo.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerVisualInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:PlayerVisualInfo.nickname)
}

// optional int32 level = 5 [default = 1];
inline bool PlayerVisualInfo::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerVisualInfo::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerVisualInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerVisualInfo::clear_level() {
  level_ = 1;
  clear_has_level();
}
inline ::google::protobuf::int32 PlayerVisualInfo::level() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.level)
  return level_;
}
inline void PlayerVisualInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.level)
}

// optional int64 money = 6 [default = 0];
inline bool PlayerVisualInfo::has_money() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerVisualInfo::set_has_money() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerVisualInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerVisualInfo::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 PlayerVisualInfo::money() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.money)
  return money_;
}
inline void PlayerVisualInfo::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.money)
}

// optional int32 header_icon = 7 [default = -1];
inline bool PlayerVisualInfo::has_header_icon() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlayerVisualInfo::set_has_header_icon() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlayerVisualInfo::clear_has_header_icon() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlayerVisualInfo::clear_header_icon() {
  header_icon_ = -1;
  clear_has_header_icon();
}
inline ::google::protobuf::int32 PlayerVisualInfo::header_icon() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.header_icon)
  return header_icon_;
}
inline void PlayerVisualInfo::set_header_icon(::google::protobuf::int32 value) {
  set_has_header_icon();
  header_icon_ = value;
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.header_icon)
}

// optional string ip_area = 8;
inline bool PlayerVisualInfo::has_ip_area() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerVisualInfo::set_has_ip_area() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerVisualInfo::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerVisualInfo::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
inline const ::std::string& PlayerVisualInfo::ip_area() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.ip_area)
  return ip_area_.GetNoArena();
}
inline void PlayerVisualInfo::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.ip_area)
}
#if LANG_CXX11
inline void PlayerVisualInfo::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerVisualInfo.ip_area)
}
#endif
inline void PlayerVisualInfo::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerVisualInfo.ip_area)
}
inline void PlayerVisualInfo::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerVisualInfo.ip_area)
}
inline ::std::string* PlayerVisualInfo::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:PlayerVisualInfo.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerVisualInfo::release_ip_area() {
  // @@protoc_insertion_point(field_release:PlayerVisualInfo.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerVisualInfo::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:PlayerVisualInfo.ip_area)
}

// optional bool is_ready = 9;
inline bool PlayerVisualInfo::has_is_ready() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerVisualInfo::set_has_is_ready() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerVisualInfo::clear_has_is_ready() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerVisualInfo::clear_is_ready() {
  is_ready_ = false;
  clear_has_is_ready();
}
inline bool PlayerVisualInfo::is_ready() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.is_ready)
  return is_ready_;
}
inline void PlayerVisualInfo::set_is_ready(bool value) {
  set_has_is_ready();
  is_ready_ = value;
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.is_ready)
}

// -------------------------------------------------------------------

// ItemInfo

// optional int32 item_id = 1;
inline bool ItemInfo::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemInfo::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemInfo::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemInfo::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
inline ::google::protobuf::int32 ItemInfo::item_id() const {
  // @@protoc_insertion_point(field_get:ItemInfo.item_id)
  return item_id_;
}
inline void ItemInfo::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.item_id)
}

// optional int32 item_num = 2;
inline bool ItemInfo::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemInfo::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemInfo::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemInfo::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
inline ::google::protobuf::int32 ItemInfo::item_num() const {
  // @@protoc_insertion_point(field_get:ItemInfo.item_num)
  return item_num_;
}
inline void ItemInfo::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.item_num)
}

// -------------------------------------------------------------------

// Msg_DataInfo

// optional int32 id = 1;
inline bool Msg_DataInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg_DataInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg_DataInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg_DataInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Msg_DataInfo::id() const {
  // @@protoc_insertion_point(field_get:Msg_DataInfo.id)
  return id_;
}
inline void Msg_DataInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Msg_DataInfo.id)
}

// optional int32 start_time = 2;
inline bool Msg_DataInfo::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg_DataInfo::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg_DataInfo::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg_DataInfo::clear_start_time() {
  start_time_ = 0;
  clear_has_start_time();
}
inline ::google::protobuf::int32 Msg_DataInfo::start_time() const {
  // @@protoc_insertion_point(field_get:Msg_DataInfo.start_time)
  return start_time_;
}
inline void Msg_DataInfo::set_start_time(::google::protobuf::int32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:Msg_DataInfo.start_time)
}

// optional int32 end_time = 3;
inline bool Msg_DataInfo::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Msg_DataInfo::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Msg_DataInfo::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Msg_DataInfo::clear_end_time() {
  end_time_ = 0;
  clear_has_end_time();
}
inline ::google::protobuf::int32 Msg_DataInfo::end_time() const {
  // @@protoc_insertion_point(field_get:Msg_DataInfo.end_time)
  return end_time_;
}
inline void Msg_DataInfo::set_end_time(::google::protobuf::int32 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:Msg_DataInfo.end_time)
}

// optional int32 msg_type = 4;
inline bool Msg_DataInfo::has_msg_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Msg_DataInfo::set_has_msg_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Msg_DataInfo::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Msg_DataInfo::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::google::protobuf::int32 Msg_DataInfo::msg_type() const {
  // @@protoc_insertion_point(field_get:Msg_DataInfo.msg_type)
  return msg_type_;
}
inline void Msg_DataInfo::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:Msg_DataInfo.msg_type)
}

// optional int32 is_read = 5;
inline bool Msg_DataInfo::has_is_read() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Msg_DataInfo::set_has_is_read() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Msg_DataInfo::clear_has_is_read() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Msg_DataInfo::clear_is_read() {
  is_read_ = 0;
  clear_has_is_read();
}
inline ::google::protobuf::int32 Msg_DataInfo::is_read() const {
  // @@protoc_insertion_point(field_get:Msg_DataInfo.is_read)
  return is_read_;
}
inline void Msg_DataInfo::set_is_read(::google::protobuf::int32 value) {
  set_has_is_read();
  is_read_ = value;
  // @@protoc_insertion_point(field_set:Msg_DataInfo.is_read)
}

// optional string content = 6;
inline bool Msg_DataInfo::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_DataInfo::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_DataInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_DataInfo::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& Msg_DataInfo::content() const {
  // @@protoc_insertion_point(field_get:Msg_DataInfo.content)
  return content_.GetNoArena();
}
inline void Msg_DataInfo::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Msg_DataInfo.content)
}
#if LANG_CXX11
inline void Msg_DataInfo::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Msg_DataInfo.content)
}
#endif
inline void Msg_DataInfo::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Msg_DataInfo.content)
}
inline void Msg_DataInfo::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Msg_DataInfo.content)
}
inline ::std::string* Msg_DataInfo::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:Msg_DataInfo.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Msg_DataInfo::release_content() {
  // @@protoc_insertion_point(field_release:Msg_DataInfo.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Msg_DataInfo::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:Msg_DataInfo.content)
}

// -------------------------------------------------------------------

// ItemBagInfo

// repeated .ItemInfo pb_items = 1;
inline int ItemBagInfo::pb_items_size() const {
  return pb_items_.size();
}
inline void ItemBagInfo::clear_pb_items() {
  pb_items_.Clear();
}
inline const ::ItemInfo& ItemBagInfo::pb_items(int index) const {
  // @@protoc_insertion_point(field_get:ItemBagInfo.pb_items)
  return pb_items_.Get(index);
}
inline ::ItemInfo* ItemBagInfo::mutable_pb_items(int index) {
  // @@protoc_insertion_point(field_mutable:ItemBagInfo.pb_items)
  return pb_items_.Mutable(index);
}
inline ::ItemInfo* ItemBagInfo::add_pb_items() {
  // @@protoc_insertion_point(field_add:ItemBagInfo.pb_items)
  return pb_items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
ItemBagInfo::mutable_pb_items() {
  // @@protoc_insertion_point(field_mutable_list:ItemBagInfo.pb_items)
  return &pb_items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
ItemBagInfo::pb_items() const {
  // @@protoc_insertion_point(field_list:ItemBagInfo.pb_items)
  return pb_items_;
}

// -------------------------------------------------------------------

// MailInfo

// optional string mail_id = 1;
inline bool MailInfo::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailInfo::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailInfo::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailInfo::clear_mail_id() {
  mail_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mail_id();
}
inline const ::std::string& MailInfo::mail_id() const {
  // @@protoc_insertion_point(field_get:MailInfo.mail_id)
  return mail_id_.GetNoArena();
}
inline void MailInfo::set_mail_id(const ::std::string& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MailInfo.mail_id)
}
#if LANG_CXX11
inline void MailInfo::set_mail_id(::std::string&& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MailInfo.mail_id)
}
#endif
inline void MailInfo::set_mail_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MailInfo.mail_id)
}
inline void MailInfo::set_mail_id(const char* value, size_t size) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MailInfo.mail_id)
}
inline ::std::string* MailInfo::mutable_mail_id() {
  set_has_mail_id();
  // @@protoc_insertion_point(field_mutable:MailInfo.mail_id)
  return mail_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailInfo::release_mail_id() {
  // @@protoc_insertion_point(field_release:MailInfo.mail_id)
  clear_has_mail_id();
  return mail_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailInfo::set_allocated_mail_id(::std::string* mail_id) {
  if (mail_id != NULL) {
    set_has_mail_id();
  } else {
    clear_has_mail_id();
  }
  mail_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_id);
  // @@protoc_insertion_point(field_set_allocated:MailInfo.mail_id)
}

// optional int32 expiration_time = 2;
inline bool MailInfo::has_expiration_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailInfo::set_has_expiration_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailInfo::clear_has_expiration_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailInfo::clear_expiration_time() {
  expiration_time_ = 0;
  clear_has_expiration_time();
}
inline ::google::protobuf::int32 MailInfo::expiration_time() const {
  // @@protoc_insertion_point(field_get:MailInfo.expiration_time)
  return expiration_time_;
}
inline void MailInfo::set_expiration_time(::google::protobuf::int32 value) {
  set_has_expiration_time();
  expiration_time_ = value;
  // @@protoc_insertion_point(field_set:MailInfo.expiration_time)
}

// optional int32 guid = 3;
inline bool MailInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 MailInfo::guid() const {
  // @@protoc_insertion_point(field_get:MailInfo.guid)
  return guid_;
}
inline void MailInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:MailInfo.guid)
}

// optional int32 send_guid = 4;
inline bool MailInfo::has_send_guid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailInfo::set_has_send_guid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailInfo::clear_has_send_guid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailInfo::clear_send_guid() {
  send_guid_ = 0;
  clear_has_send_guid();
}
inline ::google::protobuf::int32 MailInfo::send_guid() const {
  // @@protoc_insertion_point(field_get:MailInfo.send_guid)
  return send_guid_;
}
inline void MailInfo::set_send_guid(::google::protobuf::int32 value) {
  set_has_send_guid();
  send_guid_ = value;
  // @@protoc_insertion_point(field_set:MailInfo.send_guid)
}

// optional string send_name = 5;
inline bool MailInfo::has_send_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailInfo::set_has_send_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailInfo::clear_has_send_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailInfo::clear_send_name() {
  send_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_send_name();
}
inline const ::std::string& MailInfo::send_name() const {
  // @@protoc_insertion_point(field_get:MailInfo.send_name)
  return send_name_.GetNoArena();
}
inline void MailInfo::set_send_name(const ::std::string& value) {
  set_has_send_name();
  send_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MailInfo.send_name)
}
#if LANG_CXX11
inline void MailInfo::set_send_name(::std::string&& value) {
  set_has_send_name();
  send_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MailInfo.send_name)
}
#endif
inline void MailInfo::set_send_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_send_name();
  send_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MailInfo.send_name)
}
inline void MailInfo::set_send_name(const char* value, size_t size) {
  set_has_send_name();
  send_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MailInfo.send_name)
}
inline ::std::string* MailInfo::mutable_send_name() {
  set_has_send_name();
  // @@protoc_insertion_point(field_mutable:MailInfo.send_name)
  return send_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailInfo::release_send_name() {
  // @@protoc_insertion_point(field_release:MailInfo.send_name)
  clear_has_send_name();
  return send_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailInfo::set_allocated_send_name(::std::string* send_name) {
  if (send_name != NULL) {
    set_has_send_name();
  } else {
    clear_has_send_name();
  }
  send_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), send_name);
  // @@protoc_insertion_point(field_set_allocated:MailInfo.send_name)
}

// optional string title = 6;
inline bool MailInfo::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailInfo::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailInfo::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& MailInfo::title() const {
  // @@protoc_insertion_point(field_get:MailInfo.title)
  return title_.GetNoArena();
}
inline void MailInfo::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MailInfo.title)
}
#if LANG_CXX11
inline void MailInfo::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MailInfo.title)
}
#endif
inline void MailInfo::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MailInfo.title)
}
inline void MailInfo::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MailInfo.title)
}
inline ::std::string* MailInfo::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:MailInfo.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailInfo::release_title() {
  // @@protoc_insertion_point(field_release:MailInfo.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailInfo::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:MailInfo.title)
}

// optional string content = 7;
inline bool MailInfo::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailInfo::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailInfo::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& MailInfo::content() const {
  // @@protoc_insertion_point(field_get:MailInfo.content)
  return content_.GetNoArena();
}
inline void MailInfo::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MailInfo.content)
}
#if LANG_CXX11
inline void MailInfo::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MailInfo.content)
}
#endif
inline void MailInfo::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MailInfo.content)
}
inline void MailInfo::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MailInfo.content)
}
inline ::std::string* MailInfo::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:MailInfo.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailInfo::release_content() {
  // @@protoc_insertion_point(field_release:MailInfo.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailInfo::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:MailInfo.content)
}

// repeated .ItemInfo pb_attachment = 8;
inline int MailInfo::pb_attachment_size() const {
  return pb_attachment_.size();
}
inline void MailInfo::clear_pb_attachment() {
  pb_attachment_.Clear();
}
inline const ::ItemInfo& MailInfo::pb_attachment(int index) const {
  // @@protoc_insertion_point(field_get:MailInfo.pb_attachment)
  return pb_attachment_.Get(index);
}
inline ::ItemInfo* MailInfo::mutable_pb_attachment(int index) {
  // @@protoc_insertion_point(field_mutable:MailInfo.pb_attachment)
  return pb_attachment_.Mutable(index);
}
inline ::ItemInfo* MailInfo::add_pb_attachment() {
  // @@protoc_insertion_point(field_add:MailInfo.pb_attachment)
  return pb_attachment_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
MailInfo::mutable_pb_attachment() {
  // @@protoc_insertion_point(field_mutable_list:MailInfo.pb_attachment)
  return &pb_attachment_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
MailInfo::pb_attachment() const {
  // @@protoc_insertion_point(field_list:MailInfo.pb_attachment)
  return pb_attachment_;
}

// -------------------------------------------------------------------

// MailListInfo

// repeated .MailInfo pb_mails = 1;
inline int MailListInfo::pb_mails_size() const {
  return pb_mails_.size();
}
inline void MailListInfo::clear_pb_mails() {
  pb_mails_.Clear();
}
inline const ::MailInfo& MailListInfo::pb_mails(int index) const {
  // @@protoc_insertion_point(field_get:MailListInfo.pb_mails)
  return pb_mails_.Get(index);
}
inline ::MailInfo* MailListInfo::mutable_pb_mails(int index) {
  // @@protoc_insertion_point(field_mutable:MailListInfo.pb_mails)
  return pb_mails_.Mutable(index);
}
inline ::MailInfo* MailListInfo::add_pb_mails() {
  // @@protoc_insertion_point(field_add:MailListInfo.pb_mails)
  return pb_mails_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MailInfo >*
MailListInfo::mutable_pb_mails() {
  // @@protoc_insertion_point(field_mutable_list:MailListInfo.pb_mails)
  return &pb_mails_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MailInfo >&
MailListInfo::pb_mails() const {
  // @@protoc_insertion_point(field_list:MailListInfo.pb_mails)
  return pb_mails_;
}

// -------------------------------------------------------------------

// BankStatement

// optional int64 serial = 1;
inline bool BankStatement::has_serial() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BankStatement::set_has_serial() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BankStatement::clear_has_serial() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BankStatement::clear_serial() {
  serial_ = GOOGLE_LONGLONG(0);
  clear_has_serial();
}
inline ::google::protobuf::int64 BankStatement::serial() const {
  // @@protoc_insertion_point(field_get:BankStatement.serial)
  return serial_;
}
inline void BankStatement::set_serial(::google::protobuf::int64 value) {
  set_has_serial();
  serial_ = value;
  // @@protoc_insertion_point(field_set:BankStatement.serial)
}

// optional int32 guid = 2;
inline bool BankStatement::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BankStatement::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BankStatement::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BankStatement::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 BankStatement::guid() const {
  // @@protoc_insertion_point(field_get:BankStatement.guid)
  return guid_;
}
inline void BankStatement::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:BankStatement.guid)
}

// optional int32 time = 3;
inline bool BankStatement::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BankStatement::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BankStatement::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BankStatement::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 BankStatement::time() const {
  // @@protoc_insertion_point(field_get:BankStatement.time)
  return time_;
}
inline void BankStatement::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:BankStatement.time)
}

// optional int32 opt = 4;
inline bool BankStatement::has_opt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BankStatement::set_has_opt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BankStatement::clear_has_opt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BankStatement::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
inline ::google::protobuf::int32 BankStatement::opt() const {
  // @@protoc_insertion_point(field_get:BankStatement.opt)
  return opt_;
}
inline void BankStatement::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
  // @@protoc_insertion_point(field_set:BankStatement.opt)
}

// optional string target = 5;
inline bool BankStatement::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BankStatement::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BankStatement::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BankStatement::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target();
}
inline const ::std::string& BankStatement::target() const {
  // @@protoc_insertion_point(field_get:BankStatement.target)
  return target_.GetNoArena();
}
inline void BankStatement::set_target(const ::std::string& value) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankStatement.target)
}
#if LANG_CXX11
inline void BankStatement::set_target(::std::string&& value) {
  set_has_target();
  target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankStatement.target)
}
#endif
inline void BankStatement::set_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankStatement.target)
}
inline void BankStatement::set_target(const char* value, size_t size) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankStatement.target)
}
inline ::std::string* BankStatement::mutable_target() {
  set_has_target();
  // @@protoc_insertion_point(field_mutable:BankStatement.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BankStatement::release_target() {
  // @@protoc_insertion_point(field_release:BankStatement.target)
  clear_has_target();
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BankStatement::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    set_has_target();
  } else {
    clear_has_target();
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:BankStatement.target)
}

// optional int64 money = 6;
inline bool BankStatement::has_money() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BankStatement::set_has_money() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BankStatement::clear_has_money() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BankStatement::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 BankStatement::money() const {
  // @@protoc_insertion_point(field_get:BankStatement.money)
  return money_;
}
inline void BankStatement::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:BankStatement.money)
}

// optional int64 bank_balance = 7;
inline bool BankStatement::has_bank_balance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BankStatement::set_has_bank_balance() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BankStatement::clear_has_bank_balance() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BankStatement::clear_bank_balance() {
  bank_balance_ = GOOGLE_LONGLONG(0);
  clear_has_bank_balance();
}
inline ::google::protobuf::int64 BankStatement::bank_balance() const {
  // @@protoc_insertion_point(field_get:BankStatement.bank_balance)
  return bank_balance_;
}
inline void BankStatement::set_bank_balance(::google::protobuf::int64 value) {
  set_has_bank_balance();
  bank_balance_ = value;
  // @@protoc_insertion_point(field_set:BankStatement.bank_balance)
}

// -------------------------------------------------------------------

// RankItem

// optional int32 rank = 1;
inline bool RankItem::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankItem::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankItem::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankItem::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 RankItem::rank() const {
  // @@protoc_insertion_point(field_get:RankItem.rank)
  return rank_;
}
inline void RankItem::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:RankItem.rank)
}

// optional int32 guid = 2;
inline bool RankItem::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankItem::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankItem::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankItem::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 RankItem::guid() const {
  // @@protoc_insertion_point(field_get:RankItem.guid)
  return guid_;
}
inline void RankItem::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:RankItem.guid)
}

// optional string nickname = 3;
inline bool RankItem::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankItem::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankItem::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankItem::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& RankItem::nickname() const {
  // @@protoc_insertion_point(field_get:RankItem.nickname)
  return nickname_.GetNoArena();
}
inline void RankItem::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RankItem.nickname)
}
#if LANG_CXX11
inline void RankItem::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RankItem.nickname)
}
#endif
inline void RankItem::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RankItem.nickname)
}
inline void RankItem::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RankItem.nickname)
}
inline ::std::string* RankItem::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:RankItem.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RankItem::release_nickname() {
  // @@protoc_insertion_point(field_release:RankItem.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RankItem::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:RankItem.nickname)
}

// optional int64 money = 4;
inline bool RankItem::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RankItem::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RankItem::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RankItem::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 RankItem::money() const {
  // @@protoc_insertion_point(field_get:RankItem.money)
  return money_;
}
inline void RankItem::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:RankItem.money)
}

// -------------------------------------------------------------------

// RankList

// repeated .RankItem pb_rank_list = 1;
inline int RankList::pb_rank_list_size() const {
  return pb_rank_list_.size();
}
inline void RankList::clear_pb_rank_list() {
  pb_rank_list_.Clear();
}
inline const ::RankItem& RankList::pb_rank_list(int index) const {
  // @@protoc_insertion_point(field_get:RankList.pb_rank_list)
  return pb_rank_list_.Get(index);
}
inline ::RankItem* RankList::mutable_pb_rank_list(int index) {
  // @@protoc_insertion_point(field_mutable:RankList.pb_rank_list)
  return pb_rank_list_.Mutable(index);
}
inline ::RankItem* RankList::add_pb_rank_list() {
  // @@protoc_insertion_point(field_add:RankList.pb_rank_list)
  return pb_rank_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RankItem >*
RankList::mutable_pb_rank_list() {
  // @@protoc_insertion_point(field_mutable_list:RankList.pb_rank_list)
  return &pb_rank_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RankItem >&
RankList::pb_rank_list() const {
  // @@protoc_insertion_point(field_list:RankList.pb_rank_list)
  return pb_rank_list_;
}

// -------------------------------------------------------------------

// AndroidInfo

// optional int32 guid = 1;
inline bool AndroidInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AndroidInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AndroidInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AndroidInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 AndroidInfo::guid() const {
  // @@protoc_insertion_point(field_get:AndroidInfo.guid)
  return guid_;
}
inline void AndroidInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:AndroidInfo.guid)
}

// optional string account = 2;
inline bool AndroidInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AndroidInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AndroidInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AndroidInfo::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& AndroidInfo::account() const {
  // @@protoc_insertion_point(field_get:AndroidInfo.account)
  return account_.GetNoArena();
}
inline void AndroidInfo::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AndroidInfo.account)
}
#if LANG_CXX11
inline void AndroidInfo::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AndroidInfo.account)
}
#endif
inline void AndroidInfo::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AndroidInfo.account)
}
inline void AndroidInfo::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AndroidInfo.account)
}
inline ::std::string* AndroidInfo::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:AndroidInfo.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AndroidInfo::release_account() {
  // @@protoc_insertion_point(field_release:AndroidInfo.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AndroidInfo::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:AndroidInfo.account)
}

// optional string nickname = 3;
inline bool AndroidInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AndroidInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AndroidInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AndroidInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& AndroidInfo::nickname() const {
  // @@protoc_insertion_point(field_get:AndroidInfo.nickname)
  return nickname_.GetNoArena();
}
inline void AndroidInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AndroidInfo.nickname)
}
#if LANG_CXX11
inline void AndroidInfo::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AndroidInfo.nickname)
}
#endif
inline void AndroidInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AndroidInfo.nickname)
}
inline void AndroidInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AndroidInfo.nickname)
}
inline ::std::string* AndroidInfo::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:AndroidInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AndroidInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:AndroidInfo.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AndroidInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:AndroidInfo.nickname)
}

// optional int32 game_id = 4;
inline bool AndroidInfo::has_game_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AndroidInfo::set_has_game_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AndroidInfo::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AndroidInfo::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 AndroidInfo::game_id() const {
  // @@protoc_insertion_point(field_get:AndroidInfo.game_id)
  return game_id_;
}
inline void AndroidInfo::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:AndroidInfo.game_id)
}

// optional int64 money = 5;
inline bool AndroidInfo::has_money() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AndroidInfo::set_has_money() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AndroidInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AndroidInfo::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 AndroidInfo::money() const {
  // @@protoc_insertion_point(field_get:AndroidInfo.money)
  return money_;
}
inline void AndroidInfo::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:AndroidInfo.money)
}

// -------------------------------------------------------------------

// CashFalse

// optional int32 guid = 1;
inline bool CashFalse::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CashFalse::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CashFalse::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CashFalse::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 CashFalse::guid() const {
  // @@protoc_insertion_point(field_get:CashFalse.guid)
  return guid_;
}
inline void CashFalse::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:CashFalse.guid)
}

// optional int32 order_id = 2;
inline bool CashFalse::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CashFalse::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CashFalse::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CashFalse::clear_order_id() {
  order_id_ = 0;
  clear_has_order_id();
}
inline ::google::protobuf::int32 CashFalse::order_id() const {
  // @@protoc_insertion_point(field_get:CashFalse.order_id)
  return order_id_;
}
inline void CashFalse::set_order_id(::google::protobuf::int32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:CashFalse.order_id)
}

// optional int64 coins = 3;
inline bool CashFalse::has_coins() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CashFalse::set_has_coins() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CashFalse::clear_has_coins() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CashFalse::clear_coins() {
  coins_ = GOOGLE_LONGLONG(0);
  clear_has_coins();
}
inline ::google::protobuf::int64 CashFalse::coins() const {
  // @@protoc_insertion_point(field_get:CashFalse.coins)
  return coins_;
}
inline void CashFalse::set_coins(::google::protobuf::int64 value) {
  set_has_coins();
  coins_ = value;
  // @@protoc_insertion_point(field_set:CashFalse.coins)
}

// optional int32 status = 4;
inline bool CashFalse::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CashFalse::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CashFalse::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CashFalse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 CashFalse::status() const {
  // @@protoc_insertion_point(field_get:CashFalse.status)
  return status_;
}
inline void CashFalse::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CashFalse.status)
}

// optional int32 status_c = 5;
inline bool CashFalse::has_status_c() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CashFalse::set_has_status_c() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CashFalse::clear_has_status_c() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CashFalse::clear_status_c() {
  status_c_ = 0;
  clear_has_status_c();
}
inline ::google::protobuf::int32 CashFalse::status_c() const {
  // @@protoc_insertion_point(field_get:CashFalse.status_c)
  return status_c_;
}
inline void CashFalse::set_status_c(::google::protobuf::int32 value) {
  set_has_status_c();
  status_c_ = value;
  // @@protoc_insertion_point(field_set:CashFalse.status_c)
}

// -------------------------------------------------------------------

// CashMoneyType

// optional int32 money = 1;
inline bool CashMoneyType::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CashMoneyType::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CashMoneyType::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CashMoneyType::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 CashMoneyType::money() const {
  // @@protoc_insertion_point(field_get:CashMoneyType.money)
  return money_;
}
inline void CashMoneyType::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CashMoneyType.money)
}

// optional string created_at = 2;
inline bool CashMoneyType::has_created_at() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CashMoneyType::set_has_created_at() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CashMoneyType::clear_has_created_at() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CashMoneyType::clear_created_at() {
  created_at_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_created_at();
}
inline const ::std::string& CashMoneyType::created_at() const {
  // @@protoc_insertion_point(field_get:CashMoneyType.created_at)
  return created_at_.GetNoArena();
}
inline void CashMoneyType::set_created_at(const ::std::string& value) {
  set_has_created_at();
  created_at_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CashMoneyType.created_at)
}
#if LANG_CXX11
inline void CashMoneyType::set_created_at(::std::string&& value) {
  set_has_created_at();
  created_at_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CashMoneyType.created_at)
}
#endif
inline void CashMoneyType::set_created_at(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_created_at();
  created_at_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CashMoneyType.created_at)
}
inline void CashMoneyType::set_created_at(const char* value, size_t size) {
  set_has_created_at();
  created_at_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CashMoneyType.created_at)
}
inline ::std::string* CashMoneyType::mutable_created_at() {
  set_has_created_at();
  // @@protoc_insertion_point(field_mutable:CashMoneyType.created_at)
  return created_at_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CashMoneyType::release_created_at() {
  // @@protoc_insertion_point(field_release:CashMoneyType.created_at)
  clear_has_created_at();
  return created_at_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CashMoneyType::set_allocated_created_at(::std::string* created_at) {
  if (created_at != NULL) {
    set_has_created_at();
  } else {
    clear_has_created_at();
  }
  created_at_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), created_at);
  // @@protoc_insertion_point(field_set_allocated:CashMoneyType.created_at)
}

// optional int32 status = 3;
inline bool CashMoneyType::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CashMoneyType::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CashMoneyType::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CashMoneyType::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 CashMoneyType::status() const {
  // @@protoc_insertion_point(field_get:CashMoneyType.status)
  return status_;
}
inline void CashMoneyType::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CashMoneyType.status)
}

// -------------------------------------------------------------------

// PlayerMoney

// optional int64 money = 1;
inline bool PlayerMoney::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerMoney::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerMoney::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 PlayerMoney::money() const {
  // @@protoc_insertion_point(field_get:PlayerMoney.money)
  return money_;
}
inline void PlayerMoney::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:PlayerMoney.money)
}

// optional int64 bank = 2;
inline bool PlayerMoney::has_bank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerMoney::set_has_bank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerMoney::clear_has_bank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerMoney::clear_bank() {
  bank_ = GOOGLE_LONGLONG(0);
  clear_has_bank();
}
inline ::google::protobuf::int64 PlayerMoney::bank() const {
  // @@protoc_insertion_point(field_get:PlayerMoney.bank)
  return bank_;
}
inline void PlayerMoney::set_bank(::google::protobuf::int64 value) {
  set_has_bank();
  bank_ = value;
  // @@protoc_insertion_point(field_set:PlayerMoney.bank)
}

// -------------------------------------------------------------------

// Recharge

// optional int32 guid = 1;
inline bool Recharge::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Recharge::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Recharge::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Recharge::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 Recharge::guid() const {
  // @@protoc_insertion_point(field_get:Recharge.guid)
  return guid_;
}
inline void Recharge::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Recharge.guid)
}

// optional int32 id = 2;
inline bool Recharge::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Recharge::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Recharge::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Recharge::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Recharge::id() const {
  // @@protoc_insertion_point(field_get:Recharge.id)
  return id_;
}
inline void Recharge::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Recharge.id)
}

// optional int64 exchange_gold = 3;
inline bool Recharge::has_exchange_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Recharge::set_has_exchange_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Recharge::clear_has_exchange_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Recharge::clear_exchange_gold() {
  exchange_gold_ = GOOGLE_LONGLONG(0);
  clear_has_exchange_gold();
}
inline ::google::protobuf::int64 Recharge::exchange_gold() const {
  // @@protoc_insertion_point(field_get:Recharge.exchange_gold)
  return exchange_gold_;
}
inline void Recharge::set_exchange_gold(::google::protobuf::int64 value) {
  set_has_exchange_gold();
  exchange_gold_ = value;
  // @@protoc_insertion_point(field_set:Recharge.exchange_gold)
}

// optional int32 pay_status = 4;
inline bool Recharge::has_pay_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Recharge::set_has_pay_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Recharge::clear_has_pay_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Recharge::clear_pay_status() {
  pay_status_ = 0;
  clear_has_pay_status();
}
inline ::google::protobuf::int32 Recharge::pay_status() const {
  // @@protoc_insertion_point(field_get:Recharge.pay_status)
  return pay_status_;
}
inline void Recharge::set_pay_status(::google::protobuf::int32 value) {
  set_has_pay_status();
  pay_status_ = value;
  // @@protoc_insertion_point(field_set:Recharge.pay_status)
}

// optional int32 server_status = 5;
inline bool Recharge::has_server_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Recharge::set_has_server_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Recharge::clear_has_server_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Recharge::clear_server_status() {
  server_status_ = 0;
  clear_has_server_status();
}
inline ::google::protobuf::int32 Recharge::server_status() const {
  // @@protoc_insertion_point(field_get:Recharge.server_status)
  return server_status_;
}
inline void Recharge::set_server_status(::google::protobuf::int32 value) {
  set_has_server_status();
  server_status_ = value;
  // @@protoc_insertion_point(field_set:Recharge.server_status)
}

// -------------------------------------------------------------------

// Marquee

// optional int32 id = 1;
inline bool Marquee::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Marquee::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Marquee::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Marquee::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Marquee::id() const {
  // @@protoc_insertion_point(field_get:Marquee.id)
  return id_;
}
inline void Marquee::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Marquee.id)
}

// optional int32 start_time = 2;
inline bool Marquee::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Marquee::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Marquee::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Marquee::clear_start_time() {
  start_time_ = 0;
  clear_has_start_time();
}
inline ::google::protobuf::int32 Marquee::start_time() const {
  // @@protoc_insertion_point(field_get:Marquee.start_time)
  return start_time_;
}
inline void Marquee::set_start_time(::google::protobuf::int32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:Marquee.start_time)
}

// optional int32 end_time = 3;
inline bool Marquee::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Marquee::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Marquee::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Marquee::clear_end_time() {
  end_time_ = 0;
  clear_has_end_time();
}
inline ::google::protobuf::int32 Marquee::end_time() const {
  // @@protoc_insertion_point(field_get:Marquee.end_time)
  return end_time_;
}
inline void Marquee::set_end_time(::google::protobuf::int32 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:Marquee.end_time)
}

// optional string content = 4;
inline bool Marquee::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Marquee::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Marquee::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Marquee::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& Marquee::content() const {
  // @@protoc_insertion_point(field_get:Marquee.content)
  return content_.GetNoArena();
}
inline void Marquee::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Marquee.content)
}
#if LANG_CXX11
inline void Marquee::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Marquee.content)
}
#endif
inline void Marquee::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Marquee.content)
}
inline void Marquee::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Marquee.content)
}
inline ::std::string* Marquee::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:Marquee.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Marquee::release_content() {
  // @@protoc_insertion_point(field_release:Marquee.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Marquee::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:Marquee.content)
}

// optional int32 number = 5;
inline bool Marquee::has_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Marquee::set_has_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Marquee::clear_has_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Marquee::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 Marquee::number() const {
  // @@protoc_insertion_point(field_get:Marquee.number)
  return number_;
}
inline void Marquee::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:Marquee.number)
}

// optional int32 interval_time = 6;
inline bool Marquee::has_interval_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Marquee::set_has_interval_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Marquee::clear_has_interval_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Marquee::clear_interval_time() {
  interval_time_ = 0;
  clear_has_interval_time();
}
inline ::google::protobuf::int32 Marquee::interval_time() const {
  // @@protoc_insertion_point(field_get:Marquee.interval_time)
  return interval_time_;
}
inline void Marquee::set_interval_time(::google::protobuf::int32 value) {
  set_has_interval_time();
  interval_time_ = value;
  // @@protoc_insertion_point(field_set:Marquee.interval_time)
}

// -------------------------------------------------------------------

// AgentsTransferData

// optional int32 AgentsID = 1;
inline bool AgentsTransferData::has_agentsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AgentsTransferData::set_has_agentsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AgentsTransferData::clear_has_agentsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AgentsTransferData::clear_agentsid() {
  agentsid_ = 0;
  clear_has_agentsid();
}
inline ::google::protobuf::int32 AgentsTransferData::agentsid() const {
  // @@protoc_insertion_point(field_get:AgentsTransferData.AgentsID)
  return agentsid_;
}
inline void AgentsTransferData::set_agentsid(::google::protobuf::int32 value) {
  set_has_agentsid();
  agentsid_ = value;
  // @@protoc_insertion_point(field_set:AgentsTransferData.AgentsID)
}

// optional int32 PlayerID = 2;
inline bool AgentsTransferData::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AgentsTransferData::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AgentsTransferData::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AgentsTransferData::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google::protobuf::int32 AgentsTransferData::playerid() const {
  // @@protoc_insertion_point(field_get:AgentsTransferData.PlayerID)
  return playerid_;
}
inline void AgentsTransferData::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:AgentsTransferData.PlayerID)
}

// optional int32 transfer_id = 3;
inline bool AgentsTransferData::has_transfer_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AgentsTransferData::set_has_transfer_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AgentsTransferData::clear_has_transfer_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AgentsTransferData::clear_transfer_id() {
  transfer_id_ = 0;
  clear_has_transfer_id();
}
inline ::google::protobuf::int32 AgentsTransferData::transfer_id() const {
  // @@protoc_insertion_point(field_get:AgentsTransferData.transfer_id)
  return transfer_id_;
}
inline void AgentsTransferData::set_transfer_id(::google::protobuf::int32 value) {
  set_has_transfer_id();
  transfer_id_ = value;
  // @@protoc_insertion_point(field_set:AgentsTransferData.transfer_id)
}

// optional int32 transfer_type = 4;
inline bool AgentsTransferData::has_transfer_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AgentsTransferData::set_has_transfer_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AgentsTransferData::clear_has_transfer_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AgentsTransferData::clear_transfer_type() {
  transfer_type_ = 0;
  clear_has_transfer_type();
}
inline ::google::protobuf::int32 AgentsTransferData::transfer_type() const {
  // @@protoc_insertion_point(field_get:AgentsTransferData.transfer_type)
  return transfer_type_;
}
inline void AgentsTransferData::set_transfer_type(::google::protobuf::int32 value) {
  set_has_transfer_type();
  transfer_type_ = value;
  // @@protoc_insertion_point(field_set:AgentsTransferData.transfer_type)
}

// optional int32 transfer_money = 5;
inline bool AgentsTransferData::has_transfer_money() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AgentsTransferData::set_has_transfer_money() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AgentsTransferData::clear_has_transfer_money() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AgentsTransferData::clear_transfer_money() {
  transfer_money_ = 0;
  clear_has_transfer_money();
}
inline ::google::protobuf::int32 AgentsTransferData::transfer_money() const {
  // @@protoc_insertion_point(field_get:AgentsTransferData.transfer_money)
  return transfer_money_;
}
inline void AgentsTransferData::set_transfer_money(::google::protobuf::int32 value) {
  set_has_transfer_money();
  transfer_money_ = value;
  // @@protoc_insertion_point(field_set:AgentsTransferData.transfer_money)
}

// optional int32 retID = 6;
inline bool AgentsTransferData::has_retid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AgentsTransferData::set_has_retid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AgentsTransferData::clear_has_retid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AgentsTransferData::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 AgentsTransferData::retid() const {
  // @@protoc_insertion_point(field_get:AgentsTransferData.retID)
  return retid_;
}
inline void AgentsTransferData::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:AgentsTransferData.retID)
}

// optional int32 reCode = 7;
inline bool AgentsTransferData::has_recode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AgentsTransferData::set_has_recode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AgentsTransferData::clear_has_recode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AgentsTransferData::clear_recode() {
  recode_ = 0;
  clear_has_recode();
}
inline ::google::protobuf::int32 AgentsTransferData::recode() const {
  // @@protoc_insertion_point(field_get:AgentsTransferData.reCode)
  return recode_;
}
inline void AgentsTransferData::set_recode(::google::protobuf::int32 value) {
  set_has_recode();
  recode_ = value;
  // @@protoc_insertion_point(field_set:AgentsTransferData.reCode)
}

// -------------------------------------------------------------------

// BankCardInfo

// optional int32 guid = 1;
inline bool BankCardInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BankCardInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BankCardInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BankCardInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 BankCardInfo::guid() const {
  // @@protoc_insertion_point(field_get:BankCardInfo.guid)
  return guid_;
}
inline void BankCardInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:BankCardInfo.guid)
}

// optional string account = 2;
inline bool BankCardInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BankCardInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BankCardInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BankCardInfo::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& BankCardInfo::account() const {
  // @@protoc_insertion_point(field_get:BankCardInfo.account)
  return account_.GetNoArena();
}
inline void BankCardInfo::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankCardInfo.account)
}
#if LANG_CXX11
inline void BankCardInfo::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankCardInfo.account)
}
#endif
inline void BankCardInfo::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankCardInfo.account)
}
inline void BankCardInfo::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankCardInfo.account)
}
inline ::std::string* BankCardInfo::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:BankCardInfo.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BankCardInfo::release_account() {
  // @@protoc_insertion_point(field_release:BankCardInfo.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BankCardInfo::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:BankCardInfo.account)
}

// optional string card_num = 3;
inline bool BankCardInfo::has_card_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BankCardInfo::set_has_card_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BankCardInfo::clear_has_card_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BankCardInfo::clear_card_num() {
  card_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_num();
}
inline const ::std::string& BankCardInfo::card_num() const {
  // @@protoc_insertion_point(field_get:BankCardInfo.card_num)
  return card_num_.GetNoArena();
}
inline void BankCardInfo::set_card_num(const ::std::string& value) {
  set_has_card_num();
  card_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankCardInfo.card_num)
}
#if LANG_CXX11
inline void BankCardInfo::set_card_num(::std::string&& value) {
  set_has_card_num();
  card_num_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankCardInfo.card_num)
}
#endif
inline void BankCardInfo::set_card_num(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_num();
  card_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankCardInfo.card_num)
}
inline void BankCardInfo::set_card_num(const char* value, size_t size) {
  set_has_card_num();
  card_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankCardInfo.card_num)
}
inline ::std::string* BankCardInfo::mutable_card_num() {
  set_has_card_num();
  // @@protoc_insertion_point(field_mutable:BankCardInfo.card_num)
  return card_num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BankCardInfo::release_card_num() {
  // @@protoc_insertion_point(field_release:BankCardInfo.card_num)
  clear_has_card_num();
  return card_num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BankCardInfo::set_allocated_card_num(::std::string* card_num) {
  if (card_num != NULL) {
    set_has_card_num();
  } else {
    clear_has_card_num();
  }
  card_num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_num);
  // @@protoc_insertion_point(field_set_allocated:BankCardInfo.card_num)
}

// optional string user_name = 4;
inline bool BankCardInfo::has_user_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BankCardInfo::set_has_user_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BankCardInfo::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BankCardInfo::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
inline const ::std::string& BankCardInfo::user_name() const {
  // @@protoc_insertion_point(field_get:BankCardInfo.user_name)
  return user_name_.GetNoArena();
}
inline void BankCardInfo::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankCardInfo.user_name)
}
#if LANG_CXX11
inline void BankCardInfo::set_user_name(::std::string&& value) {
  set_has_user_name();
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankCardInfo.user_name)
}
#endif
inline void BankCardInfo::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankCardInfo.user_name)
}
inline void BankCardInfo::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankCardInfo.user_name)
}
inline ::std::string* BankCardInfo::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:BankCardInfo.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BankCardInfo::release_user_name() {
  // @@protoc_insertion_point(field_release:BankCardInfo.user_name)
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BankCardInfo::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:BankCardInfo.user_name)
}

// optional string bank_name = 5;
inline bool BankCardInfo::has_bank_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BankCardInfo::set_has_bank_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BankCardInfo::clear_has_bank_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BankCardInfo::clear_bank_name() {
  bank_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bank_name();
}
inline const ::std::string& BankCardInfo::bank_name() const {
  // @@protoc_insertion_point(field_get:BankCardInfo.bank_name)
  return bank_name_.GetNoArena();
}
inline void BankCardInfo::set_bank_name(const ::std::string& value) {
  set_has_bank_name();
  bank_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankCardInfo.bank_name)
}
#if LANG_CXX11
inline void BankCardInfo::set_bank_name(::std::string&& value) {
  set_has_bank_name();
  bank_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankCardInfo.bank_name)
}
#endif
inline void BankCardInfo::set_bank_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bank_name();
  bank_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankCardInfo.bank_name)
}
inline void BankCardInfo::set_bank_name(const char* value, size_t size) {
  set_has_bank_name();
  bank_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankCardInfo.bank_name)
}
inline ::std::string* BankCardInfo::mutable_bank_name() {
  set_has_bank_name();
  // @@protoc_insertion_point(field_mutable:BankCardInfo.bank_name)
  return bank_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BankCardInfo::release_bank_name() {
  // @@protoc_insertion_point(field_release:BankCardInfo.bank_name)
  clear_has_bank_name();
  return bank_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BankCardInfo::set_allocated_bank_name(::std::string* bank_name) {
  if (bank_name != NULL) {
    set_has_bank_name();
  } else {
    clear_has_bank_name();
  }
  bank_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_name);
  // @@protoc_insertion_point(field_set_allocated:BankCardInfo.bank_name)
}

// optional string bank_addr = 6;
inline bool BankCardInfo::has_bank_addr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BankCardInfo::set_has_bank_addr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BankCardInfo::clear_has_bank_addr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BankCardInfo::clear_bank_addr() {
  bank_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bank_addr();
}
inline const ::std::string& BankCardInfo::bank_addr() const {
  // @@protoc_insertion_point(field_get:BankCardInfo.bank_addr)
  return bank_addr_.GetNoArena();
}
inline void BankCardInfo::set_bank_addr(const ::std::string& value) {
  set_has_bank_addr();
  bank_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankCardInfo.bank_addr)
}
#if LANG_CXX11
inline void BankCardInfo::set_bank_addr(::std::string&& value) {
  set_has_bank_addr();
  bank_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankCardInfo.bank_addr)
}
#endif
inline void BankCardInfo::set_bank_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bank_addr();
  bank_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankCardInfo.bank_addr)
}
inline void BankCardInfo::set_bank_addr(const char* value, size_t size) {
  set_has_bank_addr();
  bank_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankCardInfo.bank_addr)
}
inline ::std::string* BankCardInfo::mutable_bank_addr() {
  set_has_bank_addr();
  // @@protoc_insertion_point(field_mutable:BankCardInfo.bank_addr)
  return bank_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BankCardInfo::release_bank_addr() {
  // @@protoc_insertion_point(field_release:BankCardInfo.bank_addr)
  clear_has_bank_addr();
  return bank_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BankCardInfo::set_allocated_bank_addr(::std::string* bank_addr) {
  if (bank_addr != NULL) {
    set_has_bank_addr();
  } else {
    clear_has_bank_addr();
  }
  bank_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_addr);
  // @@protoc_insertion_point(field_set_allocated:BankCardInfo.bank_addr)
}

// optional string bank_code = 7;
inline bool BankCardInfo::has_bank_code() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BankCardInfo::set_has_bank_code() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BankCardInfo::clear_has_bank_code() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BankCardInfo::clear_bank_code() {
  bank_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bank_code();
}
inline const ::std::string& BankCardInfo::bank_code() const {
  // @@protoc_insertion_point(field_get:BankCardInfo.bank_code)
  return bank_code_.GetNoArena();
}
inline void BankCardInfo::set_bank_code(const ::std::string& value) {
  set_has_bank_code();
  bank_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankCardInfo.bank_code)
}
#if LANG_CXX11
inline void BankCardInfo::set_bank_code(::std::string&& value) {
  set_has_bank_code();
  bank_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankCardInfo.bank_code)
}
#endif
inline void BankCardInfo::set_bank_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bank_code();
  bank_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankCardInfo.bank_code)
}
inline void BankCardInfo::set_bank_code(const char* value, size_t size) {
  set_has_bank_code();
  bank_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankCardInfo.bank_code)
}
inline ::std::string* BankCardInfo::mutable_bank_code() {
  set_has_bank_code();
  // @@protoc_insertion_point(field_mutable:BankCardInfo.bank_code)
  return bank_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BankCardInfo::release_bank_code() {
  // @@protoc_insertion_point(field_release:BankCardInfo.bank_code)
  clear_has_bank_code();
  return bank_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BankCardInfo::set_allocated_bank_code(::std::string* bank_code) {
  if (bank_code != NULL) {
    set_has_bank_code();
  } else {
    clear_has_bank_code();
  }
  bank_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_code);
  // @@protoc_insertion_point(field_set_allocated:BankCardInfo.bank_code)
}

// -------------------------------------------------------------------

// PlayerInfoInMemery

// optional int32 guid = 1;
inline bool PlayerInfoInMemery::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerInfoInMemery::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerInfoInMemery::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerInfoInMemery::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 PlayerInfoInMemery::guid() const {
  // @@protoc_insertion_point(field_get:PlayerInfoInMemery.guid)
  return guid_;
}
inline void PlayerInfoInMemery::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:PlayerInfoInMemery.guid)
}

// optional int32 money = 2;
inline bool PlayerInfoInMemery::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerInfoInMemery::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerInfoInMemery::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerInfoInMemery::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 PlayerInfoInMemery::money() const {
  // @@protoc_insertion_point(field_get:PlayerInfoInMemery.money)
  return money_;
}
inline void PlayerInfoInMemery::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:PlayerInfoInMemery.money)
}

// optional int32 bank = 3;
inline bool PlayerInfoInMemery::has_bank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerInfoInMemery::set_has_bank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerInfoInMemery::clear_has_bank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerInfoInMemery::clear_bank() {
  bank_ = 0;
  clear_has_bank();
}
inline ::google::protobuf::int32 PlayerInfoInMemery::bank() const {
  // @@protoc_insertion_point(field_get:PlayerInfoInMemery.bank)
  return bank_;
}
inline void PlayerInfoInMemery::set_bank(::google::protobuf::int32 value) {
  set_has_bank();
  bank_ = value;
  // @@protoc_insertion_point(field_set:PlayerInfoInMemery.bank)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_public_5fplayer_2eproto__INCLUDED
