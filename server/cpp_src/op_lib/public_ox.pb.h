// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: public_ox.proto

#ifndef PROTOBUF_public_5fox_2eproto__INCLUDED
#define PROTOBUF_public_5fox_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class BankerInfo;
class BankerInfoDefaultTypeInternal;
extern BankerInfoDefaultTypeInternal _BankerInfo_default_instance_;
class BankerList;
class BankerListDefaultTypeInternal;
extern BankerListDefaultTypeInternal _BankerList_default_instance_;
class CS_OxAddScore;
class CS_OxAddScoreDefaultTypeInternal;
extern CS_OxAddScoreDefaultTypeInternal _CS_OxAddScore_default_instance_;
class CS_OxApplyForBanker;
class CS_OxApplyForBankerDefaultTypeInternal;
extern CS_OxApplyForBankerDefaultTypeInternal _CS_OxApplyForBanker_default_instance_;
class CS_OxCallBanker;
class CS_OxCallBankerDefaultTypeInternal;
extern CS_OxCallBankerDefaultTypeInternal _CS_OxCallBanker_default_instance_;
class CS_OxCurBankerLeave;
class CS_OxCurBankerLeaveDefaultTypeInternal;
extern CS_OxCurBankerLeaveDefaultTypeInternal _CS_OxCurBankerLeave_default_instance_;
class CS_OxGetBetCfg;
class CS_OxGetBetCfgDefaultTypeInternal;
extern CS_OxGetBetCfgDefaultTypeInternal _CS_OxGetBetCfg_default_instance_;
class CS_OxLeaveForBanker;
class CS_OxLeaveForBankerDefaultTypeInternal;
extern CS_OxLeaveForBankerDefaultTypeInternal _CS_OxLeaveForBanker_default_instance_;
class CS_OxLeaveGame;
class CS_OxLeaveGameDefaultTypeInternal;
extern CS_OxLeaveGameDefaultTypeInternal _CS_OxLeaveGame_default_instance_;
class CS_OxOpenCards;
class CS_OxOpenCardsDefaultTypeInternal;
extern CS_OxOpenCardsDefaultTypeInternal _CS_OxOpenCards_default_instance_;
class CS_OxPlayerConnectGame;
class CS_OxPlayerConnectGameDefaultTypeInternal;
extern CS_OxPlayerConnectGameDefaultTypeInternal _CS_OxPlayerConnectGame_default_instance_;
class CS_OxRecord;
class CS_OxRecordDefaultTypeInternal;
extern CS_OxRecordDefaultTypeInternal _CS_OxRecord_default_instance_;
class CS_OxTop;
class CS_OxTopDefaultTypeInternal;
extern CS_OxTopDefaultTypeInternal _CS_OxTop_default_instance_;
class CardCompareResult;
class CardCompareResultDefaultTypeInternal;
extern CardCompareResultDefaultTypeInternal _CardCompareResult_default_instance_;
class CardResult;
class CardResultDefaultTypeInternal;
extern CardResultDefaultTypeInternal _CardResult_default_instance_;
class Cards;
class CardsDefaultTypeInternal;
extern CardsDefaultTypeInternal _Cards_default_instance_;
class EveryAreaInfo;
class EveryAreaInfoDefaultTypeInternal;
extern EveryAreaInfoDefaultTypeInternal _EveryAreaInfo_default_instance_;
class OxPlayerConclude;
class OxPlayerConcludeDefaultTypeInternal;
extern OxPlayerConcludeDefaultTypeInternal _OxPlayerConclude_default_instance_;
class Oxplayer_info;
class Oxplayer_infoDefaultTypeInternal;
extern Oxplayer_infoDefaultTypeInternal _Oxplayer_info_default_instance_;
class PlayerTopInfo;
class PlayerTopInfoDefaultTypeInternal;
extern PlayerTopInfoDefaultTypeInternal _PlayerTopInfo_default_instance_;
class Player_bet_info;
class Player_bet_infoDefaultTypeInternal;
extern Player_bet_infoDefaultTypeInternal _Player_bet_info_default_instance_;
class RecordResult;
class RecordResultDefaultTypeInternal;
extern RecordResultDefaultTypeInternal _RecordResult_default_instance_;
class SC_CardCompareResult;
class SC_CardCompareResultDefaultTypeInternal;
extern SC_CardCompareResultDefaultTypeInternal _SC_CardCompareResult_default_instance_;
class SC_CardResult;
class SC_CardResultDefaultTypeInternal;
extern SC_CardResultDefaultTypeInternal _SC_CardResult_default_instance_;
class SC_OxAddScore;
class SC_OxAddScoreDefaultTypeInternal;
extern SC_OxAddScoreDefaultTypeInternal _SC_OxAddScore_default_instance_;
class SC_OxAddScoreStatus;
class SC_OxAddScoreStatusDefaultTypeInternal;
extern SC_OxAddScoreStatusDefaultTypeInternal _SC_OxAddScoreStatus_default_instance_;
class SC_OxBankerInfo;
class SC_OxBankerInfoDefaultTypeInternal;
extern SC_OxBankerInfoDefaultTypeInternal _SC_OxBankerInfo_default_instance_;
class SC_OxBankerLeaveFlag;
class SC_OxBankerLeaveFlagDefaultTypeInternal;
extern SC_OxBankerLeaveFlagDefaultTypeInternal _SC_OxBankerLeaveFlag_default_instance_;
class SC_OxBankerList;
class SC_OxBankerListDefaultTypeInternal;
extern SC_OxBankerListDefaultTypeInternal _SC_OxBankerList_default_instance_;
class SC_OxBetCoin;
class SC_OxBetCoinDefaultTypeInternal;
extern SC_OxBetCoinDefaultTypeInternal _SC_OxBetCoin_default_instance_;
class SC_OxCallBanker;
class SC_OxCallBankerDefaultTypeInternal;
extern SC_OxCallBankerDefaultTypeInternal _SC_OxCallBanker_default_instance_;
class SC_OxDealCard;
class SC_OxDealCardDefaultTypeInternal;
extern SC_OxDealCardDefaultTypeInternal _SC_OxDealCard_default_instance_;
class SC_OxEnd;
class SC_OxEndDefaultTypeInternal;
extern SC_OxEndDefaultTypeInternal _SC_OxEnd_default_instance_;
class SC_OxEveryArea;
class SC_OxEveryAreaDefaultTypeInternal;
extern SC_OxEveryAreaDefaultTypeInternal _SC_OxEveryArea_default_instance_;
class SC_OxForBankerFlag;
class SC_OxForBankerFlagDefaultTypeInternal;
extern SC_OxForBankerFlagDefaultTypeInternal _SC_OxForBankerFlag_default_instance_;
class SC_OxGetBetCfg;
class SC_OxGetBetCfgDefaultTypeInternal;
extern SC_OxGetBetCfgDefaultTypeInternal _SC_OxGetBetCfg_default_instance_;
class SC_OxOpenCards;
class SC_OxOpenCardsDefaultTypeInternal;
extern SC_OxOpenCardsDefaultTypeInternal _SC_OxOpenCards_default_instance_;
class SC_OxPlayerConnection;
class SC_OxPlayerConnectionDefaultTypeInternal;
extern SC_OxPlayerConnectionDefaultTypeInternal _SC_OxPlayerConnection_default_instance_;
class SC_OxPlayerList;
class SC_OxPlayerListDefaultTypeInternal;
extern SC_OxPlayerListDefaultTypeInternal _SC_OxPlayerList_default_instance_;
class SC_OxRecord;
class SC_OxRecordDefaultTypeInternal;
extern SC_OxRecordDefaultTypeInternal _SC_OxRecord_default_instance_;
class SC_OxResult;
class SC_OxResultDefaultTypeInternal;
extern SC_OxResultDefaultTypeInternal _SC_OxResult_default_instance_;
class SC_OxSatusAndDownTime;
class SC_OxSatusAndDownTimeDefaultTypeInternal;
extern SC_OxSatusAndDownTimeDefaultTypeInternal _SC_OxSatusAndDownTime_default_instance_;
class SC_OxStart;
class SC_OxStartDefaultTypeInternal;
extern SC_OxStartDefaultTypeInternal _SC_OxStart_default_instance_;
class SC_OxTableInfo;
class SC_OxTableInfoDefaultTypeInternal;
extern SC_OxTableInfoDefaultTypeInternal _SC_OxTableInfo_default_instance_;
class SC_OxTop;
class SC_OxTopDefaultTypeInternal;
extern SC_OxTopDefaultTypeInternal _SC_OxTop_default_instance_;
class SC_Ox_config_info;
class SC_Ox_config_infoDefaultTypeInternal;
extern SC_Ox_config_infoDefaultTypeInternal _SC_Ox_config_info_default_instance_;
class chip_info;
class chip_infoDefaultTypeInternal;
extern chip_infoDefaultTypeInternal _chip_info_default_instance_;

namespace protobuf_public_5fox_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_public_5fox_2eproto

enum SC_OxStart_MsgID {
  SC_OxStart_MsgID_ID = 18002
};
bool SC_OxStart_MsgID_IsValid(int value);
const SC_OxStart_MsgID SC_OxStart_MsgID_MsgID_MIN = SC_OxStart_MsgID_ID;
const SC_OxStart_MsgID SC_OxStart_MsgID_MsgID_MAX = SC_OxStart_MsgID_ID;
const int SC_OxStart_MsgID_MsgID_ARRAYSIZE = SC_OxStart_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxStart_MsgID_descriptor();
inline const ::std::string& SC_OxStart_MsgID_Name(SC_OxStart_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxStart_MsgID_descriptor(), value);
}
inline bool SC_OxStart_MsgID_Parse(
    const ::std::string& name, SC_OxStart_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxStart_MsgID>(
    SC_OxStart_MsgID_descriptor(), name, value);
}
enum CS_OxCallBanker_MsgID {
  CS_OxCallBanker_MsgID_ID = 18003,
  CS_OxCallBanker_MsgID_Target = 2
};
bool CS_OxCallBanker_MsgID_IsValid(int value);
const CS_OxCallBanker_MsgID CS_OxCallBanker_MsgID_MsgID_MIN = CS_OxCallBanker_MsgID_Target;
const CS_OxCallBanker_MsgID CS_OxCallBanker_MsgID_MsgID_MAX = CS_OxCallBanker_MsgID_ID;
const int CS_OxCallBanker_MsgID_MsgID_ARRAYSIZE = CS_OxCallBanker_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_OxCallBanker_MsgID_descriptor();
inline const ::std::string& CS_OxCallBanker_MsgID_Name(CS_OxCallBanker_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_OxCallBanker_MsgID_descriptor(), value);
}
inline bool CS_OxCallBanker_MsgID_Parse(
    const ::std::string& name, CS_OxCallBanker_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_OxCallBanker_MsgID>(
    CS_OxCallBanker_MsgID_descriptor(), name, value);
}
enum SC_OxCallBanker_MsgID {
  SC_OxCallBanker_MsgID_ID = 18004
};
bool SC_OxCallBanker_MsgID_IsValid(int value);
const SC_OxCallBanker_MsgID SC_OxCallBanker_MsgID_MsgID_MIN = SC_OxCallBanker_MsgID_ID;
const SC_OxCallBanker_MsgID SC_OxCallBanker_MsgID_MsgID_MAX = SC_OxCallBanker_MsgID_ID;
const int SC_OxCallBanker_MsgID_MsgID_ARRAYSIZE = SC_OxCallBanker_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxCallBanker_MsgID_descriptor();
inline const ::std::string& SC_OxCallBanker_MsgID_Name(SC_OxCallBanker_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxCallBanker_MsgID_descriptor(), value);
}
inline bool SC_OxCallBanker_MsgID_Parse(
    const ::std::string& name, SC_OxCallBanker_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxCallBanker_MsgID>(
    SC_OxCallBanker_MsgID_descriptor(), name, value);
}
enum SC_OxAddScoreStatus_MsgID {
  SC_OxAddScoreStatus_MsgID_ID = 18005
};
bool SC_OxAddScoreStatus_MsgID_IsValid(int value);
const SC_OxAddScoreStatus_MsgID SC_OxAddScoreStatus_MsgID_MsgID_MIN = SC_OxAddScoreStatus_MsgID_ID;
const SC_OxAddScoreStatus_MsgID SC_OxAddScoreStatus_MsgID_MsgID_MAX = SC_OxAddScoreStatus_MsgID_ID;
const int SC_OxAddScoreStatus_MsgID_MsgID_ARRAYSIZE = SC_OxAddScoreStatus_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxAddScoreStatus_MsgID_descriptor();
inline const ::std::string& SC_OxAddScoreStatus_MsgID_Name(SC_OxAddScoreStatus_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxAddScoreStatus_MsgID_descriptor(), value);
}
inline bool SC_OxAddScoreStatus_MsgID_Parse(
    const ::std::string& name, SC_OxAddScoreStatus_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxAddScoreStatus_MsgID>(
    SC_OxAddScoreStatus_MsgID_descriptor(), name, value);
}
enum CS_OxAddScore_MsgID {
  CS_OxAddScore_MsgID_ID = 18006,
  CS_OxAddScore_MsgID_Target = 2
};
bool CS_OxAddScore_MsgID_IsValid(int value);
const CS_OxAddScore_MsgID CS_OxAddScore_MsgID_MsgID_MIN = CS_OxAddScore_MsgID_Target;
const CS_OxAddScore_MsgID CS_OxAddScore_MsgID_MsgID_MAX = CS_OxAddScore_MsgID_ID;
const int CS_OxAddScore_MsgID_MsgID_ARRAYSIZE = CS_OxAddScore_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_OxAddScore_MsgID_descriptor();
inline const ::std::string& CS_OxAddScore_MsgID_Name(CS_OxAddScore_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_OxAddScore_MsgID_descriptor(), value);
}
inline bool CS_OxAddScore_MsgID_Parse(
    const ::std::string& name, CS_OxAddScore_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_OxAddScore_MsgID>(
    CS_OxAddScore_MsgID_descriptor(), name, value);
}
enum SC_OxAddScore_MsgID {
  SC_OxAddScore_MsgID_ID = 18007
};
bool SC_OxAddScore_MsgID_IsValid(int value);
const SC_OxAddScore_MsgID SC_OxAddScore_MsgID_MsgID_MIN = SC_OxAddScore_MsgID_ID;
const SC_OxAddScore_MsgID SC_OxAddScore_MsgID_MsgID_MAX = SC_OxAddScore_MsgID_ID;
const int SC_OxAddScore_MsgID_MsgID_ARRAYSIZE = SC_OxAddScore_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxAddScore_MsgID_descriptor();
inline const ::std::string& SC_OxAddScore_MsgID_Name(SC_OxAddScore_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxAddScore_MsgID_descriptor(), value);
}
inline bool SC_OxAddScore_MsgID_Parse(
    const ::std::string& name, SC_OxAddScore_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxAddScore_MsgID>(
    SC_OxAddScore_MsgID_descriptor(), name, value);
}
enum SC_OxDealCard_MsgID {
  SC_OxDealCard_MsgID_ID = 18008
};
bool SC_OxDealCard_MsgID_IsValid(int value);
const SC_OxDealCard_MsgID SC_OxDealCard_MsgID_MsgID_MIN = SC_OxDealCard_MsgID_ID;
const SC_OxDealCard_MsgID SC_OxDealCard_MsgID_MsgID_MAX = SC_OxDealCard_MsgID_ID;
const int SC_OxDealCard_MsgID_MsgID_ARRAYSIZE = SC_OxDealCard_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxDealCard_MsgID_descriptor();
inline const ::std::string& SC_OxDealCard_MsgID_Name(SC_OxDealCard_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxDealCard_MsgID_descriptor(), value);
}
inline bool SC_OxDealCard_MsgID_Parse(
    const ::std::string& name, SC_OxDealCard_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxDealCard_MsgID>(
    SC_OxDealCard_MsgID_descriptor(), name, value);
}
enum CS_OxOpenCards_MsgID {
  CS_OxOpenCards_MsgID_ID = 18009,
  CS_OxOpenCards_MsgID_Target = 2
};
bool CS_OxOpenCards_MsgID_IsValid(int value);
const CS_OxOpenCards_MsgID CS_OxOpenCards_MsgID_MsgID_MIN = CS_OxOpenCards_MsgID_Target;
const CS_OxOpenCards_MsgID CS_OxOpenCards_MsgID_MsgID_MAX = CS_OxOpenCards_MsgID_ID;
const int CS_OxOpenCards_MsgID_MsgID_ARRAYSIZE = CS_OxOpenCards_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_OxOpenCards_MsgID_descriptor();
inline const ::std::string& CS_OxOpenCards_MsgID_Name(CS_OxOpenCards_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_OxOpenCards_MsgID_descriptor(), value);
}
inline bool CS_OxOpenCards_MsgID_Parse(
    const ::std::string& name, CS_OxOpenCards_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_OxOpenCards_MsgID>(
    CS_OxOpenCards_MsgID_descriptor(), name, value);
}
enum SC_OxOpenCards_MsgID {
  SC_OxOpenCards_MsgID_ID = 18010
};
bool SC_OxOpenCards_MsgID_IsValid(int value);
const SC_OxOpenCards_MsgID SC_OxOpenCards_MsgID_MsgID_MIN = SC_OxOpenCards_MsgID_ID;
const SC_OxOpenCards_MsgID SC_OxOpenCards_MsgID_MsgID_MAX = SC_OxOpenCards_MsgID_ID;
const int SC_OxOpenCards_MsgID_MsgID_ARRAYSIZE = SC_OxOpenCards_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxOpenCards_MsgID_descriptor();
inline const ::std::string& SC_OxOpenCards_MsgID_Name(SC_OxOpenCards_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxOpenCards_MsgID_descriptor(), value);
}
inline bool SC_OxOpenCards_MsgID_Parse(
    const ::std::string& name, SC_OxOpenCards_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxOpenCards_MsgID>(
    SC_OxOpenCards_MsgID_descriptor(), name, value);
}
enum SC_OxEnd_MsgID {
  SC_OxEnd_MsgID_ID = 18011
};
bool SC_OxEnd_MsgID_IsValid(int value);
const SC_OxEnd_MsgID SC_OxEnd_MsgID_MsgID_MIN = SC_OxEnd_MsgID_ID;
const SC_OxEnd_MsgID SC_OxEnd_MsgID_MsgID_MAX = SC_OxEnd_MsgID_ID;
const int SC_OxEnd_MsgID_MsgID_ARRAYSIZE = SC_OxEnd_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxEnd_MsgID_descriptor();
inline const ::std::string& SC_OxEnd_MsgID_Name(SC_OxEnd_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxEnd_MsgID_descriptor(), value);
}
inline bool SC_OxEnd_MsgID_Parse(
    const ::std::string& name, SC_OxEnd_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxEnd_MsgID>(
    SC_OxEnd_MsgID_descriptor(), name, value);
}
enum CS_OxRecord_MsgID {
  CS_OxRecord_MsgID_ID = 18012,
  CS_OxRecord_MsgID_Target = 2
};
bool CS_OxRecord_MsgID_IsValid(int value);
const CS_OxRecord_MsgID CS_OxRecord_MsgID_MsgID_MIN = CS_OxRecord_MsgID_Target;
const CS_OxRecord_MsgID CS_OxRecord_MsgID_MsgID_MAX = CS_OxRecord_MsgID_ID;
const int CS_OxRecord_MsgID_MsgID_ARRAYSIZE = CS_OxRecord_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_OxRecord_MsgID_descriptor();
inline const ::std::string& CS_OxRecord_MsgID_Name(CS_OxRecord_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_OxRecord_MsgID_descriptor(), value);
}
inline bool CS_OxRecord_MsgID_Parse(
    const ::std::string& name, CS_OxRecord_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_OxRecord_MsgID>(
    CS_OxRecord_MsgID_descriptor(), name, value);
}
enum SC_OxRecord_MsgID {
  SC_OxRecord_MsgID_ID = 18013
};
bool SC_OxRecord_MsgID_IsValid(int value);
const SC_OxRecord_MsgID SC_OxRecord_MsgID_MsgID_MIN = SC_OxRecord_MsgID_ID;
const SC_OxRecord_MsgID SC_OxRecord_MsgID_MsgID_MAX = SC_OxRecord_MsgID_ID;
const int SC_OxRecord_MsgID_MsgID_ARRAYSIZE = SC_OxRecord_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxRecord_MsgID_descriptor();
inline const ::std::string& SC_OxRecord_MsgID_Name(SC_OxRecord_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxRecord_MsgID_descriptor(), value);
}
inline bool SC_OxRecord_MsgID_Parse(
    const ::std::string& name, SC_OxRecord_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxRecord_MsgID>(
    SC_OxRecord_MsgID_descriptor(), name, value);
}
enum CS_OxTop_MsgID {
  CS_OxTop_MsgID_ID = 18014,
  CS_OxTop_MsgID_Target = 2
};
bool CS_OxTop_MsgID_IsValid(int value);
const CS_OxTop_MsgID CS_OxTop_MsgID_MsgID_MIN = CS_OxTop_MsgID_Target;
const CS_OxTop_MsgID CS_OxTop_MsgID_MsgID_MAX = CS_OxTop_MsgID_ID;
const int CS_OxTop_MsgID_MsgID_ARRAYSIZE = CS_OxTop_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_OxTop_MsgID_descriptor();
inline const ::std::string& CS_OxTop_MsgID_Name(CS_OxTop_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_OxTop_MsgID_descriptor(), value);
}
inline bool CS_OxTop_MsgID_Parse(
    const ::std::string& name, CS_OxTop_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_OxTop_MsgID>(
    CS_OxTop_MsgID_descriptor(), name, value);
}
enum SC_OxTop_MsgID {
  SC_OxTop_MsgID_ID = 18015
};
bool SC_OxTop_MsgID_IsValid(int value);
const SC_OxTop_MsgID SC_OxTop_MsgID_MsgID_MIN = SC_OxTop_MsgID_ID;
const SC_OxTop_MsgID SC_OxTop_MsgID_MsgID_MAX = SC_OxTop_MsgID_ID;
const int SC_OxTop_MsgID_MsgID_ARRAYSIZE = SC_OxTop_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxTop_MsgID_descriptor();
inline const ::std::string& SC_OxTop_MsgID_Name(SC_OxTop_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxTop_MsgID_descriptor(), value);
}
inline bool SC_OxTop_MsgID_Parse(
    const ::std::string& name, SC_OxTop_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxTop_MsgID>(
    SC_OxTop_MsgID_descriptor(), name, value);
}
enum SC_OxBankerInfo_MsgID {
  SC_OxBankerInfo_MsgID_ID = 18016
};
bool SC_OxBankerInfo_MsgID_IsValid(int value);
const SC_OxBankerInfo_MsgID SC_OxBankerInfo_MsgID_MsgID_MIN = SC_OxBankerInfo_MsgID_ID;
const SC_OxBankerInfo_MsgID SC_OxBankerInfo_MsgID_MsgID_MAX = SC_OxBankerInfo_MsgID_ID;
const int SC_OxBankerInfo_MsgID_MsgID_ARRAYSIZE = SC_OxBankerInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxBankerInfo_MsgID_descriptor();
inline const ::std::string& SC_OxBankerInfo_MsgID_Name(SC_OxBankerInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxBankerInfo_MsgID_descriptor(), value);
}
inline bool SC_OxBankerInfo_MsgID_Parse(
    const ::std::string& name, SC_OxBankerInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxBankerInfo_MsgID>(
    SC_OxBankerInfo_MsgID_descriptor(), name, value);
}
enum SC_OxBankerList_MsgID {
  SC_OxBankerList_MsgID_ID = 18017
};
bool SC_OxBankerList_MsgID_IsValid(int value);
const SC_OxBankerList_MsgID SC_OxBankerList_MsgID_MsgID_MIN = SC_OxBankerList_MsgID_ID;
const SC_OxBankerList_MsgID SC_OxBankerList_MsgID_MsgID_MAX = SC_OxBankerList_MsgID_ID;
const int SC_OxBankerList_MsgID_MsgID_ARRAYSIZE = SC_OxBankerList_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxBankerList_MsgID_descriptor();
inline const ::std::string& SC_OxBankerList_MsgID_Name(SC_OxBankerList_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxBankerList_MsgID_descriptor(), value);
}
inline bool SC_OxBankerList_MsgID_Parse(
    const ::std::string& name, SC_OxBankerList_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxBankerList_MsgID>(
    SC_OxBankerList_MsgID_descriptor(), name, value);
}
enum SC_OxForBankerFlag_MsgID {
  SC_OxForBankerFlag_MsgID_ID = 18018
};
bool SC_OxForBankerFlag_MsgID_IsValid(int value);
const SC_OxForBankerFlag_MsgID SC_OxForBankerFlag_MsgID_MsgID_MIN = SC_OxForBankerFlag_MsgID_ID;
const SC_OxForBankerFlag_MsgID SC_OxForBankerFlag_MsgID_MsgID_MAX = SC_OxForBankerFlag_MsgID_ID;
const int SC_OxForBankerFlag_MsgID_MsgID_ARRAYSIZE = SC_OxForBankerFlag_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxForBankerFlag_MsgID_descriptor();
inline const ::std::string& SC_OxForBankerFlag_MsgID_Name(SC_OxForBankerFlag_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxForBankerFlag_MsgID_descriptor(), value);
}
inline bool SC_OxForBankerFlag_MsgID_Parse(
    const ::std::string& name, SC_OxForBankerFlag_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxForBankerFlag_MsgID>(
    SC_OxForBankerFlag_MsgID_descriptor(), name, value);
}
enum SC_OxBetCoin_MsgID {
  SC_OxBetCoin_MsgID_ID = 18019
};
bool SC_OxBetCoin_MsgID_IsValid(int value);
const SC_OxBetCoin_MsgID SC_OxBetCoin_MsgID_MsgID_MIN = SC_OxBetCoin_MsgID_ID;
const SC_OxBetCoin_MsgID SC_OxBetCoin_MsgID_MsgID_MAX = SC_OxBetCoin_MsgID_ID;
const int SC_OxBetCoin_MsgID_MsgID_ARRAYSIZE = SC_OxBetCoin_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxBetCoin_MsgID_descriptor();
inline const ::std::string& SC_OxBetCoin_MsgID_Name(SC_OxBetCoin_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxBetCoin_MsgID_descriptor(), value);
}
inline bool SC_OxBetCoin_MsgID_Parse(
    const ::std::string& name, SC_OxBetCoin_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxBetCoin_MsgID>(
    SC_OxBetCoin_MsgID_descriptor(), name, value);
}
enum SC_OxPlayerList_MsgID {
  SC_OxPlayerList_MsgID_ID = 18020
};
bool SC_OxPlayerList_MsgID_IsValid(int value);
const SC_OxPlayerList_MsgID SC_OxPlayerList_MsgID_MsgID_MIN = SC_OxPlayerList_MsgID_ID;
const SC_OxPlayerList_MsgID SC_OxPlayerList_MsgID_MsgID_MAX = SC_OxPlayerList_MsgID_ID;
const int SC_OxPlayerList_MsgID_MsgID_ARRAYSIZE = SC_OxPlayerList_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxPlayerList_MsgID_descriptor();
inline const ::std::string& SC_OxPlayerList_MsgID_Name(SC_OxPlayerList_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxPlayerList_MsgID_descriptor(), value);
}
inline bool SC_OxPlayerList_MsgID_Parse(
    const ::std::string& name, SC_OxPlayerList_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxPlayerList_MsgID>(
    SC_OxPlayerList_MsgID_descriptor(), name, value);
}
enum SC_OxEveryArea_MsgID {
  SC_OxEveryArea_MsgID_ID = 18021
};
bool SC_OxEveryArea_MsgID_IsValid(int value);
const SC_OxEveryArea_MsgID SC_OxEveryArea_MsgID_MsgID_MIN = SC_OxEveryArea_MsgID_ID;
const SC_OxEveryArea_MsgID SC_OxEveryArea_MsgID_MsgID_MAX = SC_OxEveryArea_MsgID_ID;
const int SC_OxEveryArea_MsgID_MsgID_ARRAYSIZE = SC_OxEveryArea_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxEveryArea_MsgID_descriptor();
inline const ::std::string& SC_OxEveryArea_MsgID_Name(SC_OxEveryArea_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxEveryArea_MsgID_descriptor(), value);
}
inline bool SC_OxEveryArea_MsgID_Parse(
    const ::std::string& name, SC_OxEveryArea_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxEveryArea_MsgID>(
    SC_OxEveryArea_MsgID_descriptor(), name, value);
}
enum CS_OxApplyForBanker_MsgID {
  CS_OxApplyForBanker_MsgID_ID = 18022,
  CS_OxApplyForBanker_MsgID_Target = 2
};
bool CS_OxApplyForBanker_MsgID_IsValid(int value);
const CS_OxApplyForBanker_MsgID CS_OxApplyForBanker_MsgID_MsgID_MIN = CS_OxApplyForBanker_MsgID_Target;
const CS_OxApplyForBanker_MsgID CS_OxApplyForBanker_MsgID_MsgID_MAX = CS_OxApplyForBanker_MsgID_ID;
const int CS_OxApplyForBanker_MsgID_MsgID_ARRAYSIZE = CS_OxApplyForBanker_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_OxApplyForBanker_MsgID_descriptor();
inline const ::std::string& CS_OxApplyForBanker_MsgID_Name(CS_OxApplyForBanker_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_OxApplyForBanker_MsgID_descriptor(), value);
}
inline bool CS_OxApplyForBanker_MsgID_Parse(
    const ::std::string& name, CS_OxApplyForBanker_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_OxApplyForBanker_MsgID>(
    CS_OxApplyForBanker_MsgID_descriptor(), name, value);
}
enum CS_OxLeaveForBanker_MsgID {
  CS_OxLeaveForBanker_MsgID_ID = 18023,
  CS_OxLeaveForBanker_MsgID_Target = 2
};
bool CS_OxLeaveForBanker_MsgID_IsValid(int value);
const CS_OxLeaveForBanker_MsgID CS_OxLeaveForBanker_MsgID_MsgID_MIN = CS_OxLeaveForBanker_MsgID_Target;
const CS_OxLeaveForBanker_MsgID CS_OxLeaveForBanker_MsgID_MsgID_MAX = CS_OxLeaveForBanker_MsgID_ID;
const int CS_OxLeaveForBanker_MsgID_MsgID_ARRAYSIZE = CS_OxLeaveForBanker_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_OxLeaveForBanker_MsgID_descriptor();
inline const ::std::string& CS_OxLeaveForBanker_MsgID_Name(CS_OxLeaveForBanker_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_OxLeaveForBanker_MsgID_descriptor(), value);
}
inline bool CS_OxLeaveForBanker_MsgID_Parse(
    const ::std::string& name, CS_OxLeaveForBanker_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_OxLeaveForBanker_MsgID>(
    CS_OxLeaveForBanker_MsgID_descriptor(), name, value);
}
enum CS_OxCurBankerLeave_MsgID {
  CS_OxCurBankerLeave_MsgID_ID = 18024,
  CS_OxCurBankerLeave_MsgID_Target = 2
};
bool CS_OxCurBankerLeave_MsgID_IsValid(int value);
const CS_OxCurBankerLeave_MsgID CS_OxCurBankerLeave_MsgID_MsgID_MIN = CS_OxCurBankerLeave_MsgID_Target;
const CS_OxCurBankerLeave_MsgID CS_OxCurBankerLeave_MsgID_MsgID_MAX = CS_OxCurBankerLeave_MsgID_ID;
const int CS_OxCurBankerLeave_MsgID_MsgID_ARRAYSIZE = CS_OxCurBankerLeave_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_OxCurBankerLeave_MsgID_descriptor();
inline const ::std::string& CS_OxCurBankerLeave_MsgID_Name(CS_OxCurBankerLeave_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_OxCurBankerLeave_MsgID_descriptor(), value);
}
inline bool CS_OxCurBankerLeave_MsgID_Parse(
    const ::std::string& name, CS_OxCurBankerLeave_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_OxCurBankerLeave_MsgID>(
    CS_OxCurBankerLeave_MsgID_descriptor(), name, value);
}
enum SC_OxSatusAndDownTime_MsgID {
  SC_OxSatusAndDownTime_MsgID_ID = 18025
};
bool SC_OxSatusAndDownTime_MsgID_IsValid(int value);
const SC_OxSatusAndDownTime_MsgID SC_OxSatusAndDownTime_MsgID_MsgID_MIN = SC_OxSatusAndDownTime_MsgID_ID;
const SC_OxSatusAndDownTime_MsgID SC_OxSatusAndDownTime_MsgID_MsgID_MAX = SC_OxSatusAndDownTime_MsgID_ID;
const int SC_OxSatusAndDownTime_MsgID_MsgID_ARRAYSIZE = SC_OxSatusAndDownTime_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxSatusAndDownTime_MsgID_descriptor();
inline const ::std::string& SC_OxSatusAndDownTime_MsgID_Name(SC_OxSatusAndDownTime_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxSatusAndDownTime_MsgID_descriptor(), value);
}
inline bool SC_OxSatusAndDownTime_MsgID_Parse(
    const ::std::string& name, SC_OxSatusAndDownTime_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxSatusAndDownTime_MsgID>(
    SC_OxSatusAndDownTime_MsgID_descriptor(), name, value);
}
enum SC_OxPlayerConnection_MsgID {
  SC_OxPlayerConnection_MsgID_ID = 18026
};
bool SC_OxPlayerConnection_MsgID_IsValid(int value);
const SC_OxPlayerConnection_MsgID SC_OxPlayerConnection_MsgID_MsgID_MIN = SC_OxPlayerConnection_MsgID_ID;
const SC_OxPlayerConnection_MsgID SC_OxPlayerConnection_MsgID_MsgID_MAX = SC_OxPlayerConnection_MsgID_ID;
const int SC_OxPlayerConnection_MsgID_MsgID_ARRAYSIZE = SC_OxPlayerConnection_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxPlayerConnection_MsgID_descriptor();
inline const ::std::string& SC_OxPlayerConnection_MsgID_Name(SC_OxPlayerConnection_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxPlayerConnection_MsgID_descriptor(), value);
}
inline bool SC_OxPlayerConnection_MsgID_Parse(
    const ::std::string& name, SC_OxPlayerConnection_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxPlayerConnection_MsgID>(
    SC_OxPlayerConnection_MsgID_descriptor(), name, value);
}
enum SC_OxTableInfo_MsgID {
  SC_OxTableInfo_MsgID_ID = 18027
};
bool SC_OxTableInfo_MsgID_IsValid(int value);
const SC_OxTableInfo_MsgID SC_OxTableInfo_MsgID_MsgID_MIN = SC_OxTableInfo_MsgID_ID;
const SC_OxTableInfo_MsgID SC_OxTableInfo_MsgID_MsgID_MAX = SC_OxTableInfo_MsgID_ID;
const int SC_OxTableInfo_MsgID_MsgID_ARRAYSIZE = SC_OxTableInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxTableInfo_MsgID_descriptor();
inline const ::std::string& SC_OxTableInfo_MsgID_Name(SC_OxTableInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxTableInfo_MsgID_descriptor(), value);
}
inline bool SC_OxTableInfo_MsgID_Parse(
    const ::std::string& name, SC_OxTableInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxTableInfo_MsgID>(
    SC_OxTableInfo_MsgID_descriptor(), name, value);
}
enum CS_OxPlayerConnectGame_MsgID {
  CS_OxPlayerConnectGame_MsgID_ID = 18028
};
bool CS_OxPlayerConnectGame_MsgID_IsValid(int value);
const CS_OxPlayerConnectGame_MsgID CS_OxPlayerConnectGame_MsgID_MsgID_MIN = CS_OxPlayerConnectGame_MsgID_ID;
const CS_OxPlayerConnectGame_MsgID CS_OxPlayerConnectGame_MsgID_MsgID_MAX = CS_OxPlayerConnectGame_MsgID_ID;
const int CS_OxPlayerConnectGame_MsgID_MsgID_ARRAYSIZE = CS_OxPlayerConnectGame_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_OxPlayerConnectGame_MsgID_descriptor();
inline const ::std::string& CS_OxPlayerConnectGame_MsgID_Name(CS_OxPlayerConnectGame_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_OxPlayerConnectGame_MsgID_descriptor(), value);
}
inline bool CS_OxPlayerConnectGame_MsgID_Parse(
    const ::std::string& name, CS_OxPlayerConnectGame_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_OxPlayerConnectGame_MsgID>(
    CS_OxPlayerConnectGame_MsgID_descriptor(), name, value);
}
enum SC_CardResult_MsgID {
  SC_CardResult_MsgID_ID = 18029
};
bool SC_CardResult_MsgID_IsValid(int value);
const SC_CardResult_MsgID SC_CardResult_MsgID_MsgID_MIN = SC_CardResult_MsgID_ID;
const SC_CardResult_MsgID SC_CardResult_MsgID_MsgID_MAX = SC_CardResult_MsgID_ID;
const int SC_CardResult_MsgID_MsgID_ARRAYSIZE = SC_CardResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_CardResult_MsgID_descriptor();
inline const ::std::string& SC_CardResult_MsgID_Name(SC_CardResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_CardResult_MsgID_descriptor(), value);
}
inline bool SC_CardResult_MsgID_Parse(
    const ::std::string& name, SC_CardResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_CardResult_MsgID>(
    SC_CardResult_MsgID_descriptor(), name, value);
}
enum SC_OxResult_MsgID {
  SC_OxResult_MsgID_ID = 18030
};
bool SC_OxResult_MsgID_IsValid(int value);
const SC_OxResult_MsgID SC_OxResult_MsgID_MsgID_MIN = SC_OxResult_MsgID_ID;
const SC_OxResult_MsgID SC_OxResult_MsgID_MsgID_MAX = SC_OxResult_MsgID_ID;
const int SC_OxResult_MsgID_MsgID_ARRAYSIZE = SC_OxResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxResult_MsgID_descriptor();
inline const ::std::string& SC_OxResult_MsgID_Name(SC_OxResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxResult_MsgID_descriptor(), value);
}
inline bool SC_OxResult_MsgID_Parse(
    const ::std::string& name, SC_OxResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxResult_MsgID>(
    SC_OxResult_MsgID_descriptor(), name, value);
}
enum SC_OxBankerLeaveFlag_MsgID {
  SC_OxBankerLeaveFlag_MsgID_ID = 18031
};
bool SC_OxBankerLeaveFlag_MsgID_IsValid(int value);
const SC_OxBankerLeaveFlag_MsgID SC_OxBankerLeaveFlag_MsgID_MsgID_MIN = SC_OxBankerLeaveFlag_MsgID_ID;
const SC_OxBankerLeaveFlag_MsgID SC_OxBankerLeaveFlag_MsgID_MsgID_MAX = SC_OxBankerLeaveFlag_MsgID_ID;
const int SC_OxBankerLeaveFlag_MsgID_MsgID_ARRAYSIZE = SC_OxBankerLeaveFlag_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxBankerLeaveFlag_MsgID_descriptor();
inline const ::std::string& SC_OxBankerLeaveFlag_MsgID_Name(SC_OxBankerLeaveFlag_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxBankerLeaveFlag_MsgID_descriptor(), value);
}
inline bool SC_OxBankerLeaveFlag_MsgID_Parse(
    const ::std::string& name, SC_OxBankerLeaveFlag_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxBankerLeaveFlag_MsgID>(
    SC_OxBankerLeaveFlag_MsgID_descriptor(), name, value);
}
enum CS_OxLeaveGame_MsgID {
  CS_OxLeaveGame_MsgID_ID = 18032
};
bool CS_OxLeaveGame_MsgID_IsValid(int value);
const CS_OxLeaveGame_MsgID CS_OxLeaveGame_MsgID_MsgID_MIN = CS_OxLeaveGame_MsgID_ID;
const CS_OxLeaveGame_MsgID CS_OxLeaveGame_MsgID_MsgID_MAX = CS_OxLeaveGame_MsgID_ID;
const int CS_OxLeaveGame_MsgID_MsgID_ARRAYSIZE = CS_OxLeaveGame_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_OxLeaveGame_MsgID_descriptor();
inline const ::std::string& CS_OxLeaveGame_MsgID_Name(CS_OxLeaveGame_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_OxLeaveGame_MsgID_descriptor(), value);
}
inline bool CS_OxLeaveGame_MsgID_Parse(
    const ::std::string& name, CS_OxLeaveGame_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_OxLeaveGame_MsgID>(
    CS_OxLeaveGame_MsgID_descriptor(), name, value);
}
enum SC_Ox_config_info_MsgID {
  SC_Ox_config_info_MsgID_ID = 18033
};
bool SC_Ox_config_info_MsgID_IsValid(int value);
const SC_Ox_config_info_MsgID SC_Ox_config_info_MsgID_MsgID_MIN = SC_Ox_config_info_MsgID_ID;
const SC_Ox_config_info_MsgID SC_Ox_config_info_MsgID_MsgID_MAX = SC_Ox_config_info_MsgID_ID;
const int SC_Ox_config_info_MsgID_MsgID_ARRAYSIZE = SC_Ox_config_info_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_Ox_config_info_MsgID_descriptor();
inline const ::std::string& SC_Ox_config_info_MsgID_Name(SC_Ox_config_info_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_Ox_config_info_MsgID_descriptor(), value);
}
inline bool SC_Ox_config_info_MsgID_Parse(
    const ::std::string& name, SC_Ox_config_info_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_Ox_config_info_MsgID>(
    SC_Ox_config_info_MsgID_descriptor(), name, value);
}
enum SC_CardCompareResult_MsgID {
  SC_CardCompareResult_MsgID_ID = 18034
};
bool SC_CardCompareResult_MsgID_IsValid(int value);
const SC_CardCompareResult_MsgID SC_CardCompareResult_MsgID_MsgID_MIN = SC_CardCompareResult_MsgID_ID;
const SC_CardCompareResult_MsgID SC_CardCompareResult_MsgID_MsgID_MAX = SC_CardCompareResult_MsgID_ID;
const int SC_CardCompareResult_MsgID_MsgID_ARRAYSIZE = SC_CardCompareResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_CardCompareResult_MsgID_descriptor();
inline const ::std::string& SC_CardCompareResult_MsgID_Name(SC_CardCompareResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_CardCompareResult_MsgID_descriptor(), value);
}
inline bool SC_CardCompareResult_MsgID_Parse(
    const ::std::string& name, SC_CardCompareResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_CardCompareResult_MsgID>(
    SC_CardCompareResult_MsgID_descriptor(), name, value);
}
enum CS_OxGetBetCfg_MsgID {
  CS_OxGetBetCfg_MsgID_ID = 18035
};
bool CS_OxGetBetCfg_MsgID_IsValid(int value);
const CS_OxGetBetCfg_MsgID CS_OxGetBetCfg_MsgID_MsgID_MIN = CS_OxGetBetCfg_MsgID_ID;
const CS_OxGetBetCfg_MsgID CS_OxGetBetCfg_MsgID_MsgID_MAX = CS_OxGetBetCfg_MsgID_ID;
const int CS_OxGetBetCfg_MsgID_MsgID_ARRAYSIZE = CS_OxGetBetCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_OxGetBetCfg_MsgID_descriptor();
inline const ::std::string& CS_OxGetBetCfg_MsgID_Name(CS_OxGetBetCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_OxGetBetCfg_MsgID_descriptor(), value);
}
inline bool CS_OxGetBetCfg_MsgID_Parse(
    const ::std::string& name, CS_OxGetBetCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_OxGetBetCfg_MsgID>(
    CS_OxGetBetCfg_MsgID_descriptor(), name, value);
}
enum SC_OxGetBetCfg_MsgID {
  SC_OxGetBetCfg_MsgID_ID = 18036
};
bool SC_OxGetBetCfg_MsgID_IsValid(int value);
const SC_OxGetBetCfg_MsgID SC_OxGetBetCfg_MsgID_MsgID_MIN = SC_OxGetBetCfg_MsgID_ID;
const SC_OxGetBetCfg_MsgID SC_OxGetBetCfg_MsgID_MsgID_MAX = SC_OxGetBetCfg_MsgID_ID;
const int SC_OxGetBetCfg_MsgID_MsgID_ARRAYSIZE = SC_OxGetBetCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_OxGetBetCfg_MsgID_descriptor();
inline const ::std::string& SC_OxGetBetCfg_MsgID_Name(SC_OxGetBetCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_OxGetBetCfg_MsgID_descriptor(), value);
}
inline bool SC_OxGetBetCfg_MsgID_Parse(
    const ::std::string& name, SC_OxGetBetCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_OxGetBetCfg_MsgID>(
    SC_OxGetBetCfg_MsgID_descriptor(), name, value);
}
enum OX_CARD_TYPE {
  OX_CARD_TYPE_ERROR = 0,
  OX_CARD_TYPE_OX_NONE = 100,
  OX_CARD_TYPE_OX_ONE = 101,
  OX_CARD_TYPE_OX_TWO = 102,
  OX_CARD_TYPE_FOUR_KING = 103,
  OX_CARD_TYPE_FIVE_KING = 104,
  OX_CARD_TYPE_FOUR_SAMES = 105,
  OX_CARD_TYPE_FIVE_SAMLL = 106
};
bool OX_CARD_TYPE_IsValid(int value);
const OX_CARD_TYPE OX_CARD_TYPE_MIN = OX_CARD_TYPE_ERROR;
const OX_CARD_TYPE OX_CARD_TYPE_MAX = OX_CARD_TYPE_FIVE_SAMLL;
const int OX_CARD_TYPE_ARRAYSIZE = OX_CARD_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OX_CARD_TYPE_descriptor();
inline const ::std::string& OX_CARD_TYPE_Name(OX_CARD_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OX_CARD_TYPE_descriptor(), value);
}
inline bool OX_CARD_TYPE_Parse(
    const ::std::string& name, OX_CARD_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OX_CARD_TYPE>(
    OX_CARD_TYPE_descriptor(), name, value);
}
enum OX_SCORE_AREA {
  OX_AREA_ONE = 1,
  OX_AREA_TWO = 2,
  OX_AREA_THREE = 3,
  OX_AREA_FOUR = 4
};
bool OX_SCORE_AREA_IsValid(int value);
const OX_SCORE_AREA OX_SCORE_AREA_MIN = OX_AREA_ONE;
const OX_SCORE_AREA OX_SCORE_AREA_MAX = OX_AREA_FOUR;
const int OX_SCORE_AREA_ARRAYSIZE = OX_SCORE_AREA_MAX + 1;

const ::google::protobuf::EnumDescriptor* OX_SCORE_AREA_descriptor();
inline const ::std::string& OX_SCORE_AREA_Name(OX_SCORE_AREA value) {
  return ::google::protobuf::internal::NameOfEnum(
    OX_SCORE_AREA_descriptor(), value);
}
inline bool OX_SCORE_AREA_Parse(
    const ::std::string& name, OX_SCORE_AREA* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OX_SCORE_AREA>(
    OX_SCORE_AREA_descriptor(), name, value);
}
enum Banker_Result {
  APPLYFORBANKER_OK = 0,
  APPLYFORBANKER_FAILED = 1,
  FORBIDAPPLYBANKER_FLAG = 2
};
bool Banker_Result_IsValid(int value);
const Banker_Result Banker_Result_MIN = APPLYFORBANKER_OK;
const Banker_Result Banker_Result_MAX = FORBIDAPPLYBANKER_FLAG;
const int Banker_Result_ARRAYSIZE = Banker_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* Banker_Result_descriptor();
inline const ::std::string& Banker_Result_Name(Banker_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    Banker_Result_descriptor(), value);
}
inline bool Banker_Result_Parse(
    const ::std::string& name, Banker_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Banker_Result>(
    Banker_Result_descriptor(), name, value);
}
enum Bet_Result {
  BET_OK = 0,
  BET_MAX = 1,
  MONEY_ERROR = 2,
  MONEY_LIMIT = 3,
  OTHER_ERROR = 4
};
bool Bet_Result_IsValid(int value);
const Bet_Result Bet_Result_MIN = BET_OK;
const Bet_Result Bet_Result_MAX = OTHER_ERROR;
const int Bet_Result_ARRAYSIZE = Bet_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* Bet_Result_descriptor();
inline const ::std::string& Bet_Result_Name(Bet_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    Bet_Result_descriptor(), value);
}
inline bool Bet_Result_Parse(
    const ::std::string& name, Bet_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Bet_Result>(
    Bet_Result_descriptor(), name, value);
}
enum BankerLeave_Result {
  LEAVELFORBANKER_OK = 0,
  LEAVELFORBANKER_FAILED = 1
};
bool BankerLeave_Result_IsValid(int value);
const BankerLeave_Result BankerLeave_Result_MIN = LEAVELFORBANKER_OK;
const BankerLeave_Result BankerLeave_Result_MAX = LEAVELFORBANKER_FAILED;
const int BankerLeave_Result_ARRAYSIZE = BankerLeave_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* BankerLeave_Result_descriptor();
inline const ::std::string& BankerLeave_Result_Name(BankerLeave_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    BankerLeave_Result_descriptor(), value);
}
inline bool BankerLeave_Result_Parse(
    const ::std::string& name, BankerLeave_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BankerLeave_Result>(
    BankerLeave_Result_descriptor(), name, value);
}
// ===================================================================

class SC_OxStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxStart) */ {
 public:
  SC_OxStart();
  virtual ~SC_OxStart();

  SC_OxStart(const SC_OxStart& from);

  inline SC_OxStart& operator=(const SC_OxStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxStart& default_instance();

  static inline const SC_OxStart* internal_default_instance() {
    return reinterpret_cast<const SC_OxStart*>(
               &_SC_OxStart_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SC_OxStart* other);

  // implements Message ----------------------------------------------

  inline SC_OxStart* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxStart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxStart& from);
  void MergeFrom(const SC_OxStart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxStart_MsgID MsgID;
  static const MsgID ID =
    SC_OxStart_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxStart_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxStart_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxStart_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxStart_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxStart_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxStart_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxStart_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 cur_chair_id = 1;
  bool has_cur_chair_id() const;
  void clear_cur_chair_id();
  static const int kCurChairIdFieldNumber = 1;
  ::google::protobuf::int32 cur_chair_id() const;
  void set_cur_chair_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_OxStart)
 private:
  void set_has_cur_chair_id();
  void clear_has_cur_chair_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 cur_chair_id_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_OxCallBanker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_OxCallBanker) */ {
 public:
  CS_OxCallBanker();
  virtual ~CS_OxCallBanker();

  CS_OxCallBanker(const CS_OxCallBanker& from);

  inline CS_OxCallBanker& operator=(const CS_OxCallBanker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_OxCallBanker& default_instance();

  static inline const CS_OxCallBanker* internal_default_instance() {
    return reinterpret_cast<const CS_OxCallBanker*>(
               &_CS_OxCallBanker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CS_OxCallBanker* other);

  // implements Message ----------------------------------------------

  inline CS_OxCallBanker* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_OxCallBanker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_OxCallBanker& from);
  void MergeFrom(const CS_OxCallBanker& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_OxCallBanker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_OxCallBanker_MsgID MsgID;
  static const MsgID ID =
    CS_OxCallBanker_MsgID_ID;
  static const MsgID Target =
    CS_OxCallBanker_MsgID_Target;
  static inline bool MsgID_IsValid(int value) {
    return CS_OxCallBanker_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_OxCallBanker_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_OxCallBanker_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_OxCallBanker_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_OxCallBanker_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_OxCallBanker_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_OxCallBanker_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bool call_banker = 1;
  bool has_call_banker() const;
  void clear_call_banker();
  static const int kCallBankerFieldNumber = 1;
  bool call_banker() const;
  void set_call_banker(bool value);

  // @@protoc_insertion_point(class_scope:CS_OxCallBanker)
 private:
  void set_has_call_banker();
  void clear_has_call_banker();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool call_banker_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxCallBanker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxCallBanker) */ {
 public:
  SC_OxCallBanker();
  virtual ~SC_OxCallBanker();

  SC_OxCallBanker(const SC_OxCallBanker& from);

  inline SC_OxCallBanker& operator=(const SC_OxCallBanker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxCallBanker& default_instance();

  static inline const SC_OxCallBanker* internal_default_instance() {
    return reinterpret_cast<const SC_OxCallBanker*>(
               &_SC_OxCallBanker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SC_OxCallBanker* other);

  // implements Message ----------------------------------------------

  inline SC_OxCallBanker* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxCallBanker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxCallBanker& from);
  void MergeFrom(const SC_OxCallBanker& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxCallBanker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxCallBanker_MsgID MsgID;
  static const MsgID ID =
    SC_OxCallBanker_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxCallBanker_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxCallBanker_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxCallBanker_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxCallBanker_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxCallBanker_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxCallBanker_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxCallBanker_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 cur_chair_id = 1;
  bool has_cur_chair_id() const;
  void clear_cur_chair_id();
  static const int kCurChairIdFieldNumber = 1;
  ::google::protobuf::int32 cur_chair_id() const;
  void set_cur_chair_id(::google::protobuf::int32 value);

  // optional int32 call_chair_id = 2;
  bool has_call_chair_id() const;
  void clear_call_chair_id();
  static const int kCallChairIdFieldNumber = 2;
  ::google::protobuf::int32 call_chair_id() const;
  void set_call_chair_id(::google::protobuf::int32 value);

  // optional bool call_banker = 3;
  bool has_call_banker() const;
  void clear_call_banker();
  static const int kCallBankerFieldNumber = 3;
  bool call_banker() const;
  void set_call_banker(bool value);

  // @@protoc_insertion_point(class_scope:SC_OxCallBanker)
 private:
  void set_has_cur_chair_id();
  void clear_has_cur_chair_id();
  void set_has_call_chair_id();
  void clear_has_call_chair_id();
  void set_has_call_banker();
  void clear_has_call_banker();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 cur_chair_id_;
  ::google::protobuf::int32 call_chair_id_;
  bool call_banker_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxAddScoreStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxAddScoreStatus) */ {
 public:
  SC_OxAddScoreStatus();
  virtual ~SC_OxAddScoreStatus();

  SC_OxAddScoreStatus(const SC_OxAddScoreStatus& from);

  inline SC_OxAddScoreStatus& operator=(const SC_OxAddScoreStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxAddScoreStatus& default_instance();

  static inline const SC_OxAddScoreStatus* internal_default_instance() {
    return reinterpret_cast<const SC_OxAddScoreStatus*>(
               &_SC_OxAddScoreStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SC_OxAddScoreStatus* other);

  // implements Message ----------------------------------------------

  inline SC_OxAddScoreStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxAddScoreStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxAddScoreStatus& from);
  void MergeFrom(const SC_OxAddScoreStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxAddScoreStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxAddScoreStatus_MsgID MsgID;
  static const MsgID ID =
    SC_OxAddScoreStatus_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxAddScoreStatus_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxAddScoreStatus_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxAddScoreStatus_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxAddScoreStatus_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxAddScoreStatus_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxAddScoreStatus_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxAddScoreStatus_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 max_score = 2;
  bool has_max_score() const;
  void clear_max_score();
  static const int kMaxScoreFieldNumber = 2;
  ::google::protobuf::int64 max_score() const;
  void set_max_score(::google::protobuf::int64 value);

  // optional int32 banker_chair_id = 1;
  bool has_banker_chair_id() const;
  void clear_banker_chair_id();
  static const int kBankerChairIdFieldNumber = 1;
  ::google::protobuf::int32 banker_chair_id() const;
  void set_banker_chair_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_OxAddScoreStatus)
 private:
  void set_has_banker_chair_id();
  void clear_has_banker_chair_id();
  void set_has_max_score();
  void clear_has_max_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 max_score_;
  ::google::protobuf::int32 banker_chair_id_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_OxAddScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_OxAddScore) */ {
 public:
  CS_OxAddScore();
  virtual ~CS_OxAddScore();

  CS_OxAddScore(const CS_OxAddScore& from);

  inline CS_OxAddScore& operator=(const CS_OxAddScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_OxAddScore& default_instance();

  static inline const CS_OxAddScore* internal_default_instance() {
    return reinterpret_cast<const CS_OxAddScore*>(
               &_CS_OxAddScore_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CS_OxAddScore* other);

  // implements Message ----------------------------------------------

  inline CS_OxAddScore* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_OxAddScore* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_OxAddScore& from);
  void MergeFrom(const CS_OxAddScore& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_OxAddScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_OxAddScore_MsgID MsgID;
  static const MsgID ID =
    CS_OxAddScore_MsgID_ID;
  static const MsgID Target =
    CS_OxAddScore_MsgID_Target;
  static inline bool MsgID_IsValid(int value) {
    return CS_OxAddScore_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_OxAddScore_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_OxAddScore_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_OxAddScore_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_OxAddScore_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_OxAddScore_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_OxAddScore_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 score_area = 2;
  bool has_score_area() const;
  void clear_score_area();
  static const int kScoreAreaFieldNumber = 2;
  ::google::protobuf::int32 score_area() const;
  void set_score_area(::google::protobuf::int32 value);

  // optional int64 score = 3;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 3;
  ::google::protobuf::int64 score() const;
  void set_score(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CS_OxAddScore)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_score_area();
  void clear_has_score_area();
  void set_has_score();
  void clear_has_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 score_area_;
  ::google::protobuf::int64 score_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxAddScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxAddScore) */ {
 public:
  SC_OxAddScore();
  virtual ~SC_OxAddScore();

  SC_OxAddScore(const SC_OxAddScore& from);

  inline SC_OxAddScore& operator=(const SC_OxAddScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxAddScore& default_instance();

  static inline const SC_OxAddScore* internal_default_instance() {
    return reinterpret_cast<const SC_OxAddScore*>(
               &_SC_OxAddScore_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SC_OxAddScore* other);

  // implements Message ----------------------------------------------

  inline SC_OxAddScore* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxAddScore* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxAddScore& from);
  void MergeFrom(const SC_OxAddScore& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxAddScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxAddScore_MsgID MsgID;
  static const MsgID ID =
    SC_OxAddScore_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxAddScore_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxAddScore_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxAddScore_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxAddScore_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxAddScore_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxAddScore_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxAddScore_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 add_score_chair_id = 1;
  bool has_add_score_chair_id() const;
  void clear_add_score_chair_id();
  static const int kAddScoreChairIdFieldNumber = 1;
  ::google::protobuf::int32 add_score_chair_id() const;
  void set_add_score_chair_id(::google::protobuf::int32 value);

  // optional int32 score_area = 2;
  bool has_score_area() const;
  void clear_score_area();
  static const int kScoreAreaFieldNumber = 2;
  ::google::protobuf::int32 score_area() const;
  void set_score_area(::google::protobuf::int32 value);

  // optional int64 score = 3;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 3;
  ::google::protobuf::int64 score() const;
  void set_score(::google::protobuf::int64 value);

  // optional int64 player_bet_this_area_money = 4;
  bool has_player_bet_this_area_money() const;
  void clear_player_bet_this_area_money();
  static const int kPlayerBetThisAreaMoneyFieldNumber = 4;
  ::google::protobuf::int64 player_bet_this_area_money() const;
  void set_player_bet_this_area_money(::google::protobuf::int64 value);

  // optional int64 money = 5;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 5;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SC_OxAddScore)
 private:
  void set_has_add_score_chair_id();
  void clear_has_add_score_chair_id();
  void set_has_score_area();
  void clear_has_score_area();
  void set_has_score();
  void clear_has_score();
  void set_has_player_bet_this_area_money();
  void clear_has_player_bet_this_area_money();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 add_score_chair_id_;
  ::google::protobuf::int32 score_area_;
  ::google::protobuf::int64 score_;
  ::google::protobuf::int64 player_bet_this_area_money_;
  ::google::protobuf::int64 money_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Cards : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cards) */ {
 public:
  Cards();
  virtual ~Cards();

  Cards(const Cards& from);

  inline Cards& operator=(const Cards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cards& default_instance();

  static inline const Cards* internal_default_instance() {
    return reinterpret_cast<const Cards*>(
               &_Cards_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Cards* other);

  // implements Message ----------------------------------------------

  inline Cards* New() const PROTOBUF_FINAL { return New(NULL); }

  Cards* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Cards& from);
  void MergeFrom(const Cards& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Cards* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 card = 2;
  int card_size() const;
  void clear_card();
  static const int kCardFieldNumber = 2;
  ::google::protobuf::int32 card(int index) const;
  void set_card(int index, ::google::protobuf::int32 value);
  void add_card(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      card() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_card();

  // optional int32 score_area = 1;
  bool has_score_area() const;
  void clear_score_area();
  static const int kScoreAreaFieldNumber = 1;
  ::google::protobuf::int32 score_area() const;
  void set_score_area(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Cards)
 private:
  void set_has_score_area();
  void clear_has_score_area();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > card_;
  ::google::protobuf::int32 score_area_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxDealCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxDealCard) */ {
 public:
  SC_OxDealCard();
  virtual ~SC_OxDealCard();

  SC_OxDealCard(const SC_OxDealCard& from);

  inline SC_OxDealCard& operator=(const SC_OxDealCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxDealCard& default_instance();

  static inline const SC_OxDealCard* internal_default_instance() {
    return reinterpret_cast<const SC_OxDealCard*>(
               &_SC_OxDealCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SC_OxDealCard* other);

  // implements Message ----------------------------------------------

  inline SC_OxDealCard* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxDealCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxDealCard& from);
  void MergeFrom(const SC_OxDealCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxDealCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxDealCard_MsgID MsgID;
  static const MsgID ID =
    SC_OxDealCard_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxDealCard_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxDealCard_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxDealCard_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxDealCard_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxDealCard_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxDealCard_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxDealCard_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .Cards pb_cards = 1;
  int pb_cards_size() const;
  void clear_pb_cards();
  static const int kPbCardsFieldNumber = 1;
  const ::Cards& pb_cards(int index) const;
  ::Cards* mutable_pb_cards(int index);
  ::Cards* add_pb_cards();
  ::google::protobuf::RepeatedPtrField< ::Cards >*
      mutable_pb_cards();
  const ::google::protobuf::RepeatedPtrField< ::Cards >&
      pb_cards() const;

  // @@protoc_insertion_point(class_scope:SC_OxDealCard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Cards > pb_cards_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_OxOpenCards : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_OxOpenCards) */ {
 public:
  CS_OxOpenCards();
  virtual ~CS_OxOpenCards();

  CS_OxOpenCards(const CS_OxOpenCards& from);

  inline CS_OxOpenCards& operator=(const CS_OxOpenCards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_OxOpenCards& default_instance();

  static inline const CS_OxOpenCards* internal_default_instance() {
    return reinterpret_cast<const CS_OxOpenCards*>(
               &_CS_OxOpenCards_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CS_OxOpenCards* other);

  // implements Message ----------------------------------------------

  inline CS_OxOpenCards* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_OxOpenCards* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_OxOpenCards& from);
  void MergeFrom(const CS_OxOpenCards& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_OxOpenCards* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_OxOpenCards_MsgID MsgID;
  static const MsgID ID =
    CS_OxOpenCards_MsgID_ID;
  static const MsgID Target =
    CS_OxOpenCards_MsgID_Target;
  static inline bool MsgID_IsValid(int value) {
    return CS_OxOpenCards_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_OxOpenCards_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_OxOpenCards_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_OxOpenCards_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_OxOpenCards_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_OxOpenCards_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_OxOpenCards_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_OxOpenCards)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxOpenCards : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxOpenCards) */ {
 public:
  SC_OxOpenCards();
  virtual ~SC_OxOpenCards();

  SC_OxOpenCards(const SC_OxOpenCards& from);

  inline SC_OxOpenCards& operator=(const SC_OxOpenCards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxOpenCards& default_instance();

  static inline const SC_OxOpenCards* internal_default_instance() {
    return reinterpret_cast<const SC_OxOpenCards*>(
               &_SC_OxOpenCards_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SC_OxOpenCards* other);

  // implements Message ----------------------------------------------

  inline SC_OxOpenCards* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxOpenCards* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxOpenCards& from);
  void MergeFrom(const SC_OxOpenCards& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxOpenCards* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxOpenCards_MsgID MsgID;
  static const MsgID ID =
    SC_OxOpenCards_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxOpenCards_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxOpenCards_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxOpenCards_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxOpenCards_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxOpenCards_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxOpenCards_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxOpenCards_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 open_chair_id = 2;
  bool has_open_chair_id() const;
  void clear_open_chair_id();
  static const int kOpenChairIdFieldNumber = 2;
  ::google::protobuf::int32 open_chair_id() const;
  void set_open_chair_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_OxOpenCards)
 private:
  void set_has_open_chair_id();
  void clear_has_open_chair_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 open_chair_id_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OxPlayerConclude : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OxPlayerConclude) */ {
 public:
  OxPlayerConclude();
  virtual ~OxPlayerConclude();

  OxPlayerConclude(const OxPlayerConclude& from);

  inline OxPlayerConclude& operator=(const OxPlayerConclude& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OxPlayerConclude& default_instance();

  static inline const OxPlayerConclude* internal_default_instance() {
    return reinterpret_cast<const OxPlayerConclude*>(
               &_OxPlayerConclude_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(OxPlayerConclude* other);

  // implements Message ----------------------------------------------

  inline OxPlayerConclude* New() const PROTOBUF_FINAL { return New(NULL); }

  OxPlayerConclude* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OxPlayerConclude& from);
  void MergeFrom(const OxPlayerConclude& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OxPlayerConclude* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 pay_score = 2;
  bool has_pay_score() const;
  void clear_pay_score();
  static const int kPayScoreFieldNumber = 2;
  ::google::protobuf::int64 pay_score() const;
  void set_pay_score(::google::protobuf::int64 value);

  // optional int32 chair_id = 1;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional int32 system_tax = 4;
  bool has_system_tax() const;
  void clear_system_tax();
  static const int kSystemTaxFieldNumber = 4;
  ::google::protobuf::int32 system_tax() const;
  void set_system_tax(::google::protobuf::int32 value);

  // optional int64 earn_score = 3;
  bool has_earn_score() const;
  void clear_earn_score();
  static const int kEarnScoreFieldNumber = 3;
  ::google::protobuf::int64 earn_score() const;
  void set_earn_score(::google::protobuf::int64 value);

  // optional int64 banker_score = 5;
  bool has_banker_score() const;
  void clear_banker_score();
  static const int kBankerScoreFieldNumber = 5;
  ::google::protobuf::int64 banker_score() const;
  void set_banker_score(::google::protobuf::int64 value);

  // optional int64 money = 7;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 7;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 all_win_or_lose_flag = 6;
  bool has_all_win_or_lose_flag() const;
  void clear_all_win_or_lose_flag();
  static const int kAllWinOrLoseFlagFieldNumber = 6;
  ::google::protobuf::int32 all_win_or_lose_flag() const;
  void set_all_win_or_lose_flag(::google::protobuf::int32 value);

  // optional int32 tax_show_flag = 8;
  bool has_tax_show_flag() const;
  void clear_tax_show_flag();
  static const int kTaxShowFlagFieldNumber = 8;
  ::google::protobuf::int32 tax_show_flag() const;
  void set_tax_show_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OxPlayerConclude)
 private:
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_pay_score();
  void clear_has_pay_score();
  void set_has_earn_score();
  void clear_has_earn_score();
  void set_has_system_tax();
  void clear_has_system_tax();
  void set_has_banker_score();
  void clear_has_banker_score();
  void set_has_all_win_or_lose_flag();
  void clear_has_all_win_or_lose_flag();
  void set_has_money();
  void clear_has_money();
  void set_has_tax_show_flag();
  void clear_has_tax_show_flag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 pay_score_;
  ::google::protobuf::int32 chair_id_;
  ::google::protobuf::int32 system_tax_;
  ::google::protobuf::int64 earn_score_;
  ::google::protobuf::int64 banker_score_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 all_win_or_lose_flag_;
  ::google::protobuf::int32 tax_show_flag_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxEnd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxEnd) */ {
 public:
  SC_OxEnd();
  virtual ~SC_OxEnd();

  SC_OxEnd(const SC_OxEnd& from);

  inline SC_OxEnd& operator=(const SC_OxEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxEnd& default_instance();

  static inline const SC_OxEnd* internal_default_instance() {
    return reinterpret_cast<const SC_OxEnd*>(
               &_SC_OxEnd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SC_OxEnd* other);

  // implements Message ----------------------------------------------

  inline SC_OxEnd* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxEnd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxEnd& from);
  void MergeFrom(const SC_OxEnd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxEnd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxEnd_MsgID MsgID;
  static const MsgID ID =
    SC_OxEnd_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxEnd_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxEnd_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxEnd_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxEnd_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxEnd_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxEnd_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxEnd_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .OxPlayerConclude pb_conclude = 1;
  int pb_conclude_size() const;
  void clear_pb_conclude();
  static const int kPbConcludeFieldNumber = 1;
  const ::OxPlayerConclude& pb_conclude(int index) const;
  ::OxPlayerConclude* mutable_pb_conclude(int index);
  ::OxPlayerConclude* add_pb_conclude();
  ::google::protobuf::RepeatedPtrField< ::OxPlayerConclude >*
      mutable_pb_conclude();
  const ::google::protobuf::RepeatedPtrField< ::OxPlayerConclude >&
      pb_conclude() const;

  // repeated .Cards pb_cards = 2;
  int pb_cards_size() const;
  void clear_pb_cards();
  static const int kPbCardsFieldNumber = 2;
  const ::Cards& pb_cards(int index) const;
  ::Cards* mutable_pb_cards(int index);
  ::Cards* add_pb_cards();
  ::google::protobuf::RepeatedPtrField< ::Cards >*
      mutable_pb_cards();
  const ::google::protobuf::RepeatedPtrField< ::Cards >&
      pb_cards() const;

  // @@protoc_insertion_point(class_scope:SC_OxEnd)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::OxPlayerConclude > pb_conclude_;
  ::google::protobuf::RepeatedPtrField< ::Cards > pb_cards_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_OxRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_OxRecord) */ {
 public:
  CS_OxRecord();
  virtual ~CS_OxRecord();

  CS_OxRecord(const CS_OxRecord& from);

  inline CS_OxRecord& operator=(const CS_OxRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_OxRecord& default_instance();

  static inline const CS_OxRecord* internal_default_instance() {
    return reinterpret_cast<const CS_OxRecord*>(
               &_CS_OxRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CS_OxRecord* other);

  // implements Message ----------------------------------------------

  inline CS_OxRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_OxRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_OxRecord& from);
  void MergeFrom(const CS_OxRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_OxRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_OxRecord_MsgID MsgID;
  static const MsgID ID =
    CS_OxRecord_MsgID_ID;
  static const MsgID Target =
    CS_OxRecord_MsgID_Target;
  static inline bool MsgID_IsValid(int value) {
    return CS_OxRecord_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_OxRecord_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_OxRecord_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_OxRecord_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_OxRecord_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_OxRecord_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_OxRecord_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_OxRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RecordResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RecordResult) */ {
 public:
  RecordResult();
  virtual ~RecordResult();

  RecordResult(const RecordResult& from);

  inline RecordResult& operator=(const RecordResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecordResult& default_instance();

  static inline const RecordResult* internal_default_instance() {
    return reinterpret_cast<const RecordResult*>(
               &_RecordResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(RecordResult* other);

  // implements Message ----------------------------------------------

  inline RecordResult* New() const PROTOBUF_FINAL { return New(NULL); }

  RecordResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecordResult& from);
  void MergeFrom(const RecordResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecordResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool result = 1;
  int result_size() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result(int index) const;
  void set_result(int index, bool value);
  void add_result(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      result() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_result();

  // @@protoc_insertion_point(class_scope:RecordResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< bool > result_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxRecord) */ {
 public:
  SC_OxRecord();
  virtual ~SC_OxRecord();

  SC_OxRecord(const SC_OxRecord& from);

  inline SC_OxRecord& operator=(const SC_OxRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxRecord& default_instance();

  static inline const SC_OxRecord* internal_default_instance() {
    return reinterpret_cast<const SC_OxRecord*>(
               &_SC_OxRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(SC_OxRecord* other);

  // implements Message ----------------------------------------------

  inline SC_OxRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxRecord& from);
  void MergeFrom(const SC_OxRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxRecord_MsgID MsgID;
  static const MsgID ID =
    SC_OxRecord_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxRecord_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxRecord_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxRecord_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxRecord_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxRecord_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxRecord_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxRecord_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .RecordResult pb_recordresult = 1;
  int pb_recordresult_size() const;
  void clear_pb_recordresult();
  static const int kPbRecordresultFieldNumber = 1;
  const ::RecordResult& pb_recordresult(int index) const;
  ::RecordResult* mutable_pb_recordresult(int index);
  ::RecordResult* add_pb_recordresult();
  ::google::protobuf::RepeatedPtrField< ::RecordResult >*
      mutable_pb_recordresult();
  const ::google::protobuf::RepeatedPtrField< ::RecordResult >&
      pb_recordresult() const;

  // @@protoc_insertion_point(class_scope:SC_OxRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RecordResult > pb_recordresult_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_OxTop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_OxTop) */ {
 public:
  CS_OxTop();
  virtual ~CS_OxTop();

  CS_OxTop(const CS_OxTop& from);

  inline CS_OxTop& operator=(const CS_OxTop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_OxTop& default_instance();

  static inline const CS_OxTop* internal_default_instance() {
    return reinterpret_cast<const CS_OxTop*>(
               &_CS_OxTop_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CS_OxTop* other);

  // implements Message ----------------------------------------------

  inline CS_OxTop* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_OxTop* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_OxTop& from);
  void MergeFrom(const CS_OxTop& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_OxTop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_OxTop_MsgID MsgID;
  static const MsgID ID =
    CS_OxTop_MsgID_ID;
  static const MsgID Target =
    CS_OxTop_MsgID_Target;
  static inline bool MsgID_IsValid(int value) {
    return CS_OxTop_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_OxTop_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_OxTop_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_OxTop_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_OxTop_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_OxTop_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_OxTop_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_OxTop)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerTopInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerTopInfo) */ {
 public:
  PlayerTopInfo();
  virtual ~PlayerTopInfo();

  PlayerTopInfo(const PlayerTopInfo& from);

  inline PlayerTopInfo& operator=(const PlayerTopInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerTopInfo& default_instance();

  static inline const PlayerTopInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerTopInfo*>(
               &_PlayerTopInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(PlayerTopInfo* other);

  // implements Message ----------------------------------------------

  inline PlayerTopInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerTopInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerTopInfo& from);
  void MergeFrom(const PlayerTopInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerTopInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 head_id = 2;
  bool has_head_id() const;
  void clear_head_id();
  static const int kHeadIdFieldNumber = 2;
  ::google::protobuf::int32 head_id() const;
  void set_head_id(::google::protobuf::int32 value);

  // optional int64 money = 4;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 4;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 header_icon = 5 [default = 0];
  bool has_header_icon() const;
  void clear_header_icon();
  static const int kHeaderIconFieldNumber = 5;
  ::google::protobuf::int32 header_icon() const;
  void set_header_icon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerTopInfo)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_head_id();
  void clear_has_head_id();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_money();
  void clear_has_money();
  void set_has_header_icon();
  void clear_has_header_icon();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 head_id_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 header_icon_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxTop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxTop) */ {
 public:
  SC_OxTop();
  virtual ~SC_OxTop();

  SC_OxTop(const SC_OxTop& from);

  inline SC_OxTop& operator=(const SC_OxTop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxTop& default_instance();

  static inline const SC_OxTop* internal_default_instance() {
    return reinterpret_cast<const SC_OxTop*>(
               &_SC_OxTop_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(SC_OxTop* other);

  // implements Message ----------------------------------------------

  inline SC_OxTop* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxTop* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxTop& from);
  void MergeFrom(const SC_OxTop& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxTop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxTop_MsgID MsgID;
  static const MsgID ID =
    SC_OxTop_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxTop_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxTop_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxTop_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxTop_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxTop_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxTop_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxTop_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PlayerTopInfo pb_player_top_info = 2;
  int pb_player_top_info_size() const;
  void clear_pb_player_top_info();
  static const int kPbPlayerTopInfoFieldNumber = 2;
  const ::PlayerTopInfo& pb_player_top_info(int index) const;
  ::PlayerTopInfo* mutable_pb_player_top_info(int index);
  ::PlayerTopInfo* add_pb_player_top_info();
  ::google::protobuf::RepeatedPtrField< ::PlayerTopInfo >*
      mutable_pb_player_top_info();
  const ::google::protobuf::RepeatedPtrField< ::PlayerTopInfo >&
      pb_player_top_info() const;

  // optional int32 count_all = 1;
  bool has_count_all() const;
  void clear_count_all();
  static const int kCountAllFieldNumber = 1;
  ::google::protobuf::int32 count_all() const;
  void set_count_all(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_OxTop)
 private:
  void set_has_count_all();
  void clear_has_count_all();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PlayerTopInfo > pb_player_top_info_;
  ::google::protobuf::int32 count_all_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BankerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BankerInfo) */ {
 public:
  BankerInfo();
  virtual ~BankerInfo();

  BankerInfo(const BankerInfo& from);

  inline BankerInfo& operator=(const BankerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BankerInfo& default_instance();

  static inline const BankerInfo* internal_default_instance() {
    return reinterpret_cast<const BankerInfo*>(
               &_BankerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(BankerInfo* other);

  // implements Message ----------------------------------------------

  inline BankerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BankerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BankerInfo& from);
  void MergeFrom(const BankerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BankerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 bankertimes = 4;
  bool has_bankertimes() const;
  void clear_bankertimes();
  static const int kBankertimesFieldNumber = 4;
  ::google::protobuf::int32 bankertimes() const;
  void set_bankertimes(::google::protobuf::int32 value);

  // optional int64 money = 3;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int64 max_score = 5;
  bool has_max_score() const;
  void clear_max_score();
  static const int kMaxScoreFieldNumber = 5;
  ::google::protobuf::int64 max_score() const;
  void set_max_score(::google::protobuf::int64 value);

  // optional int64 banker_score = 6;
  bool has_banker_score() const;
  void clear_banker_score();
  static const int kBankerScoreFieldNumber = 6;
  ::google::protobuf::int64 banker_score() const;
  void set_banker_score(::google::protobuf::int64 value);

  // optional int64 left_score = 7;
  bool has_left_score() const;
  void clear_left_score();
  static const int kLeftScoreFieldNumber = 7;
  ::google::protobuf::int64 left_score() const;
  void set_left_score(::google::protobuf::int64 value);

  // optional int32 header_icon = 8 [default = 0];
  bool has_header_icon() const;
  void clear_header_icon();
  static const int kHeaderIconFieldNumber = 8;
  ::google::protobuf::int32 header_icon() const;
  void set_header_icon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BankerInfo)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_money();
  void clear_has_money();
  void set_has_bankertimes();
  void clear_has_bankertimes();
  void set_has_max_score();
  void clear_has_max_score();
  void set_has_banker_score();
  void clear_has_banker_score();
  void set_has_left_score();
  void clear_has_left_score();
  void set_has_header_icon();
  void clear_has_header_icon();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 bankertimes_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int64 max_score_;
  ::google::protobuf::int64 banker_score_;
  ::google::protobuf::int64 left_score_;
  ::google::protobuf::int32 header_icon_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxBankerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxBankerInfo) */ {
 public:
  SC_OxBankerInfo();
  virtual ~SC_OxBankerInfo();

  SC_OxBankerInfo(const SC_OxBankerInfo& from);

  inline SC_OxBankerInfo& operator=(const SC_OxBankerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxBankerInfo& default_instance();

  static inline const SC_OxBankerInfo* internal_default_instance() {
    return reinterpret_cast<const SC_OxBankerInfo*>(
               &_SC_OxBankerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(SC_OxBankerInfo* other);

  // implements Message ----------------------------------------------

  inline SC_OxBankerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxBankerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxBankerInfo& from);
  void MergeFrom(const SC_OxBankerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxBankerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxBankerInfo_MsgID MsgID;
  static const MsgID ID =
    SC_OxBankerInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxBankerInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxBankerInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxBankerInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxBankerInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxBankerInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxBankerInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxBankerInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .BankerInfo pb_banker_info = 1;
  bool has_pb_banker_info() const;
  void clear_pb_banker_info();
  static const int kPbBankerInfoFieldNumber = 1;
  const ::BankerInfo& pb_banker_info() const;
  ::BankerInfo* mutable_pb_banker_info();
  ::BankerInfo* release_pb_banker_info();
  void set_allocated_pb_banker_info(::BankerInfo* pb_banker_info);

  // @@protoc_insertion_point(class_scope:SC_OxBankerInfo)
 private:
  void set_has_pb_banker_info();
  void clear_has_pb_banker_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::BankerInfo* pb_banker_info_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BankerList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BankerList) */ {
 public:
  BankerList();
  virtual ~BankerList();

  BankerList(const BankerList& from);

  inline BankerList& operator=(const BankerList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BankerList& default_instance();

  static inline const BankerList* internal_default_instance() {
    return reinterpret_cast<const BankerList*>(
               &_BankerList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(BankerList* other);

  // implements Message ----------------------------------------------

  inline BankerList* New() const PROTOBUF_FINAL { return New(NULL); }

  BankerList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BankerList& from);
  void MergeFrom(const BankerList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BankerList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 header_icon = 4 [default = 0];
  bool has_header_icon() const;
  void clear_header_icon();
  static const int kHeaderIconFieldNumber = 4;
  ::google::protobuf::int32 header_icon() const;
  void set_header_icon(::google::protobuf::int32 value);

  // optional int64 money = 3;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:BankerList)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_money();
  void clear_has_money();
  void set_has_header_icon();
  void clear_has_header_icon();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 header_icon_;
  ::google::protobuf::int64 money_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxBankerList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxBankerList) */ {
 public:
  SC_OxBankerList();
  virtual ~SC_OxBankerList();

  SC_OxBankerList(const SC_OxBankerList& from);

  inline SC_OxBankerList& operator=(const SC_OxBankerList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxBankerList& default_instance();

  static inline const SC_OxBankerList* internal_default_instance() {
    return reinterpret_cast<const SC_OxBankerList*>(
               &_SC_OxBankerList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(SC_OxBankerList* other);

  // implements Message ----------------------------------------------

  inline SC_OxBankerList* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxBankerList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxBankerList& from);
  void MergeFrom(const SC_OxBankerList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxBankerList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxBankerList_MsgID MsgID;
  static const MsgID ID =
    SC_OxBankerList_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxBankerList_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxBankerList_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxBankerList_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxBankerList_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxBankerList_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxBankerList_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxBankerList_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .BankerList pb_banker_list = 2;
  int pb_banker_list_size() const;
  void clear_pb_banker_list();
  static const int kPbBankerListFieldNumber = 2;
  const ::BankerList& pb_banker_list(int index) const;
  ::BankerList* mutable_pb_banker_list(int index);
  ::BankerList* add_pb_banker_list();
  ::google::protobuf::RepeatedPtrField< ::BankerList >*
      mutable_pb_banker_list();
  const ::google::protobuf::RepeatedPtrField< ::BankerList >&
      pb_banker_list() const;

  // optional int32 banker_num_total = 1;
  bool has_banker_num_total() const;
  void clear_banker_num_total();
  static const int kBankerNumTotalFieldNumber = 1;
  ::google::protobuf::int32 banker_num_total() const;
  void set_banker_num_total(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_OxBankerList)
 private:
  void set_has_banker_num_total();
  void clear_has_banker_num_total();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BankerList > pb_banker_list_;
  ::google::protobuf::int32 banker_num_total_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxForBankerFlag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxForBankerFlag) */ {
 public:
  SC_OxForBankerFlag();
  virtual ~SC_OxForBankerFlag();

  SC_OxForBankerFlag(const SC_OxForBankerFlag& from);

  inline SC_OxForBankerFlag& operator=(const SC_OxForBankerFlag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxForBankerFlag& default_instance();

  static inline const SC_OxForBankerFlag* internal_default_instance() {
    return reinterpret_cast<const SC_OxForBankerFlag*>(
               &_SC_OxForBankerFlag_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(SC_OxForBankerFlag* other);

  // implements Message ----------------------------------------------

  inline SC_OxForBankerFlag* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxForBankerFlag* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxForBankerFlag& from);
  void MergeFrom(const SC_OxForBankerFlag& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxForBankerFlag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxForBankerFlag_MsgID MsgID;
  static const MsgID ID =
    SC_OxForBankerFlag_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxForBankerFlag_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxForBankerFlag_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxForBankerFlag_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxForBankerFlag_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxForBankerFlag_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxForBankerFlag_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxForBankerFlag_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_OxForBankerFlag)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxBetCoin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxBetCoin) */ {
 public:
  SC_OxBetCoin();
  virtual ~SC_OxBetCoin();

  SC_OxBetCoin(const SC_OxBetCoin& from);

  inline SC_OxBetCoin& operator=(const SC_OxBetCoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxBetCoin& default_instance();

  static inline const SC_OxBetCoin* internal_default_instance() {
    return reinterpret_cast<const SC_OxBetCoin*>(
               &_SC_OxBetCoin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(SC_OxBetCoin* other);

  // implements Message ----------------------------------------------

  inline SC_OxBetCoin* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxBetCoin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxBetCoin& from);
  void MergeFrom(const SC_OxBetCoin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxBetCoin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxBetCoin_MsgID MsgID;
  static const MsgID ID =
    SC_OxBetCoin_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxBetCoin_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxBetCoin_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxBetCoin_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxBetCoin_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxBetCoin_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxBetCoin_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxBetCoin_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_OxBetCoin)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxPlayerList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxPlayerList) */ {
 public:
  SC_OxPlayerList();
  virtual ~SC_OxPlayerList();

  SC_OxPlayerList(const SC_OxPlayerList& from);

  inline SC_OxPlayerList& operator=(const SC_OxPlayerList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxPlayerList& default_instance();

  static inline const SC_OxPlayerList* internal_default_instance() {
    return reinterpret_cast<const SC_OxPlayerList*>(
               &_SC_OxPlayerList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(SC_OxPlayerList* other);

  // implements Message ----------------------------------------------

  inline SC_OxPlayerList* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxPlayerList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxPlayerList& from);
  void MergeFrom(const SC_OxPlayerList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxPlayerList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxPlayerList_MsgID MsgID;
  static const MsgID ID =
    SC_OxPlayerList_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxPlayerList_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxPlayerList_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxPlayerList_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxPlayerList_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxPlayerList_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxPlayerList_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxPlayerList_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PlayerTopInfo pb_player_info_list = 2;
  int pb_player_info_list_size() const;
  void clear_pb_player_info_list();
  static const int kPbPlayerInfoListFieldNumber = 2;
  const ::PlayerTopInfo& pb_player_info_list(int index) const;
  ::PlayerTopInfo* mutable_pb_player_info_list(int index);
  ::PlayerTopInfo* add_pb_player_info_list();
  ::google::protobuf::RepeatedPtrField< ::PlayerTopInfo >*
      mutable_pb_player_info_list();
  const ::google::protobuf::RepeatedPtrField< ::PlayerTopInfo >&
      pb_player_info_list() const;

  // optional int32 top_player_total = 1;
  bool has_top_player_total() const;
  void clear_top_player_total();
  static const int kTopPlayerTotalFieldNumber = 1;
  ::google::protobuf::int32 top_player_total() const;
  void set_top_player_total(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_OxPlayerList)
 private:
  void set_has_top_player_total();
  void clear_has_top_player_total();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PlayerTopInfo > pb_player_info_list_;
  ::google::protobuf::int32 top_player_total_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EveryAreaInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EveryAreaInfo) */ {
 public:
  EveryAreaInfo();
  virtual ~EveryAreaInfo();

  EveryAreaInfo(const EveryAreaInfo& from);

  inline EveryAreaInfo& operator=(const EveryAreaInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EveryAreaInfo& default_instance();

  static inline const EveryAreaInfo* internal_default_instance() {
    return reinterpret_cast<const EveryAreaInfo*>(
               &_EveryAreaInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(EveryAreaInfo* other);

  // implements Message ----------------------------------------------

  inline EveryAreaInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EveryAreaInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EveryAreaInfo& from);
  void MergeFrom(const EveryAreaInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EveryAreaInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 max_bet_score = 1;
  bool has_max_bet_score() const;
  void clear_max_bet_score();
  static const int kMaxBetScoreFieldNumber = 1;
  ::google::protobuf::int64 max_bet_score() const;
  void set_max_bet_score(::google::protobuf::int64 value);

  // optional int64 bet_tian_total = 2;
  bool has_bet_tian_total() const;
  void clear_bet_tian_total();
  static const int kBetTianTotalFieldNumber = 2;
  ::google::protobuf::int64 bet_tian_total() const;
  void set_bet_tian_total(::google::protobuf::int64 value);

  // optional int64 bet_di_total = 3;
  bool has_bet_di_total() const;
  void clear_bet_di_total();
  static const int kBetDiTotalFieldNumber = 3;
  ::google::protobuf::int64 bet_di_total() const;
  void set_bet_di_total(::google::protobuf::int64 value);

  // optional int64 bet_xuan_total = 4;
  bool has_bet_xuan_total() const;
  void clear_bet_xuan_total();
  static const int kBetXuanTotalFieldNumber = 4;
  ::google::protobuf::int64 bet_xuan_total() const;
  void set_bet_xuan_total(::google::protobuf::int64 value);

  // optional int64 bet_huang_total = 5;
  bool has_bet_huang_total() const;
  void clear_bet_huang_total();
  static const int kBetHuangTotalFieldNumber = 5;
  ::google::protobuf::int64 bet_huang_total() const;
  void set_bet_huang_total(::google::protobuf::int64 value);

  // optional int64 left_money_bet = 6;
  bool has_left_money_bet() const;
  void clear_left_money_bet();
  static const int kLeftMoneyBetFieldNumber = 6;
  ::google::protobuf::int64 left_money_bet() const;
  void set_left_money_bet(::google::protobuf::int64 value);

  // optional int64 total_all_area_bet_money = 7;
  bool has_total_all_area_bet_money() const;
  void clear_total_all_area_bet_money();
  static const int kTotalAllAreaBetMoneyFieldNumber = 7;
  ::google::protobuf::int64 total_all_area_bet_money() const;
  void set_total_all_area_bet_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:EveryAreaInfo)
 private:
  void set_has_max_bet_score();
  void clear_has_max_bet_score();
  void set_has_bet_tian_total();
  void clear_has_bet_tian_total();
  void set_has_bet_di_total();
  void clear_has_bet_di_total();
  void set_has_bet_xuan_total();
  void clear_has_bet_xuan_total();
  void set_has_bet_huang_total();
  void clear_has_bet_huang_total();
  void set_has_left_money_bet();
  void clear_has_left_money_bet();
  void set_has_total_all_area_bet_money();
  void clear_has_total_all_area_bet_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 max_bet_score_;
  ::google::protobuf::int64 bet_tian_total_;
  ::google::protobuf::int64 bet_di_total_;
  ::google::protobuf::int64 bet_xuan_total_;
  ::google::protobuf::int64 bet_huang_total_;
  ::google::protobuf::int64 left_money_bet_;
  ::google::protobuf::int64 total_all_area_bet_money_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxEveryArea : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxEveryArea) */ {
 public:
  SC_OxEveryArea();
  virtual ~SC_OxEveryArea();

  SC_OxEveryArea(const SC_OxEveryArea& from);

  inline SC_OxEveryArea& operator=(const SC_OxEveryArea& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxEveryArea& default_instance();

  static inline const SC_OxEveryArea* internal_default_instance() {
    return reinterpret_cast<const SC_OxEveryArea*>(
               &_SC_OxEveryArea_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(SC_OxEveryArea* other);

  // implements Message ----------------------------------------------

  inline SC_OxEveryArea* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxEveryArea* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxEveryArea& from);
  void MergeFrom(const SC_OxEveryArea& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxEveryArea* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxEveryArea_MsgID MsgID;
  static const MsgID ID =
    SC_OxEveryArea_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxEveryArea_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxEveryArea_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxEveryArea_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxEveryArea_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxEveryArea_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxEveryArea_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxEveryArea_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .EveryAreaInfo pb_AreaInfo = 1;
  bool has_pb_areainfo() const;
  void clear_pb_areainfo();
  static const int kPbAreaInfoFieldNumber = 1;
  const ::EveryAreaInfo& pb_areainfo() const;
  ::EveryAreaInfo* mutable_pb_areainfo();
  ::EveryAreaInfo* release_pb_areainfo();
  void set_allocated_pb_areainfo(::EveryAreaInfo* pb_areainfo);

  // @@protoc_insertion_point(class_scope:SC_OxEveryArea)
 private:
  void set_has_pb_areainfo();
  void clear_has_pb_areainfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::EveryAreaInfo* pb_areainfo_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_OxApplyForBanker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_OxApplyForBanker) */ {
 public:
  CS_OxApplyForBanker();
  virtual ~CS_OxApplyForBanker();

  CS_OxApplyForBanker(const CS_OxApplyForBanker& from);

  inline CS_OxApplyForBanker& operator=(const CS_OxApplyForBanker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_OxApplyForBanker& default_instance();

  static inline const CS_OxApplyForBanker* internal_default_instance() {
    return reinterpret_cast<const CS_OxApplyForBanker*>(
               &_CS_OxApplyForBanker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(CS_OxApplyForBanker* other);

  // implements Message ----------------------------------------------

  inline CS_OxApplyForBanker* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_OxApplyForBanker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_OxApplyForBanker& from);
  void MergeFrom(const CS_OxApplyForBanker& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_OxApplyForBanker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_OxApplyForBanker_MsgID MsgID;
  static const MsgID ID =
    CS_OxApplyForBanker_MsgID_ID;
  static const MsgID Target =
    CS_OxApplyForBanker_MsgID_Target;
  static inline bool MsgID_IsValid(int value) {
    return CS_OxApplyForBanker_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_OxApplyForBanker_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_OxApplyForBanker_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_OxApplyForBanker_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_OxApplyForBanker_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_OxApplyForBanker_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_OxApplyForBanker_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int64 money = 3;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_OxApplyForBanker)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_OxLeaveForBanker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_OxLeaveForBanker) */ {
 public:
  CS_OxLeaveForBanker();
  virtual ~CS_OxLeaveForBanker();

  CS_OxLeaveForBanker(const CS_OxLeaveForBanker& from);

  inline CS_OxLeaveForBanker& operator=(const CS_OxLeaveForBanker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_OxLeaveForBanker& default_instance();

  static inline const CS_OxLeaveForBanker* internal_default_instance() {
    return reinterpret_cast<const CS_OxLeaveForBanker*>(
               &_CS_OxLeaveForBanker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(CS_OxLeaveForBanker* other);

  // implements Message ----------------------------------------------

  inline CS_OxLeaveForBanker* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_OxLeaveForBanker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_OxLeaveForBanker& from);
  void MergeFrom(const CS_OxLeaveForBanker& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_OxLeaveForBanker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_OxLeaveForBanker_MsgID MsgID;
  static const MsgID ID =
    CS_OxLeaveForBanker_MsgID_ID;
  static const MsgID Target =
    CS_OxLeaveForBanker_MsgID_Target;
  static inline bool MsgID_IsValid(int value) {
    return CS_OxLeaveForBanker_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_OxLeaveForBanker_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_OxLeaveForBanker_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_OxLeaveForBanker_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_OxLeaveForBanker_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_OxLeaveForBanker_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_OxLeaveForBanker_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_OxLeaveForBanker)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_OxCurBankerLeave : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_OxCurBankerLeave) */ {
 public:
  CS_OxCurBankerLeave();
  virtual ~CS_OxCurBankerLeave();

  CS_OxCurBankerLeave(const CS_OxCurBankerLeave& from);

  inline CS_OxCurBankerLeave& operator=(const CS_OxCurBankerLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_OxCurBankerLeave& default_instance();

  static inline const CS_OxCurBankerLeave* internal_default_instance() {
    return reinterpret_cast<const CS_OxCurBankerLeave*>(
               &_CS_OxCurBankerLeave_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(CS_OxCurBankerLeave* other);

  // implements Message ----------------------------------------------

  inline CS_OxCurBankerLeave* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_OxCurBankerLeave* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_OxCurBankerLeave& from);
  void MergeFrom(const CS_OxCurBankerLeave& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_OxCurBankerLeave* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_OxCurBankerLeave_MsgID MsgID;
  static const MsgID ID =
    CS_OxCurBankerLeave_MsgID_ID;
  static const MsgID Target =
    CS_OxCurBankerLeave_MsgID_Target;
  static inline bool MsgID_IsValid(int value) {
    return CS_OxCurBankerLeave_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_OxCurBankerLeave_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_OxCurBankerLeave_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_OxCurBankerLeave_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_OxCurBankerLeave_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_OxCurBankerLeave_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_OxCurBankerLeave_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_OxCurBankerLeave)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxSatusAndDownTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxSatusAndDownTime) */ {
 public:
  SC_OxSatusAndDownTime();
  virtual ~SC_OxSatusAndDownTime();

  SC_OxSatusAndDownTime(const SC_OxSatusAndDownTime& from);

  inline SC_OxSatusAndDownTime& operator=(const SC_OxSatusAndDownTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxSatusAndDownTime& default_instance();

  static inline const SC_OxSatusAndDownTime* internal_default_instance() {
    return reinterpret_cast<const SC_OxSatusAndDownTime*>(
               &_SC_OxSatusAndDownTime_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(SC_OxSatusAndDownTime* other);

  // implements Message ----------------------------------------------

  inline SC_OxSatusAndDownTime* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxSatusAndDownTime* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxSatusAndDownTime& from);
  void MergeFrom(const SC_OxSatusAndDownTime& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxSatusAndDownTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxSatusAndDownTime_MsgID MsgID;
  static const MsgID ID =
    SC_OxSatusAndDownTime_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxSatusAndDownTime_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxSatusAndDownTime_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxSatusAndDownTime_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxSatusAndDownTime_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxSatusAndDownTime_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxSatusAndDownTime_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxSatusAndDownTime_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 count_down_time = 2;
  bool has_count_down_time() const;
  void clear_count_down_time();
  static const int kCountDownTimeFieldNumber = 2;
  ::google::protobuf::int32 count_down_time() const;
  void set_count_down_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_OxSatusAndDownTime)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_count_down_time();
  void clear_has_count_down_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 count_down_time_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Oxplayer_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Oxplayer_info) */ {
 public:
  Oxplayer_info();
  virtual ~Oxplayer_info();

  Oxplayer_info(const Oxplayer_info& from);

  inline Oxplayer_info& operator=(const Oxplayer_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Oxplayer_info& default_instance();

  static inline const Oxplayer_info* internal_default_instance() {
    return reinterpret_cast<const Oxplayer_info*>(
               &_Oxplayer_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(Oxplayer_info* other);

  // implements Message ----------------------------------------------

  inline Oxplayer_info* New() const PROTOBUF_FINAL { return New(NULL); }

  Oxplayer_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Oxplayer_info& from);
  void MergeFrom(const Oxplayer_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Oxplayer_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 header_icon = 4 [default = 0];
  bool has_header_icon() const;
  void clear_header_icon();
  static const int kHeaderIconFieldNumber = 4;
  ::google::protobuf::int32 header_icon() const;
  void set_header_icon(::google::protobuf::int32 value);

  // optional int64 money = 3;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Oxplayer_info)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_money();
  void clear_has_money();
  void set_has_header_icon();
  void clear_has_header_icon();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 header_icon_;
  ::google::protobuf::int64 money_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxPlayerConnection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxPlayerConnection) */ {
 public:
  SC_OxPlayerConnection();
  virtual ~SC_OxPlayerConnection();

  SC_OxPlayerConnection(const SC_OxPlayerConnection& from);

  inline SC_OxPlayerConnection& operator=(const SC_OxPlayerConnection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxPlayerConnection& default_instance();

  static inline const SC_OxPlayerConnection* internal_default_instance() {
    return reinterpret_cast<const SC_OxPlayerConnection*>(
               &_SC_OxPlayerConnection_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(SC_OxPlayerConnection* other);

  // implements Message ----------------------------------------------

  inline SC_OxPlayerConnection* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxPlayerConnection* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxPlayerConnection& from);
  void MergeFrom(const SC_OxPlayerConnection& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxPlayerConnection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxPlayerConnection_MsgID MsgID;
  static const MsgID ID =
    SC_OxPlayerConnection_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxPlayerConnection_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxPlayerConnection_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxPlayerConnection_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxPlayerConnection_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxPlayerConnection_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxPlayerConnection_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxPlayerConnection_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .Oxplayer_info pb_player_info = 1;
  int pb_player_info_size() const;
  void clear_pb_player_info();
  static const int kPbPlayerInfoFieldNumber = 1;
  const ::Oxplayer_info& pb_player_info(int index) const;
  ::Oxplayer_info* mutable_pb_player_info(int index);
  ::Oxplayer_info* add_pb_player_info();
  ::google::protobuf::RepeatedPtrField< ::Oxplayer_info >*
      mutable_pb_player_info();
  const ::google::protobuf::RepeatedPtrField< ::Oxplayer_info >&
      pb_player_info() const;

  // @@protoc_insertion_point(class_scope:SC_OxPlayerConnection)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Oxplayer_info > pb_player_info_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Player_bet_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Player_bet_info) */ {
 public:
  Player_bet_info();
  virtual ~Player_bet_info();

  Player_bet_info(const Player_bet_info& from);

  inline Player_bet_info& operator=(const Player_bet_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_bet_info& default_instance();

  static inline const Player_bet_info* internal_default_instance() {
    return reinterpret_cast<const Player_bet_info*>(
               &_Player_bet_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(Player_bet_info* other);

  // implements Message ----------------------------------------------

  inline Player_bet_info* New() const PROTOBUF_FINAL { return New(NULL); }

  Player_bet_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Player_bet_info& from);
  void MergeFrom(const Player_bet_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Player_bet_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 bet_money = 2;
  bool has_bet_money() const;
  void clear_bet_money();
  static const int kBetMoneyFieldNumber = 2;
  ::google::protobuf::int64 bet_money() const;
  void set_bet_money(::google::protobuf::int64 value);

  // optional int32 which_area = 1;
  bool has_which_area() const;
  void clear_which_area();
  static const int kWhichAreaFieldNumber = 1;
  ::google::protobuf::int32 which_area() const;
  void set_which_area(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Player_bet_info)
 private:
  void set_has_which_area();
  void clear_has_which_area();
  void set_has_bet_money();
  void clear_has_bet_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 bet_money_;
  ::google::protobuf::int32 which_area_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CardResult) */ {
 public:
  CardResult();
  virtual ~CardResult();

  CardResult(const CardResult& from);

  inline CardResult& operator=(const CardResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardResult& default_instance();

  static inline const CardResult* internal_default_instance() {
    return reinterpret_cast<const CardResult*>(
               &_CardResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(CardResult* other);

  // implements Message ----------------------------------------------

  inline CardResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CardResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardResult& from);
  void MergeFrom(const CardResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 score_area = 1;
  bool has_score_area() const;
  void clear_score_area();
  static const int kScoreAreaFieldNumber = 1;
  ::google::protobuf::int32 score_area() const;
  void set_score_area(::google::protobuf::int32 value);

  // optional int32 card_type = 2;
  bool has_card_type() const;
  void clear_card_type();
  static const int kCardTypeFieldNumber = 2;
  ::google::protobuf::int32 card_type() const;
  void set_card_type(::google::protobuf::int32 value);

  // optional int32 card_times = 3;
  bool has_card_times() const;
  void clear_card_times();
  static const int kCardTimesFieldNumber = 3;
  ::google::protobuf::int32 card_times() const;
  void set_card_times(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CardResult)
 private:
  void set_has_score_area();
  void clear_has_score_area();
  void set_has_card_type();
  void clear_has_card_type();
  void set_has_card_times();
  void clear_has_card_times();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 score_area_;
  ::google::protobuf::int32 card_type_;
  ::google::protobuf::int32 card_times_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxTableInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxTableInfo) */ {
 public:
  SC_OxTableInfo();
  virtual ~SC_OxTableInfo();

  SC_OxTableInfo(const SC_OxTableInfo& from);

  inline SC_OxTableInfo& operator=(const SC_OxTableInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxTableInfo& default_instance();

  static inline const SC_OxTableInfo* internal_default_instance() {
    return reinterpret_cast<const SC_OxTableInfo*>(
               &_SC_OxTableInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(SC_OxTableInfo* other);

  // implements Message ----------------------------------------------

  inline SC_OxTableInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxTableInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxTableInfo& from);
  void MergeFrom(const SC_OxTableInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxTableInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxTableInfo_MsgID MsgID;
  static const MsgID ID =
    SC_OxTableInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxTableInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxTableInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxTableInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxTableInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxTableInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxTableInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxTableInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PlayerTopInfo pb_player_info_list = 4;
  int pb_player_info_list_size() const;
  void clear_pb_player_info_list();
  static const int kPbPlayerInfoListFieldNumber = 4;
  const ::PlayerTopInfo& pb_player_info_list(int index) const;
  ::PlayerTopInfo* mutable_pb_player_info_list(int index);
  ::PlayerTopInfo* add_pb_player_info_list();
  ::google::protobuf::RepeatedPtrField< ::PlayerTopInfo >*
      mutable_pb_player_info_list();
  const ::google::protobuf::RepeatedPtrField< ::PlayerTopInfo >&
      pb_player_info_list() const;

  // repeated .BankerList pb_banker_list = 5;
  int pb_banker_list_size() const;
  void clear_pb_banker_list();
  static const int kPbBankerListFieldNumber = 5;
  const ::BankerList& pb_banker_list(int index) const;
  ::BankerList* mutable_pb_banker_list(int index);
  ::BankerList* add_pb_banker_list();
  ::google::protobuf::RepeatedPtrField< ::BankerList >*
      mutable_pb_banker_list();
  const ::google::protobuf::RepeatedPtrField< ::BankerList >&
      pb_banker_list() const;

  // repeated .Player_bet_info pb_player_area_bet_info = 7;
  int pb_player_area_bet_info_size() const;
  void clear_pb_player_area_bet_info();
  static const int kPbPlayerAreaBetInfoFieldNumber = 7;
  const ::Player_bet_info& pb_player_area_bet_info(int index) const;
  ::Player_bet_info* mutable_pb_player_area_bet_info(int index);
  ::Player_bet_info* add_pb_player_area_bet_info();
  ::google::protobuf::RepeatedPtrField< ::Player_bet_info >*
      mutable_pb_player_area_bet_info();
  const ::google::protobuf::RepeatedPtrField< ::Player_bet_info >&
      pb_player_area_bet_info() const;

  // repeated .Cards pb_cards = 8;
  int pb_cards_size() const;
  void clear_pb_cards();
  static const int kPbCardsFieldNumber = 8;
  const ::Cards& pb_cards(int index) const;
  ::Cards* mutable_pb_cards(int index);
  ::Cards* add_pb_cards();
  ::google::protobuf::RepeatedPtrField< ::Cards >*
      mutable_pb_cards();
  const ::google::protobuf::RepeatedPtrField< ::Cards >&
      pb_cards() const;

  // repeated .CardResult pb_result = 9;
  int pb_result_size() const;
  void clear_pb_result();
  static const int kPbResultFieldNumber = 9;
  const ::CardResult& pb_result(int index) const;
  ::CardResult* mutable_pb_result(int index);
  ::CardResult* add_pb_result();
  ::google::protobuf::RepeatedPtrField< ::CardResult >*
      mutable_pb_result();
  const ::google::protobuf::RepeatedPtrField< ::CardResult >&
      pb_result() const;

  // optional .BankerInfo pb_curBanker = 3;
  bool has_pb_curbanker() const;
  void clear_pb_curbanker();
  static const int kPbCurBankerFieldNumber = 3;
  const ::BankerInfo& pb_curbanker() const;
  ::BankerInfo* mutable_pb_curbanker();
  ::BankerInfo* release_pb_curbanker();
  void set_allocated_pb_curbanker(::BankerInfo* pb_curbanker);

  // optional .EveryAreaInfo pb_AreaInfo = 6;
  bool has_pb_areainfo() const;
  void clear_pb_areainfo();
  static const int kPbAreaInfoFieldNumber = 6;
  const ::EveryAreaInfo& pb_areainfo() const;
  ::EveryAreaInfo* mutable_pb_areainfo();
  ::EveryAreaInfo* release_pb_areainfo();
  void set_allocated_pb_areainfo(::EveryAreaInfo* pb_areainfo);

  // optional .OxPlayerConclude pb_conclude = 10;
  bool has_pb_conclude() const;
  void clear_pb_conclude();
  static const int kPbConcludeFieldNumber = 10;
  const ::OxPlayerConclude& pb_conclude() const;
  ::OxPlayerConclude* mutable_pb_conclude();
  ::OxPlayerConclude* release_pb_conclude();
  void set_allocated_pb_conclude(::OxPlayerConclude* pb_conclude);

  // optional int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 count_down_time = 2;
  bool has_count_down_time() const;
  void clear_count_down_time();
  static const int kCountDownTimeFieldNumber = 2;
  ::google::protobuf::int32 count_down_time() const;
  void set_count_down_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_OxTableInfo)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_count_down_time();
  void clear_has_count_down_time();
  void set_has_pb_curbanker();
  void clear_has_pb_curbanker();
  void set_has_pb_areainfo();
  void clear_has_pb_areainfo();
  void set_has_pb_conclude();
  void clear_has_pb_conclude();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PlayerTopInfo > pb_player_info_list_;
  ::google::protobuf::RepeatedPtrField< ::BankerList > pb_banker_list_;
  ::google::protobuf::RepeatedPtrField< ::Player_bet_info > pb_player_area_bet_info_;
  ::google::protobuf::RepeatedPtrField< ::Cards > pb_cards_;
  ::google::protobuf::RepeatedPtrField< ::CardResult > pb_result_;
  ::BankerInfo* pb_curbanker_;
  ::EveryAreaInfo* pb_areainfo_;
  ::OxPlayerConclude* pb_conclude_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 count_down_time_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_OxPlayerConnectGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_OxPlayerConnectGame) */ {
 public:
  CS_OxPlayerConnectGame();
  virtual ~CS_OxPlayerConnectGame();

  CS_OxPlayerConnectGame(const CS_OxPlayerConnectGame& from);

  inline CS_OxPlayerConnectGame& operator=(const CS_OxPlayerConnectGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_OxPlayerConnectGame& default_instance();

  static inline const CS_OxPlayerConnectGame* internal_default_instance() {
    return reinterpret_cast<const CS_OxPlayerConnectGame*>(
               &_CS_OxPlayerConnectGame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(CS_OxPlayerConnectGame* other);

  // implements Message ----------------------------------------------

  inline CS_OxPlayerConnectGame* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_OxPlayerConnectGame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_OxPlayerConnectGame& from);
  void MergeFrom(const CS_OxPlayerConnectGame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_OxPlayerConnectGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_OxPlayerConnectGame_MsgID MsgID;
  static const MsgID ID =
    CS_OxPlayerConnectGame_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_OxPlayerConnectGame_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_OxPlayerConnectGame_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_OxPlayerConnectGame_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_OxPlayerConnectGame_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_OxPlayerConnectGame_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_OxPlayerConnectGame_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_OxPlayerConnectGame_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_OxPlayerConnectGame)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_CardResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_CardResult) */ {
 public:
  SC_CardResult();
  virtual ~SC_CardResult();

  SC_CardResult(const SC_CardResult& from);

  inline SC_CardResult& operator=(const SC_CardResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_CardResult& default_instance();

  static inline const SC_CardResult* internal_default_instance() {
    return reinterpret_cast<const SC_CardResult*>(
               &_SC_CardResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(SC_CardResult* other);

  // implements Message ----------------------------------------------

  inline SC_CardResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_CardResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_CardResult& from);
  void MergeFrom(const SC_CardResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_CardResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_CardResult_MsgID MsgID;
  static const MsgID ID =
    SC_CardResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_CardResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_CardResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_CardResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_CardResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_CardResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_CardResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_CardResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CardResult pb_result = 1;
  int pb_result_size() const;
  void clear_pb_result();
  static const int kPbResultFieldNumber = 1;
  const ::CardResult& pb_result(int index) const;
  ::CardResult* mutable_pb_result(int index);
  ::CardResult* add_pb_result();
  ::google::protobuf::RepeatedPtrField< ::CardResult >*
      mutable_pb_result();
  const ::google::protobuf::RepeatedPtrField< ::CardResult >&
      pb_result() const;

  // @@protoc_insertion_point(class_scope:SC_CardResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CardResult > pb_result_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxResult) */ {
 public:
  SC_OxResult();
  virtual ~SC_OxResult();

  SC_OxResult(const SC_OxResult& from);

  inline SC_OxResult& operator=(const SC_OxResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxResult& default_instance();

  static inline const SC_OxResult* internal_default_instance() {
    return reinterpret_cast<const SC_OxResult*>(
               &_SC_OxResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(SC_OxResult* other);

  // implements Message ----------------------------------------------

  inline SC_OxResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxResult& from);
  void MergeFrom(const SC_OxResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxResult_MsgID MsgID;
  static const MsgID ID =
    SC_OxResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .OxPlayerConclude pb_player_result = 1;
  bool has_pb_player_result() const;
  void clear_pb_player_result();
  static const int kPbPlayerResultFieldNumber = 1;
  const ::OxPlayerConclude& pb_player_result() const;
  ::OxPlayerConclude* mutable_pb_player_result();
  ::OxPlayerConclude* release_pb_player_result();
  void set_allocated_pb_player_result(::OxPlayerConclude* pb_player_result);

  // @@protoc_insertion_point(class_scope:SC_OxResult)
 private:
  void set_has_pb_player_result();
  void clear_has_pb_player_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::OxPlayerConclude* pb_player_result_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxBankerLeaveFlag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxBankerLeaveFlag) */ {
 public:
  SC_OxBankerLeaveFlag();
  virtual ~SC_OxBankerLeaveFlag();

  SC_OxBankerLeaveFlag(const SC_OxBankerLeaveFlag& from);

  inline SC_OxBankerLeaveFlag& operator=(const SC_OxBankerLeaveFlag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxBankerLeaveFlag& default_instance();

  static inline const SC_OxBankerLeaveFlag* internal_default_instance() {
    return reinterpret_cast<const SC_OxBankerLeaveFlag*>(
               &_SC_OxBankerLeaveFlag_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(SC_OxBankerLeaveFlag* other);

  // implements Message ----------------------------------------------

  inline SC_OxBankerLeaveFlag* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxBankerLeaveFlag* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxBankerLeaveFlag& from);
  void MergeFrom(const SC_OxBankerLeaveFlag& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxBankerLeaveFlag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxBankerLeaveFlag_MsgID MsgID;
  static const MsgID ID =
    SC_OxBankerLeaveFlag_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxBankerLeaveFlag_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxBankerLeaveFlag_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxBankerLeaveFlag_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxBankerLeaveFlag_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxBankerLeaveFlag_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxBankerLeaveFlag_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxBankerLeaveFlag_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_OxBankerLeaveFlag)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_OxLeaveGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_OxLeaveGame) */ {
 public:
  CS_OxLeaveGame();
  virtual ~CS_OxLeaveGame();

  CS_OxLeaveGame(const CS_OxLeaveGame& from);

  inline CS_OxLeaveGame& operator=(const CS_OxLeaveGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_OxLeaveGame& default_instance();

  static inline const CS_OxLeaveGame* internal_default_instance() {
    return reinterpret_cast<const CS_OxLeaveGame*>(
               &_CS_OxLeaveGame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(CS_OxLeaveGame* other);

  // implements Message ----------------------------------------------

  inline CS_OxLeaveGame* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_OxLeaveGame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_OxLeaveGame& from);
  void MergeFrom(const CS_OxLeaveGame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_OxLeaveGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_OxLeaveGame_MsgID MsgID;
  static const MsgID ID =
    CS_OxLeaveGame_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_OxLeaveGame_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_OxLeaveGame_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_OxLeaveGame_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_OxLeaveGame_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_OxLeaveGame_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_OxLeaveGame_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_OxLeaveGame_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_OxLeaveGame)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class chip_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chip_info) */ {
 public:
  chip_info();
  virtual ~chip_info();

  chip_info(const chip_info& from);

  inline chip_info& operator=(const chip_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chip_info& default_instance();

  static inline const chip_info* internal_default_instance() {
    return reinterpret_cast<const chip_info*>(
               &_chip_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(chip_info* other);

  // implements Message ----------------------------------------------

  inline chip_info* New() const PROTOBUF_FINAL { return New(NULL); }

  chip_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const chip_info& from);
  void MergeFrom(const chip_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(chip_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chip_index = 1;
  bool has_chip_index() const;
  void clear_chip_index();
  static const int kChipIndexFieldNumber = 1;
  ::google::protobuf::int32 chip_index() const;
  void set_chip_index(::google::protobuf::int32 value);

  // optional int32 chip_money = 2;
  bool has_chip_money() const;
  void clear_chip_money();
  static const int kChipMoneyFieldNumber = 2;
  ::google::protobuf::int32 chip_money() const;
  void set_chip_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:chip_info)
 private:
  void set_has_chip_index();
  void clear_has_chip_index();
  void set_has_chip_money();
  void clear_has_chip_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 chip_index_;
  ::google::protobuf::int32 chip_money_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_Ox_config_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_Ox_config_info) */ {
 public:
  SC_Ox_config_info();
  virtual ~SC_Ox_config_info();

  SC_Ox_config_info(const SC_Ox_config_info& from);

  inline SC_Ox_config_info& operator=(const SC_Ox_config_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_Ox_config_info& default_instance();

  static inline const SC_Ox_config_info* internal_default_instance() {
    return reinterpret_cast<const SC_Ox_config_info*>(
               &_SC_Ox_config_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(SC_Ox_config_info* other);

  // implements Message ----------------------------------------------

  inline SC_Ox_config_info* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_Ox_config_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_Ox_config_info& from);
  void MergeFrom(const SC_Ox_config_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_Ox_config_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_Ox_config_info_MsgID MsgID;
  static const MsgID ID =
    SC_Ox_config_info_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_Ox_config_info_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_Ox_config_info_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_Ox_config_info_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_Ox_config_info_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_Ox_config_info_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_Ox_config_info_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_Ox_config_info_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .chip_info pb_info_chip = 2;
  int pb_info_chip_size() const;
  void clear_pb_info_chip();
  static const int kPbInfoChipFieldNumber = 2;
  const ::chip_info& pb_info_chip(int index) const;
  ::chip_info* mutable_pb_info_chip(int index);
  ::chip_info* add_pb_info_chip();
  ::google::protobuf::RepeatedPtrField< ::chip_info >*
      mutable_pb_info_chip();
  const ::google::protobuf::RepeatedPtrField< ::chip_info >&
      pb_info_chip() const;

  // optional int32 banker_limit = 1;
  bool has_banker_limit() const;
  void clear_banker_limit();
  static const int kBankerLimitFieldNumber = 1;
  ::google::protobuf::int32 banker_limit() const;
  void set_banker_limit(::google::protobuf::int32 value);

  // optional int32 bet_min_limit_money = 3;
  bool has_bet_min_limit_money() const;
  void clear_bet_min_limit_money();
  static const int kBetMinLimitMoneyFieldNumber = 3;
  ::google::protobuf::int32 bet_min_limit_money() const;
  void set_bet_min_limit_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_Ox_config_info)
 private:
  void set_has_banker_limit();
  void clear_has_banker_limit();
  void set_has_bet_min_limit_money();
  void clear_has_bet_min_limit_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::chip_info > pb_info_chip_;
  ::google::protobuf::int32 banker_limit_;
  ::google::protobuf::int32 bet_min_limit_money_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardCompareResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CardCompareResult) */ {
 public:
  CardCompareResult();
  virtual ~CardCompareResult();

  CardCompareResult(const CardCompareResult& from);

  inline CardCompareResult& operator=(const CardCompareResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardCompareResult& default_instance();

  static inline const CardCompareResult* internal_default_instance() {
    return reinterpret_cast<const CardCompareResult*>(
               &_CardCompareResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(CardCompareResult* other);

  // implements Message ----------------------------------------------

  inline CardCompareResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CardCompareResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardCompareResult& from);
  void MergeFrom(const CardCompareResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardCompareResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 area_ = 1;
  bool has_area_() const;
  void clear_area_();
  static const int kAreaFieldNumber = 1;
  ::google::protobuf::int32 area_() const;
  void set_area_(::google::protobuf::int32 value);

  // optional bool result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:CardCompareResult)
 private:
  void set_has_area_();
  void clear_has_area_();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 area__;
  bool result_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_CardCompareResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_CardCompareResult) */ {
 public:
  SC_CardCompareResult();
  virtual ~SC_CardCompareResult();

  SC_CardCompareResult(const SC_CardCompareResult& from);

  inline SC_CardCompareResult& operator=(const SC_CardCompareResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_CardCompareResult& default_instance();

  static inline const SC_CardCompareResult* internal_default_instance() {
    return reinterpret_cast<const SC_CardCompareResult*>(
               &_SC_CardCompareResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(SC_CardCompareResult* other);

  // implements Message ----------------------------------------------

  inline SC_CardCompareResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_CardCompareResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_CardCompareResult& from);
  void MergeFrom(const SC_CardCompareResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_CardCompareResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_CardCompareResult_MsgID MsgID;
  static const MsgID ID =
    SC_CardCompareResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_CardCompareResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_CardCompareResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_CardCompareResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_CardCompareResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_CardCompareResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_CardCompareResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_CardCompareResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CardCompareResult pb_CompareResult = 1;
  int pb_compareresult_size() const;
  void clear_pb_compareresult();
  static const int kPbCompareResultFieldNumber = 1;
  const ::CardCompareResult& pb_compareresult(int index) const;
  ::CardCompareResult* mutable_pb_compareresult(int index);
  ::CardCompareResult* add_pb_compareresult();
  ::google::protobuf::RepeatedPtrField< ::CardCompareResult >*
      mutable_pb_compareresult();
  const ::google::protobuf::RepeatedPtrField< ::CardCompareResult >&
      pb_compareresult() const;

  // @@protoc_insertion_point(class_scope:SC_CardCompareResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CardCompareResult > pb_compareresult_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_OxGetBetCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_OxGetBetCfg) */ {
 public:
  CS_OxGetBetCfg();
  virtual ~CS_OxGetBetCfg();

  CS_OxGetBetCfg(const CS_OxGetBetCfg& from);

  inline CS_OxGetBetCfg& operator=(const CS_OxGetBetCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_OxGetBetCfg& default_instance();

  static inline const CS_OxGetBetCfg* internal_default_instance() {
    return reinterpret_cast<const CS_OxGetBetCfg*>(
               &_CS_OxGetBetCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(CS_OxGetBetCfg* other);

  // implements Message ----------------------------------------------

  inline CS_OxGetBetCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_OxGetBetCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_OxGetBetCfg& from);
  void MergeFrom(const CS_OxGetBetCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_OxGetBetCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_OxGetBetCfg_MsgID MsgID;
  static const MsgID ID =
    CS_OxGetBetCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_OxGetBetCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_OxGetBetCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_OxGetBetCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_OxGetBetCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_OxGetBetCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_OxGetBetCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_OxGetBetCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_OxGetBetCfg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_OxGetBetCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_OxGetBetCfg) */ {
 public:
  SC_OxGetBetCfg();
  virtual ~SC_OxGetBetCfg();

  SC_OxGetBetCfg(const SC_OxGetBetCfg& from);

  inline SC_OxGetBetCfg& operator=(const SC_OxGetBetCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_OxGetBetCfg& default_instance();

  static inline const SC_OxGetBetCfg* internal_default_instance() {
    return reinterpret_cast<const SC_OxGetBetCfg*>(
               &_SC_OxGetBetCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(SC_OxGetBetCfg* other);

  // implements Message ----------------------------------------------

  inline SC_OxGetBetCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_OxGetBetCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_OxGetBetCfg& from);
  void MergeFrom(const SC_OxGetBetCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_OxGetBetCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_OxGetBetCfg_MsgID MsgID;
  static const MsgID ID =
    SC_OxGetBetCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_OxGetBetCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_OxGetBetCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_OxGetBetCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_OxGetBetCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_OxGetBetCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_OxGetBetCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_OxGetBetCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 bets = 1;
  int bets_size() const;
  void clear_bets();
  static const int kBetsFieldNumber = 1;
  ::google::protobuf::int32 bets(int index) const;
  void set_bets(int index, ::google::protobuf::int32 value);
  void add_bets(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      bets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_bets();

  // @@protoc_insertion_point(class_scope:SC_OxGetBetCfg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > bets_;
  friend struct protobuf_public_5fox_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_OxStart

// optional int32 cur_chair_id = 1;
inline bool SC_OxStart::has_cur_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxStart::set_has_cur_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxStart::clear_has_cur_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxStart::clear_cur_chair_id() {
  cur_chair_id_ = 0;
  clear_has_cur_chair_id();
}
inline ::google::protobuf::int32 SC_OxStart::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_OxStart.cur_chair_id)
  return cur_chair_id_;
}
inline void SC_OxStart::set_cur_chair_id(::google::protobuf::int32 value) {
  set_has_cur_chair_id();
  cur_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_OxStart.cur_chair_id)
}

// -------------------------------------------------------------------

// CS_OxCallBanker

// optional bool call_banker = 1;
inline bool CS_OxCallBanker::has_call_banker() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_OxCallBanker::set_has_call_banker() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_OxCallBanker::clear_has_call_banker() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_OxCallBanker::clear_call_banker() {
  call_banker_ = false;
  clear_has_call_banker();
}
inline bool CS_OxCallBanker::call_banker() const {
  // @@protoc_insertion_point(field_get:CS_OxCallBanker.call_banker)
  return call_banker_;
}
inline void CS_OxCallBanker::set_call_banker(bool value) {
  set_has_call_banker();
  call_banker_ = value;
  // @@protoc_insertion_point(field_set:CS_OxCallBanker.call_banker)
}

// -------------------------------------------------------------------

// SC_OxCallBanker

// optional int32 cur_chair_id = 1;
inline bool SC_OxCallBanker::has_cur_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxCallBanker::set_has_cur_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxCallBanker::clear_has_cur_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxCallBanker::clear_cur_chair_id() {
  cur_chair_id_ = 0;
  clear_has_cur_chair_id();
}
inline ::google::protobuf::int32 SC_OxCallBanker::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_OxCallBanker.cur_chair_id)
  return cur_chair_id_;
}
inline void SC_OxCallBanker::set_cur_chair_id(::google::protobuf::int32 value) {
  set_has_cur_chair_id();
  cur_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_OxCallBanker.cur_chair_id)
}

// optional int32 call_chair_id = 2;
inline bool SC_OxCallBanker::has_call_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_OxCallBanker::set_has_call_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_OxCallBanker::clear_has_call_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_OxCallBanker::clear_call_chair_id() {
  call_chair_id_ = 0;
  clear_has_call_chair_id();
}
inline ::google::protobuf::int32 SC_OxCallBanker::call_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_OxCallBanker.call_chair_id)
  return call_chair_id_;
}
inline void SC_OxCallBanker::set_call_chair_id(::google::protobuf::int32 value) {
  set_has_call_chair_id();
  call_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_OxCallBanker.call_chair_id)
}

// optional bool call_banker = 3;
inline bool SC_OxCallBanker::has_call_banker() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_OxCallBanker::set_has_call_banker() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_OxCallBanker::clear_has_call_banker() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_OxCallBanker::clear_call_banker() {
  call_banker_ = false;
  clear_has_call_banker();
}
inline bool SC_OxCallBanker::call_banker() const {
  // @@protoc_insertion_point(field_get:SC_OxCallBanker.call_banker)
  return call_banker_;
}
inline void SC_OxCallBanker::set_call_banker(bool value) {
  set_has_call_banker();
  call_banker_ = value;
  // @@protoc_insertion_point(field_set:SC_OxCallBanker.call_banker)
}

// -------------------------------------------------------------------

// SC_OxAddScoreStatus

// optional int32 banker_chair_id = 1;
inline bool SC_OxAddScoreStatus::has_banker_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_OxAddScoreStatus::set_has_banker_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_OxAddScoreStatus::clear_has_banker_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_OxAddScoreStatus::clear_banker_chair_id() {
  banker_chair_id_ = 0;
  clear_has_banker_chair_id();
}
inline ::google::protobuf::int32 SC_OxAddScoreStatus::banker_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_OxAddScoreStatus.banker_chair_id)
  return banker_chair_id_;
}
inline void SC_OxAddScoreStatus::set_banker_chair_id(::google::protobuf::int32 value) {
  set_has_banker_chair_id();
  banker_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_OxAddScoreStatus.banker_chair_id)
}

// optional int64 max_score = 2;
inline bool SC_OxAddScoreStatus::has_max_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxAddScoreStatus::set_has_max_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxAddScoreStatus::clear_has_max_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxAddScoreStatus::clear_max_score() {
  max_score_ = GOOGLE_LONGLONG(0);
  clear_has_max_score();
}
inline ::google::protobuf::int64 SC_OxAddScoreStatus::max_score() const {
  // @@protoc_insertion_point(field_get:SC_OxAddScoreStatus.max_score)
  return max_score_;
}
inline void SC_OxAddScoreStatus::set_max_score(::google::protobuf::int64 value) {
  set_has_max_score();
  max_score_ = value;
  // @@protoc_insertion_point(field_set:SC_OxAddScoreStatus.max_score)
}

// -------------------------------------------------------------------

// CS_OxAddScore

// optional int32 guid = 1;
inline bool CS_OxAddScore::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_OxAddScore::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_OxAddScore::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_OxAddScore::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 CS_OxAddScore::guid() const {
  // @@protoc_insertion_point(field_get:CS_OxAddScore.guid)
  return guid_;
}
inline void CS_OxAddScore::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:CS_OxAddScore.guid)
}

// optional int32 score_area = 2;
inline bool CS_OxAddScore::has_score_area() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_OxAddScore::set_has_score_area() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_OxAddScore::clear_has_score_area() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_OxAddScore::clear_score_area() {
  score_area_ = 0;
  clear_has_score_area();
}
inline ::google::protobuf::int32 CS_OxAddScore::score_area() const {
  // @@protoc_insertion_point(field_get:CS_OxAddScore.score_area)
  return score_area_;
}
inline void CS_OxAddScore::set_score_area(::google::protobuf::int32 value) {
  set_has_score_area();
  score_area_ = value;
  // @@protoc_insertion_point(field_set:CS_OxAddScore.score_area)
}

// optional int64 score = 3;
inline bool CS_OxAddScore::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CS_OxAddScore::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CS_OxAddScore::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CS_OxAddScore::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::int64 CS_OxAddScore::score() const {
  // @@protoc_insertion_point(field_get:CS_OxAddScore.score)
  return score_;
}
inline void CS_OxAddScore::set_score(::google::protobuf::int64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CS_OxAddScore.score)
}

// -------------------------------------------------------------------

// SC_OxAddScore

// optional int32 add_score_chair_id = 1;
inline bool SC_OxAddScore::has_add_score_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxAddScore::set_has_add_score_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxAddScore::clear_has_add_score_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxAddScore::clear_add_score_chair_id() {
  add_score_chair_id_ = 0;
  clear_has_add_score_chair_id();
}
inline ::google::protobuf::int32 SC_OxAddScore::add_score_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_OxAddScore.add_score_chair_id)
  return add_score_chair_id_;
}
inline void SC_OxAddScore::set_add_score_chair_id(::google::protobuf::int32 value) {
  set_has_add_score_chair_id();
  add_score_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_OxAddScore.add_score_chair_id)
}

// optional int32 score_area = 2;
inline bool SC_OxAddScore::has_score_area() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_OxAddScore::set_has_score_area() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_OxAddScore::clear_has_score_area() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_OxAddScore::clear_score_area() {
  score_area_ = 0;
  clear_has_score_area();
}
inline ::google::protobuf::int32 SC_OxAddScore::score_area() const {
  // @@protoc_insertion_point(field_get:SC_OxAddScore.score_area)
  return score_area_;
}
inline void SC_OxAddScore::set_score_area(::google::protobuf::int32 value) {
  set_has_score_area();
  score_area_ = value;
  // @@protoc_insertion_point(field_set:SC_OxAddScore.score_area)
}

// optional int64 score = 3;
inline bool SC_OxAddScore::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_OxAddScore::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_OxAddScore::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_OxAddScore::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::int64 SC_OxAddScore::score() const {
  // @@protoc_insertion_point(field_get:SC_OxAddScore.score)
  return score_;
}
inline void SC_OxAddScore::set_score(::google::protobuf::int64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:SC_OxAddScore.score)
}

// optional int64 player_bet_this_area_money = 4;
inline bool SC_OxAddScore::has_player_bet_this_area_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_OxAddScore::set_has_player_bet_this_area_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_OxAddScore::clear_has_player_bet_this_area_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_OxAddScore::clear_player_bet_this_area_money() {
  player_bet_this_area_money_ = GOOGLE_LONGLONG(0);
  clear_has_player_bet_this_area_money();
}
inline ::google::protobuf::int64 SC_OxAddScore::player_bet_this_area_money() const {
  // @@protoc_insertion_point(field_get:SC_OxAddScore.player_bet_this_area_money)
  return player_bet_this_area_money_;
}
inline void SC_OxAddScore::set_player_bet_this_area_money(::google::protobuf::int64 value) {
  set_has_player_bet_this_area_money();
  player_bet_this_area_money_ = value;
  // @@protoc_insertion_point(field_set:SC_OxAddScore.player_bet_this_area_money)
}

// optional int64 money = 5;
inline bool SC_OxAddScore::has_money() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SC_OxAddScore::set_has_money() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SC_OxAddScore::clear_has_money() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SC_OxAddScore::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SC_OxAddScore::money() const {
  // @@protoc_insertion_point(field_get:SC_OxAddScore.money)
  return money_;
}
inline void SC_OxAddScore::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_OxAddScore.money)
}

// -------------------------------------------------------------------

// Cards

// optional int32 score_area = 1;
inline bool Cards::has_score_area() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cards::set_has_score_area() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cards::clear_has_score_area() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cards::clear_score_area() {
  score_area_ = 0;
  clear_has_score_area();
}
inline ::google::protobuf::int32 Cards::score_area() const {
  // @@protoc_insertion_point(field_get:Cards.score_area)
  return score_area_;
}
inline void Cards::set_score_area(::google::protobuf::int32 value) {
  set_has_score_area();
  score_area_ = value;
  // @@protoc_insertion_point(field_set:Cards.score_area)
}

// repeated int32 card = 2;
inline int Cards::card_size() const {
  return card_.size();
}
inline void Cards::clear_card() {
  card_.Clear();
}
inline ::google::protobuf::int32 Cards::card(int index) const {
  // @@protoc_insertion_point(field_get:Cards.card)
  return card_.Get(index);
}
inline void Cards::set_card(int index, ::google::protobuf::int32 value) {
  card_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cards.card)
}
inline void Cards::add_card(::google::protobuf::int32 value) {
  card_.Add(value);
  // @@protoc_insertion_point(field_add:Cards.card)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Cards::card() const {
  // @@protoc_insertion_point(field_list:Cards.card)
  return card_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Cards::mutable_card() {
  // @@protoc_insertion_point(field_mutable_list:Cards.card)
  return &card_;
}

// -------------------------------------------------------------------

// SC_OxDealCard

// repeated .Cards pb_cards = 1;
inline int SC_OxDealCard::pb_cards_size() const {
  return pb_cards_.size();
}
inline void SC_OxDealCard::clear_pb_cards() {
  pb_cards_.Clear();
}
inline const ::Cards& SC_OxDealCard::pb_cards(int index) const {
  // @@protoc_insertion_point(field_get:SC_OxDealCard.pb_cards)
  return pb_cards_.Get(index);
}
inline ::Cards* SC_OxDealCard::mutable_pb_cards(int index) {
  // @@protoc_insertion_point(field_mutable:SC_OxDealCard.pb_cards)
  return pb_cards_.Mutable(index);
}
inline ::Cards* SC_OxDealCard::add_pb_cards() {
  // @@protoc_insertion_point(field_add:SC_OxDealCard.pb_cards)
  return pb_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Cards >*
SC_OxDealCard::mutable_pb_cards() {
  // @@protoc_insertion_point(field_mutable_list:SC_OxDealCard.pb_cards)
  return &pb_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Cards >&
SC_OxDealCard::pb_cards() const {
  // @@protoc_insertion_point(field_list:SC_OxDealCard.pb_cards)
  return pb_cards_;
}

// -------------------------------------------------------------------

// CS_OxOpenCards

// -------------------------------------------------------------------

// SC_OxOpenCards

// optional int32 open_chair_id = 2;
inline bool SC_OxOpenCards::has_open_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxOpenCards::set_has_open_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxOpenCards::clear_has_open_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxOpenCards::clear_open_chair_id() {
  open_chair_id_ = 0;
  clear_has_open_chair_id();
}
inline ::google::protobuf::int32 SC_OxOpenCards::open_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_OxOpenCards.open_chair_id)
  return open_chair_id_;
}
inline void SC_OxOpenCards::set_open_chair_id(::google::protobuf::int32 value) {
  set_has_open_chair_id();
  open_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_OxOpenCards.open_chair_id)
}

// -------------------------------------------------------------------

// OxPlayerConclude

// optional int32 chair_id = 1;
inline bool OxPlayerConclude::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OxPlayerConclude::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OxPlayerConclude::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OxPlayerConclude::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 OxPlayerConclude::chair_id() const {
  // @@protoc_insertion_point(field_get:OxPlayerConclude.chair_id)
  return chair_id_;
}
inline void OxPlayerConclude::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:OxPlayerConclude.chair_id)
}

// optional int64 pay_score = 2;
inline bool OxPlayerConclude::has_pay_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OxPlayerConclude::set_has_pay_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OxPlayerConclude::clear_has_pay_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OxPlayerConclude::clear_pay_score() {
  pay_score_ = GOOGLE_LONGLONG(0);
  clear_has_pay_score();
}
inline ::google::protobuf::int64 OxPlayerConclude::pay_score() const {
  // @@protoc_insertion_point(field_get:OxPlayerConclude.pay_score)
  return pay_score_;
}
inline void OxPlayerConclude::set_pay_score(::google::protobuf::int64 value) {
  set_has_pay_score();
  pay_score_ = value;
  // @@protoc_insertion_point(field_set:OxPlayerConclude.pay_score)
}

// optional int64 earn_score = 3;
inline bool OxPlayerConclude::has_earn_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OxPlayerConclude::set_has_earn_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OxPlayerConclude::clear_has_earn_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OxPlayerConclude::clear_earn_score() {
  earn_score_ = GOOGLE_LONGLONG(0);
  clear_has_earn_score();
}
inline ::google::protobuf::int64 OxPlayerConclude::earn_score() const {
  // @@protoc_insertion_point(field_get:OxPlayerConclude.earn_score)
  return earn_score_;
}
inline void OxPlayerConclude::set_earn_score(::google::protobuf::int64 value) {
  set_has_earn_score();
  earn_score_ = value;
  // @@protoc_insertion_point(field_set:OxPlayerConclude.earn_score)
}

// optional int32 system_tax = 4;
inline bool OxPlayerConclude::has_system_tax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OxPlayerConclude::set_has_system_tax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OxPlayerConclude::clear_has_system_tax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OxPlayerConclude::clear_system_tax() {
  system_tax_ = 0;
  clear_has_system_tax();
}
inline ::google::protobuf::int32 OxPlayerConclude::system_tax() const {
  // @@protoc_insertion_point(field_get:OxPlayerConclude.system_tax)
  return system_tax_;
}
inline void OxPlayerConclude::set_system_tax(::google::protobuf::int32 value) {
  set_has_system_tax();
  system_tax_ = value;
  // @@protoc_insertion_point(field_set:OxPlayerConclude.system_tax)
}

// optional int64 banker_score = 5;
inline bool OxPlayerConclude::has_banker_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OxPlayerConclude::set_has_banker_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OxPlayerConclude::clear_has_banker_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OxPlayerConclude::clear_banker_score() {
  banker_score_ = GOOGLE_LONGLONG(0);
  clear_has_banker_score();
}
inline ::google::protobuf::int64 OxPlayerConclude::banker_score() const {
  // @@protoc_insertion_point(field_get:OxPlayerConclude.banker_score)
  return banker_score_;
}
inline void OxPlayerConclude::set_banker_score(::google::protobuf::int64 value) {
  set_has_banker_score();
  banker_score_ = value;
  // @@protoc_insertion_point(field_set:OxPlayerConclude.banker_score)
}

// optional int32 all_win_or_lose_flag = 6;
inline bool OxPlayerConclude::has_all_win_or_lose_flag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OxPlayerConclude::set_has_all_win_or_lose_flag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OxPlayerConclude::clear_has_all_win_or_lose_flag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OxPlayerConclude::clear_all_win_or_lose_flag() {
  all_win_or_lose_flag_ = 0;
  clear_has_all_win_or_lose_flag();
}
inline ::google::protobuf::int32 OxPlayerConclude::all_win_or_lose_flag() const {
  // @@protoc_insertion_point(field_get:OxPlayerConclude.all_win_or_lose_flag)
  return all_win_or_lose_flag_;
}
inline void OxPlayerConclude::set_all_win_or_lose_flag(::google::protobuf::int32 value) {
  set_has_all_win_or_lose_flag();
  all_win_or_lose_flag_ = value;
  // @@protoc_insertion_point(field_set:OxPlayerConclude.all_win_or_lose_flag)
}

// optional int64 money = 7;
inline bool OxPlayerConclude::has_money() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OxPlayerConclude::set_has_money() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OxPlayerConclude::clear_has_money() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OxPlayerConclude::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 OxPlayerConclude::money() const {
  // @@protoc_insertion_point(field_get:OxPlayerConclude.money)
  return money_;
}
inline void OxPlayerConclude::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:OxPlayerConclude.money)
}

// optional int32 tax_show_flag = 8;
inline bool OxPlayerConclude::has_tax_show_flag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OxPlayerConclude::set_has_tax_show_flag() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OxPlayerConclude::clear_has_tax_show_flag() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OxPlayerConclude::clear_tax_show_flag() {
  tax_show_flag_ = 0;
  clear_has_tax_show_flag();
}
inline ::google::protobuf::int32 OxPlayerConclude::tax_show_flag() const {
  // @@protoc_insertion_point(field_get:OxPlayerConclude.tax_show_flag)
  return tax_show_flag_;
}
inline void OxPlayerConclude::set_tax_show_flag(::google::protobuf::int32 value) {
  set_has_tax_show_flag();
  tax_show_flag_ = value;
  // @@protoc_insertion_point(field_set:OxPlayerConclude.tax_show_flag)
}

// -------------------------------------------------------------------

// SC_OxEnd

// repeated .OxPlayerConclude pb_conclude = 1;
inline int SC_OxEnd::pb_conclude_size() const {
  return pb_conclude_.size();
}
inline void SC_OxEnd::clear_pb_conclude() {
  pb_conclude_.Clear();
}
inline const ::OxPlayerConclude& SC_OxEnd::pb_conclude(int index) const {
  // @@protoc_insertion_point(field_get:SC_OxEnd.pb_conclude)
  return pb_conclude_.Get(index);
}
inline ::OxPlayerConclude* SC_OxEnd::mutable_pb_conclude(int index) {
  // @@protoc_insertion_point(field_mutable:SC_OxEnd.pb_conclude)
  return pb_conclude_.Mutable(index);
}
inline ::OxPlayerConclude* SC_OxEnd::add_pb_conclude() {
  // @@protoc_insertion_point(field_add:SC_OxEnd.pb_conclude)
  return pb_conclude_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::OxPlayerConclude >*
SC_OxEnd::mutable_pb_conclude() {
  // @@protoc_insertion_point(field_mutable_list:SC_OxEnd.pb_conclude)
  return &pb_conclude_;
}
inline const ::google::protobuf::RepeatedPtrField< ::OxPlayerConclude >&
SC_OxEnd::pb_conclude() const {
  // @@protoc_insertion_point(field_list:SC_OxEnd.pb_conclude)
  return pb_conclude_;
}

// repeated .Cards pb_cards = 2;
inline int SC_OxEnd::pb_cards_size() const {
  return pb_cards_.size();
}
inline void SC_OxEnd::clear_pb_cards() {
  pb_cards_.Clear();
}
inline const ::Cards& SC_OxEnd::pb_cards(int index) const {
  // @@protoc_insertion_point(field_get:SC_OxEnd.pb_cards)
  return pb_cards_.Get(index);
}
inline ::Cards* SC_OxEnd::mutable_pb_cards(int index) {
  // @@protoc_insertion_point(field_mutable:SC_OxEnd.pb_cards)
  return pb_cards_.Mutable(index);
}
inline ::Cards* SC_OxEnd::add_pb_cards() {
  // @@protoc_insertion_point(field_add:SC_OxEnd.pb_cards)
  return pb_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Cards >*
SC_OxEnd::mutable_pb_cards() {
  // @@protoc_insertion_point(field_mutable_list:SC_OxEnd.pb_cards)
  return &pb_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Cards >&
SC_OxEnd::pb_cards() const {
  // @@protoc_insertion_point(field_list:SC_OxEnd.pb_cards)
  return pb_cards_;
}

// -------------------------------------------------------------------

// CS_OxRecord

// -------------------------------------------------------------------

// RecordResult

// repeated bool result = 1;
inline int RecordResult::result_size() const {
  return result_.size();
}
inline void RecordResult::clear_result() {
  result_.Clear();
}
inline bool RecordResult::result(int index) const {
  // @@protoc_insertion_point(field_get:RecordResult.result)
  return result_.Get(index);
}
inline void RecordResult::set_result(int index, bool value) {
  result_.Set(index, value);
  // @@protoc_insertion_point(field_set:RecordResult.result)
}
inline void RecordResult::add_result(bool value) {
  result_.Add(value);
  // @@protoc_insertion_point(field_add:RecordResult.result)
}
inline const ::google::protobuf::RepeatedField< bool >&
RecordResult::result() const {
  // @@protoc_insertion_point(field_list:RecordResult.result)
  return result_;
}
inline ::google::protobuf::RepeatedField< bool >*
RecordResult::mutable_result() {
  // @@protoc_insertion_point(field_mutable_list:RecordResult.result)
  return &result_;
}

// -------------------------------------------------------------------

// SC_OxRecord

// repeated .RecordResult pb_recordresult = 1;
inline int SC_OxRecord::pb_recordresult_size() const {
  return pb_recordresult_.size();
}
inline void SC_OxRecord::clear_pb_recordresult() {
  pb_recordresult_.Clear();
}
inline const ::RecordResult& SC_OxRecord::pb_recordresult(int index) const {
  // @@protoc_insertion_point(field_get:SC_OxRecord.pb_recordresult)
  return pb_recordresult_.Get(index);
}
inline ::RecordResult* SC_OxRecord::mutable_pb_recordresult(int index) {
  // @@protoc_insertion_point(field_mutable:SC_OxRecord.pb_recordresult)
  return pb_recordresult_.Mutable(index);
}
inline ::RecordResult* SC_OxRecord::add_pb_recordresult() {
  // @@protoc_insertion_point(field_add:SC_OxRecord.pb_recordresult)
  return pb_recordresult_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RecordResult >*
SC_OxRecord::mutable_pb_recordresult() {
  // @@protoc_insertion_point(field_mutable_list:SC_OxRecord.pb_recordresult)
  return &pb_recordresult_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RecordResult >&
SC_OxRecord::pb_recordresult() const {
  // @@protoc_insertion_point(field_list:SC_OxRecord.pb_recordresult)
  return pb_recordresult_;
}

// -------------------------------------------------------------------

// CS_OxTop

// -------------------------------------------------------------------

// PlayerTopInfo

// optional int32 guid = 1;
inline bool PlayerTopInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerTopInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerTopInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerTopInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 PlayerTopInfo::guid() const {
  // @@protoc_insertion_point(field_get:PlayerTopInfo.guid)
  return guid_;
}
inline void PlayerTopInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:PlayerTopInfo.guid)
}

// optional int32 head_id = 2;
inline bool PlayerTopInfo::has_head_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerTopInfo::set_has_head_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerTopInfo::clear_has_head_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerTopInfo::clear_head_id() {
  head_id_ = 0;
  clear_has_head_id();
}
inline ::google::protobuf::int32 PlayerTopInfo::head_id() const {
  // @@protoc_insertion_point(field_get:PlayerTopInfo.head_id)
  return head_id_;
}
inline void PlayerTopInfo::set_head_id(::google::protobuf::int32 value) {
  set_has_head_id();
  head_id_ = value;
  // @@protoc_insertion_point(field_set:PlayerTopInfo.head_id)
}

// optional string nickname = 3;
inline bool PlayerTopInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerTopInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerTopInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerTopInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& PlayerTopInfo::nickname() const {
  // @@protoc_insertion_point(field_get:PlayerTopInfo.nickname)
  return nickname_.GetNoArena();
}
inline void PlayerTopInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerTopInfo.nickname)
}
#if LANG_CXX11
inline void PlayerTopInfo::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerTopInfo.nickname)
}
#endif
inline void PlayerTopInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerTopInfo.nickname)
}
inline void PlayerTopInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerTopInfo.nickname)
}
inline ::std::string* PlayerTopInfo::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:PlayerTopInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerTopInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:PlayerTopInfo.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerTopInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:PlayerTopInfo.nickname)
}

// optional int64 money = 4;
inline bool PlayerTopInfo::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerTopInfo::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerTopInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerTopInfo::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 PlayerTopInfo::money() const {
  // @@protoc_insertion_point(field_get:PlayerTopInfo.money)
  return money_;
}
inline void PlayerTopInfo::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:PlayerTopInfo.money)
}

// optional int32 header_icon = 5 [default = 0];
inline bool PlayerTopInfo::has_header_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerTopInfo::set_has_header_icon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerTopInfo::clear_has_header_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerTopInfo::clear_header_icon() {
  header_icon_ = 0;
  clear_has_header_icon();
}
inline ::google::protobuf::int32 PlayerTopInfo::header_icon() const {
  // @@protoc_insertion_point(field_get:PlayerTopInfo.header_icon)
  return header_icon_;
}
inline void PlayerTopInfo::set_header_icon(::google::protobuf::int32 value) {
  set_has_header_icon();
  header_icon_ = value;
  // @@protoc_insertion_point(field_set:PlayerTopInfo.header_icon)
}

// -------------------------------------------------------------------

// SC_OxTop

// optional int32 count_all = 1;
inline bool SC_OxTop::has_count_all() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxTop::set_has_count_all() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxTop::clear_has_count_all() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxTop::clear_count_all() {
  count_all_ = 0;
  clear_has_count_all();
}
inline ::google::protobuf::int32 SC_OxTop::count_all() const {
  // @@protoc_insertion_point(field_get:SC_OxTop.count_all)
  return count_all_;
}
inline void SC_OxTop::set_count_all(::google::protobuf::int32 value) {
  set_has_count_all();
  count_all_ = value;
  // @@protoc_insertion_point(field_set:SC_OxTop.count_all)
}

// repeated .PlayerTopInfo pb_player_top_info = 2;
inline int SC_OxTop::pb_player_top_info_size() const {
  return pb_player_top_info_.size();
}
inline void SC_OxTop::clear_pb_player_top_info() {
  pb_player_top_info_.Clear();
}
inline const ::PlayerTopInfo& SC_OxTop::pb_player_top_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_OxTop.pb_player_top_info)
  return pb_player_top_info_.Get(index);
}
inline ::PlayerTopInfo* SC_OxTop::mutable_pb_player_top_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_OxTop.pb_player_top_info)
  return pb_player_top_info_.Mutable(index);
}
inline ::PlayerTopInfo* SC_OxTop::add_pb_player_top_info() {
  // @@protoc_insertion_point(field_add:SC_OxTop.pb_player_top_info)
  return pb_player_top_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerTopInfo >*
SC_OxTop::mutable_pb_player_top_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_OxTop.pb_player_top_info)
  return &pb_player_top_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerTopInfo >&
SC_OxTop::pb_player_top_info() const {
  // @@protoc_insertion_point(field_list:SC_OxTop.pb_player_top_info)
  return pb_player_top_info_;
}

// -------------------------------------------------------------------

// BankerInfo

// optional int32 guid = 1;
inline bool BankerInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BankerInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BankerInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BankerInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 BankerInfo::guid() const {
  // @@protoc_insertion_point(field_get:BankerInfo.guid)
  return guid_;
}
inline void BankerInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:BankerInfo.guid)
}

// optional string nickname = 2;
inline bool BankerInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BankerInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BankerInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BankerInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& BankerInfo::nickname() const {
  // @@protoc_insertion_point(field_get:BankerInfo.nickname)
  return nickname_.GetNoArena();
}
inline void BankerInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankerInfo.nickname)
}
#if LANG_CXX11
inline void BankerInfo::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankerInfo.nickname)
}
#endif
inline void BankerInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankerInfo.nickname)
}
inline void BankerInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankerInfo.nickname)
}
inline ::std::string* BankerInfo::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:BankerInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BankerInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:BankerInfo.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BankerInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:BankerInfo.nickname)
}

// optional int64 money = 3;
inline bool BankerInfo::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BankerInfo::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BankerInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BankerInfo::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 BankerInfo::money() const {
  // @@protoc_insertion_point(field_get:BankerInfo.money)
  return money_;
}
inline void BankerInfo::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:BankerInfo.money)
}

// optional int32 bankertimes = 4;
inline bool BankerInfo::has_bankertimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BankerInfo::set_has_bankertimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BankerInfo::clear_has_bankertimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BankerInfo::clear_bankertimes() {
  bankertimes_ = 0;
  clear_has_bankertimes();
}
inline ::google::protobuf::int32 BankerInfo::bankertimes() const {
  // @@protoc_insertion_point(field_get:BankerInfo.bankertimes)
  return bankertimes_;
}
inline void BankerInfo::set_bankertimes(::google::protobuf::int32 value) {
  set_has_bankertimes();
  bankertimes_ = value;
  // @@protoc_insertion_point(field_set:BankerInfo.bankertimes)
}

// optional int64 max_score = 5;
inline bool BankerInfo::has_max_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BankerInfo::set_has_max_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BankerInfo::clear_has_max_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BankerInfo::clear_max_score() {
  max_score_ = GOOGLE_LONGLONG(0);
  clear_has_max_score();
}
inline ::google::protobuf::int64 BankerInfo::max_score() const {
  // @@protoc_insertion_point(field_get:BankerInfo.max_score)
  return max_score_;
}
inline void BankerInfo::set_max_score(::google::protobuf::int64 value) {
  set_has_max_score();
  max_score_ = value;
  // @@protoc_insertion_point(field_set:BankerInfo.max_score)
}

// optional int64 banker_score = 6;
inline bool BankerInfo::has_banker_score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BankerInfo::set_has_banker_score() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BankerInfo::clear_has_banker_score() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BankerInfo::clear_banker_score() {
  banker_score_ = GOOGLE_LONGLONG(0);
  clear_has_banker_score();
}
inline ::google::protobuf::int64 BankerInfo::banker_score() const {
  // @@protoc_insertion_point(field_get:BankerInfo.banker_score)
  return banker_score_;
}
inline void BankerInfo::set_banker_score(::google::protobuf::int64 value) {
  set_has_banker_score();
  banker_score_ = value;
  // @@protoc_insertion_point(field_set:BankerInfo.banker_score)
}

// optional int64 left_score = 7;
inline bool BankerInfo::has_left_score() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BankerInfo::set_has_left_score() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BankerInfo::clear_has_left_score() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BankerInfo::clear_left_score() {
  left_score_ = GOOGLE_LONGLONG(0);
  clear_has_left_score();
}
inline ::google::protobuf::int64 BankerInfo::left_score() const {
  // @@protoc_insertion_point(field_get:BankerInfo.left_score)
  return left_score_;
}
inline void BankerInfo::set_left_score(::google::protobuf::int64 value) {
  set_has_left_score();
  left_score_ = value;
  // @@protoc_insertion_point(field_set:BankerInfo.left_score)
}

// optional int32 header_icon = 8 [default = 0];
inline bool BankerInfo::has_header_icon() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BankerInfo::set_has_header_icon() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BankerInfo::clear_has_header_icon() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BankerInfo::clear_header_icon() {
  header_icon_ = 0;
  clear_has_header_icon();
}
inline ::google::protobuf::int32 BankerInfo::header_icon() const {
  // @@protoc_insertion_point(field_get:BankerInfo.header_icon)
  return header_icon_;
}
inline void BankerInfo::set_header_icon(::google::protobuf::int32 value) {
  set_has_header_icon();
  header_icon_ = value;
  // @@protoc_insertion_point(field_set:BankerInfo.header_icon)
}

// -------------------------------------------------------------------

// SC_OxBankerInfo

// optional .BankerInfo pb_banker_info = 1;
inline bool SC_OxBankerInfo::has_pb_banker_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxBankerInfo::set_has_pb_banker_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxBankerInfo::clear_has_pb_banker_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxBankerInfo::clear_pb_banker_info() {
  if (pb_banker_info_ != NULL) pb_banker_info_->::BankerInfo::Clear();
  clear_has_pb_banker_info();
}
inline const ::BankerInfo& SC_OxBankerInfo::pb_banker_info() const {
  // @@protoc_insertion_point(field_get:SC_OxBankerInfo.pb_banker_info)
  return pb_banker_info_ != NULL ? *pb_banker_info_
                         : *::BankerInfo::internal_default_instance();
}
inline ::BankerInfo* SC_OxBankerInfo::mutable_pb_banker_info() {
  set_has_pb_banker_info();
  if (pb_banker_info_ == NULL) {
    pb_banker_info_ = new ::BankerInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_OxBankerInfo.pb_banker_info)
  return pb_banker_info_;
}
inline ::BankerInfo* SC_OxBankerInfo::release_pb_banker_info() {
  // @@protoc_insertion_point(field_release:SC_OxBankerInfo.pb_banker_info)
  clear_has_pb_banker_info();
  ::BankerInfo* temp = pb_banker_info_;
  pb_banker_info_ = NULL;
  return temp;
}
inline void SC_OxBankerInfo::set_allocated_pb_banker_info(::BankerInfo* pb_banker_info) {
  delete pb_banker_info_;
  pb_banker_info_ = pb_banker_info;
  if (pb_banker_info) {
    set_has_pb_banker_info();
  } else {
    clear_has_pb_banker_info();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_OxBankerInfo.pb_banker_info)
}

// -------------------------------------------------------------------

// BankerList

// optional int32 guid = 1;
inline bool BankerList::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BankerList::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BankerList::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BankerList::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 BankerList::guid() const {
  // @@protoc_insertion_point(field_get:BankerList.guid)
  return guid_;
}
inline void BankerList::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:BankerList.guid)
}

// optional string nickname = 2;
inline bool BankerList::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BankerList::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BankerList::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BankerList::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& BankerList::nickname() const {
  // @@protoc_insertion_point(field_get:BankerList.nickname)
  return nickname_.GetNoArena();
}
inline void BankerList::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankerList.nickname)
}
#if LANG_CXX11
inline void BankerList::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankerList.nickname)
}
#endif
inline void BankerList::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankerList.nickname)
}
inline void BankerList::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankerList.nickname)
}
inline ::std::string* BankerList::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:BankerList.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BankerList::release_nickname() {
  // @@protoc_insertion_point(field_release:BankerList.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BankerList::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:BankerList.nickname)
}

// optional int64 money = 3;
inline bool BankerList::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BankerList::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BankerList::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BankerList::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 BankerList::money() const {
  // @@protoc_insertion_point(field_get:BankerList.money)
  return money_;
}
inline void BankerList::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:BankerList.money)
}

// optional int32 header_icon = 4 [default = 0];
inline bool BankerList::has_header_icon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BankerList::set_has_header_icon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BankerList::clear_has_header_icon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BankerList::clear_header_icon() {
  header_icon_ = 0;
  clear_has_header_icon();
}
inline ::google::protobuf::int32 BankerList::header_icon() const {
  // @@protoc_insertion_point(field_get:BankerList.header_icon)
  return header_icon_;
}
inline void BankerList::set_header_icon(::google::protobuf::int32 value) {
  set_has_header_icon();
  header_icon_ = value;
  // @@protoc_insertion_point(field_set:BankerList.header_icon)
}

// -------------------------------------------------------------------

// SC_OxBankerList

// optional int32 banker_num_total = 1;
inline bool SC_OxBankerList::has_banker_num_total() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxBankerList::set_has_banker_num_total() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxBankerList::clear_has_banker_num_total() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxBankerList::clear_banker_num_total() {
  banker_num_total_ = 0;
  clear_has_banker_num_total();
}
inline ::google::protobuf::int32 SC_OxBankerList::banker_num_total() const {
  // @@protoc_insertion_point(field_get:SC_OxBankerList.banker_num_total)
  return banker_num_total_;
}
inline void SC_OxBankerList::set_banker_num_total(::google::protobuf::int32 value) {
  set_has_banker_num_total();
  banker_num_total_ = value;
  // @@protoc_insertion_point(field_set:SC_OxBankerList.banker_num_total)
}

// repeated .BankerList pb_banker_list = 2;
inline int SC_OxBankerList::pb_banker_list_size() const {
  return pb_banker_list_.size();
}
inline void SC_OxBankerList::clear_pb_banker_list() {
  pb_banker_list_.Clear();
}
inline const ::BankerList& SC_OxBankerList::pb_banker_list(int index) const {
  // @@protoc_insertion_point(field_get:SC_OxBankerList.pb_banker_list)
  return pb_banker_list_.Get(index);
}
inline ::BankerList* SC_OxBankerList::mutable_pb_banker_list(int index) {
  // @@protoc_insertion_point(field_mutable:SC_OxBankerList.pb_banker_list)
  return pb_banker_list_.Mutable(index);
}
inline ::BankerList* SC_OxBankerList::add_pb_banker_list() {
  // @@protoc_insertion_point(field_add:SC_OxBankerList.pb_banker_list)
  return pb_banker_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BankerList >*
SC_OxBankerList::mutable_pb_banker_list() {
  // @@protoc_insertion_point(field_mutable_list:SC_OxBankerList.pb_banker_list)
  return &pb_banker_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BankerList >&
SC_OxBankerList::pb_banker_list() const {
  // @@protoc_insertion_point(field_list:SC_OxBankerList.pb_banker_list)
  return pb_banker_list_;
}

// -------------------------------------------------------------------

// SC_OxForBankerFlag

// optional int32 result = 1;
inline bool SC_OxForBankerFlag::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxForBankerFlag::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxForBankerFlag::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxForBankerFlag::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_OxForBankerFlag::result() const {
  // @@protoc_insertion_point(field_get:SC_OxForBankerFlag.result)
  return result_;
}
inline void SC_OxForBankerFlag::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_OxForBankerFlag.result)
}

// -------------------------------------------------------------------

// SC_OxBetCoin

// optional int32 result = 1;
inline bool SC_OxBetCoin::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxBetCoin::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxBetCoin::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxBetCoin::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_OxBetCoin::result() const {
  // @@protoc_insertion_point(field_get:SC_OxBetCoin.result)
  return result_;
}
inline void SC_OxBetCoin::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_OxBetCoin.result)
}

// -------------------------------------------------------------------

// SC_OxPlayerList

// optional int32 top_player_total = 1;
inline bool SC_OxPlayerList::has_top_player_total() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxPlayerList::set_has_top_player_total() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxPlayerList::clear_has_top_player_total() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxPlayerList::clear_top_player_total() {
  top_player_total_ = 0;
  clear_has_top_player_total();
}
inline ::google::protobuf::int32 SC_OxPlayerList::top_player_total() const {
  // @@protoc_insertion_point(field_get:SC_OxPlayerList.top_player_total)
  return top_player_total_;
}
inline void SC_OxPlayerList::set_top_player_total(::google::protobuf::int32 value) {
  set_has_top_player_total();
  top_player_total_ = value;
  // @@protoc_insertion_point(field_set:SC_OxPlayerList.top_player_total)
}

// repeated .PlayerTopInfo pb_player_info_list = 2;
inline int SC_OxPlayerList::pb_player_info_list_size() const {
  return pb_player_info_list_.size();
}
inline void SC_OxPlayerList::clear_pb_player_info_list() {
  pb_player_info_list_.Clear();
}
inline const ::PlayerTopInfo& SC_OxPlayerList::pb_player_info_list(int index) const {
  // @@protoc_insertion_point(field_get:SC_OxPlayerList.pb_player_info_list)
  return pb_player_info_list_.Get(index);
}
inline ::PlayerTopInfo* SC_OxPlayerList::mutable_pb_player_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:SC_OxPlayerList.pb_player_info_list)
  return pb_player_info_list_.Mutable(index);
}
inline ::PlayerTopInfo* SC_OxPlayerList::add_pb_player_info_list() {
  // @@protoc_insertion_point(field_add:SC_OxPlayerList.pb_player_info_list)
  return pb_player_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerTopInfo >*
SC_OxPlayerList::mutable_pb_player_info_list() {
  // @@protoc_insertion_point(field_mutable_list:SC_OxPlayerList.pb_player_info_list)
  return &pb_player_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerTopInfo >&
SC_OxPlayerList::pb_player_info_list() const {
  // @@protoc_insertion_point(field_list:SC_OxPlayerList.pb_player_info_list)
  return pb_player_info_list_;
}

// -------------------------------------------------------------------

// EveryAreaInfo

// optional int64 max_bet_score = 1;
inline bool EveryAreaInfo::has_max_bet_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EveryAreaInfo::set_has_max_bet_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EveryAreaInfo::clear_has_max_bet_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EveryAreaInfo::clear_max_bet_score() {
  max_bet_score_ = GOOGLE_LONGLONG(0);
  clear_has_max_bet_score();
}
inline ::google::protobuf::int64 EveryAreaInfo::max_bet_score() const {
  // @@protoc_insertion_point(field_get:EveryAreaInfo.max_bet_score)
  return max_bet_score_;
}
inline void EveryAreaInfo::set_max_bet_score(::google::protobuf::int64 value) {
  set_has_max_bet_score();
  max_bet_score_ = value;
  // @@protoc_insertion_point(field_set:EveryAreaInfo.max_bet_score)
}

// optional int64 bet_tian_total = 2;
inline bool EveryAreaInfo::has_bet_tian_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EveryAreaInfo::set_has_bet_tian_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EveryAreaInfo::clear_has_bet_tian_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EveryAreaInfo::clear_bet_tian_total() {
  bet_tian_total_ = GOOGLE_LONGLONG(0);
  clear_has_bet_tian_total();
}
inline ::google::protobuf::int64 EveryAreaInfo::bet_tian_total() const {
  // @@protoc_insertion_point(field_get:EveryAreaInfo.bet_tian_total)
  return bet_tian_total_;
}
inline void EveryAreaInfo::set_bet_tian_total(::google::protobuf::int64 value) {
  set_has_bet_tian_total();
  bet_tian_total_ = value;
  // @@protoc_insertion_point(field_set:EveryAreaInfo.bet_tian_total)
}

// optional int64 bet_di_total = 3;
inline bool EveryAreaInfo::has_bet_di_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EveryAreaInfo::set_has_bet_di_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EveryAreaInfo::clear_has_bet_di_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EveryAreaInfo::clear_bet_di_total() {
  bet_di_total_ = GOOGLE_LONGLONG(0);
  clear_has_bet_di_total();
}
inline ::google::protobuf::int64 EveryAreaInfo::bet_di_total() const {
  // @@protoc_insertion_point(field_get:EveryAreaInfo.bet_di_total)
  return bet_di_total_;
}
inline void EveryAreaInfo::set_bet_di_total(::google::protobuf::int64 value) {
  set_has_bet_di_total();
  bet_di_total_ = value;
  // @@protoc_insertion_point(field_set:EveryAreaInfo.bet_di_total)
}

// optional int64 bet_xuan_total = 4;
inline bool EveryAreaInfo::has_bet_xuan_total() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EveryAreaInfo::set_has_bet_xuan_total() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EveryAreaInfo::clear_has_bet_xuan_total() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EveryAreaInfo::clear_bet_xuan_total() {
  bet_xuan_total_ = GOOGLE_LONGLONG(0);
  clear_has_bet_xuan_total();
}
inline ::google::protobuf::int64 EveryAreaInfo::bet_xuan_total() const {
  // @@protoc_insertion_point(field_get:EveryAreaInfo.bet_xuan_total)
  return bet_xuan_total_;
}
inline void EveryAreaInfo::set_bet_xuan_total(::google::protobuf::int64 value) {
  set_has_bet_xuan_total();
  bet_xuan_total_ = value;
  // @@protoc_insertion_point(field_set:EveryAreaInfo.bet_xuan_total)
}

// optional int64 bet_huang_total = 5;
inline bool EveryAreaInfo::has_bet_huang_total() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EveryAreaInfo::set_has_bet_huang_total() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EveryAreaInfo::clear_has_bet_huang_total() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EveryAreaInfo::clear_bet_huang_total() {
  bet_huang_total_ = GOOGLE_LONGLONG(0);
  clear_has_bet_huang_total();
}
inline ::google::protobuf::int64 EveryAreaInfo::bet_huang_total() const {
  // @@protoc_insertion_point(field_get:EveryAreaInfo.bet_huang_total)
  return bet_huang_total_;
}
inline void EveryAreaInfo::set_bet_huang_total(::google::protobuf::int64 value) {
  set_has_bet_huang_total();
  bet_huang_total_ = value;
  // @@protoc_insertion_point(field_set:EveryAreaInfo.bet_huang_total)
}

// optional int64 left_money_bet = 6;
inline bool EveryAreaInfo::has_left_money_bet() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EveryAreaInfo::set_has_left_money_bet() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EveryAreaInfo::clear_has_left_money_bet() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EveryAreaInfo::clear_left_money_bet() {
  left_money_bet_ = GOOGLE_LONGLONG(0);
  clear_has_left_money_bet();
}
inline ::google::protobuf::int64 EveryAreaInfo::left_money_bet() const {
  // @@protoc_insertion_point(field_get:EveryAreaInfo.left_money_bet)
  return left_money_bet_;
}
inline void EveryAreaInfo::set_left_money_bet(::google::protobuf::int64 value) {
  set_has_left_money_bet();
  left_money_bet_ = value;
  // @@protoc_insertion_point(field_set:EveryAreaInfo.left_money_bet)
}

// optional int64 total_all_area_bet_money = 7;
inline bool EveryAreaInfo::has_total_all_area_bet_money() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EveryAreaInfo::set_has_total_all_area_bet_money() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EveryAreaInfo::clear_has_total_all_area_bet_money() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EveryAreaInfo::clear_total_all_area_bet_money() {
  total_all_area_bet_money_ = GOOGLE_LONGLONG(0);
  clear_has_total_all_area_bet_money();
}
inline ::google::protobuf::int64 EveryAreaInfo::total_all_area_bet_money() const {
  // @@protoc_insertion_point(field_get:EveryAreaInfo.total_all_area_bet_money)
  return total_all_area_bet_money_;
}
inline void EveryAreaInfo::set_total_all_area_bet_money(::google::protobuf::int64 value) {
  set_has_total_all_area_bet_money();
  total_all_area_bet_money_ = value;
  // @@protoc_insertion_point(field_set:EveryAreaInfo.total_all_area_bet_money)
}

// -------------------------------------------------------------------

// SC_OxEveryArea

// optional .EveryAreaInfo pb_AreaInfo = 1;
inline bool SC_OxEveryArea::has_pb_areainfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxEveryArea::set_has_pb_areainfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxEveryArea::clear_has_pb_areainfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxEveryArea::clear_pb_areainfo() {
  if (pb_areainfo_ != NULL) pb_areainfo_->::EveryAreaInfo::Clear();
  clear_has_pb_areainfo();
}
inline const ::EveryAreaInfo& SC_OxEveryArea::pb_areainfo() const {
  // @@protoc_insertion_point(field_get:SC_OxEveryArea.pb_AreaInfo)
  return pb_areainfo_ != NULL ? *pb_areainfo_
                         : *::EveryAreaInfo::internal_default_instance();
}
inline ::EveryAreaInfo* SC_OxEveryArea::mutable_pb_areainfo() {
  set_has_pb_areainfo();
  if (pb_areainfo_ == NULL) {
    pb_areainfo_ = new ::EveryAreaInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_OxEveryArea.pb_AreaInfo)
  return pb_areainfo_;
}
inline ::EveryAreaInfo* SC_OxEveryArea::release_pb_areainfo() {
  // @@protoc_insertion_point(field_release:SC_OxEveryArea.pb_AreaInfo)
  clear_has_pb_areainfo();
  ::EveryAreaInfo* temp = pb_areainfo_;
  pb_areainfo_ = NULL;
  return temp;
}
inline void SC_OxEveryArea::set_allocated_pb_areainfo(::EveryAreaInfo* pb_areainfo) {
  delete pb_areainfo_;
  pb_areainfo_ = pb_areainfo;
  if (pb_areainfo) {
    set_has_pb_areainfo();
  } else {
    clear_has_pb_areainfo();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_OxEveryArea.pb_AreaInfo)
}

// -------------------------------------------------------------------

// CS_OxApplyForBanker

// optional int32 guid = 1;
inline bool CS_OxApplyForBanker::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CS_OxApplyForBanker::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CS_OxApplyForBanker::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CS_OxApplyForBanker::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 CS_OxApplyForBanker::guid() const {
  // @@protoc_insertion_point(field_get:CS_OxApplyForBanker.guid)
  return guid_;
}
inline void CS_OxApplyForBanker::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:CS_OxApplyForBanker.guid)
}

// optional string nickname = 2;
inline bool CS_OxApplyForBanker::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_OxApplyForBanker::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_OxApplyForBanker::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_OxApplyForBanker::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& CS_OxApplyForBanker::nickname() const {
  // @@protoc_insertion_point(field_get:CS_OxApplyForBanker.nickname)
  return nickname_.GetNoArena();
}
inline void CS_OxApplyForBanker::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_OxApplyForBanker.nickname)
}
#if LANG_CXX11
inline void CS_OxApplyForBanker::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CS_OxApplyForBanker.nickname)
}
#endif
inline void CS_OxApplyForBanker::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_OxApplyForBanker.nickname)
}
inline void CS_OxApplyForBanker::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_OxApplyForBanker.nickname)
}
inline ::std::string* CS_OxApplyForBanker::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:CS_OxApplyForBanker.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_OxApplyForBanker::release_nickname() {
  // @@protoc_insertion_point(field_release:CS_OxApplyForBanker.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_OxApplyForBanker::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:CS_OxApplyForBanker.nickname)
}

// optional int64 money = 3;
inline bool CS_OxApplyForBanker::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_OxApplyForBanker::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_OxApplyForBanker::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_OxApplyForBanker::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 CS_OxApplyForBanker::money() const {
  // @@protoc_insertion_point(field_get:CS_OxApplyForBanker.money)
  return money_;
}
inline void CS_OxApplyForBanker::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CS_OxApplyForBanker.money)
}

// -------------------------------------------------------------------

// CS_OxLeaveForBanker

// optional int32 guid = 1;
inline bool CS_OxLeaveForBanker::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_OxLeaveForBanker::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_OxLeaveForBanker::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_OxLeaveForBanker::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 CS_OxLeaveForBanker::guid() const {
  // @@protoc_insertion_point(field_get:CS_OxLeaveForBanker.guid)
  return guid_;
}
inline void CS_OxLeaveForBanker::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:CS_OxLeaveForBanker.guid)
}

// -------------------------------------------------------------------

// CS_OxCurBankerLeave

// optional int32 guid = 1;
inline bool CS_OxCurBankerLeave::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_OxCurBankerLeave::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_OxCurBankerLeave::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_OxCurBankerLeave::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 CS_OxCurBankerLeave::guid() const {
  // @@protoc_insertion_point(field_get:CS_OxCurBankerLeave.guid)
  return guid_;
}
inline void CS_OxCurBankerLeave::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:CS_OxCurBankerLeave.guid)
}

// -------------------------------------------------------------------

// SC_OxSatusAndDownTime

// optional int32 status = 1;
inline bool SC_OxSatusAndDownTime::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxSatusAndDownTime::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxSatusAndDownTime::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxSatusAndDownTime::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 SC_OxSatusAndDownTime::status() const {
  // @@protoc_insertion_point(field_get:SC_OxSatusAndDownTime.status)
  return status_;
}
inline void SC_OxSatusAndDownTime::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:SC_OxSatusAndDownTime.status)
}

// optional int32 count_down_time = 2;
inline bool SC_OxSatusAndDownTime::has_count_down_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_OxSatusAndDownTime::set_has_count_down_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_OxSatusAndDownTime::clear_has_count_down_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_OxSatusAndDownTime::clear_count_down_time() {
  count_down_time_ = 0;
  clear_has_count_down_time();
}
inline ::google::protobuf::int32 SC_OxSatusAndDownTime::count_down_time() const {
  // @@protoc_insertion_point(field_get:SC_OxSatusAndDownTime.count_down_time)
  return count_down_time_;
}
inline void SC_OxSatusAndDownTime::set_count_down_time(::google::protobuf::int32 value) {
  set_has_count_down_time();
  count_down_time_ = value;
  // @@protoc_insertion_point(field_set:SC_OxSatusAndDownTime.count_down_time)
}

// -------------------------------------------------------------------

// Oxplayer_info

// optional int32 guid = 1;
inline bool Oxplayer_info::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Oxplayer_info::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Oxplayer_info::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Oxplayer_info::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 Oxplayer_info::guid() const {
  // @@protoc_insertion_point(field_get:Oxplayer_info.guid)
  return guid_;
}
inline void Oxplayer_info::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Oxplayer_info.guid)
}

// optional string nickname = 2;
inline bool Oxplayer_info::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Oxplayer_info::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Oxplayer_info::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Oxplayer_info::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& Oxplayer_info::nickname() const {
  // @@protoc_insertion_point(field_get:Oxplayer_info.nickname)
  return nickname_.GetNoArena();
}
inline void Oxplayer_info::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Oxplayer_info.nickname)
}
#if LANG_CXX11
inline void Oxplayer_info::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Oxplayer_info.nickname)
}
#endif
inline void Oxplayer_info::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Oxplayer_info.nickname)
}
inline void Oxplayer_info::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Oxplayer_info.nickname)
}
inline ::std::string* Oxplayer_info::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:Oxplayer_info.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Oxplayer_info::release_nickname() {
  // @@protoc_insertion_point(field_release:Oxplayer_info.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Oxplayer_info::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:Oxplayer_info.nickname)
}

// optional int64 money = 3;
inline bool Oxplayer_info::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Oxplayer_info::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Oxplayer_info::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Oxplayer_info::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 Oxplayer_info::money() const {
  // @@protoc_insertion_point(field_get:Oxplayer_info.money)
  return money_;
}
inline void Oxplayer_info::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:Oxplayer_info.money)
}

// optional int32 header_icon = 4 [default = 0];
inline bool Oxplayer_info::has_header_icon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Oxplayer_info::set_has_header_icon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Oxplayer_info::clear_has_header_icon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Oxplayer_info::clear_header_icon() {
  header_icon_ = 0;
  clear_has_header_icon();
}
inline ::google::protobuf::int32 Oxplayer_info::header_icon() const {
  // @@protoc_insertion_point(field_get:Oxplayer_info.header_icon)
  return header_icon_;
}
inline void Oxplayer_info::set_header_icon(::google::protobuf::int32 value) {
  set_has_header_icon();
  header_icon_ = value;
  // @@protoc_insertion_point(field_set:Oxplayer_info.header_icon)
}

// -------------------------------------------------------------------

// SC_OxPlayerConnection

// repeated .Oxplayer_info pb_player_info = 1;
inline int SC_OxPlayerConnection::pb_player_info_size() const {
  return pb_player_info_.size();
}
inline void SC_OxPlayerConnection::clear_pb_player_info() {
  pb_player_info_.Clear();
}
inline const ::Oxplayer_info& SC_OxPlayerConnection::pb_player_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_OxPlayerConnection.pb_player_info)
  return pb_player_info_.Get(index);
}
inline ::Oxplayer_info* SC_OxPlayerConnection::mutable_pb_player_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_OxPlayerConnection.pb_player_info)
  return pb_player_info_.Mutable(index);
}
inline ::Oxplayer_info* SC_OxPlayerConnection::add_pb_player_info() {
  // @@protoc_insertion_point(field_add:SC_OxPlayerConnection.pb_player_info)
  return pb_player_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Oxplayer_info >*
SC_OxPlayerConnection::mutable_pb_player_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_OxPlayerConnection.pb_player_info)
  return &pb_player_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Oxplayer_info >&
SC_OxPlayerConnection::pb_player_info() const {
  // @@protoc_insertion_point(field_list:SC_OxPlayerConnection.pb_player_info)
  return pb_player_info_;
}

// -------------------------------------------------------------------

// Player_bet_info

// optional int32 which_area = 1;
inline bool Player_bet_info::has_which_area() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Player_bet_info::set_has_which_area() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Player_bet_info::clear_has_which_area() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Player_bet_info::clear_which_area() {
  which_area_ = 0;
  clear_has_which_area();
}
inline ::google::protobuf::int32 Player_bet_info::which_area() const {
  // @@protoc_insertion_point(field_get:Player_bet_info.which_area)
  return which_area_;
}
inline void Player_bet_info::set_which_area(::google::protobuf::int32 value) {
  set_has_which_area();
  which_area_ = value;
  // @@protoc_insertion_point(field_set:Player_bet_info.which_area)
}

// optional int64 bet_money = 2;
inline bool Player_bet_info::has_bet_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_bet_info::set_has_bet_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_bet_info::clear_has_bet_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_bet_info::clear_bet_money() {
  bet_money_ = GOOGLE_LONGLONG(0);
  clear_has_bet_money();
}
inline ::google::protobuf::int64 Player_bet_info::bet_money() const {
  // @@protoc_insertion_point(field_get:Player_bet_info.bet_money)
  return bet_money_;
}
inline void Player_bet_info::set_bet_money(::google::protobuf::int64 value) {
  set_has_bet_money();
  bet_money_ = value;
  // @@protoc_insertion_point(field_set:Player_bet_info.bet_money)
}

// -------------------------------------------------------------------

// CardResult

// optional int32 score_area = 1;
inline bool CardResult::has_score_area() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardResult::set_has_score_area() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardResult::clear_has_score_area() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardResult::clear_score_area() {
  score_area_ = 0;
  clear_has_score_area();
}
inline ::google::protobuf::int32 CardResult::score_area() const {
  // @@protoc_insertion_point(field_get:CardResult.score_area)
  return score_area_;
}
inline void CardResult::set_score_area(::google::protobuf::int32 value) {
  set_has_score_area();
  score_area_ = value;
  // @@protoc_insertion_point(field_set:CardResult.score_area)
}

// optional int32 card_type = 2;
inline bool CardResult::has_card_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardResult::set_has_card_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardResult::clear_has_card_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardResult::clear_card_type() {
  card_type_ = 0;
  clear_has_card_type();
}
inline ::google::protobuf::int32 CardResult::card_type() const {
  // @@protoc_insertion_point(field_get:CardResult.card_type)
  return card_type_;
}
inline void CardResult::set_card_type(::google::protobuf::int32 value) {
  set_has_card_type();
  card_type_ = value;
  // @@protoc_insertion_point(field_set:CardResult.card_type)
}

// optional int32 card_times = 3;
inline bool CardResult::has_card_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CardResult::set_has_card_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CardResult::clear_has_card_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CardResult::clear_card_times() {
  card_times_ = 0;
  clear_has_card_times();
}
inline ::google::protobuf::int32 CardResult::card_times() const {
  // @@protoc_insertion_point(field_get:CardResult.card_times)
  return card_times_;
}
inline void CardResult::set_card_times(::google::protobuf::int32 value) {
  set_has_card_times();
  card_times_ = value;
  // @@protoc_insertion_point(field_set:CardResult.card_times)
}

// -------------------------------------------------------------------

// SC_OxTableInfo

// optional int32 status = 1;
inline bool SC_OxTableInfo::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_OxTableInfo::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_OxTableInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_OxTableInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 SC_OxTableInfo::status() const {
  // @@protoc_insertion_point(field_get:SC_OxTableInfo.status)
  return status_;
}
inline void SC_OxTableInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:SC_OxTableInfo.status)
}

// optional int32 count_down_time = 2;
inline bool SC_OxTableInfo::has_count_down_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SC_OxTableInfo::set_has_count_down_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SC_OxTableInfo::clear_has_count_down_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SC_OxTableInfo::clear_count_down_time() {
  count_down_time_ = 0;
  clear_has_count_down_time();
}
inline ::google::protobuf::int32 SC_OxTableInfo::count_down_time() const {
  // @@protoc_insertion_point(field_get:SC_OxTableInfo.count_down_time)
  return count_down_time_;
}
inline void SC_OxTableInfo::set_count_down_time(::google::protobuf::int32 value) {
  set_has_count_down_time();
  count_down_time_ = value;
  // @@protoc_insertion_point(field_set:SC_OxTableInfo.count_down_time)
}

// optional .BankerInfo pb_curBanker = 3;
inline bool SC_OxTableInfo::has_pb_curbanker() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxTableInfo::set_has_pb_curbanker() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxTableInfo::clear_has_pb_curbanker() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxTableInfo::clear_pb_curbanker() {
  if (pb_curbanker_ != NULL) pb_curbanker_->::BankerInfo::Clear();
  clear_has_pb_curbanker();
}
inline const ::BankerInfo& SC_OxTableInfo::pb_curbanker() const {
  // @@protoc_insertion_point(field_get:SC_OxTableInfo.pb_curBanker)
  return pb_curbanker_ != NULL ? *pb_curbanker_
                         : *::BankerInfo::internal_default_instance();
}
inline ::BankerInfo* SC_OxTableInfo::mutable_pb_curbanker() {
  set_has_pb_curbanker();
  if (pb_curbanker_ == NULL) {
    pb_curbanker_ = new ::BankerInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_OxTableInfo.pb_curBanker)
  return pb_curbanker_;
}
inline ::BankerInfo* SC_OxTableInfo::release_pb_curbanker() {
  // @@protoc_insertion_point(field_release:SC_OxTableInfo.pb_curBanker)
  clear_has_pb_curbanker();
  ::BankerInfo* temp = pb_curbanker_;
  pb_curbanker_ = NULL;
  return temp;
}
inline void SC_OxTableInfo::set_allocated_pb_curbanker(::BankerInfo* pb_curbanker) {
  delete pb_curbanker_;
  pb_curbanker_ = pb_curbanker;
  if (pb_curbanker) {
    set_has_pb_curbanker();
  } else {
    clear_has_pb_curbanker();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_OxTableInfo.pb_curBanker)
}

// repeated .PlayerTopInfo pb_player_info_list = 4;
inline int SC_OxTableInfo::pb_player_info_list_size() const {
  return pb_player_info_list_.size();
}
inline void SC_OxTableInfo::clear_pb_player_info_list() {
  pb_player_info_list_.Clear();
}
inline const ::PlayerTopInfo& SC_OxTableInfo::pb_player_info_list(int index) const {
  // @@protoc_insertion_point(field_get:SC_OxTableInfo.pb_player_info_list)
  return pb_player_info_list_.Get(index);
}
inline ::PlayerTopInfo* SC_OxTableInfo::mutable_pb_player_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:SC_OxTableInfo.pb_player_info_list)
  return pb_player_info_list_.Mutable(index);
}
inline ::PlayerTopInfo* SC_OxTableInfo::add_pb_player_info_list() {
  // @@protoc_insertion_point(field_add:SC_OxTableInfo.pb_player_info_list)
  return pb_player_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerTopInfo >*
SC_OxTableInfo::mutable_pb_player_info_list() {
  // @@protoc_insertion_point(field_mutable_list:SC_OxTableInfo.pb_player_info_list)
  return &pb_player_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerTopInfo >&
SC_OxTableInfo::pb_player_info_list() const {
  // @@protoc_insertion_point(field_list:SC_OxTableInfo.pb_player_info_list)
  return pb_player_info_list_;
}

// repeated .BankerList pb_banker_list = 5;
inline int SC_OxTableInfo::pb_banker_list_size() const {
  return pb_banker_list_.size();
}
inline void SC_OxTableInfo::clear_pb_banker_list() {
  pb_banker_list_.Clear();
}
inline const ::BankerList& SC_OxTableInfo::pb_banker_list(int index) const {
  // @@protoc_insertion_point(field_get:SC_OxTableInfo.pb_banker_list)
  return pb_banker_list_.Get(index);
}
inline ::BankerList* SC_OxTableInfo::mutable_pb_banker_list(int index) {
  // @@protoc_insertion_point(field_mutable:SC_OxTableInfo.pb_banker_list)
  return pb_banker_list_.Mutable(index);
}
inline ::BankerList* SC_OxTableInfo::add_pb_banker_list() {
  // @@protoc_insertion_point(field_add:SC_OxTableInfo.pb_banker_list)
  return pb_banker_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BankerList >*
SC_OxTableInfo::mutable_pb_banker_list() {
  // @@protoc_insertion_point(field_mutable_list:SC_OxTableInfo.pb_banker_list)
  return &pb_banker_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BankerList >&
SC_OxTableInfo::pb_banker_list() const {
  // @@protoc_insertion_point(field_list:SC_OxTableInfo.pb_banker_list)
  return pb_banker_list_;
}

// optional .EveryAreaInfo pb_AreaInfo = 6;
inline bool SC_OxTableInfo::has_pb_areainfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_OxTableInfo::set_has_pb_areainfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_OxTableInfo::clear_has_pb_areainfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_OxTableInfo::clear_pb_areainfo() {
  if (pb_areainfo_ != NULL) pb_areainfo_->::EveryAreaInfo::Clear();
  clear_has_pb_areainfo();
}
inline const ::EveryAreaInfo& SC_OxTableInfo::pb_areainfo() const {
  // @@protoc_insertion_point(field_get:SC_OxTableInfo.pb_AreaInfo)
  return pb_areainfo_ != NULL ? *pb_areainfo_
                         : *::EveryAreaInfo::internal_default_instance();
}
inline ::EveryAreaInfo* SC_OxTableInfo::mutable_pb_areainfo() {
  set_has_pb_areainfo();
  if (pb_areainfo_ == NULL) {
    pb_areainfo_ = new ::EveryAreaInfo;
  }
  // @@protoc_insertion_point(field_mutable:SC_OxTableInfo.pb_AreaInfo)
  return pb_areainfo_;
}
inline ::EveryAreaInfo* SC_OxTableInfo::release_pb_areainfo() {
  // @@protoc_insertion_point(field_release:SC_OxTableInfo.pb_AreaInfo)
  clear_has_pb_areainfo();
  ::EveryAreaInfo* temp = pb_areainfo_;
  pb_areainfo_ = NULL;
  return temp;
}
inline void SC_OxTableInfo::set_allocated_pb_areainfo(::EveryAreaInfo* pb_areainfo) {
  delete pb_areainfo_;
  pb_areainfo_ = pb_areainfo;
  if (pb_areainfo) {
    set_has_pb_areainfo();
  } else {
    clear_has_pb_areainfo();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_OxTableInfo.pb_AreaInfo)
}

// repeated .Player_bet_info pb_player_area_bet_info = 7;
inline int SC_OxTableInfo::pb_player_area_bet_info_size() const {
  return pb_player_area_bet_info_.size();
}
inline void SC_OxTableInfo::clear_pb_player_area_bet_info() {
  pb_player_area_bet_info_.Clear();
}
inline const ::Player_bet_info& SC_OxTableInfo::pb_player_area_bet_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_OxTableInfo.pb_player_area_bet_info)
  return pb_player_area_bet_info_.Get(index);
}
inline ::Player_bet_info* SC_OxTableInfo::mutable_pb_player_area_bet_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_OxTableInfo.pb_player_area_bet_info)
  return pb_player_area_bet_info_.Mutable(index);
}
inline ::Player_bet_info* SC_OxTableInfo::add_pb_player_area_bet_info() {
  // @@protoc_insertion_point(field_add:SC_OxTableInfo.pb_player_area_bet_info)
  return pb_player_area_bet_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Player_bet_info >*
SC_OxTableInfo::mutable_pb_player_area_bet_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_OxTableInfo.pb_player_area_bet_info)
  return &pb_player_area_bet_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Player_bet_info >&
SC_OxTableInfo::pb_player_area_bet_info() const {
  // @@protoc_insertion_point(field_list:SC_OxTableInfo.pb_player_area_bet_info)
  return pb_player_area_bet_info_;
}

// repeated .Cards pb_cards = 8;
inline int SC_OxTableInfo::pb_cards_size() const {
  return pb_cards_.size();
}
inline void SC_OxTableInfo::clear_pb_cards() {
  pb_cards_.Clear();
}
inline const ::Cards& SC_OxTableInfo::pb_cards(int index) const {
  // @@protoc_insertion_point(field_get:SC_OxTableInfo.pb_cards)
  return pb_cards_.Get(index);
}
inline ::Cards* SC_OxTableInfo::mutable_pb_cards(int index) {
  // @@protoc_insertion_point(field_mutable:SC_OxTableInfo.pb_cards)
  return pb_cards_.Mutable(index);
}
inline ::Cards* SC_OxTableInfo::add_pb_cards() {
  // @@protoc_insertion_point(field_add:SC_OxTableInfo.pb_cards)
  return pb_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Cards >*
SC_OxTableInfo::mutable_pb_cards() {
  // @@protoc_insertion_point(field_mutable_list:SC_OxTableInfo.pb_cards)
  return &pb_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Cards >&
SC_OxTableInfo::pb_cards() const {
  // @@protoc_insertion_point(field_list:SC_OxTableInfo.pb_cards)
  return pb_cards_;
}

// repeated .CardResult pb_result = 9;
inline int SC_OxTableInfo::pb_result_size() const {
  return pb_result_.size();
}
inline void SC_OxTableInfo::clear_pb_result() {
  pb_result_.Clear();
}
inline const ::CardResult& SC_OxTableInfo::pb_result(int index) const {
  // @@protoc_insertion_point(field_get:SC_OxTableInfo.pb_result)
  return pb_result_.Get(index);
}
inline ::CardResult* SC_OxTableInfo::mutable_pb_result(int index) {
  // @@protoc_insertion_point(field_mutable:SC_OxTableInfo.pb_result)
  return pb_result_.Mutable(index);
}
inline ::CardResult* SC_OxTableInfo::add_pb_result() {
  // @@protoc_insertion_point(field_add:SC_OxTableInfo.pb_result)
  return pb_result_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CardResult >*
SC_OxTableInfo::mutable_pb_result() {
  // @@protoc_insertion_point(field_mutable_list:SC_OxTableInfo.pb_result)
  return &pb_result_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CardResult >&
SC_OxTableInfo::pb_result() const {
  // @@protoc_insertion_point(field_list:SC_OxTableInfo.pb_result)
  return pb_result_;
}

// optional .OxPlayerConclude pb_conclude = 10;
inline bool SC_OxTableInfo::has_pb_conclude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_OxTableInfo::set_has_pb_conclude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_OxTableInfo::clear_has_pb_conclude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_OxTableInfo::clear_pb_conclude() {
  if (pb_conclude_ != NULL) pb_conclude_->::OxPlayerConclude::Clear();
  clear_has_pb_conclude();
}
inline const ::OxPlayerConclude& SC_OxTableInfo::pb_conclude() const {
  // @@protoc_insertion_point(field_get:SC_OxTableInfo.pb_conclude)
  return pb_conclude_ != NULL ? *pb_conclude_
                         : *::OxPlayerConclude::internal_default_instance();
}
inline ::OxPlayerConclude* SC_OxTableInfo::mutable_pb_conclude() {
  set_has_pb_conclude();
  if (pb_conclude_ == NULL) {
    pb_conclude_ = new ::OxPlayerConclude;
  }
  // @@protoc_insertion_point(field_mutable:SC_OxTableInfo.pb_conclude)
  return pb_conclude_;
}
inline ::OxPlayerConclude* SC_OxTableInfo::release_pb_conclude() {
  // @@protoc_insertion_point(field_release:SC_OxTableInfo.pb_conclude)
  clear_has_pb_conclude();
  ::OxPlayerConclude* temp = pb_conclude_;
  pb_conclude_ = NULL;
  return temp;
}
inline void SC_OxTableInfo::set_allocated_pb_conclude(::OxPlayerConclude* pb_conclude) {
  delete pb_conclude_;
  pb_conclude_ = pb_conclude;
  if (pb_conclude) {
    set_has_pb_conclude();
  } else {
    clear_has_pb_conclude();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_OxTableInfo.pb_conclude)
}

// -------------------------------------------------------------------

// CS_OxPlayerConnectGame

// optional int32 guid = 1;
inline bool CS_OxPlayerConnectGame::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_OxPlayerConnectGame::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_OxPlayerConnectGame::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_OxPlayerConnectGame::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 CS_OxPlayerConnectGame::guid() const {
  // @@protoc_insertion_point(field_get:CS_OxPlayerConnectGame.guid)
  return guid_;
}
inline void CS_OxPlayerConnectGame::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:CS_OxPlayerConnectGame.guid)
}

// -------------------------------------------------------------------

// SC_CardResult

// repeated .CardResult pb_result = 1;
inline int SC_CardResult::pb_result_size() const {
  return pb_result_.size();
}
inline void SC_CardResult::clear_pb_result() {
  pb_result_.Clear();
}
inline const ::CardResult& SC_CardResult::pb_result(int index) const {
  // @@protoc_insertion_point(field_get:SC_CardResult.pb_result)
  return pb_result_.Get(index);
}
inline ::CardResult* SC_CardResult::mutable_pb_result(int index) {
  // @@protoc_insertion_point(field_mutable:SC_CardResult.pb_result)
  return pb_result_.Mutable(index);
}
inline ::CardResult* SC_CardResult::add_pb_result() {
  // @@protoc_insertion_point(field_add:SC_CardResult.pb_result)
  return pb_result_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CardResult >*
SC_CardResult::mutable_pb_result() {
  // @@protoc_insertion_point(field_mutable_list:SC_CardResult.pb_result)
  return &pb_result_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CardResult >&
SC_CardResult::pb_result() const {
  // @@protoc_insertion_point(field_list:SC_CardResult.pb_result)
  return pb_result_;
}

// -------------------------------------------------------------------

// SC_OxResult

// optional .OxPlayerConclude pb_player_result = 1;
inline bool SC_OxResult::has_pb_player_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxResult::set_has_pb_player_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxResult::clear_has_pb_player_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxResult::clear_pb_player_result() {
  if (pb_player_result_ != NULL) pb_player_result_->::OxPlayerConclude::Clear();
  clear_has_pb_player_result();
}
inline const ::OxPlayerConclude& SC_OxResult::pb_player_result() const {
  // @@protoc_insertion_point(field_get:SC_OxResult.pb_player_result)
  return pb_player_result_ != NULL ? *pb_player_result_
                         : *::OxPlayerConclude::internal_default_instance();
}
inline ::OxPlayerConclude* SC_OxResult::mutable_pb_player_result() {
  set_has_pb_player_result();
  if (pb_player_result_ == NULL) {
    pb_player_result_ = new ::OxPlayerConclude;
  }
  // @@protoc_insertion_point(field_mutable:SC_OxResult.pb_player_result)
  return pb_player_result_;
}
inline ::OxPlayerConclude* SC_OxResult::release_pb_player_result() {
  // @@protoc_insertion_point(field_release:SC_OxResult.pb_player_result)
  clear_has_pb_player_result();
  ::OxPlayerConclude* temp = pb_player_result_;
  pb_player_result_ = NULL;
  return temp;
}
inline void SC_OxResult::set_allocated_pb_player_result(::OxPlayerConclude* pb_player_result) {
  delete pb_player_result_;
  pb_player_result_ = pb_player_result;
  if (pb_player_result) {
    set_has_pb_player_result();
  } else {
    clear_has_pb_player_result();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_OxResult.pb_player_result)
}

// -------------------------------------------------------------------

// SC_OxBankerLeaveFlag

// optional int32 result = 1;
inline bool SC_OxBankerLeaveFlag::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_OxBankerLeaveFlag::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_OxBankerLeaveFlag::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_OxBankerLeaveFlag::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_OxBankerLeaveFlag::result() const {
  // @@protoc_insertion_point(field_get:SC_OxBankerLeaveFlag.result)
  return result_;
}
inline void SC_OxBankerLeaveFlag::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_OxBankerLeaveFlag.result)
}

// -------------------------------------------------------------------

// CS_OxLeaveGame

// optional int32 guid = 1;
inline bool CS_OxLeaveGame::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_OxLeaveGame::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_OxLeaveGame::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_OxLeaveGame::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 CS_OxLeaveGame::guid() const {
  // @@protoc_insertion_point(field_get:CS_OxLeaveGame.guid)
  return guid_;
}
inline void CS_OxLeaveGame::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:CS_OxLeaveGame.guid)
}

// -------------------------------------------------------------------

// chip_info

// optional int32 chip_index = 1;
inline bool chip_info::has_chip_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void chip_info::set_has_chip_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void chip_info::clear_has_chip_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void chip_info::clear_chip_index() {
  chip_index_ = 0;
  clear_has_chip_index();
}
inline ::google::protobuf::int32 chip_info::chip_index() const {
  // @@protoc_insertion_point(field_get:chip_info.chip_index)
  return chip_index_;
}
inline void chip_info::set_chip_index(::google::protobuf::int32 value) {
  set_has_chip_index();
  chip_index_ = value;
  // @@protoc_insertion_point(field_set:chip_info.chip_index)
}

// optional int32 chip_money = 2;
inline bool chip_info::has_chip_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void chip_info::set_has_chip_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void chip_info::clear_has_chip_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void chip_info::clear_chip_money() {
  chip_money_ = 0;
  clear_has_chip_money();
}
inline ::google::protobuf::int32 chip_info::chip_money() const {
  // @@protoc_insertion_point(field_get:chip_info.chip_money)
  return chip_money_;
}
inline void chip_info::set_chip_money(::google::protobuf::int32 value) {
  set_has_chip_money();
  chip_money_ = value;
  // @@protoc_insertion_point(field_set:chip_info.chip_money)
}

// -------------------------------------------------------------------

// SC_Ox_config_info

// optional int32 banker_limit = 1;
inline bool SC_Ox_config_info::has_banker_limit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_Ox_config_info::set_has_banker_limit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_Ox_config_info::clear_has_banker_limit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_Ox_config_info::clear_banker_limit() {
  banker_limit_ = 0;
  clear_has_banker_limit();
}
inline ::google::protobuf::int32 SC_Ox_config_info::banker_limit() const {
  // @@protoc_insertion_point(field_get:SC_Ox_config_info.banker_limit)
  return banker_limit_;
}
inline void SC_Ox_config_info::set_banker_limit(::google::protobuf::int32 value) {
  set_has_banker_limit();
  banker_limit_ = value;
  // @@protoc_insertion_point(field_set:SC_Ox_config_info.banker_limit)
}

// repeated .chip_info pb_info_chip = 2;
inline int SC_Ox_config_info::pb_info_chip_size() const {
  return pb_info_chip_.size();
}
inline void SC_Ox_config_info::clear_pb_info_chip() {
  pb_info_chip_.Clear();
}
inline const ::chip_info& SC_Ox_config_info::pb_info_chip(int index) const {
  // @@protoc_insertion_point(field_get:SC_Ox_config_info.pb_info_chip)
  return pb_info_chip_.Get(index);
}
inline ::chip_info* SC_Ox_config_info::mutable_pb_info_chip(int index) {
  // @@protoc_insertion_point(field_mutable:SC_Ox_config_info.pb_info_chip)
  return pb_info_chip_.Mutable(index);
}
inline ::chip_info* SC_Ox_config_info::add_pb_info_chip() {
  // @@protoc_insertion_point(field_add:SC_Ox_config_info.pb_info_chip)
  return pb_info_chip_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::chip_info >*
SC_Ox_config_info::mutable_pb_info_chip() {
  // @@protoc_insertion_point(field_mutable_list:SC_Ox_config_info.pb_info_chip)
  return &pb_info_chip_;
}
inline const ::google::protobuf::RepeatedPtrField< ::chip_info >&
SC_Ox_config_info::pb_info_chip() const {
  // @@protoc_insertion_point(field_list:SC_Ox_config_info.pb_info_chip)
  return pb_info_chip_;
}

// optional int32 bet_min_limit_money = 3;
inline bool SC_Ox_config_info::has_bet_min_limit_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_Ox_config_info::set_has_bet_min_limit_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_Ox_config_info::clear_has_bet_min_limit_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_Ox_config_info::clear_bet_min_limit_money() {
  bet_min_limit_money_ = 0;
  clear_has_bet_min_limit_money();
}
inline ::google::protobuf::int32 SC_Ox_config_info::bet_min_limit_money() const {
  // @@protoc_insertion_point(field_get:SC_Ox_config_info.bet_min_limit_money)
  return bet_min_limit_money_;
}
inline void SC_Ox_config_info::set_bet_min_limit_money(::google::protobuf::int32 value) {
  set_has_bet_min_limit_money();
  bet_min_limit_money_ = value;
  // @@protoc_insertion_point(field_set:SC_Ox_config_info.bet_min_limit_money)
}

// -------------------------------------------------------------------

// CardCompareResult

// optional int32 area_ = 1;
inline bool CardCompareResult::has_area_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardCompareResult::set_has_area_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardCompareResult::clear_has_area_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardCompareResult::clear_area_() {
  area__ = 0;
  clear_has_area_();
}
inline ::google::protobuf::int32 CardCompareResult::area_() const {
  // @@protoc_insertion_point(field_get:CardCompareResult.area_)
  return area__;
}
inline void CardCompareResult::set_area_(::google::protobuf::int32 value) {
  set_has_area_();
  area__ = value;
  // @@protoc_insertion_point(field_set:CardCompareResult.area_)
}

// optional bool result = 2;
inline bool CardCompareResult::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardCompareResult::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardCompareResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardCompareResult::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool CardCompareResult::result() const {
  // @@protoc_insertion_point(field_get:CardCompareResult.result)
  return result_;
}
inline void CardCompareResult::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CardCompareResult.result)
}

// -------------------------------------------------------------------

// SC_CardCompareResult

// repeated .CardCompareResult pb_CompareResult = 1;
inline int SC_CardCompareResult::pb_compareresult_size() const {
  return pb_compareresult_.size();
}
inline void SC_CardCompareResult::clear_pb_compareresult() {
  pb_compareresult_.Clear();
}
inline const ::CardCompareResult& SC_CardCompareResult::pb_compareresult(int index) const {
  // @@protoc_insertion_point(field_get:SC_CardCompareResult.pb_CompareResult)
  return pb_compareresult_.Get(index);
}
inline ::CardCompareResult* SC_CardCompareResult::mutable_pb_compareresult(int index) {
  // @@protoc_insertion_point(field_mutable:SC_CardCompareResult.pb_CompareResult)
  return pb_compareresult_.Mutable(index);
}
inline ::CardCompareResult* SC_CardCompareResult::add_pb_compareresult() {
  // @@protoc_insertion_point(field_add:SC_CardCompareResult.pb_CompareResult)
  return pb_compareresult_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CardCompareResult >*
SC_CardCompareResult::mutable_pb_compareresult() {
  // @@protoc_insertion_point(field_mutable_list:SC_CardCompareResult.pb_CompareResult)
  return &pb_compareresult_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CardCompareResult >&
SC_CardCompareResult::pb_compareresult() const {
  // @@protoc_insertion_point(field_list:SC_CardCompareResult.pb_CompareResult)
  return pb_compareresult_;
}

// -------------------------------------------------------------------

// CS_OxGetBetCfg

// -------------------------------------------------------------------

// SC_OxGetBetCfg

// repeated int32 bets = 1;
inline int SC_OxGetBetCfg::bets_size() const {
  return bets_.size();
}
inline void SC_OxGetBetCfg::clear_bets() {
  bets_.Clear();
}
inline ::google::protobuf::int32 SC_OxGetBetCfg::bets(int index) const {
  // @@protoc_insertion_point(field_get:SC_OxGetBetCfg.bets)
  return bets_.Get(index);
}
inline void SC_OxGetBetCfg::set_bets(int index, ::google::protobuf::int32 value) {
  bets_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_OxGetBetCfg.bets)
}
inline void SC_OxGetBetCfg::add_bets(::google::protobuf::int32 value) {
  bets_.Add(value);
  // @@protoc_insertion_point(field_add:SC_OxGetBetCfg.bets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_OxGetBetCfg::bets() const {
  // @@protoc_insertion_point(field_list:SC_OxGetBetCfg.bets)
  return bets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_OxGetBetCfg::mutable_bets() {
  // @@protoc_insertion_point(field_mutable_list:SC_OxGetBetCfg.bets)
  return &bets_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::SC_OxStart_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxStart_MsgID>() {
  return ::SC_OxStart_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_OxCallBanker_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_OxCallBanker_MsgID>() {
  return ::CS_OxCallBanker_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxCallBanker_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxCallBanker_MsgID>() {
  return ::SC_OxCallBanker_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxAddScoreStatus_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxAddScoreStatus_MsgID>() {
  return ::SC_OxAddScoreStatus_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_OxAddScore_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_OxAddScore_MsgID>() {
  return ::CS_OxAddScore_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxAddScore_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxAddScore_MsgID>() {
  return ::SC_OxAddScore_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxDealCard_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxDealCard_MsgID>() {
  return ::SC_OxDealCard_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_OxOpenCards_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_OxOpenCards_MsgID>() {
  return ::CS_OxOpenCards_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxOpenCards_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxOpenCards_MsgID>() {
  return ::SC_OxOpenCards_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxEnd_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxEnd_MsgID>() {
  return ::SC_OxEnd_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_OxRecord_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_OxRecord_MsgID>() {
  return ::CS_OxRecord_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxRecord_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxRecord_MsgID>() {
  return ::SC_OxRecord_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_OxTop_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_OxTop_MsgID>() {
  return ::CS_OxTop_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxTop_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxTop_MsgID>() {
  return ::SC_OxTop_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxBankerInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxBankerInfo_MsgID>() {
  return ::SC_OxBankerInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxBankerList_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxBankerList_MsgID>() {
  return ::SC_OxBankerList_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxForBankerFlag_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxForBankerFlag_MsgID>() {
  return ::SC_OxForBankerFlag_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxBetCoin_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxBetCoin_MsgID>() {
  return ::SC_OxBetCoin_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxPlayerList_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxPlayerList_MsgID>() {
  return ::SC_OxPlayerList_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxEveryArea_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxEveryArea_MsgID>() {
  return ::SC_OxEveryArea_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_OxApplyForBanker_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_OxApplyForBanker_MsgID>() {
  return ::CS_OxApplyForBanker_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_OxLeaveForBanker_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_OxLeaveForBanker_MsgID>() {
  return ::CS_OxLeaveForBanker_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_OxCurBankerLeave_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_OxCurBankerLeave_MsgID>() {
  return ::CS_OxCurBankerLeave_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxSatusAndDownTime_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxSatusAndDownTime_MsgID>() {
  return ::SC_OxSatusAndDownTime_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxPlayerConnection_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxPlayerConnection_MsgID>() {
  return ::SC_OxPlayerConnection_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxTableInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxTableInfo_MsgID>() {
  return ::SC_OxTableInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_OxPlayerConnectGame_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_OxPlayerConnectGame_MsgID>() {
  return ::CS_OxPlayerConnectGame_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_CardResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_CardResult_MsgID>() {
  return ::SC_CardResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxResult_MsgID>() {
  return ::SC_OxResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxBankerLeaveFlag_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxBankerLeaveFlag_MsgID>() {
  return ::SC_OxBankerLeaveFlag_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_OxLeaveGame_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_OxLeaveGame_MsgID>() {
  return ::CS_OxLeaveGame_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_Ox_config_info_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_Ox_config_info_MsgID>() {
  return ::SC_Ox_config_info_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_CardCompareResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_CardCompareResult_MsgID>() {
  return ::SC_CardCompareResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_OxGetBetCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_OxGetBetCfg_MsgID>() {
  return ::CS_OxGetBetCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_OxGetBetCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_OxGetBetCfg_MsgID>() {
  return ::SC_OxGetBetCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::OX_CARD_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OX_CARD_TYPE>() {
  return ::OX_CARD_TYPE_descriptor();
}
template <> struct is_proto_enum< ::OX_SCORE_AREA> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OX_SCORE_AREA>() {
  return ::OX_SCORE_AREA_descriptor();
}
template <> struct is_proto_enum< ::Banker_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Banker_Result>() {
  return ::Banker_Result_descriptor();
}
template <> struct is_proto_enum< ::Bet_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Bet_Result>() {
  return ::Bet_Result_descriptor();
}
template <> struct is_proto_enum< ::BankerLeave_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BankerLeave_Result>() {
  return ::BankerLeave_Result_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_public_5fox_2eproto__INCLUDED
