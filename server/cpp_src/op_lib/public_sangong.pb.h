// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: public_sangong.proto

#ifndef PROTOBUF_public_5fsangong_2eproto__INCLUDED
#define PROTOBUF_public_5fsangong_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class CS_SanGong_AskBanker;
class CS_SanGong_AskBankerDefaultTypeInternal;
extern CS_SanGong_AskBankerDefaultTypeInternal _CS_SanGong_AskBanker_default_instance_;
class CS_SanGong_AskBet;
class CS_SanGong_AskBetDefaultTypeInternal;
extern CS_SanGong_AskBetDefaultTypeInternal _CS_SanGong_AskBet_default_instance_;
class SC_SanGong_AskBanker;
class SC_SanGong_AskBankerDefaultTypeInternal;
extern SC_SanGong_AskBankerDefaultTypeInternal _SC_SanGong_AskBanker_default_instance_;
class SC_SanGong_AskBet;
class SC_SanGong_AskBetDefaultTypeInternal;
extern SC_SanGong_AskBetDefaultTypeInternal _SC_SanGong_AskBet_default_instance_;
class SC_SanGong_Banker;
class SC_SanGong_BankerDefaultTypeInternal;
extern SC_SanGong_BankerDefaultTypeInternal _SC_SanGong_Banker_default_instance_;
class SC_SanGong_Bet;
class SC_SanGong_BetDefaultTypeInternal;
extern SC_SanGong_BetDefaultTypeInternal _SC_SanGong_Bet_default_instance_;
class SC_SanGong_GameStart;
class SC_SanGong_GameStartDefaultTypeInternal;
extern SC_SanGong_GameStartDefaultTypeInternal _SC_SanGong_GameStart_default_instance_;
class SC_SanGong_PostCard;
class SC_SanGong_PostCardDefaultTypeInternal;
extern SC_SanGong_PostCardDefaultTypeInternal _SC_SanGong_PostCard_default_instance_;
class SC_SanGong_PostResult;
class SC_SanGong_PostResultDefaultTypeInternal;
extern SC_SanGong_PostResultDefaultTypeInternal _SC_SanGong_PostResult_default_instance_;
class SC_SanGong_TalkBanker;
class SC_SanGong_TalkBankerDefaultTypeInternal;
extern SC_SanGong_TalkBankerDefaultTypeInternal _SC_SanGong_TalkBanker_default_instance_;
class SanGong_Card_Info;
class SanGong_Card_InfoDefaultTypeInternal;
extern SanGong_Card_InfoDefaultTypeInternal _SanGong_Card_Info_default_instance_;
class SanGong_Player_Info;
class SanGong_Player_InfoDefaultTypeInternal;
extern SanGong_Player_InfoDefaultTypeInternal _SanGong_Player_Info_default_instance_;

namespace protobuf_public_5fsangong_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_public_5fsangong_2eproto

enum SC_SanGong_GameStart_MsgID {
  SC_SanGong_GameStart_MsgID_ID = 28000
};
bool SC_SanGong_GameStart_MsgID_IsValid(int value);
const SC_SanGong_GameStart_MsgID SC_SanGong_GameStart_MsgID_MsgID_MIN = SC_SanGong_GameStart_MsgID_ID;
const SC_SanGong_GameStart_MsgID SC_SanGong_GameStart_MsgID_MsgID_MAX = SC_SanGong_GameStart_MsgID_ID;
const int SC_SanGong_GameStart_MsgID_MsgID_ARRAYSIZE = SC_SanGong_GameStart_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_SanGong_GameStart_MsgID_descriptor();
inline const ::std::string& SC_SanGong_GameStart_MsgID_Name(SC_SanGong_GameStart_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_SanGong_GameStart_MsgID_descriptor(), value);
}
inline bool SC_SanGong_GameStart_MsgID_Parse(
    const ::std::string& name, SC_SanGong_GameStart_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_SanGong_GameStart_MsgID>(
    SC_SanGong_GameStart_MsgID_descriptor(), name, value);
}
enum SC_SanGong_AskBanker_MsgID {
  SC_SanGong_AskBanker_MsgID_ID = 28001
};
bool SC_SanGong_AskBanker_MsgID_IsValid(int value);
const SC_SanGong_AskBanker_MsgID SC_SanGong_AskBanker_MsgID_MsgID_MIN = SC_SanGong_AskBanker_MsgID_ID;
const SC_SanGong_AskBanker_MsgID SC_SanGong_AskBanker_MsgID_MsgID_MAX = SC_SanGong_AskBanker_MsgID_ID;
const int SC_SanGong_AskBanker_MsgID_MsgID_ARRAYSIZE = SC_SanGong_AskBanker_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_SanGong_AskBanker_MsgID_descriptor();
inline const ::std::string& SC_SanGong_AskBanker_MsgID_Name(SC_SanGong_AskBanker_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_SanGong_AskBanker_MsgID_descriptor(), value);
}
inline bool SC_SanGong_AskBanker_MsgID_Parse(
    const ::std::string& name, SC_SanGong_AskBanker_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_SanGong_AskBanker_MsgID>(
    SC_SanGong_AskBanker_MsgID_descriptor(), name, value);
}
enum CS_SanGong_AskBanker_MsgID {
  CS_SanGong_AskBanker_MsgID_ID = 28002
};
bool CS_SanGong_AskBanker_MsgID_IsValid(int value);
const CS_SanGong_AskBanker_MsgID CS_SanGong_AskBanker_MsgID_MsgID_MIN = CS_SanGong_AskBanker_MsgID_ID;
const CS_SanGong_AskBanker_MsgID CS_SanGong_AskBanker_MsgID_MsgID_MAX = CS_SanGong_AskBanker_MsgID_ID;
const int CS_SanGong_AskBanker_MsgID_MsgID_ARRAYSIZE = CS_SanGong_AskBanker_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_SanGong_AskBanker_MsgID_descriptor();
inline const ::std::string& CS_SanGong_AskBanker_MsgID_Name(CS_SanGong_AskBanker_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_SanGong_AskBanker_MsgID_descriptor(), value);
}
inline bool CS_SanGong_AskBanker_MsgID_Parse(
    const ::std::string& name, CS_SanGong_AskBanker_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_SanGong_AskBanker_MsgID>(
    CS_SanGong_AskBanker_MsgID_descriptor(), name, value);
}
enum SC_SanGong_TalkBanker_MsgID {
  SC_SanGong_TalkBanker_MsgID_ID = 28003
};
bool SC_SanGong_TalkBanker_MsgID_IsValid(int value);
const SC_SanGong_TalkBanker_MsgID SC_SanGong_TalkBanker_MsgID_MsgID_MIN = SC_SanGong_TalkBanker_MsgID_ID;
const SC_SanGong_TalkBanker_MsgID SC_SanGong_TalkBanker_MsgID_MsgID_MAX = SC_SanGong_TalkBanker_MsgID_ID;
const int SC_SanGong_TalkBanker_MsgID_MsgID_ARRAYSIZE = SC_SanGong_TalkBanker_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_SanGong_TalkBanker_MsgID_descriptor();
inline const ::std::string& SC_SanGong_TalkBanker_MsgID_Name(SC_SanGong_TalkBanker_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_SanGong_TalkBanker_MsgID_descriptor(), value);
}
inline bool SC_SanGong_TalkBanker_MsgID_Parse(
    const ::std::string& name, SC_SanGong_TalkBanker_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_SanGong_TalkBanker_MsgID>(
    SC_SanGong_TalkBanker_MsgID_descriptor(), name, value);
}
enum SC_SanGong_Banker_MsgID {
  SC_SanGong_Banker_MsgID_ID = 28004
};
bool SC_SanGong_Banker_MsgID_IsValid(int value);
const SC_SanGong_Banker_MsgID SC_SanGong_Banker_MsgID_MsgID_MIN = SC_SanGong_Banker_MsgID_ID;
const SC_SanGong_Banker_MsgID SC_SanGong_Banker_MsgID_MsgID_MAX = SC_SanGong_Banker_MsgID_ID;
const int SC_SanGong_Banker_MsgID_MsgID_ARRAYSIZE = SC_SanGong_Banker_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_SanGong_Banker_MsgID_descriptor();
inline const ::std::string& SC_SanGong_Banker_MsgID_Name(SC_SanGong_Banker_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_SanGong_Banker_MsgID_descriptor(), value);
}
inline bool SC_SanGong_Banker_MsgID_Parse(
    const ::std::string& name, SC_SanGong_Banker_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_SanGong_Banker_MsgID>(
    SC_SanGong_Banker_MsgID_descriptor(), name, value);
}
enum SC_SanGong_AskBet_MsgID {
  SC_SanGong_AskBet_MsgID_ID = 28005
};
bool SC_SanGong_AskBet_MsgID_IsValid(int value);
const SC_SanGong_AskBet_MsgID SC_SanGong_AskBet_MsgID_MsgID_MIN = SC_SanGong_AskBet_MsgID_ID;
const SC_SanGong_AskBet_MsgID SC_SanGong_AskBet_MsgID_MsgID_MAX = SC_SanGong_AskBet_MsgID_ID;
const int SC_SanGong_AskBet_MsgID_MsgID_ARRAYSIZE = SC_SanGong_AskBet_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_SanGong_AskBet_MsgID_descriptor();
inline const ::std::string& SC_SanGong_AskBet_MsgID_Name(SC_SanGong_AskBet_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_SanGong_AskBet_MsgID_descriptor(), value);
}
inline bool SC_SanGong_AskBet_MsgID_Parse(
    const ::std::string& name, SC_SanGong_AskBet_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_SanGong_AskBet_MsgID>(
    SC_SanGong_AskBet_MsgID_descriptor(), name, value);
}
enum CS_SanGong_AskBet_MsgID {
  CS_SanGong_AskBet_MsgID_ID = 28006
};
bool CS_SanGong_AskBet_MsgID_IsValid(int value);
const CS_SanGong_AskBet_MsgID CS_SanGong_AskBet_MsgID_MsgID_MIN = CS_SanGong_AskBet_MsgID_ID;
const CS_SanGong_AskBet_MsgID CS_SanGong_AskBet_MsgID_MsgID_MAX = CS_SanGong_AskBet_MsgID_ID;
const int CS_SanGong_AskBet_MsgID_MsgID_ARRAYSIZE = CS_SanGong_AskBet_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_SanGong_AskBet_MsgID_descriptor();
inline const ::std::string& CS_SanGong_AskBet_MsgID_Name(CS_SanGong_AskBet_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_SanGong_AskBet_MsgID_descriptor(), value);
}
inline bool CS_SanGong_AskBet_MsgID_Parse(
    const ::std::string& name, CS_SanGong_AskBet_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_SanGong_AskBet_MsgID>(
    CS_SanGong_AskBet_MsgID_descriptor(), name, value);
}
enum SC_SanGong_Bet_MsgID {
  SC_SanGong_Bet_MsgID_ID = 28007
};
bool SC_SanGong_Bet_MsgID_IsValid(int value);
const SC_SanGong_Bet_MsgID SC_SanGong_Bet_MsgID_MsgID_MIN = SC_SanGong_Bet_MsgID_ID;
const SC_SanGong_Bet_MsgID SC_SanGong_Bet_MsgID_MsgID_MAX = SC_SanGong_Bet_MsgID_ID;
const int SC_SanGong_Bet_MsgID_MsgID_ARRAYSIZE = SC_SanGong_Bet_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_SanGong_Bet_MsgID_descriptor();
inline const ::std::string& SC_SanGong_Bet_MsgID_Name(SC_SanGong_Bet_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_SanGong_Bet_MsgID_descriptor(), value);
}
inline bool SC_SanGong_Bet_MsgID_Parse(
    const ::std::string& name, SC_SanGong_Bet_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_SanGong_Bet_MsgID>(
    SC_SanGong_Bet_MsgID_descriptor(), name, value);
}
enum SC_SanGong_PostCard_MsgID {
  SC_SanGong_PostCard_MsgID_ID = 28008
};
bool SC_SanGong_PostCard_MsgID_IsValid(int value);
const SC_SanGong_PostCard_MsgID SC_SanGong_PostCard_MsgID_MsgID_MIN = SC_SanGong_PostCard_MsgID_ID;
const SC_SanGong_PostCard_MsgID SC_SanGong_PostCard_MsgID_MsgID_MAX = SC_SanGong_PostCard_MsgID_ID;
const int SC_SanGong_PostCard_MsgID_MsgID_ARRAYSIZE = SC_SanGong_PostCard_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_SanGong_PostCard_MsgID_descriptor();
inline const ::std::string& SC_SanGong_PostCard_MsgID_Name(SC_SanGong_PostCard_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_SanGong_PostCard_MsgID_descriptor(), value);
}
inline bool SC_SanGong_PostCard_MsgID_Parse(
    const ::std::string& name, SC_SanGong_PostCard_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_SanGong_PostCard_MsgID>(
    SC_SanGong_PostCard_MsgID_descriptor(), name, value);
}
enum SC_SanGong_PostResult_MsgID {
  SC_SanGong_PostResult_MsgID_ID = 28009
};
bool SC_SanGong_PostResult_MsgID_IsValid(int value);
const SC_SanGong_PostResult_MsgID SC_SanGong_PostResult_MsgID_MsgID_MIN = SC_SanGong_PostResult_MsgID_ID;
const SC_SanGong_PostResult_MsgID SC_SanGong_PostResult_MsgID_MsgID_MAX = SC_SanGong_PostResult_MsgID_ID;
const int SC_SanGong_PostResult_MsgID_MsgID_ARRAYSIZE = SC_SanGong_PostResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_SanGong_PostResult_MsgID_descriptor();
inline const ::std::string& SC_SanGong_PostResult_MsgID_Name(SC_SanGong_PostResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_SanGong_PostResult_MsgID_descriptor(), value);
}
inline bool SC_SanGong_PostResult_MsgID_Parse(
    const ::std::string& name, SC_SanGong_PostResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_SanGong_PostResult_MsgID>(
    SC_SanGong_PostResult_MsgID_descriptor(), name, value);
}
// ===================================================================

class SC_SanGong_GameStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_SanGong_GameStart) */ {
 public:
  SC_SanGong_GameStart();
  virtual ~SC_SanGong_GameStart();

  SC_SanGong_GameStart(const SC_SanGong_GameStart& from);

  inline SC_SanGong_GameStart& operator=(const SC_SanGong_GameStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SanGong_GameStart& default_instance();

  static inline const SC_SanGong_GameStart* internal_default_instance() {
    return reinterpret_cast<const SC_SanGong_GameStart*>(
               &_SC_SanGong_GameStart_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SC_SanGong_GameStart* other);

  // implements Message ----------------------------------------------

  inline SC_SanGong_GameStart* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_SanGong_GameStart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_SanGong_GameStart& from);
  void MergeFrom(const SC_SanGong_GameStart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_SanGong_GameStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_SanGong_GameStart_MsgID MsgID;
  static const MsgID ID =
    SC_SanGong_GameStart_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_SanGong_GameStart_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_SanGong_GameStart_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_SanGong_GameStart_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_SanGong_GameStart_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_SanGong_GameStart_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_SanGong_GameStart_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_SanGong_GameStart_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .SanGong_Player_Info pb_splayerinfo = 1;
  int pb_splayerinfo_size() const;
  void clear_pb_splayerinfo();
  static const int kPbSplayerinfoFieldNumber = 1;
  const ::SanGong_Player_Info& pb_splayerinfo(int index) const;
  ::SanGong_Player_Info* mutable_pb_splayerinfo(int index);
  ::SanGong_Player_Info* add_pb_splayerinfo();
  ::google::protobuf::RepeatedPtrField< ::SanGong_Player_Info >*
      mutable_pb_splayerinfo();
  const ::google::protobuf::RepeatedPtrField< ::SanGong_Player_Info >&
      pb_splayerinfo() const;

  // optional bool breconnect = 2;
  bool has_breconnect() const;
  void clear_breconnect();
  static const int kBreconnectFieldNumber = 2;
  bool breconnect() const;
  void set_breconnect(bool value);

  // optional int32 tablestatus = 3;
  bool has_tablestatus() const;
  void clear_tablestatus();
  static const int kTablestatusFieldNumber = 3;
  ::google::protobuf::int32 tablestatus() const;
  void set_tablestatus(::google::protobuf::int32 value);

  // optional int32 playerturn = 4;
  bool has_playerturn() const;
  void clear_playerturn();
  static const int kPlayerturnFieldNumber = 4;
  ::google::protobuf::int32 playerturn() const;
  void set_playerturn(::google::protobuf::int32 value);

  // optional int32 zhuangchair = 5;
  bool has_zhuangchair() const;
  void clear_zhuangchair();
  static const int kZhuangchairFieldNumber = 5;
  ::google::protobuf::int32 zhuangchair() const;
  void set_zhuangchair(::google::protobuf::int32 value);

  // optional int32 waittime = 6;
  bool has_waittime() const;
  void clear_waittime();
  static const int kWaittimeFieldNumber = 6;
  ::google::protobuf::int32 waittime() const;
  void set_waittime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_SanGong_GameStart)
 private:
  void set_has_breconnect();
  void clear_has_breconnect();
  void set_has_tablestatus();
  void clear_has_tablestatus();
  void set_has_playerturn();
  void clear_has_playerturn();
  void set_has_zhuangchair();
  void clear_has_zhuangchair();
  void set_has_waittime();
  void clear_has_waittime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SanGong_Player_Info > pb_splayerinfo_;
  bool breconnect_;
  ::google::protobuf::int32 tablestatus_;
  ::google::protobuf::int32 playerturn_;
  ::google::protobuf::int32 zhuangchair_;
  ::google::protobuf::int32 waittime_;
  friend struct protobuf_public_5fsangong_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_SanGong_AskBanker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_SanGong_AskBanker) */ {
 public:
  SC_SanGong_AskBanker();
  virtual ~SC_SanGong_AskBanker();

  SC_SanGong_AskBanker(const SC_SanGong_AskBanker& from);

  inline SC_SanGong_AskBanker& operator=(const SC_SanGong_AskBanker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SanGong_AskBanker& default_instance();

  static inline const SC_SanGong_AskBanker* internal_default_instance() {
    return reinterpret_cast<const SC_SanGong_AskBanker*>(
               &_SC_SanGong_AskBanker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SC_SanGong_AskBanker* other);

  // implements Message ----------------------------------------------

  inline SC_SanGong_AskBanker* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_SanGong_AskBanker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_SanGong_AskBanker& from);
  void MergeFrom(const SC_SanGong_AskBanker& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_SanGong_AskBanker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_SanGong_AskBanker_MsgID MsgID;
  static const MsgID ID =
    SC_SanGong_AskBanker_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_SanGong_AskBanker_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_SanGong_AskBanker_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_SanGong_AskBanker_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_SanGong_AskBanker_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_SanGong_AskBanker_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_SanGong_AskBanker_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_SanGong_AskBanker_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 chair_id = 1;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_SanGong_AskBanker)
 private:
  void set_has_chair_id();
  void clear_has_chair_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 chair_id_;
  friend struct protobuf_public_5fsangong_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_SanGong_AskBanker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_SanGong_AskBanker) */ {
 public:
  CS_SanGong_AskBanker();
  virtual ~CS_SanGong_AskBanker();

  CS_SanGong_AskBanker(const CS_SanGong_AskBanker& from);

  inline CS_SanGong_AskBanker& operator=(const CS_SanGong_AskBanker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_SanGong_AskBanker& default_instance();

  static inline const CS_SanGong_AskBanker* internal_default_instance() {
    return reinterpret_cast<const CS_SanGong_AskBanker*>(
               &_CS_SanGong_AskBanker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CS_SanGong_AskBanker* other);

  // implements Message ----------------------------------------------

  inline CS_SanGong_AskBanker* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_SanGong_AskBanker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_SanGong_AskBanker& from);
  void MergeFrom(const CS_SanGong_AskBanker& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_SanGong_AskBanker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_SanGong_AskBanker_MsgID MsgID;
  static const MsgID ID =
    CS_SanGong_AskBanker_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_SanGong_AskBanker_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_SanGong_AskBanker_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_SanGong_AskBanker_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_SanGong_AskBanker_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_SanGong_AskBanker_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_SanGong_AskBanker_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_SanGong_AskBanker_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bool brequest = 1;
  bool has_brequest() const;
  void clear_brequest();
  static const int kBrequestFieldNumber = 1;
  bool brequest() const;
  void set_brequest(bool value);

  // @@protoc_insertion_point(class_scope:CS_SanGong_AskBanker)
 private:
  void set_has_brequest();
  void clear_has_brequest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool brequest_;
  friend struct protobuf_public_5fsangong_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_SanGong_TalkBanker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_SanGong_TalkBanker) */ {
 public:
  SC_SanGong_TalkBanker();
  virtual ~SC_SanGong_TalkBanker();

  SC_SanGong_TalkBanker(const SC_SanGong_TalkBanker& from);

  inline SC_SanGong_TalkBanker& operator=(const SC_SanGong_TalkBanker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SanGong_TalkBanker& default_instance();

  static inline const SC_SanGong_TalkBanker* internal_default_instance() {
    return reinterpret_cast<const SC_SanGong_TalkBanker*>(
               &_SC_SanGong_TalkBanker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SC_SanGong_TalkBanker* other);

  // implements Message ----------------------------------------------

  inline SC_SanGong_TalkBanker* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_SanGong_TalkBanker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_SanGong_TalkBanker& from);
  void MergeFrom(const SC_SanGong_TalkBanker& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_SanGong_TalkBanker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_SanGong_TalkBanker_MsgID MsgID;
  static const MsgID ID =
    SC_SanGong_TalkBanker_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_SanGong_TalkBanker_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_SanGong_TalkBanker_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_SanGong_TalkBanker_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_SanGong_TalkBanker_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_SanGong_TalkBanker_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_SanGong_TalkBanker_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_SanGong_TalkBanker_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 chair_id = 1;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional bool brequest = 2;
  bool has_brequest() const;
  void clear_brequest();
  static const int kBrequestFieldNumber = 2;
  bool brequest() const;
  void set_brequest(bool value);

  // @@protoc_insertion_point(class_scope:SC_SanGong_TalkBanker)
 private:
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_brequest();
  void clear_has_brequest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 chair_id_;
  bool brequest_;
  friend struct protobuf_public_5fsangong_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_SanGong_Banker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_SanGong_Banker) */ {
 public:
  SC_SanGong_Banker();
  virtual ~SC_SanGong_Banker();

  SC_SanGong_Banker(const SC_SanGong_Banker& from);

  inline SC_SanGong_Banker& operator=(const SC_SanGong_Banker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SanGong_Banker& default_instance();

  static inline const SC_SanGong_Banker* internal_default_instance() {
    return reinterpret_cast<const SC_SanGong_Banker*>(
               &_SC_SanGong_Banker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SC_SanGong_Banker* other);

  // implements Message ----------------------------------------------

  inline SC_SanGong_Banker* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_SanGong_Banker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_SanGong_Banker& from);
  void MergeFrom(const SC_SanGong_Banker& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_SanGong_Banker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_SanGong_Banker_MsgID MsgID;
  static const MsgID ID =
    SC_SanGong_Banker_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_SanGong_Banker_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_SanGong_Banker_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_SanGong_Banker_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_SanGong_Banker_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_SanGong_Banker_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_SanGong_Banker_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_SanGong_Banker_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 chair_id = 1;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 1;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_SanGong_Banker)
 private:
  void set_has_chair_id();
  void clear_has_chair_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 chair_id_;
  friend struct protobuf_public_5fsangong_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_SanGong_AskBet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_SanGong_AskBet) */ {
 public:
  SC_SanGong_AskBet();
  virtual ~SC_SanGong_AskBet();

  SC_SanGong_AskBet(const SC_SanGong_AskBet& from);

  inline SC_SanGong_AskBet& operator=(const SC_SanGong_AskBet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SanGong_AskBet& default_instance();

  static inline const SC_SanGong_AskBet* internal_default_instance() {
    return reinterpret_cast<const SC_SanGong_AskBet*>(
               &_SC_SanGong_AskBet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SC_SanGong_AskBet* other);

  // implements Message ----------------------------------------------

  inline SC_SanGong_AskBet* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_SanGong_AskBet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_SanGong_AskBet& from);
  void MergeFrom(const SC_SanGong_AskBet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_SanGong_AskBet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_SanGong_AskBet_MsgID MsgID;
  static const MsgID ID =
    SC_SanGong_AskBet_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_SanGong_AskBet_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_SanGong_AskBet_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_SanGong_AskBet_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_SanGong_AskBet_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_SanGong_AskBet_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_SanGong_AskBet_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_SanGong_AskBet_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 Bets = 1;
  int bets_size() const;
  void clear_bets();
  static const int kBetsFieldNumber = 1;
  ::google::protobuf::int32 bets(int index) const;
  void set_bets(int index, ::google::protobuf::int32 value);
  void add_bets(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      bets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_bets();

  // optional int32 chair_id = 2;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 2;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_SanGong_AskBet)
 private:
  void set_has_chair_id();
  void clear_has_chair_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > bets_;
  ::google::protobuf::int32 chair_id_;
  friend struct protobuf_public_5fsangong_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_SanGong_AskBet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_SanGong_AskBet) */ {
 public:
  CS_SanGong_AskBet();
  virtual ~CS_SanGong_AskBet();

  CS_SanGong_AskBet(const CS_SanGong_AskBet& from);

  inline CS_SanGong_AskBet& operator=(const CS_SanGong_AskBet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_SanGong_AskBet& default_instance();

  static inline const CS_SanGong_AskBet* internal_default_instance() {
    return reinterpret_cast<const CS_SanGong_AskBet*>(
               &_CS_SanGong_AskBet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CS_SanGong_AskBet* other);

  // implements Message ----------------------------------------------

  inline CS_SanGong_AskBet* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_SanGong_AskBet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_SanGong_AskBet& from);
  void MergeFrom(const CS_SanGong_AskBet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_SanGong_AskBet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_SanGong_AskBet_MsgID MsgID;
  static const MsgID ID =
    CS_SanGong_AskBet_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_SanGong_AskBet_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_SanGong_AskBet_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_SanGong_AskBet_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_SanGong_AskBet_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_SanGong_AskBet_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_SanGong_AskBet_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_SanGong_AskBet_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 target = 1;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 1;
  ::google::protobuf::int32 target() const;
  void set_target(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_SanGong_AskBet)
 private:
  void set_has_target();
  void clear_has_target();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 target_;
  friend struct protobuf_public_5fsangong_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_SanGong_Bet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_SanGong_Bet) */ {
 public:
  SC_SanGong_Bet();
  virtual ~SC_SanGong_Bet();

  SC_SanGong_Bet(const SC_SanGong_Bet& from);

  inline SC_SanGong_Bet& operator=(const SC_SanGong_Bet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SanGong_Bet& default_instance();

  static inline const SC_SanGong_Bet* internal_default_instance() {
    return reinterpret_cast<const SC_SanGong_Bet*>(
               &_SC_SanGong_Bet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SC_SanGong_Bet* other);

  // implements Message ----------------------------------------------

  inline SC_SanGong_Bet* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_SanGong_Bet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_SanGong_Bet& from);
  void MergeFrom(const SC_SanGong_Bet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_SanGong_Bet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_SanGong_Bet_MsgID MsgID;
  static const MsgID ID =
    SC_SanGong_Bet_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_SanGong_Bet_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_SanGong_Bet_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_SanGong_Bet_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_SanGong_Bet_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_SanGong_Bet_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_SanGong_Bet_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_SanGong_Bet_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 target = 1;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 1;
  ::google::protobuf::int32 target() const;
  void set_target(::google::protobuf::int32 value);

  // optional int32 chair_id = 2;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 2;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_SanGong_Bet)
 private:
  void set_has_target();
  void clear_has_target();
  void set_has_chair_id();
  void clear_has_chair_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 target_;
  ::google::protobuf::int32 chair_id_;
  friend struct protobuf_public_5fsangong_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SanGong_Card_Info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SanGong_Card_Info) */ {
 public:
  SanGong_Card_Info();
  virtual ~SanGong_Card_Info();

  SanGong_Card_Info(const SanGong_Card_Info& from);

  inline SanGong_Card_Info& operator=(const SanGong_Card_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SanGong_Card_Info& default_instance();

  static inline const SanGong_Card_Info* internal_default_instance() {
    return reinterpret_cast<const SanGong_Card_Info*>(
               &_SanGong_Card_Info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SanGong_Card_Info* other);

  // implements Message ----------------------------------------------

  inline SanGong_Card_Info* New() const PROTOBUF_FINAL { return New(NULL); }

  SanGong_Card_Info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SanGong_Card_Info& from);
  void MergeFrom(const SanGong_Card_Info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SanGong_Card_Info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 cards = 1;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 1;
  ::google::protobuf::int32 cards(int index) const;
  void set_cards(int index, ::google::protobuf::int32 value);
  void add_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // @@protoc_insertion_point(class_scope:SanGong_Card_Info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  friend struct protobuf_public_5fsangong_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_SanGong_PostCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_SanGong_PostCard) */ {
 public:
  SC_SanGong_PostCard();
  virtual ~SC_SanGong_PostCard();

  SC_SanGong_PostCard(const SC_SanGong_PostCard& from);

  inline SC_SanGong_PostCard& operator=(const SC_SanGong_PostCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SanGong_PostCard& default_instance();

  static inline const SC_SanGong_PostCard* internal_default_instance() {
    return reinterpret_cast<const SC_SanGong_PostCard*>(
               &_SC_SanGong_PostCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SC_SanGong_PostCard* other);

  // implements Message ----------------------------------------------

  inline SC_SanGong_PostCard* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_SanGong_PostCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_SanGong_PostCard& from);
  void MergeFrom(const SC_SanGong_PostCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_SanGong_PostCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_SanGong_PostCard_MsgID MsgID;
  static const MsgID ID =
    SC_SanGong_PostCard_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_SanGong_PostCard_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_SanGong_PostCard_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_SanGong_PostCard_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_SanGong_PostCard_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_SanGong_PostCard_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_SanGong_PostCard_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_SanGong_PostCard_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .SanGong_Card_Info pb_cards = 1;
  int pb_cards_size() const;
  void clear_pb_cards();
  static const int kPbCardsFieldNumber = 1;
  const ::SanGong_Card_Info& pb_cards(int index) const;
  ::SanGong_Card_Info* mutable_pb_cards(int index);
  ::SanGong_Card_Info* add_pb_cards();
  ::google::protobuf::RepeatedPtrField< ::SanGong_Card_Info >*
      mutable_pb_cards();
  const ::google::protobuf::RepeatedPtrField< ::SanGong_Card_Info >&
      pb_cards() const;

  // @@protoc_insertion_point(class_scope:SC_SanGong_PostCard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SanGong_Card_Info > pb_cards_;
  friend struct protobuf_public_5fsangong_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SanGong_Player_Info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SanGong_Player_Info) */ {
 public:
  SanGong_Player_Info();
  virtual ~SanGong_Player_Info();

  SanGong_Player_Info(const SanGong_Player_Info& from);

  inline SanGong_Player_Info& operator=(const SanGong_Player_Info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SanGong_Player_Info& default_instance();

  static inline const SanGong_Player_Info* internal_default_instance() {
    return reinterpret_cast<const SanGong_Player_Info*>(
               &_SanGong_Player_Info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(SanGong_Player_Info* other);

  // implements Message ----------------------------------------------

  inline SanGong_Player_Info* New() const PROTOBUF_FINAL { return New(NULL); }

  SanGong_Player_Info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SanGong_Player_Info& from);
  void MergeFrom(const SanGong_Player_Info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SanGong_Player_Info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 cards = 1;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 1;
  ::google::protobuf::int32 cards(int index) const;
  void set_cards(int index, ::google::protobuf::int32 value);
  void add_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // repeated int32 Bets = 11;
  int bets_size() const;
  void clear_bets();
  static const int kBetsFieldNumber = 11;
  ::google::protobuf::int32 bets(int index) const;
  void set_bets(int index, ::google::protobuf::int32 value);
  void add_bets(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      bets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_bets();

  // optional string nick = 5;
  bool has_nick() const;
  void clear_nick();
  static const int kNickFieldNumber = 5;
  const ::std::string& nick() const;
  void set_nick(const ::std::string& value);
  #if LANG_CXX11
  void set_nick(::std::string&& value);
  #endif
  void set_nick(const char* value);
  void set_nick(const char* value, size_t size);
  ::std::string* mutable_nick();
  ::std::string* release_nick();
  void set_allocated_nick(::std::string* nick);

  // optional int32 chair_id = 2;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 2;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // optional int32 add_total = 3;
  bool has_add_total() const;
  void clear_add_total();
  static const int kAddTotalFieldNumber = 3;
  ::google::protobuf::int32 add_total() const;
  void set_add_total(::google::protobuf::int32 value);

  // optional int32 cur_round_add = 4;
  bool has_cur_round_add() const;
  void clear_cur_round_add();
  static const int kCurRoundAddFieldNumber = 4;
  ::google::protobuf::int32 cur_round_add() const;
  void set_cur_round_add(::google::protobuf::int32 value);

  // optional int32 icon = 6;
  bool has_icon() const;
  void clear_icon();
  static const int kIconFieldNumber = 6;
  ::google::protobuf::int32 icon() const;
  void set_icon(::google::protobuf::int32 value);

  // optional int64 gold = 7;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 7;
  ::google::protobuf::int64 gold() const;
  void set_gold(::google::protobuf::int64 value);

  // optional int32 guid = 8;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 8;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional bool is_win = 9;
  bool has_is_win() const;
  void clear_is_win();
  static const int kIsWinFieldNumber = 9;
  bool is_win() const;
  void set_is_win(bool value);

  // optional bool is_getbanker = 10;
  bool has_is_getbanker() const;
  void clear_is_getbanker();
  static const int kIsGetbankerFieldNumber = 10;
  bool is_getbanker() const;
  void set_is_getbanker(bool value);

  // optional int32 win_money = 12;
  bool has_win_money() const;
  void clear_win_money();
  static const int kWinMoneyFieldNumber = 12;
  ::google::protobuf::int32 win_money() const;
  void set_win_money(::google::protobuf::int32 value);

  // optional int32 taxes = 13;
  bool has_taxes() const;
  void clear_taxes();
  static const int kTaxesFieldNumber = 13;
  ::google::protobuf::int32 taxes() const;
  void set_taxes(::google::protobuf::int32 value);

  // optional int32 lefttime = 14;
  bool has_lefttime() const;
  void clear_lefttime();
  static const int kLefttimeFieldNumber = 14;
  ::google::protobuf::int32 lefttime() const;
  void set_lefttime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SanGong_Player_Info)
 private:
  void set_has_chair_id();
  void clear_has_chair_id();
  void set_has_add_total();
  void clear_has_add_total();
  void set_has_cur_round_add();
  void clear_has_cur_round_add();
  void set_has_nick();
  void clear_has_nick();
  void set_has_icon();
  void clear_has_icon();
  void set_has_gold();
  void clear_has_gold();
  void set_has_guid();
  void clear_has_guid();
  void set_has_is_win();
  void clear_has_is_win();
  void set_has_is_getbanker();
  void clear_has_is_getbanker();
  void set_has_win_money();
  void clear_has_win_money();
  void set_has_taxes();
  void clear_has_taxes();
  void set_has_lefttime();
  void clear_has_lefttime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > bets_;
  ::google::protobuf::internal::ArenaStringPtr nick_;
  ::google::protobuf::int32 chair_id_;
  ::google::protobuf::int32 add_total_;
  ::google::protobuf::int32 cur_round_add_;
  ::google::protobuf::int32 icon_;
  ::google::protobuf::int64 gold_;
  ::google::protobuf::int32 guid_;
  bool is_win_;
  bool is_getbanker_;
  ::google::protobuf::int32 win_money_;
  ::google::protobuf::int32 taxes_;
  ::google::protobuf::int32 lefttime_;
  friend struct protobuf_public_5fsangong_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_SanGong_PostResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_SanGong_PostResult) */ {
 public:
  SC_SanGong_PostResult();
  virtual ~SC_SanGong_PostResult();

  SC_SanGong_PostResult(const SC_SanGong_PostResult& from);

  inline SC_SanGong_PostResult& operator=(const SC_SanGong_PostResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SanGong_PostResult& default_instance();

  static inline const SC_SanGong_PostResult* internal_default_instance() {
    return reinterpret_cast<const SC_SanGong_PostResult*>(
               &_SC_SanGong_PostResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SC_SanGong_PostResult* other);

  // implements Message ----------------------------------------------

  inline SC_SanGong_PostResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_SanGong_PostResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_SanGong_PostResult& from);
  void MergeFrom(const SC_SanGong_PostResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_SanGong_PostResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_SanGong_PostResult_MsgID MsgID;
  static const MsgID ID =
    SC_SanGong_PostResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_SanGong_PostResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_SanGong_PostResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_SanGong_PostResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_SanGong_PostResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_SanGong_PostResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_SanGong_PostResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_SanGong_PostResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .SanGong_Player_Info pb_splayerinfo = 1;
  int pb_splayerinfo_size() const;
  void clear_pb_splayerinfo();
  static const int kPbSplayerinfoFieldNumber = 1;
  const ::SanGong_Player_Info& pb_splayerinfo(int index) const;
  ::SanGong_Player_Info* mutable_pb_splayerinfo(int index);
  ::SanGong_Player_Info* add_pb_splayerinfo();
  ::google::protobuf::RepeatedPtrField< ::SanGong_Player_Info >*
      mutable_pb_splayerinfo();
  const ::google::protobuf::RepeatedPtrField< ::SanGong_Player_Info >&
      pb_splayerinfo() const;

  // @@protoc_insertion_point(class_scope:SC_SanGong_PostResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SanGong_Player_Info > pb_splayerinfo_;
  friend struct protobuf_public_5fsangong_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_SanGong_GameStart

// repeated .SanGong_Player_Info pb_splayerinfo = 1;
inline int SC_SanGong_GameStart::pb_splayerinfo_size() const {
  return pb_splayerinfo_.size();
}
inline void SC_SanGong_GameStart::clear_pb_splayerinfo() {
  pb_splayerinfo_.Clear();
}
inline const ::SanGong_Player_Info& SC_SanGong_GameStart::pb_splayerinfo(int index) const {
  // @@protoc_insertion_point(field_get:SC_SanGong_GameStart.pb_splayerinfo)
  return pb_splayerinfo_.Get(index);
}
inline ::SanGong_Player_Info* SC_SanGong_GameStart::mutable_pb_splayerinfo(int index) {
  // @@protoc_insertion_point(field_mutable:SC_SanGong_GameStart.pb_splayerinfo)
  return pb_splayerinfo_.Mutable(index);
}
inline ::SanGong_Player_Info* SC_SanGong_GameStart::add_pb_splayerinfo() {
  // @@protoc_insertion_point(field_add:SC_SanGong_GameStart.pb_splayerinfo)
  return pb_splayerinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SanGong_Player_Info >*
SC_SanGong_GameStart::mutable_pb_splayerinfo() {
  // @@protoc_insertion_point(field_mutable_list:SC_SanGong_GameStart.pb_splayerinfo)
  return &pb_splayerinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SanGong_Player_Info >&
SC_SanGong_GameStart::pb_splayerinfo() const {
  // @@protoc_insertion_point(field_list:SC_SanGong_GameStart.pb_splayerinfo)
  return pb_splayerinfo_;
}

// optional bool breconnect = 2;
inline bool SC_SanGong_GameStart::has_breconnect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_SanGong_GameStart::set_has_breconnect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_SanGong_GameStart::clear_has_breconnect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_SanGong_GameStart::clear_breconnect() {
  breconnect_ = false;
  clear_has_breconnect();
}
inline bool SC_SanGong_GameStart::breconnect() const {
  // @@protoc_insertion_point(field_get:SC_SanGong_GameStart.breconnect)
  return breconnect_;
}
inline void SC_SanGong_GameStart::set_breconnect(bool value) {
  set_has_breconnect();
  breconnect_ = value;
  // @@protoc_insertion_point(field_set:SC_SanGong_GameStart.breconnect)
}

// optional int32 tablestatus = 3;
inline bool SC_SanGong_GameStart::has_tablestatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_SanGong_GameStart::set_has_tablestatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_SanGong_GameStart::clear_has_tablestatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_SanGong_GameStart::clear_tablestatus() {
  tablestatus_ = 0;
  clear_has_tablestatus();
}
inline ::google::protobuf::int32 SC_SanGong_GameStart::tablestatus() const {
  // @@protoc_insertion_point(field_get:SC_SanGong_GameStart.tablestatus)
  return tablestatus_;
}
inline void SC_SanGong_GameStart::set_tablestatus(::google::protobuf::int32 value) {
  set_has_tablestatus();
  tablestatus_ = value;
  // @@protoc_insertion_point(field_set:SC_SanGong_GameStart.tablestatus)
}

// optional int32 playerturn = 4;
inline bool SC_SanGong_GameStart::has_playerturn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_SanGong_GameStart::set_has_playerturn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_SanGong_GameStart::clear_has_playerturn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_SanGong_GameStart::clear_playerturn() {
  playerturn_ = 0;
  clear_has_playerturn();
}
inline ::google::protobuf::int32 SC_SanGong_GameStart::playerturn() const {
  // @@protoc_insertion_point(field_get:SC_SanGong_GameStart.playerturn)
  return playerturn_;
}
inline void SC_SanGong_GameStart::set_playerturn(::google::protobuf::int32 value) {
  set_has_playerturn();
  playerturn_ = value;
  // @@protoc_insertion_point(field_set:SC_SanGong_GameStart.playerturn)
}

// optional int32 zhuangchair = 5;
inline bool SC_SanGong_GameStart::has_zhuangchair() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_SanGong_GameStart::set_has_zhuangchair() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_SanGong_GameStart::clear_has_zhuangchair() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_SanGong_GameStart::clear_zhuangchair() {
  zhuangchair_ = 0;
  clear_has_zhuangchair();
}
inline ::google::protobuf::int32 SC_SanGong_GameStart::zhuangchair() const {
  // @@protoc_insertion_point(field_get:SC_SanGong_GameStart.zhuangchair)
  return zhuangchair_;
}
inline void SC_SanGong_GameStart::set_zhuangchair(::google::protobuf::int32 value) {
  set_has_zhuangchair();
  zhuangchair_ = value;
  // @@protoc_insertion_point(field_set:SC_SanGong_GameStart.zhuangchair)
}

// optional int32 waittime = 6;
inline bool SC_SanGong_GameStart::has_waittime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SC_SanGong_GameStart::set_has_waittime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SC_SanGong_GameStart::clear_has_waittime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SC_SanGong_GameStart::clear_waittime() {
  waittime_ = 0;
  clear_has_waittime();
}
inline ::google::protobuf::int32 SC_SanGong_GameStart::waittime() const {
  // @@protoc_insertion_point(field_get:SC_SanGong_GameStart.waittime)
  return waittime_;
}
inline void SC_SanGong_GameStart::set_waittime(::google::protobuf::int32 value) {
  set_has_waittime();
  waittime_ = value;
  // @@protoc_insertion_point(field_set:SC_SanGong_GameStart.waittime)
}

// -------------------------------------------------------------------

// SC_SanGong_AskBanker

// optional int32 chair_id = 1;
inline bool SC_SanGong_AskBanker::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_SanGong_AskBanker::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_SanGong_AskBanker::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_SanGong_AskBanker::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_SanGong_AskBanker::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_SanGong_AskBanker.chair_id)
  return chair_id_;
}
inline void SC_SanGong_AskBanker::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_SanGong_AskBanker.chair_id)
}

// -------------------------------------------------------------------

// CS_SanGong_AskBanker

// optional bool brequest = 1;
inline bool CS_SanGong_AskBanker::has_brequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_SanGong_AskBanker::set_has_brequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_SanGong_AskBanker::clear_has_brequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_SanGong_AskBanker::clear_brequest() {
  brequest_ = false;
  clear_has_brequest();
}
inline bool CS_SanGong_AskBanker::brequest() const {
  // @@protoc_insertion_point(field_get:CS_SanGong_AskBanker.brequest)
  return brequest_;
}
inline void CS_SanGong_AskBanker::set_brequest(bool value) {
  set_has_brequest();
  brequest_ = value;
  // @@protoc_insertion_point(field_set:CS_SanGong_AskBanker.brequest)
}

// -------------------------------------------------------------------

// SC_SanGong_TalkBanker

// optional int32 chair_id = 1;
inline bool SC_SanGong_TalkBanker::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_SanGong_TalkBanker::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_SanGong_TalkBanker::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_SanGong_TalkBanker::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_SanGong_TalkBanker::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_SanGong_TalkBanker.chair_id)
  return chair_id_;
}
inline void SC_SanGong_TalkBanker::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_SanGong_TalkBanker.chair_id)
}

// optional bool brequest = 2;
inline bool SC_SanGong_TalkBanker::has_brequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_SanGong_TalkBanker::set_has_brequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_SanGong_TalkBanker::clear_has_brequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_SanGong_TalkBanker::clear_brequest() {
  brequest_ = false;
  clear_has_brequest();
}
inline bool SC_SanGong_TalkBanker::brequest() const {
  // @@protoc_insertion_point(field_get:SC_SanGong_TalkBanker.brequest)
  return brequest_;
}
inline void SC_SanGong_TalkBanker::set_brequest(bool value) {
  set_has_brequest();
  brequest_ = value;
  // @@protoc_insertion_point(field_set:SC_SanGong_TalkBanker.brequest)
}

// -------------------------------------------------------------------

// SC_SanGong_Banker

// optional int32 chair_id = 1;
inline bool SC_SanGong_Banker::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_SanGong_Banker::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_SanGong_Banker::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_SanGong_Banker::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_SanGong_Banker::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_SanGong_Banker.chair_id)
  return chair_id_;
}
inline void SC_SanGong_Banker::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_SanGong_Banker.chair_id)
}

// -------------------------------------------------------------------

// SC_SanGong_AskBet

// repeated int32 Bets = 1;
inline int SC_SanGong_AskBet::bets_size() const {
  return bets_.size();
}
inline void SC_SanGong_AskBet::clear_bets() {
  bets_.Clear();
}
inline ::google::protobuf::int32 SC_SanGong_AskBet::bets(int index) const {
  // @@protoc_insertion_point(field_get:SC_SanGong_AskBet.Bets)
  return bets_.Get(index);
}
inline void SC_SanGong_AskBet::set_bets(int index, ::google::protobuf::int32 value) {
  bets_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_SanGong_AskBet.Bets)
}
inline void SC_SanGong_AskBet::add_bets(::google::protobuf::int32 value) {
  bets_.Add(value);
  // @@protoc_insertion_point(field_add:SC_SanGong_AskBet.Bets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_SanGong_AskBet::bets() const {
  // @@protoc_insertion_point(field_list:SC_SanGong_AskBet.Bets)
  return bets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_SanGong_AskBet::mutable_bets() {
  // @@protoc_insertion_point(field_mutable_list:SC_SanGong_AskBet.Bets)
  return &bets_;
}

// optional int32 chair_id = 2;
inline bool SC_SanGong_AskBet::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_SanGong_AskBet::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_SanGong_AskBet::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_SanGong_AskBet::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_SanGong_AskBet::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_SanGong_AskBet.chair_id)
  return chair_id_;
}
inline void SC_SanGong_AskBet::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_SanGong_AskBet.chair_id)
}

// -------------------------------------------------------------------

// CS_SanGong_AskBet

// optional int32 target = 1;
inline bool CS_SanGong_AskBet::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_SanGong_AskBet::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_SanGong_AskBet::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_SanGong_AskBet::clear_target() {
  target_ = 0;
  clear_has_target();
}
inline ::google::protobuf::int32 CS_SanGong_AskBet::target() const {
  // @@protoc_insertion_point(field_get:CS_SanGong_AskBet.target)
  return target_;
}
inline void CS_SanGong_AskBet::set_target(::google::protobuf::int32 value) {
  set_has_target();
  target_ = value;
  // @@protoc_insertion_point(field_set:CS_SanGong_AskBet.target)
}

// -------------------------------------------------------------------

// SC_SanGong_Bet

// optional int32 target = 1;
inline bool SC_SanGong_Bet::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_SanGong_Bet::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_SanGong_Bet::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_SanGong_Bet::clear_target() {
  target_ = 0;
  clear_has_target();
}
inline ::google::protobuf::int32 SC_SanGong_Bet::target() const {
  // @@protoc_insertion_point(field_get:SC_SanGong_Bet.target)
  return target_;
}
inline void SC_SanGong_Bet::set_target(::google::protobuf::int32 value) {
  set_has_target();
  target_ = value;
  // @@protoc_insertion_point(field_set:SC_SanGong_Bet.target)
}

// optional int32 chair_id = 2;
inline bool SC_SanGong_Bet::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_SanGong_Bet::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_SanGong_Bet::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_SanGong_Bet::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_SanGong_Bet::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_SanGong_Bet.chair_id)
  return chair_id_;
}
inline void SC_SanGong_Bet::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_SanGong_Bet.chair_id)
}

// -------------------------------------------------------------------

// SanGong_Card_Info

// repeated int32 cards = 1;
inline int SanGong_Card_Info::cards_size() const {
  return cards_.size();
}
inline void SanGong_Card_Info::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 SanGong_Card_Info::cards(int index) const {
  // @@protoc_insertion_point(field_get:SanGong_Card_Info.cards)
  return cards_.Get(index);
}
inline void SanGong_Card_Info::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SanGong_Card_Info.cards)
}
inline void SanGong_Card_Info::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:SanGong_Card_Info.cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SanGong_Card_Info::cards() const {
  // @@protoc_insertion_point(field_list:SanGong_Card_Info.cards)
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SanGong_Card_Info::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:SanGong_Card_Info.cards)
  return &cards_;
}

// -------------------------------------------------------------------

// SC_SanGong_PostCard

// repeated .SanGong_Card_Info pb_cards = 1;
inline int SC_SanGong_PostCard::pb_cards_size() const {
  return pb_cards_.size();
}
inline void SC_SanGong_PostCard::clear_pb_cards() {
  pb_cards_.Clear();
}
inline const ::SanGong_Card_Info& SC_SanGong_PostCard::pb_cards(int index) const {
  // @@protoc_insertion_point(field_get:SC_SanGong_PostCard.pb_cards)
  return pb_cards_.Get(index);
}
inline ::SanGong_Card_Info* SC_SanGong_PostCard::mutable_pb_cards(int index) {
  // @@protoc_insertion_point(field_mutable:SC_SanGong_PostCard.pb_cards)
  return pb_cards_.Mutable(index);
}
inline ::SanGong_Card_Info* SC_SanGong_PostCard::add_pb_cards() {
  // @@protoc_insertion_point(field_add:SC_SanGong_PostCard.pb_cards)
  return pb_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SanGong_Card_Info >*
SC_SanGong_PostCard::mutable_pb_cards() {
  // @@protoc_insertion_point(field_mutable_list:SC_SanGong_PostCard.pb_cards)
  return &pb_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SanGong_Card_Info >&
SC_SanGong_PostCard::pb_cards() const {
  // @@protoc_insertion_point(field_list:SC_SanGong_PostCard.pb_cards)
  return pb_cards_;
}

// -------------------------------------------------------------------

// SanGong_Player_Info

// repeated int32 cards = 1;
inline int SanGong_Player_Info::cards_size() const {
  return cards_.size();
}
inline void SanGong_Player_Info::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 SanGong_Player_Info::cards(int index) const {
  // @@protoc_insertion_point(field_get:SanGong_Player_Info.cards)
  return cards_.Get(index);
}
inline void SanGong_Player_Info::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SanGong_Player_Info.cards)
}
inline void SanGong_Player_Info::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:SanGong_Player_Info.cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SanGong_Player_Info::cards() const {
  // @@protoc_insertion_point(field_list:SanGong_Player_Info.cards)
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SanGong_Player_Info::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:SanGong_Player_Info.cards)
  return &cards_;
}

// optional int32 chair_id = 2;
inline bool SanGong_Player_Info::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SanGong_Player_Info::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SanGong_Player_Info::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SanGong_Player_Info::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SanGong_Player_Info::chair_id() const {
  // @@protoc_insertion_point(field_get:SanGong_Player_Info.chair_id)
  return chair_id_;
}
inline void SanGong_Player_Info::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SanGong_Player_Info.chair_id)
}

// optional int32 add_total = 3;
inline bool SanGong_Player_Info::has_add_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SanGong_Player_Info::set_has_add_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SanGong_Player_Info::clear_has_add_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SanGong_Player_Info::clear_add_total() {
  add_total_ = 0;
  clear_has_add_total();
}
inline ::google::protobuf::int32 SanGong_Player_Info::add_total() const {
  // @@protoc_insertion_point(field_get:SanGong_Player_Info.add_total)
  return add_total_;
}
inline void SanGong_Player_Info::set_add_total(::google::protobuf::int32 value) {
  set_has_add_total();
  add_total_ = value;
  // @@protoc_insertion_point(field_set:SanGong_Player_Info.add_total)
}

// optional int32 cur_round_add = 4;
inline bool SanGong_Player_Info::has_cur_round_add() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SanGong_Player_Info::set_has_cur_round_add() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SanGong_Player_Info::clear_has_cur_round_add() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SanGong_Player_Info::clear_cur_round_add() {
  cur_round_add_ = 0;
  clear_has_cur_round_add();
}
inline ::google::protobuf::int32 SanGong_Player_Info::cur_round_add() const {
  // @@protoc_insertion_point(field_get:SanGong_Player_Info.cur_round_add)
  return cur_round_add_;
}
inline void SanGong_Player_Info::set_cur_round_add(::google::protobuf::int32 value) {
  set_has_cur_round_add();
  cur_round_add_ = value;
  // @@protoc_insertion_point(field_set:SanGong_Player_Info.cur_round_add)
}

// optional string nick = 5;
inline bool SanGong_Player_Info::has_nick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SanGong_Player_Info::set_has_nick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SanGong_Player_Info::clear_has_nick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SanGong_Player_Info::clear_nick() {
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nick();
}
inline const ::std::string& SanGong_Player_Info::nick() const {
  // @@protoc_insertion_point(field_get:SanGong_Player_Info.nick)
  return nick_.GetNoArena();
}
inline void SanGong_Player_Info::set_nick(const ::std::string& value) {
  set_has_nick();
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SanGong_Player_Info.nick)
}
#if LANG_CXX11
inline void SanGong_Player_Info::set_nick(::std::string&& value) {
  set_has_nick();
  nick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SanGong_Player_Info.nick)
}
#endif
inline void SanGong_Player_Info::set_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nick();
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SanGong_Player_Info.nick)
}
inline void SanGong_Player_Info::set_nick(const char* value, size_t size) {
  set_has_nick();
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SanGong_Player_Info.nick)
}
inline ::std::string* SanGong_Player_Info::mutable_nick() {
  set_has_nick();
  // @@protoc_insertion_point(field_mutable:SanGong_Player_Info.nick)
  return nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SanGong_Player_Info::release_nick() {
  // @@protoc_insertion_point(field_release:SanGong_Player_Info.nick)
  clear_has_nick();
  return nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SanGong_Player_Info::set_allocated_nick(::std::string* nick) {
  if (nick != NULL) {
    set_has_nick();
  } else {
    clear_has_nick();
  }
  nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick);
  // @@protoc_insertion_point(field_set_allocated:SanGong_Player_Info.nick)
}

// optional int32 icon = 6;
inline bool SanGong_Player_Info::has_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SanGong_Player_Info::set_has_icon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SanGong_Player_Info::clear_has_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SanGong_Player_Info::clear_icon() {
  icon_ = 0;
  clear_has_icon();
}
inline ::google::protobuf::int32 SanGong_Player_Info::icon() const {
  // @@protoc_insertion_point(field_get:SanGong_Player_Info.icon)
  return icon_;
}
inline void SanGong_Player_Info::set_icon(::google::protobuf::int32 value) {
  set_has_icon();
  icon_ = value;
  // @@protoc_insertion_point(field_set:SanGong_Player_Info.icon)
}

// optional int64 gold = 7;
inline bool SanGong_Player_Info::has_gold() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SanGong_Player_Info::set_has_gold() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SanGong_Player_Info::clear_has_gold() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SanGong_Player_Info::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 SanGong_Player_Info::gold() const {
  // @@protoc_insertion_point(field_get:SanGong_Player_Info.gold)
  return gold_;
}
inline void SanGong_Player_Info::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:SanGong_Player_Info.gold)
}

// optional int32 guid = 8;
inline bool SanGong_Player_Info::has_guid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SanGong_Player_Info::set_has_guid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SanGong_Player_Info::clear_has_guid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SanGong_Player_Info::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SanGong_Player_Info::guid() const {
  // @@protoc_insertion_point(field_get:SanGong_Player_Info.guid)
  return guid_;
}
inline void SanGong_Player_Info::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SanGong_Player_Info.guid)
}

// optional bool is_win = 9;
inline bool SanGong_Player_Info::has_is_win() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SanGong_Player_Info::set_has_is_win() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SanGong_Player_Info::clear_has_is_win() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SanGong_Player_Info::clear_is_win() {
  is_win_ = false;
  clear_has_is_win();
}
inline bool SanGong_Player_Info::is_win() const {
  // @@protoc_insertion_point(field_get:SanGong_Player_Info.is_win)
  return is_win_;
}
inline void SanGong_Player_Info::set_is_win(bool value) {
  set_has_is_win();
  is_win_ = value;
  // @@protoc_insertion_point(field_set:SanGong_Player_Info.is_win)
}

// optional bool is_getbanker = 10;
inline bool SanGong_Player_Info::has_is_getbanker() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SanGong_Player_Info::set_has_is_getbanker() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SanGong_Player_Info::clear_has_is_getbanker() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SanGong_Player_Info::clear_is_getbanker() {
  is_getbanker_ = false;
  clear_has_is_getbanker();
}
inline bool SanGong_Player_Info::is_getbanker() const {
  // @@protoc_insertion_point(field_get:SanGong_Player_Info.is_getbanker)
  return is_getbanker_;
}
inline void SanGong_Player_Info::set_is_getbanker(bool value) {
  set_has_is_getbanker();
  is_getbanker_ = value;
  // @@protoc_insertion_point(field_set:SanGong_Player_Info.is_getbanker)
}

// repeated int32 Bets = 11;
inline int SanGong_Player_Info::bets_size() const {
  return bets_.size();
}
inline void SanGong_Player_Info::clear_bets() {
  bets_.Clear();
}
inline ::google::protobuf::int32 SanGong_Player_Info::bets(int index) const {
  // @@protoc_insertion_point(field_get:SanGong_Player_Info.Bets)
  return bets_.Get(index);
}
inline void SanGong_Player_Info::set_bets(int index, ::google::protobuf::int32 value) {
  bets_.Set(index, value);
  // @@protoc_insertion_point(field_set:SanGong_Player_Info.Bets)
}
inline void SanGong_Player_Info::add_bets(::google::protobuf::int32 value) {
  bets_.Add(value);
  // @@protoc_insertion_point(field_add:SanGong_Player_Info.Bets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SanGong_Player_Info::bets() const {
  // @@protoc_insertion_point(field_list:SanGong_Player_Info.Bets)
  return bets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SanGong_Player_Info::mutable_bets() {
  // @@protoc_insertion_point(field_mutable_list:SanGong_Player_Info.Bets)
  return &bets_;
}

// optional int32 win_money = 12;
inline bool SanGong_Player_Info::has_win_money() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SanGong_Player_Info::set_has_win_money() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SanGong_Player_Info::clear_has_win_money() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SanGong_Player_Info::clear_win_money() {
  win_money_ = 0;
  clear_has_win_money();
}
inline ::google::protobuf::int32 SanGong_Player_Info::win_money() const {
  // @@protoc_insertion_point(field_get:SanGong_Player_Info.win_money)
  return win_money_;
}
inline void SanGong_Player_Info::set_win_money(::google::protobuf::int32 value) {
  set_has_win_money();
  win_money_ = value;
  // @@protoc_insertion_point(field_set:SanGong_Player_Info.win_money)
}

// optional int32 taxes = 13;
inline bool SanGong_Player_Info::has_taxes() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SanGong_Player_Info::set_has_taxes() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SanGong_Player_Info::clear_has_taxes() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SanGong_Player_Info::clear_taxes() {
  taxes_ = 0;
  clear_has_taxes();
}
inline ::google::protobuf::int32 SanGong_Player_Info::taxes() const {
  // @@protoc_insertion_point(field_get:SanGong_Player_Info.taxes)
  return taxes_;
}
inline void SanGong_Player_Info::set_taxes(::google::protobuf::int32 value) {
  set_has_taxes();
  taxes_ = value;
  // @@protoc_insertion_point(field_set:SanGong_Player_Info.taxes)
}

// optional int32 lefttime = 14;
inline bool SanGong_Player_Info::has_lefttime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SanGong_Player_Info::set_has_lefttime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SanGong_Player_Info::clear_has_lefttime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SanGong_Player_Info::clear_lefttime() {
  lefttime_ = 0;
  clear_has_lefttime();
}
inline ::google::protobuf::int32 SanGong_Player_Info::lefttime() const {
  // @@protoc_insertion_point(field_get:SanGong_Player_Info.lefttime)
  return lefttime_;
}
inline void SanGong_Player_Info::set_lefttime(::google::protobuf::int32 value) {
  set_has_lefttime();
  lefttime_ = value;
  // @@protoc_insertion_point(field_set:SanGong_Player_Info.lefttime)
}

// -------------------------------------------------------------------

// SC_SanGong_PostResult

// repeated .SanGong_Player_Info pb_splayerinfo = 1;
inline int SC_SanGong_PostResult::pb_splayerinfo_size() const {
  return pb_splayerinfo_.size();
}
inline void SC_SanGong_PostResult::clear_pb_splayerinfo() {
  pb_splayerinfo_.Clear();
}
inline const ::SanGong_Player_Info& SC_SanGong_PostResult::pb_splayerinfo(int index) const {
  // @@protoc_insertion_point(field_get:SC_SanGong_PostResult.pb_splayerinfo)
  return pb_splayerinfo_.Get(index);
}
inline ::SanGong_Player_Info* SC_SanGong_PostResult::mutable_pb_splayerinfo(int index) {
  // @@protoc_insertion_point(field_mutable:SC_SanGong_PostResult.pb_splayerinfo)
  return pb_splayerinfo_.Mutable(index);
}
inline ::SanGong_Player_Info* SC_SanGong_PostResult::add_pb_splayerinfo() {
  // @@protoc_insertion_point(field_add:SC_SanGong_PostResult.pb_splayerinfo)
  return pb_splayerinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SanGong_Player_Info >*
SC_SanGong_PostResult::mutable_pb_splayerinfo() {
  // @@protoc_insertion_point(field_mutable_list:SC_SanGong_PostResult.pb_splayerinfo)
  return &pb_splayerinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SanGong_Player_Info >&
SC_SanGong_PostResult::pb_splayerinfo() const {
  // @@protoc_insertion_point(field_list:SC_SanGong_PostResult.pb_splayerinfo)
  return pb_splayerinfo_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::SC_SanGong_GameStart_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_SanGong_GameStart_MsgID>() {
  return ::SC_SanGong_GameStart_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_SanGong_AskBanker_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_SanGong_AskBanker_MsgID>() {
  return ::SC_SanGong_AskBanker_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_SanGong_AskBanker_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_SanGong_AskBanker_MsgID>() {
  return ::CS_SanGong_AskBanker_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_SanGong_TalkBanker_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_SanGong_TalkBanker_MsgID>() {
  return ::SC_SanGong_TalkBanker_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_SanGong_Banker_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_SanGong_Banker_MsgID>() {
  return ::SC_SanGong_Banker_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_SanGong_AskBet_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_SanGong_AskBet_MsgID>() {
  return ::SC_SanGong_AskBet_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_SanGong_AskBet_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_SanGong_AskBet_MsgID>() {
  return ::CS_SanGong_AskBet_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_SanGong_Bet_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_SanGong_Bet_MsgID>() {
  return ::SC_SanGong_Bet_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_SanGong_PostCard_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_SanGong_PostCard_MsgID>() {
  return ::SC_SanGong_PostCard_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_SanGong_PostResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_SanGong_PostResult_MsgID>() {
  return ::SC_SanGong_PostResult_MsgID_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_public_5fsangong_2eproto__INCLUDED
