// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class VerifyAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VerifyAccount> {
} _VerifyAccount_default_instance_;
class VerifyAccountResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VerifyAccountResult> {
} _VerifyAccountResult_default_instance_;
class GuestAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GuestAccount> {
} _GuestAccount_default_instance_;

namespace protobuf_login_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccount, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccount, password_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, no_bank_password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, vip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, login_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, logout_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, is_guest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, alipay_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, alipay_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, change_alipay_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, risk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, enable_transfer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, inviter_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyAccountResult, invite_code_),
  6,
  7,
  8,
  9,
  10,
  11,
  0,
  12,
  1,
  2,
  3,
  13,
  14,
  4,
  15,
  16,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, no_bank_password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, vip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, login_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, logout_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, is_guest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, alipay_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, alipay_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, change_alipay_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, risk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, enable_transfer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestAccount, is_first_),
  6,
  7,
  0,
  8,
  9,
  10,
  11,
  1,
  12,
  2,
  3,
  4,
  13,
  14,
  5,
  15,
  16,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(VerifyAccount)},
  { 9, 31, sizeof(VerifyAccountResult)},
  { 48, 70, sizeof(GuestAccount)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_VerifyAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VerifyAccountResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuestAccount_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "login.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _VerifyAccount_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _VerifyAccountResult_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _GuestAccount_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _VerifyAccount_default_instance_.DefaultConstruct();
  _VerifyAccountResult_default_instance_.DefaultConstruct();
  _GuestAccount_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013login.proto\"2\n\rVerifyAccount\022\017\n\007accoun"
      "t\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"\347\002\n\023VerifyAcco"
      "untResult\022\013\n\003ret\030\001 \001(\005\022\014\n\004guid\030\003 \001(\005\022\030\n\020"
      "no_bank_password\030\004 \001(\005\022\013\n\003vip\030\005 \001(\005\022\022\n\nl"
      "ogin_time\030\006 \001(\005\022\023\n\013logout_time\030\007 \001(\005\022\020\n\010"
      "nickname\030\010 \001(\t\022\020\n\010is_guest\030\t \001(\005\022\020\n\010pass"
      "word\030\n \001(\t\022\026\n\016alipay_account\030\013 \001(\t\022\023\n\013al"
      "ipay_name\030\014 \001(\t\022\031\n\021change_alipay_num\030\r \001"
      "(\005\022\014\n\004risk\030\016 \001(\005\022\022\n\nchannel_id\030\017 \001(\t\022\027\n\017"
      "enable_transfer\030\020 \001(\010\022\027\n\014inviter_guid\030\021 "
      "\001(\005:\0010\022\023\n\013invite_code\030\022 \001(\t\"\330\002\n\014GuestAcc"
      "ount\022\013\n\003ret\030\001 \001(\005\022\014\n\004guid\030\002 \001(\005\022\017\n\007accou"
      "nt\030\003 \001(\t\022\030\n\020no_bank_password\030\004 \001(\005\022\013\n\003vi"
      "p\030\005 \001(\005\022\022\n\nlogin_time\030\006 \001(\005\022\023\n\013logout_ti"
      "me\030\007 \001(\005\022\020\n\010nickname\030\010 \001(\t\022\020\n\010is_guest\030\t"
      " \001(\005\022\020\n\010password\030\n \001(\t\022\026\n\016alipay_account"
      "\030\013 \001(\t\022\023\n\013alipay_name\030\014 \001(\t\022\031\n\021change_al"
      "ipay_num\030\r \001(\005\022\014\n\004risk\030\016 \001(\005\022\022\n\nchannel_"
      "id\030\017 \001(\t\022\027\n\017enable_transfer\030\020 \001(\010\022\023\n\010is_"
      "first\030\021 \001(\005:\0012"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 774);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "login.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_login_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyAccount::kAccountFieldNumber;
const int VerifyAccount::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyAccount::VerifyAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:VerifyAccount)
}
VerifyAccount::VerifyAccount(const VerifyAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:VerifyAccount)
}

void VerifyAccount::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VerifyAccount::~VerifyAccount() {
  // @@protoc_insertion_point(destructor:VerifyAccount)
  SharedDtor();
}

void VerifyAccount::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifyAccount::descriptor() {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyAccount& VerifyAccount::default_instance() {
  protobuf_login_2eproto::InitDefaults();
  return *internal_default_instance();
}

VerifyAccount* VerifyAccount::New(::google::protobuf::Arena* arena) const {
  VerifyAccount* n = new VerifyAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:VerifyAccount)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VerifyAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "VerifyAccount.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "VerifyAccount.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VerifyAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VerifyAccount)
  return false;
#undef DO_
}

void VerifyAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VerifyAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccount.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccount.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VerifyAccount)
}

::google::protobuf::uint8* VerifyAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:VerifyAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccount.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccount.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VerifyAccount)
  return target;
}

size_t VerifyAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VerifyAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VerifyAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VerifyAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VerifyAccount)
    MergeFrom(*source);
  }
}

void VerifyAccount::MergeFrom(const VerifyAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VerifyAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
}

void VerifyAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VerifyAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyAccount::CopyFrom(const VerifyAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VerifyAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyAccount::IsInitialized() const {
  return true;
}

void VerifyAccount::Swap(VerifyAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyAccount::InternalSwap(VerifyAccount* other) {
  account_.Swap(&other->account_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifyAccount::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyAccount

// optional string account = 1;
bool VerifyAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VerifyAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void VerifyAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void VerifyAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& VerifyAccount::account() const {
  // @@protoc_insertion_point(field_get:VerifyAccount.account)
  return account_.GetNoArena();
}
void VerifyAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccount.account)
}
#if LANG_CXX11
void VerifyAccount::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccount.account)
}
#endif
void VerifyAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccount.account)
}
void VerifyAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccount.account)
}
::std::string* VerifyAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:VerifyAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyAccount::release_account() {
  // @@protoc_insertion_point(field_release:VerifyAccount.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccount.account)
}

// optional string password = 2;
bool VerifyAccount::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VerifyAccount::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void VerifyAccount::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void VerifyAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& VerifyAccount::password() const {
  // @@protoc_insertion_point(field_get:VerifyAccount.password)
  return password_.GetNoArena();
}
void VerifyAccount::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccount.password)
}
#if LANG_CXX11
void VerifyAccount::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccount.password)
}
#endif
void VerifyAccount::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccount.password)
}
void VerifyAccount::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccount.password)
}
::std::string* VerifyAccount::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:VerifyAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyAccount::release_password() {
  // @@protoc_insertion_point(field_release:VerifyAccount.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccount.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyAccountResult::kRetFieldNumber;
const int VerifyAccountResult::kGuidFieldNumber;
const int VerifyAccountResult::kNoBankPasswordFieldNumber;
const int VerifyAccountResult::kVipFieldNumber;
const int VerifyAccountResult::kLoginTimeFieldNumber;
const int VerifyAccountResult::kLogoutTimeFieldNumber;
const int VerifyAccountResult::kNicknameFieldNumber;
const int VerifyAccountResult::kIsGuestFieldNumber;
const int VerifyAccountResult::kPasswordFieldNumber;
const int VerifyAccountResult::kAlipayAccountFieldNumber;
const int VerifyAccountResult::kAlipayNameFieldNumber;
const int VerifyAccountResult::kChangeAlipayNumFieldNumber;
const int VerifyAccountResult::kRiskFieldNumber;
const int VerifyAccountResult::kChannelIdFieldNumber;
const int VerifyAccountResult::kEnableTransferFieldNumber;
const int VerifyAccountResult::kInviterGuidFieldNumber;
const int VerifyAccountResult::kInviteCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyAccountResult::VerifyAccountResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:VerifyAccountResult)
}
VerifyAccountResult::VerifyAccountResult(const VerifyAccountResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  alipay_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_account()) {
    alipay_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_);
  }
  alipay_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_name()) {
    alipay_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_);
  }
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel_id()) {
    channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
  }
  invite_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_invite_code()) {
    invite_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invite_code_);
  }
  ::memcpy(&ret_, &from.ret_,
    reinterpret_cast<char*>(&inviter_guid_) -
    reinterpret_cast<char*>(&ret_) + sizeof(inviter_guid_));
  // @@protoc_insertion_point(copy_constructor:VerifyAccountResult)
}

void VerifyAccountResult::SharedCtor() {
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invite_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ret_, 0, reinterpret_cast<char*>(&inviter_guid_) -
    reinterpret_cast<char*>(&ret_) + sizeof(inviter_guid_));
}

VerifyAccountResult::~VerifyAccountResult() {
  // @@protoc_insertion_point(destructor:VerifyAccountResult)
  SharedDtor();
}

void VerifyAccountResult::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invite_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyAccountResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifyAccountResult::descriptor() {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyAccountResult& VerifyAccountResult::default_instance() {
  protobuf_login_2eproto::InitDefaults();
  return *internal_default_instance();
}

VerifyAccountResult* VerifyAccountResult::New(::google::protobuf::Arena* arena) const {
  VerifyAccountResult* n = new VerifyAccountResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyAccountResult::Clear() {
// @@protoc_insertion_point(message_clear_start:VerifyAccountResult)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_nickname()) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_alipay_account()) {
      GOOGLE_DCHECK(!alipay_account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_account_.UnsafeRawStringPointer())->clear();
    }
    if (has_alipay_name()) {
      GOOGLE_DCHECK(!alipay_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_channel_id()) {
      GOOGLE_DCHECK(!channel_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*channel_id_.UnsafeRawStringPointer())->clear();
    }
    if (has_invite_code()) {
      GOOGLE_DCHECK(!invite_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*invite_code_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 192u) {
    ::memset(&ret_, 0, reinterpret_cast<char*>(&guid_) -
      reinterpret_cast<char*>(&ret_) + sizeof(guid_));
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&no_bank_password_, 0, reinterpret_cast<char*>(&enable_transfer_) -
      reinterpret_cast<char*>(&no_bank_password_) + sizeof(enable_transfer_));
  }
  inviter_guid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyAccountResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VerifyAccountResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 no_bank_password = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_no_bank_password();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_bank_password_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_vip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 login_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_login_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &login_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 logout_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_logout_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logout_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "VerifyAccountResult.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 is_guest = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_is_guest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_guest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "VerifyAccountResult.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_account = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_account().data(), this->alipay_account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "VerifyAccountResult.alipay_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_name = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_name().data(), this->alipay_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "VerifyAccountResult.alipay_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 change_alipay_num = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_change_alipay_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &change_alipay_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 risk = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_risk();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &risk_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel_id().data(), this->channel_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "VerifyAccountResult.channel_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_transfer = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has_enable_transfer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_transfer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 inviter_guid = 17 [default = 0];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          set_has_inviter_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inviter_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string invite_code = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invite_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->invite_code().data(), this->invite_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "VerifyAccountResult.invite_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VerifyAccountResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VerifyAccountResult)
  return false;
#undef DO_
}

void VerifyAccountResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VerifyAccountResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ret = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 guid = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->guid(), output);
  }

  // optional int32 no_bank_password = 4;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->no_bank_password(), output);
  }

  // optional int32 vip = 5;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->vip(), output);
  }

  // optional int32 login_time = 6;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->login_time(), output);
  }

  // optional int32 logout_time = 7;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->logout_time(), output);
  }

  // optional string nickname = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccountResult.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->nickname(), output);
  }

  // optional int32 is_guest = 9;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->is_guest(), output);
  }

  // optional string password = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccountResult.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->password(), output);
  }

  // optional string alipay_account = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account().data(), this->alipay_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccountResult.alipay_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->alipay_account(), output);
  }

  // optional string alipay_name = 12;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name().data(), this->alipay_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccountResult.alipay_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->alipay_name(), output);
  }

  // optional int32 change_alipay_num = 13;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->change_alipay_num(), output);
  }

  // optional int32 risk = 14;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->risk(), output);
  }

  // optional string channel_id = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_id().data(), this->channel_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccountResult.channel_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->channel_id(), output);
  }

  // optional bool enable_transfer = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->enable_transfer(), output);
  }

  // optional int32 inviter_guid = 17 [default = 0];
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->inviter_guid(), output);
  }

  // optional string invite_code = 18;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invite_code().data(), this->invite_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccountResult.invite_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->invite_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VerifyAccountResult)
}

::google::protobuf::uint8* VerifyAccountResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:VerifyAccountResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ret = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 guid = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->guid(), target);
  }

  // optional int32 no_bank_password = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->no_bank_password(), target);
  }

  // optional int32 vip = 5;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->vip(), target);
  }

  // optional int32 login_time = 6;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->login_time(), target);
  }

  // optional int32 logout_time = 7;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->logout_time(), target);
  }

  // optional string nickname = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccountResult.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->nickname(), target);
  }

  // optional int32 is_guest = 9;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->is_guest(), target);
  }

  // optional string password = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccountResult.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->password(), target);
  }

  // optional string alipay_account = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account().data(), this->alipay_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccountResult.alipay_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->alipay_account(), target);
  }

  // optional string alipay_name = 12;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name().data(), this->alipay_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccountResult.alipay_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->alipay_name(), target);
  }

  // optional int32 change_alipay_num = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->change_alipay_num(), target);
  }

  // optional int32 risk = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->risk(), target);
  }

  // optional string channel_id = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_id().data(), this->channel_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccountResult.channel_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->channel_id(), target);
  }

  // optional bool enable_transfer = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->enable_transfer(), target);
  }

  // optional int32 inviter_guid = 17 [default = 0];
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->inviter_guid(), target);
  }

  // optional string invite_code = 18;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invite_code().data(), this->invite_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "VerifyAccountResult.invite_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->invite_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VerifyAccountResult)
  return target;
}

size_t VerifyAccountResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VerifyAccountResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string nickname = 8;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string password = 10;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string alipay_account = 11;
    if (has_alipay_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_account());
    }

    // optional string alipay_name = 12;
    if (has_alipay_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_name());
    }

    // optional string channel_id = 15;
    if (has_channel_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel_id());
    }

    // optional string invite_code = 18;
    if (has_invite_code()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invite_code());
    }

    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 guid = 3;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 no_bank_password = 4;
    if (has_no_bank_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_bank_password());
    }

    // optional int32 vip = 5;
    if (has_vip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip());
    }

    // optional int32 login_time = 6;
    if (has_login_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->login_time());
    }

    // optional int32 logout_time = 7;
    if (has_logout_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->logout_time());
    }

    // optional int32 is_guest = 9;
    if (has_is_guest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_guest());
    }

    // optional int32 change_alipay_num = 13;
    if (has_change_alipay_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->change_alipay_num());
    }

    // optional int32 risk = 14;
    if (has_risk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->risk());
    }

    // optional bool enable_transfer = 16;
    if (has_enable_transfer()) {
      total_size += 2 + 1;
    }

  }
  // optional int32 inviter_guid = 17 [default = 0];
  if (has_inviter_guid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->inviter_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyAccountResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VerifyAccountResult)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyAccountResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyAccountResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VerifyAccountResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VerifyAccountResult)
    MergeFrom(*source);
  }
}

void VerifyAccountResult::MergeFrom(const VerifyAccountResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VerifyAccountResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_alipay_account();
      alipay_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_alipay_name();
      alipay_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_channel_id();
      channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_invite_code();
      invite_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invite_code_);
    }
    if (cached_has_bits & 0x00000040u) {
      ret_ = from.ret_;
    }
    if (cached_has_bits & 0x00000080u) {
      guid_ = from.guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      no_bank_password_ = from.no_bank_password_;
    }
    if (cached_has_bits & 0x00000200u) {
      vip_ = from.vip_;
    }
    if (cached_has_bits & 0x00000400u) {
      login_time_ = from.login_time_;
    }
    if (cached_has_bits & 0x00000800u) {
      logout_time_ = from.logout_time_;
    }
    if (cached_has_bits & 0x00001000u) {
      is_guest_ = from.is_guest_;
    }
    if (cached_has_bits & 0x00002000u) {
      change_alipay_num_ = from.change_alipay_num_;
    }
    if (cached_has_bits & 0x00004000u) {
      risk_ = from.risk_;
    }
    if (cached_has_bits & 0x00008000u) {
      enable_transfer_ = from.enable_transfer_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_inviter_guid(from.inviter_guid());
  }
}

void VerifyAccountResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VerifyAccountResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyAccountResult::CopyFrom(const VerifyAccountResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VerifyAccountResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyAccountResult::IsInitialized() const {
  return true;
}

void VerifyAccountResult::Swap(VerifyAccountResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyAccountResult::InternalSwap(VerifyAccountResult* other) {
  nickname_.Swap(&other->nickname_);
  password_.Swap(&other->password_);
  alipay_account_.Swap(&other->alipay_account_);
  alipay_name_.Swap(&other->alipay_name_);
  channel_id_.Swap(&other->channel_id_);
  invite_code_.Swap(&other->invite_code_);
  std::swap(ret_, other->ret_);
  std::swap(guid_, other->guid_);
  std::swap(no_bank_password_, other->no_bank_password_);
  std::swap(vip_, other->vip_);
  std::swap(login_time_, other->login_time_);
  std::swap(logout_time_, other->logout_time_);
  std::swap(is_guest_, other->is_guest_);
  std::swap(change_alipay_num_, other->change_alipay_num_);
  std::swap(risk_, other->risk_);
  std::swap(enable_transfer_, other->enable_transfer_);
  std::swap(inviter_guid_, other->inviter_guid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifyAccountResult::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyAccountResult

// optional int32 ret = 1;
bool VerifyAccountResult::has_ret() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void VerifyAccountResult::set_has_ret() {
  _has_bits_[0] |= 0x00000040u;
}
void VerifyAccountResult::clear_has_ret() {
  _has_bits_[0] &= ~0x00000040u;
}
void VerifyAccountResult::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
::google::protobuf::int32 VerifyAccountResult::ret() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.ret)
  return ret_;
}
void VerifyAccountResult::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.ret)
}

// optional int32 guid = 3;
bool VerifyAccountResult::has_guid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void VerifyAccountResult::set_has_guid() {
  _has_bits_[0] |= 0x00000080u;
}
void VerifyAccountResult::clear_has_guid() {
  _has_bits_[0] &= ~0x00000080u;
}
void VerifyAccountResult::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 VerifyAccountResult::guid() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.guid)
  return guid_;
}
void VerifyAccountResult::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.guid)
}

// optional int32 no_bank_password = 4;
bool VerifyAccountResult::has_no_bank_password() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void VerifyAccountResult::set_has_no_bank_password() {
  _has_bits_[0] |= 0x00000100u;
}
void VerifyAccountResult::clear_has_no_bank_password() {
  _has_bits_[0] &= ~0x00000100u;
}
void VerifyAccountResult::clear_no_bank_password() {
  no_bank_password_ = 0;
  clear_has_no_bank_password();
}
::google::protobuf::int32 VerifyAccountResult::no_bank_password() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.no_bank_password)
  return no_bank_password_;
}
void VerifyAccountResult::set_no_bank_password(::google::protobuf::int32 value) {
  set_has_no_bank_password();
  no_bank_password_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.no_bank_password)
}

// optional int32 vip = 5;
bool VerifyAccountResult::has_vip() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void VerifyAccountResult::set_has_vip() {
  _has_bits_[0] |= 0x00000200u;
}
void VerifyAccountResult::clear_has_vip() {
  _has_bits_[0] &= ~0x00000200u;
}
void VerifyAccountResult::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
::google::protobuf::int32 VerifyAccountResult::vip() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.vip)
  return vip_;
}
void VerifyAccountResult::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.vip)
}

// optional int32 login_time = 6;
bool VerifyAccountResult::has_login_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void VerifyAccountResult::set_has_login_time() {
  _has_bits_[0] |= 0x00000400u;
}
void VerifyAccountResult::clear_has_login_time() {
  _has_bits_[0] &= ~0x00000400u;
}
void VerifyAccountResult::clear_login_time() {
  login_time_ = 0;
  clear_has_login_time();
}
::google::protobuf::int32 VerifyAccountResult::login_time() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.login_time)
  return login_time_;
}
void VerifyAccountResult::set_login_time(::google::protobuf::int32 value) {
  set_has_login_time();
  login_time_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.login_time)
}

// optional int32 logout_time = 7;
bool VerifyAccountResult::has_logout_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void VerifyAccountResult::set_has_logout_time() {
  _has_bits_[0] |= 0x00000800u;
}
void VerifyAccountResult::clear_has_logout_time() {
  _has_bits_[0] &= ~0x00000800u;
}
void VerifyAccountResult::clear_logout_time() {
  logout_time_ = 0;
  clear_has_logout_time();
}
::google::protobuf::int32 VerifyAccountResult::logout_time() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.logout_time)
  return logout_time_;
}
void VerifyAccountResult::set_logout_time(::google::protobuf::int32 value) {
  set_has_logout_time();
  logout_time_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.logout_time)
}

// optional string nickname = 8;
bool VerifyAccountResult::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VerifyAccountResult::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
void VerifyAccountResult::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
void VerifyAccountResult::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& VerifyAccountResult::nickname() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.nickname)
  return nickname_.GetNoArena();
}
void VerifyAccountResult::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccountResult.nickname)
}
#if LANG_CXX11
void VerifyAccountResult::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccountResult.nickname)
}
#endif
void VerifyAccountResult::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccountResult.nickname)
}
void VerifyAccountResult::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccountResult.nickname)
}
::std::string* VerifyAccountResult::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:VerifyAccountResult.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyAccountResult::release_nickname() {
  // @@protoc_insertion_point(field_release:VerifyAccountResult.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyAccountResult::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccountResult.nickname)
}

// optional int32 is_guest = 9;
bool VerifyAccountResult::has_is_guest() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void VerifyAccountResult::set_has_is_guest() {
  _has_bits_[0] |= 0x00001000u;
}
void VerifyAccountResult::clear_has_is_guest() {
  _has_bits_[0] &= ~0x00001000u;
}
void VerifyAccountResult::clear_is_guest() {
  is_guest_ = 0;
  clear_has_is_guest();
}
::google::protobuf::int32 VerifyAccountResult::is_guest() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.is_guest)
  return is_guest_;
}
void VerifyAccountResult::set_is_guest(::google::protobuf::int32 value) {
  set_has_is_guest();
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.is_guest)
}

// optional string password = 10;
bool VerifyAccountResult::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VerifyAccountResult::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void VerifyAccountResult::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void VerifyAccountResult::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& VerifyAccountResult::password() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.password)
  return password_.GetNoArena();
}
void VerifyAccountResult::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccountResult.password)
}
#if LANG_CXX11
void VerifyAccountResult::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccountResult.password)
}
#endif
void VerifyAccountResult::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccountResult.password)
}
void VerifyAccountResult::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccountResult.password)
}
::std::string* VerifyAccountResult::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:VerifyAccountResult.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyAccountResult::release_password() {
  // @@protoc_insertion_point(field_release:VerifyAccountResult.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyAccountResult::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccountResult.password)
}

// optional string alipay_account = 11;
bool VerifyAccountResult::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VerifyAccountResult::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000004u;
}
void VerifyAccountResult::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000004u;
}
void VerifyAccountResult::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
const ::std::string& VerifyAccountResult::alipay_account() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.alipay_account)
  return alipay_account_.GetNoArena();
}
void VerifyAccountResult::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccountResult.alipay_account)
}
#if LANG_CXX11
void VerifyAccountResult::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccountResult.alipay_account)
}
#endif
void VerifyAccountResult::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccountResult.alipay_account)
}
void VerifyAccountResult::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccountResult.alipay_account)
}
::std::string* VerifyAccountResult::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:VerifyAccountResult.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyAccountResult::release_alipay_account() {
  // @@protoc_insertion_point(field_release:VerifyAccountResult.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyAccountResult::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccountResult.alipay_account)
}

// optional string alipay_name = 12;
bool VerifyAccountResult::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void VerifyAccountResult::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000008u;
}
void VerifyAccountResult::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void VerifyAccountResult::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
const ::std::string& VerifyAccountResult::alipay_name() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.alipay_name)
  return alipay_name_.GetNoArena();
}
void VerifyAccountResult::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccountResult.alipay_name)
}
#if LANG_CXX11
void VerifyAccountResult::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccountResult.alipay_name)
}
#endif
void VerifyAccountResult::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccountResult.alipay_name)
}
void VerifyAccountResult::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccountResult.alipay_name)
}
::std::string* VerifyAccountResult::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:VerifyAccountResult.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyAccountResult::release_alipay_name() {
  // @@protoc_insertion_point(field_release:VerifyAccountResult.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyAccountResult::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccountResult.alipay_name)
}

// optional int32 change_alipay_num = 13;
bool VerifyAccountResult::has_change_alipay_num() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void VerifyAccountResult::set_has_change_alipay_num() {
  _has_bits_[0] |= 0x00002000u;
}
void VerifyAccountResult::clear_has_change_alipay_num() {
  _has_bits_[0] &= ~0x00002000u;
}
void VerifyAccountResult::clear_change_alipay_num() {
  change_alipay_num_ = 0;
  clear_has_change_alipay_num();
}
::google::protobuf::int32 VerifyAccountResult::change_alipay_num() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.change_alipay_num)
  return change_alipay_num_;
}
void VerifyAccountResult::set_change_alipay_num(::google::protobuf::int32 value) {
  set_has_change_alipay_num();
  change_alipay_num_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.change_alipay_num)
}

// optional int32 risk = 14;
bool VerifyAccountResult::has_risk() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void VerifyAccountResult::set_has_risk() {
  _has_bits_[0] |= 0x00004000u;
}
void VerifyAccountResult::clear_has_risk() {
  _has_bits_[0] &= ~0x00004000u;
}
void VerifyAccountResult::clear_risk() {
  risk_ = 0;
  clear_has_risk();
}
::google::protobuf::int32 VerifyAccountResult::risk() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.risk)
  return risk_;
}
void VerifyAccountResult::set_risk(::google::protobuf::int32 value) {
  set_has_risk();
  risk_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.risk)
}

// optional string channel_id = 15;
bool VerifyAccountResult::has_channel_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void VerifyAccountResult::set_has_channel_id() {
  _has_bits_[0] |= 0x00000010u;
}
void VerifyAccountResult::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void VerifyAccountResult::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
const ::std::string& VerifyAccountResult::channel_id() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.channel_id)
  return channel_id_.GetNoArena();
}
void VerifyAccountResult::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccountResult.channel_id)
}
#if LANG_CXX11
void VerifyAccountResult::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccountResult.channel_id)
}
#endif
void VerifyAccountResult::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccountResult.channel_id)
}
void VerifyAccountResult::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccountResult.channel_id)
}
::std::string* VerifyAccountResult::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:VerifyAccountResult.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyAccountResult::release_channel_id() {
  // @@protoc_insertion_point(field_release:VerifyAccountResult.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyAccountResult::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccountResult.channel_id)
}

// optional bool enable_transfer = 16;
bool VerifyAccountResult::has_enable_transfer() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void VerifyAccountResult::set_has_enable_transfer() {
  _has_bits_[0] |= 0x00008000u;
}
void VerifyAccountResult::clear_has_enable_transfer() {
  _has_bits_[0] &= ~0x00008000u;
}
void VerifyAccountResult::clear_enable_transfer() {
  enable_transfer_ = false;
  clear_has_enable_transfer();
}
bool VerifyAccountResult::enable_transfer() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.enable_transfer)
  return enable_transfer_;
}
void VerifyAccountResult::set_enable_transfer(bool value) {
  set_has_enable_transfer();
  enable_transfer_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.enable_transfer)
}

// optional int32 inviter_guid = 17 [default = 0];
bool VerifyAccountResult::has_inviter_guid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void VerifyAccountResult::set_has_inviter_guid() {
  _has_bits_[0] |= 0x00010000u;
}
void VerifyAccountResult::clear_has_inviter_guid() {
  _has_bits_[0] &= ~0x00010000u;
}
void VerifyAccountResult::clear_inviter_guid() {
  inviter_guid_ = 0;
  clear_has_inviter_guid();
}
::google::protobuf::int32 VerifyAccountResult::inviter_guid() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.inviter_guid)
  return inviter_guid_;
}
void VerifyAccountResult::set_inviter_guid(::google::protobuf::int32 value) {
  set_has_inviter_guid();
  inviter_guid_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.inviter_guid)
}

// optional string invite_code = 18;
bool VerifyAccountResult::has_invite_code() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void VerifyAccountResult::set_has_invite_code() {
  _has_bits_[0] |= 0x00000020u;
}
void VerifyAccountResult::clear_has_invite_code() {
  _has_bits_[0] &= ~0x00000020u;
}
void VerifyAccountResult::clear_invite_code() {
  invite_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invite_code();
}
const ::std::string& VerifyAccountResult::invite_code() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.invite_code)
  return invite_code_.GetNoArena();
}
void VerifyAccountResult::set_invite_code(const ::std::string& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccountResult.invite_code)
}
#if LANG_CXX11
void VerifyAccountResult::set_invite_code(::std::string&& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccountResult.invite_code)
}
#endif
void VerifyAccountResult::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccountResult.invite_code)
}
void VerifyAccountResult::set_invite_code(const char* value, size_t size) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccountResult.invite_code)
}
::std::string* VerifyAccountResult::mutable_invite_code() {
  set_has_invite_code();
  // @@protoc_insertion_point(field_mutable:VerifyAccountResult.invite_code)
  return invite_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyAccountResult::release_invite_code() {
  // @@protoc_insertion_point(field_release:VerifyAccountResult.invite_code)
  clear_has_invite_code();
  return invite_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyAccountResult::set_allocated_invite_code(::std::string* invite_code) {
  if (invite_code != NULL) {
    set_has_invite_code();
  } else {
    clear_has_invite_code();
  }
  invite_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invite_code);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccountResult.invite_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuestAccount::kRetFieldNumber;
const int GuestAccount::kGuidFieldNumber;
const int GuestAccount::kAccountFieldNumber;
const int GuestAccount::kNoBankPasswordFieldNumber;
const int GuestAccount::kVipFieldNumber;
const int GuestAccount::kLoginTimeFieldNumber;
const int GuestAccount::kLogoutTimeFieldNumber;
const int GuestAccount::kNicknameFieldNumber;
const int GuestAccount::kIsGuestFieldNumber;
const int GuestAccount::kPasswordFieldNumber;
const int GuestAccount::kAlipayAccountFieldNumber;
const int GuestAccount::kAlipayNameFieldNumber;
const int GuestAccount::kChangeAlipayNumFieldNumber;
const int GuestAccount::kRiskFieldNumber;
const int GuestAccount::kChannelIdFieldNumber;
const int GuestAccount::kEnableTransferFieldNumber;
const int GuestAccount::kIsFirstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuestAccount::GuestAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuestAccount)
}
GuestAccount::GuestAccount(const GuestAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  alipay_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_account()) {
    alipay_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_);
  }
  alipay_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alipay_name()) {
    alipay_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_);
  }
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel_id()) {
    channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
  }
  ::memcpy(&ret_, &from.ret_,
    reinterpret_cast<char*>(&is_first_) -
    reinterpret_cast<char*>(&ret_) + sizeof(is_first_));
  // @@protoc_insertion_point(copy_constructor:GuestAccount)
}

void GuestAccount::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ret_, 0, reinterpret_cast<char*>(&enable_transfer_) -
    reinterpret_cast<char*>(&ret_) + sizeof(enable_transfer_));
  is_first_ = 2;
}

GuestAccount::~GuestAccount() {
  // @@protoc_insertion_point(destructor:GuestAccount)
  SharedDtor();
}

void GuestAccount::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alipay_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuestAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuestAccount::descriptor() {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuestAccount& GuestAccount::default_instance() {
  protobuf_login_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuestAccount* GuestAccount::New(::google::protobuf::Arena* arena) const {
  GuestAccount* n = new GuestAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuestAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:GuestAccount)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_nickname()) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_alipay_account()) {
      GOOGLE_DCHECK(!alipay_account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_account_.UnsafeRawStringPointer())->clear();
    }
    if (has_alipay_name()) {
      GOOGLE_DCHECK(!alipay_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alipay_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_channel_id()) {
      GOOGLE_DCHECK(!channel_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*channel_id_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 192u) {
    ::memset(&ret_, 0, reinterpret_cast<char*>(&guid_) -
      reinterpret_cast<char*>(&ret_) + sizeof(guid_));
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&no_bank_password_, 0, reinterpret_cast<char*>(&enable_transfer_) -
      reinterpret_cast<char*>(&no_bank_password_) + sizeof(enable_transfer_));
  }
  is_first_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuestAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuestAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuestAccount.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 no_bank_password = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_no_bank_password();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_bank_password_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_vip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 login_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_login_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &login_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 logout_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_logout_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logout_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuestAccount.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 is_guest = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_is_guest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_guest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuestAccount.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_account = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_account().data(), this->alipay_account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuestAccount.alipay_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string alipay_name = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alipay_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alipay_name().data(), this->alipay_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuestAccount.alipay_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 change_alipay_num = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_change_alipay_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &change_alipay_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 risk = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_risk();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &risk_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel_id().data(), this->channel_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuestAccount.channel_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_transfer = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has_enable_transfer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_transfer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 is_first = 17 [default = 2];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          set_has_is_first();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_first_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuestAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuestAccount)
  return false;
#undef DO_
}

void GuestAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuestAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ret = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 guid = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->guid(), output);
  }

  // optional string account = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestAccount.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account(), output);
  }

  // optional int32 no_bank_password = 4;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->no_bank_password(), output);
  }

  // optional int32 vip = 5;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->vip(), output);
  }

  // optional int32 login_time = 6;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->login_time(), output);
  }

  // optional int32 logout_time = 7;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->logout_time(), output);
  }

  // optional string nickname = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestAccount.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->nickname(), output);
  }

  // optional int32 is_guest = 9;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->is_guest(), output);
  }

  // optional string password = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestAccount.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->password(), output);
  }

  // optional string alipay_account = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account().data(), this->alipay_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestAccount.alipay_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->alipay_account(), output);
  }

  // optional string alipay_name = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name().data(), this->alipay_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestAccount.alipay_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->alipay_name(), output);
  }

  // optional int32 change_alipay_num = 13;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->change_alipay_num(), output);
  }

  // optional int32 risk = 14;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->risk(), output);
  }

  // optional string channel_id = 15;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_id().data(), this->channel_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestAccount.channel_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->channel_id(), output);
  }

  // optional bool enable_transfer = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->enable_transfer(), output);
  }

  // optional int32 is_first = 17 [default = 2];
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->is_first(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuestAccount)
}

::google::protobuf::uint8* GuestAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GuestAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ret = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 guid = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->guid(), target);
  }

  // optional string account = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestAccount.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account(), target);
  }

  // optional int32 no_bank_password = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->no_bank_password(), target);
  }

  // optional int32 vip = 5;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->vip(), target);
  }

  // optional int32 login_time = 6;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->login_time(), target);
  }

  // optional int32 logout_time = 7;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->logout_time(), target);
  }

  // optional string nickname = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestAccount.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->nickname(), target);
  }

  // optional int32 is_guest = 9;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->is_guest(), target);
  }

  // optional string password = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestAccount.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->password(), target);
  }

  // optional string alipay_account = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_account().data(), this->alipay_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestAccount.alipay_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->alipay_account(), target);
  }

  // optional string alipay_name = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alipay_name().data(), this->alipay_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestAccount.alipay_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->alipay_name(), target);
  }

  // optional int32 change_alipay_num = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->change_alipay_num(), target);
  }

  // optional int32 risk = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->risk(), target);
  }

  // optional string channel_id = 15;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_id().data(), this->channel_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestAccount.channel_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->channel_id(), target);
  }

  // optional bool enable_transfer = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->enable_transfer(), target);
  }

  // optional int32 is_first = 17 [default = 2];
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->is_first(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuestAccount)
  return target;
}

size_t GuestAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuestAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string account = 3;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string nickname = 8;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string password = 10;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string alipay_account = 11;
    if (has_alipay_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_account());
    }

    // optional string alipay_name = 12;
    if (has_alipay_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alipay_name());
    }

    // optional string channel_id = 15;
    if (has_channel_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel_id());
    }

    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

    // optional int32 guid = 2;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 no_bank_password = 4;
    if (has_no_bank_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_bank_password());
    }

    // optional int32 vip = 5;
    if (has_vip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip());
    }

    // optional int32 login_time = 6;
    if (has_login_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->login_time());
    }

    // optional int32 logout_time = 7;
    if (has_logout_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->logout_time());
    }

    // optional int32 is_guest = 9;
    if (has_is_guest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_guest());
    }

    // optional int32 change_alipay_num = 13;
    if (has_change_alipay_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->change_alipay_num());
    }

    // optional int32 risk = 14;
    if (has_risk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->risk());
    }

    // optional bool enable_transfer = 16;
    if (has_enable_transfer()) {
      total_size += 2 + 1;
    }

  }
  // optional int32 is_first = 17 [default = 2];
  if (has_is_first()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_first());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuestAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuestAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const GuestAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuestAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuestAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuestAccount)
    MergeFrom(*source);
  }
}

void GuestAccount::MergeFrom(const GuestAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuestAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_alipay_account();
      alipay_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_account_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_alipay_name();
      alipay_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alipay_name_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_channel_id();
      channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
    }
    if (cached_has_bits & 0x00000040u) {
      ret_ = from.ret_;
    }
    if (cached_has_bits & 0x00000080u) {
      guid_ = from.guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      no_bank_password_ = from.no_bank_password_;
    }
    if (cached_has_bits & 0x00000200u) {
      vip_ = from.vip_;
    }
    if (cached_has_bits & 0x00000400u) {
      login_time_ = from.login_time_;
    }
    if (cached_has_bits & 0x00000800u) {
      logout_time_ = from.logout_time_;
    }
    if (cached_has_bits & 0x00001000u) {
      is_guest_ = from.is_guest_;
    }
    if (cached_has_bits & 0x00002000u) {
      change_alipay_num_ = from.change_alipay_num_;
    }
    if (cached_has_bits & 0x00004000u) {
      risk_ = from.risk_;
    }
    if (cached_has_bits & 0x00008000u) {
      enable_transfer_ = from.enable_transfer_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_is_first(from.is_first());
  }
}

void GuestAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuestAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuestAccount::CopyFrom(const GuestAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuestAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuestAccount::IsInitialized() const {
  return true;
}

void GuestAccount::Swap(GuestAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuestAccount::InternalSwap(GuestAccount* other) {
  account_.Swap(&other->account_);
  nickname_.Swap(&other->nickname_);
  password_.Swap(&other->password_);
  alipay_account_.Swap(&other->alipay_account_);
  alipay_name_.Swap(&other->alipay_name_);
  channel_id_.Swap(&other->channel_id_);
  std::swap(ret_, other->ret_);
  std::swap(guid_, other->guid_);
  std::swap(no_bank_password_, other->no_bank_password_);
  std::swap(vip_, other->vip_);
  std::swap(login_time_, other->login_time_);
  std::swap(logout_time_, other->logout_time_);
  std::swap(is_guest_, other->is_guest_);
  std::swap(change_alipay_num_, other->change_alipay_num_);
  std::swap(risk_, other->risk_);
  std::swap(enable_transfer_, other->enable_transfer_);
  std::swap(is_first_, other->is_first_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuestAccount::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuestAccount

// optional int32 ret = 1;
bool GuestAccount::has_ret() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GuestAccount::set_has_ret() {
  _has_bits_[0] |= 0x00000040u;
}
void GuestAccount::clear_has_ret() {
  _has_bits_[0] &= ~0x00000040u;
}
void GuestAccount::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
::google::protobuf::int32 GuestAccount::ret() const {
  // @@protoc_insertion_point(field_get:GuestAccount.ret)
  return ret_;
}
void GuestAccount::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.ret)
}

// optional int32 guid = 2;
bool GuestAccount::has_guid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GuestAccount::set_has_guid() {
  _has_bits_[0] |= 0x00000080u;
}
void GuestAccount::clear_has_guid() {
  _has_bits_[0] &= ~0x00000080u;
}
void GuestAccount::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 GuestAccount::guid() const {
  // @@protoc_insertion_point(field_get:GuestAccount.guid)
  return guid_;
}
void GuestAccount::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.guid)
}

// optional string account = 3;
bool GuestAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuestAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void GuestAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuestAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& GuestAccount::account() const {
  // @@protoc_insertion_point(field_get:GuestAccount.account)
  return account_.GetNoArena();
}
void GuestAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestAccount.account)
}
#if LANG_CXX11
void GuestAccount::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestAccount.account)
}
#endif
void GuestAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestAccount.account)
}
void GuestAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestAccount.account)
}
::std::string* GuestAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:GuestAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuestAccount::release_account() {
  // @@protoc_insertion_point(field_release:GuestAccount.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuestAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:GuestAccount.account)
}

// optional int32 no_bank_password = 4;
bool GuestAccount::has_no_bank_password() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void GuestAccount::set_has_no_bank_password() {
  _has_bits_[0] |= 0x00000100u;
}
void GuestAccount::clear_has_no_bank_password() {
  _has_bits_[0] &= ~0x00000100u;
}
void GuestAccount::clear_no_bank_password() {
  no_bank_password_ = 0;
  clear_has_no_bank_password();
}
::google::protobuf::int32 GuestAccount::no_bank_password() const {
  // @@protoc_insertion_point(field_get:GuestAccount.no_bank_password)
  return no_bank_password_;
}
void GuestAccount::set_no_bank_password(::google::protobuf::int32 value) {
  set_has_no_bank_password();
  no_bank_password_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.no_bank_password)
}

// optional int32 vip = 5;
bool GuestAccount::has_vip() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void GuestAccount::set_has_vip() {
  _has_bits_[0] |= 0x00000200u;
}
void GuestAccount::clear_has_vip() {
  _has_bits_[0] &= ~0x00000200u;
}
void GuestAccount::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
::google::protobuf::int32 GuestAccount::vip() const {
  // @@protoc_insertion_point(field_get:GuestAccount.vip)
  return vip_;
}
void GuestAccount::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.vip)
}

// optional int32 login_time = 6;
bool GuestAccount::has_login_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void GuestAccount::set_has_login_time() {
  _has_bits_[0] |= 0x00000400u;
}
void GuestAccount::clear_has_login_time() {
  _has_bits_[0] &= ~0x00000400u;
}
void GuestAccount::clear_login_time() {
  login_time_ = 0;
  clear_has_login_time();
}
::google::protobuf::int32 GuestAccount::login_time() const {
  // @@protoc_insertion_point(field_get:GuestAccount.login_time)
  return login_time_;
}
void GuestAccount::set_login_time(::google::protobuf::int32 value) {
  set_has_login_time();
  login_time_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.login_time)
}

// optional int32 logout_time = 7;
bool GuestAccount::has_logout_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void GuestAccount::set_has_logout_time() {
  _has_bits_[0] |= 0x00000800u;
}
void GuestAccount::clear_has_logout_time() {
  _has_bits_[0] &= ~0x00000800u;
}
void GuestAccount::clear_logout_time() {
  logout_time_ = 0;
  clear_has_logout_time();
}
::google::protobuf::int32 GuestAccount::logout_time() const {
  // @@protoc_insertion_point(field_get:GuestAccount.logout_time)
  return logout_time_;
}
void GuestAccount::set_logout_time(::google::protobuf::int32 value) {
  set_has_logout_time();
  logout_time_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.logout_time)
}

// optional string nickname = 8;
bool GuestAccount::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuestAccount::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
void GuestAccount::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuestAccount::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& GuestAccount::nickname() const {
  // @@protoc_insertion_point(field_get:GuestAccount.nickname)
  return nickname_.GetNoArena();
}
void GuestAccount::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestAccount.nickname)
}
#if LANG_CXX11
void GuestAccount::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestAccount.nickname)
}
#endif
void GuestAccount::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestAccount.nickname)
}
void GuestAccount::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestAccount.nickname)
}
::std::string* GuestAccount::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:GuestAccount.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuestAccount::release_nickname() {
  // @@protoc_insertion_point(field_release:GuestAccount.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuestAccount::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:GuestAccount.nickname)
}

// optional int32 is_guest = 9;
bool GuestAccount::has_is_guest() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void GuestAccount::set_has_is_guest() {
  _has_bits_[0] |= 0x00001000u;
}
void GuestAccount::clear_has_is_guest() {
  _has_bits_[0] &= ~0x00001000u;
}
void GuestAccount::clear_is_guest() {
  is_guest_ = 0;
  clear_has_is_guest();
}
::google::protobuf::int32 GuestAccount::is_guest() const {
  // @@protoc_insertion_point(field_get:GuestAccount.is_guest)
  return is_guest_;
}
void GuestAccount::set_is_guest(::google::protobuf::int32 value) {
  set_has_is_guest();
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.is_guest)
}

// optional string password = 10;
bool GuestAccount::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GuestAccount::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
void GuestAccount::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
void GuestAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& GuestAccount::password() const {
  // @@protoc_insertion_point(field_get:GuestAccount.password)
  return password_.GetNoArena();
}
void GuestAccount::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestAccount.password)
}
#if LANG_CXX11
void GuestAccount::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestAccount.password)
}
#endif
void GuestAccount::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestAccount.password)
}
void GuestAccount::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestAccount.password)
}
::std::string* GuestAccount::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:GuestAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuestAccount::release_password() {
  // @@protoc_insertion_point(field_release:GuestAccount.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuestAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:GuestAccount.password)
}

// optional string alipay_account = 11;
bool GuestAccount::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GuestAccount::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000008u;
}
void GuestAccount::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000008u;
}
void GuestAccount::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
const ::std::string& GuestAccount::alipay_account() const {
  // @@protoc_insertion_point(field_get:GuestAccount.alipay_account)
  return alipay_account_.GetNoArena();
}
void GuestAccount::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestAccount.alipay_account)
}
#if LANG_CXX11
void GuestAccount::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestAccount.alipay_account)
}
#endif
void GuestAccount::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestAccount.alipay_account)
}
void GuestAccount::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestAccount.alipay_account)
}
::std::string* GuestAccount::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:GuestAccount.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuestAccount::release_alipay_account() {
  // @@protoc_insertion_point(field_release:GuestAccount.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuestAccount::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:GuestAccount.alipay_account)
}

// optional string alipay_name = 12;
bool GuestAccount::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GuestAccount::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000010u;
}
void GuestAccount::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000010u;
}
void GuestAccount::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
const ::std::string& GuestAccount::alipay_name() const {
  // @@protoc_insertion_point(field_get:GuestAccount.alipay_name)
  return alipay_name_.GetNoArena();
}
void GuestAccount::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestAccount.alipay_name)
}
#if LANG_CXX11
void GuestAccount::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestAccount.alipay_name)
}
#endif
void GuestAccount::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestAccount.alipay_name)
}
void GuestAccount::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestAccount.alipay_name)
}
::std::string* GuestAccount::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:GuestAccount.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuestAccount::release_alipay_name() {
  // @@protoc_insertion_point(field_release:GuestAccount.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuestAccount::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:GuestAccount.alipay_name)
}

// optional int32 change_alipay_num = 13;
bool GuestAccount::has_change_alipay_num() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void GuestAccount::set_has_change_alipay_num() {
  _has_bits_[0] |= 0x00002000u;
}
void GuestAccount::clear_has_change_alipay_num() {
  _has_bits_[0] &= ~0x00002000u;
}
void GuestAccount::clear_change_alipay_num() {
  change_alipay_num_ = 0;
  clear_has_change_alipay_num();
}
::google::protobuf::int32 GuestAccount::change_alipay_num() const {
  // @@protoc_insertion_point(field_get:GuestAccount.change_alipay_num)
  return change_alipay_num_;
}
void GuestAccount::set_change_alipay_num(::google::protobuf::int32 value) {
  set_has_change_alipay_num();
  change_alipay_num_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.change_alipay_num)
}

// optional int32 risk = 14;
bool GuestAccount::has_risk() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void GuestAccount::set_has_risk() {
  _has_bits_[0] |= 0x00004000u;
}
void GuestAccount::clear_has_risk() {
  _has_bits_[0] &= ~0x00004000u;
}
void GuestAccount::clear_risk() {
  risk_ = 0;
  clear_has_risk();
}
::google::protobuf::int32 GuestAccount::risk() const {
  // @@protoc_insertion_point(field_get:GuestAccount.risk)
  return risk_;
}
void GuestAccount::set_risk(::google::protobuf::int32 value) {
  set_has_risk();
  risk_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.risk)
}

// optional string channel_id = 15;
bool GuestAccount::has_channel_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GuestAccount::set_has_channel_id() {
  _has_bits_[0] |= 0x00000020u;
}
void GuestAccount::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void GuestAccount::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
const ::std::string& GuestAccount::channel_id() const {
  // @@protoc_insertion_point(field_get:GuestAccount.channel_id)
  return channel_id_.GetNoArena();
}
void GuestAccount::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestAccount.channel_id)
}
#if LANG_CXX11
void GuestAccount::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestAccount.channel_id)
}
#endif
void GuestAccount::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestAccount.channel_id)
}
void GuestAccount::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestAccount.channel_id)
}
::std::string* GuestAccount::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:GuestAccount.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuestAccount::release_channel_id() {
  // @@protoc_insertion_point(field_release:GuestAccount.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuestAccount::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:GuestAccount.channel_id)
}

// optional bool enable_transfer = 16;
bool GuestAccount::has_enable_transfer() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void GuestAccount::set_has_enable_transfer() {
  _has_bits_[0] |= 0x00008000u;
}
void GuestAccount::clear_has_enable_transfer() {
  _has_bits_[0] &= ~0x00008000u;
}
void GuestAccount::clear_enable_transfer() {
  enable_transfer_ = false;
  clear_has_enable_transfer();
}
bool GuestAccount::enable_transfer() const {
  // @@protoc_insertion_point(field_get:GuestAccount.enable_transfer)
  return enable_transfer_;
}
void GuestAccount::set_enable_transfer(bool value) {
  set_has_enable_transfer();
  enable_transfer_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.enable_transfer)
}

// optional int32 is_first = 17 [default = 2];
bool GuestAccount::has_is_first() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void GuestAccount::set_has_is_first() {
  _has_bits_[0] |= 0x00010000u;
}
void GuestAccount::clear_has_is_first() {
  _has_bits_[0] &= ~0x00010000u;
}
void GuestAccount::clear_is_first() {
  is_first_ = 2;
  clear_has_is_first();
}
::google::protobuf::int32 GuestAccount::is_first() const {
  // @@protoc_insertion_point(field_get:GuestAccount.is_first)
  return is_first_;
}
void GuestAccount::set_is_first(::google::protobuf::int32 value) {
  set_has_is_first();
  is_first_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.is_first)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
