// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: public_point21.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "public_point21.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class CS_Point21_BetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_Point21_Bet> {
} _CS_Point21_Bet_default_instance_;
class SC_Point21_BetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_Point21_Bet> {
} _SC_Point21_Bet_default_instance_;
class CS_Point21_GetCardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_Point21_GetCard> {
} _CS_Point21_GetCard_default_instance_;
class SC_Point21_GetCardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_Point21_GetCard> {
} _SC_Point21_GetCard_default_instance_;
class CS_Point21_StopDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_Point21_Stop> {
} _CS_Point21_Stop_default_instance_;
class SC_Point21_StopDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_Point21_Stop> {
} _SC_Point21_Stop_default_instance_;
class CS_Point21_CallDoubleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_Point21_CallDouble> {
} _CS_Point21_CallDouble_default_instance_;
class SC_Point21_CallDoubleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_Point21_CallDouble> {
} _SC_Point21_CallDouble_default_instance_;
class CS_Point21_SplitDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_Point21_Split> {
} _CS_Point21_Split_default_instance_;
class SC_Point21_SplitDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_Point21_Split> {
} _SC_Point21_Split_default_instance_;
class CS_Point21_InsuranceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_Point21_Insurance> {
} _CS_Point21_Insurance_default_instance_;
class SC_Point21_InsuranceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_Point21_Insurance> {
} _SC_Point21_Insurance_default_instance_;
class CS_Point21_SurrenderDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_Point21_Surrender> {
} _CS_Point21_Surrender_default_instance_;
class SC_Point21_SurrenderDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_Point21_Surrender> {
} _SC_Point21_Surrender_default_instance_;
class Point21_Cards_InfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Point21_Cards_Info> {
} _Point21_Cards_Info_default_instance_;
class Point21_Player_InfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Point21_Player_Info> {
} _Point21_Player_Info_default_instance_;
class Point21_Reconnect_DataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Point21_Reconnect_Data> {
} _Point21_Reconnect_Data_default_instance_;
class SC_Point21_EnterDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_Point21_EnterData> {
} _SC_Point21_EnterData_default_instance_;
class SC_Point21_NextTurnDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_Point21_NextTurn> {
} _SC_Point21_NextTurn_default_instance_;
class SC_Point21_Game_FinishDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_Point21_Game_Finish> {
} _SC_Point21_Game_Finish_default_instance_;
class SC_Point21_Desk_StateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_Point21_Desk_State> {
} _SC_Point21_Desk_State_default_instance_;

namespace protobuf_public_5fpoint21_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[21];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[18];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Point21_Bet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Point21_Bet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Point21_Bet, target_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Bet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Bet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Bet, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Bet, chair_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Point21_GetCard, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Point21_GetCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_GetCard, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_GetCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_GetCard, card_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_GetCard, chair_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Point21_Stop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Point21_Stop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Stop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Stop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Stop, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Stop, cur_index_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Point21_CallDouble, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Point21_CallDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_CallDouble, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_CallDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_CallDouble, card_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_CallDouble, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_CallDouble, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_CallDouble, cur_index_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Point21_Split, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Point21_Split, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Split, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Split, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Split, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Split, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Split, tiles_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Point21_Insurance, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Point21_Insurance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Insurance, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Insurance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Insurance, cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Insurance, chair_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Point21_Surrender, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_Point21_Surrender, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Surrender, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Surrender, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Surrender, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Surrender, surrender_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Cards_Info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Cards_Info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Cards_Info, cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Cards_Info, stata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Cards_Info, bet_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Player_Info, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Player_Info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Player_Info, pb_tiles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Player_Info, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Player_Info, nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Player_Info, icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Player_Info, gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Player_Info, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Player_Info, win_money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Player_Info, taxes_),
  ~0u,
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Reconnect_Data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Reconnect_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point21_Reconnect_Data, act_left_time_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_EnterData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_EnterData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_EnterData, pb_players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_EnterData, table_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_EnterData, zhuang_chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_EnterData, self_chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_EnterData, act_time_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_EnterData, is_reconnect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_EnterData, base_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_EnterData, max_call_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_EnterData, bet_base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_EnterData, pb_rec_data_),
  ~0u,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_NextTurn, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_NextTurn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_NextTurn, chair_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Game_Finish, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Game_Finish, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Game_Finish, pb_players_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Desk_State, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Desk_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_Point21_Desk_State, state_),
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 6, sizeof(CS_Point21_Bet)},
  { 7, 14, sizeof(SC_Point21_Bet)},
  { 16, 21, sizeof(CS_Point21_GetCard)},
  { 21, 28, sizeof(SC_Point21_GetCard)},
  { 30, 35, sizeof(CS_Point21_Stop)},
  { 35, 42, sizeof(SC_Point21_Stop)},
  { 44, 49, sizeof(CS_Point21_CallDouble)},
  { 49, 58, sizeof(SC_Point21_CallDouble)},
  { 62, 67, sizeof(CS_Point21_Split)},
  { 67, 75, sizeof(SC_Point21_Split)},
  { 78, 83, sizeof(CS_Point21_Insurance)},
  { 83, 90, sizeof(SC_Point21_Insurance)},
  { 92, 97, sizeof(CS_Point21_Surrender)},
  { 97, 104, sizeof(SC_Point21_Surrender)},
  { 106, 114, sizeof(Point21_Cards_Info)},
  { 117, 130, sizeof(Point21_Player_Info)},
  { 138, 144, sizeof(Point21_Reconnect_Data)},
  { 145, 160, sizeof(SC_Point21_EnterData)},
  { 170, 176, sizeof(SC_Point21_NextTurn)},
  { 177, 183, sizeof(SC_Point21_Game_Finish)},
  { 184, 190, sizeof(SC_Point21_Desk_State)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_Point21_Bet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_Point21_Bet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_Point21_GetCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_Point21_GetCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_Point21_Stop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_Point21_Stop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_Point21_CallDouble_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_Point21_CallDouble_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_Point21_Split_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_Point21_Split_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_Point21_Insurance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_Point21_Insurance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_Point21_Surrender_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_Point21_Surrender_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Point21_Cards_Info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Point21_Player_Info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Point21_Reconnect_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_Point21_EnterData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_Point21_NextTurn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_Point21_Game_Finish_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_Point21_Desk_State_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "public_point21.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

}  // namespace

void TableStruct::Shutdown() {
  _CS_Point21_Bet_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _SC_Point21_Bet_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CS_Point21_GetCard_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _SC_Point21_GetCard_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _CS_Point21_Stop_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _SC_Point21_Stop_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _CS_Point21_CallDouble_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _SC_Point21_CallDouble_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _CS_Point21_Split_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _SC_Point21_Split_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _CS_Point21_Insurance_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _SC_Point21_Insurance_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _CS_Point21_Surrender_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _SC_Point21_Surrender_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _Point21_Cards_Info_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _Point21_Player_Info_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _Point21_Reconnect_Data_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _SC_Point21_EnterData_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _SC_Point21_NextTurn_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _SC_Point21_Game_Finish_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _SC_Point21_Desk_State_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CS_Point21_Bet_default_instance_.DefaultConstruct();
  _SC_Point21_Bet_default_instance_.DefaultConstruct();
  _CS_Point21_GetCard_default_instance_.DefaultConstruct();
  _SC_Point21_GetCard_default_instance_.DefaultConstruct();
  _CS_Point21_Stop_default_instance_.DefaultConstruct();
  _SC_Point21_Stop_default_instance_.DefaultConstruct();
  _CS_Point21_CallDouble_default_instance_.DefaultConstruct();
  _SC_Point21_CallDouble_default_instance_.DefaultConstruct();
  _CS_Point21_Split_default_instance_.DefaultConstruct();
  _SC_Point21_Split_default_instance_.DefaultConstruct();
  _CS_Point21_Insurance_default_instance_.DefaultConstruct();
  _SC_Point21_Insurance_default_instance_.DefaultConstruct();
  _CS_Point21_Surrender_default_instance_.DefaultConstruct();
  _SC_Point21_Surrender_default_instance_.DefaultConstruct();
  _Point21_Cards_Info_default_instance_.DefaultConstruct();
  _Point21_Player_Info_default_instance_.DefaultConstruct();
  _Point21_Reconnect_Data_default_instance_.DefaultConstruct();
  _SC_Point21_EnterData_default_instance_.DefaultConstruct();
  _SC_Point21_NextTurn_default_instance_.DefaultConstruct();
  _SC_Point21_Game_Finish_default_instance_.DefaultConstruct();
  _SC_Point21_Desk_State_default_instance_.DefaultConstruct();
  _SC_Point21_EnterData_default_instance_.get_mutable()->pb_rec_data_ = const_cast< ::Point21_Reconnect_Data*>(
      ::Point21_Reconnect_Data::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\024public_point21.proto\"3\n\016CS_Point21_Bet"
      "\022\016\n\006target\030\001 \001(\005\"\021\n\005MsgID\022\010\n\002ID\020\370\322\001\"E\n\016S"
      "C_Point21_Bet\022\016\n\006target\030\001 \001(\005\022\020\n\010chair_i"
      "d\030\002 \001(\005\"\021\n\005MsgID\022\010\n\002ID\020\371\322\001\"\'\n\022CS_Point21"
      "_GetCard\"\021\n\005MsgID\022\010\n\002ID\020\372\322\001\"G\n\022SC_Point2"
      "1_GetCard\022\014\n\004card\030\001 \001(\005\022\020\n\010chair_id\030\002 \001("
      "\005\"\021\n\005MsgID\022\010\n\002ID\020\373\322\001\"$\n\017CS_Point21_Stop\""
      "\021\n\005MsgID\022\010\n\002ID\020\374\322\001\"I\n\017SC_Point21_Stop\022\020\n"
      "\010chair_id\030\001 \001(\005\022\021\n\tcur_index\030\002 \001(\005\"\021\n\005Ms"
      "gID\022\010\n\002ID\020\375\322\001\"*\n\025CS_Point21_CallDouble\"\021"
      "\n\005MsgID\022\010\n\002ID\020\376\322\001\"m\n\025SC_Point21_CallDoub"
      "le\022\014\n\004card\030\001 \001(\005\022\020\n\010chair_id\030\002 \001(\005\022\016\n\006ta"
      "rget\030\003 \001(\005\022\021\n\tcur_index\030\004 \001(\005\"\021\n\005MsgID\022\010"
      "\n\002ID\020\377\322\001\"%\n\020CS_Point21_Split\"\021\n\005MsgID\022\010\n"
      "\002ID\020\200\323\001\"k\n\020SC_Point21_Split\022\016\n\006target\030\001 "
      "\001(\005\022\020\n\010chair_id\030\002 \001(\005\022\"\n\005tiles\030\003 \003(\0132\023.P"
      "oint21_Cards_Info\"\021\n\005MsgID\022\010\n\002ID\020\201\323\001\")\n\024"
      "CS_Point21_Insurance\"\021\n\005MsgID\022\010\n\002ID\020\202\323\001\""
      "I\n\024SC_Point21_Insurance\022\014\n\004cost\030\001 \001(\005\022\020\n"
      "\010chair_id\030\002 \001(\005\"\021\n\005MsgID\022\010\n\002ID\020\203\323\001\")\n\024CS"
      "_Point21_Surrender\"\021\n\005MsgID\022\010\n\002ID\020\204\323\001\"N\n"
      "\024SC_Point21_Surrender\022\020\n\010chair_id\030\001 \001(\005\022"
      "\021\n\tsurrender\030\002 \001(\010\"\021\n\005MsgID\022\010\n\002ID\020\205\323\001\"\?\n"
      "\022Point21_Cards_Info\022\r\n\005cards\030\001 \003(\005\022\r\n\005st"
      "ata\030\002 \001(\005\022\013\n\003bet\030\003 \001(\005\"\250\001\n\023Point21_Playe"
      "r_Info\022%\n\010pb_tiles\030\001 \003(\0132\023.Point21_Cards"
      "_Info\022\020\n\010chair_id\030\002 \001(\005\022\014\n\004nick\030\003 \001(\t\022\014\n"
      "\004icon\030\004 \001(\005\022\014\n\004gold\030\005 \001(\003\022\014\n\004guid\030\006 \001(\005\022"
      "\021\n\twin_money\030\007 \001(\005\022\r\n\005taxes\030\010 \001(\005\"/\n\026Poi"
      "nt21_Reconnect_Data\022\025\n\ract_left_time\030\001 \001"
      "(\005\"\254\002\n\024SC_Point21_EnterData\022(\n\npb_player"
      "s\030\001 \003(\0132\024.Point21_Player_Info\022\023\n\013table_s"
      "tate\030\002 \001(\005\022\027\n\017zhuang_chair_id\030\003 \001(\005\022\025\n\rs"
      "elf_chair_id\030\004 \001(\005\022\026\n\016act_time_limit\030\005 \001"
      "(\005\022\024\n\014is_reconnect\030\006 \001(\010\022\022\n\nbase_score\030\007"
      " \001(\005\022\020\n\010max_call\030\010 \001(\005\022\020\n\010bet_base\030\t \003(\005"
      "\022,\n\013pb_rec_data\030\n \001(\0132\027.Point21_Reconnec"
      "t_Data\"\021\n\005MsgID\022\010\n\002ID\020\206\323\001\":\n\023SC_Point21_"
      "NextTurn\022\020\n\010chair_id\030\001 \001(\005\"\021\n\005MsgID\022\010\n\002I"
      "D\020\207\323\001\"U\n\026SC_Point21_Game_Finish\022(\n\npb_pl"
      "ayers\030\001 \003(\0132\024.Point21_Player_Info\"\021\n\005Msg"
      "ID\022\010\n\002ID\020\210\323\001\"9\n\025SC_Point21_Desk_State\022\r\n"
      "\005state\030\001 \001(\005\"\021\n\005MsgID\022\010\n\002ID\020\211\323\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1711);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "public_point21.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_public_5fpoint21_2eproto

const ::google::protobuf::EnumDescriptor* CS_Point21_Bet_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[0];
}
bool CS_Point21_Bet_MsgID_IsValid(int value) {
  switch (value) {
    case 27000:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_Point21_Bet_MsgID CS_Point21_Bet::ID;
const CS_Point21_Bet_MsgID CS_Point21_Bet::MsgID_MIN;
const CS_Point21_Bet_MsgID CS_Point21_Bet::MsgID_MAX;
const int CS_Point21_Bet::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_Point21_Bet_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[1];
}
bool SC_Point21_Bet_MsgID_IsValid(int value) {
  switch (value) {
    case 27001:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_Point21_Bet_MsgID SC_Point21_Bet::ID;
const SC_Point21_Bet_MsgID SC_Point21_Bet::MsgID_MIN;
const SC_Point21_Bet_MsgID SC_Point21_Bet::MsgID_MAX;
const int SC_Point21_Bet::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_Point21_GetCard_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[2];
}
bool CS_Point21_GetCard_MsgID_IsValid(int value) {
  switch (value) {
    case 27002:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_Point21_GetCard_MsgID CS_Point21_GetCard::ID;
const CS_Point21_GetCard_MsgID CS_Point21_GetCard::MsgID_MIN;
const CS_Point21_GetCard_MsgID CS_Point21_GetCard::MsgID_MAX;
const int CS_Point21_GetCard::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_Point21_GetCard_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[3];
}
bool SC_Point21_GetCard_MsgID_IsValid(int value) {
  switch (value) {
    case 27003:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_Point21_GetCard_MsgID SC_Point21_GetCard::ID;
const SC_Point21_GetCard_MsgID SC_Point21_GetCard::MsgID_MIN;
const SC_Point21_GetCard_MsgID SC_Point21_GetCard::MsgID_MAX;
const int SC_Point21_GetCard::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_Point21_Stop_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[4];
}
bool CS_Point21_Stop_MsgID_IsValid(int value) {
  switch (value) {
    case 27004:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_Point21_Stop_MsgID CS_Point21_Stop::ID;
const CS_Point21_Stop_MsgID CS_Point21_Stop::MsgID_MIN;
const CS_Point21_Stop_MsgID CS_Point21_Stop::MsgID_MAX;
const int CS_Point21_Stop::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_Point21_Stop_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[5];
}
bool SC_Point21_Stop_MsgID_IsValid(int value) {
  switch (value) {
    case 27005:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_Point21_Stop_MsgID SC_Point21_Stop::ID;
const SC_Point21_Stop_MsgID SC_Point21_Stop::MsgID_MIN;
const SC_Point21_Stop_MsgID SC_Point21_Stop::MsgID_MAX;
const int SC_Point21_Stop::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_Point21_CallDouble_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[6];
}
bool CS_Point21_CallDouble_MsgID_IsValid(int value) {
  switch (value) {
    case 27006:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_Point21_CallDouble_MsgID CS_Point21_CallDouble::ID;
const CS_Point21_CallDouble_MsgID CS_Point21_CallDouble::MsgID_MIN;
const CS_Point21_CallDouble_MsgID CS_Point21_CallDouble::MsgID_MAX;
const int CS_Point21_CallDouble::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_Point21_CallDouble_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[7];
}
bool SC_Point21_CallDouble_MsgID_IsValid(int value) {
  switch (value) {
    case 27007:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_Point21_CallDouble_MsgID SC_Point21_CallDouble::ID;
const SC_Point21_CallDouble_MsgID SC_Point21_CallDouble::MsgID_MIN;
const SC_Point21_CallDouble_MsgID SC_Point21_CallDouble::MsgID_MAX;
const int SC_Point21_CallDouble::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_Point21_Split_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[8];
}
bool CS_Point21_Split_MsgID_IsValid(int value) {
  switch (value) {
    case 27008:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_Point21_Split_MsgID CS_Point21_Split::ID;
const CS_Point21_Split_MsgID CS_Point21_Split::MsgID_MIN;
const CS_Point21_Split_MsgID CS_Point21_Split::MsgID_MAX;
const int CS_Point21_Split::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_Point21_Split_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[9];
}
bool SC_Point21_Split_MsgID_IsValid(int value) {
  switch (value) {
    case 27009:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_Point21_Split_MsgID SC_Point21_Split::ID;
const SC_Point21_Split_MsgID SC_Point21_Split::MsgID_MIN;
const SC_Point21_Split_MsgID SC_Point21_Split::MsgID_MAX;
const int SC_Point21_Split::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_Point21_Insurance_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[10];
}
bool CS_Point21_Insurance_MsgID_IsValid(int value) {
  switch (value) {
    case 27010:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_Point21_Insurance_MsgID CS_Point21_Insurance::ID;
const CS_Point21_Insurance_MsgID CS_Point21_Insurance::MsgID_MIN;
const CS_Point21_Insurance_MsgID CS_Point21_Insurance::MsgID_MAX;
const int CS_Point21_Insurance::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_Point21_Insurance_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[11];
}
bool SC_Point21_Insurance_MsgID_IsValid(int value) {
  switch (value) {
    case 27011:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_Point21_Insurance_MsgID SC_Point21_Insurance::ID;
const SC_Point21_Insurance_MsgID SC_Point21_Insurance::MsgID_MIN;
const SC_Point21_Insurance_MsgID SC_Point21_Insurance::MsgID_MAX;
const int SC_Point21_Insurance::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_Point21_Surrender_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[12];
}
bool CS_Point21_Surrender_MsgID_IsValid(int value) {
  switch (value) {
    case 27012:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_Point21_Surrender_MsgID CS_Point21_Surrender::ID;
const CS_Point21_Surrender_MsgID CS_Point21_Surrender::MsgID_MIN;
const CS_Point21_Surrender_MsgID CS_Point21_Surrender::MsgID_MAX;
const int CS_Point21_Surrender::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_Point21_Surrender_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[13];
}
bool SC_Point21_Surrender_MsgID_IsValid(int value) {
  switch (value) {
    case 27013:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_Point21_Surrender_MsgID SC_Point21_Surrender::ID;
const SC_Point21_Surrender_MsgID SC_Point21_Surrender::MsgID_MIN;
const SC_Point21_Surrender_MsgID SC_Point21_Surrender::MsgID_MAX;
const int SC_Point21_Surrender::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_Point21_EnterData_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[14];
}
bool SC_Point21_EnterData_MsgID_IsValid(int value) {
  switch (value) {
    case 27014:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_Point21_EnterData_MsgID SC_Point21_EnterData::ID;
const SC_Point21_EnterData_MsgID SC_Point21_EnterData::MsgID_MIN;
const SC_Point21_EnterData_MsgID SC_Point21_EnterData::MsgID_MAX;
const int SC_Point21_EnterData::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_Point21_NextTurn_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[15];
}
bool SC_Point21_NextTurn_MsgID_IsValid(int value) {
  switch (value) {
    case 27015:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_Point21_NextTurn_MsgID SC_Point21_NextTurn::ID;
const SC_Point21_NextTurn_MsgID SC_Point21_NextTurn::MsgID_MIN;
const SC_Point21_NextTurn_MsgID SC_Point21_NextTurn::MsgID_MAX;
const int SC_Point21_NextTurn::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_Point21_Game_Finish_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[16];
}
bool SC_Point21_Game_Finish_MsgID_IsValid(int value) {
  switch (value) {
    case 27016:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_Point21_Game_Finish_MsgID SC_Point21_Game_Finish::ID;
const SC_Point21_Game_Finish_MsgID SC_Point21_Game_Finish::MsgID_MIN;
const SC_Point21_Game_Finish_MsgID SC_Point21_Game_Finish::MsgID_MAX;
const int SC_Point21_Game_Finish::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_Point21_Desk_State_MsgID_descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_enum_descriptors[17];
}
bool SC_Point21_Desk_State_MsgID_IsValid(int value) {
  switch (value) {
    case 27017:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_Point21_Desk_State_MsgID SC_Point21_Desk_State::ID;
const SC_Point21_Desk_State_MsgID SC_Point21_Desk_State::MsgID_MIN;
const SC_Point21_Desk_State_MsgID SC_Point21_Desk_State::MsgID_MAX;
const int SC_Point21_Desk_State::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_Point21_Bet::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_Point21_Bet::CS_Point21_Bet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_Point21_Bet)
}
CS_Point21_Bet::CS_Point21_Bet(const CS_Point21_Bet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_ = from.target_;
  // @@protoc_insertion_point(copy_constructor:CS_Point21_Bet)
}

void CS_Point21_Bet::SharedCtor() {
  _cached_size_ = 0;
  target_ = 0;
}

CS_Point21_Bet::~CS_Point21_Bet() {
  // @@protoc_insertion_point(destructor:CS_Point21_Bet)
  SharedDtor();
}

void CS_Point21_Bet::SharedDtor() {
}

void CS_Point21_Bet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_Point21_Bet::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_Point21_Bet& CS_Point21_Bet::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_Point21_Bet* CS_Point21_Bet::New(::google::protobuf::Arena* arena) const {
  CS_Point21_Bet* n = new CS_Point21_Bet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_Point21_Bet::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_Point21_Bet)
  target_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_Point21_Bet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_Point21_Bet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_Point21_Bet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_Point21_Bet)
  return false;
#undef DO_
}

void CS_Point21_Bet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_Point21_Bet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 target = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->target(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_Point21_Bet)
}

::google::protobuf::uint8* CS_Point21_Bet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_Point21_Bet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 target = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->target(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_Point21_Bet)
  return target;
}

size_t CS_Point21_Bet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_Point21_Bet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 target = 1;
  if (has_target()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_Point21_Bet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_Point21_Bet)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_Point21_Bet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_Point21_Bet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_Point21_Bet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_Point21_Bet)
    MergeFrom(*source);
  }
}

void CS_Point21_Bet::MergeFrom(const CS_Point21_Bet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_Point21_Bet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target()) {
    set_target(from.target());
  }
}

void CS_Point21_Bet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_Point21_Bet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_Point21_Bet::CopyFrom(const CS_Point21_Bet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_Point21_Bet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_Point21_Bet::IsInitialized() const {
  return true;
}

void CS_Point21_Bet::Swap(CS_Point21_Bet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_Point21_Bet::InternalSwap(CS_Point21_Bet* other) {
  std::swap(target_, other->target_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_Point21_Bet::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_Point21_Bet

// optional int32 target = 1;
bool CS_Point21_Bet::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_Point21_Bet::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_Point21_Bet::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_Point21_Bet::clear_target() {
  target_ = 0;
  clear_has_target();
}
::google::protobuf::int32 CS_Point21_Bet::target() const {
  // @@protoc_insertion_point(field_get:CS_Point21_Bet.target)
  return target_;
}
void CS_Point21_Bet::set_target(::google::protobuf::int32 value) {
  set_has_target();
  target_ = value;
  // @@protoc_insertion_point(field_set:CS_Point21_Bet.target)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_Point21_Bet::kTargetFieldNumber;
const int SC_Point21_Bet::kChairIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_Point21_Bet::SC_Point21_Bet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_Point21_Bet)
}
SC_Point21_Bet::SC_Point21_Bet(const SC_Point21_Bet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    reinterpret_cast<char*>(&chair_id_) -
    reinterpret_cast<char*>(&target_) + sizeof(chair_id_));
  // @@protoc_insertion_point(copy_constructor:SC_Point21_Bet)
}

void SC_Point21_Bet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&target_, 0, reinterpret_cast<char*>(&chair_id_) -
    reinterpret_cast<char*>(&target_) + sizeof(chair_id_));
}

SC_Point21_Bet::~SC_Point21_Bet() {
  // @@protoc_insertion_point(destructor:SC_Point21_Bet)
  SharedDtor();
}

void SC_Point21_Bet::SharedDtor() {
}

void SC_Point21_Bet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_Point21_Bet::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_Point21_Bet& SC_Point21_Bet::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_Point21_Bet* SC_Point21_Bet::New(::google::protobuf::Arena* arena) const {
  SC_Point21_Bet* n = new SC_Point21_Bet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_Point21_Bet::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_Point21_Bet)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&target_, 0, reinterpret_cast<char*>(&chair_id_) -
      reinterpret_cast<char*>(&target_) + sizeof(chair_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_Point21_Bet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_Point21_Bet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_Point21_Bet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_Point21_Bet)
  return false;
#undef DO_
}

void SC_Point21_Bet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_Point21_Bet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 target = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->target(), output);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chair_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_Point21_Bet)
}

::google::protobuf::uint8* SC_Point21_Bet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_Point21_Bet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 target = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->target(), target);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chair_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_Point21_Bet)
  return target;
}

size_t SC_Point21_Bet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_Point21_Bet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 target = 1;
    if (has_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target());
    }

    // optional int32 chair_id = 2;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_Point21_Bet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_Point21_Bet)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_Point21_Bet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_Point21_Bet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_Point21_Bet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_Point21_Bet)
    MergeFrom(*source);
  }
}

void SC_Point21_Bet::MergeFrom(const SC_Point21_Bet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_Point21_Bet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      target_ = from.target_;
    }
    if (cached_has_bits & 0x00000002u) {
      chair_id_ = from.chair_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_Point21_Bet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_Point21_Bet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_Point21_Bet::CopyFrom(const SC_Point21_Bet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_Point21_Bet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_Point21_Bet::IsInitialized() const {
  return true;
}

void SC_Point21_Bet::Swap(SC_Point21_Bet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_Point21_Bet::InternalSwap(SC_Point21_Bet* other) {
  std::swap(target_, other->target_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_Point21_Bet::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_Point21_Bet

// optional int32 target = 1;
bool SC_Point21_Bet::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_Point21_Bet::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_Point21_Bet::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_Point21_Bet::clear_target() {
  target_ = 0;
  clear_has_target();
}
::google::protobuf::int32 SC_Point21_Bet::target() const {
  // @@protoc_insertion_point(field_get:SC_Point21_Bet.target)
  return target_;
}
void SC_Point21_Bet::set_target(::google::protobuf::int32 value) {
  set_has_target();
  target_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_Bet.target)
}

// optional int32 chair_id = 2;
bool SC_Point21_Bet::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_Point21_Bet::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_Point21_Bet::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_Point21_Bet::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_Point21_Bet::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_Point21_Bet.chair_id)
  return chair_id_;
}
void SC_Point21_Bet::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_Bet.chair_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_Point21_GetCard::CS_Point21_GetCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_Point21_GetCard)
}
CS_Point21_GetCard::CS_Point21_GetCard(const CS_Point21_GetCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_Point21_GetCard)
}

void CS_Point21_GetCard::SharedCtor() {
  _cached_size_ = 0;
}

CS_Point21_GetCard::~CS_Point21_GetCard() {
  // @@protoc_insertion_point(destructor:CS_Point21_GetCard)
  SharedDtor();
}

void CS_Point21_GetCard::SharedDtor() {
}

void CS_Point21_GetCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_Point21_GetCard::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_Point21_GetCard& CS_Point21_GetCard::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_Point21_GetCard* CS_Point21_GetCard::New(::google::protobuf::Arena* arena) const {
  CS_Point21_GetCard* n = new CS_Point21_GetCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_Point21_GetCard::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_Point21_GetCard)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_Point21_GetCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_Point21_GetCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_Point21_GetCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_Point21_GetCard)
  return false;
#undef DO_
}

void CS_Point21_GetCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_Point21_GetCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_Point21_GetCard)
}

::google::protobuf::uint8* CS_Point21_GetCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_Point21_GetCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_Point21_GetCard)
  return target;
}

size_t CS_Point21_GetCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_Point21_GetCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_Point21_GetCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_Point21_GetCard)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_Point21_GetCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_Point21_GetCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_Point21_GetCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_Point21_GetCard)
    MergeFrom(*source);
  }
}

void CS_Point21_GetCard::MergeFrom(const CS_Point21_GetCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_Point21_GetCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_Point21_GetCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_Point21_GetCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_Point21_GetCard::CopyFrom(const CS_Point21_GetCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_Point21_GetCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_Point21_GetCard::IsInitialized() const {
  return true;
}

void CS_Point21_GetCard::Swap(CS_Point21_GetCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_Point21_GetCard::InternalSwap(CS_Point21_GetCard* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_Point21_GetCard::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_Point21_GetCard

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_Point21_GetCard::kCardFieldNumber;
const int SC_Point21_GetCard::kChairIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_Point21_GetCard::SC_Point21_GetCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_Point21_GetCard)
}
SC_Point21_GetCard::SC_Point21_GetCard(const SC_Point21_GetCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&card_, &from.card_,
    reinterpret_cast<char*>(&chair_id_) -
    reinterpret_cast<char*>(&card_) + sizeof(chair_id_));
  // @@protoc_insertion_point(copy_constructor:SC_Point21_GetCard)
}

void SC_Point21_GetCard::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&card_, 0, reinterpret_cast<char*>(&chair_id_) -
    reinterpret_cast<char*>(&card_) + sizeof(chair_id_));
}

SC_Point21_GetCard::~SC_Point21_GetCard() {
  // @@protoc_insertion_point(destructor:SC_Point21_GetCard)
  SharedDtor();
}

void SC_Point21_GetCard::SharedDtor() {
}

void SC_Point21_GetCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_Point21_GetCard::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_Point21_GetCard& SC_Point21_GetCard::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_Point21_GetCard* SC_Point21_GetCard::New(::google::protobuf::Arena* arena) const {
  SC_Point21_GetCard* n = new SC_Point21_GetCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_Point21_GetCard::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_Point21_GetCard)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&card_, 0, reinterpret_cast<char*>(&chair_id_) -
      reinterpret_cast<char*>(&card_) + sizeof(chair_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_Point21_GetCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_Point21_GetCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 card = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_card();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &card_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_Point21_GetCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_Point21_GetCard)
  return false;
#undef DO_
}

void SC_Point21_GetCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_Point21_GetCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 card = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->card(), output);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chair_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_Point21_GetCard)
}

::google::protobuf::uint8* SC_Point21_GetCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_Point21_GetCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 card = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->card(), target);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chair_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_Point21_GetCard)
  return target;
}

size_t SC_Point21_GetCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_Point21_GetCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 card = 1;
    if (has_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->card());
    }

    // optional int32 chair_id = 2;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_Point21_GetCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_Point21_GetCard)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_Point21_GetCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_Point21_GetCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_Point21_GetCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_Point21_GetCard)
    MergeFrom(*source);
  }
}

void SC_Point21_GetCard::MergeFrom(const SC_Point21_GetCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_Point21_GetCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      card_ = from.card_;
    }
    if (cached_has_bits & 0x00000002u) {
      chair_id_ = from.chair_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_Point21_GetCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_Point21_GetCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_Point21_GetCard::CopyFrom(const SC_Point21_GetCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_Point21_GetCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_Point21_GetCard::IsInitialized() const {
  return true;
}

void SC_Point21_GetCard::Swap(SC_Point21_GetCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_Point21_GetCard::InternalSwap(SC_Point21_GetCard* other) {
  std::swap(card_, other->card_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_Point21_GetCard::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_Point21_GetCard

// optional int32 card = 1;
bool SC_Point21_GetCard::has_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_Point21_GetCard::set_has_card() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_Point21_GetCard::clear_has_card() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_Point21_GetCard::clear_card() {
  card_ = 0;
  clear_has_card();
}
::google::protobuf::int32 SC_Point21_GetCard::card() const {
  // @@protoc_insertion_point(field_get:SC_Point21_GetCard.card)
  return card_;
}
void SC_Point21_GetCard::set_card(::google::protobuf::int32 value) {
  set_has_card();
  card_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_GetCard.card)
}

// optional int32 chair_id = 2;
bool SC_Point21_GetCard::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_Point21_GetCard::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_Point21_GetCard::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_Point21_GetCard::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_Point21_GetCard::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_Point21_GetCard.chair_id)
  return chair_id_;
}
void SC_Point21_GetCard::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_GetCard.chair_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_Point21_Stop::CS_Point21_Stop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_Point21_Stop)
}
CS_Point21_Stop::CS_Point21_Stop(const CS_Point21_Stop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_Point21_Stop)
}

void CS_Point21_Stop::SharedCtor() {
  _cached_size_ = 0;
}

CS_Point21_Stop::~CS_Point21_Stop() {
  // @@protoc_insertion_point(destructor:CS_Point21_Stop)
  SharedDtor();
}

void CS_Point21_Stop::SharedDtor() {
}

void CS_Point21_Stop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_Point21_Stop::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_Point21_Stop& CS_Point21_Stop::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_Point21_Stop* CS_Point21_Stop::New(::google::protobuf::Arena* arena) const {
  CS_Point21_Stop* n = new CS_Point21_Stop;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_Point21_Stop::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_Point21_Stop)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_Point21_Stop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_Point21_Stop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_Point21_Stop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_Point21_Stop)
  return false;
#undef DO_
}

void CS_Point21_Stop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_Point21_Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_Point21_Stop)
}

::google::protobuf::uint8* CS_Point21_Stop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_Point21_Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_Point21_Stop)
  return target;
}

size_t CS_Point21_Stop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_Point21_Stop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_Point21_Stop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_Point21_Stop)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_Point21_Stop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_Point21_Stop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_Point21_Stop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_Point21_Stop)
    MergeFrom(*source);
  }
}

void CS_Point21_Stop::MergeFrom(const CS_Point21_Stop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_Point21_Stop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_Point21_Stop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_Point21_Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_Point21_Stop::CopyFrom(const CS_Point21_Stop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_Point21_Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_Point21_Stop::IsInitialized() const {
  return true;
}

void CS_Point21_Stop::Swap(CS_Point21_Stop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_Point21_Stop::InternalSwap(CS_Point21_Stop* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_Point21_Stop::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_Point21_Stop

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_Point21_Stop::kChairIdFieldNumber;
const int SC_Point21_Stop::kCurIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_Point21_Stop::SC_Point21_Stop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_Point21_Stop)
}
SC_Point21_Stop::SC_Point21_Stop(const SC_Point21_Stop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&chair_id_, &from.chair_id_,
    reinterpret_cast<char*>(&cur_index_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(cur_index_));
  // @@protoc_insertion_point(copy_constructor:SC_Point21_Stop)
}

void SC_Point21_Stop::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&chair_id_, 0, reinterpret_cast<char*>(&cur_index_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(cur_index_));
}

SC_Point21_Stop::~SC_Point21_Stop() {
  // @@protoc_insertion_point(destructor:SC_Point21_Stop)
  SharedDtor();
}

void SC_Point21_Stop::SharedDtor() {
}

void SC_Point21_Stop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_Point21_Stop::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_Point21_Stop& SC_Point21_Stop::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_Point21_Stop* SC_Point21_Stop::New(::google::protobuf::Arena* arena) const {
  SC_Point21_Stop* n = new SC_Point21_Stop;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_Point21_Stop::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_Point21_Stop)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&chair_id_, 0, reinterpret_cast<char*>(&cur_index_) -
      reinterpret_cast<char*>(&chair_id_) + sizeof(cur_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_Point21_Stop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_Point21_Stop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cur_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_cur_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_Point21_Stop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_Point21_Stop)
  return false;
#undef DO_
}

void SC_Point21_Stop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_Point21_Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chair_id(), output);
  }

  // optional int32 cur_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cur_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_Point21_Stop)
}

::google::protobuf::uint8* SC_Point21_Stop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_Point21_Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chair_id(), target);
  }

  // optional int32 cur_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cur_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_Point21_Stop)
  return target;
}

size_t SC_Point21_Stop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_Point21_Stop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 chair_id = 1;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 cur_index = 2;
    if (has_cur_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_Point21_Stop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_Point21_Stop)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_Point21_Stop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_Point21_Stop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_Point21_Stop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_Point21_Stop)
    MergeFrom(*source);
  }
}

void SC_Point21_Stop::MergeFrom(const SC_Point21_Stop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_Point21_Stop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      cur_index_ = from.cur_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_Point21_Stop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_Point21_Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_Point21_Stop::CopyFrom(const SC_Point21_Stop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_Point21_Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_Point21_Stop::IsInitialized() const {
  return true;
}

void SC_Point21_Stop::Swap(SC_Point21_Stop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_Point21_Stop::InternalSwap(SC_Point21_Stop* other) {
  std::swap(chair_id_, other->chair_id_);
  std::swap(cur_index_, other->cur_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_Point21_Stop::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_Point21_Stop

// optional int32 chair_id = 1;
bool SC_Point21_Stop::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_Point21_Stop::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_Point21_Stop::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_Point21_Stop::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_Point21_Stop::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_Point21_Stop.chair_id)
  return chair_id_;
}
void SC_Point21_Stop::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_Stop.chair_id)
}

// optional int32 cur_index = 2;
bool SC_Point21_Stop::has_cur_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_Point21_Stop::set_has_cur_index() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_Point21_Stop::clear_has_cur_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_Point21_Stop::clear_cur_index() {
  cur_index_ = 0;
  clear_has_cur_index();
}
::google::protobuf::int32 SC_Point21_Stop::cur_index() const {
  // @@protoc_insertion_point(field_get:SC_Point21_Stop.cur_index)
  return cur_index_;
}
void SC_Point21_Stop::set_cur_index(::google::protobuf::int32 value) {
  set_has_cur_index();
  cur_index_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_Stop.cur_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_Point21_CallDouble::CS_Point21_CallDouble()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_Point21_CallDouble)
}
CS_Point21_CallDouble::CS_Point21_CallDouble(const CS_Point21_CallDouble& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_Point21_CallDouble)
}

void CS_Point21_CallDouble::SharedCtor() {
  _cached_size_ = 0;
}

CS_Point21_CallDouble::~CS_Point21_CallDouble() {
  // @@protoc_insertion_point(destructor:CS_Point21_CallDouble)
  SharedDtor();
}

void CS_Point21_CallDouble::SharedDtor() {
}

void CS_Point21_CallDouble::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_Point21_CallDouble::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_Point21_CallDouble& CS_Point21_CallDouble::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_Point21_CallDouble* CS_Point21_CallDouble::New(::google::protobuf::Arena* arena) const {
  CS_Point21_CallDouble* n = new CS_Point21_CallDouble;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_Point21_CallDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_Point21_CallDouble)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_Point21_CallDouble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_Point21_CallDouble)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_Point21_CallDouble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_Point21_CallDouble)
  return false;
#undef DO_
}

void CS_Point21_CallDouble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_Point21_CallDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_Point21_CallDouble)
}

::google::protobuf::uint8* CS_Point21_CallDouble::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_Point21_CallDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_Point21_CallDouble)
  return target;
}

size_t CS_Point21_CallDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_Point21_CallDouble)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_Point21_CallDouble::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_Point21_CallDouble)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_Point21_CallDouble* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_Point21_CallDouble>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_Point21_CallDouble)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_Point21_CallDouble)
    MergeFrom(*source);
  }
}

void CS_Point21_CallDouble::MergeFrom(const CS_Point21_CallDouble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_Point21_CallDouble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_Point21_CallDouble::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_Point21_CallDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_Point21_CallDouble::CopyFrom(const CS_Point21_CallDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_Point21_CallDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_Point21_CallDouble::IsInitialized() const {
  return true;
}

void CS_Point21_CallDouble::Swap(CS_Point21_CallDouble* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_Point21_CallDouble::InternalSwap(CS_Point21_CallDouble* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_Point21_CallDouble::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_Point21_CallDouble

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_Point21_CallDouble::kCardFieldNumber;
const int SC_Point21_CallDouble::kChairIdFieldNumber;
const int SC_Point21_CallDouble::kTargetFieldNumber;
const int SC_Point21_CallDouble::kCurIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_Point21_CallDouble::SC_Point21_CallDouble()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_Point21_CallDouble)
}
SC_Point21_CallDouble::SC_Point21_CallDouble(const SC_Point21_CallDouble& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&card_, &from.card_,
    reinterpret_cast<char*>(&cur_index_) -
    reinterpret_cast<char*>(&card_) + sizeof(cur_index_));
  // @@protoc_insertion_point(copy_constructor:SC_Point21_CallDouble)
}

void SC_Point21_CallDouble::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&card_, 0, reinterpret_cast<char*>(&cur_index_) -
    reinterpret_cast<char*>(&card_) + sizeof(cur_index_));
}

SC_Point21_CallDouble::~SC_Point21_CallDouble() {
  // @@protoc_insertion_point(destructor:SC_Point21_CallDouble)
  SharedDtor();
}

void SC_Point21_CallDouble::SharedDtor() {
}

void SC_Point21_CallDouble::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_Point21_CallDouble::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_Point21_CallDouble& SC_Point21_CallDouble::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_Point21_CallDouble* SC_Point21_CallDouble::New(::google::protobuf::Arena* arena) const {
  SC_Point21_CallDouble* n = new SC_Point21_CallDouble;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_Point21_CallDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_Point21_CallDouble)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&card_, 0, reinterpret_cast<char*>(&cur_index_) -
      reinterpret_cast<char*>(&card_) + sizeof(cur_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_Point21_CallDouble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_Point21_CallDouble)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 card = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_card();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &card_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 target = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cur_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_cur_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_Point21_CallDouble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_Point21_CallDouble)
  return false;
#undef DO_
}

void SC_Point21_CallDouble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_Point21_CallDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 card = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->card(), output);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chair_id(), output);
  }

  // optional int32 target = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->target(), output);
  }

  // optional int32 cur_index = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cur_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_Point21_CallDouble)
}

::google::protobuf::uint8* SC_Point21_CallDouble::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_Point21_CallDouble)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 card = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->card(), target);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chair_id(), target);
  }

  // optional int32 target = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->target(), target);
  }

  // optional int32 cur_index = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cur_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_Point21_CallDouble)
  return target;
}

size_t SC_Point21_CallDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_Point21_CallDouble)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 card = 1;
    if (has_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->card());
    }

    // optional int32 chair_id = 2;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 target = 3;
    if (has_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target());
    }

    // optional int32 cur_index = 4;
    if (has_cur_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_Point21_CallDouble::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_Point21_CallDouble)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_Point21_CallDouble* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_Point21_CallDouble>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_Point21_CallDouble)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_Point21_CallDouble)
    MergeFrom(*source);
  }
}

void SC_Point21_CallDouble::MergeFrom(const SC_Point21_CallDouble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_Point21_CallDouble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      card_ = from.card_;
    }
    if (cached_has_bits & 0x00000002u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      target_ = from.target_;
    }
    if (cached_has_bits & 0x00000008u) {
      cur_index_ = from.cur_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_Point21_CallDouble::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_Point21_CallDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_Point21_CallDouble::CopyFrom(const SC_Point21_CallDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_Point21_CallDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_Point21_CallDouble::IsInitialized() const {
  return true;
}

void SC_Point21_CallDouble::Swap(SC_Point21_CallDouble* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_Point21_CallDouble::InternalSwap(SC_Point21_CallDouble* other) {
  std::swap(card_, other->card_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(target_, other->target_);
  std::swap(cur_index_, other->cur_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_Point21_CallDouble::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_Point21_CallDouble

// optional int32 card = 1;
bool SC_Point21_CallDouble::has_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_Point21_CallDouble::set_has_card() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_Point21_CallDouble::clear_has_card() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_Point21_CallDouble::clear_card() {
  card_ = 0;
  clear_has_card();
}
::google::protobuf::int32 SC_Point21_CallDouble::card() const {
  // @@protoc_insertion_point(field_get:SC_Point21_CallDouble.card)
  return card_;
}
void SC_Point21_CallDouble::set_card(::google::protobuf::int32 value) {
  set_has_card();
  card_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_CallDouble.card)
}

// optional int32 chair_id = 2;
bool SC_Point21_CallDouble::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_Point21_CallDouble::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_Point21_CallDouble::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_Point21_CallDouble::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_Point21_CallDouble::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_Point21_CallDouble.chair_id)
  return chair_id_;
}
void SC_Point21_CallDouble::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_CallDouble.chair_id)
}

// optional int32 target = 3;
bool SC_Point21_CallDouble::has_target() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_Point21_CallDouble::set_has_target() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_Point21_CallDouble::clear_has_target() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_Point21_CallDouble::clear_target() {
  target_ = 0;
  clear_has_target();
}
::google::protobuf::int32 SC_Point21_CallDouble::target() const {
  // @@protoc_insertion_point(field_get:SC_Point21_CallDouble.target)
  return target_;
}
void SC_Point21_CallDouble::set_target(::google::protobuf::int32 value) {
  set_has_target();
  target_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_CallDouble.target)
}

// optional int32 cur_index = 4;
bool SC_Point21_CallDouble::has_cur_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_Point21_CallDouble::set_has_cur_index() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_Point21_CallDouble::clear_has_cur_index() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_Point21_CallDouble::clear_cur_index() {
  cur_index_ = 0;
  clear_has_cur_index();
}
::google::protobuf::int32 SC_Point21_CallDouble::cur_index() const {
  // @@protoc_insertion_point(field_get:SC_Point21_CallDouble.cur_index)
  return cur_index_;
}
void SC_Point21_CallDouble::set_cur_index(::google::protobuf::int32 value) {
  set_has_cur_index();
  cur_index_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_CallDouble.cur_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_Point21_Split::CS_Point21_Split()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_Point21_Split)
}
CS_Point21_Split::CS_Point21_Split(const CS_Point21_Split& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_Point21_Split)
}

void CS_Point21_Split::SharedCtor() {
  _cached_size_ = 0;
}

CS_Point21_Split::~CS_Point21_Split() {
  // @@protoc_insertion_point(destructor:CS_Point21_Split)
  SharedDtor();
}

void CS_Point21_Split::SharedDtor() {
}

void CS_Point21_Split::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_Point21_Split::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_Point21_Split& CS_Point21_Split::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_Point21_Split* CS_Point21_Split::New(::google::protobuf::Arena* arena) const {
  CS_Point21_Split* n = new CS_Point21_Split;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_Point21_Split::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_Point21_Split)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_Point21_Split::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_Point21_Split)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_Point21_Split)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_Point21_Split)
  return false;
#undef DO_
}

void CS_Point21_Split::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_Point21_Split)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_Point21_Split)
}

::google::protobuf::uint8* CS_Point21_Split::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_Point21_Split)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_Point21_Split)
  return target;
}

size_t CS_Point21_Split::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_Point21_Split)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_Point21_Split::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_Point21_Split)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_Point21_Split* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_Point21_Split>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_Point21_Split)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_Point21_Split)
    MergeFrom(*source);
  }
}

void CS_Point21_Split::MergeFrom(const CS_Point21_Split& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_Point21_Split)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_Point21_Split::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_Point21_Split)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_Point21_Split::CopyFrom(const CS_Point21_Split& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_Point21_Split)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_Point21_Split::IsInitialized() const {
  return true;
}

void CS_Point21_Split::Swap(CS_Point21_Split* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_Point21_Split::InternalSwap(CS_Point21_Split* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_Point21_Split::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_Point21_Split

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_Point21_Split::kTargetFieldNumber;
const int SC_Point21_Split::kChairIdFieldNumber;
const int SC_Point21_Split::kTilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_Point21_Split::SC_Point21_Split()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_Point21_Split)
}
SC_Point21_Split::SC_Point21_Split(const SC_Point21_Split& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tiles_(from.tiles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_, &from.target_,
    reinterpret_cast<char*>(&chair_id_) -
    reinterpret_cast<char*>(&target_) + sizeof(chair_id_));
  // @@protoc_insertion_point(copy_constructor:SC_Point21_Split)
}

void SC_Point21_Split::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&target_, 0, reinterpret_cast<char*>(&chair_id_) -
    reinterpret_cast<char*>(&target_) + sizeof(chair_id_));
}

SC_Point21_Split::~SC_Point21_Split() {
  // @@protoc_insertion_point(destructor:SC_Point21_Split)
  SharedDtor();
}

void SC_Point21_Split::SharedDtor() {
}

void SC_Point21_Split::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_Point21_Split::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_Point21_Split& SC_Point21_Split::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_Point21_Split* SC_Point21_Split::New(::google::protobuf::Arena* arena) const {
  SC_Point21_Split* n = new SC_Point21_Split;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_Point21_Split::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_Point21_Split)
  tiles_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&target_, 0, reinterpret_cast<char*>(&chair_id_) -
      reinterpret_cast<char*>(&target_) + sizeof(chair_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_Point21_Split::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_Point21_Split)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Point21_Cards_Info tiles = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tiles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_Point21_Split)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_Point21_Split)
  return false;
#undef DO_
}

void SC_Point21_Split::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_Point21_Split)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 target = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->target(), output);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chair_id(), output);
  }

  // repeated .Point21_Cards_Info tiles = 3;
  for (unsigned int i = 0, n = this->tiles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->tiles(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_Point21_Split)
}

::google::protobuf::uint8* SC_Point21_Split::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_Point21_Split)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 target = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->target(), target);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chair_id(), target);
  }

  // repeated .Point21_Cards_Info tiles = 3;
  for (unsigned int i = 0, n = this->tiles_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->tiles(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_Point21_Split)
  return target;
}

size_t SC_Point21_Split::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_Point21_Split)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .Point21_Cards_Info tiles = 3;
  {
    unsigned int count = this->tiles_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tiles(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 target = 1;
    if (has_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target());
    }

    // optional int32 chair_id = 2;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_Point21_Split::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_Point21_Split)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_Point21_Split* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_Point21_Split>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_Point21_Split)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_Point21_Split)
    MergeFrom(*source);
  }
}

void SC_Point21_Split::MergeFrom(const SC_Point21_Split& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_Point21_Split)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tiles_.MergeFrom(from.tiles_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      target_ = from.target_;
    }
    if (cached_has_bits & 0x00000002u) {
      chair_id_ = from.chair_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_Point21_Split::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_Point21_Split)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_Point21_Split::CopyFrom(const SC_Point21_Split& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_Point21_Split)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_Point21_Split::IsInitialized() const {
  return true;
}

void SC_Point21_Split::Swap(SC_Point21_Split* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_Point21_Split::InternalSwap(SC_Point21_Split* other) {
  tiles_.InternalSwap(&other->tiles_);
  std::swap(target_, other->target_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_Point21_Split::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_Point21_Split

// optional int32 target = 1;
bool SC_Point21_Split::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_Point21_Split::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_Point21_Split::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_Point21_Split::clear_target() {
  target_ = 0;
  clear_has_target();
}
::google::protobuf::int32 SC_Point21_Split::target() const {
  // @@protoc_insertion_point(field_get:SC_Point21_Split.target)
  return target_;
}
void SC_Point21_Split::set_target(::google::protobuf::int32 value) {
  set_has_target();
  target_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_Split.target)
}

// optional int32 chair_id = 2;
bool SC_Point21_Split::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_Point21_Split::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_Point21_Split::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_Point21_Split::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_Point21_Split::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_Point21_Split.chair_id)
  return chair_id_;
}
void SC_Point21_Split::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_Split.chair_id)
}

// repeated .Point21_Cards_Info tiles = 3;
int SC_Point21_Split::tiles_size() const {
  return tiles_.size();
}
void SC_Point21_Split::clear_tiles() {
  tiles_.Clear();
}
const ::Point21_Cards_Info& SC_Point21_Split::tiles(int index) const {
  // @@protoc_insertion_point(field_get:SC_Point21_Split.tiles)
  return tiles_.Get(index);
}
::Point21_Cards_Info* SC_Point21_Split::mutable_tiles(int index) {
  // @@protoc_insertion_point(field_mutable:SC_Point21_Split.tiles)
  return tiles_.Mutable(index);
}
::Point21_Cards_Info* SC_Point21_Split::add_tiles() {
  // @@protoc_insertion_point(field_add:SC_Point21_Split.tiles)
  return tiles_.Add();
}
::google::protobuf::RepeatedPtrField< ::Point21_Cards_Info >*
SC_Point21_Split::mutable_tiles() {
  // @@protoc_insertion_point(field_mutable_list:SC_Point21_Split.tiles)
  return &tiles_;
}
const ::google::protobuf::RepeatedPtrField< ::Point21_Cards_Info >&
SC_Point21_Split::tiles() const {
  // @@protoc_insertion_point(field_list:SC_Point21_Split.tiles)
  return tiles_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_Point21_Insurance::CS_Point21_Insurance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_Point21_Insurance)
}
CS_Point21_Insurance::CS_Point21_Insurance(const CS_Point21_Insurance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_Point21_Insurance)
}

void CS_Point21_Insurance::SharedCtor() {
  _cached_size_ = 0;
}

CS_Point21_Insurance::~CS_Point21_Insurance() {
  // @@protoc_insertion_point(destructor:CS_Point21_Insurance)
  SharedDtor();
}

void CS_Point21_Insurance::SharedDtor() {
}

void CS_Point21_Insurance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_Point21_Insurance::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_Point21_Insurance& CS_Point21_Insurance::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_Point21_Insurance* CS_Point21_Insurance::New(::google::protobuf::Arena* arena) const {
  CS_Point21_Insurance* n = new CS_Point21_Insurance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_Point21_Insurance::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_Point21_Insurance)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_Point21_Insurance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_Point21_Insurance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_Point21_Insurance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_Point21_Insurance)
  return false;
#undef DO_
}

void CS_Point21_Insurance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_Point21_Insurance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_Point21_Insurance)
}

::google::protobuf::uint8* CS_Point21_Insurance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_Point21_Insurance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_Point21_Insurance)
  return target;
}

size_t CS_Point21_Insurance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_Point21_Insurance)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_Point21_Insurance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_Point21_Insurance)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_Point21_Insurance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_Point21_Insurance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_Point21_Insurance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_Point21_Insurance)
    MergeFrom(*source);
  }
}

void CS_Point21_Insurance::MergeFrom(const CS_Point21_Insurance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_Point21_Insurance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_Point21_Insurance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_Point21_Insurance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_Point21_Insurance::CopyFrom(const CS_Point21_Insurance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_Point21_Insurance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_Point21_Insurance::IsInitialized() const {
  return true;
}

void CS_Point21_Insurance::Swap(CS_Point21_Insurance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_Point21_Insurance::InternalSwap(CS_Point21_Insurance* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_Point21_Insurance::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_Point21_Insurance

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_Point21_Insurance::kCostFieldNumber;
const int SC_Point21_Insurance::kChairIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_Point21_Insurance::SC_Point21_Insurance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_Point21_Insurance)
}
SC_Point21_Insurance::SC_Point21_Insurance(const SC_Point21_Insurance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cost_, &from.cost_,
    reinterpret_cast<char*>(&chair_id_) -
    reinterpret_cast<char*>(&cost_) + sizeof(chair_id_));
  // @@protoc_insertion_point(copy_constructor:SC_Point21_Insurance)
}

void SC_Point21_Insurance::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&cost_, 0, reinterpret_cast<char*>(&chair_id_) -
    reinterpret_cast<char*>(&cost_) + sizeof(chair_id_));
}

SC_Point21_Insurance::~SC_Point21_Insurance() {
  // @@protoc_insertion_point(destructor:SC_Point21_Insurance)
  SharedDtor();
}

void SC_Point21_Insurance::SharedDtor() {
}

void SC_Point21_Insurance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_Point21_Insurance::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_Point21_Insurance& SC_Point21_Insurance::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_Point21_Insurance* SC_Point21_Insurance::New(::google::protobuf::Arena* arena) const {
  SC_Point21_Insurance* n = new SC_Point21_Insurance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_Point21_Insurance::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_Point21_Insurance)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&cost_, 0, reinterpret_cast<char*>(&chair_id_) -
      reinterpret_cast<char*>(&cost_) + sizeof(chair_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_Point21_Insurance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_Point21_Insurance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cost = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_cost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_Point21_Insurance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_Point21_Insurance)
  return false;
#undef DO_
}

void SC_Point21_Insurance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_Point21_Insurance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 cost = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cost(), output);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chair_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_Point21_Insurance)
}

::google::protobuf::uint8* SC_Point21_Insurance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_Point21_Insurance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 cost = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cost(), target);
  }

  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chair_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_Point21_Insurance)
  return target;
}

size_t SC_Point21_Insurance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_Point21_Insurance)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 cost = 1;
    if (has_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cost());
    }

    // optional int32 chair_id = 2;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_Point21_Insurance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_Point21_Insurance)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_Point21_Insurance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_Point21_Insurance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_Point21_Insurance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_Point21_Insurance)
    MergeFrom(*source);
  }
}

void SC_Point21_Insurance::MergeFrom(const SC_Point21_Insurance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_Point21_Insurance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      cost_ = from.cost_;
    }
    if (cached_has_bits & 0x00000002u) {
      chair_id_ = from.chair_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_Point21_Insurance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_Point21_Insurance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_Point21_Insurance::CopyFrom(const SC_Point21_Insurance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_Point21_Insurance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_Point21_Insurance::IsInitialized() const {
  return true;
}

void SC_Point21_Insurance::Swap(SC_Point21_Insurance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_Point21_Insurance::InternalSwap(SC_Point21_Insurance* other) {
  std::swap(cost_, other->cost_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_Point21_Insurance::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_Point21_Insurance

// optional int32 cost = 1;
bool SC_Point21_Insurance::has_cost() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_Point21_Insurance::set_has_cost() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_Point21_Insurance::clear_has_cost() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_Point21_Insurance::clear_cost() {
  cost_ = 0;
  clear_has_cost();
}
::google::protobuf::int32 SC_Point21_Insurance::cost() const {
  // @@protoc_insertion_point(field_get:SC_Point21_Insurance.cost)
  return cost_;
}
void SC_Point21_Insurance::set_cost(::google::protobuf::int32 value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_Insurance.cost)
}

// optional int32 chair_id = 2;
bool SC_Point21_Insurance::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_Point21_Insurance::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_Point21_Insurance::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_Point21_Insurance::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_Point21_Insurance::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_Point21_Insurance.chair_id)
  return chair_id_;
}
void SC_Point21_Insurance::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_Insurance.chair_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_Point21_Surrender::CS_Point21_Surrender()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_Point21_Surrender)
}
CS_Point21_Surrender::CS_Point21_Surrender(const CS_Point21_Surrender& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_Point21_Surrender)
}

void CS_Point21_Surrender::SharedCtor() {
  _cached_size_ = 0;
}

CS_Point21_Surrender::~CS_Point21_Surrender() {
  // @@protoc_insertion_point(destructor:CS_Point21_Surrender)
  SharedDtor();
}

void CS_Point21_Surrender::SharedDtor() {
}

void CS_Point21_Surrender::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_Point21_Surrender::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_Point21_Surrender& CS_Point21_Surrender::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_Point21_Surrender* CS_Point21_Surrender::New(::google::protobuf::Arena* arena) const {
  CS_Point21_Surrender* n = new CS_Point21_Surrender;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_Point21_Surrender::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_Point21_Surrender)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_Point21_Surrender::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_Point21_Surrender)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_Point21_Surrender)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_Point21_Surrender)
  return false;
#undef DO_
}

void CS_Point21_Surrender::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_Point21_Surrender)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_Point21_Surrender)
}

::google::protobuf::uint8* CS_Point21_Surrender::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_Point21_Surrender)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_Point21_Surrender)
  return target;
}

size_t CS_Point21_Surrender::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_Point21_Surrender)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_Point21_Surrender::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_Point21_Surrender)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_Point21_Surrender* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_Point21_Surrender>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_Point21_Surrender)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_Point21_Surrender)
    MergeFrom(*source);
  }
}

void CS_Point21_Surrender::MergeFrom(const CS_Point21_Surrender& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_Point21_Surrender)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_Point21_Surrender::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_Point21_Surrender)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_Point21_Surrender::CopyFrom(const CS_Point21_Surrender& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_Point21_Surrender)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_Point21_Surrender::IsInitialized() const {
  return true;
}

void CS_Point21_Surrender::Swap(CS_Point21_Surrender* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_Point21_Surrender::InternalSwap(CS_Point21_Surrender* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_Point21_Surrender::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_Point21_Surrender

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_Point21_Surrender::kChairIdFieldNumber;
const int SC_Point21_Surrender::kSurrenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_Point21_Surrender::SC_Point21_Surrender()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_Point21_Surrender)
}
SC_Point21_Surrender::SC_Point21_Surrender(const SC_Point21_Surrender& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&chair_id_, &from.chair_id_,
    reinterpret_cast<char*>(&surrender_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(surrender_));
  // @@protoc_insertion_point(copy_constructor:SC_Point21_Surrender)
}

void SC_Point21_Surrender::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&chair_id_, 0, reinterpret_cast<char*>(&surrender_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(surrender_));
}

SC_Point21_Surrender::~SC_Point21_Surrender() {
  // @@protoc_insertion_point(destructor:SC_Point21_Surrender)
  SharedDtor();
}

void SC_Point21_Surrender::SharedDtor() {
}

void SC_Point21_Surrender::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_Point21_Surrender::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_Point21_Surrender& SC_Point21_Surrender::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_Point21_Surrender* SC_Point21_Surrender::New(::google::protobuf::Arena* arena) const {
  SC_Point21_Surrender* n = new SC_Point21_Surrender;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_Point21_Surrender::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_Point21_Surrender)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&chair_id_, 0, reinterpret_cast<char*>(&surrender_) -
      reinterpret_cast<char*>(&chair_id_) + sizeof(surrender_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_Point21_Surrender::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_Point21_Surrender)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool surrender = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_surrender();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &surrender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_Point21_Surrender)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_Point21_Surrender)
  return false;
#undef DO_
}

void SC_Point21_Surrender::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_Point21_Surrender)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chair_id(), output);
  }

  // optional bool surrender = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->surrender(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_Point21_Surrender)
}

::google::protobuf::uint8* SC_Point21_Surrender::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_Point21_Surrender)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chair_id(), target);
  }

  // optional bool surrender = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->surrender(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_Point21_Surrender)
  return target;
}

size_t SC_Point21_Surrender::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_Point21_Surrender)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 chair_id = 1;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional bool surrender = 2;
    if (has_surrender()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_Point21_Surrender::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_Point21_Surrender)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_Point21_Surrender* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_Point21_Surrender>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_Point21_Surrender)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_Point21_Surrender)
    MergeFrom(*source);
  }
}

void SC_Point21_Surrender::MergeFrom(const SC_Point21_Surrender& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_Point21_Surrender)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      surrender_ = from.surrender_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_Point21_Surrender::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_Point21_Surrender)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_Point21_Surrender::CopyFrom(const SC_Point21_Surrender& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_Point21_Surrender)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_Point21_Surrender::IsInitialized() const {
  return true;
}

void SC_Point21_Surrender::Swap(SC_Point21_Surrender* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_Point21_Surrender::InternalSwap(SC_Point21_Surrender* other) {
  std::swap(chair_id_, other->chair_id_);
  std::swap(surrender_, other->surrender_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_Point21_Surrender::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_Point21_Surrender

// optional int32 chair_id = 1;
bool SC_Point21_Surrender::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_Point21_Surrender::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_Point21_Surrender::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_Point21_Surrender::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_Point21_Surrender::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_Point21_Surrender.chair_id)
  return chair_id_;
}
void SC_Point21_Surrender::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_Surrender.chair_id)
}

// optional bool surrender = 2;
bool SC_Point21_Surrender::has_surrender() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_Point21_Surrender::set_has_surrender() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_Point21_Surrender::clear_has_surrender() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_Point21_Surrender::clear_surrender() {
  surrender_ = false;
  clear_has_surrender();
}
bool SC_Point21_Surrender::surrender() const {
  // @@protoc_insertion_point(field_get:SC_Point21_Surrender.surrender)
  return surrender_;
}
void SC_Point21_Surrender::set_surrender(bool value) {
  set_has_surrender();
  surrender_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_Surrender.surrender)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point21_Cards_Info::kCardsFieldNumber;
const int Point21_Cards_Info::kStataFieldNumber;
const int Point21_Cards_Info::kBetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point21_Cards_Info::Point21_Cards_Info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Point21_Cards_Info)
}
Point21_Cards_Info::Point21_Cards_Info(const Point21_Cards_Info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      cards_(from.cards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stata_, &from.stata_,
    reinterpret_cast<char*>(&bet_) -
    reinterpret_cast<char*>(&stata_) + sizeof(bet_));
  // @@protoc_insertion_point(copy_constructor:Point21_Cards_Info)
}

void Point21_Cards_Info::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&stata_, 0, reinterpret_cast<char*>(&bet_) -
    reinterpret_cast<char*>(&stata_) + sizeof(bet_));
}

Point21_Cards_Info::~Point21_Cards_Info() {
  // @@protoc_insertion_point(destructor:Point21_Cards_Info)
  SharedDtor();
}

void Point21_Cards_Info::SharedDtor() {
}

void Point21_Cards_Info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point21_Cards_Info::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point21_Cards_Info& Point21_Cards_Info::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

Point21_Cards_Info* Point21_Cards_Info::New(::google::protobuf::Arena* arena) const {
  Point21_Cards_Info* n = new Point21_Cards_Info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point21_Cards_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:Point21_Cards_Info)
  cards_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&stata_, 0, reinterpret_cast<char*>(&bet_) -
      reinterpret_cast<char*>(&stata_) + sizeof(bet_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Point21_Cards_Info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Point21_Cards_Info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 cards = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_cards())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 stata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_stata();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bet = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_bet();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Point21_Cards_Info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Point21_Cards_Info)
  return false;
#undef DO_
}

void Point21_Cards_Info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Point21_Cards_Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 cards = 1;
  for (int i = 0, n = this->cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->cards(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 stata = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stata(), output);
  }

  // optional int32 bet = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bet(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Point21_Cards_Info)
}

::google::protobuf::uint8* Point21_Cards_Info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Point21_Cards_Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 cards = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->cards_, target);

  cached_has_bits = _has_bits_[0];
  // optional int32 stata = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stata(), target);
  }

  // optional int32 bet = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bet(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Point21_Cards_Info)
  return target;
}

size_t Point21_Cards_Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Point21_Cards_Info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 cards = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->cards_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cards_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 stata = 2;
    if (has_stata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stata());
    }

    // optional int32 bet = 3;
    if (has_bet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bet());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point21_Cards_Info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Point21_Cards_Info)
  GOOGLE_DCHECK_NE(&from, this);
  const Point21_Cards_Info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point21_Cards_Info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Point21_Cards_Info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Point21_Cards_Info)
    MergeFrom(*source);
  }
}

void Point21_Cards_Info::MergeFrom(const Point21_Cards_Info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Point21_Cards_Info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cards_.MergeFrom(from.cards_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      stata_ = from.stata_;
    }
    if (cached_has_bits & 0x00000002u) {
      bet_ = from.bet_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Point21_Cards_Info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Point21_Cards_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point21_Cards_Info::CopyFrom(const Point21_Cards_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Point21_Cards_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point21_Cards_Info::IsInitialized() const {
  return true;
}

void Point21_Cards_Info::Swap(Point21_Cards_Info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point21_Cards_Info::InternalSwap(Point21_Cards_Info* other) {
  cards_.InternalSwap(&other->cards_);
  std::swap(stata_, other->stata_);
  std::swap(bet_, other->bet_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point21_Cards_Info::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Point21_Cards_Info

// repeated int32 cards = 1;
int Point21_Cards_Info::cards_size() const {
  return cards_.size();
}
void Point21_Cards_Info::clear_cards() {
  cards_.Clear();
}
::google::protobuf::int32 Point21_Cards_Info::cards(int index) const {
  // @@protoc_insertion_point(field_get:Point21_Cards_Info.cards)
  return cards_.Get(index);
}
void Point21_Cards_Info::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Point21_Cards_Info.cards)
}
void Point21_Cards_Info::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:Point21_Cards_Info.cards)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Point21_Cards_Info::cards() const {
  // @@protoc_insertion_point(field_list:Point21_Cards_Info.cards)
  return cards_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Point21_Cards_Info::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:Point21_Cards_Info.cards)
  return &cards_;
}

// optional int32 stata = 2;
bool Point21_Cards_Info::has_stata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Point21_Cards_Info::set_has_stata() {
  _has_bits_[0] |= 0x00000001u;
}
void Point21_Cards_Info::clear_has_stata() {
  _has_bits_[0] &= ~0x00000001u;
}
void Point21_Cards_Info::clear_stata() {
  stata_ = 0;
  clear_has_stata();
}
::google::protobuf::int32 Point21_Cards_Info::stata() const {
  // @@protoc_insertion_point(field_get:Point21_Cards_Info.stata)
  return stata_;
}
void Point21_Cards_Info::set_stata(::google::protobuf::int32 value) {
  set_has_stata();
  stata_ = value;
  // @@protoc_insertion_point(field_set:Point21_Cards_Info.stata)
}

// optional int32 bet = 3;
bool Point21_Cards_Info::has_bet() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Point21_Cards_Info::set_has_bet() {
  _has_bits_[0] |= 0x00000002u;
}
void Point21_Cards_Info::clear_has_bet() {
  _has_bits_[0] &= ~0x00000002u;
}
void Point21_Cards_Info::clear_bet() {
  bet_ = 0;
  clear_has_bet();
}
::google::protobuf::int32 Point21_Cards_Info::bet() const {
  // @@protoc_insertion_point(field_get:Point21_Cards_Info.bet)
  return bet_;
}
void Point21_Cards_Info::set_bet(::google::protobuf::int32 value) {
  set_has_bet();
  bet_ = value;
  // @@protoc_insertion_point(field_set:Point21_Cards_Info.bet)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point21_Player_Info::kPbTilesFieldNumber;
const int Point21_Player_Info::kChairIdFieldNumber;
const int Point21_Player_Info::kNickFieldNumber;
const int Point21_Player_Info::kIconFieldNumber;
const int Point21_Player_Info::kGoldFieldNumber;
const int Point21_Player_Info::kGuidFieldNumber;
const int Point21_Player_Info::kWinMoneyFieldNumber;
const int Point21_Player_Info::kTaxesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point21_Player_Info::Point21_Player_Info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Point21_Player_Info)
}
Point21_Player_Info::Point21_Player_Info(const Point21_Player_Info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_tiles_(from.pb_tiles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nick()) {
    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  ::memcpy(&chair_id_, &from.chair_id_,
    reinterpret_cast<char*>(&taxes_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(taxes_));
  // @@protoc_insertion_point(copy_constructor:Point21_Player_Info)
}

void Point21_Player_Info::SharedCtor() {
  _cached_size_ = 0;
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&chair_id_, 0, reinterpret_cast<char*>(&taxes_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(taxes_));
}

Point21_Player_Info::~Point21_Player_Info() {
  // @@protoc_insertion_point(destructor:Point21_Player_Info)
  SharedDtor();
}

void Point21_Player_Info::SharedDtor() {
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Point21_Player_Info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point21_Player_Info::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point21_Player_Info& Point21_Player_Info::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

Point21_Player_Info* Point21_Player_Info::New(::google::protobuf::Arena* arena) const {
  Point21_Player_Info* n = new Point21_Player_Info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point21_Player_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:Point21_Player_Info)
  pb_tiles_.Clear();
  if (has_nick()) {
    GOOGLE_DCHECK(!nick_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*nick_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 126u) {
    ::memset(&chair_id_, 0, reinterpret_cast<char*>(&taxes_) -
      reinterpret_cast<char*>(&chair_id_) + sizeof(taxes_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Point21_Player_Info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Point21_Player_Info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Point21_Cards_Info pb_tiles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_tiles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nick().data(), this->nick().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Point21_Player_Info.nick");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 icon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_icon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 gold = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 guid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 win_money = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_win_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &win_money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 taxes = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_taxes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taxes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Point21_Player_Info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Point21_Player_Info)
  return false;
#undef DO_
}

void Point21_Player_Info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Point21_Player_Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Point21_Cards_Info pb_tiles = 1;
  for (unsigned int i = 0, n = this->pb_tiles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_tiles(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chair_id(), output);
  }

  // optional string nick = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nick().data(), this->nick().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Point21_Player_Info.nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nick(), output);
  }

  // optional int32 icon = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->icon(), output);
  }

  // optional int64 gold = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->gold(), output);
  }

  // optional int32 guid = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->guid(), output);
  }

  // optional int32 win_money = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->win_money(), output);
  }

  // optional int32 taxes = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->taxes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Point21_Player_Info)
}

::google::protobuf::uint8* Point21_Player_Info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Point21_Player_Info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Point21_Cards_Info pb_tiles = 1;
  for (unsigned int i = 0, n = this->pb_tiles_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_tiles(i), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chair_id(), target);
  }

  // optional string nick = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nick().data(), this->nick().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Point21_Player_Info.nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nick(), target);
  }

  // optional int32 icon = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->icon(), target);
  }

  // optional int64 gold = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->gold(), target);
  }

  // optional int32 guid = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->guid(), target);
  }

  // optional int32 win_money = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->win_money(), target);
  }

  // optional int32 taxes = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->taxes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Point21_Player_Info)
  return target;
}

size_t Point21_Player_Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Point21_Player_Info)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .Point21_Cards_Info pb_tiles = 1;
  {
    unsigned int count = this->pb_tiles_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_tiles(i));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional string nick = 3;
    if (has_nick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nick());
    }

    // optional int32 chair_id = 2;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 icon = 4;
    if (has_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->icon());
    }

    // optional int64 gold = 5;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gold());
    }

    // optional int32 guid = 6;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

    // optional int32 win_money = 7;
    if (has_win_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->win_money());
    }

    // optional int32 taxes = 8;
    if (has_taxes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->taxes());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point21_Player_Info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Point21_Player_Info)
  GOOGLE_DCHECK_NE(&from, this);
  const Point21_Player_Info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point21_Player_Info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Point21_Player_Info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Point21_Player_Info)
    MergeFrom(*source);
  }
}

void Point21_Player_Info::MergeFrom(const Point21_Player_Info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Point21_Player_Info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_tiles_.MergeFrom(from.pb_tiles_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nick();
      nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
    }
    if (cached_has_bits & 0x00000002u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      icon_ = from.icon_;
    }
    if (cached_has_bits & 0x00000008u) {
      gold_ = from.gold_;
    }
    if (cached_has_bits & 0x00000010u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000020u) {
      win_money_ = from.win_money_;
    }
    if (cached_has_bits & 0x00000040u) {
      taxes_ = from.taxes_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Point21_Player_Info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Point21_Player_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point21_Player_Info::CopyFrom(const Point21_Player_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Point21_Player_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point21_Player_Info::IsInitialized() const {
  return true;
}

void Point21_Player_Info::Swap(Point21_Player_Info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point21_Player_Info::InternalSwap(Point21_Player_Info* other) {
  pb_tiles_.InternalSwap(&other->pb_tiles_);
  nick_.Swap(&other->nick_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(icon_, other->icon_);
  std::swap(gold_, other->gold_);
  std::swap(guid_, other->guid_);
  std::swap(win_money_, other->win_money_);
  std::swap(taxes_, other->taxes_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point21_Player_Info::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Point21_Player_Info

// repeated .Point21_Cards_Info pb_tiles = 1;
int Point21_Player_Info::pb_tiles_size() const {
  return pb_tiles_.size();
}
void Point21_Player_Info::clear_pb_tiles() {
  pb_tiles_.Clear();
}
const ::Point21_Cards_Info& Point21_Player_Info::pb_tiles(int index) const {
  // @@protoc_insertion_point(field_get:Point21_Player_Info.pb_tiles)
  return pb_tiles_.Get(index);
}
::Point21_Cards_Info* Point21_Player_Info::mutable_pb_tiles(int index) {
  // @@protoc_insertion_point(field_mutable:Point21_Player_Info.pb_tiles)
  return pb_tiles_.Mutable(index);
}
::Point21_Cards_Info* Point21_Player_Info::add_pb_tiles() {
  // @@protoc_insertion_point(field_add:Point21_Player_Info.pb_tiles)
  return pb_tiles_.Add();
}
::google::protobuf::RepeatedPtrField< ::Point21_Cards_Info >*
Point21_Player_Info::mutable_pb_tiles() {
  // @@protoc_insertion_point(field_mutable_list:Point21_Player_Info.pb_tiles)
  return &pb_tiles_;
}
const ::google::protobuf::RepeatedPtrField< ::Point21_Cards_Info >&
Point21_Player_Info::pb_tiles() const {
  // @@protoc_insertion_point(field_list:Point21_Player_Info.pb_tiles)
  return pb_tiles_;
}

// optional int32 chair_id = 2;
bool Point21_Player_Info::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Point21_Player_Info::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void Point21_Player_Info::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void Point21_Player_Info::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 Point21_Player_Info::chair_id() const {
  // @@protoc_insertion_point(field_get:Point21_Player_Info.chair_id)
  return chair_id_;
}
void Point21_Player_Info::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:Point21_Player_Info.chair_id)
}

// optional string nick = 3;
bool Point21_Player_Info::has_nick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Point21_Player_Info::set_has_nick() {
  _has_bits_[0] |= 0x00000001u;
}
void Point21_Player_Info::clear_has_nick() {
  _has_bits_[0] &= ~0x00000001u;
}
void Point21_Player_Info::clear_nick() {
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nick();
}
const ::std::string& Point21_Player_Info::nick() const {
  // @@protoc_insertion_point(field_get:Point21_Player_Info.nick)
  return nick_.GetNoArena();
}
void Point21_Player_Info::set_nick(const ::std::string& value) {
  set_has_nick();
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Point21_Player_Info.nick)
}
#if LANG_CXX11
void Point21_Player_Info::set_nick(::std::string&& value) {
  set_has_nick();
  nick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Point21_Player_Info.nick)
}
#endif
void Point21_Player_Info::set_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nick();
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Point21_Player_Info.nick)
}
void Point21_Player_Info::set_nick(const char* value, size_t size) {
  set_has_nick();
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Point21_Player_Info.nick)
}
::std::string* Point21_Player_Info::mutable_nick() {
  set_has_nick();
  // @@protoc_insertion_point(field_mutable:Point21_Player_Info.nick)
  return nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Point21_Player_Info::release_nick() {
  // @@protoc_insertion_point(field_release:Point21_Player_Info.nick)
  clear_has_nick();
  return nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Point21_Player_Info::set_allocated_nick(::std::string* nick) {
  if (nick != NULL) {
    set_has_nick();
  } else {
    clear_has_nick();
  }
  nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick);
  // @@protoc_insertion_point(field_set_allocated:Point21_Player_Info.nick)
}

// optional int32 icon = 4;
bool Point21_Player_Info::has_icon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Point21_Player_Info::set_has_icon() {
  _has_bits_[0] |= 0x00000004u;
}
void Point21_Player_Info::clear_has_icon() {
  _has_bits_[0] &= ~0x00000004u;
}
void Point21_Player_Info::clear_icon() {
  icon_ = 0;
  clear_has_icon();
}
::google::protobuf::int32 Point21_Player_Info::icon() const {
  // @@protoc_insertion_point(field_get:Point21_Player_Info.icon)
  return icon_;
}
void Point21_Player_Info::set_icon(::google::protobuf::int32 value) {
  set_has_icon();
  icon_ = value;
  // @@protoc_insertion_point(field_set:Point21_Player_Info.icon)
}

// optional int64 gold = 5;
bool Point21_Player_Info::has_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Point21_Player_Info::set_has_gold() {
  _has_bits_[0] |= 0x00000008u;
}
void Point21_Player_Info::clear_has_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
void Point21_Player_Info::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
::google::protobuf::int64 Point21_Player_Info::gold() const {
  // @@protoc_insertion_point(field_get:Point21_Player_Info.gold)
  return gold_;
}
void Point21_Player_Info::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:Point21_Player_Info.gold)
}

// optional int32 guid = 6;
bool Point21_Player_Info::has_guid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Point21_Player_Info::set_has_guid() {
  _has_bits_[0] |= 0x00000010u;
}
void Point21_Player_Info::clear_has_guid() {
  _has_bits_[0] &= ~0x00000010u;
}
void Point21_Player_Info::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 Point21_Player_Info::guid() const {
  // @@protoc_insertion_point(field_get:Point21_Player_Info.guid)
  return guid_;
}
void Point21_Player_Info::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Point21_Player_Info.guid)
}

// optional int32 win_money = 7;
bool Point21_Player_Info::has_win_money() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Point21_Player_Info::set_has_win_money() {
  _has_bits_[0] |= 0x00000020u;
}
void Point21_Player_Info::clear_has_win_money() {
  _has_bits_[0] &= ~0x00000020u;
}
void Point21_Player_Info::clear_win_money() {
  win_money_ = 0;
  clear_has_win_money();
}
::google::protobuf::int32 Point21_Player_Info::win_money() const {
  // @@protoc_insertion_point(field_get:Point21_Player_Info.win_money)
  return win_money_;
}
void Point21_Player_Info::set_win_money(::google::protobuf::int32 value) {
  set_has_win_money();
  win_money_ = value;
  // @@protoc_insertion_point(field_set:Point21_Player_Info.win_money)
}

// optional int32 taxes = 8;
bool Point21_Player_Info::has_taxes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Point21_Player_Info::set_has_taxes() {
  _has_bits_[0] |= 0x00000040u;
}
void Point21_Player_Info::clear_has_taxes() {
  _has_bits_[0] &= ~0x00000040u;
}
void Point21_Player_Info::clear_taxes() {
  taxes_ = 0;
  clear_has_taxes();
}
::google::protobuf::int32 Point21_Player_Info::taxes() const {
  // @@protoc_insertion_point(field_get:Point21_Player_Info.taxes)
  return taxes_;
}
void Point21_Player_Info::set_taxes(::google::protobuf::int32 value) {
  set_has_taxes();
  taxes_ = value;
  // @@protoc_insertion_point(field_set:Point21_Player_Info.taxes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point21_Reconnect_Data::kActLeftTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point21_Reconnect_Data::Point21_Reconnect_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Point21_Reconnect_Data)
}
Point21_Reconnect_Data::Point21_Reconnect_Data(const Point21_Reconnect_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  act_left_time_ = from.act_left_time_;
  // @@protoc_insertion_point(copy_constructor:Point21_Reconnect_Data)
}

void Point21_Reconnect_Data::SharedCtor() {
  _cached_size_ = 0;
  act_left_time_ = 0;
}

Point21_Reconnect_Data::~Point21_Reconnect_Data() {
  // @@protoc_insertion_point(destructor:Point21_Reconnect_Data)
  SharedDtor();
}

void Point21_Reconnect_Data::SharedDtor() {
}

void Point21_Reconnect_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point21_Reconnect_Data::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point21_Reconnect_Data& Point21_Reconnect_Data::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

Point21_Reconnect_Data* Point21_Reconnect_Data::New(::google::protobuf::Arena* arena) const {
  Point21_Reconnect_Data* n = new Point21_Reconnect_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point21_Reconnect_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:Point21_Reconnect_Data)
  act_left_time_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Point21_Reconnect_Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Point21_Reconnect_Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 act_left_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_act_left_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_left_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Point21_Reconnect_Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Point21_Reconnect_Data)
  return false;
#undef DO_
}

void Point21_Reconnect_Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Point21_Reconnect_Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 act_left_time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->act_left_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Point21_Reconnect_Data)
}

::google::protobuf::uint8* Point21_Reconnect_Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Point21_Reconnect_Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 act_left_time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->act_left_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Point21_Reconnect_Data)
  return target;
}

size_t Point21_Reconnect_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Point21_Reconnect_Data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 act_left_time = 1;
  if (has_act_left_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->act_left_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point21_Reconnect_Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Point21_Reconnect_Data)
  GOOGLE_DCHECK_NE(&from, this);
  const Point21_Reconnect_Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point21_Reconnect_Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Point21_Reconnect_Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Point21_Reconnect_Data)
    MergeFrom(*source);
  }
}

void Point21_Reconnect_Data::MergeFrom(const Point21_Reconnect_Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Point21_Reconnect_Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_act_left_time()) {
    set_act_left_time(from.act_left_time());
  }
}

void Point21_Reconnect_Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Point21_Reconnect_Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point21_Reconnect_Data::CopyFrom(const Point21_Reconnect_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Point21_Reconnect_Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point21_Reconnect_Data::IsInitialized() const {
  return true;
}

void Point21_Reconnect_Data::Swap(Point21_Reconnect_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point21_Reconnect_Data::InternalSwap(Point21_Reconnect_Data* other) {
  std::swap(act_left_time_, other->act_left_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point21_Reconnect_Data::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Point21_Reconnect_Data

// optional int32 act_left_time = 1;
bool Point21_Reconnect_Data::has_act_left_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Point21_Reconnect_Data::set_has_act_left_time() {
  _has_bits_[0] |= 0x00000001u;
}
void Point21_Reconnect_Data::clear_has_act_left_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void Point21_Reconnect_Data::clear_act_left_time() {
  act_left_time_ = 0;
  clear_has_act_left_time();
}
::google::protobuf::int32 Point21_Reconnect_Data::act_left_time() const {
  // @@protoc_insertion_point(field_get:Point21_Reconnect_Data.act_left_time)
  return act_left_time_;
}
void Point21_Reconnect_Data::set_act_left_time(::google::protobuf::int32 value) {
  set_has_act_left_time();
  act_left_time_ = value;
  // @@protoc_insertion_point(field_set:Point21_Reconnect_Data.act_left_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_Point21_EnterData::kPbPlayersFieldNumber;
const int SC_Point21_EnterData::kTableStateFieldNumber;
const int SC_Point21_EnterData::kZhuangChairIdFieldNumber;
const int SC_Point21_EnterData::kSelfChairIdFieldNumber;
const int SC_Point21_EnterData::kActTimeLimitFieldNumber;
const int SC_Point21_EnterData::kIsReconnectFieldNumber;
const int SC_Point21_EnterData::kBaseScoreFieldNumber;
const int SC_Point21_EnterData::kMaxCallFieldNumber;
const int SC_Point21_EnterData::kBetBaseFieldNumber;
const int SC_Point21_EnterData::kPbRecDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_Point21_EnterData::SC_Point21_EnterData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_Point21_EnterData)
}
SC_Point21_EnterData::SC_Point21_EnterData(const SC_Point21_EnterData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_players_(from.pb_players_),
      bet_base_(from.bet_base_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pb_rec_data()) {
    pb_rec_data_ = new ::Point21_Reconnect_Data(*from.pb_rec_data_);
  } else {
    pb_rec_data_ = NULL;
  }
  ::memcpy(&table_state_, &from.table_state_,
    reinterpret_cast<char*>(&max_call_) -
    reinterpret_cast<char*>(&table_state_) + sizeof(max_call_));
  // @@protoc_insertion_point(copy_constructor:SC_Point21_EnterData)
}

void SC_Point21_EnterData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pb_rec_data_, 0, reinterpret_cast<char*>(&max_call_) -
    reinterpret_cast<char*>(&pb_rec_data_) + sizeof(max_call_));
}

SC_Point21_EnterData::~SC_Point21_EnterData() {
  // @@protoc_insertion_point(destructor:SC_Point21_EnterData)
  SharedDtor();
}

void SC_Point21_EnterData::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pb_rec_data_;
  }
}

void SC_Point21_EnterData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_Point21_EnterData::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_Point21_EnterData& SC_Point21_EnterData::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_Point21_EnterData* SC_Point21_EnterData::New(::google::protobuf::Arena* arena) const {
  SC_Point21_EnterData* n = new SC_Point21_EnterData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_Point21_EnterData::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_Point21_EnterData)
  pb_players_.Clear();
  bet_base_.Clear();
  if (has_pb_rec_data()) {
    GOOGLE_DCHECK(pb_rec_data_ != NULL);
    pb_rec_data_->::Point21_Reconnect_Data::Clear();
  }
  if (_has_bits_[0 / 32] & 254u) {
    ::memset(&table_state_, 0, reinterpret_cast<char*>(&max_call_) -
      reinterpret_cast<char*>(&table_state_) + sizeof(max_call_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_Point21_EnterData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_Point21_EnterData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Point21_Player_Info pb_players = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 table_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_table_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 zhuang_chair_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_zhuang_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zhuang_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 self_chair_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_self_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &self_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 act_time_limit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_act_time_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_time_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_reconnect = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_is_reconnect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_reconnect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 base_score = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_base_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &base_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 max_call = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_max_call();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_call_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 bet_base = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 72u, input, this->mutable_bet_base())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(74u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_bet_base())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Point21_Reconnect_Data pb_rec_data = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pb_rec_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_Point21_EnterData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_Point21_EnterData)
  return false;
#undef DO_
}

void SC_Point21_EnterData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_Point21_EnterData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Point21_Player_Info pb_players = 1;
  for (unsigned int i = 0, n = this->pb_players_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_players(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 table_state = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->table_state(), output);
  }

  // optional int32 zhuang_chair_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->zhuang_chair_id(), output);
  }

  // optional int32 self_chair_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->self_chair_id(), output);
  }

  // optional int32 act_time_limit = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->act_time_limit(), output);
  }

  // optional bool is_reconnect = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_reconnect(), output);
  }

  // optional int32 base_score = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->base_score(), output);
  }

  // optional int32 max_call = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->max_call(), output);
  }

  // repeated int32 bet_base = 9;
  for (int i = 0, n = this->bet_base_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      9, this->bet_base(i), output);
  }

  // optional .Point21_Reconnect_Data pb_rec_data = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->pb_rec_data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_Point21_EnterData)
}

::google::protobuf::uint8* SC_Point21_EnterData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_Point21_EnterData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Point21_Player_Info pb_players = 1;
  for (unsigned int i = 0, n = this->pb_players_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_players(i), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 table_state = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->table_state(), target);
  }

  // optional int32 zhuang_chair_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->zhuang_chair_id(), target);
  }

  // optional int32 self_chair_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->self_chair_id(), target);
  }

  // optional int32 act_time_limit = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->act_time_limit(), target);
  }

  // optional bool is_reconnect = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_reconnect(), target);
  }

  // optional int32 base_score = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->base_score(), target);
  }

  // optional int32 max_call = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->max_call(), target);
  }

  // repeated int32 bet_base = 9;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(9, this->bet_base_, target);

  // optional .Point21_Reconnect_Data pb_rec_data = 10;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->pb_rec_data_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_Point21_EnterData)
  return target;
}

size_t SC_Point21_EnterData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_Point21_EnterData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .Point21_Player_Info pb_players = 1;
  {
    unsigned int count = this->pb_players_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_players(i));
    }
  }

  // repeated int32 bet_base = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->bet_base_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->bet_base_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional .Point21_Reconnect_Data pb_rec_data = 10;
    if (has_pb_rec_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pb_rec_data_);
    }

    // optional int32 table_state = 2;
    if (has_table_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->table_state());
    }

    // optional int32 zhuang_chair_id = 3;
    if (has_zhuang_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->zhuang_chair_id());
    }

    // optional int32 self_chair_id = 4;
    if (has_self_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->self_chair_id());
    }

    // optional int32 act_time_limit = 5;
    if (has_act_time_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_time_limit());
    }

    // optional bool is_reconnect = 6;
    if (has_is_reconnect()) {
      total_size += 1 + 1;
    }

    // optional int32 base_score = 7;
    if (has_base_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->base_score());
    }

    // optional int32 max_call = 8;
    if (has_max_call()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_call());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_Point21_EnterData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_Point21_EnterData)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_Point21_EnterData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_Point21_EnterData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_Point21_EnterData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_Point21_EnterData)
    MergeFrom(*source);
  }
}

void SC_Point21_EnterData::MergeFrom(const SC_Point21_EnterData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_Point21_EnterData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_players_.MergeFrom(from.pb_players_);
  bet_base_.MergeFrom(from.bet_base_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pb_rec_data()->::Point21_Reconnect_Data::MergeFrom(from.pb_rec_data());
    }
    if (cached_has_bits & 0x00000002u) {
      table_state_ = from.table_state_;
    }
    if (cached_has_bits & 0x00000004u) {
      zhuang_chair_id_ = from.zhuang_chair_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      self_chair_id_ = from.self_chair_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      act_time_limit_ = from.act_time_limit_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_reconnect_ = from.is_reconnect_;
    }
    if (cached_has_bits & 0x00000040u) {
      base_score_ = from.base_score_;
    }
    if (cached_has_bits & 0x00000080u) {
      max_call_ = from.max_call_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_Point21_EnterData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_Point21_EnterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_Point21_EnterData::CopyFrom(const SC_Point21_EnterData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_Point21_EnterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_Point21_EnterData::IsInitialized() const {
  return true;
}

void SC_Point21_EnterData::Swap(SC_Point21_EnterData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_Point21_EnterData::InternalSwap(SC_Point21_EnterData* other) {
  pb_players_.InternalSwap(&other->pb_players_);
  bet_base_.InternalSwap(&other->bet_base_);
  std::swap(pb_rec_data_, other->pb_rec_data_);
  std::swap(table_state_, other->table_state_);
  std::swap(zhuang_chair_id_, other->zhuang_chair_id_);
  std::swap(self_chair_id_, other->self_chair_id_);
  std::swap(act_time_limit_, other->act_time_limit_);
  std::swap(is_reconnect_, other->is_reconnect_);
  std::swap(base_score_, other->base_score_);
  std::swap(max_call_, other->max_call_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_Point21_EnterData::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_Point21_EnterData

// repeated .Point21_Player_Info pb_players = 1;
int SC_Point21_EnterData::pb_players_size() const {
  return pb_players_.size();
}
void SC_Point21_EnterData::clear_pb_players() {
  pb_players_.Clear();
}
const ::Point21_Player_Info& SC_Point21_EnterData::pb_players(int index) const {
  // @@protoc_insertion_point(field_get:SC_Point21_EnterData.pb_players)
  return pb_players_.Get(index);
}
::Point21_Player_Info* SC_Point21_EnterData::mutable_pb_players(int index) {
  // @@protoc_insertion_point(field_mutable:SC_Point21_EnterData.pb_players)
  return pb_players_.Mutable(index);
}
::Point21_Player_Info* SC_Point21_EnterData::add_pb_players() {
  // @@protoc_insertion_point(field_add:SC_Point21_EnterData.pb_players)
  return pb_players_.Add();
}
::google::protobuf::RepeatedPtrField< ::Point21_Player_Info >*
SC_Point21_EnterData::mutable_pb_players() {
  // @@protoc_insertion_point(field_mutable_list:SC_Point21_EnterData.pb_players)
  return &pb_players_;
}
const ::google::protobuf::RepeatedPtrField< ::Point21_Player_Info >&
SC_Point21_EnterData::pb_players() const {
  // @@protoc_insertion_point(field_list:SC_Point21_EnterData.pb_players)
  return pb_players_;
}

// optional int32 table_state = 2;
bool SC_Point21_EnterData::has_table_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_Point21_EnterData::set_has_table_state() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_Point21_EnterData::clear_has_table_state() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_Point21_EnterData::clear_table_state() {
  table_state_ = 0;
  clear_has_table_state();
}
::google::protobuf::int32 SC_Point21_EnterData::table_state() const {
  // @@protoc_insertion_point(field_get:SC_Point21_EnterData.table_state)
  return table_state_;
}
void SC_Point21_EnterData::set_table_state(::google::protobuf::int32 value) {
  set_has_table_state();
  table_state_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_EnterData.table_state)
}

// optional int32 zhuang_chair_id = 3;
bool SC_Point21_EnterData::has_zhuang_chair_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_Point21_EnterData::set_has_zhuang_chair_id() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_Point21_EnterData::clear_has_zhuang_chair_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_Point21_EnterData::clear_zhuang_chair_id() {
  zhuang_chair_id_ = 0;
  clear_has_zhuang_chair_id();
}
::google::protobuf::int32 SC_Point21_EnterData::zhuang_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_Point21_EnterData.zhuang_chair_id)
  return zhuang_chair_id_;
}
void SC_Point21_EnterData::set_zhuang_chair_id(::google::protobuf::int32 value) {
  set_has_zhuang_chair_id();
  zhuang_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_EnterData.zhuang_chair_id)
}

// optional int32 self_chair_id = 4;
bool SC_Point21_EnterData::has_self_chair_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_Point21_EnterData::set_has_self_chair_id() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_Point21_EnterData::clear_has_self_chair_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_Point21_EnterData::clear_self_chair_id() {
  self_chair_id_ = 0;
  clear_has_self_chair_id();
}
::google::protobuf::int32 SC_Point21_EnterData::self_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_Point21_EnterData.self_chair_id)
  return self_chair_id_;
}
void SC_Point21_EnterData::set_self_chair_id(::google::protobuf::int32 value) {
  set_has_self_chair_id();
  self_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_EnterData.self_chair_id)
}

// optional int32 act_time_limit = 5;
bool SC_Point21_EnterData::has_act_time_limit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SC_Point21_EnterData::set_has_act_time_limit() {
  _has_bits_[0] |= 0x00000010u;
}
void SC_Point21_EnterData::clear_has_act_time_limit() {
  _has_bits_[0] &= ~0x00000010u;
}
void SC_Point21_EnterData::clear_act_time_limit() {
  act_time_limit_ = 0;
  clear_has_act_time_limit();
}
::google::protobuf::int32 SC_Point21_EnterData::act_time_limit() const {
  // @@protoc_insertion_point(field_get:SC_Point21_EnterData.act_time_limit)
  return act_time_limit_;
}
void SC_Point21_EnterData::set_act_time_limit(::google::protobuf::int32 value) {
  set_has_act_time_limit();
  act_time_limit_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_EnterData.act_time_limit)
}

// optional bool is_reconnect = 6;
bool SC_Point21_EnterData::has_is_reconnect() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SC_Point21_EnterData::set_has_is_reconnect() {
  _has_bits_[0] |= 0x00000020u;
}
void SC_Point21_EnterData::clear_has_is_reconnect() {
  _has_bits_[0] &= ~0x00000020u;
}
void SC_Point21_EnterData::clear_is_reconnect() {
  is_reconnect_ = false;
  clear_has_is_reconnect();
}
bool SC_Point21_EnterData::is_reconnect() const {
  // @@protoc_insertion_point(field_get:SC_Point21_EnterData.is_reconnect)
  return is_reconnect_;
}
void SC_Point21_EnterData::set_is_reconnect(bool value) {
  set_has_is_reconnect();
  is_reconnect_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_EnterData.is_reconnect)
}

// optional int32 base_score = 7;
bool SC_Point21_EnterData::has_base_score() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SC_Point21_EnterData::set_has_base_score() {
  _has_bits_[0] |= 0x00000040u;
}
void SC_Point21_EnterData::clear_has_base_score() {
  _has_bits_[0] &= ~0x00000040u;
}
void SC_Point21_EnterData::clear_base_score() {
  base_score_ = 0;
  clear_has_base_score();
}
::google::protobuf::int32 SC_Point21_EnterData::base_score() const {
  // @@protoc_insertion_point(field_get:SC_Point21_EnterData.base_score)
  return base_score_;
}
void SC_Point21_EnterData::set_base_score(::google::protobuf::int32 value) {
  set_has_base_score();
  base_score_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_EnterData.base_score)
}

// optional int32 max_call = 8;
bool SC_Point21_EnterData::has_max_call() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SC_Point21_EnterData::set_has_max_call() {
  _has_bits_[0] |= 0x00000080u;
}
void SC_Point21_EnterData::clear_has_max_call() {
  _has_bits_[0] &= ~0x00000080u;
}
void SC_Point21_EnterData::clear_max_call() {
  max_call_ = 0;
  clear_has_max_call();
}
::google::protobuf::int32 SC_Point21_EnterData::max_call() const {
  // @@protoc_insertion_point(field_get:SC_Point21_EnterData.max_call)
  return max_call_;
}
void SC_Point21_EnterData::set_max_call(::google::protobuf::int32 value) {
  set_has_max_call();
  max_call_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_EnterData.max_call)
}

// repeated int32 bet_base = 9;
int SC_Point21_EnterData::bet_base_size() const {
  return bet_base_.size();
}
void SC_Point21_EnterData::clear_bet_base() {
  bet_base_.Clear();
}
::google::protobuf::int32 SC_Point21_EnterData::bet_base(int index) const {
  // @@protoc_insertion_point(field_get:SC_Point21_EnterData.bet_base)
  return bet_base_.Get(index);
}
void SC_Point21_EnterData::set_bet_base(int index, ::google::protobuf::int32 value) {
  bet_base_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_Point21_EnterData.bet_base)
}
void SC_Point21_EnterData::add_bet_base(::google::protobuf::int32 value) {
  bet_base_.Add(value);
  // @@protoc_insertion_point(field_add:SC_Point21_EnterData.bet_base)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_Point21_EnterData::bet_base() const {
  // @@protoc_insertion_point(field_list:SC_Point21_EnterData.bet_base)
  return bet_base_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_Point21_EnterData::mutable_bet_base() {
  // @@protoc_insertion_point(field_mutable_list:SC_Point21_EnterData.bet_base)
  return &bet_base_;
}

// optional .Point21_Reconnect_Data pb_rec_data = 10;
bool SC_Point21_EnterData::has_pb_rec_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_Point21_EnterData::set_has_pb_rec_data() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_Point21_EnterData::clear_has_pb_rec_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_Point21_EnterData::clear_pb_rec_data() {
  if (pb_rec_data_ != NULL) pb_rec_data_->::Point21_Reconnect_Data::Clear();
  clear_has_pb_rec_data();
}
const ::Point21_Reconnect_Data& SC_Point21_EnterData::pb_rec_data() const {
  // @@protoc_insertion_point(field_get:SC_Point21_EnterData.pb_rec_data)
  return pb_rec_data_ != NULL ? *pb_rec_data_
                         : *::Point21_Reconnect_Data::internal_default_instance();
}
::Point21_Reconnect_Data* SC_Point21_EnterData::mutable_pb_rec_data() {
  set_has_pb_rec_data();
  if (pb_rec_data_ == NULL) {
    pb_rec_data_ = new ::Point21_Reconnect_Data;
  }
  // @@protoc_insertion_point(field_mutable:SC_Point21_EnterData.pb_rec_data)
  return pb_rec_data_;
}
::Point21_Reconnect_Data* SC_Point21_EnterData::release_pb_rec_data() {
  // @@protoc_insertion_point(field_release:SC_Point21_EnterData.pb_rec_data)
  clear_has_pb_rec_data();
  ::Point21_Reconnect_Data* temp = pb_rec_data_;
  pb_rec_data_ = NULL;
  return temp;
}
void SC_Point21_EnterData::set_allocated_pb_rec_data(::Point21_Reconnect_Data* pb_rec_data) {
  delete pb_rec_data_;
  pb_rec_data_ = pb_rec_data;
  if (pb_rec_data) {
    set_has_pb_rec_data();
  } else {
    clear_has_pb_rec_data();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_Point21_EnterData.pb_rec_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_Point21_NextTurn::kChairIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_Point21_NextTurn::SC_Point21_NextTurn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_Point21_NextTurn)
}
SC_Point21_NextTurn::SC_Point21_NextTurn(const SC_Point21_NextTurn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chair_id_ = from.chair_id_;
  // @@protoc_insertion_point(copy_constructor:SC_Point21_NextTurn)
}

void SC_Point21_NextTurn::SharedCtor() {
  _cached_size_ = 0;
  chair_id_ = 0;
}

SC_Point21_NextTurn::~SC_Point21_NextTurn() {
  // @@protoc_insertion_point(destructor:SC_Point21_NextTurn)
  SharedDtor();
}

void SC_Point21_NextTurn::SharedDtor() {
}

void SC_Point21_NextTurn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_Point21_NextTurn::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_Point21_NextTurn& SC_Point21_NextTurn::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_Point21_NextTurn* SC_Point21_NextTurn::New(::google::protobuf::Arena* arena) const {
  SC_Point21_NextTurn* n = new SC_Point21_NextTurn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_Point21_NextTurn::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_Point21_NextTurn)
  chair_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_Point21_NextTurn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_Point21_NextTurn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_Point21_NextTurn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_Point21_NextTurn)
  return false;
#undef DO_
}

void SC_Point21_NextTurn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_Point21_NextTurn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chair_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_Point21_NextTurn)
}

::google::protobuf::uint8* SC_Point21_NextTurn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_Point21_NextTurn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chair_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_Point21_NextTurn)
  return target;
}

size_t SC_Point21_NextTurn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_Point21_NextTurn)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 chair_id = 1;
  if (has_chair_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chair_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_Point21_NextTurn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_Point21_NextTurn)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_Point21_NextTurn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_Point21_NextTurn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_Point21_NextTurn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_Point21_NextTurn)
    MergeFrom(*source);
  }
}

void SC_Point21_NextTurn::MergeFrom(const SC_Point21_NextTurn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_Point21_NextTurn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chair_id()) {
    set_chair_id(from.chair_id());
  }
}

void SC_Point21_NextTurn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_Point21_NextTurn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_Point21_NextTurn::CopyFrom(const SC_Point21_NextTurn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_Point21_NextTurn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_Point21_NextTurn::IsInitialized() const {
  return true;
}

void SC_Point21_NextTurn::Swap(SC_Point21_NextTurn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_Point21_NextTurn::InternalSwap(SC_Point21_NextTurn* other) {
  std::swap(chair_id_, other->chair_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_Point21_NextTurn::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_Point21_NextTurn

// optional int32 chair_id = 1;
bool SC_Point21_NextTurn::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_Point21_NextTurn::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_Point21_NextTurn::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_Point21_NextTurn::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_Point21_NextTurn::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_Point21_NextTurn.chair_id)
  return chair_id_;
}
void SC_Point21_NextTurn::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_NextTurn.chair_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_Point21_Game_Finish::kPbPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_Point21_Game_Finish::SC_Point21_Game_Finish()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_Point21_Game_Finish)
}
SC_Point21_Game_Finish::SC_Point21_Game_Finish(const SC_Point21_Game_Finish& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_players_(from.pb_players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SC_Point21_Game_Finish)
}

void SC_Point21_Game_Finish::SharedCtor() {
  _cached_size_ = 0;
}

SC_Point21_Game_Finish::~SC_Point21_Game_Finish() {
  // @@protoc_insertion_point(destructor:SC_Point21_Game_Finish)
  SharedDtor();
}

void SC_Point21_Game_Finish::SharedDtor() {
}

void SC_Point21_Game_Finish::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_Point21_Game_Finish::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_Point21_Game_Finish& SC_Point21_Game_Finish::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_Point21_Game_Finish* SC_Point21_Game_Finish::New(::google::protobuf::Arena* arena) const {
  SC_Point21_Game_Finish* n = new SC_Point21_Game_Finish;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_Point21_Game_Finish::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_Point21_Game_Finish)
  pb_players_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_Point21_Game_Finish::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_Point21_Game_Finish)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Point21_Player_Info pb_players = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_Point21_Game_Finish)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_Point21_Game_Finish)
  return false;
#undef DO_
}

void SC_Point21_Game_Finish::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_Point21_Game_Finish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Point21_Player_Info pb_players = 1;
  for (unsigned int i = 0, n = this->pb_players_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_players(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_Point21_Game_Finish)
}

::google::protobuf::uint8* SC_Point21_Game_Finish::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_Point21_Game_Finish)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Point21_Player_Info pb_players = 1;
  for (unsigned int i = 0, n = this->pb_players_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_players(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_Point21_Game_Finish)
  return target;
}

size_t SC_Point21_Game_Finish::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_Point21_Game_Finish)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .Point21_Player_Info pb_players = 1;
  {
    unsigned int count = this->pb_players_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_players(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_Point21_Game_Finish::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_Point21_Game_Finish)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_Point21_Game_Finish* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_Point21_Game_Finish>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_Point21_Game_Finish)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_Point21_Game_Finish)
    MergeFrom(*source);
  }
}

void SC_Point21_Game_Finish::MergeFrom(const SC_Point21_Game_Finish& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_Point21_Game_Finish)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_players_.MergeFrom(from.pb_players_);
}

void SC_Point21_Game_Finish::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_Point21_Game_Finish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_Point21_Game_Finish::CopyFrom(const SC_Point21_Game_Finish& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_Point21_Game_Finish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_Point21_Game_Finish::IsInitialized() const {
  return true;
}

void SC_Point21_Game_Finish::Swap(SC_Point21_Game_Finish* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_Point21_Game_Finish::InternalSwap(SC_Point21_Game_Finish* other) {
  pb_players_.InternalSwap(&other->pb_players_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_Point21_Game_Finish::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_Point21_Game_Finish

// repeated .Point21_Player_Info pb_players = 1;
int SC_Point21_Game_Finish::pb_players_size() const {
  return pb_players_.size();
}
void SC_Point21_Game_Finish::clear_pb_players() {
  pb_players_.Clear();
}
const ::Point21_Player_Info& SC_Point21_Game_Finish::pb_players(int index) const {
  // @@protoc_insertion_point(field_get:SC_Point21_Game_Finish.pb_players)
  return pb_players_.Get(index);
}
::Point21_Player_Info* SC_Point21_Game_Finish::mutable_pb_players(int index) {
  // @@protoc_insertion_point(field_mutable:SC_Point21_Game_Finish.pb_players)
  return pb_players_.Mutable(index);
}
::Point21_Player_Info* SC_Point21_Game_Finish::add_pb_players() {
  // @@protoc_insertion_point(field_add:SC_Point21_Game_Finish.pb_players)
  return pb_players_.Add();
}
::google::protobuf::RepeatedPtrField< ::Point21_Player_Info >*
SC_Point21_Game_Finish::mutable_pb_players() {
  // @@protoc_insertion_point(field_mutable_list:SC_Point21_Game_Finish.pb_players)
  return &pb_players_;
}
const ::google::protobuf::RepeatedPtrField< ::Point21_Player_Info >&
SC_Point21_Game_Finish::pb_players() const {
  // @@protoc_insertion_point(field_list:SC_Point21_Game_Finish.pb_players)
  return pb_players_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_Point21_Desk_State::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_Point21_Desk_State::SC_Point21_Desk_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fpoint21_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_Point21_Desk_State)
}
SC_Point21_Desk_State::SC_Point21_Desk_State(const SC_Point21_Desk_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:SC_Point21_Desk_State)
}

void SC_Point21_Desk_State::SharedCtor() {
  _cached_size_ = 0;
  state_ = 0;
}

SC_Point21_Desk_State::~SC_Point21_Desk_State() {
  // @@protoc_insertion_point(destructor:SC_Point21_Desk_State)
  SharedDtor();
}

void SC_Point21_Desk_State::SharedDtor() {
}

void SC_Point21_Desk_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_Point21_Desk_State::descriptor() {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_Point21_Desk_State& SC_Point21_Desk_State::default_instance() {
  protobuf_public_5fpoint21_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_Point21_Desk_State* SC_Point21_Desk_State::New(::google::protobuf::Arena* arena) const {
  SC_Point21_Desk_State* n = new SC_Point21_Desk_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_Point21_Desk_State::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_Point21_Desk_State)
  state_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_Point21_Desk_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_Point21_Desk_State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_Point21_Desk_State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_Point21_Desk_State)
  return false;
#undef DO_
}

void SC_Point21_Desk_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_Point21_Desk_State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 state = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_Point21_Desk_State)
}

::google::protobuf::uint8* SC_Point21_Desk_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_Point21_Desk_State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_Point21_Desk_State)
  return target;
}

size_t SC_Point21_Desk_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_Point21_Desk_State)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 state = 1;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_Point21_Desk_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_Point21_Desk_State)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_Point21_Desk_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_Point21_Desk_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_Point21_Desk_State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_Point21_Desk_State)
    MergeFrom(*source);
  }
}

void SC_Point21_Desk_State::MergeFrom(const SC_Point21_Desk_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_Point21_Desk_State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    set_state(from.state());
  }
}

void SC_Point21_Desk_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_Point21_Desk_State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_Point21_Desk_State::CopyFrom(const SC_Point21_Desk_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_Point21_Desk_State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_Point21_Desk_State::IsInitialized() const {
  return true;
}

void SC_Point21_Desk_State::Swap(SC_Point21_Desk_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_Point21_Desk_State::InternalSwap(SC_Point21_Desk_State* other) {
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_Point21_Desk_State::GetMetadata() const {
  protobuf_public_5fpoint21_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fpoint21_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_Point21_Desk_State

// optional int32 state = 1;
bool SC_Point21_Desk_State::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_Point21_Desk_State::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_Point21_Desk_State::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_Point21_Desk_State::clear_state() {
  state_ = 0;
  clear_has_state();
}
::google::protobuf::int32 SC_Point21_Desk_State::state() const {
  // @@protoc_insertion_point(field_get:SC_Point21_Desk_State.state)
  return state_;
}
void SC_Point21_Desk_State::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:SC_Point21_Desk_State.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
