// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: public_zhajinhua.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "public_zhajinhua.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class SC_ZhaJinHuaStartDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaStart> {
} _SC_ZhaJinHuaStart_default_instance_;
class CS_ZhaJinHuaAddScoreDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ZhaJinHuaAddScore> {
} _CS_ZhaJinHuaAddScore_default_instance_;
class SC_ZhaJinHuaAddScoreDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaAddScore> {
} _SC_ZhaJinHuaAddScore_default_instance_;
class CS_ZhaJinHuaGiveUpDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ZhaJinHuaGiveUp> {
} _CS_ZhaJinHuaGiveUp_default_instance_;
class SC_ZhaJinHuaGiveUpDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaGiveUp> {
} _SC_ZhaJinHuaGiveUp_default_instance_;
class CS_ZhaJinHuaLookCardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ZhaJinHuaLookCard> {
} _CS_ZhaJinHuaLookCard_default_instance_;
class SC_ZhaJinHuaLookCardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaLookCard> {
} _SC_ZhaJinHuaLookCard_default_instance_;
class SC_ZhaJinHuaNotifyLookCardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaNotifyLookCard> {
} _SC_ZhaJinHuaNotifyLookCard_default_instance_;
class CS_ZhaJinHuaCompareCardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ZhaJinHuaCompareCard> {
} _CS_ZhaJinHuaCompareCard_default_instance_;
class SC_ZhaJinHuaCompareCardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaCompareCard> {
} _SC_ZhaJinHuaCompareCard_default_instance_;
class ZhaJinHuaPlayerConcludeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ZhaJinHuaPlayerConclude> {
} _ZhaJinHuaPlayerConclude_default_instance_;
class SC_ZhaJinHuaEndDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaEnd> {
} _SC_ZhaJinHuaEnd_default_instance_;
class SC_ZhaJinHuaReConnectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaReConnect> {
} _SC_ZhaJinHuaReConnect_default_instance_;
class SC_ZhaJinHuaWatchDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaWatch> {
} _SC_ZhaJinHuaWatch_default_instance_;
class CS_ZhaJinHuaGetPlayerStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ZhaJinHuaGetPlayerStatus> {
} _CS_ZhaJinHuaGetPlayerStatus_default_instance_;
class CS_ZhaJinHuaGetSitDownDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ZhaJinHuaGetSitDown> {
} _CS_ZhaJinHuaGetSitDown_default_instance_;
class SC_ZhaJinHuaGetSitDownDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaGetSitDown> {
} _SC_ZhaJinHuaGetSitDown_default_instance_;
class SC_ZhaJinHuaLostCardsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaLostCards> {
} _SC_ZhaJinHuaLostCards_default_instance_;
class SC_ZhaJinHuaReadyTimeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaReadyTime> {
} _SC_ZhaJinHuaReadyTime_default_instance_;
class SC_ZhaJinHuaClientReadyTimeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaClientReadyTime> {
} _SC_ZhaJinHuaClientReadyTime_default_instance_;
class CS_ZhaJinHuaPrivateCFG_SetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ZhaJinHuaPrivateCFG_Set> {
} _CS_ZhaJinHuaPrivateCFG_Set_default_instance_;
class CS_ZhaJinHuaPrivateCFG_GetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ZhaJinHuaPrivateCFG_Get> {
} _CS_ZhaJinHuaPrivateCFG_Get_default_instance_;
class SC_ZhaJinHuaPrivateCFGDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaPrivateCFG> {
} _SC_ZhaJinHuaPrivateCFG_default_instance_;
class CS_ZhaJinHuaGameDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ZhaJinHuaGameData> {
} _CS_ZhaJinHuaGameData_default_instance_;
class ZhaJinHuaGameInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ZhaJinHuaGameInfo> {
} _ZhaJinHuaGameInfo_default_instance_;
class SC_ZhaJinHuaGameDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaGameData> {
} _SC_ZhaJinHuaGameData_default_instance_;
class SC_ZhaJinHuaTabCFGDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaTabCFG> {
} _SC_ZhaJinHuaTabCFG_default_instance_;
class CS_ZhaJinHuaTabTirenDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ZhaJinHuaTabTiren> {
} _CS_ZhaJinHuaTabTiren_default_instance_;
class SC_ZhaJinHuaTabTirenDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaTabTiren> {
} _SC_ZhaJinHuaTabTiren_default_instance_;
class CS_ZhaJinHuaTabVoteDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS_ZhaJinHuaTabVote> {
} _CS_ZhaJinHuaTabVote_default_instance_;
class SC_ZhaJinHuaTabVoteDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaTabVote> {
} _SC_ZhaJinHuaTabVote_default_instance_;
class SC_ZhaJinHuaTabVoteResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaTabVoteResult> {
} _SC_ZhaJinHuaTabVoteResult_default_instance_;
class ZhaJinHuaStatisticsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ZhaJinHuaStatistics> {
} _ZhaJinHuaStatistics_default_instance_;
class SC_ZhaJinHuaStatisticsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SC_ZhaJinHuaStatistics> {
} _SC_ZhaJinHuaStatistics_default_instance_;

namespace protobuf_public_5fzhajinhua_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[34];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[32];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaStart, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaStart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaStart, banker_chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaStart, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaStart, guid_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaAddScore, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaAddScore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaAddScore, score_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaAddScore, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaAddScore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaAddScore, add_score_chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaAddScore, cur_chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaAddScore, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaAddScore, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaAddScore, is_all_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaGiveUp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaGiveUp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGiveUp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGiveUp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGiveUp, giveup_chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGiveUp, cur_chair_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaLookCard, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaLookCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaLookCard, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaLookCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaLookCard, lookcard_chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaLookCard, cards_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaNotifyLookCard, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaNotifyLookCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaNotifyLookCard, lookcard_chair_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaCompareCard, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaCompareCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaCompareCard, compare_chair_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaCompareCard, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaCompareCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaCompareCard, cur_chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaCompareCard, win_chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaCompareCard, lost_chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaCompareCard, is_all_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaPlayerConclude, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaPlayerConclude, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaPlayerConclude, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaPlayerConclude, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaPlayerConclude, cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaPlayerConclude, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaPlayerConclude, header_icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaPlayerConclude, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaPlayerConclude, status_),
  1,
  2,
  ~0u,
  3,
  4,
  0,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaEnd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaEnd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaEnd, win_chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaEnd, pb_conclude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaEnd, tax_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaReConnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaReConnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaReConnect, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaReConnect, banker_chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaReConnect, isseecard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaReConnect, cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaReConnect, dead_chair_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaReConnect, totalmoney_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaReConnect, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaReConnect, round_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaReConnect, playermoney_),
  0,
  1,
  2,
  ~0u,
  ~0u,
  3,
  4,
  5,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaWatch, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaWatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaWatch, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaWatch, isseecard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaWatch, banker_chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaWatch, room_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaWatch, totalmoney_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaWatch, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaWatch, round_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaWatch, playermoney_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaWatch, allbet_),
  ~0u,
  ~0u,
  0,
  1,
  2,
  3,
  4,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaGetPlayerStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaGetPlayerStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaGetSitDown, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaGetSitDown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGetSitDown, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGetSitDown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGetSitDown, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGetSitDown, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGetSitDown, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGetSitDown, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGetSitDown, pb_visual_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGetSitDown, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGetSitDown, first_game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGetSitDown, second_game_type_),
  0,
  1,
  2,
  3,
  ~0u,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaLostCards, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaLostCards, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaLostCards, win_cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaLostCards, loster_cards_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaReadyTime, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaReadyTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaReadyTime, time_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaClientReadyTime, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaClientReadyTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaClientReadyTime, time_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaPrivateCFG_Set, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaPrivateCFG_Set, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaPrivateCFG_Set, first_see_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaPrivateCFG_Set, first_compare_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaPrivateCFG_Set, no_money_compare_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaPrivateCFG_Set, more_round_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaPrivateCFG_Get, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaPrivateCFG_Get, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaPrivateCFG, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaPrivateCFG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaPrivateCFG, first_see_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaPrivateCFG, first_compare_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaPrivateCFG, no_money_compare_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaPrivateCFG, more_round_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaGameData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaGameData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaGameInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaGameInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaGameInfo, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaGameInfo, header_icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaGameInfo, cards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaGameInfo, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaGameInfo, chair_id_),
  0,
  1,
  ~0u,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGameData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGameData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGameData, pb_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaGameData, str_time_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabCFG, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabCFG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabCFG, score_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabCFG, chair_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabCFG, lost_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabCFG, vote_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabCFG, private_room_id_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaTabTiren, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaTabTiren, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaTabTiren, chair_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabTiren, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabTiren, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabTiren, chair_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaTabVote, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaTabVote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS_ZhaJinHuaTabVote, bret_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabVote, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabVote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabVote, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabVote, bret_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabVoteResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabVoteResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaTabVoteResult, bret_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaStatistics, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaStatistics, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaStatistics, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhaJinHuaStatistics, money_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaStatistics, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SC_ZhaJinHuaStatistics, pb_info_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(SC_ZhaJinHuaStart)},
  { 11, 17, sizeof(CS_ZhaJinHuaAddScore)},
  { 18, 28, sizeof(SC_ZhaJinHuaAddScore)},
  { 33, 38, sizeof(CS_ZhaJinHuaGiveUp)},
  { 38, 45, sizeof(SC_ZhaJinHuaGiveUp)},
  { 47, 52, sizeof(CS_ZhaJinHuaLookCard)},
  { 52, 59, sizeof(SC_ZhaJinHuaLookCard)},
  { 61, 67, sizeof(SC_ZhaJinHuaNotifyLookCard)},
  { 68, 74, sizeof(CS_ZhaJinHuaCompareCard)},
  { 75, 84, sizeof(SC_ZhaJinHuaCompareCard)},
  { 88, 100, sizeof(ZhaJinHuaPlayerConclude)},
  { 107, 115, sizeof(SC_ZhaJinHuaEnd)},
  { 118, 132, sizeof(SC_ZhaJinHuaReConnect)},
  { 141, 155, sizeof(SC_ZhaJinHuaWatch)},
  { 164, 169, sizeof(CS_ZhaJinHuaGetPlayerStatus)},
  { 169, 174, sizeof(CS_ZhaJinHuaGetSitDown)},
  { 174, 187, sizeof(SC_ZhaJinHuaGetSitDown)},
  { 195, 202, sizeof(SC_ZhaJinHuaLostCards)},
  { 204, 210, sizeof(SC_ZhaJinHuaReadyTime)},
  { 211, 217, sizeof(SC_ZhaJinHuaClientReadyTime)},
  { 218, 227, sizeof(CS_ZhaJinHuaPrivateCFG_Set)},
  { 231, 236, sizeof(CS_ZhaJinHuaPrivateCFG_Get)},
  { 236, 245, sizeof(SC_ZhaJinHuaPrivateCFG)},
  { 249, 254, sizeof(CS_ZhaJinHuaGameData)},
  { 254, 264, sizeof(ZhaJinHuaGameInfo)},
  { 269, 276, sizeof(SC_ZhaJinHuaGameData)},
  { 278, 288, sizeof(SC_ZhaJinHuaTabCFG)},
  { 293, 299, sizeof(CS_ZhaJinHuaTabTiren)},
  { 300, 306, sizeof(SC_ZhaJinHuaTabTiren)},
  { 307, 313, sizeof(CS_ZhaJinHuaTabVote)},
  { 314, 321, sizeof(SC_ZhaJinHuaTabVote)},
  { 323, 329, sizeof(SC_ZhaJinHuaTabVoteResult)},
  { 330, 338, sizeof(ZhaJinHuaStatistics)},
  { 341, 347, sizeof(SC_ZhaJinHuaStatistics)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaStart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ZhaJinHuaAddScore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaAddScore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ZhaJinHuaGiveUp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaGiveUp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ZhaJinHuaLookCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaLookCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaNotifyLookCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ZhaJinHuaCompareCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaCompareCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZhaJinHuaPlayerConclude_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaEnd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaReConnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaWatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ZhaJinHuaGetPlayerStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ZhaJinHuaGetSitDown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaGetSitDown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaLostCards_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaReadyTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaClientReadyTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ZhaJinHuaPrivateCFG_Set_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ZhaJinHuaPrivateCFG_Get_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaPrivateCFG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ZhaJinHuaGameData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZhaJinHuaGameInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaGameData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaTabCFG_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ZhaJinHuaTabTiren_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaTabTiren_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS_ZhaJinHuaTabVote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaTabVote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaTabVoteResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZhaJinHuaStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SC_ZhaJinHuaStatistics_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "public_zhajinhua.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 34);
}

}  // namespace

void TableStruct::Shutdown() {
  _SC_ZhaJinHuaStart_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CS_ZhaJinHuaAddScore_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SC_ZhaJinHuaAddScore_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CS_ZhaJinHuaGiveUp_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _SC_ZhaJinHuaGiveUp_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _CS_ZhaJinHuaLookCard_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _SC_ZhaJinHuaLookCard_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _SC_ZhaJinHuaNotifyLookCard_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _CS_ZhaJinHuaCompareCard_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _SC_ZhaJinHuaCompareCard_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _ZhaJinHuaPlayerConclude_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _SC_ZhaJinHuaEnd_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _SC_ZhaJinHuaReConnect_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _SC_ZhaJinHuaWatch_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _CS_ZhaJinHuaGetPlayerStatus_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _CS_ZhaJinHuaGetSitDown_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _SC_ZhaJinHuaGetSitDown_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _SC_ZhaJinHuaLostCards_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _SC_ZhaJinHuaReadyTime_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _SC_ZhaJinHuaClientReadyTime_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _CS_ZhaJinHuaPrivateCFG_Set_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _CS_ZhaJinHuaPrivateCFG_Get_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _SC_ZhaJinHuaPrivateCFG_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _CS_ZhaJinHuaGameData_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _ZhaJinHuaGameInfo_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _SC_ZhaJinHuaGameData_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _SC_ZhaJinHuaTabCFG_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _CS_ZhaJinHuaTabTiren_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _SC_ZhaJinHuaTabTiren_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _CS_ZhaJinHuaTabVote_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _SC_ZhaJinHuaTabVote_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _SC_ZhaJinHuaTabVoteResult_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _ZhaJinHuaStatistics_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _SC_ZhaJinHuaStatistics_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_public_5fplayer_2eproto::InitDefaults();
  _SC_ZhaJinHuaStart_default_instance_.DefaultConstruct();
  _CS_ZhaJinHuaAddScore_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaAddScore_default_instance_.DefaultConstruct();
  _CS_ZhaJinHuaGiveUp_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaGiveUp_default_instance_.DefaultConstruct();
  _CS_ZhaJinHuaLookCard_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaLookCard_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaNotifyLookCard_default_instance_.DefaultConstruct();
  _CS_ZhaJinHuaCompareCard_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaCompareCard_default_instance_.DefaultConstruct();
  _ZhaJinHuaPlayerConclude_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaEnd_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaReConnect_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaWatch_default_instance_.DefaultConstruct();
  _CS_ZhaJinHuaGetPlayerStatus_default_instance_.DefaultConstruct();
  _CS_ZhaJinHuaGetSitDown_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaGetSitDown_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaLostCards_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaReadyTime_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaClientReadyTime_default_instance_.DefaultConstruct();
  _CS_ZhaJinHuaPrivateCFG_Set_default_instance_.DefaultConstruct();
  _CS_ZhaJinHuaPrivateCFG_Get_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaPrivateCFG_default_instance_.DefaultConstruct();
  _CS_ZhaJinHuaGameData_default_instance_.DefaultConstruct();
  _ZhaJinHuaGameInfo_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaGameData_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaTabCFG_default_instance_.DefaultConstruct();
  _CS_ZhaJinHuaTabTiren_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaTabTiren_default_instance_.DefaultConstruct();
  _CS_ZhaJinHuaTabVote_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaTabVote_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaTabVoteResult_default_instance_.DefaultConstruct();
  _ZhaJinHuaStatistics_default_instance_.DefaultConstruct();
  _SC_ZhaJinHuaStatistics_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\026public_zhajinhua.proto\032\023public_player."
      "proto\"^\n\021SC_ZhaJinHuaStart\022\027\n\017banker_cha"
      "ir_id\030\001 \001(\005\022\020\n\010chair_id\030\002 \003(\005\022\014\n\004guid\030\003 "
      "\003(\005\"\020\n\005MsgID\022\007\n\002ID\020\202}\"C\n\024CS_ZhaJinHuaAdd"
      "Score\022\r\n\005score\030\001 \001(\003\"\034\n\005MsgID\022\007\n\002ID\020\203}\022\n"
      "\n\006Target\020\002\"\210\001\n\024SC_ZhaJinHuaAddScore\022\032\n\022a"
      "dd_score_chair_id\030\001 \001(\005\022\024\n\014cur_chair_id\030"
      "\002 \001(\005\022\r\n\005score\030\003 \001(\003\022\r\n\005money\030\004 \001(\003\022\016\n\006i"
      "s_all\030\005 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\204}\"2\n\022CS_ZhaJ"
      "inHuaGiveUp\"\034\n\005MsgID\022\007\n\002ID\020\205}\022\n\n\006Target\020"
      "\002\"U\n\022SC_ZhaJinHuaGiveUp\022\027\n\017giveup_chair_"
      "id\030\001 \001(\005\022\024\n\014cur_chair_id\030\002 \001(\005\"\020\n\005MsgID\022"
      "\007\n\002ID\020\206}\"4\n\024CS_ZhaJinHuaLookCard\"\034\n\005MsgI"
      "D\022\007\n\002ID\020\207}\022\n\n\006Target\020\002\"R\n\024SC_ZhaJinHuaLo"
      "okCard\022\031\n\021lookcard_chair_id\030\001 \001(\005\022\r\n\005car"
      "ds\030\002 \003(\005\"\020\n\005MsgID\022\007\n\002ID\020\210}\"I\n\032SC_ZhaJinH"
      "uaNotifyLookCard\022\031\n\021lookcard_chair_id\030\001 "
      "\001(\005\"\020\n\005MsgID\022\007\n\002ID\020\211}\"Q\n\027CS_ZhaJinHuaCom"
      "pareCard\022\030\n\020compare_chair_id\030\001 \001(\005\"\034\n\005Ms"
      "gID\022\007\n\002ID\020\212}\022\n\n\006Target\020\002\"~\n\027SC_ZhaJinHua"
      "CompareCard\022\024\n\014cur_chair_id\030\001 \001(\005\022\024\n\014win"
      "_chair_id\030\002 \001(\005\022\025\n\rlost_chair_id\030\003 \001(\005\022\016"
      "\n\006is_all\030\004 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\213}\"\215\001\n\027Zha"
      "JinHuaPlayerConclude\022\020\n\010chair_id\030\001 \001(\005\022\r"
      "\n\005score\030\002 \001(\005\022\r\n\005cards\030\003 \003(\005\022\014\n\004guid\030\004 \001"
      "(\005\022\026\n\013header_icon\030\005 \001(\005:\0010\022\014\n\004name\030\006 \001(\t"
      "\022\016\n\006status\030\007 \001(\005\"u\n\017SC_ZhaJinHuaEnd\022\024\n\014w"
      "in_chair_id\030\001 \001(\005\022-\n\013pb_conclude\030\002 \003(\0132\030"
      ".ZhaJinHuaPlayerConclude\022\013\n\003tax\030\003 \001(\005\"\020\n"
      "\005MsgID\022\007\n\002ID\020\214}\"\321\001\n\025SC_ZhaJinHuaReConnec"
      "t\022\020\n\010chair_id\030\001 \001(\005\022\027\n\017banker_chair_id\030\002"
      " \001(\005\022\021\n\tisseecard\030\003 \001(\010\022\r\n\005cards\030\004 \003(\005\022\022"
      "\n\ndead_chair\030\005 \003(\005\022\022\n\ntotalmoney\030\006 \001(\005\022\r"
      "\n\005score\030\007 \001(\005\022\r\n\005round\030\010 \001(\005\022\023\n\013playermo"
      "ney\030\t \003(\005\"\020\n\005MsgID\022\007\n\002ID\020\215}\"\315\001\n\021SC_ZhaJi"
      "nHuaWatch\022\016\n\006status\030\001 \003(\005\022\021\n\tisseecard\030\002"
      " \003(\010\022\027\n\017banker_chair_id\030\003 \001(\005\022\023\n\013room_st"
      "atus\030\004 \001(\005\022\022\n\ntotalmoney\030\005 \001(\005\022\r\n\005score\030"
      "\006 \001(\005\022\r\n\005round\030\007 \001(\005\022\023\n\013playermoney\030\010 \003("
      "\005\022\016\n\006allbet\030\t \003(\005\"\020\n\005MsgID\022\007\n\002ID\020\216}\";\n\033C"
      "S_ZhaJinHuaGetPlayerStatus\"\034\n\005MsgID\022\007\n\002I"
      "D\020\217}\022\n\n\006Target\020\002\"6\n\026CS_ZhaJinHuaGetSitDo"
      "wn\"\034\n\005MsgID\022\007\n\002ID\020\220}\022\n\n\006Target\020\002\"\336\001\n\026SC_"
      "ZhaJinHuaGetSitDown\022\017\n\007room_id\030\001 \001(\005\022\020\n\010"
      "table_id\030\002 \001(\005\022\020\n\010chair_id\030\003 \001(\005\022\016\n\006resu"
      "lt\030\004 \001(\005\022)\n\016pb_visual_info\030\005 \003(\0132\021.Playe"
      "rVisualInfo\022\017\n\007game_id\030\006 \001(\005\022\027\n\017first_ga"
      "me_type\030\007 \001(\005\022\030\n\020second_game_type\030\010 \001(\005\""
      "\020\n\005MsgID\022\007\n\002ID\020\221}\"R\n\025SC_ZhaJinHuaLostCar"
      "ds\022\021\n\twin_cards\030\001 \003(\005\022\024\n\014loster_cards\030\002 "
      "\003(\005\"\020\n\005MsgID\022\007\n\002ID\020\222}\"7\n\025SC_ZhaJinHuaRea"
      "dyTime\022\014\n\004time\030\001 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\223}\"="
      "\n\033SC_ZhaJinHuaClientReadyTime\022\014\n\004time\030\001 "
      "\001(\005\"\020\n\005MsgID\022\007\n\002ID\020\224}\"\226\001\n\032CS_ZhaJinHuaPr"
      "ivateCFG_Set\022\025\n\tfirst_see\030\001 \001(\005:\002-1\022\031\n\rf"
      "irst_compare\030\002 \001(\005:\002-1\022\034\n\020no_money_compa"
      "re\030\003 \001(\005:\002-1\022\026\n\nmore_round\030\004 \001(\005:\002-1\"\020\n\005"
      "MsgID\022\007\n\002ID\020\225}\".\n\032CS_ZhaJinHuaPrivateCFG"
      "_Get\"\020\n\005MsgID\022\007\n\002ID\020\226}\"\222\001\n\026SC_ZhaJinHuaP"
      "rivateCFG\022\025\n\tfirst_see\030\001 \001(\005:\002-1\022\031\n\rfirs"
      "t_compare\030\002 \001(\005:\002-1\022\034\n\020no_money_compare\030"
      "\003 \001(\005:\002-1\022\026\n\nmore_round\030\004 \001(\005:\002-1\"\020\n\005Msg"
      "ID\022\007\n\002ID\020\227}\"(\n\024CS_ZhaJinHuaGameData\"\020\n\005M"
      "sgID\022\007\n\002ID\020\230}\"k\n\021ZhaJinHuaGameInfo\022\016\n\006st"
      "atus\030\001 \001(\005\022\026\n\013header_icon\030\002 \001(\005:\0010\022\r\n\005ca"
      "rds\030\003 \003(\005\022\r\n\005money\030\004 \001(\005\022\020\n\010chair_id\030\005 \001"
      "(\005\"_\n\024SC_ZhaJinHuaGameData\022#\n\007pb_info\030\001 "
      "\003(\0132\022.ZhaJinHuaGameInfo\022\020\n\010str_time\030\002 \001("
      "\t\"\020\n\005MsgID\022\007\n\002ID\020\231}\"\217\001\n\022SC_ZhaJinHuaTabC"
      "FG\022\022\n\nscore_type\030\001 \001(\005\022\021\n\tchair_num\030\002 \001("
      "\005\022\022\n\nlost_score\030\003 \001(\005\022\023\n\013vote_result\030\004 \001"
      "(\010\022\027\n\017private_room_id\030\005 \001(\005\"\020\n\005MsgID\022\007\n\002"
      "ID\020\232}\":\n\024CS_ZhaJinHuaTabTiren\022\020\n\010chair_i"
      "d\030\001 \001(\005\"\020\n\005MsgID\022\007\n\002ID\020\233}\":\n\024SC_ZhaJinHu"
      "aTabTiren\022\020\n\010chair_id\030\001 \001(\005\"\020\n\005MsgID\022\007\n\002"
      "ID\020\234}\"5\n\023CS_ZhaJinHuaTabVote\022\014\n\004bret\030\001 \001"
      "(\010\"\020\n\005MsgID\022\007\n\002ID\020\235}\"G\n\023SC_ZhaJinHuaTabV"
      "ote\022\020\n\010chair_id\030\001 \001(\005\022\014\n\004bret\030\002 \001(\010\"\020\n\005M"
      "sgID\022\007\n\002ID\020\236}\";\n\031SC_ZhaJinHuaTabVoteResu"
      "lt\022\014\n\004bret\030\001 \001(\010\"\020\n\005MsgID\022\007\n\002ID\020\237}\"H\n\023Zh"
      "aJinHuaStatistics\022\020\n\010chair_id\030\001 \001(\005\022\020\n\010n"
      "ickname\030\002 \001(\t\022\r\n\005money\030\003 \001(\005\"Q\n\026SC_ZhaJi"
      "nHuaStatistics\022%\n\007pb_info\030\001 \003(\0132\024.ZhaJin"
      "HuaStatistics\"\020\n\005MsgID\022\007\n\002ID\020\240}*\231\002\n\023ZHAJ"
      "INHUA_CARD_TYPE\022\035\n\031ZHAJINHUA_CARD_TYPE_E"
      "RROR\020\000\022\037\n\033ZHAJINHUA_CARD_TYPE_SPECIAL\020\001\022"
      "\036\n\032ZHAJINHUA_CARD_TYPE_SINGLE\020\002\022\036\n\032ZHAJI"
      "NHUA_CARD_TYPE_DOUBLE\020\003\022\037\n\033ZHAJINHUA_CAR"
      "D_TYPE_SHUN_ZI\020\004\022\037\n\033ZHAJINHUA_CARD_TYPE_"
      "JIN_HUA\020\005\022 \n\034ZHAJINHUA_CARD_TYPE_SHUN_JI"
      "N\020\006\022\036\n\032ZHAJINHUA_CARD_TYPE_BAO_ZI\020\007"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3635);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "public_zhajinhua.proto", &protobuf_RegisterTypes);
  ::protobuf_public_5fplayer_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_public_5fzhajinhua_2eproto

const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaStart_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[0];
}
bool SC_ZhaJinHuaStart_MsgID_IsValid(int value) {
  switch (value) {
    case 16002:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaStart_MsgID SC_ZhaJinHuaStart::ID;
const SC_ZhaJinHuaStart_MsgID SC_ZhaJinHuaStart::MsgID_MIN;
const SC_ZhaJinHuaStart_MsgID SC_ZhaJinHuaStart::MsgID_MAX;
const int SC_ZhaJinHuaStart::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ZhaJinHuaAddScore_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[1];
}
bool CS_ZhaJinHuaAddScore_MsgID_IsValid(int value) {
  switch (value) {
    case 2:
    case 16003:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ZhaJinHuaAddScore_MsgID CS_ZhaJinHuaAddScore::ID;
const CS_ZhaJinHuaAddScore_MsgID CS_ZhaJinHuaAddScore::Target;
const CS_ZhaJinHuaAddScore_MsgID CS_ZhaJinHuaAddScore::MsgID_MIN;
const CS_ZhaJinHuaAddScore_MsgID CS_ZhaJinHuaAddScore::MsgID_MAX;
const int CS_ZhaJinHuaAddScore::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaAddScore_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[2];
}
bool SC_ZhaJinHuaAddScore_MsgID_IsValid(int value) {
  switch (value) {
    case 16004:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaAddScore_MsgID SC_ZhaJinHuaAddScore::ID;
const SC_ZhaJinHuaAddScore_MsgID SC_ZhaJinHuaAddScore::MsgID_MIN;
const SC_ZhaJinHuaAddScore_MsgID SC_ZhaJinHuaAddScore::MsgID_MAX;
const int SC_ZhaJinHuaAddScore::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ZhaJinHuaGiveUp_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[3];
}
bool CS_ZhaJinHuaGiveUp_MsgID_IsValid(int value) {
  switch (value) {
    case 2:
    case 16005:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ZhaJinHuaGiveUp_MsgID CS_ZhaJinHuaGiveUp::ID;
const CS_ZhaJinHuaGiveUp_MsgID CS_ZhaJinHuaGiveUp::Target;
const CS_ZhaJinHuaGiveUp_MsgID CS_ZhaJinHuaGiveUp::MsgID_MIN;
const CS_ZhaJinHuaGiveUp_MsgID CS_ZhaJinHuaGiveUp::MsgID_MAX;
const int CS_ZhaJinHuaGiveUp::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaGiveUp_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[4];
}
bool SC_ZhaJinHuaGiveUp_MsgID_IsValid(int value) {
  switch (value) {
    case 16006:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaGiveUp_MsgID SC_ZhaJinHuaGiveUp::ID;
const SC_ZhaJinHuaGiveUp_MsgID SC_ZhaJinHuaGiveUp::MsgID_MIN;
const SC_ZhaJinHuaGiveUp_MsgID SC_ZhaJinHuaGiveUp::MsgID_MAX;
const int SC_ZhaJinHuaGiveUp::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ZhaJinHuaLookCard_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[5];
}
bool CS_ZhaJinHuaLookCard_MsgID_IsValid(int value) {
  switch (value) {
    case 2:
    case 16007:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ZhaJinHuaLookCard_MsgID CS_ZhaJinHuaLookCard::ID;
const CS_ZhaJinHuaLookCard_MsgID CS_ZhaJinHuaLookCard::Target;
const CS_ZhaJinHuaLookCard_MsgID CS_ZhaJinHuaLookCard::MsgID_MIN;
const CS_ZhaJinHuaLookCard_MsgID CS_ZhaJinHuaLookCard::MsgID_MAX;
const int CS_ZhaJinHuaLookCard::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaLookCard_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[6];
}
bool SC_ZhaJinHuaLookCard_MsgID_IsValid(int value) {
  switch (value) {
    case 16008:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaLookCard_MsgID SC_ZhaJinHuaLookCard::ID;
const SC_ZhaJinHuaLookCard_MsgID SC_ZhaJinHuaLookCard::MsgID_MIN;
const SC_ZhaJinHuaLookCard_MsgID SC_ZhaJinHuaLookCard::MsgID_MAX;
const int SC_ZhaJinHuaLookCard::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaNotifyLookCard_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[7];
}
bool SC_ZhaJinHuaNotifyLookCard_MsgID_IsValid(int value) {
  switch (value) {
    case 16009:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaNotifyLookCard_MsgID SC_ZhaJinHuaNotifyLookCard::ID;
const SC_ZhaJinHuaNotifyLookCard_MsgID SC_ZhaJinHuaNotifyLookCard::MsgID_MIN;
const SC_ZhaJinHuaNotifyLookCard_MsgID SC_ZhaJinHuaNotifyLookCard::MsgID_MAX;
const int SC_ZhaJinHuaNotifyLookCard::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ZhaJinHuaCompareCard_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[8];
}
bool CS_ZhaJinHuaCompareCard_MsgID_IsValid(int value) {
  switch (value) {
    case 2:
    case 16010:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ZhaJinHuaCompareCard_MsgID CS_ZhaJinHuaCompareCard::ID;
const CS_ZhaJinHuaCompareCard_MsgID CS_ZhaJinHuaCompareCard::Target;
const CS_ZhaJinHuaCompareCard_MsgID CS_ZhaJinHuaCompareCard::MsgID_MIN;
const CS_ZhaJinHuaCompareCard_MsgID CS_ZhaJinHuaCompareCard::MsgID_MAX;
const int CS_ZhaJinHuaCompareCard::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaCompareCard_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[9];
}
bool SC_ZhaJinHuaCompareCard_MsgID_IsValid(int value) {
  switch (value) {
    case 16011:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaCompareCard_MsgID SC_ZhaJinHuaCompareCard::ID;
const SC_ZhaJinHuaCompareCard_MsgID SC_ZhaJinHuaCompareCard::MsgID_MIN;
const SC_ZhaJinHuaCompareCard_MsgID SC_ZhaJinHuaCompareCard::MsgID_MAX;
const int SC_ZhaJinHuaCompareCard::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaEnd_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[10];
}
bool SC_ZhaJinHuaEnd_MsgID_IsValid(int value) {
  switch (value) {
    case 16012:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaEnd_MsgID SC_ZhaJinHuaEnd::ID;
const SC_ZhaJinHuaEnd_MsgID SC_ZhaJinHuaEnd::MsgID_MIN;
const SC_ZhaJinHuaEnd_MsgID SC_ZhaJinHuaEnd::MsgID_MAX;
const int SC_ZhaJinHuaEnd::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaReConnect_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[11];
}
bool SC_ZhaJinHuaReConnect_MsgID_IsValid(int value) {
  switch (value) {
    case 16013:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaReConnect_MsgID SC_ZhaJinHuaReConnect::ID;
const SC_ZhaJinHuaReConnect_MsgID SC_ZhaJinHuaReConnect::MsgID_MIN;
const SC_ZhaJinHuaReConnect_MsgID SC_ZhaJinHuaReConnect::MsgID_MAX;
const int SC_ZhaJinHuaReConnect::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaWatch_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[12];
}
bool SC_ZhaJinHuaWatch_MsgID_IsValid(int value) {
  switch (value) {
    case 16014:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaWatch_MsgID SC_ZhaJinHuaWatch::ID;
const SC_ZhaJinHuaWatch_MsgID SC_ZhaJinHuaWatch::MsgID_MIN;
const SC_ZhaJinHuaWatch_MsgID SC_ZhaJinHuaWatch::MsgID_MAX;
const int SC_ZhaJinHuaWatch::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ZhaJinHuaGetPlayerStatus_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[13];
}
bool CS_ZhaJinHuaGetPlayerStatus_MsgID_IsValid(int value) {
  switch (value) {
    case 2:
    case 16015:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ZhaJinHuaGetPlayerStatus_MsgID CS_ZhaJinHuaGetPlayerStatus::ID;
const CS_ZhaJinHuaGetPlayerStatus_MsgID CS_ZhaJinHuaGetPlayerStatus::Target;
const CS_ZhaJinHuaGetPlayerStatus_MsgID CS_ZhaJinHuaGetPlayerStatus::MsgID_MIN;
const CS_ZhaJinHuaGetPlayerStatus_MsgID CS_ZhaJinHuaGetPlayerStatus::MsgID_MAX;
const int CS_ZhaJinHuaGetPlayerStatus::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ZhaJinHuaGetSitDown_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[14];
}
bool CS_ZhaJinHuaGetSitDown_MsgID_IsValid(int value) {
  switch (value) {
    case 2:
    case 16016:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ZhaJinHuaGetSitDown_MsgID CS_ZhaJinHuaGetSitDown::ID;
const CS_ZhaJinHuaGetSitDown_MsgID CS_ZhaJinHuaGetSitDown::Target;
const CS_ZhaJinHuaGetSitDown_MsgID CS_ZhaJinHuaGetSitDown::MsgID_MIN;
const CS_ZhaJinHuaGetSitDown_MsgID CS_ZhaJinHuaGetSitDown::MsgID_MAX;
const int CS_ZhaJinHuaGetSitDown::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaGetSitDown_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[15];
}
bool SC_ZhaJinHuaGetSitDown_MsgID_IsValid(int value) {
  switch (value) {
    case 16017:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaGetSitDown_MsgID SC_ZhaJinHuaGetSitDown::ID;
const SC_ZhaJinHuaGetSitDown_MsgID SC_ZhaJinHuaGetSitDown::MsgID_MIN;
const SC_ZhaJinHuaGetSitDown_MsgID SC_ZhaJinHuaGetSitDown::MsgID_MAX;
const int SC_ZhaJinHuaGetSitDown::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaLostCards_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[16];
}
bool SC_ZhaJinHuaLostCards_MsgID_IsValid(int value) {
  switch (value) {
    case 16018:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaLostCards_MsgID SC_ZhaJinHuaLostCards::ID;
const SC_ZhaJinHuaLostCards_MsgID SC_ZhaJinHuaLostCards::MsgID_MIN;
const SC_ZhaJinHuaLostCards_MsgID SC_ZhaJinHuaLostCards::MsgID_MAX;
const int SC_ZhaJinHuaLostCards::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaReadyTime_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[17];
}
bool SC_ZhaJinHuaReadyTime_MsgID_IsValid(int value) {
  switch (value) {
    case 16019:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaReadyTime_MsgID SC_ZhaJinHuaReadyTime::ID;
const SC_ZhaJinHuaReadyTime_MsgID SC_ZhaJinHuaReadyTime::MsgID_MIN;
const SC_ZhaJinHuaReadyTime_MsgID SC_ZhaJinHuaReadyTime::MsgID_MAX;
const int SC_ZhaJinHuaReadyTime::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaClientReadyTime_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[18];
}
bool SC_ZhaJinHuaClientReadyTime_MsgID_IsValid(int value) {
  switch (value) {
    case 16020:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaClientReadyTime_MsgID SC_ZhaJinHuaClientReadyTime::ID;
const SC_ZhaJinHuaClientReadyTime_MsgID SC_ZhaJinHuaClientReadyTime::MsgID_MIN;
const SC_ZhaJinHuaClientReadyTime_MsgID SC_ZhaJinHuaClientReadyTime::MsgID_MAX;
const int SC_ZhaJinHuaClientReadyTime::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ZhaJinHuaPrivateCFG_Set_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[19];
}
bool CS_ZhaJinHuaPrivateCFG_Set_MsgID_IsValid(int value) {
  switch (value) {
    case 16021:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ZhaJinHuaPrivateCFG_Set_MsgID CS_ZhaJinHuaPrivateCFG_Set::ID;
const CS_ZhaJinHuaPrivateCFG_Set_MsgID CS_ZhaJinHuaPrivateCFG_Set::MsgID_MIN;
const CS_ZhaJinHuaPrivateCFG_Set_MsgID CS_ZhaJinHuaPrivateCFG_Set::MsgID_MAX;
const int CS_ZhaJinHuaPrivateCFG_Set::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ZhaJinHuaPrivateCFG_Get_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[20];
}
bool CS_ZhaJinHuaPrivateCFG_Get_MsgID_IsValid(int value) {
  switch (value) {
    case 16022:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ZhaJinHuaPrivateCFG_Get_MsgID CS_ZhaJinHuaPrivateCFG_Get::ID;
const CS_ZhaJinHuaPrivateCFG_Get_MsgID CS_ZhaJinHuaPrivateCFG_Get::MsgID_MIN;
const CS_ZhaJinHuaPrivateCFG_Get_MsgID CS_ZhaJinHuaPrivateCFG_Get::MsgID_MAX;
const int CS_ZhaJinHuaPrivateCFG_Get::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaPrivateCFG_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[21];
}
bool SC_ZhaJinHuaPrivateCFG_MsgID_IsValid(int value) {
  switch (value) {
    case 16023:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaPrivateCFG_MsgID SC_ZhaJinHuaPrivateCFG::ID;
const SC_ZhaJinHuaPrivateCFG_MsgID SC_ZhaJinHuaPrivateCFG::MsgID_MIN;
const SC_ZhaJinHuaPrivateCFG_MsgID SC_ZhaJinHuaPrivateCFG::MsgID_MAX;
const int SC_ZhaJinHuaPrivateCFG::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ZhaJinHuaGameData_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[22];
}
bool CS_ZhaJinHuaGameData_MsgID_IsValid(int value) {
  switch (value) {
    case 16024:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ZhaJinHuaGameData_MsgID CS_ZhaJinHuaGameData::ID;
const CS_ZhaJinHuaGameData_MsgID CS_ZhaJinHuaGameData::MsgID_MIN;
const CS_ZhaJinHuaGameData_MsgID CS_ZhaJinHuaGameData::MsgID_MAX;
const int CS_ZhaJinHuaGameData::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaGameData_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[23];
}
bool SC_ZhaJinHuaGameData_MsgID_IsValid(int value) {
  switch (value) {
    case 16025:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaGameData_MsgID SC_ZhaJinHuaGameData::ID;
const SC_ZhaJinHuaGameData_MsgID SC_ZhaJinHuaGameData::MsgID_MIN;
const SC_ZhaJinHuaGameData_MsgID SC_ZhaJinHuaGameData::MsgID_MAX;
const int SC_ZhaJinHuaGameData::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaTabCFG_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[24];
}
bool SC_ZhaJinHuaTabCFG_MsgID_IsValid(int value) {
  switch (value) {
    case 16026:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaTabCFG_MsgID SC_ZhaJinHuaTabCFG::ID;
const SC_ZhaJinHuaTabCFG_MsgID SC_ZhaJinHuaTabCFG::MsgID_MIN;
const SC_ZhaJinHuaTabCFG_MsgID SC_ZhaJinHuaTabCFG::MsgID_MAX;
const int SC_ZhaJinHuaTabCFG::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ZhaJinHuaTabTiren_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[25];
}
bool CS_ZhaJinHuaTabTiren_MsgID_IsValid(int value) {
  switch (value) {
    case 16027:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ZhaJinHuaTabTiren_MsgID CS_ZhaJinHuaTabTiren::ID;
const CS_ZhaJinHuaTabTiren_MsgID CS_ZhaJinHuaTabTiren::MsgID_MIN;
const CS_ZhaJinHuaTabTiren_MsgID CS_ZhaJinHuaTabTiren::MsgID_MAX;
const int CS_ZhaJinHuaTabTiren::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaTabTiren_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[26];
}
bool SC_ZhaJinHuaTabTiren_MsgID_IsValid(int value) {
  switch (value) {
    case 16028:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaTabTiren_MsgID SC_ZhaJinHuaTabTiren::ID;
const SC_ZhaJinHuaTabTiren_MsgID SC_ZhaJinHuaTabTiren::MsgID_MIN;
const SC_ZhaJinHuaTabTiren_MsgID SC_ZhaJinHuaTabTiren::MsgID_MAX;
const int SC_ZhaJinHuaTabTiren::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CS_ZhaJinHuaTabVote_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[27];
}
bool CS_ZhaJinHuaTabVote_MsgID_IsValid(int value) {
  switch (value) {
    case 16029:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CS_ZhaJinHuaTabVote_MsgID CS_ZhaJinHuaTabVote::ID;
const CS_ZhaJinHuaTabVote_MsgID CS_ZhaJinHuaTabVote::MsgID_MIN;
const CS_ZhaJinHuaTabVote_MsgID CS_ZhaJinHuaTabVote::MsgID_MAX;
const int CS_ZhaJinHuaTabVote::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaTabVote_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[28];
}
bool SC_ZhaJinHuaTabVote_MsgID_IsValid(int value) {
  switch (value) {
    case 16030:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaTabVote_MsgID SC_ZhaJinHuaTabVote::ID;
const SC_ZhaJinHuaTabVote_MsgID SC_ZhaJinHuaTabVote::MsgID_MIN;
const SC_ZhaJinHuaTabVote_MsgID SC_ZhaJinHuaTabVote::MsgID_MAX;
const int SC_ZhaJinHuaTabVote::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaTabVoteResult_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[29];
}
bool SC_ZhaJinHuaTabVoteResult_MsgID_IsValid(int value) {
  switch (value) {
    case 16031:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaTabVoteResult_MsgID SC_ZhaJinHuaTabVoteResult::ID;
const SC_ZhaJinHuaTabVoteResult_MsgID SC_ZhaJinHuaTabVoteResult::MsgID_MIN;
const SC_ZhaJinHuaTabVoteResult_MsgID SC_ZhaJinHuaTabVoteResult::MsgID_MAX;
const int SC_ZhaJinHuaTabVoteResult::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SC_ZhaJinHuaStatistics_MsgID_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[30];
}
bool SC_ZhaJinHuaStatistics_MsgID_IsValid(int value) {
  switch (value) {
    case 16032:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SC_ZhaJinHuaStatistics_MsgID SC_ZhaJinHuaStatistics::ID;
const SC_ZhaJinHuaStatistics_MsgID SC_ZhaJinHuaStatistics::MsgID_MIN;
const SC_ZhaJinHuaStatistics_MsgID SC_ZhaJinHuaStatistics::MsgID_MAX;
const int SC_ZhaJinHuaStatistics::MsgID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ZHAJINHUA_CARD_TYPE_descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_enum_descriptors[31];
}
bool ZHAJINHUA_CARD_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaStart::kBankerChairIdFieldNumber;
const int SC_ZhaJinHuaStart::kChairIdFieldNumber;
const int SC_ZhaJinHuaStart::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaStart::SC_ZhaJinHuaStart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaStart)
}
SC_ZhaJinHuaStart::SC_ZhaJinHuaStart(const SC_ZhaJinHuaStart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      chair_id_(from.chair_id_),
      guid_(from.guid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  banker_chair_id_ = from.banker_chair_id_;
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaStart)
}

void SC_ZhaJinHuaStart::SharedCtor() {
  _cached_size_ = 0;
  banker_chair_id_ = 0;
}

SC_ZhaJinHuaStart::~SC_ZhaJinHuaStart() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaStart)
  SharedDtor();
}

void SC_ZhaJinHuaStart::SharedDtor() {
}

void SC_ZhaJinHuaStart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaStart::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaStart& SC_ZhaJinHuaStart::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaStart* SC_ZhaJinHuaStart::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaStart* n = new SC_ZhaJinHuaStart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaStart::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaStart)
  chair_id_.Clear();
  guid_.Clear();
  banker_chair_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaStart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaStart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 banker_chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_banker_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &banker_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_chair_id())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_chair_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_guid())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(26u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_guid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaStart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaStart)
  return false;
#undef DO_
}

void SC_ZhaJinHuaStart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 banker_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->banker_chair_id(), output);
  }

  // repeated int32 chair_id = 2;
  for (int i = 0, n = this->chair_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->chair_id(i), output);
  }

  // repeated int32 guid = 3;
  for (int i = 0, n = this->guid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->guid(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaStart)
}

::google::protobuf::uint8* SC_ZhaJinHuaStart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 banker_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->banker_chair_id(), target);
  }

  // repeated int32 chair_id = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->chair_id_, target);

  // repeated int32 guid = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->guid_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaStart)
  return target;
}

size_t SC_ZhaJinHuaStart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaStart)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 chair_id = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->chair_id_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->chair_id_size());
    total_size += data_size;
  }

  // repeated int32 guid = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->guid_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->guid_size());
    total_size += data_size;
  }

  // optional int32 banker_chair_id = 1;
  if (has_banker_chair_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->banker_chair_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaStart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaStart)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaStart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaStart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaStart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaStart)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaStart::MergeFrom(const SC_ZhaJinHuaStart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaStart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chair_id_.MergeFrom(from.chair_id_);
  guid_.MergeFrom(from.guid_);
  if (from.has_banker_chair_id()) {
    set_banker_chair_id(from.banker_chair_id());
  }
}

void SC_ZhaJinHuaStart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaStart::CopyFrom(const SC_ZhaJinHuaStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaStart::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaStart::Swap(SC_ZhaJinHuaStart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaStart::InternalSwap(SC_ZhaJinHuaStart* other) {
  chair_id_.InternalSwap(&other->chair_id_);
  guid_.InternalSwap(&other->guid_);
  std::swap(banker_chair_id_, other->banker_chair_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaStart::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaStart

// optional int32 banker_chair_id = 1;
bool SC_ZhaJinHuaStart::has_banker_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaStart::set_has_banker_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaStart::clear_has_banker_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaStart::clear_banker_chair_id() {
  banker_chair_id_ = 0;
  clear_has_banker_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaStart::banker_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaStart.banker_chair_id)
  return banker_chair_id_;
}
void SC_ZhaJinHuaStart::set_banker_chair_id(::google::protobuf::int32 value) {
  set_has_banker_chair_id();
  banker_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaStart.banker_chair_id)
}

// repeated int32 chair_id = 2;
int SC_ZhaJinHuaStart::chair_id_size() const {
  return chair_id_.size();
}
void SC_ZhaJinHuaStart::clear_chair_id() {
  chair_id_.Clear();
}
::google::protobuf::int32 SC_ZhaJinHuaStart::chair_id(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaStart.chair_id)
  return chair_id_.Get(index);
}
void SC_ZhaJinHuaStart::set_chair_id(int index, ::google::protobuf::int32 value) {
  chair_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaStart.chair_id)
}
void SC_ZhaJinHuaStart::add_chair_id(::google::protobuf::int32 value) {
  chair_id_.Add(value);
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaStart.chair_id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_ZhaJinHuaStart::chair_id() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaStart.chair_id)
  return chair_id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_ZhaJinHuaStart::mutable_chair_id() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaStart.chair_id)
  return &chair_id_;
}

// repeated int32 guid = 3;
int SC_ZhaJinHuaStart::guid_size() const {
  return guid_.size();
}
void SC_ZhaJinHuaStart::clear_guid() {
  guid_.Clear();
}
::google::protobuf::int32 SC_ZhaJinHuaStart::guid(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaStart.guid)
  return guid_.Get(index);
}
void SC_ZhaJinHuaStart::set_guid(int index, ::google::protobuf::int32 value) {
  guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaStart.guid)
}
void SC_ZhaJinHuaStart::add_guid(::google::protobuf::int32 value) {
  guid_.Add(value);
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaStart.guid)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_ZhaJinHuaStart::guid() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaStart.guid)
  return guid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_ZhaJinHuaStart::mutable_guid() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaStart.guid)
  return &guid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_ZhaJinHuaAddScore::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ZhaJinHuaAddScore::CS_ZhaJinHuaAddScore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ZhaJinHuaAddScore)
}
CS_ZhaJinHuaAddScore::CS_ZhaJinHuaAddScore(const CS_ZhaJinHuaAddScore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:CS_ZhaJinHuaAddScore)
}

void CS_ZhaJinHuaAddScore::SharedCtor() {
  _cached_size_ = 0;
  score_ = GOOGLE_LONGLONG(0);
}

CS_ZhaJinHuaAddScore::~CS_ZhaJinHuaAddScore() {
  // @@protoc_insertion_point(destructor:CS_ZhaJinHuaAddScore)
  SharedDtor();
}

void CS_ZhaJinHuaAddScore::SharedDtor() {
}

void CS_ZhaJinHuaAddScore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ZhaJinHuaAddScore::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ZhaJinHuaAddScore& CS_ZhaJinHuaAddScore::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ZhaJinHuaAddScore* CS_ZhaJinHuaAddScore::New(::google::protobuf::Arena* arena) const {
  CS_ZhaJinHuaAddScore* n = new CS_ZhaJinHuaAddScore;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ZhaJinHuaAddScore::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ZhaJinHuaAddScore)
  score_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ZhaJinHuaAddScore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ZhaJinHuaAddScore)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 score = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ZhaJinHuaAddScore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ZhaJinHuaAddScore)
  return false;
#undef DO_
}

void CS_ZhaJinHuaAddScore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ZhaJinHuaAddScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 score = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->score(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ZhaJinHuaAddScore)
}

::google::protobuf::uint8* CS_ZhaJinHuaAddScore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ZhaJinHuaAddScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 score = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->score(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ZhaJinHuaAddScore)
  return target;
}

size_t CS_ZhaJinHuaAddScore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ZhaJinHuaAddScore)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int64 score = 1;
  if (has_score()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->score());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ZhaJinHuaAddScore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ZhaJinHuaAddScore)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ZhaJinHuaAddScore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ZhaJinHuaAddScore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ZhaJinHuaAddScore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ZhaJinHuaAddScore)
    MergeFrom(*source);
  }
}

void CS_ZhaJinHuaAddScore::MergeFrom(const CS_ZhaJinHuaAddScore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ZhaJinHuaAddScore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_score()) {
    set_score(from.score());
  }
}

void CS_ZhaJinHuaAddScore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ZhaJinHuaAddScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ZhaJinHuaAddScore::CopyFrom(const CS_ZhaJinHuaAddScore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ZhaJinHuaAddScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ZhaJinHuaAddScore::IsInitialized() const {
  return true;
}

void CS_ZhaJinHuaAddScore::Swap(CS_ZhaJinHuaAddScore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ZhaJinHuaAddScore::InternalSwap(CS_ZhaJinHuaAddScore* other) {
  std::swap(score_, other->score_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ZhaJinHuaAddScore::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ZhaJinHuaAddScore

// optional int64 score = 1;
bool CS_ZhaJinHuaAddScore::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_ZhaJinHuaAddScore::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_ZhaJinHuaAddScore::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_ZhaJinHuaAddScore::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
  clear_has_score();
}
::google::protobuf::int64 CS_ZhaJinHuaAddScore::score() const {
  // @@protoc_insertion_point(field_get:CS_ZhaJinHuaAddScore.score)
  return score_;
}
void CS_ZhaJinHuaAddScore::set_score(::google::protobuf::int64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CS_ZhaJinHuaAddScore.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaAddScore::kAddScoreChairIdFieldNumber;
const int SC_ZhaJinHuaAddScore::kCurChairIdFieldNumber;
const int SC_ZhaJinHuaAddScore::kScoreFieldNumber;
const int SC_ZhaJinHuaAddScore::kMoneyFieldNumber;
const int SC_ZhaJinHuaAddScore::kIsAllFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaAddScore::SC_ZhaJinHuaAddScore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaAddScore)
}
SC_ZhaJinHuaAddScore::SC_ZhaJinHuaAddScore(const SC_ZhaJinHuaAddScore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&add_score_chair_id_, &from.add_score_chair_id_,
    reinterpret_cast<char*>(&is_all_) -
    reinterpret_cast<char*>(&add_score_chair_id_) + sizeof(is_all_));
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaAddScore)
}

void SC_ZhaJinHuaAddScore::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&add_score_chair_id_, 0, reinterpret_cast<char*>(&is_all_) -
    reinterpret_cast<char*>(&add_score_chair_id_) + sizeof(is_all_));
}

SC_ZhaJinHuaAddScore::~SC_ZhaJinHuaAddScore() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaAddScore)
  SharedDtor();
}

void SC_ZhaJinHuaAddScore::SharedDtor() {
}

void SC_ZhaJinHuaAddScore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaAddScore::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaAddScore& SC_ZhaJinHuaAddScore::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaAddScore* SC_ZhaJinHuaAddScore::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaAddScore* n = new SC_ZhaJinHuaAddScore;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaAddScore::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaAddScore)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&add_score_chair_id_, 0, reinterpret_cast<char*>(&is_all_) -
      reinterpret_cast<char*>(&add_score_chair_id_) + sizeof(is_all_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaAddScore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaAddScore)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 add_score_chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_add_score_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_score_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cur_chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_cur_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 score = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 is_all = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_is_all();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_all_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaAddScore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaAddScore)
  return false;
#undef DO_
}

void SC_ZhaJinHuaAddScore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaAddScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 add_score_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->add_score_chair_id(), output);
  }

  // optional int32 cur_chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cur_chair_id(), output);
  }

  // optional int64 score = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->score(), output);
  }

  // optional int64 money = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->money(), output);
  }

  // optional int32 is_all = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->is_all(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaAddScore)
}

::google::protobuf::uint8* SC_ZhaJinHuaAddScore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaAddScore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 add_score_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->add_score_chair_id(), target);
  }

  // optional int32 cur_chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cur_chair_id(), target);
  }

  // optional int64 score = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->score(), target);
  }

  // optional int64 money = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->money(), target);
  }

  // optional int32 is_all = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->is_all(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaAddScore)
  return target;
}

size_t SC_ZhaJinHuaAddScore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaAddScore)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 add_score_chair_id = 1;
    if (has_add_score_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_score_chair_id());
    }

    // optional int32 cur_chair_id = 2;
    if (has_cur_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_chair_id());
    }

    // optional int64 score = 3;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->score());
    }

    // optional int64 money = 4;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional int32 is_all = 5;
    if (has_is_all()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_all());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaAddScore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaAddScore)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaAddScore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaAddScore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaAddScore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaAddScore)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaAddScore::MergeFrom(const SC_ZhaJinHuaAddScore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaAddScore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      add_score_chair_id_ = from.add_score_chair_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      cur_chair_id_ = from.cur_chair_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      score_ = from.score_;
    }
    if (cached_has_bits & 0x00000008u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_all_ = from.is_all_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ZhaJinHuaAddScore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaAddScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaAddScore::CopyFrom(const SC_ZhaJinHuaAddScore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaAddScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaAddScore::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaAddScore::Swap(SC_ZhaJinHuaAddScore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaAddScore::InternalSwap(SC_ZhaJinHuaAddScore* other) {
  std::swap(add_score_chair_id_, other->add_score_chair_id_);
  std::swap(cur_chair_id_, other->cur_chair_id_);
  std::swap(score_, other->score_);
  std::swap(money_, other->money_);
  std::swap(is_all_, other->is_all_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaAddScore::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaAddScore

// optional int32 add_score_chair_id = 1;
bool SC_ZhaJinHuaAddScore::has_add_score_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaAddScore::set_has_add_score_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaAddScore::clear_has_add_score_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaAddScore::clear_add_score_chair_id() {
  add_score_chair_id_ = 0;
  clear_has_add_score_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaAddScore::add_score_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaAddScore.add_score_chair_id)
  return add_score_chair_id_;
}
void SC_ZhaJinHuaAddScore::set_add_score_chair_id(::google::protobuf::int32 value) {
  set_has_add_score_chair_id();
  add_score_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaAddScore.add_score_chair_id)
}

// optional int32 cur_chair_id = 2;
bool SC_ZhaJinHuaAddScore::has_cur_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ZhaJinHuaAddScore::set_has_cur_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ZhaJinHuaAddScore::clear_has_cur_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ZhaJinHuaAddScore::clear_cur_chair_id() {
  cur_chair_id_ = 0;
  clear_has_cur_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaAddScore::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaAddScore.cur_chair_id)
  return cur_chair_id_;
}
void SC_ZhaJinHuaAddScore::set_cur_chair_id(::google::protobuf::int32 value) {
  set_has_cur_chair_id();
  cur_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaAddScore.cur_chair_id)
}

// optional int64 score = 3;
bool SC_ZhaJinHuaAddScore::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ZhaJinHuaAddScore::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ZhaJinHuaAddScore::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ZhaJinHuaAddScore::clear_score() {
  score_ = GOOGLE_LONGLONG(0);
  clear_has_score();
}
::google::protobuf::int64 SC_ZhaJinHuaAddScore::score() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaAddScore.score)
  return score_;
}
void SC_ZhaJinHuaAddScore::set_score(::google::protobuf::int64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaAddScore.score)
}

// optional int64 money = 4;
bool SC_ZhaJinHuaAddScore::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_ZhaJinHuaAddScore::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_ZhaJinHuaAddScore::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_ZhaJinHuaAddScore::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 SC_ZhaJinHuaAddScore::money() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaAddScore.money)
  return money_;
}
void SC_ZhaJinHuaAddScore::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaAddScore.money)
}

// optional int32 is_all = 5;
bool SC_ZhaJinHuaAddScore::has_is_all() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SC_ZhaJinHuaAddScore::set_has_is_all() {
  _has_bits_[0] |= 0x00000010u;
}
void SC_ZhaJinHuaAddScore::clear_has_is_all() {
  _has_bits_[0] &= ~0x00000010u;
}
void SC_ZhaJinHuaAddScore::clear_is_all() {
  is_all_ = 0;
  clear_has_is_all();
}
::google::protobuf::int32 SC_ZhaJinHuaAddScore::is_all() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaAddScore.is_all)
  return is_all_;
}
void SC_ZhaJinHuaAddScore::set_is_all(::google::protobuf::int32 value) {
  set_has_is_all();
  is_all_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaAddScore.is_all)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ZhaJinHuaGiveUp::CS_ZhaJinHuaGiveUp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ZhaJinHuaGiveUp)
}
CS_ZhaJinHuaGiveUp::CS_ZhaJinHuaGiveUp(const CS_ZhaJinHuaGiveUp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_ZhaJinHuaGiveUp)
}

void CS_ZhaJinHuaGiveUp::SharedCtor() {
  _cached_size_ = 0;
}

CS_ZhaJinHuaGiveUp::~CS_ZhaJinHuaGiveUp() {
  // @@protoc_insertion_point(destructor:CS_ZhaJinHuaGiveUp)
  SharedDtor();
}

void CS_ZhaJinHuaGiveUp::SharedDtor() {
}

void CS_ZhaJinHuaGiveUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ZhaJinHuaGiveUp::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ZhaJinHuaGiveUp& CS_ZhaJinHuaGiveUp::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ZhaJinHuaGiveUp* CS_ZhaJinHuaGiveUp::New(::google::protobuf::Arena* arena) const {
  CS_ZhaJinHuaGiveUp* n = new CS_ZhaJinHuaGiveUp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ZhaJinHuaGiveUp::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ZhaJinHuaGiveUp)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ZhaJinHuaGiveUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ZhaJinHuaGiveUp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ZhaJinHuaGiveUp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ZhaJinHuaGiveUp)
  return false;
#undef DO_
}

void CS_ZhaJinHuaGiveUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ZhaJinHuaGiveUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ZhaJinHuaGiveUp)
}

::google::protobuf::uint8* CS_ZhaJinHuaGiveUp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ZhaJinHuaGiveUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ZhaJinHuaGiveUp)
  return target;
}

size_t CS_ZhaJinHuaGiveUp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ZhaJinHuaGiveUp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ZhaJinHuaGiveUp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ZhaJinHuaGiveUp)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ZhaJinHuaGiveUp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ZhaJinHuaGiveUp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ZhaJinHuaGiveUp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ZhaJinHuaGiveUp)
    MergeFrom(*source);
  }
}

void CS_ZhaJinHuaGiveUp::MergeFrom(const CS_ZhaJinHuaGiveUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ZhaJinHuaGiveUp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_ZhaJinHuaGiveUp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ZhaJinHuaGiveUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ZhaJinHuaGiveUp::CopyFrom(const CS_ZhaJinHuaGiveUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ZhaJinHuaGiveUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ZhaJinHuaGiveUp::IsInitialized() const {
  return true;
}

void CS_ZhaJinHuaGiveUp::Swap(CS_ZhaJinHuaGiveUp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ZhaJinHuaGiveUp::InternalSwap(CS_ZhaJinHuaGiveUp* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ZhaJinHuaGiveUp::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ZhaJinHuaGiveUp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaGiveUp::kGiveupChairIdFieldNumber;
const int SC_ZhaJinHuaGiveUp::kCurChairIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaGiveUp::SC_ZhaJinHuaGiveUp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaGiveUp)
}
SC_ZhaJinHuaGiveUp::SC_ZhaJinHuaGiveUp(const SC_ZhaJinHuaGiveUp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&giveup_chair_id_, &from.giveup_chair_id_,
    reinterpret_cast<char*>(&cur_chair_id_) -
    reinterpret_cast<char*>(&giveup_chair_id_) + sizeof(cur_chair_id_));
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaGiveUp)
}

void SC_ZhaJinHuaGiveUp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&giveup_chair_id_, 0, reinterpret_cast<char*>(&cur_chair_id_) -
    reinterpret_cast<char*>(&giveup_chair_id_) + sizeof(cur_chair_id_));
}

SC_ZhaJinHuaGiveUp::~SC_ZhaJinHuaGiveUp() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaGiveUp)
  SharedDtor();
}

void SC_ZhaJinHuaGiveUp::SharedDtor() {
}

void SC_ZhaJinHuaGiveUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaGiveUp::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaGiveUp& SC_ZhaJinHuaGiveUp::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaGiveUp* SC_ZhaJinHuaGiveUp::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaGiveUp* n = new SC_ZhaJinHuaGiveUp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaGiveUp::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaGiveUp)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&giveup_chair_id_, 0, reinterpret_cast<char*>(&cur_chair_id_) -
      reinterpret_cast<char*>(&giveup_chair_id_) + sizeof(cur_chair_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaGiveUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaGiveUp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 giveup_chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_giveup_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &giveup_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cur_chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_cur_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaGiveUp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaGiveUp)
  return false;
#undef DO_
}

void SC_ZhaJinHuaGiveUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaGiveUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 giveup_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->giveup_chair_id(), output);
  }

  // optional int32 cur_chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cur_chair_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaGiveUp)
}

::google::protobuf::uint8* SC_ZhaJinHuaGiveUp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaGiveUp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 giveup_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->giveup_chair_id(), target);
  }

  // optional int32 cur_chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cur_chair_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaGiveUp)
  return target;
}

size_t SC_ZhaJinHuaGiveUp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaGiveUp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 giveup_chair_id = 1;
    if (has_giveup_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->giveup_chair_id());
    }

    // optional int32 cur_chair_id = 2;
    if (has_cur_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_chair_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaGiveUp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaGiveUp)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaGiveUp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaGiveUp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaGiveUp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaGiveUp)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaGiveUp::MergeFrom(const SC_ZhaJinHuaGiveUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaGiveUp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      giveup_chair_id_ = from.giveup_chair_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      cur_chair_id_ = from.cur_chair_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ZhaJinHuaGiveUp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaGiveUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaGiveUp::CopyFrom(const SC_ZhaJinHuaGiveUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaGiveUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaGiveUp::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaGiveUp::Swap(SC_ZhaJinHuaGiveUp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaGiveUp::InternalSwap(SC_ZhaJinHuaGiveUp* other) {
  std::swap(giveup_chair_id_, other->giveup_chair_id_);
  std::swap(cur_chair_id_, other->cur_chair_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaGiveUp::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaGiveUp

// optional int32 giveup_chair_id = 1;
bool SC_ZhaJinHuaGiveUp::has_giveup_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaGiveUp::set_has_giveup_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaGiveUp::clear_has_giveup_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaGiveUp::clear_giveup_chair_id() {
  giveup_chair_id_ = 0;
  clear_has_giveup_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaGiveUp::giveup_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaGiveUp.giveup_chair_id)
  return giveup_chair_id_;
}
void SC_ZhaJinHuaGiveUp::set_giveup_chair_id(::google::protobuf::int32 value) {
  set_has_giveup_chair_id();
  giveup_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaGiveUp.giveup_chair_id)
}

// optional int32 cur_chair_id = 2;
bool SC_ZhaJinHuaGiveUp::has_cur_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ZhaJinHuaGiveUp::set_has_cur_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ZhaJinHuaGiveUp::clear_has_cur_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ZhaJinHuaGiveUp::clear_cur_chair_id() {
  cur_chair_id_ = 0;
  clear_has_cur_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaGiveUp::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaGiveUp.cur_chair_id)
  return cur_chair_id_;
}
void SC_ZhaJinHuaGiveUp::set_cur_chair_id(::google::protobuf::int32 value) {
  set_has_cur_chair_id();
  cur_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaGiveUp.cur_chair_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ZhaJinHuaLookCard::CS_ZhaJinHuaLookCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ZhaJinHuaLookCard)
}
CS_ZhaJinHuaLookCard::CS_ZhaJinHuaLookCard(const CS_ZhaJinHuaLookCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_ZhaJinHuaLookCard)
}

void CS_ZhaJinHuaLookCard::SharedCtor() {
  _cached_size_ = 0;
}

CS_ZhaJinHuaLookCard::~CS_ZhaJinHuaLookCard() {
  // @@protoc_insertion_point(destructor:CS_ZhaJinHuaLookCard)
  SharedDtor();
}

void CS_ZhaJinHuaLookCard::SharedDtor() {
}

void CS_ZhaJinHuaLookCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ZhaJinHuaLookCard::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ZhaJinHuaLookCard& CS_ZhaJinHuaLookCard::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ZhaJinHuaLookCard* CS_ZhaJinHuaLookCard::New(::google::protobuf::Arena* arena) const {
  CS_ZhaJinHuaLookCard* n = new CS_ZhaJinHuaLookCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ZhaJinHuaLookCard::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ZhaJinHuaLookCard)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ZhaJinHuaLookCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ZhaJinHuaLookCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ZhaJinHuaLookCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ZhaJinHuaLookCard)
  return false;
#undef DO_
}

void CS_ZhaJinHuaLookCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ZhaJinHuaLookCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ZhaJinHuaLookCard)
}

::google::protobuf::uint8* CS_ZhaJinHuaLookCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ZhaJinHuaLookCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ZhaJinHuaLookCard)
  return target;
}

size_t CS_ZhaJinHuaLookCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ZhaJinHuaLookCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ZhaJinHuaLookCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ZhaJinHuaLookCard)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ZhaJinHuaLookCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ZhaJinHuaLookCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ZhaJinHuaLookCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ZhaJinHuaLookCard)
    MergeFrom(*source);
  }
}

void CS_ZhaJinHuaLookCard::MergeFrom(const CS_ZhaJinHuaLookCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ZhaJinHuaLookCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_ZhaJinHuaLookCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ZhaJinHuaLookCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ZhaJinHuaLookCard::CopyFrom(const CS_ZhaJinHuaLookCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ZhaJinHuaLookCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ZhaJinHuaLookCard::IsInitialized() const {
  return true;
}

void CS_ZhaJinHuaLookCard::Swap(CS_ZhaJinHuaLookCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ZhaJinHuaLookCard::InternalSwap(CS_ZhaJinHuaLookCard* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ZhaJinHuaLookCard::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ZhaJinHuaLookCard

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaLookCard::kLookcardChairIdFieldNumber;
const int SC_ZhaJinHuaLookCard::kCardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaLookCard::SC_ZhaJinHuaLookCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaLookCard)
}
SC_ZhaJinHuaLookCard::SC_ZhaJinHuaLookCard(const SC_ZhaJinHuaLookCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      cards_(from.cards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lookcard_chair_id_ = from.lookcard_chair_id_;
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaLookCard)
}

void SC_ZhaJinHuaLookCard::SharedCtor() {
  _cached_size_ = 0;
  lookcard_chair_id_ = 0;
}

SC_ZhaJinHuaLookCard::~SC_ZhaJinHuaLookCard() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaLookCard)
  SharedDtor();
}

void SC_ZhaJinHuaLookCard::SharedDtor() {
}

void SC_ZhaJinHuaLookCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaLookCard::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaLookCard& SC_ZhaJinHuaLookCard::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaLookCard* SC_ZhaJinHuaLookCard::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaLookCard* n = new SC_ZhaJinHuaLookCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaLookCard::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaLookCard)
  cards_.Clear();
  lookcard_chair_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaLookCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaLookCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lookcard_chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_lookcard_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lookcard_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 cards = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_cards())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaLookCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaLookCard)
  return false;
#undef DO_
}

void SC_ZhaJinHuaLookCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaLookCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 lookcard_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lookcard_chair_id(), output);
  }

  // repeated int32 cards = 2;
  for (int i = 0, n = this->cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->cards(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaLookCard)
}

::google::protobuf::uint8* SC_ZhaJinHuaLookCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaLookCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 lookcard_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lookcard_chair_id(), target);
  }

  // repeated int32 cards = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->cards_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaLookCard)
  return target;
}

size_t SC_ZhaJinHuaLookCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaLookCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 cards = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->cards_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cards_size());
    total_size += data_size;
  }

  // optional int32 lookcard_chair_id = 1;
  if (has_lookcard_chair_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lookcard_chair_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaLookCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaLookCard)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaLookCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaLookCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaLookCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaLookCard)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaLookCard::MergeFrom(const SC_ZhaJinHuaLookCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaLookCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cards_.MergeFrom(from.cards_);
  if (from.has_lookcard_chair_id()) {
    set_lookcard_chair_id(from.lookcard_chair_id());
  }
}

void SC_ZhaJinHuaLookCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaLookCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaLookCard::CopyFrom(const SC_ZhaJinHuaLookCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaLookCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaLookCard::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaLookCard::Swap(SC_ZhaJinHuaLookCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaLookCard::InternalSwap(SC_ZhaJinHuaLookCard* other) {
  cards_.InternalSwap(&other->cards_);
  std::swap(lookcard_chair_id_, other->lookcard_chair_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaLookCard::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaLookCard

// optional int32 lookcard_chair_id = 1;
bool SC_ZhaJinHuaLookCard::has_lookcard_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaLookCard::set_has_lookcard_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaLookCard::clear_has_lookcard_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaLookCard::clear_lookcard_chair_id() {
  lookcard_chair_id_ = 0;
  clear_has_lookcard_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaLookCard::lookcard_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaLookCard.lookcard_chair_id)
  return lookcard_chair_id_;
}
void SC_ZhaJinHuaLookCard::set_lookcard_chair_id(::google::protobuf::int32 value) {
  set_has_lookcard_chair_id();
  lookcard_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaLookCard.lookcard_chair_id)
}

// repeated int32 cards = 2;
int SC_ZhaJinHuaLookCard::cards_size() const {
  return cards_.size();
}
void SC_ZhaJinHuaLookCard::clear_cards() {
  cards_.Clear();
}
::google::protobuf::int32 SC_ZhaJinHuaLookCard::cards(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaLookCard.cards)
  return cards_.Get(index);
}
void SC_ZhaJinHuaLookCard::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaLookCard.cards)
}
void SC_ZhaJinHuaLookCard::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaLookCard.cards)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_ZhaJinHuaLookCard::cards() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaLookCard.cards)
  return cards_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_ZhaJinHuaLookCard::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaLookCard.cards)
  return &cards_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaNotifyLookCard::kLookcardChairIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaNotifyLookCard::SC_ZhaJinHuaNotifyLookCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaNotifyLookCard)
}
SC_ZhaJinHuaNotifyLookCard::SC_ZhaJinHuaNotifyLookCard(const SC_ZhaJinHuaNotifyLookCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lookcard_chair_id_ = from.lookcard_chair_id_;
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaNotifyLookCard)
}

void SC_ZhaJinHuaNotifyLookCard::SharedCtor() {
  _cached_size_ = 0;
  lookcard_chair_id_ = 0;
}

SC_ZhaJinHuaNotifyLookCard::~SC_ZhaJinHuaNotifyLookCard() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaNotifyLookCard)
  SharedDtor();
}

void SC_ZhaJinHuaNotifyLookCard::SharedDtor() {
}

void SC_ZhaJinHuaNotifyLookCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaNotifyLookCard::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaNotifyLookCard& SC_ZhaJinHuaNotifyLookCard::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaNotifyLookCard* SC_ZhaJinHuaNotifyLookCard::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaNotifyLookCard* n = new SC_ZhaJinHuaNotifyLookCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaNotifyLookCard::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaNotifyLookCard)
  lookcard_chair_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaNotifyLookCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaNotifyLookCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lookcard_chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_lookcard_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lookcard_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaNotifyLookCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaNotifyLookCard)
  return false;
#undef DO_
}

void SC_ZhaJinHuaNotifyLookCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaNotifyLookCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 lookcard_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lookcard_chair_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaNotifyLookCard)
}

::google::protobuf::uint8* SC_ZhaJinHuaNotifyLookCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaNotifyLookCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 lookcard_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lookcard_chair_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaNotifyLookCard)
  return target;
}

size_t SC_ZhaJinHuaNotifyLookCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaNotifyLookCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 lookcard_chair_id = 1;
  if (has_lookcard_chair_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lookcard_chair_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaNotifyLookCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaNotifyLookCard)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaNotifyLookCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaNotifyLookCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaNotifyLookCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaNotifyLookCard)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaNotifyLookCard::MergeFrom(const SC_ZhaJinHuaNotifyLookCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaNotifyLookCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lookcard_chair_id()) {
    set_lookcard_chair_id(from.lookcard_chair_id());
  }
}

void SC_ZhaJinHuaNotifyLookCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaNotifyLookCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaNotifyLookCard::CopyFrom(const SC_ZhaJinHuaNotifyLookCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaNotifyLookCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaNotifyLookCard::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaNotifyLookCard::Swap(SC_ZhaJinHuaNotifyLookCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaNotifyLookCard::InternalSwap(SC_ZhaJinHuaNotifyLookCard* other) {
  std::swap(lookcard_chair_id_, other->lookcard_chair_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaNotifyLookCard::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaNotifyLookCard

// optional int32 lookcard_chair_id = 1;
bool SC_ZhaJinHuaNotifyLookCard::has_lookcard_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaNotifyLookCard::set_has_lookcard_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaNotifyLookCard::clear_has_lookcard_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaNotifyLookCard::clear_lookcard_chair_id() {
  lookcard_chair_id_ = 0;
  clear_has_lookcard_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaNotifyLookCard::lookcard_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaNotifyLookCard.lookcard_chair_id)
  return lookcard_chair_id_;
}
void SC_ZhaJinHuaNotifyLookCard::set_lookcard_chair_id(::google::protobuf::int32 value) {
  set_has_lookcard_chair_id();
  lookcard_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaNotifyLookCard.lookcard_chair_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_ZhaJinHuaCompareCard::kCompareChairIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ZhaJinHuaCompareCard::CS_ZhaJinHuaCompareCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ZhaJinHuaCompareCard)
}
CS_ZhaJinHuaCompareCard::CS_ZhaJinHuaCompareCard(const CS_ZhaJinHuaCompareCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  compare_chair_id_ = from.compare_chair_id_;
  // @@protoc_insertion_point(copy_constructor:CS_ZhaJinHuaCompareCard)
}

void CS_ZhaJinHuaCompareCard::SharedCtor() {
  _cached_size_ = 0;
  compare_chair_id_ = 0;
}

CS_ZhaJinHuaCompareCard::~CS_ZhaJinHuaCompareCard() {
  // @@protoc_insertion_point(destructor:CS_ZhaJinHuaCompareCard)
  SharedDtor();
}

void CS_ZhaJinHuaCompareCard::SharedDtor() {
}

void CS_ZhaJinHuaCompareCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ZhaJinHuaCompareCard::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ZhaJinHuaCompareCard& CS_ZhaJinHuaCompareCard::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ZhaJinHuaCompareCard* CS_ZhaJinHuaCompareCard::New(::google::protobuf::Arena* arena) const {
  CS_ZhaJinHuaCompareCard* n = new CS_ZhaJinHuaCompareCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ZhaJinHuaCompareCard::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ZhaJinHuaCompareCard)
  compare_chair_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ZhaJinHuaCompareCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ZhaJinHuaCompareCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 compare_chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_compare_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &compare_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ZhaJinHuaCompareCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ZhaJinHuaCompareCard)
  return false;
#undef DO_
}

void CS_ZhaJinHuaCompareCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ZhaJinHuaCompareCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 compare_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->compare_chair_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ZhaJinHuaCompareCard)
}

::google::protobuf::uint8* CS_ZhaJinHuaCompareCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ZhaJinHuaCompareCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 compare_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->compare_chair_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ZhaJinHuaCompareCard)
  return target;
}

size_t CS_ZhaJinHuaCompareCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ZhaJinHuaCompareCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 compare_chair_id = 1;
  if (has_compare_chair_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->compare_chair_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ZhaJinHuaCompareCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ZhaJinHuaCompareCard)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ZhaJinHuaCompareCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ZhaJinHuaCompareCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ZhaJinHuaCompareCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ZhaJinHuaCompareCard)
    MergeFrom(*source);
  }
}

void CS_ZhaJinHuaCompareCard::MergeFrom(const CS_ZhaJinHuaCompareCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ZhaJinHuaCompareCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_compare_chair_id()) {
    set_compare_chair_id(from.compare_chair_id());
  }
}

void CS_ZhaJinHuaCompareCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ZhaJinHuaCompareCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ZhaJinHuaCompareCard::CopyFrom(const CS_ZhaJinHuaCompareCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ZhaJinHuaCompareCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ZhaJinHuaCompareCard::IsInitialized() const {
  return true;
}

void CS_ZhaJinHuaCompareCard::Swap(CS_ZhaJinHuaCompareCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ZhaJinHuaCompareCard::InternalSwap(CS_ZhaJinHuaCompareCard* other) {
  std::swap(compare_chair_id_, other->compare_chair_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ZhaJinHuaCompareCard::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ZhaJinHuaCompareCard

// optional int32 compare_chair_id = 1;
bool CS_ZhaJinHuaCompareCard::has_compare_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_ZhaJinHuaCompareCard::set_has_compare_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_ZhaJinHuaCompareCard::clear_has_compare_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_ZhaJinHuaCompareCard::clear_compare_chair_id() {
  compare_chair_id_ = 0;
  clear_has_compare_chair_id();
}
::google::protobuf::int32 CS_ZhaJinHuaCompareCard::compare_chair_id() const {
  // @@protoc_insertion_point(field_get:CS_ZhaJinHuaCompareCard.compare_chair_id)
  return compare_chair_id_;
}
void CS_ZhaJinHuaCompareCard::set_compare_chair_id(::google::protobuf::int32 value) {
  set_has_compare_chair_id();
  compare_chair_id_ = value;
  // @@protoc_insertion_point(field_set:CS_ZhaJinHuaCompareCard.compare_chair_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaCompareCard::kCurChairIdFieldNumber;
const int SC_ZhaJinHuaCompareCard::kWinChairIdFieldNumber;
const int SC_ZhaJinHuaCompareCard::kLostChairIdFieldNumber;
const int SC_ZhaJinHuaCompareCard::kIsAllFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaCompareCard::SC_ZhaJinHuaCompareCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaCompareCard)
}
SC_ZhaJinHuaCompareCard::SC_ZhaJinHuaCompareCard(const SC_ZhaJinHuaCompareCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cur_chair_id_, &from.cur_chair_id_,
    reinterpret_cast<char*>(&is_all_) -
    reinterpret_cast<char*>(&cur_chair_id_) + sizeof(is_all_));
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaCompareCard)
}

void SC_ZhaJinHuaCompareCard::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&cur_chair_id_, 0, reinterpret_cast<char*>(&is_all_) -
    reinterpret_cast<char*>(&cur_chair_id_) + sizeof(is_all_));
}

SC_ZhaJinHuaCompareCard::~SC_ZhaJinHuaCompareCard() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaCompareCard)
  SharedDtor();
}

void SC_ZhaJinHuaCompareCard::SharedDtor() {
}

void SC_ZhaJinHuaCompareCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaCompareCard::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaCompareCard& SC_ZhaJinHuaCompareCard::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaCompareCard* SC_ZhaJinHuaCompareCard::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaCompareCard* n = new SC_ZhaJinHuaCompareCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaCompareCard::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaCompareCard)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&cur_chair_id_, 0, reinterpret_cast<char*>(&is_all_) -
      reinterpret_cast<char*>(&cur_chair_id_) + sizeof(is_all_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaCompareCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaCompareCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_cur_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 win_chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_win_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &win_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lost_chair_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_lost_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lost_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 is_all = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_is_all();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_all_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaCompareCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaCompareCard)
  return false;
#undef DO_
}

void SC_ZhaJinHuaCompareCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaCompareCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 cur_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_chair_id(), output);
  }

  // optional int32 win_chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->win_chair_id(), output);
  }

  // optional int32 lost_chair_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lost_chair_id(), output);
  }

  // optional int32 is_all = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_all(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaCompareCard)
}

::google::protobuf::uint8* SC_ZhaJinHuaCompareCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaCompareCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 cur_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_chair_id(), target);
  }

  // optional int32 win_chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->win_chair_id(), target);
  }

  // optional int32 lost_chair_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lost_chair_id(), target);
  }

  // optional int32 is_all = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_all(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaCompareCard)
  return target;
}

size_t SC_ZhaJinHuaCompareCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaCompareCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 cur_chair_id = 1;
    if (has_cur_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_chair_id());
    }

    // optional int32 win_chair_id = 2;
    if (has_win_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->win_chair_id());
    }

    // optional int32 lost_chair_id = 3;
    if (has_lost_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lost_chair_id());
    }

    // optional int32 is_all = 4;
    if (has_is_all()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_all());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaCompareCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaCompareCard)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaCompareCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaCompareCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaCompareCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaCompareCard)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaCompareCard::MergeFrom(const SC_ZhaJinHuaCompareCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaCompareCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      cur_chair_id_ = from.cur_chair_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      win_chair_id_ = from.win_chair_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      lost_chair_id_ = from.lost_chair_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_all_ = from.is_all_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ZhaJinHuaCompareCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaCompareCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaCompareCard::CopyFrom(const SC_ZhaJinHuaCompareCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaCompareCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaCompareCard::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaCompareCard::Swap(SC_ZhaJinHuaCompareCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaCompareCard::InternalSwap(SC_ZhaJinHuaCompareCard* other) {
  std::swap(cur_chair_id_, other->cur_chair_id_);
  std::swap(win_chair_id_, other->win_chair_id_);
  std::swap(lost_chair_id_, other->lost_chair_id_);
  std::swap(is_all_, other->is_all_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaCompareCard::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaCompareCard

// optional int32 cur_chair_id = 1;
bool SC_ZhaJinHuaCompareCard::has_cur_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaCompareCard::set_has_cur_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaCompareCard::clear_has_cur_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaCompareCard::clear_cur_chair_id() {
  cur_chair_id_ = 0;
  clear_has_cur_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaCompareCard::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaCompareCard.cur_chair_id)
  return cur_chair_id_;
}
void SC_ZhaJinHuaCompareCard::set_cur_chair_id(::google::protobuf::int32 value) {
  set_has_cur_chair_id();
  cur_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaCompareCard.cur_chair_id)
}

// optional int32 win_chair_id = 2;
bool SC_ZhaJinHuaCompareCard::has_win_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ZhaJinHuaCompareCard::set_has_win_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ZhaJinHuaCompareCard::clear_has_win_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ZhaJinHuaCompareCard::clear_win_chair_id() {
  win_chair_id_ = 0;
  clear_has_win_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaCompareCard::win_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaCompareCard.win_chair_id)
  return win_chair_id_;
}
void SC_ZhaJinHuaCompareCard::set_win_chair_id(::google::protobuf::int32 value) {
  set_has_win_chair_id();
  win_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaCompareCard.win_chair_id)
}

// optional int32 lost_chair_id = 3;
bool SC_ZhaJinHuaCompareCard::has_lost_chair_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ZhaJinHuaCompareCard::set_has_lost_chair_id() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ZhaJinHuaCompareCard::clear_has_lost_chair_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ZhaJinHuaCompareCard::clear_lost_chair_id() {
  lost_chair_id_ = 0;
  clear_has_lost_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaCompareCard::lost_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaCompareCard.lost_chair_id)
  return lost_chair_id_;
}
void SC_ZhaJinHuaCompareCard::set_lost_chair_id(::google::protobuf::int32 value) {
  set_has_lost_chair_id();
  lost_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaCompareCard.lost_chair_id)
}

// optional int32 is_all = 4;
bool SC_ZhaJinHuaCompareCard::has_is_all() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_ZhaJinHuaCompareCard::set_has_is_all() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_ZhaJinHuaCompareCard::clear_has_is_all() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_ZhaJinHuaCompareCard::clear_is_all() {
  is_all_ = 0;
  clear_has_is_all();
}
::google::protobuf::int32 SC_ZhaJinHuaCompareCard::is_all() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaCompareCard.is_all)
  return is_all_;
}
void SC_ZhaJinHuaCompareCard::set_is_all(::google::protobuf::int32 value) {
  set_has_is_all();
  is_all_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaCompareCard.is_all)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZhaJinHuaPlayerConclude::kChairIdFieldNumber;
const int ZhaJinHuaPlayerConclude::kScoreFieldNumber;
const int ZhaJinHuaPlayerConclude::kCardsFieldNumber;
const int ZhaJinHuaPlayerConclude::kGuidFieldNumber;
const int ZhaJinHuaPlayerConclude::kHeaderIconFieldNumber;
const int ZhaJinHuaPlayerConclude::kNameFieldNumber;
const int ZhaJinHuaPlayerConclude::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZhaJinHuaPlayerConclude::ZhaJinHuaPlayerConclude()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZhaJinHuaPlayerConclude)
}
ZhaJinHuaPlayerConclude::ZhaJinHuaPlayerConclude(const ZhaJinHuaPlayerConclude& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      cards_(from.cards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&chair_id_, &from.chair_id_,
    reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:ZhaJinHuaPlayerConclude)
}

void ZhaJinHuaPlayerConclude::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&chair_id_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(status_));
}

ZhaJinHuaPlayerConclude::~ZhaJinHuaPlayerConclude() {
  // @@protoc_insertion_point(destructor:ZhaJinHuaPlayerConclude)
  SharedDtor();
}

void ZhaJinHuaPlayerConclude::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZhaJinHuaPlayerConclude::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZhaJinHuaPlayerConclude::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZhaJinHuaPlayerConclude& ZhaJinHuaPlayerConclude::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZhaJinHuaPlayerConclude* ZhaJinHuaPlayerConclude::New(::google::protobuf::Arena* arena) const {
  ZhaJinHuaPlayerConclude* n = new ZhaJinHuaPlayerConclude;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZhaJinHuaPlayerConclude::Clear() {
// @@protoc_insertion_point(message_clear_start:ZhaJinHuaPlayerConclude)
  cards_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 62u) {
    ::memset(&chair_id_, 0, reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&chair_id_) + sizeof(status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ZhaJinHuaPlayerConclude::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZhaJinHuaPlayerConclude)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 cards = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_cards())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(26u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 header_icon = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_header_icon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &header_icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ZhaJinHuaPlayerConclude.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZhaJinHuaPlayerConclude)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZhaJinHuaPlayerConclude)
  return false;
#undef DO_
}

void ZhaJinHuaPlayerConclude::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZhaJinHuaPlayerConclude)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chair_id(), output);
  }

  // optional int32 score = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->score(), output);
  }

  // repeated int32 cards = 3;
  for (int i = 0, n = this->cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->cards(i), output);
  }

  // optional int32 guid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->guid(), output);
  }

  // optional int32 header_icon = 5 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->header_icon(), output);
  }

  // optional string name = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ZhaJinHuaPlayerConclude.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // optional int32 status = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ZhaJinHuaPlayerConclude)
}

::google::protobuf::uint8* ZhaJinHuaPlayerConclude::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZhaJinHuaPlayerConclude)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chair_id(), target);
  }

  // optional int32 score = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->score(), target);
  }

  // repeated int32 cards = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->cards_, target);

  // optional int32 guid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->guid(), target);
  }

  // optional int32 header_icon = 5 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->header_icon(), target);
  }

  // optional string name = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ZhaJinHuaPlayerConclude.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // optional int32 status = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ZhaJinHuaPlayerConclude)
  return target;
}

size_t ZhaJinHuaPlayerConclude::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZhaJinHuaPlayerConclude)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 cards = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->cards_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cards_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string name = 6;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 chair_id = 1;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 score = 2;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }

    // optional int32 guid = 4;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

    // optional int32 header_icon = 5 [default = 0];
    if (has_header_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->header_icon());
    }

    // optional int32 status = 7;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZhaJinHuaPlayerConclude::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZhaJinHuaPlayerConclude)
  GOOGLE_DCHECK_NE(&from, this);
  const ZhaJinHuaPlayerConclude* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZhaJinHuaPlayerConclude>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZhaJinHuaPlayerConclude)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZhaJinHuaPlayerConclude)
    MergeFrom(*source);
  }
}

void ZhaJinHuaPlayerConclude::MergeFrom(const ZhaJinHuaPlayerConclude& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZhaJinHuaPlayerConclude)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cards_.MergeFrom(from.cards_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      score_ = from.score_;
    }
    if (cached_has_bits & 0x00000008u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000010u) {
      header_icon_ = from.header_icon_;
    }
    if (cached_has_bits & 0x00000020u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ZhaJinHuaPlayerConclude::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZhaJinHuaPlayerConclude)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZhaJinHuaPlayerConclude::CopyFrom(const ZhaJinHuaPlayerConclude& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZhaJinHuaPlayerConclude)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZhaJinHuaPlayerConclude::IsInitialized() const {
  return true;
}

void ZhaJinHuaPlayerConclude::Swap(ZhaJinHuaPlayerConclude* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZhaJinHuaPlayerConclude::InternalSwap(ZhaJinHuaPlayerConclude* other) {
  cards_.InternalSwap(&other->cards_);
  name_.Swap(&other->name_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(score_, other->score_);
  std::swap(guid_, other->guid_);
  std::swap(header_icon_, other->header_icon_);
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZhaJinHuaPlayerConclude::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZhaJinHuaPlayerConclude

// optional int32 chair_id = 1;
bool ZhaJinHuaPlayerConclude::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ZhaJinHuaPlayerConclude::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void ZhaJinHuaPlayerConclude::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void ZhaJinHuaPlayerConclude::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 ZhaJinHuaPlayerConclude::chair_id() const {
  // @@protoc_insertion_point(field_get:ZhaJinHuaPlayerConclude.chair_id)
  return chair_id_;
}
void ZhaJinHuaPlayerConclude::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:ZhaJinHuaPlayerConclude.chair_id)
}

// optional int32 score = 2;
bool ZhaJinHuaPlayerConclude::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ZhaJinHuaPlayerConclude::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
void ZhaJinHuaPlayerConclude::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
void ZhaJinHuaPlayerConclude::clear_score() {
  score_ = 0;
  clear_has_score();
}
::google::protobuf::int32 ZhaJinHuaPlayerConclude::score() const {
  // @@protoc_insertion_point(field_get:ZhaJinHuaPlayerConclude.score)
  return score_;
}
void ZhaJinHuaPlayerConclude::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:ZhaJinHuaPlayerConclude.score)
}

// repeated int32 cards = 3;
int ZhaJinHuaPlayerConclude::cards_size() const {
  return cards_.size();
}
void ZhaJinHuaPlayerConclude::clear_cards() {
  cards_.Clear();
}
::google::protobuf::int32 ZhaJinHuaPlayerConclude::cards(int index) const {
  // @@protoc_insertion_point(field_get:ZhaJinHuaPlayerConclude.cards)
  return cards_.Get(index);
}
void ZhaJinHuaPlayerConclude::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:ZhaJinHuaPlayerConclude.cards)
}
void ZhaJinHuaPlayerConclude::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:ZhaJinHuaPlayerConclude.cards)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ZhaJinHuaPlayerConclude::cards() const {
  // @@protoc_insertion_point(field_list:ZhaJinHuaPlayerConclude.cards)
  return cards_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ZhaJinHuaPlayerConclude::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:ZhaJinHuaPlayerConclude.cards)
  return &cards_;
}

// optional int32 guid = 4;
bool ZhaJinHuaPlayerConclude::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ZhaJinHuaPlayerConclude::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
void ZhaJinHuaPlayerConclude::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
void ZhaJinHuaPlayerConclude::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 ZhaJinHuaPlayerConclude::guid() const {
  // @@protoc_insertion_point(field_get:ZhaJinHuaPlayerConclude.guid)
  return guid_;
}
void ZhaJinHuaPlayerConclude::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:ZhaJinHuaPlayerConclude.guid)
}

// optional int32 header_icon = 5 [default = 0];
bool ZhaJinHuaPlayerConclude::has_header_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ZhaJinHuaPlayerConclude::set_has_header_icon() {
  _has_bits_[0] |= 0x00000010u;
}
void ZhaJinHuaPlayerConclude::clear_has_header_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
void ZhaJinHuaPlayerConclude::clear_header_icon() {
  header_icon_ = 0;
  clear_has_header_icon();
}
::google::protobuf::int32 ZhaJinHuaPlayerConclude::header_icon() const {
  // @@protoc_insertion_point(field_get:ZhaJinHuaPlayerConclude.header_icon)
  return header_icon_;
}
void ZhaJinHuaPlayerConclude::set_header_icon(::google::protobuf::int32 value) {
  set_has_header_icon();
  header_icon_ = value;
  // @@protoc_insertion_point(field_set:ZhaJinHuaPlayerConclude.header_icon)
}

// optional string name = 6;
bool ZhaJinHuaPlayerConclude::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ZhaJinHuaPlayerConclude::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ZhaJinHuaPlayerConclude::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ZhaJinHuaPlayerConclude::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ZhaJinHuaPlayerConclude::name() const {
  // @@protoc_insertion_point(field_get:ZhaJinHuaPlayerConclude.name)
  return name_.GetNoArena();
}
void ZhaJinHuaPlayerConclude::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZhaJinHuaPlayerConclude.name)
}
#if LANG_CXX11
void ZhaJinHuaPlayerConclude::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZhaJinHuaPlayerConclude.name)
}
#endif
void ZhaJinHuaPlayerConclude::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZhaJinHuaPlayerConclude.name)
}
void ZhaJinHuaPlayerConclude::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZhaJinHuaPlayerConclude.name)
}
::std::string* ZhaJinHuaPlayerConclude::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ZhaJinHuaPlayerConclude.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZhaJinHuaPlayerConclude::release_name() {
  // @@protoc_insertion_point(field_release:ZhaJinHuaPlayerConclude.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZhaJinHuaPlayerConclude::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ZhaJinHuaPlayerConclude.name)
}

// optional int32 status = 7;
bool ZhaJinHuaPlayerConclude::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ZhaJinHuaPlayerConclude::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
void ZhaJinHuaPlayerConclude::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
void ZhaJinHuaPlayerConclude::clear_status() {
  status_ = 0;
  clear_has_status();
}
::google::protobuf::int32 ZhaJinHuaPlayerConclude::status() const {
  // @@protoc_insertion_point(field_get:ZhaJinHuaPlayerConclude.status)
  return status_;
}
void ZhaJinHuaPlayerConclude::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ZhaJinHuaPlayerConclude.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaEnd::kWinChairIdFieldNumber;
const int SC_ZhaJinHuaEnd::kPbConcludeFieldNumber;
const int SC_ZhaJinHuaEnd::kTaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaEnd::SC_ZhaJinHuaEnd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaEnd)
}
SC_ZhaJinHuaEnd::SC_ZhaJinHuaEnd(const SC_ZhaJinHuaEnd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_conclude_(from.pb_conclude_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&win_chair_id_, &from.win_chair_id_,
    reinterpret_cast<char*>(&tax_) -
    reinterpret_cast<char*>(&win_chair_id_) + sizeof(tax_));
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaEnd)
}

void SC_ZhaJinHuaEnd::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&win_chair_id_, 0, reinterpret_cast<char*>(&tax_) -
    reinterpret_cast<char*>(&win_chair_id_) + sizeof(tax_));
}

SC_ZhaJinHuaEnd::~SC_ZhaJinHuaEnd() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaEnd)
  SharedDtor();
}

void SC_ZhaJinHuaEnd::SharedDtor() {
}

void SC_ZhaJinHuaEnd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaEnd::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaEnd& SC_ZhaJinHuaEnd::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaEnd* SC_ZhaJinHuaEnd::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaEnd* n = new SC_ZhaJinHuaEnd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaEnd)
  pb_conclude_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&win_chair_id_, 0, reinterpret_cast<char*>(&tax_) -
      reinterpret_cast<char*>(&win_chair_id_) + sizeof(tax_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaEnd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 win_chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_win_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &win_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ZhaJinHuaPlayerConclude pb_conclude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_conclude()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tax = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_tax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaEnd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaEnd)
  return false;
#undef DO_
}

void SC_ZhaJinHuaEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 win_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->win_chair_id(), output);
  }

  // repeated .ZhaJinHuaPlayerConclude pb_conclude = 2;
  for (unsigned int i = 0, n = this->pb_conclude_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pb_conclude(i), output);
  }

  // optional int32 tax = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tax(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaEnd)
}

::google::protobuf::uint8* SC_ZhaJinHuaEnd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaEnd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 win_chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->win_chair_id(), target);
  }

  // repeated .ZhaJinHuaPlayerConclude pb_conclude = 2;
  for (unsigned int i = 0, n = this->pb_conclude_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->pb_conclude(i), deterministic, target);
  }

  // optional int32 tax = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tax(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaEnd)
  return target;
}

size_t SC_ZhaJinHuaEnd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaEnd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .ZhaJinHuaPlayerConclude pb_conclude = 2;
  {
    unsigned int count = this->pb_conclude_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_conclude(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 win_chair_id = 1;
    if (has_win_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->win_chair_id());
    }

    // optional int32 tax = 3;
    if (has_tax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tax());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaEnd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaEnd)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaEnd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaEnd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaEnd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaEnd)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaEnd::MergeFrom(const SC_ZhaJinHuaEnd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaEnd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_conclude_.MergeFrom(from.pb_conclude_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      win_chair_id_ = from.win_chair_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      tax_ = from.tax_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ZhaJinHuaEnd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaEnd::CopyFrom(const SC_ZhaJinHuaEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaEnd::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaEnd::Swap(SC_ZhaJinHuaEnd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaEnd::InternalSwap(SC_ZhaJinHuaEnd* other) {
  pb_conclude_.InternalSwap(&other->pb_conclude_);
  std::swap(win_chair_id_, other->win_chair_id_);
  std::swap(tax_, other->tax_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaEnd::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaEnd

// optional int32 win_chair_id = 1;
bool SC_ZhaJinHuaEnd::has_win_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaEnd::set_has_win_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaEnd::clear_has_win_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaEnd::clear_win_chair_id() {
  win_chair_id_ = 0;
  clear_has_win_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaEnd::win_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaEnd.win_chair_id)
  return win_chair_id_;
}
void SC_ZhaJinHuaEnd::set_win_chair_id(::google::protobuf::int32 value) {
  set_has_win_chair_id();
  win_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaEnd.win_chair_id)
}

// repeated .ZhaJinHuaPlayerConclude pb_conclude = 2;
int SC_ZhaJinHuaEnd::pb_conclude_size() const {
  return pb_conclude_.size();
}
void SC_ZhaJinHuaEnd::clear_pb_conclude() {
  pb_conclude_.Clear();
}
const ::ZhaJinHuaPlayerConclude& SC_ZhaJinHuaEnd::pb_conclude(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaEnd.pb_conclude)
  return pb_conclude_.Get(index);
}
::ZhaJinHuaPlayerConclude* SC_ZhaJinHuaEnd::mutable_pb_conclude(int index) {
  // @@protoc_insertion_point(field_mutable:SC_ZhaJinHuaEnd.pb_conclude)
  return pb_conclude_.Mutable(index);
}
::ZhaJinHuaPlayerConclude* SC_ZhaJinHuaEnd::add_pb_conclude() {
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaEnd.pb_conclude)
  return pb_conclude_.Add();
}
::google::protobuf::RepeatedPtrField< ::ZhaJinHuaPlayerConclude >*
SC_ZhaJinHuaEnd::mutable_pb_conclude() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaEnd.pb_conclude)
  return &pb_conclude_;
}
const ::google::protobuf::RepeatedPtrField< ::ZhaJinHuaPlayerConclude >&
SC_ZhaJinHuaEnd::pb_conclude() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaEnd.pb_conclude)
  return pb_conclude_;
}

// optional int32 tax = 3;
bool SC_ZhaJinHuaEnd::has_tax() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ZhaJinHuaEnd::set_has_tax() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ZhaJinHuaEnd::clear_has_tax() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ZhaJinHuaEnd::clear_tax() {
  tax_ = 0;
  clear_has_tax();
}
::google::protobuf::int32 SC_ZhaJinHuaEnd::tax() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaEnd.tax)
  return tax_;
}
void SC_ZhaJinHuaEnd::set_tax(::google::protobuf::int32 value) {
  set_has_tax();
  tax_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaEnd.tax)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaReConnect::kChairIdFieldNumber;
const int SC_ZhaJinHuaReConnect::kBankerChairIdFieldNumber;
const int SC_ZhaJinHuaReConnect::kIsseecardFieldNumber;
const int SC_ZhaJinHuaReConnect::kCardsFieldNumber;
const int SC_ZhaJinHuaReConnect::kDeadChairFieldNumber;
const int SC_ZhaJinHuaReConnect::kTotalmoneyFieldNumber;
const int SC_ZhaJinHuaReConnect::kScoreFieldNumber;
const int SC_ZhaJinHuaReConnect::kRoundFieldNumber;
const int SC_ZhaJinHuaReConnect::kPlayermoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaReConnect::SC_ZhaJinHuaReConnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaReConnect)
}
SC_ZhaJinHuaReConnect::SC_ZhaJinHuaReConnect(const SC_ZhaJinHuaReConnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      cards_(from.cards_),
      dead_chair_(from.dead_chair_),
      playermoney_(from.playermoney_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&chair_id_, &from.chair_id_,
    reinterpret_cast<char*>(&round_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(round_));
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaReConnect)
}

void SC_ZhaJinHuaReConnect::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&chair_id_, 0, reinterpret_cast<char*>(&round_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(round_));
}

SC_ZhaJinHuaReConnect::~SC_ZhaJinHuaReConnect() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaReConnect)
  SharedDtor();
}

void SC_ZhaJinHuaReConnect::SharedDtor() {
}

void SC_ZhaJinHuaReConnect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaReConnect::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaReConnect& SC_ZhaJinHuaReConnect::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaReConnect* SC_ZhaJinHuaReConnect::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaReConnect* n = new SC_ZhaJinHuaReConnect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaReConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaReConnect)
  cards_.Clear();
  dead_chair_.Clear();
  playermoney_.Clear();
  if (_has_bits_[0 / 32] & 63u) {
    ::memset(&chair_id_, 0, reinterpret_cast<char*>(&round_) -
      reinterpret_cast<char*>(&chair_id_) + sizeof(round_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaReConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaReConnect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 banker_chair_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_banker_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &banker_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isseecard = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_isseecard();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isseecard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 cards = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_cards())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(34u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 dead_chair = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40u, input, this->mutable_dead_chair())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(42u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dead_chair())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 totalmoney = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_totalmoney();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalmoney_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 score = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 round = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_round();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &round_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 playermoney = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 72u, input, this->mutable_playermoney())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(74u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_playermoney())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaReConnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaReConnect)
  return false;
#undef DO_
}

void SC_ZhaJinHuaReConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaReConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chair_id(), output);
  }

  // optional int32 banker_chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->banker_chair_id(), output);
  }

  // optional bool isseecard = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isseecard(), output);
  }

  // repeated int32 cards = 4;
  for (int i = 0, n = this->cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->cards(i), output);
  }

  // repeated int32 dead_chair = 5;
  for (int i = 0, n = this->dead_chair_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->dead_chair(i), output);
  }

  // optional int32 totalmoney = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->totalmoney(), output);
  }

  // optional int32 score = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->score(), output);
  }

  // optional int32 round = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->round(), output);
  }

  // repeated int32 playermoney = 9;
  for (int i = 0, n = this->playermoney_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      9, this->playermoney(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaReConnect)
}

::google::protobuf::uint8* SC_ZhaJinHuaReConnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaReConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chair_id(), target);
  }

  // optional int32 banker_chair_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->banker_chair_id(), target);
  }

  // optional bool isseecard = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isseecard(), target);
  }

  // repeated int32 cards = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->cards_, target);

  // repeated int32 dead_chair = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(5, this->dead_chair_, target);

  // optional int32 totalmoney = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->totalmoney(), target);
  }

  // optional int32 score = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->score(), target);
  }

  // optional int32 round = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->round(), target);
  }

  // repeated int32 playermoney = 9;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(9, this->playermoney_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaReConnect)
  return target;
}

size_t SC_ZhaJinHuaReConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaReConnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 cards = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->cards_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cards_size());
    total_size += data_size;
  }

  // repeated int32 dead_chair = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->dead_chair_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->dead_chair_size());
    total_size += data_size;
  }

  // repeated int32 playermoney = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->playermoney_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->playermoney_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional int32 chair_id = 1;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 banker_chair_id = 2;
    if (has_banker_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->banker_chair_id());
    }

    // optional bool isseecard = 3;
    if (has_isseecard()) {
      total_size += 1 + 1;
    }

    // optional int32 totalmoney = 6;
    if (has_totalmoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totalmoney());
    }

    // optional int32 score = 7;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }

    // optional int32 round = 8;
    if (has_round()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->round());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaReConnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaReConnect)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaReConnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaReConnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaReConnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaReConnect)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaReConnect::MergeFrom(const SC_ZhaJinHuaReConnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaReConnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cards_.MergeFrom(from.cards_);
  dead_chair_.MergeFrom(from.dead_chair_);
  playermoney_.MergeFrom(from.playermoney_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      banker_chair_id_ = from.banker_chair_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      isseecard_ = from.isseecard_;
    }
    if (cached_has_bits & 0x00000008u) {
      totalmoney_ = from.totalmoney_;
    }
    if (cached_has_bits & 0x00000010u) {
      score_ = from.score_;
    }
    if (cached_has_bits & 0x00000020u) {
      round_ = from.round_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ZhaJinHuaReConnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaReConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaReConnect::CopyFrom(const SC_ZhaJinHuaReConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaReConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaReConnect::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaReConnect::Swap(SC_ZhaJinHuaReConnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaReConnect::InternalSwap(SC_ZhaJinHuaReConnect* other) {
  cards_.InternalSwap(&other->cards_);
  dead_chair_.InternalSwap(&other->dead_chair_);
  playermoney_.InternalSwap(&other->playermoney_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(banker_chair_id_, other->banker_chair_id_);
  std::swap(isseecard_, other->isseecard_);
  std::swap(totalmoney_, other->totalmoney_);
  std::swap(score_, other->score_);
  std::swap(round_, other->round_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaReConnect::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaReConnect

// optional int32 chair_id = 1;
bool SC_ZhaJinHuaReConnect::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaReConnect::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaReConnect::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaReConnect::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaReConnect::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaReConnect.chair_id)
  return chair_id_;
}
void SC_ZhaJinHuaReConnect::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaReConnect.chair_id)
}

// optional int32 banker_chair_id = 2;
bool SC_ZhaJinHuaReConnect::has_banker_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ZhaJinHuaReConnect::set_has_banker_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ZhaJinHuaReConnect::clear_has_banker_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ZhaJinHuaReConnect::clear_banker_chair_id() {
  banker_chair_id_ = 0;
  clear_has_banker_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaReConnect::banker_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaReConnect.banker_chair_id)
  return banker_chair_id_;
}
void SC_ZhaJinHuaReConnect::set_banker_chair_id(::google::protobuf::int32 value) {
  set_has_banker_chair_id();
  banker_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaReConnect.banker_chair_id)
}

// optional bool isseecard = 3;
bool SC_ZhaJinHuaReConnect::has_isseecard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ZhaJinHuaReConnect::set_has_isseecard() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ZhaJinHuaReConnect::clear_has_isseecard() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ZhaJinHuaReConnect::clear_isseecard() {
  isseecard_ = false;
  clear_has_isseecard();
}
bool SC_ZhaJinHuaReConnect::isseecard() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaReConnect.isseecard)
  return isseecard_;
}
void SC_ZhaJinHuaReConnect::set_isseecard(bool value) {
  set_has_isseecard();
  isseecard_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaReConnect.isseecard)
}

// repeated int32 cards = 4;
int SC_ZhaJinHuaReConnect::cards_size() const {
  return cards_.size();
}
void SC_ZhaJinHuaReConnect::clear_cards() {
  cards_.Clear();
}
::google::protobuf::int32 SC_ZhaJinHuaReConnect::cards(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaReConnect.cards)
  return cards_.Get(index);
}
void SC_ZhaJinHuaReConnect::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaReConnect.cards)
}
void SC_ZhaJinHuaReConnect::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaReConnect.cards)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_ZhaJinHuaReConnect::cards() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaReConnect.cards)
  return cards_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_ZhaJinHuaReConnect::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaReConnect.cards)
  return &cards_;
}

// repeated int32 dead_chair = 5;
int SC_ZhaJinHuaReConnect::dead_chair_size() const {
  return dead_chair_.size();
}
void SC_ZhaJinHuaReConnect::clear_dead_chair() {
  dead_chair_.Clear();
}
::google::protobuf::int32 SC_ZhaJinHuaReConnect::dead_chair(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaReConnect.dead_chair)
  return dead_chair_.Get(index);
}
void SC_ZhaJinHuaReConnect::set_dead_chair(int index, ::google::protobuf::int32 value) {
  dead_chair_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaReConnect.dead_chair)
}
void SC_ZhaJinHuaReConnect::add_dead_chair(::google::protobuf::int32 value) {
  dead_chair_.Add(value);
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaReConnect.dead_chair)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_ZhaJinHuaReConnect::dead_chair() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaReConnect.dead_chair)
  return dead_chair_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_ZhaJinHuaReConnect::mutable_dead_chair() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaReConnect.dead_chair)
  return &dead_chair_;
}

// optional int32 totalmoney = 6;
bool SC_ZhaJinHuaReConnect::has_totalmoney() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_ZhaJinHuaReConnect::set_has_totalmoney() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_ZhaJinHuaReConnect::clear_has_totalmoney() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_ZhaJinHuaReConnect::clear_totalmoney() {
  totalmoney_ = 0;
  clear_has_totalmoney();
}
::google::protobuf::int32 SC_ZhaJinHuaReConnect::totalmoney() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaReConnect.totalmoney)
  return totalmoney_;
}
void SC_ZhaJinHuaReConnect::set_totalmoney(::google::protobuf::int32 value) {
  set_has_totalmoney();
  totalmoney_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaReConnect.totalmoney)
}

// optional int32 score = 7;
bool SC_ZhaJinHuaReConnect::has_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SC_ZhaJinHuaReConnect::set_has_score() {
  _has_bits_[0] |= 0x00000010u;
}
void SC_ZhaJinHuaReConnect::clear_has_score() {
  _has_bits_[0] &= ~0x00000010u;
}
void SC_ZhaJinHuaReConnect::clear_score() {
  score_ = 0;
  clear_has_score();
}
::google::protobuf::int32 SC_ZhaJinHuaReConnect::score() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaReConnect.score)
  return score_;
}
void SC_ZhaJinHuaReConnect::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaReConnect.score)
}

// optional int32 round = 8;
bool SC_ZhaJinHuaReConnect::has_round() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SC_ZhaJinHuaReConnect::set_has_round() {
  _has_bits_[0] |= 0x00000020u;
}
void SC_ZhaJinHuaReConnect::clear_has_round() {
  _has_bits_[0] &= ~0x00000020u;
}
void SC_ZhaJinHuaReConnect::clear_round() {
  round_ = 0;
  clear_has_round();
}
::google::protobuf::int32 SC_ZhaJinHuaReConnect::round() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaReConnect.round)
  return round_;
}
void SC_ZhaJinHuaReConnect::set_round(::google::protobuf::int32 value) {
  set_has_round();
  round_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaReConnect.round)
}

// repeated int32 playermoney = 9;
int SC_ZhaJinHuaReConnect::playermoney_size() const {
  return playermoney_.size();
}
void SC_ZhaJinHuaReConnect::clear_playermoney() {
  playermoney_.Clear();
}
::google::protobuf::int32 SC_ZhaJinHuaReConnect::playermoney(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaReConnect.playermoney)
  return playermoney_.Get(index);
}
void SC_ZhaJinHuaReConnect::set_playermoney(int index, ::google::protobuf::int32 value) {
  playermoney_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaReConnect.playermoney)
}
void SC_ZhaJinHuaReConnect::add_playermoney(::google::protobuf::int32 value) {
  playermoney_.Add(value);
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaReConnect.playermoney)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_ZhaJinHuaReConnect::playermoney() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaReConnect.playermoney)
  return playermoney_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_ZhaJinHuaReConnect::mutable_playermoney() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaReConnect.playermoney)
  return &playermoney_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaWatch::kStatusFieldNumber;
const int SC_ZhaJinHuaWatch::kIsseecardFieldNumber;
const int SC_ZhaJinHuaWatch::kBankerChairIdFieldNumber;
const int SC_ZhaJinHuaWatch::kRoomStatusFieldNumber;
const int SC_ZhaJinHuaWatch::kTotalmoneyFieldNumber;
const int SC_ZhaJinHuaWatch::kScoreFieldNumber;
const int SC_ZhaJinHuaWatch::kRoundFieldNumber;
const int SC_ZhaJinHuaWatch::kPlayermoneyFieldNumber;
const int SC_ZhaJinHuaWatch::kAllbetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaWatch::SC_ZhaJinHuaWatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaWatch)
}
SC_ZhaJinHuaWatch::SC_ZhaJinHuaWatch(const SC_ZhaJinHuaWatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      status_(from.status_),
      isseecard_(from.isseecard_),
      playermoney_(from.playermoney_),
      allbet_(from.allbet_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&banker_chair_id_, &from.banker_chair_id_,
    reinterpret_cast<char*>(&round_) -
    reinterpret_cast<char*>(&banker_chair_id_) + sizeof(round_));
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaWatch)
}

void SC_ZhaJinHuaWatch::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&banker_chair_id_, 0, reinterpret_cast<char*>(&round_) -
    reinterpret_cast<char*>(&banker_chair_id_) + sizeof(round_));
}

SC_ZhaJinHuaWatch::~SC_ZhaJinHuaWatch() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaWatch)
  SharedDtor();
}

void SC_ZhaJinHuaWatch::SharedDtor() {
}

void SC_ZhaJinHuaWatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaWatch::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaWatch& SC_ZhaJinHuaWatch::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaWatch* SC_ZhaJinHuaWatch::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaWatch* n = new SC_ZhaJinHuaWatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaWatch::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaWatch)
  status_.Clear();
  isseecard_.Clear();
  playermoney_.Clear();
  allbet_.Clear();
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&banker_chair_id_, 0, reinterpret_cast<char*>(&round_) -
      reinterpret_cast<char*>(&banker_chair_id_) + sizeof(round_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaWatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaWatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_status())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_status())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool isseecard = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 16u, input, this->mutable_isseecard())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_isseecard())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 banker_chair_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_banker_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &banker_chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 room_status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_room_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 totalmoney = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_totalmoney();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalmoney_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 score = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 round = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_round();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &round_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 playermoney = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64u, input, this->mutable_playermoney())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(66u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_playermoney())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 allbet = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 72u, input, this->mutable_allbet())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(74u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_allbet())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaWatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaWatch)
  return false;
#undef DO_
}

void SC_ZhaJinHuaWatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaWatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 status = 1;
  for (int i = 0, n = this->status_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->status(i), output);
  }

  // repeated bool isseecard = 2;
  for (int i = 0, n = this->isseecard_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      2, this->isseecard(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 banker_chair_id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->banker_chair_id(), output);
  }

  // optional int32 room_status = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->room_status(), output);
  }

  // optional int32 totalmoney = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->totalmoney(), output);
  }

  // optional int32 score = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->score(), output);
  }

  // optional int32 round = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->round(), output);
  }

  // repeated int32 playermoney = 8;
  for (int i = 0, n = this->playermoney_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->playermoney(i), output);
  }

  // repeated int32 allbet = 9;
  for (int i = 0, n = this->allbet_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      9, this->allbet(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaWatch)
}

::google::protobuf::uint8* SC_ZhaJinHuaWatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaWatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 status = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->status_, target);

  // repeated bool isseecard = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteBoolToArray(2, this->isseecard_, target);

  cached_has_bits = _has_bits_[0];
  // optional int32 banker_chair_id = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->banker_chair_id(), target);
  }

  // optional int32 room_status = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->room_status(), target);
  }

  // optional int32 totalmoney = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->totalmoney(), target);
  }

  // optional int32 score = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->score(), target);
  }

  // optional int32 round = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->round(), target);
  }

  // repeated int32 playermoney = 8;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(8, this->playermoney_, target);

  // repeated int32 allbet = 9;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(9, this->allbet_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaWatch)
  return target;
}

size_t SC_ZhaJinHuaWatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaWatch)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 status = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->status_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->status_size());
    total_size += data_size;
  }

  // repeated bool isseecard = 2;
  {
    unsigned int count = this->isseecard_size();
    size_t data_size = 1UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->isseecard_size());
    total_size += data_size;
  }

  // repeated int32 playermoney = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->playermoney_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->playermoney_size());
    total_size += data_size;
  }

  // repeated int32 allbet = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->allbet_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->allbet_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 banker_chair_id = 3;
    if (has_banker_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->banker_chair_id());
    }

    // optional int32 room_status = 4;
    if (has_room_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_status());
    }

    // optional int32 totalmoney = 5;
    if (has_totalmoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totalmoney());
    }

    // optional int32 score = 6;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }

    // optional int32 round = 7;
    if (has_round()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->round());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaWatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaWatch)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaWatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaWatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaWatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaWatch)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaWatch::MergeFrom(const SC_ZhaJinHuaWatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaWatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  status_.MergeFrom(from.status_);
  isseecard_.MergeFrom(from.isseecard_);
  playermoney_.MergeFrom(from.playermoney_);
  allbet_.MergeFrom(from.allbet_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      banker_chair_id_ = from.banker_chair_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      room_status_ = from.room_status_;
    }
    if (cached_has_bits & 0x00000004u) {
      totalmoney_ = from.totalmoney_;
    }
    if (cached_has_bits & 0x00000008u) {
      score_ = from.score_;
    }
    if (cached_has_bits & 0x00000010u) {
      round_ = from.round_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ZhaJinHuaWatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaWatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaWatch::CopyFrom(const SC_ZhaJinHuaWatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaWatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaWatch::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaWatch::Swap(SC_ZhaJinHuaWatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaWatch::InternalSwap(SC_ZhaJinHuaWatch* other) {
  status_.InternalSwap(&other->status_);
  isseecard_.InternalSwap(&other->isseecard_);
  playermoney_.InternalSwap(&other->playermoney_);
  allbet_.InternalSwap(&other->allbet_);
  std::swap(banker_chair_id_, other->banker_chair_id_);
  std::swap(room_status_, other->room_status_);
  std::swap(totalmoney_, other->totalmoney_);
  std::swap(score_, other->score_);
  std::swap(round_, other->round_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaWatch::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaWatch

// repeated int32 status = 1;
int SC_ZhaJinHuaWatch::status_size() const {
  return status_.size();
}
void SC_ZhaJinHuaWatch::clear_status() {
  status_.Clear();
}
::google::protobuf::int32 SC_ZhaJinHuaWatch::status(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaWatch.status)
  return status_.Get(index);
}
void SC_ZhaJinHuaWatch::set_status(int index, ::google::protobuf::int32 value) {
  status_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaWatch.status)
}
void SC_ZhaJinHuaWatch::add_status(::google::protobuf::int32 value) {
  status_.Add(value);
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaWatch.status)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_ZhaJinHuaWatch::status() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaWatch.status)
  return status_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_ZhaJinHuaWatch::mutable_status() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaWatch.status)
  return &status_;
}

// repeated bool isseecard = 2;
int SC_ZhaJinHuaWatch::isseecard_size() const {
  return isseecard_.size();
}
void SC_ZhaJinHuaWatch::clear_isseecard() {
  isseecard_.Clear();
}
bool SC_ZhaJinHuaWatch::isseecard(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaWatch.isseecard)
  return isseecard_.Get(index);
}
void SC_ZhaJinHuaWatch::set_isseecard(int index, bool value) {
  isseecard_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaWatch.isseecard)
}
void SC_ZhaJinHuaWatch::add_isseecard(bool value) {
  isseecard_.Add(value);
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaWatch.isseecard)
}
const ::google::protobuf::RepeatedField< bool >&
SC_ZhaJinHuaWatch::isseecard() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaWatch.isseecard)
  return isseecard_;
}
::google::protobuf::RepeatedField< bool >*
SC_ZhaJinHuaWatch::mutable_isseecard() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaWatch.isseecard)
  return &isseecard_;
}

// optional int32 banker_chair_id = 3;
bool SC_ZhaJinHuaWatch::has_banker_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaWatch::set_has_banker_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaWatch::clear_has_banker_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaWatch::clear_banker_chair_id() {
  banker_chair_id_ = 0;
  clear_has_banker_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaWatch::banker_chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaWatch.banker_chair_id)
  return banker_chair_id_;
}
void SC_ZhaJinHuaWatch::set_banker_chair_id(::google::protobuf::int32 value) {
  set_has_banker_chair_id();
  banker_chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaWatch.banker_chair_id)
}

// optional int32 room_status = 4;
bool SC_ZhaJinHuaWatch::has_room_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ZhaJinHuaWatch::set_has_room_status() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ZhaJinHuaWatch::clear_has_room_status() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ZhaJinHuaWatch::clear_room_status() {
  room_status_ = 0;
  clear_has_room_status();
}
::google::protobuf::int32 SC_ZhaJinHuaWatch::room_status() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaWatch.room_status)
  return room_status_;
}
void SC_ZhaJinHuaWatch::set_room_status(::google::protobuf::int32 value) {
  set_has_room_status();
  room_status_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaWatch.room_status)
}

// optional int32 totalmoney = 5;
bool SC_ZhaJinHuaWatch::has_totalmoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ZhaJinHuaWatch::set_has_totalmoney() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ZhaJinHuaWatch::clear_has_totalmoney() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ZhaJinHuaWatch::clear_totalmoney() {
  totalmoney_ = 0;
  clear_has_totalmoney();
}
::google::protobuf::int32 SC_ZhaJinHuaWatch::totalmoney() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaWatch.totalmoney)
  return totalmoney_;
}
void SC_ZhaJinHuaWatch::set_totalmoney(::google::protobuf::int32 value) {
  set_has_totalmoney();
  totalmoney_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaWatch.totalmoney)
}

// optional int32 score = 6;
bool SC_ZhaJinHuaWatch::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_ZhaJinHuaWatch::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_ZhaJinHuaWatch::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_ZhaJinHuaWatch::clear_score() {
  score_ = 0;
  clear_has_score();
}
::google::protobuf::int32 SC_ZhaJinHuaWatch::score() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaWatch.score)
  return score_;
}
void SC_ZhaJinHuaWatch::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaWatch.score)
}

// optional int32 round = 7;
bool SC_ZhaJinHuaWatch::has_round() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SC_ZhaJinHuaWatch::set_has_round() {
  _has_bits_[0] |= 0x00000010u;
}
void SC_ZhaJinHuaWatch::clear_has_round() {
  _has_bits_[0] &= ~0x00000010u;
}
void SC_ZhaJinHuaWatch::clear_round() {
  round_ = 0;
  clear_has_round();
}
::google::protobuf::int32 SC_ZhaJinHuaWatch::round() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaWatch.round)
  return round_;
}
void SC_ZhaJinHuaWatch::set_round(::google::protobuf::int32 value) {
  set_has_round();
  round_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaWatch.round)
}

// repeated int32 playermoney = 8;
int SC_ZhaJinHuaWatch::playermoney_size() const {
  return playermoney_.size();
}
void SC_ZhaJinHuaWatch::clear_playermoney() {
  playermoney_.Clear();
}
::google::protobuf::int32 SC_ZhaJinHuaWatch::playermoney(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaWatch.playermoney)
  return playermoney_.Get(index);
}
void SC_ZhaJinHuaWatch::set_playermoney(int index, ::google::protobuf::int32 value) {
  playermoney_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaWatch.playermoney)
}
void SC_ZhaJinHuaWatch::add_playermoney(::google::protobuf::int32 value) {
  playermoney_.Add(value);
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaWatch.playermoney)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_ZhaJinHuaWatch::playermoney() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaWatch.playermoney)
  return playermoney_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_ZhaJinHuaWatch::mutable_playermoney() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaWatch.playermoney)
  return &playermoney_;
}

// repeated int32 allbet = 9;
int SC_ZhaJinHuaWatch::allbet_size() const {
  return allbet_.size();
}
void SC_ZhaJinHuaWatch::clear_allbet() {
  allbet_.Clear();
}
::google::protobuf::int32 SC_ZhaJinHuaWatch::allbet(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaWatch.allbet)
  return allbet_.Get(index);
}
void SC_ZhaJinHuaWatch::set_allbet(int index, ::google::protobuf::int32 value) {
  allbet_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaWatch.allbet)
}
void SC_ZhaJinHuaWatch::add_allbet(::google::protobuf::int32 value) {
  allbet_.Add(value);
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaWatch.allbet)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_ZhaJinHuaWatch::allbet() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaWatch.allbet)
  return allbet_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_ZhaJinHuaWatch::mutable_allbet() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaWatch.allbet)
  return &allbet_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ZhaJinHuaGetPlayerStatus::CS_ZhaJinHuaGetPlayerStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ZhaJinHuaGetPlayerStatus)
}
CS_ZhaJinHuaGetPlayerStatus::CS_ZhaJinHuaGetPlayerStatus(const CS_ZhaJinHuaGetPlayerStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_ZhaJinHuaGetPlayerStatus)
}

void CS_ZhaJinHuaGetPlayerStatus::SharedCtor() {
  _cached_size_ = 0;
}

CS_ZhaJinHuaGetPlayerStatus::~CS_ZhaJinHuaGetPlayerStatus() {
  // @@protoc_insertion_point(destructor:CS_ZhaJinHuaGetPlayerStatus)
  SharedDtor();
}

void CS_ZhaJinHuaGetPlayerStatus::SharedDtor() {
}

void CS_ZhaJinHuaGetPlayerStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ZhaJinHuaGetPlayerStatus::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ZhaJinHuaGetPlayerStatus& CS_ZhaJinHuaGetPlayerStatus::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ZhaJinHuaGetPlayerStatus* CS_ZhaJinHuaGetPlayerStatus::New(::google::protobuf::Arena* arena) const {
  CS_ZhaJinHuaGetPlayerStatus* n = new CS_ZhaJinHuaGetPlayerStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ZhaJinHuaGetPlayerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ZhaJinHuaGetPlayerStatus)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ZhaJinHuaGetPlayerStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ZhaJinHuaGetPlayerStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ZhaJinHuaGetPlayerStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ZhaJinHuaGetPlayerStatus)
  return false;
#undef DO_
}

void CS_ZhaJinHuaGetPlayerStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ZhaJinHuaGetPlayerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ZhaJinHuaGetPlayerStatus)
}

::google::protobuf::uint8* CS_ZhaJinHuaGetPlayerStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ZhaJinHuaGetPlayerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ZhaJinHuaGetPlayerStatus)
  return target;
}

size_t CS_ZhaJinHuaGetPlayerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ZhaJinHuaGetPlayerStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ZhaJinHuaGetPlayerStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ZhaJinHuaGetPlayerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ZhaJinHuaGetPlayerStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ZhaJinHuaGetPlayerStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ZhaJinHuaGetPlayerStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ZhaJinHuaGetPlayerStatus)
    MergeFrom(*source);
  }
}

void CS_ZhaJinHuaGetPlayerStatus::MergeFrom(const CS_ZhaJinHuaGetPlayerStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ZhaJinHuaGetPlayerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_ZhaJinHuaGetPlayerStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ZhaJinHuaGetPlayerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ZhaJinHuaGetPlayerStatus::CopyFrom(const CS_ZhaJinHuaGetPlayerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ZhaJinHuaGetPlayerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ZhaJinHuaGetPlayerStatus::IsInitialized() const {
  return true;
}

void CS_ZhaJinHuaGetPlayerStatus::Swap(CS_ZhaJinHuaGetPlayerStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ZhaJinHuaGetPlayerStatus::InternalSwap(CS_ZhaJinHuaGetPlayerStatus* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ZhaJinHuaGetPlayerStatus::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ZhaJinHuaGetPlayerStatus

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ZhaJinHuaGetSitDown::CS_ZhaJinHuaGetSitDown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ZhaJinHuaGetSitDown)
}
CS_ZhaJinHuaGetSitDown::CS_ZhaJinHuaGetSitDown(const CS_ZhaJinHuaGetSitDown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_ZhaJinHuaGetSitDown)
}

void CS_ZhaJinHuaGetSitDown::SharedCtor() {
  _cached_size_ = 0;
}

CS_ZhaJinHuaGetSitDown::~CS_ZhaJinHuaGetSitDown() {
  // @@protoc_insertion_point(destructor:CS_ZhaJinHuaGetSitDown)
  SharedDtor();
}

void CS_ZhaJinHuaGetSitDown::SharedDtor() {
}

void CS_ZhaJinHuaGetSitDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ZhaJinHuaGetSitDown::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ZhaJinHuaGetSitDown& CS_ZhaJinHuaGetSitDown::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ZhaJinHuaGetSitDown* CS_ZhaJinHuaGetSitDown::New(::google::protobuf::Arena* arena) const {
  CS_ZhaJinHuaGetSitDown* n = new CS_ZhaJinHuaGetSitDown;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ZhaJinHuaGetSitDown::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ZhaJinHuaGetSitDown)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ZhaJinHuaGetSitDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ZhaJinHuaGetSitDown)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ZhaJinHuaGetSitDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ZhaJinHuaGetSitDown)
  return false;
#undef DO_
}

void CS_ZhaJinHuaGetSitDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ZhaJinHuaGetSitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ZhaJinHuaGetSitDown)
}

::google::protobuf::uint8* CS_ZhaJinHuaGetSitDown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ZhaJinHuaGetSitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ZhaJinHuaGetSitDown)
  return target;
}

size_t CS_ZhaJinHuaGetSitDown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ZhaJinHuaGetSitDown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ZhaJinHuaGetSitDown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ZhaJinHuaGetSitDown)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ZhaJinHuaGetSitDown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ZhaJinHuaGetSitDown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ZhaJinHuaGetSitDown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ZhaJinHuaGetSitDown)
    MergeFrom(*source);
  }
}

void CS_ZhaJinHuaGetSitDown::MergeFrom(const CS_ZhaJinHuaGetSitDown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ZhaJinHuaGetSitDown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_ZhaJinHuaGetSitDown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ZhaJinHuaGetSitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ZhaJinHuaGetSitDown::CopyFrom(const CS_ZhaJinHuaGetSitDown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ZhaJinHuaGetSitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ZhaJinHuaGetSitDown::IsInitialized() const {
  return true;
}

void CS_ZhaJinHuaGetSitDown::Swap(CS_ZhaJinHuaGetSitDown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ZhaJinHuaGetSitDown::InternalSwap(CS_ZhaJinHuaGetSitDown* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ZhaJinHuaGetSitDown::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ZhaJinHuaGetSitDown

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaGetSitDown::kRoomIdFieldNumber;
const int SC_ZhaJinHuaGetSitDown::kTableIdFieldNumber;
const int SC_ZhaJinHuaGetSitDown::kChairIdFieldNumber;
const int SC_ZhaJinHuaGetSitDown::kResultFieldNumber;
const int SC_ZhaJinHuaGetSitDown::kPbVisualInfoFieldNumber;
const int SC_ZhaJinHuaGetSitDown::kGameIdFieldNumber;
const int SC_ZhaJinHuaGetSitDown::kFirstGameTypeFieldNumber;
const int SC_ZhaJinHuaGetSitDown::kSecondGameTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaGetSitDown::SC_ZhaJinHuaGetSitDown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaGetSitDown)
}
SC_ZhaJinHuaGetSitDown::SC_ZhaJinHuaGetSitDown(const SC_ZhaJinHuaGetSitDown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_visual_info_(from.pb_visual_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&room_id_, &from.room_id_,
    reinterpret_cast<char*>(&second_game_type_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(second_game_type_));
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaGetSitDown)
}

void SC_ZhaJinHuaGetSitDown::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&room_id_, 0, reinterpret_cast<char*>(&second_game_type_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(second_game_type_));
}

SC_ZhaJinHuaGetSitDown::~SC_ZhaJinHuaGetSitDown() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaGetSitDown)
  SharedDtor();
}

void SC_ZhaJinHuaGetSitDown::SharedDtor() {
}

void SC_ZhaJinHuaGetSitDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaGetSitDown::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaGetSitDown& SC_ZhaJinHuaGetSitDown::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaGetSitDown* SC_ZhaJinHuaGetSitDown::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaGetSitDown* n = new SC_ZhaJinHuaGetSitDown;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaGetSitDown::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaGetSitDown)
  pb_visual_info_.Clear();
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&room_id_, 0, reinterpret_cast<char*>(&second_game_type_) -
      reinterpret_cast<char*>(&room_id_) + sizeof(second_game_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaGetSitDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaGetSitDown)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 table_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_table_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PlayerVisualInfo pb_visual_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_visual_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 game_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 first_game_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_first_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 second_game_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_second_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaGetSitDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaGetSitDown)
  return false;
#undef DO_
}

void SC_ZhaJinHuaGetSitDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaGetSitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->room_id(), output);
  }

  // optional int32 table_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->table_id(), output);
  }

  // optional int32 chair_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->chair_id(), output);
  }

  // optional int32 result = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->result(), output);
  }

  // repeated .PlayerVisualInfo pb_visual_info = 5;
  for (unsigned int i = 0, n = this->pb_visual_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->pb_visual_info(i), output);
  }

  // optional int32 game_id = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->game_id(), output);
  }

  // optional int32 first_game_type = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->first_game_type(), output);
  }

  // optional int32 second_game_type = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->second_game_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaGetSitDown)
}

::google::protobuf::uint8* SC_ZhaJinHuaGetSitDown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaGetSitDown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 room_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->room_id(), target);
  }

  // optional int32 table_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->table_id(), target);
  }

  // optional int32 chair_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->chair_id(), target);
  }

  // optional int32 result = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->result(), target);
  }

  // repeated .PlayerVisualInfo pb_visual_info = 5;
  for (unsigned int i = 0, n = this->pb_visual_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->pb_visual_info(i), deterministic, target);
  }

  // optional int32 game_id = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->game_id(), target);
  }

  // optional int32 first_game_type = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->first_game_type(), target);
  }

  // optional int32 second_game_type = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->second_game_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaGetSitDown)
  return target;
}

size_t SC_ZhaJinHuaGetSitDown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaGetSitDown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .PlayerVisualInfo pb_visual_info = 5;
  {
    unsigned int count = this->pb_visual_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_visual_info(i));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 room_id = 1;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->room_id());
    }

    // optional int32 table_id = 2;
    if (has_table_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->table_id());
    }

    // optional int32 chair_id = 3;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 result = 4;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 game_id = 6;
    if (has_game_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_id());
    }

    // optional int32 first_game_type = 7;
    if (has_first_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_game_type());
    }

    // optional int32 second_game_type = 8;
    if (has_second_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_game_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaGetSitDown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaGetSitDown)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaGetSitDown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaGetSitDown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaGetSitDown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaGetSitDown)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaGetSitDown::MergeFrom(const SC_ZhaJinHuaGetSitDown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaGetSitDown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_visual_info_.MergeFrom(from.pb_visual_info_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      room_id_ = from.room_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      table_id_ = from.table_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000010u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      first_game_type_ = from.first_game_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      second_game_type_ = from.second_game_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ZhaJinHuaGetSitDown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaGetSitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaGetSitDown::CopyFrom(const SC_ZhaJinHuaGetSitDown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaGetSitDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaGetSitDown::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaGetSitDown::Swap(SC_ZhaJinHuaGetSitDown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaGetSitDown::InternalSwap(SC_ZhaJinHuaGetSitDown* other) {
  pb_visual_info_.InternalSwap(&other->pb_visual_info_);
  std::swap(room_id_, other->room_id_);
  std::swap(table_id_, other->table_id_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(result_, other->result_);
  std::swap(game_id_, other->game_id_);
  std::swap(first_game_type_, other->first_game_type_);
  std::swap(second_game_type_, other->second_game_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaGetSitDown::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaGetSitDown

// optional int32 room_id = 1;
bool SC_ZhaJinHuaGetSitDown::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaGetSitDown::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaGetSitDown::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaGetSitDown::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
::google::protobuf::int32 SC_ZhaJinHuaGetSitDown::room_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaGetSitDown.room_id)
  return room_id_;
}
void SC_ZhaJinHuaGetSitDown::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaGetSitDown.room_id)
}

// optional int32 table_id = 2;
bool SC_ZhaJinHuaGetSitDown::has_table_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ZhaJinHuaGetSitDown::set_has_table_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ZhaJinHuaGetSitDown::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ZhaJinHuaGetSitDown::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
::google::protobuf::int32 SC_ZhaJinHuaGetSitDown::table_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaGetSitDown.table_id)
  return table_id_;
}
void SC_ZhaJinHuaGetSitDown::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaGetSitDown.table_id)
}

// optional int32 chair_id = 3;
bool SC_ZhaJinHuaGetSitDown::has_chair_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ZhaJinHuaGetSitDown::set_has_chair_id() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ZhaJinHuaGetSitDown::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ZhaJinHuaGetSitDown::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaGetSitDown::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaGetSitDown.chair_id)
  return chair_id_;
}
void SC_ZhaJinHuaGetSitDown::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaGetSitDown.chair_id)
}

// optional int32 result = 4;
bool SC_ZhaJinHuaGetSitDown::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_ZhaJinHuaGetSitDown::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_ZhaJinHuaGetSitDown::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_ZhaJinHuaGetSitDown::clear_result() {
  result_ = 0;
  clear_has_result();
}
::google::protobuf::int32 SC_ZhaJinHuaGetSitDown::result() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaGetSitDown.result)
  return result_;
}
void SC_ZhaJinHuaGetSitDown::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaGetSitDown.result)
}

// repeated .PlayerVisualInfo pb_visual_info = 5;
int SC_ZhaJinHuaGetSitDown::pb_visual_info_size() const {
  return pb_visual_info_.size();
}
void SC_ZhaJinHuaGetSitDown::clear_pb_visual_info() {
  pb_visual_info_.Clear();
}
const ::PlayerVisualInfo& SC_ZhaJinHuaGetSitDown::pb_visual_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaGetSitDown.pb_visual_info)
  return pb_visual_info_.Get(index);
}
::PlayerVisualInfo* SC_ZhaJinHuaGetSitDown::mutable_pb_visual_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_ZhaJinHuaGetSitDown.pb_visual_info)
  return pb_visual_info_.Mutable(index);
}
::PlayerVisualInfo* SC_ZhaJinHuaGetSitDown::add_pb_visual_info() {
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaGetSitDown.pb_visual_info)
  return pb_visual_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >*
SC_ZhaJinHuaGetSitDown::mutable_pb_visual_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaGetSitDown.pb_visual_info)
  return &pb_visual_info_;
}
const ::google::protobuf::RepeatedPtrField< ::PlayerVisualInfo >&
SC_ZhaJinHuaGetSitDown::pb_visual_info() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaGetSitDown.pb_visual_info)
  return pb_visual_info_;
}

// optional int32 game_id = 6;
bool SC_ZhaJinHuaGetSitDown::has_game_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SC_ZhaJinHuaGetSitDown::set_has_game_id() {
  _has_bits_[0] |= 0x00000010u;
}
void SC_ZhaJinHuaGetSitDown::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void SC_ZhaJinHuaGetSitDown::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
::google::protobuf::int32 SC_ZhaJinHuaGetSitDown::game_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaGetSitDown.game_id)
  return game_id_;
}
void SC_ZhaJinHuaGetSitDown::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaGetSitDown.game_id)
}

// optional int32 first_game_type = 7;
bool SC_ZhaJinHuaGetSitDown::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SC_ZhaJinHuaGetSitDown::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000020u;
}
void SC_ZhaJinHuaGetSitDown::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void SC_ZhaJinHuaGetSitDown::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
::google::protobuf::int32 SC_ZhaJinHuaGetSitDown::first_game_type() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaGetSitDown.first_game_type)
  return first_game_type_;
}
void SC_ZhaJinHuaGetSitDown::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaGetSitDown.first_game_type)
}

// optional int32 second_game_type = 8;
bool SC_ZhaJinHuaGetSitDown::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SC_ZhaJinHuaGetSitDown::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000040u;
}
void SC_ZhaJinHuaGetSitDown::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void SC_ZhaJinHuaGetSitDown::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
::google::protobuf::int32 SC_ZhaJinHuaGetSitDown::second_game_type() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaGetSitDown.second_game_type)
  return second_game_type_;
}
void SC_ZhaJinHuaGetSitDown::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaGetSitDown.second_game_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaLostCards::kWinCardsFieldNumber;
const int SC_ZhaJinHuaLostCards::kLosterCardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaLostCards::SC_ZhaJinHuaLostCards()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaLostCards)
}
SC_ZhaJinHuaLostCards::SC_ZhaJinHuaLostCards(const SC_ZhaJinHuaLostCards& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      win_cards_(from.win_cards_),
      loster_cards_(from.loster_cards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaLostCards)
}

void SC_ZhaJinHuaLostCards::SharedCtor() {
  _cached_size_ = 0;
}

SC_ZhaJinHuaLostCards::~SC_ZhaJinHuaLostCards() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaLostCards)
  SharedDtor();
}

void SC_ZhaJinHuaLostCards::SharedDtor() {
}

void SC_ZhaJinHuaLostCards::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaLostCards::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaLostCards& SC_ZhaJinHuaLostCards::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaLostCards* SC_ZhaJinHuaLostCards::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaLostCards* n = new SC_ZhaJinHuaLostCards;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaLostCards::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaLostCards)
  win_cards_.Clear();
  loster_cards_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaLostCards::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaLostCards)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 win_cards = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_win_cards())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_win_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 loster_cards = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_loster_cards())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_loster_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaLostCards)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaLostCards)
  return false;
#undef DO_
}

void SC_ZhaJinHuaLostCards::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaLostCards)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 win_cards = 1;
  for (int i = 0, n = this->win_cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->win_cards(i), output);
  }

  // repeated int32 loster_cards = 2;
  for (int i = 0, n = this->loster_cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->loster_cards(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaLostCards)
}

::google::protobuf::uint8* SC_ZhaJinHuaLostCards::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaLostCards)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 win_cards = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->win_cards_, target);

  // repeated int32 loster_cards = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->loster_cards_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaLostCards)
  return target;
}

size_t SC_ZhaJinHuaLostCards::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaLostCards)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 win_cards = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->win_cards_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->win_cards_size());
    total_size += data_size;
  }

  // repeated int32 loster_cards = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->loster_cards_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->loster_cards_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaLostCards::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaLostCards)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaLostCards* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaLostCards>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaLostCards)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaLostCards)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaLostCards::MergeFrom(const SC_ZhaJinHuaLostCards& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaLostCards)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  win_cards_.MergeFrom(from.win_cards_);
  loster_cards_.MergeFrom(from.loster_cards_);
}

void SC_ZhaJinHuaLostCards::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaLostCards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaLostCards::CopyFrom(const SC_ZhaJinHuaLostCards& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaLostCards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaLostCards::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaLostCards::Swap(SC_ZhaJinHuaLostCards* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaLostCards::InternalSwap(SC_ZhaJinHuaLostCards* other) {
  win_cards_.InternalSwap(&other->win_cards_);
  loster_cards_.InternalSwap(&other->loster_cards_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaLostCards::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaLostCards

// repeated int32 win_cards = 1;
int SC_ZhaJinHuaLostCards::win_cards_size() const {
  return win_cards_.size();
}
void SC_ZhaJinHuaLostCards::clear_win_cards() {
  win_cards_.Clear();
}
::google::protobuf::int32 SC_ZhaJinHuaLostCards::win_cards(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaLostCards.win_cards)
  return win_cards_.Get(index);
}
void SC_ZhaJinHuaLostCards::set_win_cards(int index, ::google::protobuf::int32 value) {
  win_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaLostCards.win_cards)
}
void SC_ZhaJinHuaLostCards::add_win_cards(::google::protobuf::int32 value) {
  win_cards_.Add(value);
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaLostCards.win_cards)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_ZhaJinHuaLostCards::win_cards() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaLostCards.win_cards)
  return win_cards_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_ZhaJinHuaLostCards::mutable_win_cards() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaLostCards.win_cards)
  return &win_cards_;
}

// repeated int32 loster_cards = 2;
int SC_ZhaJinHuaLostCards::loster_cards_size() const {
  return loster_cards_.size();
}
void SC_ZhaJinHuaLostCards::clear_loster_cards() {
  loster_cards_.Clear();
}
::google::protobuf::int32 SC_ZhaJinHuaLostCards::loster_cards(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaLostCards.loster_cards)
  return loster_cards_.Get(index);
}
void SC_ZhaJinHuaLostCards::set_loster_cards(int index, ::google::protobuf::int32 value) {
  loster_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaLostCards.loster_cards)
}
void SC_ZhaJinHuaLostCards::add_loster_cards(::google::protobuf::int32 value) {
  loster_cards_.Add(value);
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaLostCards.loster_cards)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_ZhaJinHuaLostCards::loster_cards() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaLostCards.loster_cards)
  return loster_cards_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_ZhaJinHuaLostCards::mutable_loster_cards() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaLostCards.loster_cards)
  return &loster_cards_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaReadyTime::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaReadyTime::SC_ZhaJinHuaReadyTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaReadyTime)
}
SC_ZhaJinHuaReadyTime::SC_ZhaJinHuaReadyTime(const SC_ZhaJinHuaReadyTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaReadyTime)
}

void SC_ZhaJinHuaReadyTime::SharedCtor() {
  _cached_size_ = 0;
  time_ = 0;
}

SC_ZhaJinHuaReadyTime::~SC_ZhaJinHuaReadyTime() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaReadyTime)
  SharedDtor();
}

void SC_ZhaJinHuaReadyTime::SharedDtor() {
}

void SC_ZhaJinHuaReadyTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaReadyTime::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaReadyTime& SC_ZhaJinHuaReadyTime::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaReadyTime* SC_ZhaJinHuaReadyTime::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaReadyTime* n = new SC_ZhaJinHuaReadyTime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaReadyTime::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaReadyTime)
  time_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaReadyTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaReadyTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaReadyTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaReadyTime)
  return false;
#undef DO_
}

void SC_ZhaJinHuaReadyTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaReadyTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaReadyTime)
}

::google::protobuf::uint8* SC_ZhaJinHuaReadyTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaReadyTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaReadyTime)
  return target;
}

size_t SC_ZhaJinHuaReadyTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaReadyTime)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 time = 1;
  if (has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaReadyTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaReadyTime)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaReadyTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaReadyTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaReadyTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaReadyTime)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaReadyTime::MergeFrom(const SC_ZhaJinHuaReadyTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaReadyTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_time()) {
    set_time(from.time());
  }
}

void SC_ZhaJinHuaReadyTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaReadyTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaReadyTime::CopyFrom(const SC_ZhaJinHuaReadyTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaReadyTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaReadyTime::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaReadyTime::Swap(SC_ZhaJinHuaReadyTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaReadyTime::InternalSwap(SC_ZhaJinHuaReadyTime* other) {
  std::swap(time_, other->time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaReadyTime::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaReadyTime

// optional int32 time = 1;
bool SC_ZhaJinHuaReadyTime::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaReadyTime::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaReadyTime::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaReadyTime::clear_time() {
  time_ = 0;
  clear_has_time();
}
::google::protobuf::int32 SC_ZhaJinHuaReadyTime::time() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaReadyTime.time)
  return time_;
}
void SC_ZhaJinHuaReadyTime::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaReadyTime.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaClientReadyTime::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaClientReadyTime::SC_ZhaJinHuaClientReadyTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaClientReadyTime)
}
SC_ZhaJinHuaClientReadyTime::SC_ZhaJinHuaClientReadyTime(const SC_ZhaJinHuaClientReadyTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaClientReadyTime)
}

void SC_ZhaJinHuaClientReadyTime::SharedCtor() {
  _cached_size_ = 0;
  time_ = 0;
}

SC_ZhaJinHuaClientReadyTime::~SC_ZhaJinHuaClientReadyTime() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaClientReadyTime)
  SharedDtor();
}

void SC_ZhaJinHuaClientReadyTime::SharedDtor() {
}

void SC_ZhaJinHuaClientReadyTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaClientReadyTime::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaClientReadyTime& SC_ZhaJinHuaClientReadyTime::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaClientReadyTime* SC_ZhaJinHuaClientReadyTime::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaClientReadyTime* n = new SC_ZhaJinHuaClientReadyTime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaClientReadyTime::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaClientReadyTime)
  time_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaClientReadyTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaClientReadyTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaClientReadyTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaClientReadyTime)
  return false;
#undef DO_
}

void SC_ZhaJinHuaClientReadyTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaClientReadyTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaClientReadyTime)
}

::google::protobuf::uint8* SC_ZhaJinHuaClientReadyTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaClientReadyTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaClientReadyTime)
  return target;
}

size_t SC_ZhaJinHuaClientReadyTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaClientReadyTime)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 time = 1;
  if (has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaClientReadyTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaClientReadyTime)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaClientReadyTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaClientReadyTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaClientReadyTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaClientReadyTime)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaClientReadyTime::MergeFrom(const SC_ZhaJinHuaClientReadyTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaClientReadyTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_time()) {
    set_time(from.time());
  }
}

void SC_ZhaJinHuaClientReadyTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaClientReadyTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaClientReadyTime::CopyFrom(const SC_ZhaJinHuaClientReadyTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaClientReadyTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaClientReadyTime::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaClientReadyTime::Swap(SC_ZhaJinHuaClientReadyTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaClientReadyTime::InternalSwap(SC_ZhaJinHuaClientReadyTime* other) {
  std::swap(time_, other->time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaClientReadyTime::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaClientReadyTime

// optional int32 time = 1;
bool SC_ZhaJinHuaClientReadyTime::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaClientReadyTime::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaClientReadyTime::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaClientReadyTime::clear_time() {
  time_ = 0;
  clear_has_time();
}
::google::protobuf::int32 SC_ZhaJinHuaClientReadyTime::time() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaClientReadyTime.time)
  return time_;
}
void SC_ZhaJinHuaClientReadyTime::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaClientReadyTime.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_ZhaJinHuaPrivateCFG_Set::kFirstSeeFieldNumber;
const int CS_ZhaJinHuaPrivateCFG_Set::kFirstCompareFieldNumber;
const int CS_ZhaJinHuaPrivateCFG_Set::kNoMoneyCompareFieldNumber;
const int CS_ZhaJinHuaPrivateCFG_Set::kMoreRoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ZhaJinHuaPrivateCFG_Set::CS_ZhaJinHuaPrivateCFG_Set()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ZhaJinHuaPrivateCFG_Set)
}
CS_ZhaJinHuaPrivateCFG_Set::CS_ZhaJinHuaPrivateCFG_Set(const CS_ZhaJinHuaPrivateCFG_Set& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&first_see_, &from.first_see_,
    reinterpret_cast<char*>(&more_round_) -
    reinterpret_cast<char*>(&first_see_) + sizeof(more_round_));
  // @@protoc_insertion_point(copy_constructor:CS_ZhaJinHuaPrivateCFG_Set)
}

void CS_ZhaJinHuaPrivateCFG_Set::SharedCtor() {
  _cached_size_ = 0;
  first_see_ = -1;
  first_compare_ = -1;
  no_money_compare_ = -1;
  more_round_ = -1;
}

CS_ZhaJinHuaPrivateCFG_Set::~CS_ZhaJinHuaPrivateCFG_Set() {
  // @@protoc_insertion_point(destructor:CS_ZhaJinHuaPrivateCFG_Set)
  SharedDtor();
}

void CS_ZhaJinHuaPrivateCFG_Set::SharedDtor() {
}

void CS_ZhaJinHuaPrivateCFG_Set::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ZhaJinHuaPrivateCFG_Set::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ZhaJinHuaPrivateCFG_Set& CS_ZhaJinHuaPrivateCFG_Set::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ZhaJinHuaPrivateCFG_Set* CS_ZhaJinHuaPrivateCFG_Set::New(::google::protobuf::Arena* arena) const {
  CS_ZhaJinHuaPrivateCFG_Set* n = new CS_ZhaJinHuaPrivateCFG_Set;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ZhaJinHuaPrivateCFG_Set::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ZhaJinHuaPrivateCFG_Set)
  if (_has_bits_[0 / 32] & 15u) {
    first_see_ = -1;
    first_compare_ = -1;
    no_money_compare_ = -1;
    more_round_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ZhaJinHuaPrivateCFG_Set::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ZhaJinHuaPrivateCFG_Set)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 first_see = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_first_see();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_see_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 first_compare = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_first_compare();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_compare_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 no_money_compare = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_no_money_compare();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_money_compare_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 more_round = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_more_round();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &more_round_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ZhaJinHuaPrivateCFG_Set)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ZhaJinHuaPrivateCFG_Set)
  return false;
#undef DO_
}

void CS_ZhaJinHuaPrivateCFG_Set::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ZhaJinHuaPrivateCFG_Set)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 first_see = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->first_see(), output);
  }

  // optional int32 first_compare = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->first_compare(), output);
  }

  // optional int32 no_money_compare = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->no_money_compare(), output);
  }

  // optional int32 more_round = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->more_round(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ZhaJinHuaPrivateCFG_Set)
}

::google::protobuf::uint8* CS_ZhaJinHuaPrivateCFG_Set::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ZhaJinHuaPrivateCFG_Set)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 first_see = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->first_see(), target);
  }

  // optional int32 first_compare = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->first_compare(), target);
  }

  // optional int32 no_money_compare = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->no_money_compare(), target);
  }

  // optional int32 more_round = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->more_round(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ZhaJinHuaPrivateCFG_Set)
  return target;
}

size_t CS_ZhaJinHuaPrivateCFG_Set::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ZhaJinHuaPrivateCFG_Set)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 first_see = 1 [default = -1];
    if (has_first_see()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_see());
    }

    // optional int32 first_compare = 2 [default = -1];
    if (has_first_compare()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_compare());
    }

    // optional int32 no_money_compare = 3 [default = -1];
    if (has_no_money_compare()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_money_compare());
    }

    // optional int32 more_round = 4 [default = -1];
    if (has_more_round()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->more_round());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ZhaJinHuaPrivateCFG_Set::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ZhaJinHuaPrivateCFG_Set)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ZhaJinHuaPrivateCFG_Set* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ZhaJinHuaPrivateCFG_Set>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ZhaJinHuaPrivateCFG_Set)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ZhaJinHuaPrivateCFG_Set)
    MergeFrom(*source);
  }
}

void CS_ZhaJinHuaPrivateCFG_Set::MergeFrom(const CS_ZhaJinHuaPrivateCFG_Set& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ZhaJinHuaPrivateCFG_Set)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      first_see_ = from.first_see_;
    }
    if (cached_has_bits & 0x00000002u) {
      first_compare_ = from.first_compare_;
    }
    if (cached_has_bits & 0x00000004u) {
      no_money_compare_ = from.no_money_compare_;
    }
    if (cached_has_bits & 0x00000008u) {
      more_round_ = from.more_round_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CS_ZhaJinHuaPrivateCFG_Set::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ZhaJinHuaPrivateCFG_Set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ZhaJinHuaPrivateCFG_Set::CopyFrom(const CS_ZhaJinHuaPrivateCFG_Set& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ZhaJinHuaPrivateCFG_Set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ZhaJinHuaPrivateCFG_Set::IsInitialized() const {
  return true;
}

void CS_ZhaJinHuaPrivateCFG_Set::Swap(CS_ZhaJinHuaPrivateCFG_Set* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ZhaJinHuaPrivateCFG_Set::InternalSwap(CS_ZhaJinHuaPrivateCFG_Set* other) {
  std::swap(first_see_, other->first_see_);
  std::swap(first_compare_, other->first_compare_);
  std::swap(no_money_compare_, other->no_money_compare_);
  std::swap(more_round_, other->more_round_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ZhaJinHuaPrivateCFG_Set::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ZhaJinHuaPrivateCFG_Set

// optional int32 first_see = 1 [default = -1];
bool CS_ZhaJinHuaPrivateCFG_Set::has_first_see() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_ZhaJinHuaPrivateCFG_Set::set_has_first_see() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_ZhaJinHuaPrivateCFG_Set::clear_has_first_see() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_ZhaJinHuaPrivateCFG_Set::clear_first_see() {
  first_see_ = -1;
  clear_has_first_see();
}
::google::protobuf::int32 CS_ZhaJinHuaPrivateCFG_Set::first_see() const {
  // @@protoc_insertion_point(field_get:CS_ZhaJinHuaPrivateCFG_Set.first_see)
  return first_see_;
}
void CS_ZhaJinHuaPrivateCFG_Set::set_first_see(::google::protobuf::int32 value) {
  set_has_first_see();
  first_see_ = value;
  // @@protoc_insertion_point(field_set:CS_ZhaJinHuaPrivateCFG_Set.first_see)
}

// optional int32 first_compare = 2 [default = -1];
bool CS_ZhaJinHuaPrivateCFG_Set::has_first_compare() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CS_ZhaJinHuaPrivateCFG_Set::set_has_first_compare() {
  _has_bits_[0] |= 0x00000002u;
}
void CS_ZhaJinHuaPrivateCFG_Set::clear_has_first_compare() {
  _has_bits_[0] &= ~0x00000002u;
}
void CS_ZhaJinHuaPrivateCFG_Set::clear_first_compare() {
  first_compare_ = -1;
  clear_has_first_compare();
}
::google::protobuf::int32 CS_ZhaJinHuaPrivateCFG_Set::first_compare() const {
  // @@protoc_insertion_point(field_get:CS_ZhaJinHuaPrivateCFG_Set.first_compare)
  return first_compare_;
}
void CS_ZhaJinHuaPrivateCFG_Set::set_first_compare(::google::protobuf::int32 value) {
  set_has_first_compare();
  first_compare_ = value;
  // @@protoc_insertion_point(field_set:CS_ZhaJinHuaPrivateCFG_Set.first_compare)
}

// optional int32 no_money_compare = 3 [default = -1];
bool CS_ZhaJinHuaPrivateCFG_Set::has_no_money_compare() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CS_ZhaJinHuaPrivateCFG_Set::set_has_no_money_compare() {
  _has_bits_[0] |= 0x00000004u;
}
void CS_ZhaJinHuaPrivateCFG_Set::clear_has_no_money_compare() {
  _has_bits_[0] &= ~0x00000004u;
}
void CS_ZhaJinHuaPrivateCFG_Set::clear_no_money_compare() {
  no_money_compare_ = -1;
  clear_has_no_money_compare();
}
::google::protobuf::int32 CS_ZhaJinHuaPrivateCFG_Set::no_money_compare() const {
  // @@protoc_insertion_point(field_get:CS_ZhaJinHuaPrivateCFG_Set.no_money_compare)
  return no_money_compare_;
}
void CS_ZhaJinHuaPrivateCFG_Set::set_no_money_compare(::google::protobuf::int32 value) {
  set_has_no_money_compare();
  no_money_compare_ = value;
  // @@protoc_insertion_point(field_set:CS_ZhaJinHuaPrivateCFG_Set.no_money_compare)
}

// optional int32 more_round = 4 [default = -1];
bool CS_ZhaJinHuaPrivateCFG_Set::has_more_round() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CS_ZhaJinHuaPrivateCFG_Set::set_has_more_round() {
  _has_bits_[0] |= 0x00000008u;
}
void CS_ZhaJinHuaPrivateCFG_Set::clear_has_more_round() {
  _has_bits_[0] &= ~0x00000008u;
}
void CS_ZhaJinHuaPrivateCFG_Set::clear_more_round() {
  more_round_ = -1;
  clear_has_more_round();
}
::google::protobuf::int32 CS_ZhaJinHuaPrivateCFG_Set::more_round() const {
  // @@protoc_insertion_point(field_get:CS_ZhaJinHuaPrivateCFG_Set.more_round)
  return more_round_;
}
void CS_ZhaJinHuaPrivateCFG_Set::set_more_round(::google::protobuf::int32 value) {
  set_has_more_round();
  more_round_ = value;
  // @@protoc_insertion_point(field_set:CS_ZhaJinHuaPrivateCFG_Set.more_round)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ZhaJinHuaPrivateCFG_Get::CS_ZhaJinHuaPrivateCFG_Get()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ZhaJinHuaPrivateCFG_Get)
}
CS_ZhaJinHuaPrivateCFG_Get::CS_ZhaJinHuaPrivateCFG_Get(const CS_ZhaJinHuaPrivateCFG_Get& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_ZhaJinHuaPrivateCFG_Get)
}

void CS_ZhaJinHuaPrivateCFG_Get::SharedCtor() {
  _cached_size_ = 0;
}

CS_ZhaJinHuaPrivateCFG_Get::~CS_ZhaJinHuaPrivateCFG_Get() {
  // @@protoc_insertion_point(destructor:CS_ZhaJinHuaPrivateCFG_Get)
  SharedDtor();
}

void CS_ZhaJinHuaPrivateCFG_Get::SharedDtor() {
}

void CS_ZhaJinHuaPrivateCFG_Get::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ZhaJinHuaPrivateCFG_Get::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ZhaJinHuaPrivateCFG_Get& CS_ZhaJinHuaPrivateCFG_Get::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ZhaJinHuaPrivateCFG_Get* CS_ZhaJinHuaPrivateCFG_Get::New(::google::protobuf::Arena* arena) const {
  CS_ZhaJinHuaPrivateCFG_Get* n = new CS_ZhaJinHuaPrivateCFG_Get;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ZhaJinHuaPrivateCFG_Get::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ZhaJinHuaPrivateCFG_Get)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ZhaJinHuaPrivateCFG_Get::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ZhaJinHuaPrivateCFG_Get)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ZhaJinHuaPrivateCFG_Get)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ZhaJinHuaPrivateCFG_Get)
  return false;
#undef DO_
}

void CS_ZhaJinHuaPrivateCFG_Get::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ZhaJinHuaPrivateCFG_Get)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ZhaJinHuaPrivateCFG_Get)
}

::google::protobuf::uint8* CS_ZhaJinHuaPrivateCFG_Get::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ZhaJinHuaPrivateCFG_Get)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ZhaJinHuaPrivateCFG_Get)
  return target;
}

size_t CS_ZhaJinHuaPrivateCFG_Get::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ZhaJinHuaPrivateCFG_Get)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ZhaJinHuaPrivateCFG_Get::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ZhaJinHuaPrivateCFG_Get)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ZhaJinHuaPrivateCFG_Get* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ZhaJinHuaPrivateCFG_Get>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ZhaJinHuaPrivateCFG_Get)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ZhaJinHuaPrivateCFG_Get)
    MergeFrom(*source);
  }
}

void CS_ZhaJinHuaPrivateCFG_Get::MergeFrom(const CS_ZhaJinHuaPrivateCFG_Get& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ZhaJinHuaPrivateCFG_Get)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_ZhaJinHuaPrivateCFG_Get::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ZhaJinHuaPrivateCFG_Get)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ZhaJinHuaPrivateCFG_Get::CopyFrom(const CS_ZhaJinHuaPrivateCFG_Get& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ZhaJinHuaPrivateCFG_Get)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ZhaJinHuaPrivateCFG_Get::IsInitialized() const {
  return true;
}

void CS_ZhaJinHuaPrivateCFG_Get::Swap(CS_ZhaJinHuaPrivateCFG_Get* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ZhaJinHuaPrivateCFG_Get::InternalSwap(CS_ZhaJinHuaPrivateCFG_Get* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ZhaJinHuaPrivateCFG_Get::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ZhaJinHuaPrivateCFG_Get

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaPrivateCFG::kFirstSeeFieldNumber;
const int SC_ZhaJinHuaPrivateCFG::kFirstCompareFieldNumber;
const int SC_ZhaJinHuaPrivateCFG::kNoMoneyCompareFieldNumber;
const int SC_ZhaJinHuaPrivateCFG::kMoreRoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaPrivateCFG::SC_ZhaJinHuaPrivateCFG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaPrivateCFG)
}
SC_ZhaJinHuaPrivateCFG::SC_ZhaJinHuaPrivateCFG(const SC_ZhaJinHuaPrivateCFG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&first_see_, &from.first_see_,
    reinterpret_cast<char*>(&more_round_) -
    reinterpret_cast<char*>(&first_see_) + sizeof(more_round_));
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaPrivateCFG)
}

void SC_ZhaJinHuaPrivateCFG::SharedCtor() {
  _cached_size_ = 0;
  first_see_ = -1;
  first_compare_ = -1;
  no_money_compare_ = -1;
  more_round_ = -1;
}

SC_ZhaJinHuaPrivateCFG::~SC_ZhaJinHuaPrivateCFG() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaPrivateCFG)
  SharedDtor();
}

void SC_ZhaJinHuaPrivateCFG::SharedDtor() {
}

void SC_ZhaJinHuaPrivateCFG::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaPrivateCFG::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaPrivateCFG& SC_ZhaJinHuaPrivateCFG::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaPrivateCFG* SC_ZhaJinHuaPrivateCFG::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaPrivateCFG* n = new SC_ZhaJinHuaPrivateCFG;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaPrivateCFG::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaPrivateCFG)
  if (_has_bits_[0 / 32] & 15u) {
    first_see_ = -1;
    first_compare_ = -1;
    no_money_compare_ = -1;
    more_round_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaPrivateCFG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaPrivateCFG)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 first_see = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_first_see();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_see_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 first_compare = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_first_compare();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_compare_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 no_money_compare = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_no_money_compare();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_money_compare_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 more_round = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_more_round();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &more_round_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaPrivateCFG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaPrivateCFG)
  return false;
#undef DO_
}

void SC_ZhaJinHuaPrivateCFG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaPrivateCFG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 first_see = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->first_see(), output);
  }

  // optional int32 first_compare = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->first_compare(), output);
  }

  // optional int32 no_money_compare = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->no_money_compare(), output);
  }

  // optional int32 more_round = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->more_round(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaPrivateCFG)
}

::google::protobuf::uint8* SC_ZhaJinHuaPrivateCFG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaPrivateCFG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 first_see = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->first_see(), target);
  }

  // optional int32 first_compare = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->first_compare(), target);
  }

  // optional int32 no_money_compare = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->no_money_compare(), target);
  }

  // optional int32 more_round = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->more_round(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaPrivateCFG)
  return target;
}

size_t SC_ZhaJinHuaPrivateCFG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaPrivateCFG)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 first_see = 1 [default = -1];
    if (has_first_see()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_see());
    }

    // optional int32 first_compare = 2 [default = -1];
    if (has_first_compare()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_compare());
    }

    // optional int32 no_money_compare = 3 [default = -1];
    if (has_no_money_compare()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_money_compare());
    }

    // optional int32 more_round = 4 [default = -1];
    if (has_more_round()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->more_round());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaPrivateCFG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaPrivateCFG)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaPrivateCFG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaPrivateCFG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaPrivateCFG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaPrivateCFG)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaPrivateCFG::MergeFrom(const SC_ZhaJinHuaPrivateCFG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaPrivateCFG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      first_see_ = from.first_see_;
    }
    if (cached_has_bits & 0x00000002u) {
      first_compare_ = from.first_compare_;
    }
    if (cached_has_bits & 0x00000004u) {
      no_money_compare_ = from.no_money_compare_;
    }
    if (cached_has_bits & 0x00000008u) {
      more_round_ = from.more_round_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ZhaJinHuaPrivateCFG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaPrivateCFG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaPrivateCFG::CopyFrom(const SC_ZhaJinHuaPrivateCFG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaPrivateCFG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaPrivateCFG::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaPrivateCFG::Swap(SC_ZhaJinHuaPrivateCFG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaPrivateCFG::InternalSwap(SC_ZhaJinHuaPrivateCFG* other) {
  std::swap(first_see_, other->first_see_);
  std::swap(first_compare_, other->first_compare_);
  std::swap(no_money_compare_, other->no_money_compare_);
  std::swap(more_round_, other->more_round_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaPrivateCFG::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaPrivateCFG

// optional int32 first_see = 1 [default = -1];
bool SC_ZhaJinHuaPrivateCFG::has_first_see() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaPrivateCFG::set_has_first_see() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaPrivateCFG::clear_has_first_see() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaPrivateCFG::clear_first_see() {
  first_see_ = -1;
  clear_has_first_see();
}
::google::protobuf::int32 SC_ZhaJinHuaPrivateCFG::first_see() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaPrivateCFG.first_see)
  return first_see_;
}
void SC_ZhaJinHuaPrivateCFG::set_first_see(::google::protobuf::int32 value) {
  set_has_first_see();
  first_see_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaPrivateCFG.first_see)
}

// optional int32 first_compare = 2 [default = -1];
bool SC_ZhaJinHuaPrivateCFG::has_first_compare() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ZhaJinHuaPrivateCFG::set_has_first_compare() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ZhaJinHuaPrivateCFG::clear_has_first_compare() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ZhaJinHuaPrivateCFG::clear_first_compare() {
  first_compare_ = -1;
  clear_has_first_compare();
}
::google::protobuf::int32 SC_ZhaJinHuaPrivateCFG::first_compare() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaPrivateCFG.first_compare)
  return first_compare_;
}
void SC_ZhaJinHuaPrivateCFG::set_first_compare(::google::protobuf::int32 value) {
  set_has_first_compare();
  first_compare_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaPrivateCFG.first_compare)
}

// optional int32 no_money_compare = 3 [default = -1];
bool SC_ZhaJinHuaPrivateCFG::has_no_money_compare() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ZhaJinHuaPrivateCFG::set_has_no_money_compare() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ZhaJinHuaPrivateCFG::clear_has_no_money_compare() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ZhaJinHuaPrivateCFG::clear_no_money_compare() {
  no_money_compare_ = -1;
  clear_has_no_money_compare();
}
::google::protobuf::int32 SC_ZhaJinHuaPrivateCFG::no_money_compare() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaPrivateCFG.no_money_compare)
  return no_money_compare_;
}
void SC_ZhaJinHuaPrivateCFG::set_no_money_compare(::google::protobuf::int32 value) {
  set_has_no_money_compare();
  no_money_compare_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaPrivateCFG.no_money_compare)
}

// optional int32 more_round = 4 [default = -1];
bool SC_ZhaJinHuaPrivateCFG::has_more_round() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_ZhaJinHuaPrivateCFG::set_has_more_round() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_ZhaJinHuaPrivateCFG::clear_has_more_round() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_ZhaJinHuaPrivateCFG::clear_more_round() {
  more_round_ = -1;
  clear_has_more_round();
}
::google::protobuf::int32 SC_ZhaJinHuaPrivateCFG::more_round() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaPrivateCFG.more_round)
  return more_round_;
}
void SC_ZhaJinHuaPrivateCFG::set_more_round(::google::protobuf::int32 value) {
  set_has_more_round();
  more_round_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaPrivateCFG.more_round)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ZhaJinHuaGameData::CS_ZhaJinHuaGameData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ZhaJinHuaGameData)
}
CS_ZhaJinHuaGameData::CS_ZhaJinHuaGameData(const CS_ZhaJinHuaGameData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CS_ZhaJinHuaGameData)
}

void CS_ZhaJinHuaGameData::SharedCtor() {
  _cached_size_ = 0;
}

CS_ZhaJinHuaGameData::~CS_ZhaJinHuaGameData() {
  // @@protoc_insertion_point(destructor:CS_ZhaJinHuaGameData)
  SharedDtor();
}

void CS_ZhaJinHuaGameData::SharedDtor() {
}

void CS_ZhaJinHuaGameData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ZhaJinHuaGameData::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ZhaJinHuaGameData& CS_ZhaJinHuaGameData::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ZhaJinHuaGameData* CS_ZhaJinHuaGameData::New(::google::protobuf::Arena* arena) const {
  CS_ZhaJinHuaGameData* n = new CS_ZhaJinHuaGameData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ZhaJinHuaGameData::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ZhaJinHuaGameData)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ZhaJinHuaGameData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ZhaJinHuaGameData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ZhaJinHuaGameData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ZhaJinHuaGameData)
  return false;
#undef DO_
}

void CS_ZhaJinHuaGameData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ZhaJinHuaGameData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ZhaJinHuaGameData)
}

::google::protobuf::uint8* CS_ZhaJinHuaGameData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ZhaJinHuaGameData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ZhaJinHuaGameData)
  return target;
}

size_t CS_ZhaJinHuaGameData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ZhaJinHuaGameData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ZhaJinHuaGameData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ZhaJinHuaGameData)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ZhaJinHuaGameData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ZhaJinHuaGameData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ZhaJinHuaGameData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ZhaJinHuaGameData)
    MergeFrom(*source);
  }
}

void CS_ZhaJinHuaGameData::MergeFrom(const CS_ZhaJinHuaGameData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ZhaJinHuaGameData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CS_ZhaJinHuaGameData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ZhaJinHuaGameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ZhaJinHuaGameData::CopyFrom(const CS_ZhaJinHuaGameData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ZhaJinHuaGameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ZhaJinHuaGameData::IsInitialized() const {
  return true;
}

void CS_ZhaJinHuaGameData::Swap(CS_ZhaJinHuaGameData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ZhaJinHuaGameData::InternalSwap(CS_ZhaJinHuaGameData* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ZhaJinHuaGameData::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ZhaJinHuaGameData

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZhaJinHuaGameInfo::kStatusFieldNumber;
const int ZhaJinHuaGameInfo::kHeaderIconFieldNumber;
const int ZhaJinHuaGameInfo::kCardsFieldNumber;
const int ZhaJinHuaGameInfo::kMoneyFieldNumber;
const int ZhaJinHuaGameInfo::kChairIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZhaJinHuaGameInfo::ZhaJinHuaGameInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZhaJinHuaGameInfo)
}
ZhaJinHuaGameInfo::ZhaJinHuaGameInfo(const ZhaJinHuaGameInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      cards_(from.cards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&status_, &from.status_,
    reinterpret_cast<char*>(&chair_id_) -
    reinterpret_cast<char*>(&status_) + sizeof(chair_id_));
  // @@protoc_insertion_point(copy_constructor:ZhaJinHuaGameInfo)
}

void ZhaJinHuaGameInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&status_, 0, reinterpret_cast<char*>(&chair_id_) -
    reinterpret_cast<char*>(&status_) + sizeof(chair_id_));
}

ZhaJinHuaGameInfo::~ZhaJinHuaGameInfo() {
  // @@protoc_insertion_point(destructor:ZhaJinHuaGameInfo)
  SharedDtor();
}

void ZhaJinHuaGameInfo::SharedDtor() {
}

void ZhaJinHuaGameInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZhaJinHuaGameInfo::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZhaJinHuaGameInfo& ZhaJinHuaGameInfo::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZhaJinHuaGameInfo* ZhaJinHuaGameInfo::New(::google::protobuf::Arena* arena) const {
  ZhaJinHuaGameInfo* n = new ZhaJinHuaGameInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZhaJinHuaGameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ZhaJinHuaGameInfo)
  cards_.Clear();
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&status_, 0, reinterpret_cast<char*>(&chair_id_) -
      reinterpret_cast<char*>(&status_) + sizeof(chair_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ZhaJinHuaGameInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZhaJinHuaGameInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 header_icon = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_header_icon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &header_icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 cards = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24u, input, this->mutable_cards())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(26u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 money = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZhaJinHuaGameInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZhaJinHuaGameInfo)
  return false;
#undef DO_
}

void ZhaJinHuaGameInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZhaJinHuaGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional int32 header_icon = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->header_icon(), output);
  }

  // repeated int32 cards = 3;
  for (int i = 0, n = this->cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->cards(i), output);
  }

  // optional int32 money = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->money(), output);
  }

  // optional int32 chair_id = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->chair_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ZhaJinHuaGameInfo)
}

::google::protobuf::uint8* ZhaJinHuaGameInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZhaJinHuaGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional int32 header_icon = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->header_icon(), target);
  }

  // repeated int32 cards = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(3, this->cards_, target);

  // optional int32 money = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->money(), target);
  }

  // optional int32 chair_id = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->chair_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ZhaJinHuaGameInfo)
  return target;
}

size_t ZhaJinHuaGameInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZhaJinHuaGameInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 cards = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->cards_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cards_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // optional int32 header_icon = 2 [default = 0];
    if (has_header_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->header_icon());
    }

    // optional int32 money = 4;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

    // optional int32 chair_id = 5;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZhaJinHuaGameInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZhaJinHuaGameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ZhaJinHuaGameInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZhaJinHuaGameInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZhaJinHuaGameInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZhaJinHuaGameInfo)
    MergeFrom(*source);
  }
}

void ZhaJinHuaGameInfo::MergeFrom(const ZhaJinHuaGameInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZhaJinHuaGameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cards_.MergeFrom(from.cards_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000002u) {
      header_icon_ = from.header_icon_;
    }
    if (cached_has_bits & 0x00000004u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000008u) {
      chair_id_ = from.chair_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ZhaJinHuaGameInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZhaJinHuaGameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZhaJinHuaGameInfo::CopyFrom(const ZhaJinHuaGameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZhaJinHuaGameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZhaJinHuaGameInfo::IsInitialized() const {
  return true;
}

void ZhaJinHuaGameInfo::Swap(ZhaJinHuaGameInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZhaJinHuaGameInfo::InternalSwap(ZhaJinHuaGameInfo* other) {
  cards_.InternalSwap(&other->cards_);
  std::swap(status_, other->status_);
  std::swap(header_icon_, other->header_icon_);
  std::swap(money_, other->money_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZhaJinHuaGameInfo::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZhaJinHuaGameInfo

// optional int32 status = 1;
bool ZhaJinHuaGameInfo::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ZhaJinHuaGameInfo::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
void ZhaJinHuaGameInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
void ZhaJinHuaGameInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
::google::protobuf::int32 ZhaJinHuaGameInfo::status() const {
  // @@protoc_insertion_point(field_get:ZhaJinHuaGameInfo.status)
  return status_;
}
void ZhaJinHuaGameInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ZhaJinHuaGameInfo.status)
}

// optional int32 header_icon = 2 [default = 0];
bool ZhaJinHuaGameInfo::has_header_icon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ZhaJinHuaGameInfo::set_has_header_icon() {
  _has_bits_[0] |= 0x00000002u;
}
void ZhaJinHuaGameInfo::clear_has_header_icon() {
  _has_bits_[0] &= ~0x00000002u;
}
void ZhaJinHuaGameInfo::clear_header_icon() {
  header_icon_ = 0;
  clear_has_header_icon();
}
::google::protobuf::int32 ZhaJinHuaGameInfo::header_icon() const {
  // @@protoc_insertion_point(field_get:ZhaJinHuaGameInfo.header_icon)
  return header_icon_;
}
void ZhaJinHuaGameInfo::set_header_icon(::google::protobuf::int32 value) {
  set_has_header_icon();
  header_icon_ = value;
  // @@protoc_insertion_point(field_set:ZhaJinHuaGameInfo.header_icon)
}

// repeated int32 cards = 3;
int ZhaJinHuaGameInfo::cards_size() const {
  return cards_.size();
}
void ZhaJinHuaGameInfo::clear_cards() {
  cards_.Clear();
}
::google::protobuf::int32 ZhaJinHuaGameInfo::cards(int index) const {
  // @@protoc_insertion_point(field_get:ZhaJinHuaGameInfo.cards)
  return cards_.Get(index);
}
void ZhaJinHuaGameInfo::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:ZhaJinHuaGameInfo.cards)
}
void ZhaJinHuaGameInfo::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:ZhaJinHuaGameInfo.cards)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ZhaJinHuaGameInfo::cards() const {
  // @@protoc_insertion_point(field_list:ZhaJinHuaGameInfo.cards)
  return cards_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ZhaJinHuaGameInfo::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:ZhaJinHuaGameInfo.cards)
  return &cards_;
}

// optional int32 money = 4;
bool ZhaJinHuaGameInfo::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ZhaJinHuaGameInfo::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
void ZhaJinHuaGameInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
void ZhaJinHuaGameInfo::clear_money() {
  money_ = 0;
  clear_has_money();
}
::google::protobuf::int32 ZhaJinHuaGameInfo::money() const {
  // @@protoc_insertion_point(field_get:ZhaJinHuaGameInfo.money)
  return money_;
}
void ZhaJinHuaGameInfo::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:ZhaJinHuaGameInfo.money)
}

// optional int32 chair_id = 5;
bool ZhaJinHuaGameInfo::has_chair_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ZhaJinHuaGameInfo::set_has_chair_id() {
  _has_bits_[0] |= 0x00000008u;
}
void ZhaJinHuaGameInfo::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void ZhaJinHuaGameInfo::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 ZhaJinHuaGameInfo::chair_id() const {
  // @@protoc_insertion_point(field_get:ZhaJinHuaGameInfo.chair_id)
  return chair_id_;
}
void ZhaJinHuaGameInfo::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:ZhaJinHuaGameInfo.chair_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaGameData::kPbInfoFieldNumber;
const int SC_ZhaJinHuaGameData::kStrTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaGameData::SC_ZhaJinHuaGameData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaGameData)
}
SC_ZhaJinHuaGameData::SC_ZhaJinHuaGameData(const SC_ZhaJinHuaGameData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_info_(from.pb_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_str_time()) {
    str_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_time_);
  }
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaGameData)
}

void SC_ZhaJinHuaGameData::SharedCtor() {
  _cached_size_ = 0;
  str_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SC_ZhaJinHuaGameData::~SC_ZhaJinHuaGameData() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaGameData)
  SharedDtor();
}

void SC_ZhaJinHuaGameData::SharedDtor() {
  str_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SC_ZhaJinHuaGameData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaGameData::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaGameData& SC_ZhaJinHuaGameData::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaGameData* SC_ZhaJinHuaGameData::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaGameData* n = new SC_ZhaJinHuaGameData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaGameData::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaGameData)
  pb_info_.Clear();
  if (has_str_time()) {
    GOOGLE_DCHECK(!str_time_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*str_time_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaGameData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaGameData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ZhaJinHuaGameInfo pb_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string str_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str_time().data(), this->str_time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SC_ZhaJinHuaGameData.str_time");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaGameData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaGameData)
  return false;
#undef DO_
}

void SC_ZhaJinHuaGameData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaGameData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ZhaJinHuaGameInfo pb_info = 1;
  for (unsigned int i = 0, n = this->pb_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_info(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string str_time = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str_time().data(), this->str_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ZhaJinHuaGameData.str_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaGameData)
}

::google::protobuf::uint8* SC_ZhaJinHuaGameData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaGameData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ZhaJinHuaGameInfo pb_info = 1;
  for (unsigned int i = 0, n = this->pb_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_info(i), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string str_time = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str_time().data(), this->str_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SC_ZhaJinHuaGameData.str_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaGameData)
  return target;
}

size_t SC_ZhaJinHuaGameData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaGameData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .ZhaJinHuaGameInfo pb_info = 1;
  {
    unsigned int count = this->pb_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_info(i));
    }
  }

  // optional string str_time = 2;
  if (has_str_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaGameData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaGameData)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaGameData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaGameData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaGameData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaGameData)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaGameData::MergeFrom(const SC_ZhaJinHuaGameData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaGameData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_info_.MergeFrom(from.pb_info_);
  if (from.has_str_time()) {
    set_has_str_time();
    str_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_time_);
  }
}

void SC_ZhaJinHuaGameData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaGameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaGameData::CopyFrom(const SC_ZhaJinHuaGameData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaGameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaGameData::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaGameData::Swap(SC_ZhaJinHuaGameData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaGameData::InternalSwap(SC_ZhaJinHuaGameData* other) {
  pb_info_.InternalSwap(&other->pb_info_);
  str_time_.Swap(&other->str_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaGameData::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaGameData

// repeated .ZhaJinHuaGameInfo pb_info = 1;
int SC_ZhaJinHuaGameData::pb_info_size() const {
  return pb_info_.size();
}
void SC_ZhaJinHuaGameData::clear_pb_info() {
  pb_info_.Clear();
}
const ::ZhaJinHuaGameInfo& SC_ZhaJinHuaGameData::pb_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaGameData.pb_info)
  return pb_info_.Get(index);
}
::ZhaJinHuaGameInfo* SC_ZhaJinHuaGameData::mutable_pb_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_ZhaJinHuaGameData.pb_info)
  return pb_info_.Mutable(index);
}
::ZhaJinHuaGameInfo* SC_ZhaJinHuaGameData::add_pb_info() {
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaGameData.pb_info)
  return pb_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::ZhaJinHuaGameInfo >*
SC_ZhaJinHuaGameData::mutable_pb_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaGameData.pb_info)
  return &pb_info_;
}
const ::google::protobuf::RepeatedPtrField< ::ZhaJinHuaGameInfo >&
SC_ZhaJinHuaGameData::pb_info() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaGameData.pb_info)
  return pb_info_;
}

// optional string str_time = 2;
bool SC_ZhaJinHuaGameData::has_str_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaGameData::set_has_str_time() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaGameData::clear_has_str_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaGameData::clear_str_time() {
  str_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str_time();
}
const ::std::string& SC_ZhaJinHuaGameData::str_time() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaGameData.str_time)
  return str_time_.GetNoArena();
}
void SC_ZhaJinHuaGameData::set_str_time(const ::std::string& value) {
  set_has_str_time();
  str_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaGameData.str_time)
}
#if LANG_CXX11
void SC_ZhaJinHuaGameData::set_str_time(::std::string&& value) {
  set_has_str_time();
  str_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_ZhaJinHuaGameData.str_time)
}
#endif
void SC_ZhaJinHuaGameData::set_str_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_str_time();
  str_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ZhaJinHuaGameData.str_time)
}
void SC_ZhaJinHuaGameData::set_str_time(const char* value, size_t size) {
  set_has_str_time();
  str_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ZhaJinHuaGameData.str_time)
}
::std::string* SC_ZhaJinHuaGameData::mutable_str_time() {
  set_has_str_time();
  // @@protoc_insertion_point(field_mutable:SC_ZhaJinHuaGameData.str_time)
  return str_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SC_ZhaJinHuaGameData::release_str_time() {
  // @@protoc_insertion_point(field_release:SC_ZhaJinHuaGameData.str_time)
  clear_has_str_time();
  return str_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SC_ZhaJinHuaGameData::set_allocated_str_time(::std::string* str_time) {
  if (str_time != NULL) {
    set_has_str_time();
  } else {
    clear_has_str_time();
  }
  str_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str_time);
  // @@protoc_insertion_point(field_set_allocated:SC_ZhaJinHuaGameData.str_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaTabCFG::kScoreTypeFieldNumber;
const int SC_ZhaJinHuaTabCFG::kChairNumFieldNumber;
const int SC_ZhaJinHuaTabCFG::kLostScoreFieldNumber;
const int SC_ZhaJinHuaTabCFG::kVoteResultFieldNumber;
const int SC_ZhaJinHuaTabCFG::kPrivateRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaTabCFG::SC_ZhaJinHuaTabCFG()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaTabCFG)
}
SC_ZhaJinHuaTabCFG::SC_ZhaJinHuaTabCFG(const SC_ZhaJinHuaTabCFG& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&score_type_, &from.score_type_,
    reinterpret_cast<char*>(&private_room_id_) -
    reinterpret_cast<char*>(&score_type_) + sizeof(private_room_id_));
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaTabCFG)
}

void SC_ZhaJinHuaTabCFG::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&score_type_, 0, reinterpret_cast<char*>(&private_room_id_) -
    reinterpret_cast<char*>(&score_type_) + sizeof(private_room_id_));
}

SC_ZhaJinHuaTabCFG::~SC_ZhaJinHuaTabCFG() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaTabCFG)
  SharedDtor();
}

void SC_ZhaJinHuaTabCFG::SharedDtor() {
}

void SC_ZhaJinHuaTabCFG::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaTabCFG::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaTabCFG& SC_ZhaJinHuaTabCFG::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaTabCFG* SC_ZhaJinHuaTabCFG::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaTabCFG* n = new SC_ZhaJinHuaTabCFG;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaTabCFG::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaTabCFG)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&score_type_, 0, reinterpret_cast<char*>(&private_room_id_) -
      reinterpret_cast<char*>(&score_type_) + sizeof(private_room_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaTabCFG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaTabCFG)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 score_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_score_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 chair_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_chair_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lost_score = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_lost_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lost_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vote_result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_vote_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vote_result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 private_room_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_private_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &private_room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaTabCFG)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaTabCFG)
  return false;
#undef DO_
}

void SC_ZhaJinHuaTabCFG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaTabCFG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 score_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->score_type(), output);
  }

  // optional int32 chair_num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chair_num(), output);
  }

  // optional int32 lost_score = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lost_score(), output);
  }

  // optional bool vote_result = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->vote_result(), output);
  }

  // optional int32 private_room_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->private_room_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaTabCFG)
}

::google::protobuf::uint8* SC_ZhaJinHuaTabCFG::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaTabCFG)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 score_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->score_type(), target);
  }

  // optional int32 chair_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chair_num(), target);
  }

  // optional int32 lost_score = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lost_score(), target);
  }

  // optional bool vote_result = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->vote_result(), target);
  }

  // optional int32 private_room_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->private_room_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaTabCFG)
  return target;
}

size_t SC_ZhaJinHuaTabCFG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaTabCFG)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 score_type = 1;
    if (has_score_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score_type());
    }

    // optional int32 chair_num = 2;
    if (has_chair_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_num());
    }

    // optional int32 lost_score = 3;
    if (has_lost_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lost_score());
    }

    // optional bool vote_result = 4;
    if (has_vote_result()) {
      total_size += 1 + 1;
    }

    // optional int32 private_room_id = 5;
    if (has_private_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->private_room_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaTabCFG::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaTabCFG)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaTabCFG* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaTabCFG>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaTabCFG)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaTabCFG)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaTabCFG::MergeFrom(const SC_ZhaJinHuaTabCFG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaTabCFG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      score_type_ = from.score_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      chair_num_ = from.chair_num_;
    }
    if (cached_has_bits & 0x00000004u) {
      lost_score_ = from.lost_score_;
    }
    if (cached_has_bits & 0x00000008u) {
      vote_result_ = from.vote_result_;
    }
    if (cached_has_bits & 0x00000010u) {
      private_room_id_ = from.private_room_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ZhaJinHuaTabCFG::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaTabCFG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaTabCFG::CopyFrom(const SC_ZhaJinHuaTabCFG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaTabCFG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaTabCFG::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaTabCFG::Swap(SC_ZhaJinHuaTabCFG* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaTabCFG::InternalSwap(SC_ZhaJinHuaTabCFG* other) {
  std::swap(score_type_, other->score_type_);
  std::swap(chair_num_, other->chair_num_);
  std::swap(lost_score_, other->lost_score_);
  std::swap(vote_result_, other->vote_result_);
  std::swap(private_room_id_, other->private_room_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaTabCFG::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaTabCFG

// optional int32 score_type = 1;
bool SC_ZhaJinHuaTabCFG::has_score_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaTabCFG::set_has_score_type() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaTabCFG::clear_has_score_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaTabCFG::clear_score_type() {
  score_type_ = 0;
  clear_has_score_type();
}
::google::protobuf::int32 SC_ZhaJinHuaTabCFG::score_type() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaTabCFG.score_type)
  return score_type_;
}
void SC_ZhaJinHuaTabCFG::set_score_type(::google::protobuf::int32 value) {
  set_has_score_type();
  score_type_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaTabCFG.score_type)
}

// optional int32 chair_num = 2;
bool SC_ZhaJinHuaTabCFG::has_chair_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ZhaJinHuaTabCFG::set_has_chair_num() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ZhaJinHuaTabCFG::clear_has_chair_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ZhaJinHuaTabCFG::clear_chair_num() {
  chair_num_ = 0;
  clear_has_chair_num();
}
::google::protobuf::int32 SC_ZhaJinHuaTabCFG::chair_num() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaTabCFG.chair_num)
  return chair_num_;
}
void SC_ZhaJinHuaTabCFG::set_chair_num(::google::protobuf::int32 value) {
  set_has_chair_num();
  chair_num_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaTabCFG.chair_num)
}

// optional int32 lost_score = 3;
bool SC_ZhaJinHuaTabCFG::has_lost_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SC_ZhaJinHuaTabCFG::set_has_lost_score() {
  _has_bits_[0] |= 0x00000004u;
}
void SC_ZhaJinHuaTabCFG::clear_has_lost_score() {
  _has_bits_[0] &= ~0x00000004u;
}
void SC_ZhaJinHuaTabCFG::clear_lost_score() {
  lost_score_ = 0;
  clear_has_lost_score();
}
::google::protobuf::int32 SC_ZhaJinHuaTabCFG::lost_score() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaTabCFG.lost_score)
  return lost_score_;
}
void SC_ZhaJinHuaTabCFG::set_lost_score(::google::protobuf::int32 value) {
  set_has_lost_score();
  lost_score_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaTabCFG.lost_score)
}

// optional bool vote_result = 4;
bool SC_ZhaJinHuaTabCFG::has_vote_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SC_ZhaJinHuaTabCFG::set_has_vote_result() {
  _has_bits_[0] |= 0x00000008u;
}
void SC_ZhaJinHuaTabCFG::clear_has_vote_result() {
  _has_bits_[0] &= ~0x00000008u;
}
void SC_ZhaJinHuaTabCFG::clear_vote_result() {
  vote_result_ = false;
  clear_has_vote_result();
}
bool SC_ZhaJinHuaTabCFG::vote_result() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaTabCFG.vote_result)
  return vote_result_;
}
void SC_ZhaJinHuaTabCFG::set_vote_result(bool value) {
  set_has_vote_result();
  vote_result_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaTabCFG.vote_result)
}

// optional int32 private_room_id = 5;
bool SC_ZhaJinHuaTabCFG::has_private_room_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SC_ZhaJinHuaTabCFG::set_has_private_room_id() {
  _has_bits_[0] |= 0x00000010u;
}
void SC_ZhaJinHuaTabCFG::clear_has_private_room_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void SC_ZhaJinHuaTabCFG::clear_private_room_id() {
  private_room_id_ = 0;
  clear_has_private_room_id();
}
::google::protobuf::int32 SC_ZhaJinHuaTabCFG::private_room_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaTabCFG.private_room_id)
  return private_room_id_;
}
void SC_ZhaJinHuaTabCFG::set_private_room_id(::google::protobuf::int32 value) {
  set_has_private_room_id();
  private_room_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaTabCFG.private_room_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_ZhaJinHuaTabTiren::kChairIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ZhaJinHuaTabTiren::CS_ZhaJinHuaTabTiren()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ZhaJinHuaTabTiren)
}
CS_ZhaJinHuaTabTiren::CS_ZhaJinHuaTabTiren(const CS_ZhaJinHuaTabTiren& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chair_id_ = from.chair_id_;
  // @@protoc_insertion_point(copy_constructor:CS_ZhaJinHuaTabTiren)
}

void CS_ZhaJinHuaTabTiren::SharedCtor() {
  _cached_size_ = 0;
  chair_id_ = 0;
}

CS_ZhaJinHuaTabTiren::~CS_ZhaJinHuaTabTiren() {
  // @@protoc_insertion_point(destructor:CS_ZhaJinHuaTabTiren)
  SharedDtor();
}

void CS_ZhaJinHuaTabTiren::SharedDtor() {
}

void CS_ZhaJinHuaTabTiren::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ZhaJinHuaTabTiren::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ZhaJinHuaTabTiren& CS_ZhaJinHuaTabTiren::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ZhaJinHuaTabTiren* CS_ZhaJinHuaTabTiren::New(::google::protobuf::Arena* arena) const {
  CS_ZhaJinHuaTabTiren* n = new CS_ZhaJinHuaTabTiren;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ZhaJinHuaTabTiren::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ZhaJinHuaTabTiren)
  chair_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ZhaJinHuaTabTiren::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ZhaJinHuaTabTiren)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ZhaJinHuaTabTiren)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ZhaJinHuaTabTiren)
  return false;
#undef DO_
}

void CS_ZhaJinHuaTabTiren::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ZhaJinHuaTabTiren)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chair_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ZhaJinHuaTabTiren)
}

::google::protobuf::uint8* CS_ZhaJinHuaTabTiren::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ZhaJinHuaTabTiren)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chair_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ZhaJinHuaTabTiren)
  return target;
}

size_t CS_ZhaJinHuaTabTiren::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ZhaJinHuaTabTiren)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 chair_id = 1;
  if (has_chair_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chair_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ZhaJinHuaTabTiren::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ZhaJinHuaTabTiren)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ZhaJinHuaTabTiren* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ZhaJinHuaTabTiren>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ZhaJinHuaTabTiren)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ZhaJinHuaTabTiren)
    MergeFrom(*source);
  }
}

void CS_ZhaJinHuaTabTiren::MergeFrom(const CS_ZhaJinHuaTabTiren& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ZhaJinHuaTabTiren)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chair_id()) {
    set_chair_id(from.chair_id());
  }
}

void CS_ZhaJinHuaTabTiren::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ZhaJinHuaTabTiren)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ZhaJinHuaTabTiren::CopyFrom(const CS_ZhaJinHuaTabTiren& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ZhaJinHuaTabTiren)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ZhaJinHuaTabTiren::IsInitialized() const {
  return true;
}

void CS_ZhaJinHuaTabTiren::Swap(CS_ZhaJinHuaTabTiren* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ZhaJinHuaTabTiren::InternalSwap(CS_ZhaJinHuaTabTiren* other) {
  std::swap(chair_id_, other->chair_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ZhaJinHuaTabTiren::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ZhaJinHuaTabTiren

// optional int32 chair_id = 1;
bool CS_ZhaJinHuaTabTiren::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_ZhaJinHuaTabTiren::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_ZhaJinHuaTabTiren::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_ZhaJinHuaTabTiren::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 CS_ZhaJinHuaTabTiren::chair_id() const {
  // @@protoc_insertion_point(field_get:CS_ZhaJinHuaTabTiren.chair_id)
  return chair_id_;
}
void CS_ZhaJinHuaTabTiren::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:CS_ZhaJinHuaTabTiren.chair_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaTabTiren::kChairIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaTabTiren::SC_ZhaJinHuaTabTiren()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaTabTiren)
}
SC_ZhaJinHuaTabTiren::SC_ZhaJinHuaTabTiren(const SC_ZhaJinHuaTabTiren& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chair_id_ = from.chair_id_;
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaTabTiren)
}

void SC_ZhaJinHuaTabTiren::SharedCtor() {
  _cached_size_ = 0;
  chair_id_ = 0;
}

SC_ZhaJinHuaTabTiren::~SC_ZhaJinHuaTabTiren() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaTabTiren)
  SharedDtor();
}

void SC_ZhaJinHuaTabTiren::SharedDtor() {
}

void SC_ZhaJinHuaTabTiren::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaTabTiren::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaTabTiren& SC_ZhaJinHuaTabTiren::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaTabTiren* SC_ZhaJinHuaTabTiren::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaTabTiren* n = new SC_ZhaJinHuaTabTiren;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaTabTiren::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaTabTiren)
  chair_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaTabTiren::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaTabTiren)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaTabTiren)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaTabTiren)
  return false;
#undef DO_
}

void SC_ZhaJinHuaTabTiren::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaTabTiren)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chair_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaTabTiren)
}

::google::protobuf::uint8* SC_ZhaJinHuaTabTiren::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaTabTiren)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chair_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaTabTiren)
  return target;
}

size_t SC_ZhaJinHuaTabTiren::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaTabTiren)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 chair_id = 1;
  if (has_chair_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chair_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaTabTiren::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaTabTiren)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaTabTiren* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaTabTiren>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaTabTiren)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaTabTiren)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaTabTiren::MergeFrom(const SC_ZhaJinHuaTabTiren& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaTabTiren)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chair_id()) {
    set_chair_id(from.chair_id());
  }
}

void SC_ZhaJinHuaTabTiren::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaTabTiren)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaTabTiren::CopyFrom(const SC_ZhaJinHuaTabTiren& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaTabTiren)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaTabTiren::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaTabTiren::Swap(SC_ZhaJinHuaTabTiren* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaTabTiren::InternalSwap(SC_ZhaJinHuaTabTiren* other) {
  std::swap(chair_id_, other->chair_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaTabTiren::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaTabTiren

// optional int32 chair_id = 1;
bool SC_ZhaJinHuaTabTiren::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaTabTiren::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaTabTiren::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaTabTiren::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaTabTiren::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaTabTiren.chair_id)
  return chair_id_;
}
void SC_ZhaJinHuaTabTiren::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaTabTiren.chair_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS_ZhaJinHuaTabVote::kBretFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS_ZhaJinHuaTabVote::CS_ZhaJinHuaTabVote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CS_ZhaJinHuaTabVote)
}
CS_ZhaJinHuaTabVote::CS_ZhaJinHuaTabVote(const CS_ZhaJinHuaTabVote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bret_ = from.bret_;
  // @@protoc_insertion_point(copy_constructor:CS_ZhaJinHuaTabVote)
}

void CS_ZhaJinHuaTabVote::SharedCtor() {
  _cached_size_ = 0;
  bret_ = false;
}

CS_ZhaJinHuaTabVote::~CS_ZhaJinHuaTabVote() {
  // @@protoc_insertion_point(destructor:CS_ZhaJinHuaTabVote)
  SharedDtor();
}

void CS_ZhaJinHuaTabVote::SharedDtor() {
}

void CS_ZhaJinHuaTabVote::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS_ZhaJinHuaTabVote::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS_ZhaJinHuaTabVote& CS_ZhaJinHuaTabVote::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS_ZhaJinHuaTabVote* CS_ZhaJinHuaTabVote::New(::google::protobuf::Arena* arena) const {
  CS_ZhaJinHuaTabVote* n = new CS_ZhaJinHuaTabVote;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS_ZhaJinHuaTabVote::Clear() {
// @@protoc_insertion_point(message_clear_start:CS_ZhaJinHuaTabVote)
  bret_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS_ZhaJinHuaTabVote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CS_ZhaJinHuaTabVote)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_bret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CS_ZhaJinHuaTabVote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CS_ZhaJinHuaTabVote)
  return false;
#undef DO_
}

void CS_ZhaJinHuaTabVote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CS_ZhaJinHuaTabVote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bret = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CS_ZhaJinHuaTabVote)
}

::google::protobuf::uint8* CS_ZhaJinHuaTabVote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CS_ZhaJinHuaTabVote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bret = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CS_ZhaJinHuaTabVote)
  return target;
}

size_t CS_ZhaJinHuaTabVote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CS_ZhaJinHuaTabVote)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional bool bret = 1;
  if (has_bret()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS_ZhaJinHuaTabVote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CS_ZhaJinHuaTabVote)
  GOOGLE_DCHECK_NE(&from, this);
  const CS_ZhaJinHuaTabVote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS_ZhaJinHuaTabVote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CS_ZhaJinHuaTabVote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CS_ZhaJinHuaTabVote)
    MergeFrom(*source);
  }
}

void CS_ZhaJinHuaTabVote::MergeFrom(const CS_ZhaJinHuaTabVote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CS_ZhaJinHuaTabVote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bret()) {
    set_bret(from.bret());
  }
}

void CS_ZhaJinHuaTabVote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CS_ZhaJinHuaTabVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS_ZhaJinHuaTabVote::CopyFrom(const CS_ZhaJinHuaTabVote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CS_ZhaJinHuaTabVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS_ZhaJinHuaTabVote::IsInitialized() const {
  return true;
}

void CS_ZhaJinHuaTabVote::Swap(CS_ZhaJinHuaTabVote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS_ZhaJinHuaTabVote::InternalSwap(CS_ZhaJinHuaTabVote* other) {
  std::swap(bret_, other->bret_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS_ZhaJinHuaTabVote::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_ZhaJinHuaTabVote

// optional bool bret = 1;
bool CS_ZhaJinHuaTabVote::has_bret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS_ZhaJinHuaTabVote::set_has_bret() {
  _has_bits_[0] |= 0x00000001u;
}
void CS_ZhaJinHuaTabVote::clear_has_bret() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS_ZhaJinHuaTabVote::clear_bret() {
  bret_ = false;
  clear_has_bret();
}
bool CS_ZhaJinHuaTabVote::bret() const {
  // @@protoc_insertion_point(field_get:CS_ZhaJinHuaTabVote.bret)
  return bret_;
}
void CS_ZhaJinHuaTabVote::set_bret(bool value) {
  set_has_bret();
  bret_ = value;
  // @@protoc_insertion_point(field_set:CS_ZhaJinHuaTabVote.bret)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaTabVote::kChairIdFieldNumber;
const int SC_ZhaJinHuaTabVote::kBretFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaTabVote::SC_ZhaJinHuaTabVote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaTabVote)
}
SC_ZhaJinHuaTabVote::SC_ZhaJinHuaTabVote(const SC_ZhaJinHuaTabVote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&chair_id_, &from.chair_id_,
    reinterpret_cast<char*>(&bret_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(bret_));
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaTabVote)
}

void SC_ZhaJinHuaTabVote::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&chair_id_, 0, reinterpret_cast<char*>(&bret_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(bret_));
}

SC_ZhaJinHuaTabVote::~SC_ZhaJinHuaTabVote() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaTabVote)
  SharedDtor();
}

void SC_ZhaJinHuaTabVote::SharedDtor() {
}

void SC_ZhaJinHuaTabVote::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaTabVote::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaTabVote& SC_ZhaJinHuaTabVote::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaTabVote* SC_ZhaJinHuaTabVote::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaTabVote* n = new SC_ZhaJinHuaTabVote;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaTabVote::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaTabVote)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&chair_id_, 0, reinterpret_cast<char*>(&bret_) -
      reinterpret_cast<char*>(&chair_id_) + sizeof(bret_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaTabVote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaTabVote)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_bret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaTabVote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaTabVote)
  return false;
#undef DO_
}

void SC_ZhaJinHuaTabVote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaTabVote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chair_id(), output);
  }

  // optional bool bret = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaTabVote)
}

::google::protobuf::uint8* SC_ZhaJinHuaTabVote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaTabVote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chair_id(), target);
  }

  // optional bool bret = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaTabVote)
  return target;
}

size_t SC_ZhaJinHuaTabVote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaTabVote)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 chair_id = 1;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional bool bret = 2;
    if (has_bret()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaTabVote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaTabVote)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaTabVote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaTabVote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaTabVote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaTabVote)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaTabVote::MergeFrom(const SC_ZhaJinHuaTabVote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaTabVote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      bret_ = from.bret_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SC_ZhaJinHuaTabVote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaTabVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaTabVote::CopyFrom(const SC_ZhaJinHuaTabVote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaTabVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaTabVote::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaTabVote::Swap(SC_ZhaJinHuaTabVote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaTabVote::InternalSwap(SC_ZhaJinHuaTabVote* other) {
  std::swap(chair_id_, other->chair_id_);
  std::swap(bret_, other->bret_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaTabVote::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaTabVote

// optional int32 chair_id = 1;
bool SC_ZhaJinHuaTabVote::has_chair_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaTabVote::set_has_chair_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaTabVote::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaTabVote::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 SC_ZhaJinHuaTabVote::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaTabVote.chair_id)
  return chair_id_;
}
void SC_ZhaJinHuaTabVote::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaTabVote.chair_id)
}

// optional bool bret = 2;
bool SC_ZhaJinHuaTabVote::has_bret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SC_ZhaJinHuaTabVote::set_has_bret() {
  _has_bits_[0] |= 0x00000002u;
}
void SC_ZhaJinHuaTabVote::clear_has_bret() {
  _has_bits_[0] &= ~0x00000002u;
}
void SC_ZhaJinHuaTabVote::clear_bret() {
  bret_ = false;
  clear_has_bret();
}
bool SC_ZhaJinHuaTabVote::bret() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaTabVote.bret)
  return bret_;
}
void SC_ZhaJinHuaTabVote::set_bret(bool value) {
  set_has_bret();
  bret_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaTabVote.bret)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaTabVoteResult::kBretFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaTabVoteResult::SC_ZhaJinHuaTabVoteResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaTabVoteResult)
}
SC_ZhaJinHuaTabVoteResult::SC_ZhaJinHuaTabVoteResult(const SC_ZhaJinHuaTabVoteResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bret_ = from.bret_;
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaTabVoteResult)
}

void SC_ZhaJinHuaTabVoteResult::SharedCtor() {
  _cached_size_ = 0;
  bret_ = false;
}

SC_ZhaJinHuaTabVoteResult::~SC_ZhaJinHuaTabVoteResult() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaTabVoteResult)
  SharedDtor();
}

void SC_ZhaJinHuaTabVoteResult::SharedDtor() {
}

void SC_ZhaJinHuaTabVoteResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaTabVoteResult::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaTabVoteResult& SC_ZhaJinHuaTabVoteResult::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaTabVoteResult* SC_ZhaJinHuaTabVoteResult::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaTabVoteResult* n = new SC_ZhaJinHuaTabVoteResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaTabVoteResult::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaTabVoteResult)
  bret_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaTabVoteResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaTabVoteResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_bret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaTabVoteResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaTabVoteResult)
  return false;
#undef DO_
}

void SC_ZhaJinHuaTabVoteResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaTabVoteResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bret = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaTabVoteResult)
}

::google::protobuf::uint8* SC_ZhaJinHuaTabVoteResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaTabVoteResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool bret = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaTabVoteResult)
  return target;
}

size_t SC_ZhaJinHuaTabVoteResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaTabVoteResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional bool bret = 1;
  if (has_bret()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaTabVoteResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaTabVoteResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaTabVoteResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaTabVoteResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaTabVoteResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaTabVoteResult)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaTabVoteResult::MergeFrom(const SC_ZhaJinHuaTabVoteResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaTabVoteResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bret()) {
    set_bret(from.bret());
  }
}

void SC_ZhaJinHuaTabVoteResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaTabVoteResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaTabVoteResult::CopyFrom(const SC_ZhaJinHuaTabVoteResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaTabVoteResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaTabVoteResult::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaTabVoteResult::Swap(SC_ZhaJinHuaTabVoteResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaTabVoteResult::InternalSwap(SC_ZhaJinHuaTabVoteResult* other) {
  std::swap(bret_, other->bret_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaTabVoteResult::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaTabVoteResult

// optional bool bret = 1;
bool SC_ZhaJinHuaTabVoteResult::has_bret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SC_ZhaJinHuaTabVoteResult::set_has_bret() {
  _has_bits_[0] |= 0x00000001u;
}
void SC_ZhaJinHuaTabVoteResult::clear_has_bret() {
  _has_bits_[0] &= ~0x00000001u;
}
void SC_ZhaJinHuaTabVoteResult::clear_bret() {
  bret_ = false;
  clear_has_bret();
}
bool SC_ZhaJinHuaTabVoteResult::bret() const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaTabVoteResult.bret)
  return bret_;
}
void SC_ZhaJinHuaTabVoteResult::set_bret(bool value) {
  set_has_bret();
  bret_ = value;
  // @@protoc_insertion_point(field_set:SC_ZhaJinHuaTabVoteResult.bret)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZhaJinHuaStatistics::kChairIdFieldNumber;
const int ZhaJinHuaStatistics::kNicknameFieldNumber;
const int ZhaJinHuaStatistics::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZhaJinHuaStatistics::ZhaJinHuaStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZhaJinHuaStatistics)
}
ZhaJinHuaStatistics::ZhaJinHuaStatistics(const ZhaJinHuaStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&chair_id_, &from.chair_id_,
    reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(money_));
  // @@protoc_insertion_point(copy_constructor:ZhaJinHuaStatistics)
}

void ZhaJinHuaStatistics::SharedCtor() {
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&chair_id_, 0, reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(money_));
}

ZhaJinHuaStatistics::~ZhaJinHuaStatistics() {
  // @@protoc_insertion_point(destructor:ZhaJinHuaStatistics)
  SharedDtor();
}

void ZhaJinHuaStatistics::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZhaJinHuaStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZhaJinHuaStatistics::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZhaJinHuaStatistics& ZhaJinHuaStatistics::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZhaJinHuaStatistics* ZhaJinHuaStatistics::New(::google::protobuf::Arena* arena) const {
  ZhaJinHuaStatistics* n = new ZhaJinHuaStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZhaJinHuaStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:ZhaJinHuaStatistics)
  if (has_nickname()) {
    GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*nickname_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&chair_id_, 0, reinterpret_cast<char*>(&money_) -
      reinterpret_cast<char*>(&chair_id_) + sizeof(money_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ZhaJinHuaStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZhaJinHuaStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ZhaJinHuaStatistics.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 money = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZhaJinHuaStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZhaJinHuaStatistics)
  return false;
#undef DO_
}

void ZhaJinHuaStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZhaJinHuaStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chair_id(), output);
  }

  // optional string nickname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ZhaJinHuaStatistics.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // optional int32 money = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ZhaJinHuaStatistics)
}

::google::protobuf::uint8* ZhaJinHuaStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZhaJinHuaStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chair_id(), target);
  }

  // optional string nickname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ZhaJinHuaStatistics.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // optional int32 money = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ZhaJinHuaStatistics)
  return target;
}

size_t ZhaJinHuaStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZhaJinHuaStatistics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string nickname = 2;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional int32 chair_id = 1;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 money = 3;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZhaJinHuaStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZhaJinHuaStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const ZhaJinHuaStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZhaJinHuaStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZhaJinHuaStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZhaJinHuaStatistics)
    MergeFrom(*source);
  }
}

void ZhaJinHuaStatistics::MergeFrom(const ZhaJinHuaStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZhaJinHuaStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      money_ = from.money_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ZhaJinHuaStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZhaJinHuaStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZhaJinHuaStatistics::CopyFrom(const ZhaJinHuaStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZhaJinHuaStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZhaJinHuaStatistics::IsInitialized() const {
  return true;
}

void ZhaJinHuaStatistics::Swap(ZhaJinHuaStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZhaJinHuaStatistics::InternalSwap(ZhaJinHuaStatistics* other) {
  nickname_.Swap(&other->nickname_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(money_, other->money_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZhaJinHuaStatistics::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZhaJinHuaStatistics

// optional int32 chair_id = 1;
bool ZhaJinHuaStatistics::has_chair_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ZhaJinHuaStatistics::set_has_chair_id() {
  _has_bits_[0] |= 0x00000002u;
}
void ZhaJinHuaStatistics::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void ZhaJinHuaStatistics::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 ZhaJinHuaStatistics::chair_id() const {
  // @@protoc_insertion_point(field_get:ZhaJinHuaStatistics.chair_id)
  return chair_id_;
}
void ZhaJinHuaStatistics::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:ZhaJinHuaStatistics.chair_id)
}

// optional string nickname = 2;
bool ZhaJinHuaStatistics::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ZhaJinHuaStatistics::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
void ZhaJinHuaStatistics::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
void ZhaJinHuaStatistics::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& ZhaJinHuaStatistics::nickname() const {
  // @@protoc_insertion_point(field_get:ZhaJinHuaStatistics.nickname)
  return nickname_.GetNoArena();
}
void ZhaJinHuaStatistics::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZhaJinHuaStatistics.nickname)
}
#if LANG_CXX11
void ZhaJinHuaStatistics::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZhaJinHuaStatistics.nickname)
}
#endif
void ZhaJinHuaStatistics::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZhaJinHuaStatistics.nickname)
}
void ZhaJinHuaStatistics::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZhaJinHuaStatistics.nickname)
}
::std::string* ZhaJinHuaStatistics::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:ZhaJinHuaStatistics.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZhaJinHuaStatistics::release_nickname() {
  // @@protoc_insertion_point(field_release:ZhaJinHuaStatistics.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZhaJinHuaStatistics::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:ZhaJinHuaStatistics.nickname)
}

// optional int32 money = 3;
bool ZhaJinHuaStatistics::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ZhaJinHuaStatistics::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
void ZhaJinHuaStatistics::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
void ZhaJinHuaStatistics::clear_money() {
  money_ = 0;
  clear_has_money();
}
::google::protobuf::int32 ZhaJinHuaStatistics::money() const {
  // @@protoc_insertion_point(field_get:ZhaJinHuaStatistics.money)
  return money_;
}
void ZhaJinHuaStatistics::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:ZhaJinHuaStatistics.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SC_ZhaJinHuaStatistics::kPbInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SC_ZhaJinHuaStatistics::SC_ZhaJinHuaStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SC_ZhaJinHuaStatistics)
}
SC_ZhaJinHuaStatistics::SC_ZhaJinHuaStatistics(const SC_ZhaJinHuaStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_info_(from.pb_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SC_ZhaJinHuaStatistics)
}

void SC_ZhaJinHuaStatistics::SharedCtor() {
  _cached_size_ = 0;
}

SC_ZhaJinHuaStatistics::~SC_ZhaJinHuaStatistics() {
  // @@protoc_insertion_point(destructor:SC_ZhaJinHuaStatistics)
  SharedDtor();
}

void SC_ZhaJinHuaStatistics::SharedDtor() {
}

void SC_ZhaJinHuaStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SC_ZhaJinHuaStatistics::descriptor() {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SC_ZhaJinHuaStatistics& SC_ZhaJinHuaStatistics::default_instance() {
  protobuf_public_5fzhajinhua_2eproto::InitDefaults();
  return *internal_default_instance();
}

SC_ZhaJinHuaStatistics* SC_ZhaJinHuaStatistics::New(::google::protobuf::Arena* arena) const {
  SC_ZhaJinHuaStatistics* n = new SC_ZhaJinHuaStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SC_ZhaJinHuaStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:SC_ZhaJinHuaStatistics)
  pb_info_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SC_ZhaJinHuaStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SC_ZhaJinHuaStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ZhaJinHuaStatistics pb_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SC_ZhaJinHuaStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SC_ZhaJinHuaStatistics)
  return false;
#undef DO_
}

void SC_ZhaJinHuaStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SC_ZhaJinHuaStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ZhaJinHuaStatistics pb_info = 1;
  for (unsigned int i = 0, n = this->pb_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_info(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SC_ZhaJinHuaStatistics)
}

::google::protobuf::uint8* SC_ZhaJinHuaStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SC_ZhaJinHuaStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ZhaJinHuaStatistics pb_info = 1;
  for (unsigned int i = 0, n = this->pb_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_info(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SC_ZhaJinHuaStatistics)
  return target;
}

size_t SC_ZhaJinHuaStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SC_ZhaJinHuaStatistics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .ZhaJinHuaStatistics pb_info = 1;
  {
    unsigned int count = this->pb_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_info(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SC_ZhaJinHuaStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SC_ZhaJinHuaStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const SC_ZhaJinHuaStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SC_ZhaJinHuaStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SC_ZhaJinHuaStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SC_ZhaJinHuaStatistics)
    MergeFrom(*source);
  }
}

void SC_ZhaJinHuaStatistics::MergeFrom(const SC_ZhaJinHuaStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SC_ZhaJinHuaStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_info_.MergeFrom(from.pb_info_);
}

void SC_ZhaJinHuaStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SC_ZhaJinHuaStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SC_ZhaJinHuaStatistics::CopyFrom(const SC_ZhaJinHuaStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SC_ZhaJinHuaStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SC_ZhaJinHuaStatistics::IsInitialized() const {
  return true;
}

void SC_ZhaJinHuaStatistics::Swap(SC_ZhaJinHuaStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SC_ZhaJinHuaStatistics::InternalSwap(SC_ZhaJinHuaStatistics* other) {
  pb_info_.InternalSwap(&other->pb_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SC_ZhaJinHuaStatistics::GetMetadata() const {
  protobuf_public_5fzhajinhua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fzhajinhua_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_ZhaJinHuaStatistics

// repeated .ZhaJinHuaStatistics pb_info = 1;
int SC_ZhaJinHuaStatistics::pb_info_size() const {
  return pb_info_.size();
}
void SC_ZhaJinHuaStatistics::clear_pb_info() {
  pb_info_.Clear();
}
const ::ZhaJinHuaStatistics& SC_ZhaJinHuaStatistics::pb_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_ZhaJinHuaStatistics.pb_info)
  return pb_info_.Get(index);
}
::ZhaJinHuaStatistics* SC_ZhaJinHuaStatistics::mutable_pb_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_ZhaJinHuaStatistics.pb_info)
  return pb_info_.Mutable(index);
}
::ZhaJinHuaStatistics* SC_ZhaJinHuaStatistics::add_pb_info() {
  // @@protoc_insertion_point(field_add:SC_ZhaJinHuaStatistics.pb_info)
  return pb_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::ZhaJinHuaStatistics >*
SC_ZhaJinHuaStatistics::mutable_pb_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_ZhaJinHuaStatistics.pb_info)
  return &pb_info_;
}
const ::google::protobuf::RepeatedPtrField< ::ZhaJinHuaStatistics >&
SC_ZhaJinHuaStatistics::pb_info() const {
  // @@protoc_insertion_point(field_list:SC_ZhaJinHuaStatistics.pb_info)
  return pb_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
