// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: public_hhdz.proto

#ifndef PROTOBUF_public_5fhhdz_2eproto__INCLUDED
#define PROTOBUF_public_5fhhdz_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class CS_HongHeiBetStandard;
class CS_HongHeiBetStandardDefaultTypeInternal;
extern CS_HongHeiBetStandardDefaultTypeInternal _CS_HongHeiBetStandard_default_instance_;
class CS_HongHeiGetState;
class CS_HongHeiGetStateDefaultTypeInternal;
extern CS_HongHeiGetStateDefaultTypeInternal _CS_HongHeiGetState_default_instance_;
class CS_HongHeiPlayerBet;
class CS_HongHeiPlayerBetDefaultTypeInternal;
extern CS_HongHeiPlayerBetDefaultTypeInternal _CS_HongHeiPlayerBet_default_instance_;
class Player_bet_info;
class Player_bet_infoDefaultTypeInternal;
extern Player_bet_infoDefaultTypeInternal _Player_bet_info_default_instance_;
class SC_HongHeiAllBet;
class SC_HongHeiAllBetDefaultTypeInternal;
extern SC_HongHeiAllBetDefaultTypeInternal _SC_HongHeiAllBet_default_instance_;
class SC_HongHeiBetStandard;
class SC_HongHeiBetStandardDefaultTypeInternal;
extern SC_HongHeiBetStandardDefaultTypeInternal _SC_HongHeiBetStandard_default_instance_;
class SC_HongHeiCard;
class SC_HongHeiCardDefaultTypeInternal;
extern SC_HongHeiCardDefaultTypeInternal _SC_HongHeiCard_default_instance_;
class SC_HongHeiGameRecord;
class SC_HongHeiGameRecordDefaultTypeInternal;
extern SC_HongHeiGameRecordDefaultTypeInternal _SC_HongHeiGameRecord_default_instance_;
class SC_HongHeiGetState;
class SC_HongHeiGetStateDefaultTypeInternal;
extern SC_HongHeiGetStateDefaultTypeInternal _SC_HongHeiGetState_default_instance_;
class SC_HongHeiOnlinePlayer;
class SC_HongHeiOnlinePlayerDefaultTypeInternal;
extern SC_HongHeiOnlinePlayerDefaultTypeInternal _SC_HongHeiOnlinePlayer_default_instance_;
class SC_HongHeiPlayerBet;
class SC_HongHeiPlayerBetDefaultTypeInternal;
extern SC_HongHeiPlayerBetDefaultTypeInternal _SC_HongHeiPlayerBet_default_instance_;
class SC_HongHeiPlayerList;
class SC_HongHeiPlayerListDefaultTypeInternal;
extern SC_HongHeiPlayerListDefaultTypeInternal _SC_HongHeiPlayerList_default_instance_;
class SC_HongHeiPostCard;
class SC_HongHeiPostCardDefaultTypeInternal;
extern SC_HongHeiPostCardDefaultTypeInternal _SC_HongHeiPostCard_default_instance_;
class SC_HongHeiPostResult;
class SC_HongHeiPostResultDefaultTypeInternal;
extern SC_HongHeiPostResultDefaultTypeInternal _SC_HongHeiPostResult_default_instance_;
class SC_HongHeiReConnect;
class SC_HongHeiReConnectDefaultTypeInternal;
extern SC_HongHeiReConnectDefaultTypeInternal _SC_HongHeiReConnect_default_instance_;
class SC_HongHeiRecord;
class SC_HongHeiRecordDefaultTypeInternal;
extern SC_HongHeiRecordDefaultTypeInternal _SC_HongHeiRecord_default_instance_;
class SC_HongHeiRest;
class SC_HongHeiRestDefaultTypeInternal;
extern SC_HongHeiRestDefaultTypeInternal _SC_HongHeiRest_default_instance_;
class SC_HongHeiRichList;
class SC_HongHeiRichListDefaultTypeInternal;
extern SC_HongHeiRichListDefaultTypeInternal _SC_HongHeiRichList_default_instance_;
class SC_HongHeiRichPlayer;
class SC_HongHeiRichPlayerDefaultTypeInternal;
extern SC_HongHeiRichPlayerDefaultTypeInternal _SC_HongHeiRichPlayer_default_instance_;
class SC_HongHeiStart;
class SC_HongHeiStartDefaultTypeInternal;
extern SC_HongHeiStartDefaultTypeInternal _SC_HongHeiStart_default_instance_;

namespace protobuf_public_5fhhdz_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_public_5fhhdz_2eproto

enum SC_HongHeiStart_MsgID {
  SC_HongHeiStart_MsgID_ID = 29000
};
bool SC_HongHeiStart_MsgID_IsValid(int value);
const SC_HongHeiStart_MsgID SC_HongHeiStart_MsgID_MsgID_MIN = SC_HongHeiStart_MsgID_ID;
const SC_HongHeiStart_MsgID SC_HongHeiStart_MsgID_MsgID_MAX = SC_HongHeiStart_MsgID_ID;
const int SC_HongHeiStart_MsgID_MsgID_ARRAYSIZE = SC_HongHeiStart_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_HongHeiStart_MsgID_descriptor();
inline const ::std::string& SC_HongHeiStart_MsgID_Name(SC_HongHeiStart_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_HongHeiStart_MsgID_descriptor(), value);
}
inline bool SC_HongHeiStart_MsgID_Parse(
    const ::std::string& name, SC_HongHeiStart_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_HongHeiStart_MsgID>(
    SC_HongHeiStart_MsgID_descriptor(), name, value);
}
enum CS_HongHeiPlayerBet_MsgID {
  CS_HongHeiPlayerBet_MsgID_ID = 29001
};
bool CS_HongHeiPlayerBet_MsgID_IsValid(int value);
const CS_HongHeiPlayerBet_MsgID CS_HongHeiPlayerBet_MsgID_MsgID_MIN = CS_HongHeiPlayerBet_MsgID_ID;
const CS_HongHeiPlayerBet_MsgID CS_HongHeiPlayerBet_MsgID_MsgID_MAX = CS_HongHeiPlayerBet_MsgID_ID;
const int CS_HongHeiPlayerBet_MsgID_MsgID_ARRAYSIZE = CS_HongHeiPlayerBet_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_HongHeiPlayerBet_MsgID_descriptor();
inline const ::std::string& CS_HongHeiPlayerBet_MsgID_Name(CS_HongHeiPlayerBet_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_HongHeiPlayerBet_MsgID_descriptor(), value);
}
inline bool CS_HongHeiPlayerBet_MsgID_Parse(
    const ::std::string& name, CS_HongHeiPlayerBet_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_HongHeiPlayerBet_MsgID>(
    CS_HongHeiPlayerBet_MsgID_descriptor(), name, value);
}
enum SC_HongHeiPlayerBet_MsgID {
  SC_HongHeiPlayerBet_MsgID_ID = 29002
};
bool SC_HongHeiPlayerBet_MsgID_IsValid(int value);
const SC_HongHeiPlayerBet_MsgID SC_HongHeiPlayerBet_MsgID_MsgID_MIN = SC_HongHeiPlayerBet_MsgID_ID;
const SC_HongHeiPlayerBet_MsgID SC_HongHeiPlayerBet_MsgID_MsgID_MAX = SC_HongHeiPlayerBet_MsgID_ID;
const int SC_HongHeiPlayerBet_MsgID_MsgID_ARRAYSIZE = SC_HongHeiPlayerBet_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_HongHeiPlayerBet_MsgID_descriptor();
inline const ::std::string& SC_HongHeiPlayerBet_MsgID_Name(SC_HongHeiPlayerBet_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_HongHeiPlayerBet_MsgID_descriptor(), value);
}
inline bool SC_HongHeiPlayerBet_MsgID_Parse(
    const ::std::string& name, SC_HongHeiPlayerBet_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_HongHeiPlayerBet_MsgID>(
    SC_HongHeiPlayerBet_MsgID_descriptor(), name, value);
}
enum SC_HongHeiAllBet_MsgID {
  SC_HongHeiAllBet_MsgID_ID = 29003
};
bool SC_HongHeiAllBet_MsgID_IsValid(int value);
const SC_HongHeiAllBet_MsgID SC_HongHeiAllBet_MsgID_MsgID_MIN = SC_HongHeiAllBet_MsgID_ID;
const SC_HongHeiAllBet_MsgID SC_HongHeiAllBet_MsgID_MsgID_MAX = SC_HongHeiAllBet_MsgID_ID;
const int SC_HongHeiAllBet_MsgID_MsgID_ARRAYSIZE = SC_HongHeiAllBet_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_HongHeiAllBet_MsgID_descriptor();
inline const ::std::string& SC_HongHeiAllBet_MsgID_Name(SC_HongHeiAllBet_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_HongHeiAllBet_MsgID_descriptor(), value);
}
inline bool SC_HongHeiAllBet_MsgID_Parse(
    const ::std::string& name, SC_HongHeiAllBet_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_HongHeiAllBet_MsgID>(
    SC_HongHeiAllBet_MsgID_descriptor(), name, value);
}
enum SC_HongHeiPostCard_MsgID {
  SC_HongHeiPostCard_MsgID_ID = 29004
};
bool SC_HongHeiPostCard_MsgID_IsValid(int value);
const SC_HongHeiPostCard_MsgID SC_HongHeiPostCard_MsgID_MsgID_MIN = SC_HongHeiPostCard_MsgID_ID;
const SC_HongHeiPostCard_MsgID SC_HongHeiPostCard_MsgID_MsgID_MAX = SC_HongHeiPostCard_MsgID_ID;
const int SC_HongHeiPostCard_MsgID_MsgID_ARRAYSIZE = SC_HongHeiPostCard_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_HongHeiPostCard_MsgID_descriptor();
inline const ::std::string& SC_HongHeiPostCard_MsgID_Name(SC_HongHeiPostCard_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_HongHeiPostCard_MsgID_descriptor(), value);
}
inline bool SC_HongHeiPostCard_MsgID_Parse(
    const ::std::string& name, SC_HongHeiPostCard_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_HongHeiPostCard_MsgID>(
    SC_HongHeiPostCard_MsgID_descriptor(), name, value);
}
enum SC_HongHeiPostResult_MsgID {
  SC_HongHeiPostResult_MsgID_ID = 29005
};
bool SC_HongHeiPostResult_MsgID_IsValid(int value);
const SC_HongHeiPostResult_MsgID SC_HongHeiPostResult_MsgID_MsgID_MIN = SC_HongHeiPostResult_MsgID_ID;
const SC_HongHeiPostResult_MsgID SC_HongHeiPostResult_MsgID_MsgID_MAX = SC_HongHeiPostResult_MsgID_ID;
const int SC_HongHeiPostResult_MsgID_MsgID_ARRAYSIZE = SC_HongHeiPostResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_HongHeiPostResult_MsgID_descriptor();
inline const ::std::string& SC_HongHeiPostResult_MsgID_Name(SC_HongHeiPostResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_HongHeiPostResult_MsgID_descriptor(), value);
}
inline bool SC_HongHeiPostResult_MsgID_Parse(
    const ::std::string& name, SC_HongHeiPostResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_HongHeiPostResult_MsgID>(
    SC_HongHeiPostResult_MsgID_descriptor(), name, value);
}
enum SC_HongHeiReConnect_MsgID {
  SC_HongHeiReConnect_MsgID_ID = 29006
};
bool SC_HongHeiReConnect_MsgID_IsValid(int value);
const SC_HongHeiReConnect_MsgID SC_HongHeiReConnect_MsgID_MsgID_MIN = SC_HongHeiReConnect_MsgID_ID;
const SC_HongHeiReConnect_MsgID SC_HongHeiReConnect_MsgID_MsgID_MAX = SC_HongHeiReConnect_MsgID_ID;
const int SC_HongHeiReConnect_MsgID_MsgID_ARRAYSIZE = SC_HongHeiReConnect_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_HongHeiReConnect_MsgID_descriptor();
inline const ::std::string& SC_HongHeiReConnect_MsgID_Name(SC_HongHeiReConnect_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_HongHeiReConnect_MsgID_descriptor(), value);
}
inline bool SC_HongHeiReConnect_MsgID_Parse(
    const ::std::string& name, SC_HongHeiReConnect_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_HongHeiReConnect_MsgID>(
    SC_HongHeiReConnect_MsgID_descriptor(), name, value);
}
enum SC_HongHeiRest_MsgID {
  SC_HongHeiRest_MsgID_ID = 29007
};
bool SC_HongHeiRest_MsgID_IsValid(int value);
const SC_HongHeiRest_MsgID SC_HongHeiRest_MsgID_MsgID_MIN = SC_HongHeiRest_MsgID_ID;
const SC_HongHeiRest_MsgID SC_HongHeiRest_MsgID_MsgID_MAX = SC_HongHeiRest_MsgID_ID;
const int SC_HongHeiRest_MsgID_MsgID_ARRAYSIZE = SC_HongHeiRest_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_HongHeiRest_MsgID_descriptor();
inline const ::std::string& SC_HongHeiRest_MsgID_Name(SC_HongHeiRest_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_HongHeiRest_MsgID_descriptor(), value);
}
inline bool SC_HongHeiRest_MsgID_Parse(
    const ::std::string& name, SC_HongHeiRest_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_HongHeiRest_MsgID>(
    SC_HongHeiRest_MsgID_descriptor(), name, value);
}
enum SC_HongHeiPlayerList_MsgID {
  SC_HongHeiPlayerList_MsgID_ID = 29008
};
bool SC_HongHeiPlayerList_MsgID_IsValid(int value);
const SC_HongHeiPlayerList_MsgID SC_HongHeiPlayerList_MsgID_MsgID_MIN = SC_HongHeiPlayerList_MsgID_ID;
const SC_HongHeiPlayerList_MsgID SC_HongHeiPlayerList_MsgID_MsgID_MAX = SC_HongHeiPlayerList_MsgID_ID;
const int SC_HongHeiPlayerList_MsgID_MsgID_ARRAYSIZE = SC_HongHeiPlayerList_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_HongHeiPlayerList_MsgID_descriptor();
inline const ::std::string& SC_HongHeiPlayerList_MsgID_Name(SC_HongHeiPlayerList_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_HongHeiPlayerList_MsgID_descriptor(), value);
}
inline bool SC_HongHeiPlayerList_MsgID_Parse(
    const ::std::string& name, SC_HongHeiPlayerList_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_HongHeiPlayerList_MsgID>(
    SC_HongHeiPlayerList_MsgID_descriptor(), name, value);
}
enum SC_HongHeiGameRecord_MsgID {
  SC_HongHeiGameRecord_MsgID_ID = 29009
};
bool SC_HongHeiGameRecord_MsgID_IsValid(int value);
const SC_HongHeiGameRecord_MsgID SC_HongHeiGameRecord_MsgID_MsgID_MIN = SC_HongHeiGameRecord_MsgID_ID;
const SC_HongHeiGameRecord_MsgID SC_HongHeiGameRecord_MsgID_MsgID_MAX = SC_HongHeiGameRecord_MsgID_ID;
const int SC_HongHeiGameRecord_MsgID_MsgID_ARRAYSIZE = SC_HongHeiGameRecord_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_HongHeiGameRecord_MsgID_descriptor();
inline const ::std::string& SC_HongHeiGameRecord_MsgID_Name(SC_HongHeiGameRecord_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_HongHeiGameRecord_MsgID_descriptor(), value);
}
inline bool SC_HongHeiGameRecord_MsgID_Parse(
    const ::std::string& name, SC_HongHeiGameRecord_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_HongHeiGameRecord_MsgID>(
    SC_HongHeiGameRecord_MsgID_descriptor(), name, value);
}
enum CS_HongHeiBetStandard_MsgID {
  CS_HongHeiBetStandard_MsgID_ID = 29010
};
bool CS_HongHeiBetStandard_MsgID_IsValid(int value);
const CS_HongHeiBetStandard_MsgID CS_HongHeiBetStandard_MsgID_MsgID_MIN = CS_HongHeiBetStandard_MsgID_ID;
const CS_HongHeiBetStandard_MsgID CS_HongHeiBetStandard_MsgID_MsgID_MAX = CS_HongHeiBetStandard_MsgID_ID;
const int CS_HongHeiBetStandard_MsgID_MsgID_ARRAYSIZE = CS_HongHeiBetStandard_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_HongHeiBetStandard_MsgID_descriptor();
inline const ::std::string& CS_HongHeiBetStandard_MsgID_Name(CS_HongHeiBetStandard_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_HongHeiBetStandard_MsgID_descriptor(), value);
}
inline bool CS_HongHeiBetStandard_MsgID_Parse(
    const ::std::string& name, CS_HongHeiBetStandard_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_HongHeiBetStandard_MsgID>(
    CS_HongHeiBetStandard_MsgID_descriptor(), name, value);
}
enum SC_HongHeiBetStandard_MsgID {
  SC_HongHeiBetStandard_MsgID_ID = 29011
};
bool SC_HongHeiBetStandard_MsgID_IsValid(int value);
const SC_HongHeiBetStandard_MsgID SC_HongHeiBetStandard_MsgID_MsgID_MIN = SC_HongHeiBetStandard_MsgID_ID;
const SC_HongHeiBetStandard_MsgID SC_HongHeiBetStandard_MsgID_MsgID_MAX = SC_HongHeiBetStandard_MsgID_ID;
const int SC_HongHeiBetStandard_MsgID_MsgID_ARRAYSIZE = SC_HongHeiBetStandard_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_HongHeiBetStandard_MsgID_descriptor();
inline const ::std::string& SC_HongHeiBetStandard_MsgID_Name(SC_HongHeiBetStandard_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_HongHeiBetStandard_MsgID_descriptor(), value);
}
inline bool SC_HongHeiBetStandard_MsgID_Parse(
    const ::std::string& name, SC_HongHeiBetStandard_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_HongHeiBetStandard_MsgID>(
    SC_HongHeiBetStandard_MsgID_descriptor(), name, value);
}
enum SC_HongHeiRichList_MsgID {
  SC_HongHeiRichList_MsgID_ID = 29012
};
bool SC_HongHeiRichList_MsgID_IsValid(int value);
const SC_HongHeiRichList_MsgID SC_HongHeiRichList_MsgID_MsgID_MIN = SC_HongHeiRichList_MsgID_ID;
const SC_HongHeiRichList_MsgID SC_HongHeiRichList_MsgID_MsgID_MAX = SC_HongHeiRichList_MsgID_ID;
const int SC_HongHeiRichList_MsgID_MsgID_ARRAYSIZE = SC_HongHeiRichList_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_HongHeiRichList_MsgID_descriptor();
inline const ::std::string& SC_HongHeiRichList_MsgID_Name(SC_HongHeiRichList_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_HongHeiRichList_MsgID_descriptor(), value);
}
inline bool SC_HongHeiRichList_MsgID_Parse(
    const ::std::string& name, SC_HongHeiRichList_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_HongHeiRichList_MsgID>(
    SC_HongHeiRichList_MsgID_descriptor(), name, value);
}
enum CS_HongHeiGetState_MsgID {
  CS_HongHeiGetState_MsgID_ID = 29013
};
bool CS_HongHeiGetState_MsgID_IsValid(int value);
const CS_HongHeiGetState_MsgID CS_HongHeiGetState_MsgID_MsgID_MIN = CS_HongHeiGetState_MsgID_ID;
const CS_HongHeiGetState_MsgID CS_HongHeiGetState_MsgID_MsgID_MAX = CS_HongHeiGetState_MsgID_ID;
const int CS_HongHeiGetState_MsgID_MsgID_ARRAYSIZE = CS_HongHeiGetState_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_HongHeiGetState_MsgID_descriptor();
inline const ::std::string& CS_HongHeiGetState_MsgID_Name(CS_HongHeiGetState_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_HongHeiGetState_MsgID_descriptor(), value);
}
inline bool CS_HongHeiGetState_MsgID_Parse(
    const ::std::string& name, CS_HongHeiGetState_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_HongHeiGetState_MsgID>(
    CS_HongHeiGetState_MsgID_descriptor(), name, value);
}
enum SC_HongHeiGetState_MsgID {
  SC_HongHeiGetState_MsgID_ID = 29014
};
bool SC_HongHeiGetState_MsgID_IsValid(int value);
const SC_HongHeiGetState_MsgID SC_HongHeiGetState_MsgID_MsgID_MIN = SC_HongHeiGetState_MsgID_ID;
const SC_HongHeiGetState_MsgID SC_HongHeiGetState_MsgID_MsgID_MAX = SC_HongHeiGetState_MsgID_ID;
const int SC_HongHeiGetState_MsgID_MsgID_ARRAYSIZE = SC_HongHeiGetState_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_HongHeiGetState_MsgID_descriptor();
inline const ::std::string& SC_HongHeiGetState_MsgID_Name(SC_HongHeiGetState_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_HongHeiGetState_MsgID_descriptor(), value);
}
inline bool SC_HongHeiGetState_MsgID_Parse(
    const ::std::string& name, SC_HongHeiGetState_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_HongHeiGetState_MsgID>(
    SC_HongHeiGetState_MsgID_descriptor(), name, value);
}
// ===================================================================

class SC_HongHeiCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiCard) */ {
 public:
  SC_HongHeiCard();
  virtual ~SC_HongHeiCard();

  SC_HongHeiCard(const SC_HongHeiCard& from);

  inline SC_HongHeiCard& operator=(const SC_HongHeiCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiCard& default_instance();

  static inline const SC_HongHeiCard* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiCard*>(
               &_SC_HongHeiCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SC_HongHeiCard* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiCard* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiCard& from);
  void MergeFrom(const SC_HongHeiCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 red_cards = 1;
  int red_cards_size() const;
  void clear_red_cards();
  static const int kRedCardsFieldNumber = 1;
  ::google::protobuf::int32 red_cards(int index) const;
  void set_red_cards(int index, ::google::protobuf::int32 value);
  void add_red_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      red_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_red_cards();

  // repeated int32 black_cards = 2;
  int black_cards_size() const;
  void clear_black_cards();
  static const int kBlackCardsFieldNumber = 2;
  ::google::protobuf::int32 black_cards(int index) const;
  void set_black_cards(int index, ::google::protobuf::int32 value);
  void add_black_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      black_cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_black_cards();

  // @@protoc_insertion_point(class_scope:SC_HongHeiCard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > red_cards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > black_cards_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HongHeiOnlinePlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiOnlinePlayer) */ {
 public:
  SC_HongHeiOnlinePlayer();
  virtual ~SC_HongHeiOnlinePlayer();

  SC_HongHeiOnlinePlayer(const SC_HongHeiOnlinePlayer& from);

  inline SC_HongHeiOnlinePlayer& operator=(const SC_HongHeiOnlinePlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiOnlinePlayer& default_instance();

  static inline const SC_HongHeiOnlinePlayer* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiOnlinePlayer*>(
               &_SC_HongHeiOnlinePlayer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SC_HongHeiOnlinePlayer* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiOnlinePlayer* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiOnlinePlayer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiOnlinePlayer& from);
  void MergeFrom(const SC_HongHeiOnlinePlayer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiOnlinePlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ip_area = 2;
  bool has_ip_area() const;
  void clear_ip_area();
  static const int kIpAreaFieldNumber = 2;
  const ::std::string& ip_area() const;
  void set_ip_area(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_area(::std::string&& value);
  #endif
  void set_ip_area(const char* value);
  void set_ip_area(const char* value, size_t size);
  ::std::string* mutable_ip_area();
  ::std::string* release_ip_area();
  void set_allocated_ip_area(::std::string* ip_area);

  // optional int32 header_icon = 1 [default = 0];
  bool has_header_icon() const;
  void clear_header_icon();
  static const int kHeaderIconFieldNumber = 1;
  ::google::protobuf::int32 header_icon() const;
  void set_header_icon(::google::protobuf::int32 value);

  // optional int32 player_money = 3;
  bool has_player_money() const;
  void clear_player_money();
  static const int kPlayerMoneyFieldNumber = 3;
  ::google::protobuf::int32 player_money() const;
  void set_player_money(::google::protobuf::int32 value);

  // optional int32 player_bet = 4;
  bool has_player_bet() const;
  void clear_player_bet();
  static const int kPlayerBetFieldNumber = 4;
  ::google::protobuf::int32 player_bet() const;
  void set_player_bet(::google::protobuf::int32 value);

  // optional int32 player_win = 5;
  bool has_player_win() const;
  void clear_player_win();
  static const int kPlayerWinFieldNumber = 5;
  ::google::protobuf::int32 player_win() const;
  void set_player_win(::google::protobuf::int32 value);

  // optional int32 player_rank = 6;
  bool has_player_rank() const;
  void clear_player_rank();
  static const int kPlayerRankFieldNumber = 6;
  ::google::protobuf::int32 player_rank() const;
  void set_player_rank(::google::protobuf::int32 value);

  // optional int32 win_lost = 7;
  bool has_win_lost() const;
  void clear_win_lost();
  static const int kWinLostFieldNumber = 7;
  ::google::protobuf::int32 win_lost() const;
  void set_win_lost(::google::protobuf::int32 value);

  // optional int32 win_money = 8;
  bool has_win_money() const;
  void clear_win_money();
  static const int kWinMoneyFieldNumber = 8;
  ::google::protobuf::int32 win_money() const;
  void set_win_money(::google::protobuf::int32 value);

  // optional int32 guid = 9;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 9;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 chair_id = 10;
  bool has_chair_id() const;
  void clear_chair_id();
  static const int kChairIdFieldNumber = 10;
  ::google::protobuf::int32 chair_id() const;
  void set_chair_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_HongHeiOnlinePlayer)
 private:
  void set_has_header_icon();
  void clear_has_header_icon();
  void set_has_ip_area();
  void clear_has_ip_area();
  void set_has_player_money();
  void clear_has_player_money();
  void set_has_player_bet();
  void clear_has_player_bet();
  void set_has_player_win();
  void clear_has_player_win();
  void set_has_player_rank();
  void clear_has_player_rank();
  void set_has_win_lost();
  void clear_has_win_lost();
  void set_has_win_money();
  void clear_has_win_money();
  void set_has_guid();
  void clear_has_guid();
  void set_has_chair_id();
  void clear_has_chair_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_area_;
  ::google::protobuf::int32 header_icon_;
  ::google::protobuf::int32 player_money_;
  ::google::protobuf::int32 player_bet_;
  ::google::protobuf::int32 player_win_;
  ::google::protobuf::int32 player_rank_;
  ::google::protobuf::int32 win_lost_;
  ::google::protobuf::int32 win_money_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 chair_id_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HongHeiRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiRecord) */ {
 public:
  SC_HongHeiRecord();
  virtual ~SC_HongHeiRecord();

  SC_HongHeiRecord(const SC_HongHeiRecord& from);

  inline SC_HongHeiRecord& operator=(const SC_HongHeiRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiRecord& default_instance();

  static inline const SC_HongHeiRecord* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiRecord*>(
               &_SC_HongHeiRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SC_HongHeiRecord* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiRecord& from);
  void MergeFrom(const SC_HongHeiRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 win_color = 1;
  bool has_win_color() const;
  void clear_win_color();
  static const int kWinColorFieldNumber = 1;
  ::google::protobuf::int32 win_color() const;
  void set_win_color(::google::protobuf::int32 value);

  // optional int32 win_type = 2;
  bool has_win_type() const;
  void clear_win_type();
  static const int kWinTypeFieldNumber = 2;
  ::google::protobuf::int32 win_type() const;
  void set_win_type(::google::protobuf::int32 value);

  // optional int32 turn = 3;
  bool has_turn() const;
  void clear_turn();
  static const int kTurnFieldNumber = 3;
  ::google::protobuf::int32 turn() const;
  void set_turn(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_HongHeiRecord)
 private:
  void set_has_win_color();
  void clear_has_win_color();
  void set_has_win_type();
  void clear_has_win_type();
  void set_has_turn();
  void clear_has_turn();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 win_color_;
  ::google::protobuf::int32 win_type_;
  ::google::protobuf::int32 turn_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HongHeiRichPlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiRichPlayer) */ {
 public:
  SC_HongHeiRichPlayer();
  virtual ~SC_HongHeiRichPlayer();

  SC_HongHeiRichPlayer(const SC_HongHeiRichPlayer& from);

  inline SC_HongHeiRichPlayer& operator=(const SC_HongHeiRichPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiRichPlayer& default_instance();

  static inline const SC_HongHeiRichPlayer* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiRichPlayer*>(
               &_SC_HongHeiRichPlayer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SC_HongHeiRichPlayer* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiRichPlayer* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiRichPlayer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiRichPlayer& from);
  void MergeFrom(const SC_HongHeiRichPlayer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiRichPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 chair = 1;
  bool has_chair() const;
  void clear_chair();
  static const int kChairFieldNumber = 1;
  ::google::protobuf::int32 chair() const;
  void set_chair(::google::protobuf::int32 value);

  // optional int32 victory = 4;
  bool has_victory() const;
  void clear_victory();
  static const int kVictoryFieldNumber = 4;
  ::google::protobuf::int32 victory() const;
  void set_victory(::google::protobuf::int32 value);

  // optional int64 tax = 3;
  bool has_tax() const;
  void clear_tax();
  static const int kTaxFieldNumber = 3;
  ::google::protobuf::int64 tax() const;
  void set_tax(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SC_HongHeiRichPlayer)
 private:
  void set_has_chair();
  void clear_has_chair();
  void set_has_money();
  void clear_has_money();
  void set_has_tax();
  void clear_has_tax();
  void set_has_victory();
  void clear_has_victory();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 chair_;
  ::google::protobuf::int32 victory_;
  ::google::protobuf::int64 tax_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HongHeiStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiStart) */ {
 public:
  SC_HongHeiStart();
  virtual ~SC_HongHeiStart();

  SC_HongHeiStart(const SC_HongHeiStart& from);

  inline SC_HongHeiStart& operator=(const SC_HongHeiStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiStart& default_instance();

  static inline const SC_HongHeiStart* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiStart*>(
               &_SC_HongHeiStart_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SC_HongHeiStart* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiStart* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiStart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiStart& from);
  void MergeFrom(const SC_HongHeiStart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_HongHeiStart_MsgID MsgID;
  static const MsgID ID =
    SC_HongHeiStart_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_HongHeiStart_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_HongHeiStart_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_HongHeiStart_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_HongHeiStart_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_HongHeiStart_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_HongHeiStart_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_HongHeiStart_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 playerbets = 2;
  int playerbets_size() const;
  void clear_playerbets();
  static const int kPlayerbetsFieldNumber = 2;
  ::google::protobuf::int32 playerbets(int index) const;
  void set_playerbets(int index, ::google::protobuf::int32 value);
  void add_playerbets(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      playerbets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_playerbets();

  // repeated int32 allbets = 3;
  int allbets_size() const;
  void clear_allbets();
  static const int kAllbetsFieldNumber = 3;
  ::google::protobuf::int32 allbets(int index) const;
  void set_allbets(int index, ::google::protobuf::int32 value);
  void add_allbets(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      allbets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_allbets();

  // optional int32 start_waittime = 1;
  bool has_start_waittime() const;
  void clear_start_waittime();
  static const int kStartWaittimeFieldNumber = 1;
  ::google::protobuf::int32 start_waittime() const;
  void set_start_waittime(::google::protobuf::int32 value);

  // optional int32 table_status = 4;
  bool has_table_status() const;
  void clear_table_status();
  static const int kTableStatusFieldNumber = 4;
  ::google::protobuf::int32 table_status() const;
  void set_table_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_HongHeiStart)
 private:
  void set_has_start_waittime();
  void clear_has_start_waittime();
  void set_has_table_status();
  void clear_has_table_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > playerbets_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > allbets_;
  ::google::protobuf::int32 start_waittime_;
  ::google::protobuf::int32 table_status_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_HongHeiPlayerBet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_HongHeiPlayerBet) */ {
 public:
  CS_HongHeiPlayerBet();
  virtual ~CS_HongHeiPlayerBet();

  CS_HongHeiPlayerBet(const CS_HongHeiPlayerBet& from);

  inline CS_HongHeiPlayerBet& operator=(const CS_HongHeiPlayerBet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_HongHeiPlayerBet& default_instance();

  static inline const CS_HongHeiPlayerBet* internal_default_instance() {
    return reinterpret_cast<const CS_HongHeiPlayerBet*>(
               &_CS_HongHeiPlayerBet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CS_HongHeiPlayerBet* other);

  // implements Message ----------------------------------------------

  inline CS_HongHeiPlayerBet* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_HongHeiPlayerBet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_HongHeiPlayerBet& from);
  void MergeFrom(const CS_HongHeiPlayerBet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_HongHeiPlayerBet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_HongHeiPlayerBet_MsgID MsgID;
  static const MsgID ID =
    CS_HongHeiPlayerBet_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_HongHeiPlayerBet_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_HongHeiPlayerBet_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_HongHeiPlayerBet_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_HongHeiPlayerBet_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_HongHeiPlayerBet_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_HongHeiPlayerBet_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_HongHeiPlayerBet_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 playerbet = 1;
  bool has_playerbet() const;
  void clear_playerbet();
  static const int kPlayerbetFieldNumber = 1;
  ::google::protobuf::int64 playerbet() const;
  void set_playerbet(::google::protobuf::int64 value);

  // optional int32 playerbettype = 2;
  bool has_playerbettype() const;
  void clear_playerbettype();
  static const int kPlayerbettypeFieldNumber = 2;
  ::google::protobuf::int32 playerbettype() const;
  void set_playerbettype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_HongHeiPlayerBet)
 private:
  void set_has_playerbet();
  void clear_has_playerbet();
  void set_has_playerbettype();
  void clear_has_playerbettype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 playerbet_;
  ::google::protobuf::int32 playerbettype_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HongHeiPlayerBet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiPlayerBet) */ {
 public:
  SC_HongHeiPlayerBet();
  virtual ~SC_HongHeiPlayerBet();

  SC_HongHeiPlayerBet(const SC_HongHeiPlayerBet& from);

  inline SC_HongHeiPlayerBet& operator=(const SC_HongHeiPlayerBet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiPlayerBet& default_instance();

  static inline const SC_HongHeiPlayerBet* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiPlayerBet*>(
               &_SC_HongHeiPlayerBet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SC_HongHeiPlayerBet* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiPlayerBet* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiPlayerBet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiPlayerBet& from);
  void MergeFrom(const SC_HongHeiPlayerBet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiPlayerBet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_HongHeiPlayerBet_MsgID MsgID;
  static const MsgID ID =
    SC_HongHeiPlayerBet_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_HongHeiPlayerBet_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_HongHeiPlayerBet_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_HongHeiPlayerBet_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_HongHeiPlayerBet_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_HongHeiPlayerBet_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_HongHeiPlayerBet_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_HongHeiPlayerBet_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 allbets = 2;
  int allbets_size() const;
  void clear_allbets();
  static const int kAllbetsFieldNumber = 2;
  ::google::protobuf::int32 allbets(int index) const;
  void set_allbets(int index, ::google::protobuf::int32 value);
  void add_allbets(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      allbets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_allbets();

  // optional int32 playerbet_result = 1;
  bool has_playerbet_result() const;
  void clear_playerbet_result();
  static const int kPlayerbetResultFieldNumber = 1;
  ::google::protobuf::int32 playerbet_result() const;
  void set_playerbet_result(::google::protobuf::int32 value);

  // optional int32 player_chairid = 3;
  bool has_player_chairid() const;
  void clear_player_chairid();
  static const int kPlayerChairidFieldNumber = 3;
  ::google::protobuf::int32 player_chairid() const;
  void set_player_chairid(::google::protobuf::int32 value);

  // optional int32 playerbet = 4;
  bool has_playerbet() const;
  void clear_playerbet();
  static const int kPlayerbetFieldNumber = 4;
  ::google::protobuf::int32 playerbet() const;
  void set_playerbet(::google::protobuf::int32 value);

  // optional int32 playerbettype = 5;
  bool has_playerbettype() const;
  void clear_playerbettype();
  static const int kPlayerbettypeFieldNumber = 5;
  ::google::protobuf::int32 playerbettype() const;
  void set_playerbettype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_HongHeiPlayerBet)
 private:
  void set_has_playerbet_result();
  void clear_has_playerbet_result();
  void set_has_player_chairid();
  void clear_has_player_chairid();
  void set_has_playerbet();
  void clear_has_playerbet();
  void set_has_playerbettype();
  void clear_has_playerbettype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > allbets_;
  ::google::protobuf::int32 playerbet_result_;
  ::google::protobuf::int32 player_chairid_;
  ::google::protobuf::int32 playerbet_;
  ::google::protobuf::int32 playerbettype_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HongHeiAllBet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiAllBet) */ {
 public:
  SC_HongHeiAllBet();
  virtual ~SC_HongHeiAllBet();

  SC_HongHeiAllBet(const SC_HongHeiAllBet& from);

  inline SC_HongHeiAllBet& operator=(const SC_HongHeiAllBet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiAllBet& default_instance();

  static inline const SC_HongHeiAllBet* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiAllBet*>(
               &_SC_HongHeiAllBet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SC_HongHeiAllBet* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiAllBet* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiAllBet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiAllBet& from);
  void MergeFrom(const SC_HongHeiAllBet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiAllBet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_HongHeiAllBet_MsgID MsgID;
  static const MsgID ID =
    SC_HongHeiAllBet_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_HongHeiAllBet_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_HongHeiAllBet_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_HongHeiAllBet_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_HongHeiAllBet_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_HongHeiAllBet_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_HongHeiAllBet_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_HongHeiAllBet_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 allbets = 1;
  int allbets_size() const;
  void clear_allbets();
  static const int kAllbetsFieldNumber = 1;
  ::google::protobuf::int32 allbets(int index) const;
  void set_allbets(int index, ::google::protobuf::int32 value);
  void add_allbets(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      allbets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_allbets();

  // @@protoc_insertion_point(class_scope:SC_HongHeiAllBet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > allbets_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HongHeiPostCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiPostCard) */ {
 public:
  SC_HongHeiPostCard();
  virtual ~SC_HongHeiPostCard();

  SC_HongHeiPostCard(const SC_HongHeiPostCard& from);

  inline SC_HongHeiPostCard& operator=(const SC_HongHeiPostCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiPostCard& default_instance();

  static inline const SC_HongHeiPostCard* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiPostCard*>(
               &_SC_HongHeiPostCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SC_HongHeiPostCard* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiPostCard* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiPostCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiPostCard& from);
  void MergeFrom(const SC_HongHeiPostCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiPostCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_HongHeiPostCard_MsgID MsgID;
  static const MsgID ID =
    SC_HongHeiPostCard_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_HongHeiPostCard_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_HongHeiPostCard_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_HongHeiPostCard_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_HongHeiPostCard_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_HongHeiPostCard_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_HongHeiPostCard_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_HongHeiPostCard_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .SC_HongHeiCard pb_card = 2;
  bool has_pb_card() const;
  void clear_pb_card();
  static const int kPbCardFieldNumber = 2;
  const ::SC_HongHeiCard& pb_card() const;
  ::SC_HongHeiCard* mutable_pb_card();
  ::SC_HongHeiCard* release_pb_card();
  void set_allocated_pb_card(::SC_HongHeiCard* pb_card);

  // optional int32 result_waittime = 1;
  bool has_result_waittime() const;
  void clear_result_waittime();
  static const int kResultWaittimeFieldNumber = 1;
  ::google::protobuf::int32 result_waittime() const;
  void set_result_waittime(::google::protobuf::int32 value);

  // optional int32 table_status = 3;
  bool has_table_status() const;
  void clear_table_status();
  static const int kTableStatusFieldNumber = 3;
  ::google::protobuf::int32 table_status() const;
  void set_table_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_HongHeiPostCard)
 private:
  void set_has_result_waittime();
  void clear_has_result_waittime();
  void set_has_pb_card();
  void clear_has_pb_card();
  void set_has_table_status();
  void clear_has_table_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::SC_HongHeiCard* pb_card_;
  ::google::protobuf::int32 result_waittime_;
  ::google::protobuf::int32 table_status_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HongHeiPostResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiPostResult) */ {
 public:
  SC_HongHeiPostResult();
  virtual ~SC_HongHeiPostResult();

  SC_HongHeiPostResult(const SC_HongHeiPostResult& from);

  inline SC_HongHeiPostResult& operator=(const SC_HongHeiPostResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiPostResult& default_instance();

  static inline const SC_HongHeiPostResult* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiPostResult*>(
               &_SC_HongHeiPostResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SC_HongHeiPostResult* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiPostResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiPostResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiPostResult& from);
  void MergeFrom(const SC_HongHeiPostResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiPostResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_HongHeiPostResult_MsgID MsgID;
  static const MsgID ID =
    SC_HongHeiPostResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_HongHeiPostResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_HongHeiPostResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_HongHeiPostResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_HongHeiPostResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_HongHeiPostResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_HongHeiPostResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_HongHeiPostResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 next_waittime = 1;
  bool has_next_waittime() const;
  void clear_next_waittime();
  static const int kNextWaittimeFieldNumber = 1;
  ::google::protobuf::int32 next_waittime() const;
  void set_next_waittime(::google::protobuf::int32 value);

  // optional int32 chair = 2;
  bool has_chair() const;
  void clear_chair();
  static const int kChairFieldNumber = 2;
  ::google::protobuf::int32 chair() const;
  void set_chair(::google::protobuf::int32 value);

  // optional int64 money = 3;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int64 tax = 4;
  bool has_tax() const;
  void clear_tax();
  static const int kTaxFieldNumber = 4;
  ::google::protobuf::int64 tax() const;
  void set_tax(::google::protobuf::int64 value);

  // optional int32 victory = 5;
  bool has_victory() const;
  void clear_victory();
  static const int kVictoryFieldNumber = 5;
  ::google::protobuf::int32 victory() const;
  void set_victory(::google::protobuf::int32 value);

  // optional int32 table_status = 6;
  bool has_table_status() const;
  void clear_table_status();
  static const int kTableStatusFieldNumber = 6;
  ::google::protobuf::int32 table_status() const;
  void set_table_status(::google::protobuf::int32 value);

  // optional int64 win_type = 8;
  bool has_win_type() const;
  void clear_win_type();
  static const int kWinTypeFieldNumber = 8;
  ::google::protobuf::int64 win_type() const;
  void set_win_type(::google::protobuf::int64 value);

  // optional int32 win_area = 7;
  bool has_win_area() const;
  void clear_win_area();
  static const int kWinAreaFieldNumber = 7;
  ::google::protobuf::int32 win_area() const;
  void set_win_area(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_HongHeiPostResult)
 private:
  void set_has_next_waittime();
  void clear_has_next_waittime();
  void set_has_chair();
  void clear_has_chair();
  void set_has_money();
  void clear_has_money();
  void set_has_tax();
  void clear_has_tax();
  void set_has_victory();
  void clear_has_victory();
  void set_has_table_status();
  void clear_has_table_status();
  void set_has_win_area();
  void clear_has_win_area();
  void set_has_win_type();
  void clear_has_win_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 next_waittime_;
  ::google::protobuf::int32 chair_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int64 tax_;
  ::google::protobuf::int32 victory_;
  ::google::protobuf::int32 table_status_;
  ::google::protobuf::int64 win_type_;
  ::google::protobuf::int32 win_area_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Player_bet_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Player_bet_info) */ {
 public:
  Player_bet_info();
  virtual ~Player_bet_info();

  Player_bet_info(const Player_bet_info& from);

  inline Player_bet_info& operator=(const Player_bet_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player_bet_info& default_instance();

  static inline const Player_bet_info* internal_default_instance() {
    return reinterpret_cast<const Player_bet_info*>(
               &_Player_bet_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Player_bet_info* other);

  // implements Message ----------------------------------------------

  inline Player_bet_info* New() const PROTOBUF_FINAL { return New(NULL); }

  Player_bet_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Player_bet_info& from);
  void MergeFrom(const Player_bet_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Player_bet_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 bet_money = 1;
  int bet_money_size() const;
  void clear_bet_money();
  static const int kBetMoneyFieldNumber = 1;
  ::google::protobuf::int64 bet_money(int index) const;
  void set_bet_money(int index, ::google::protobuf::int64 value);
  void add_bet_money(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      bet_money() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_bet_money();

  // optional int32 chair = 2;
  bool has_chair() const;
  void clear_chair();
  static const int kChairFieldNumber = 2;
  ::google::protobuf::int32 chair() const;
  void set_chair(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Player_bet_info)
 private:
  void set_has_chair();
  void clear_has_chair();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > bet_money_;
  ::google::protobuf::int32 chair_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HongHeiReConnect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiReConnect) */ {
 public:
  SC_HongHeiReConnect();
  virtual ~SC_HongHeiReConnect();

  SC_HongHeiReConnect(const SC_HongHeiReConnect& from);

  inline SC_HongHeiReConnect& operator=(const SC_HongHeiReConnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiReConnect& default_instance();

  static inline const SC_HongHeiReConnect* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiReConnect*>(
               &_SC_HongHeiReConnect_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SC_HongHeiReConnect* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiReConnect* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiReConnect* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiReConnect& from);
  void MergeFrom(const SC_HongHeiReConnect& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiReConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_HongHeiReConnect_MsgID MsgID;
  static const MsgID ID =
    SC_HongHeiReConnect_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_HongHeiReConnect_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_HongHeiReConnect_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_HongHeiReConnect_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_HongHeiReConnect_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_HongHeiReConnect_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_HongHeiReConnect_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_HongHeiReConnect_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 playerbets = 1;
  int playerbets_size() const;
  void clear_playerbets();
  static const int kPlayerbetsFieldNumber = 1;
  ::google::protobuf::int32 playerbets(int index) const;
  void set_playerbets(int index, ::google::protobuf::int32 value);
  void add_playerbets(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      playerbets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_playerbets();

  // repeated int32 allbets = 2;
  int allbets_size() const;
  void clear_allbets();
  static const int kAllbetsFieldNumber = 2;
  ::google::protobuf::int32 allbets(int index) const;
  void set_allbets(int index, ::google::protobuf::int32 value);
  void add_allbets(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      allbets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_allbets();

  // repeated .Player_bet_info pb_player_bet_info = 7;
  int pb_player_bet_info_size() const;
  void clear_pb_player_bet_info();
  static const int kPbPlayerBetInfoFieldNumber = 7;
  const ::Player_bet_info& pb_player_bet_info(int index) const;
  ::Player_bet_info* mutable_pb_player_bet_info(int index);
  ::Player_bet_info* add_pb_player_bet_info();
  ::google::protobuf::RepeatedPtrField< ::Player_bet_info >*
      mutable_pb_player_bet_info();
  const ::google::protobuf::RepeatedPtrField< ::Player_bet_info >&
      pb_player_bet_info() const;

  // optional .SC_HongHeiCard pb_card = 4;
  bool has_pb_card() const;
  void clear_pb_card();
  static const int kPbCardFieldNumber = 4;
  const ::SC_HongHeiCard& pb_card() const;
  ::SC_HongHeiCard* mutable_pb_card();
  ::SC_HongHeiCard* release_pb_card();
  void set_allocated_pb_card(::SC_HongHeiCard* pb_card);

  // optional int32 player_bet = 3;
  bool has_player_bet() const;
  void clear_player_bet();
  static const int kPlayerBetFieldNumber = 3;
  ::google::protobuf::int32 player_bet() const;
  void set_player_bet(::google::protobuf::int32 value);

  // optional int32 table_status = 5;
  bool has_table_status() const;
  void clear_table_status();
  static const int kTableStatusFieldNumber = 5;
  ::google::protobuf::int32 table_status() const;
  void set_table_status(::google::protobuf::int32 value);

  // optional int32 table_waittime = 6;
  bool has_table_waittime() const;
  void clear_table_waittime();
  static const int kTableWaittimeFieldNumber = 6;
  ::google::protobuf::int32 table_waittime() const;
  void set_table_waittime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_HongHeiReConnect)
 private:
  void set_has_player_bet();
  void clear_has_player_bet();
  void set_has_pb_card();
  void clear_has_pb_card();
  void set_has_table_status();
  void clear_has_table_status();
  void set_has_table_waittime();
  void clear_has_table_waittime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > playerbets_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > allbets_;
  ::google::protobuf::RepeatedPtrField< ::Player_bet_info > pb_player_bet_info_;
  ::SC_HongHeiCard* pb_card_;
  ::google::protobuf::int32 player_bet_;
  ::google::protobuf::int32 table_status_;
  ::google::protobuf::int32 table_waittime_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HongHeiRest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiRest) */ {
 public:
  SC_HongHeiRest();
  virtual ~SC_HongHeiRest();

  SC_HongHeiRest(const SC_HongHeiRest& from);

  inline SC_HongHeiRest& operator=(const SC_HongHeiRest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiRest& default_instance();

  static inline const SC_HongHeiRest* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiRest*>(
               &_SC_HongHeiRest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SC_HongHeiRest* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiRest* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiRest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiRest& from);
  void MergeFrom(const SC_HongHeiRest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiRest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_HongHeiRest_MsgID MsgID;
  static const MsgID ID =
    SC_HongHeiRest_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_HongHeiRest_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_HongHeiRest_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_HongHeiRest_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_HongHeiRest_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_HongHeiRest_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_HongHeiRest_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_HongHeiRest_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 rest_waittime = 1;
  bool has_rest_waittime() const;
  void clear_rest_waittime();
  static const int kRestWaittimeFieldNumber = 1;
  ::google::protobuf::int32 rest_waittime() const;
  void set_rest_waittime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SC_HongHeiRest)
 private:
  void set_has_rest_waittime();
  void clear_has_rest_waittime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 rest_waittime_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HongHeiPlayerList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiPlayerList) */ {
 public:
  SC_HongHeiPlayerList();
  virtual ~SC_HongHeiPlayerList();

  SC_HongHeiPlayerList(const SC_HongHeiPlayerList& from);

  inline SC_HongHeiPlayerList& operator=(const SC_HongHeiPlayerList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiPlayerList& default_instance();

  static inline const SC_HongHeiPlayerList* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiPlayerList*>(
               &_SC_HongHeiPlayerList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SC_HongHeiPlayerList* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiPlayerList* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiPlayerList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiPlayerList& from);
  void MergeFrom(const SC_HongHeiPlayerList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiPlayerList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_HongHeiPlayerList_MsgID MsgID;
  static const MsgID ID =
    SC_HongHeiPlayerList_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_HongHeiPlayerList_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_HongHeiPlayerList_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_HongHeiPlayerList_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_HongHeiPlayerList_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_HongHeiPlayerList_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_HongHeiPlayerList_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_HongHeiPlayerList_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .SC_HongHeiOnlinePlayer pb_onlinelist = 1;
  int pb_onlinelist_size() const;
  void clear_pb_onlinelist();
  static const int kPbOnlinelistFieldNumber = 1;
  const ::SC_HongHeiOnlinePlayer& pb_onlinelist(int index) const;
  ::SC_HongHeiOnlinePlayer* mutable_pb_onlinelist(int index);
  ::SC_HongHeiOnlinePlayer* add_pb_onlinelist();
  ::google::protobuf::RepeatedPtrField< ::SC_HongHeiOnlinePlayer >*
      mutable_pb_onlinelist();
  const ::google::protobuf::RepeatedPtrField< ::SC_HongHeiOnlinePlayer >&
      pb_onlinelist() const;

  // @@protoc_insertion_point(class_scope:SC_HongHeiPlayerList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SC_HongHeiOnlinePlayer > pb_onlinelist_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HongHeiGameRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiGameRecord) */ {
 public:
  SC_HongHeiGameRecord();
  virtual ~SC_HongHeiGameRecord();

  SC_HongHeiGameRecord(const SC_HongHeiGameRecord& from);

  inline SC_HongHeiGameRecord& operator=(const SC_HongHeiGameRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiGameRecord& default_instance();

  static inline const SC_HongHeiGameRecord* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiGameRecord*>(
               &_SC_HongHeiGameRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(SC_HongHeiGameRecord* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiGameRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiGameRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiGameRecord& from);
  void MergeFrom(const SC_HongHeiGameRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiGameRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_HongHeiGameRecord_MsgID MsgID;
  static const MsgID ID =
    SC_HongHeiGameRecord_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_HongHeiGameRecord_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_HongHeiGameRecord_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_HongHeiGameRecord_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_HongHeiGameRecord_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_HongHeiGameRecord_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_HongHeiGameRecord_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_HongHeiGameRecord_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .SC_HongHeiRecord pb_record = 1;
  int pb_record_size() const;
  void clear_pb_record();
  static const int kPbRecordFieldNumber = 1;
  const ::SC_HongHeiRecord& pb_record(int index) const;
  ::SC_HongHeiRecord* mutable_pb_record(int index);
  ::SC_HongHeiRecord* add_pb_record();
  ::google::protobuf::RepeatedPtrField< ::SC_HongHeiRecord >*
      mutable_pb_record();
  const ::google::protobuf::RepeatedPtrField< ::SC_HongHeiRecord >&
      pb_record() const;

  // @@protoc_insertion_point(class_scope:SC_HongHeiGameRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SC_HongHeiRecord > pb_record_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_HongHeiBetStandard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_HongHeiBetStandard) */ {
 public:
  CS_HongHeiBetStandard();
  virtual ~CS_HongHeiBetStandard();

  CS_HongHeiBetStandard(const CS_HongHeiBetStandard& from);

  inline CS_HongHeiBetStandard& operator=(const CS_HongHeiBetStandard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_HongHeiBetStandard& default_instance();

  static inline const CS_HongHeiBetStandard* internal_default_instance() {
    return reinterpret_cast<const CS_HongHeiBetStandard*>(
               &_CS_HongHeiBetStandard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CS_HongHeiBetStandard* other);

  // implements Message ----------------------------------------------

  inline CS_HongHeiBetStandard* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_HongHeiBetStandard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_HongHeiBetStandard& from);
  void MergeFrom(const CS_HongHeiBetStandard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_HongHeiBetStandard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_HongHeiBetStandard_MsgID MsgID;
  static const MsgID ID =
    CS_HongHeiBetStandard_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_HongHeiBetStandard_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_HongHeiBetStandard_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_HongHeiBetStandard_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_HongHeiBetStandard_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_HongHeiBetStandard_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_HongHeiBetStandard_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_HongHeiBetStandard_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_HongHeiBetStandard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HongHeiBetStandard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiBetStandard) */ {
 public:
  SC_HongHeiBetStandard();
  virtual ~SC_HongHeiBetStandard();

  SC_HongHeiBetStandard(const SC_HongHeiBetStandard& from);

  inline SC_HongHeiBetStandard& operator=(const SC_HongHeiBetStandard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiBetStandard& default_instance();

  static inline const SC_HongHeiBetStandard* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiBetStandard*>(
               &_SC_HongHeiBetStandard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(SC_HongHeiBetStandard* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiBetStandard* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiBetStandard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiBetStandard& from);
  void MergeFrom(const SC_HongHeiBetStandard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiBetStandard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_HongHeiBetStandard_MsgID MsgID;
  static const MsgID ID =
    SC_HongHeiBetStandard_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_HongHeiBetStandard_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_HongHeiBetStandard_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_HongHeiBetStandard_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_HongHeiBetStandard_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_HongHeiBetStandard_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_HongHeiBetStandard_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_HongHeiBetStandard_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 playerbets = 1;
  int playerbets_size() const;
  void clear_playerbets();
  static const int kPlayerbetsFieldNumber = 1;
  ::google::protobuf::int32 playerbets(int index) const;
  void set_playerbets(int index, ::google::protobuf::int32 value);
  void add_playerbets(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      playerbets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_playerbets();

  // @@protoc_insertion_point(class_scope:SC_HongHeiBetStandard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > playerbets_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HongHeiRichList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiRichList) */ {
 public:
  SC_HongHeiRichList();
  virtual ~SC_HongHeiRichList();

  SC_HongHeiRichList(const SC_HongHeiRichList& from);

  inline SC_HongHeiRichList& operator=(const SC_HongHeiRichList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiRichList& default_instance();

  static inline const SC_HongHeiRichList* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiRichList*>(
               &_SC_HongHeiRichList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(SC_HongHeiRichList* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiRichList* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiRichList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiRichList& from);
  void MergeFrom(const SC_HongHeiRichList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiRichList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_HongHeiRichList_MsgID MsgID;
  static const MsgID ID =
    SC_HongHeiRichList_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_HongHeiRichList_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_HongHeiRichList_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_HongHeiRichList_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_HongHeiRichList_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_HongHeiRichList_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_HongHeiRichList_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_HongHeiRichList_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .SC_HongHeiRichPlayer pb_richlist = 1;
  int pb_richlist_size() const;
  void clear_pb_richlist();
  static const int kPbRichlistFieldNumber = 1;
  const ::SC_HongHeiRichPlayer& pb_richlist(int index) const;
  ::SC_HongHeiRichPlayer* mutable_pb_richlist(int index);
  ::SC_HongHeiRichPlayer* add_pb_richlist();
  ::google::protobuf::RepeatedPtrField< ::SC_HongHeiRichPlayer >*
      mutable_pb_richlist();
  const ::google::protobuf::RepeatedPtrField< ::SC_HongHeiRichPlayer >&
      pb_richlist() const;

  // @@protoc_insertion_point(class_scope:SC_HongHeiRichList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SC_HongHeiRichPlayer > pb_richlist_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_HongHeiGetState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_HongHeiGetState) */ {
 public:
  CS_HongHeiGetState();
  virtual ~CS_HongHeiGetState();

  CS_HongHeiGetState(const CS_HongHeiGetState& from);

  inline CS_HongHeiGetState& operator=(const CS_HongHeiGetState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_HongHeiGetState& default_instance();

  static inline const CS_HongHeiGetState* internal_default_instance() {
    return reinterpret_cast<const CS_HongHeiGetState*>(
               &_CS_HongHeiGetState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CS_HongHeiGetState* other);

  // implements Message ----------------------------------------------

  inline CS_HongHeiGetState* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_HongHeiGetState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_HongHeiGetState& from);
  void MergeFrom(const CS_HongHeiGetState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_HongHeiGetState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_HongHeiGetState_MsgID MsgID;
  static const MsgID ID =
    CS_HongHeiGetState_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_HongHeiGetState_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_HongHeiGetState_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_HongHeiGetState_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_HongHeiGetState_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_HongHeiGetState_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_HongHeiGetState_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_HongHeiGetState_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CS_HongHeiGetState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_HongHeiGetState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_HongHeiGetState) */ {
 public:
  SC_HongHeiGetState();
  virtual ~SC_HongHeiGetState();

  SC_HongHeiGetState(const SC_HongHeiGetState& from);

  inline SC_HongHeiGetState& operator=(const SC_HongHeiGetState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_HongHeiGetState& default_instance();

  static inline const SC_HongHeiGetState* internal_default_instance() {
    return reinterpret_cast<const SC_HongHeiGetState*>(
               &_SC_HongHeiGetState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(SC_HongHeiGetState* other);

  // implements Message ----------------------------------------------

  inline SC_HongHeiGetState* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_HongHeiGetState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_HongHeiGetState& from);
  void MergeFrom(const SC_HongHeiGetState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_HongHeiGetState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SC_HongHeiGetState_MsgID MsgID;
  static const MsgID ID =
    SC_HongHeiGetState_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SC_HongHeiGetState_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SC_HongHeiGetState_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SC_HongHeiGetState_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SC_HongHeiGetState_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SC_HongHeiGetState_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SC_HongHeiGetState_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SC_HongHeiGetState_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SC_HongHeiGetState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_public_5fhhdz_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_HongHeiCard

// repeated int32 red_cards = 1;
inline int SC_HongHeiCard::red_cards_size() const {
  return red_cards_.size();
}
inline void SC_HongHeiCard::clear_red_cards() {
  red_cards_.Clear();
}
inline ::google::protobuf::int32 SC_HongHeiCard::red_cards(int index) const {
  // @@protoc_insertion_point(field_get:SC_HongHeiCard.red_cards)
  return red_cards_.Get(index);
}
inline void SC_HongHeiCard::set_red_cards(int index, ::google::protobuf::int32 value) {
  red_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_HongHeiCard.red_cards)
}
inline void SC_HongHeiCard::add_red_cards(::google::protobuf::int32 value) {
  red_cards_.Add(value);
  // @@protoc_insertion_point(field_add:SC_HongHeiCard.red_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_HongHeiCard::red_cards() const {
  // @@protoc_insertion_point(field_list:SC_HongHeiCard.red_cards)
  return red_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_HongHeiCard::mutable_red_cards() {
  // @@protoc_insertion_point(field_mutable_list:SC_HongHeiCard.red_cards)
  return &red_cards_;
}

// repeated int32 black_cards = 2;
inline int SC_HongHeiCard::black_cards_size() const {
  return black_cards_.size();
}
inline void SC_HongHeiCard::clear_black_cards() {
  black_cards_.Clear();
}
inline ::google::protobuf::int32 SC_HongHeiCard::black_cards(int index) const {
  // @@protoc_insertion_point(field_get:SC_HongHeiCard.black_cards)
  return black_cards_.Get(index);
}
inline void SC_HongHeiCard::set_black_cards(int index, ::google::protobuf::int32 value) {
  black_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_HongHeiCard.black_cards)
}
inline void SC_HongHeiCard::add_black_cards(::google::protobuf::int32 value) {
  black_cards_.Add(value);
  // @@protoc_insertion_point(field_add:SC_HongHeiCard.black_cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_HongHeiCard::black_cards() const {
  // @@protoc_insertion_point(field_list:SC_HongHeiCard.black_cards)
  return black_cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_HongHeiCard::mutable_black_cards() {
  // @@protoc_insertion_point(field_mutable_list:SC_HongHeiCard.black_cards)
  return &black_cards_;
}

// -------------------------------------------------------------------

// SC_HongHeiOnlinePlayer

// optional int32 header_icon = 1 [default = 0];
inline bool SC_HongHeiOnlinePlayer::has_header_icon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_HongHeiOnlinePlayer::set_has_header_icon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_HongHeiOnlinePlayer::clear_has_header_icon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_HongHeiOnlinePlayer::clear_header_icon() {
  header_icon_ = 0;
  clear_has_header_icon();
}
inline ::google::protobuf::int32 SC_HongHeiOnlinePlayer::header_icon() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiOnlinePlayer.header_icon)
  return header_icon_;
}
inline void SC_HongHeiOnlinePlayer::set_header_icon(::google::protobuf::int32 value) {
  set_has_header_icon();
  header_icon_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiOnlinePlayer.header_icon)
}

// optional string ip_area = 2;
inline bool SC_HongHeiOnlinePlayer::has_ip_area() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_HongHeiOnlinePlayer::set_has_ip_area() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_HongHeiOnlinePlayer::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_HongHeiOnlinePlayer::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
inline const ::std::string& SC_HongHeiOnlinePlayer::ip_area() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiOnlinePlayer.ip_area)
  return ip_area_.GetNoArena();
}
inline void SC_HongHeiOnlinePlayer::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_HongHeiOnlinePlayer.ip_area)
}
#if LANG_CXX11
inline void SC_HongHeiOnlinePlayer::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SC_HongHeiOnlinePlayer.ip_area)
}
#endif
inline void SC_HongHeiOnlinePlayer::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_HongHeiOnlinePlayer.ip_area)
}
inline void SC_HongHeiOnlinePlayer::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_HongHeiOnlinePlayer.ip_area)
}
inline ::std::string* SC_HongHeiOnlinePlayer::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:SC_HongHeiOnlinePlayer.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_HongHeiOnlinePlayer::release_ip_area() {
  // @@protoc_insertion_point(field_release:SC_HongHeiOnlinePlayer.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_HongHeiOnlinePlayer::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:SC_HongHeiOnlinePlayer.ip_area)
}

// optional int32 player_money = 3;
inline bool SC_HongHeiOnlinePlayer::has_player_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_HongHeiOnlinePlayer::set_has_player_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_HongHeiOnlinePlayer::clear_has_player_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_HongHeiOnlinePlayer::clear_player_money() {
  player_money_ = 0;
  clear_has_player_money();
}
inline ::google::protobuf::int32 SC_HongHeiOnlinePlayer::player_money() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiOnlinePlayer.player_money)
  return player_money_;
}
inline void SC_HongHeiOnlinePlayer::set_player_money(::google::protobuf::int32 value) {
  set_has_player_money();
  player_money_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiOnlinePlayer.player_money)
}

// optional int32 player_bet = 4;
inline bool SC_HongHeiOnlinePlayer::has_player_bet() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_HongHeiOnlinePlayer::set_has_player_bet() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_HongHeiOnlinePlayer::clear_has_player_bet() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_HongHeiOnlinePlayer::clear_player_bet() {
  player_bet_ = 0;
  clear_has_player_bet();
}
inline ::google::protobuf::int32 SC_HongHeiOnlinePlayer::player_bet() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiOnlinePlayer.player_bet)
  return player_bet_;
}
inline void SC_HongHeiOnlinePlayer::set_player_bet(::google::protobuf::int32 value) {
  set_has_player_bet();
  player_bet_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiOnlinePlayer.player_bet)
}

// optional int32 player_win = 5;
inline bool SC_HongHeiOnlinePlayer::has_player_win() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SC_HongHeiOnlinePlayer::set_has_player_win() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SC_HongHeiOnlinePlayer::clear_has_player_win() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SC_HongHeiOnlinePlayer::clear_player_win() {
  player_win_ = 0;
  clear_has_player_win();
}
inline ::google::protobuf::int32 SC_HongHeiOnlinePlayer::player_win() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiOnlinePlayer.player_win)
  return player_win_;
}
inline void SC_HongHeiOnlinePlayer::set_player_win(::google::protobuf::int32 value) {
  set_has_player_win();
  player_win_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiOnlinePlayer.player_win)
}

// optional int32 player_rank = 6;
inline bool SC_HongHeiOnlinePlayer::has_player_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SC_HongHeiOnlinePlayer::set_has_player_rank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SC_HongHeiOnlinePlayer::clear_has_player_rank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SC_HongHeiOnlinePlayer::clear_player_rank() {
  player_rank_ = 0;
  clear_has_player_rank();
}
inline ::google::protobuf::int32 SC_HongHeiOnlinePlayer::player_rank() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiOnlinePlayer.player_rank)
  return player_rank_;
}
inline void SC_HongHeiOnlinePlayer::set_player_rank(::google::protobuf::int32 value) {
  set_has_player_rank();
  player_rank_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiOnlinePlayer.player_rank)
}

// optional int32 win_lost = 7;
inline bool SC_HongHeiOnlinePlayer::has_win_lost() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SC_HongHeiOnlinePlayer::set_has_win_lost() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SC_HongHeiOnlinePlayer::clear_has_win_lost() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SC_HongHeiOnlinePlayer::clear_win_lost() {
  win_lost_ = 0;
  clear_has_win_lost();
}
inline ::google::protobuf::int32 SC_HongHeiOnlinePlayer::win_lost() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiOnlinePlayer.win_lost)
  return win_lost_;
}
inline void SC_HongHeiOnlinePlayer::set_win_lost(::google::protobuf::int32 value) {
  set_has_win_lost();
  win_lost_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiOnlinePlayer.win_lost)
}

// optional int32 win_money = 8;
inline bool SC_HongHeiOnlinePlayer::has_win_money() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SC_HongHeiOnlinePlayer::set_has_win_money() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SC_HongHeiOnlinePlayer::clear_has_win_money() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SC_HongHeiOnlinePlayer::clear_win_money() {
  win_money_ = 0;
  clear_has_win_money();
}
inline ::google::protobuf::int32 SC_HongHeiOnlinePlayer::win_money() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiOnlinePlayer.win_money)
  return win_money_;
}
inline void SC_HongHeiOnlinePlayer::set_win_money(::google::protobuf::int32 value) {
  set_has_win_money();
  win_money_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiOnlinePlayer.win_money)
}

// optional int32 guid = 9;
inline bool SC_HongHeiOnlinePlayer::has_guid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SC_HongHeiOnlinePlayer::set_has_guid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SC_HongHeiOnlinePlayer::clear_has_guid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SC_HongHeiOnlinePlayer::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SC_HongHeiOnlinePlayer::guid() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiOnlinePlayer.guid)
  return guid_;
}
inline void SC_HongHeiOnlinePlayer::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiOnlinePlayer.guid)
}

// optional int32 chair_id = 10;
inline bool SC_HongHeiOnlinePlayer::has_chair_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SC_HongHeiOnlinePlayer::set_has_chair_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SC_HongHeiOnlinePlayer::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SC_HongHeiOnlinePlayer::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
inline ::google::protobuf::int32 SC_HongHeiOnlinePlayer::chair_id() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiOnlinePlayer.chair_id)
  return chair_id_;
}
inline void SC_HongHeiOnlinePlayer::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiOnlinePlayer.chair_id)
}

// -------------------------------------------------------------------

// SC_HongHeiRecord

// optional int32 win_color = 1;
inline bool SC_HongHeiRecord::has_win_color() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_HongHeiRecord::set_has_win_color() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_HongHeiRecord::clear_has_win_color() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_HongHeiRecord::clear_win_color() {
  win_color_ = 0;
  clear_has_win_color();
}
inline ::google::protobuf::int32 SC_HongHeiRecord::win_color() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiRecord.win_color)
  return win_color_;
}
inline void SC_HongHeiRecord::set_win_color(::google::protobuf::int32 value) {
  set_has_win_color();
  win_color_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiRecord.win_color)
}

// optional int32 win_type = 2;
inline bool SC_HongHeiRecord::has_win_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_HongHeiRecord::set_has_win_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_HongHeiRecord::clear_has_win_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_HongHeiRecord::clear_win_type() {
  win_type_ = 0;
  clear_has_win_type();
}
inline ::google::protobuf::int32 SC_HongHeiRecord::win_type() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiRecord.win_type)
  return win_type_;
}
inline void SC_HongHeiRecord::set_win_type(::google::protobuf::int32 value) {
  set_has_win_type();
  win_type_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiRecord.win_type)
}

// optional int32 turn = 3;
inline bool SC_HongHeiRecord::has_turn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_HongHeiRecord::set_has_turn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_HongHeiRecord::clear_has_turn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_HongHeiRecord::clear_turn() {
  turn_ = 0;
  clear_has_turn();
}
inline ::google::protobuf::int32 SC_HongHeiRecord::turn() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiRecord.turn)
  return turn_;
}
inline void SC_HongHeiRecord::set_turn(::google::protobuf::int32 value) {
  set_has_turn();
  turn_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiRecord.turn)
}

// -------------------------------------------------------------------

// SC_HongHeiRichPlayer

// optional int32 chair = 1;
inline bool SC_HongHeiRichPlayer::has_chair() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_HongHeiRichPlayer::set_has_chair() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_HongHeiRichPlayer::clear_has_chair() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_HongHeiRichPlayer::clear_chair() {
  chair_ = 0;
  clear_has_chair();
}
inline ::google::protobuf::int32 SC_HongHeiRichPlayer::chair() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiRichPlayer.chair)
  return chair_;
}
inline void SC_HongHeiRichPlayer::set_chair(::google::protobuf::int32 value) {
  set_has_chair();
  chair_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiRichPlayer.chair)
}

// optional int64 money = 2;
inline bool SC_HongHeiRichPlayer::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_HongHeiRichPlayer::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_HongHeiRichPlayer::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_HongHeiRichPlayer::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SC_HongHeiRichPlayer::money() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiRichPlayer.money)
  return money_;
}
inline void SC_HongHeiRichPlayer::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiRichPlayer.money)
}

// optional int64 tax = 3;
inline bool SC_HongHeiRichPlayer::has_tax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_HongHeiRichPlayer::set_has_tax() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_HongHeiRichPlayer::clear_has_tax() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_HongHeiRichPlayer::clear_tax() {
  tax_ = GOOGLE_LONGLONG(0);
  clear_has_tax();
}
inline ::google::protobuf::int64 SC_HongHeiRichPlayer::tax() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiRichPlayer.tax)
  return tax_;
}
inline void SC_HongHeiRichPlayer::set_tax(::google::protobuf::int64 value) {
  set_has_tax();
  tax_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiRichPlayer.tax)
}

// optional int32 victory = 4;
inline bool SC_HongHeiRichPlayer::has_victory() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_HongHeiRichPlayer::set_has_victory() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_HongHeiRichPlayer::clear_has_victory() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_HongHeiRichPlayer::clear_victory() {
  victory_ = 0;
  clear_has_victory();
}
inline ::google::protobuf::int32 SC_HongHeiRichPlayer::victory() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiRichPlayer.victory)
  return victory_;
}
inline void SC_HongHeiRichPlayer::set_victory(::google::protobuf::int32 value) {
  set_has_victory();
  victory_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiRichPlayer.victory)
}

// -------------------------------------------------------------------

// SC_HongHeiStart

// optional int32 start_waittime = 1;
inline bool SC_HongHeiStart::has_start_waittime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_HongHeiStart::set_has_start_waittime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_HongHeiStart::clear_has_start_waittime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_HongHeiStart::clear_start_waittime() {
  start_waittime_ = 0;
  clear_has_start_waittime();
}
inline ::google::protobuf::int32 SC_HongHeiStart::start_waittime() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiStart.start_waittime)
  return start_waittime_;
}
inline void SC_HongHeiStart::set_start_waittime(::google::protobuf::int32 value) {
  set_has_start_waittime();
  start_waittime_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiStart.start_waittime)
}

// repeated int32 playerbets = 2;
inline int SC_HongHeiStart::playerbets_size() const {
  return playerbets_.size();
}
inline void SC_HongHeiStart::clear_playerbets() {
  playerbets_.Clear();
}
inline ::google::protobuf::int32 SC_HongHeiStart::playerbets(int index) const {
  // @@protoc_insertion_point(field_get:SC_HongHeiStart.playerbets)
  return playerbets_.Get(index);
}
inline void SC_HongHeiStart::set_playerbets(int index, ::google::protobuf::int32 value) {
  playerbets_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_HongHeiStart.playerbets)
}
inline void SC_HongHeiStart::add_playerbets(::google::protobuf::int32 value) {
  playerbets_.Add(value);
  // @@protoc_insertion_point(field_add:SC_HongHeiStart.playerbets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_HongHeiStart::playerbets() const {
  // @@protoc_insertion_point(field_list:SC_HongHeiStart.playerbets)
  return playerbets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_HongHeiStart::mutable_playerbets() {
  // @@protoc_insertion_point(field_mutable_list:SC_HongHeiStart.playerbets)
  return &playerbets_;
}

// repeated int32 allbets = 3;
inline int SC_HongHeiStart::allbets_size() const {
  return allbets_.size();
}
inline void SC_HongHeiStart::clear_allbets() {
  allbets_.Clear();
}
inline ::google::protobuf::int32 SC_HongHeiStart::allbets(int index) const {
  // @@protoc_insertion_point(field_get:SC_HongHeiStart.allbets)
  return allbets_.Get(index);
}
inline void SC_HongHeiStart::set_allbets(int index, ::google::protobuf::int32 value) {
  allbets_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_HongHeiStart.allbets)
}
inline void SC_HongHeiStart::add_allbets(::google::protobuf::int32 value) {
  allbets_.Add(value);
  // @@protoc_insertion_point(field_add:SC_HongHeiStart.allbets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_HongHeiStart::allbets() const {
  // @@protoc_insertion_point(field_list:SC_HongHeiStart.allbets)
  return allbets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_HongHeiStart::mutable_allbets() {
  // @@protoc_insertion_point(field_mutable_list:SC_HongHeiStart.allbets)
  return &allbets_;
}

// optional int32 table_status = 4;
inline bool SC_HongHeiStart::has_table_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_HongHeiStart::set_has_table_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_HongHeiStart::clear_has_table_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_HongHeiStart::clear_table_status() {
  table_status_ = 0;
  clear_has_table_status();
}
inline ::google::protobuf::int32 SC_HongHeiStart::table_status() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiStart.table_status)
  return table_status_;
}
inline void SC_HongHeiStart::set_table_status(::google::protobuf::int32 value) {
  set_has_table_status();
  table_status_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiStart.table_status)
}

// -------------------------------------------------------------------

// CS_HongHeiPlayerBet

// optional int64 playerbet = 1;
inline bool CS_HongHeiPlayerBet::has_playerbet() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_HongHeiPlayerBet::set_has_playerbet() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_HongHeiPlayerBet::clear_has_playerbet() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_HongHeiPlayerBet::clear_playerbet() {
  playerbet_ = GOOGLE_LONGLONG(0);
  clear_has_playerbet();
}
inline ::google::protobuf::int64 CS_HongHeiPlayerBet::playerbet() const {
  // @@protoc_insertion_point(field_get:CS_HongHeiPlayerBet.playerbet)
  return playerbet_;
}
inline void CS_HongHeiPlayerBet::set_playerbet(::google::protobuf::int64 value) {
  set_has_playerbet();
  playerbet_ = value;
  // @@protoc_insertion_point(field_set:CS_HongHeiPlayerBet.playerbet)
}

// optional int32 playerbettype = 2;
inline bool CS_HongHeiPlayerBet::has_playerbettype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_HongHeiPlayerBet::set_has_playerbettype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_HongHeiPlayerBet::clear_has_playerbettype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_HongHeiPlayerBet::clear_playerbettype() {
  playerbettype_ = 0;
  clear_has_playerbettype();
}
inline ::google::protobuf::int32 CS_HongHeiPlayerBet::playerbettype() const {
  // @@protoc_insertion_point(field_get:CS_HongHeiPlayerBet.playerbettype)
  return playerbettype_;
}
inline void CS_HongHeiPlayerBet::set_playerbettype(::google::protobuf::int32 value) {
  set_has_playerbettype();
  playerbettype_ = value;
  // @@protoc_insertion_point(field_set:CS_HongHeiPlayerBet.playerbettype)
}

// -------------------------------------------------------------------

// SC_HongHeiPlayerBet

// optional int32 playerbet_result = 1;
inline bool SC_HongHeiPlayerBet::has_playerbet_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_HongHeiPlayerBet::set_has_playerbet_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_HongHeiPlayerBet::clear_has_playerbet_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_HongHeiPlayerBet::clear_playerbet_result() {
  playerbet_result_ = 0;
  clear_has_playerbet_result();
}
inline ::google::protobuf::int32 SC_HongHeiPlayerBet::playerbet_result() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPlayerBet.playerbet_result)
  return playerbet_result_;
}
inline void SC_HongHeiPlayerBet::set_playerbet_result(::google::protobuf::int32 value) {
  set_has_playerbet_result();
  playerbet_result_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiPlayerBet.playerbet_result)
}

// repeated int32 allbets = 2;
inline int SC_HongHeiPlayerBet::allbets_size() const {
  return allbets_.size();
}
inline void SC_HongHeiPlayerBet::clear_allbets() {
  allbets_.Clear();
}
inline ::google::protobuf::int32 SC_HongHeiPlayerBet::allbets(int index) const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPlayerBet.allbets)
  return allbets_.Get(index);
}
inline void SC_HongHeiPlayerBet::set_allbets(int index, ::google::protobuf::int32 value) {
  allbets_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_HongHeiPlayerBet.allbets)
}
inline void SC_HongHeiPlayerBet::add_allbets(::google::protobuf::int32 value) {
  allbets_.Add(value);
  // @@protoc_insertion_point(field_add:SC_HongHeiPlayerBet.allbets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_HongHeiPlayerBet::allbets() const {
  // @@protoc_insertion_point(field_list:SC_HongHeiPlayerBet.allbets)
  return allbets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_HongHeiPlayerBet::mutable_allbets() {
  // @@protoc_insertion_point(field_mutable_list:SC_HongHeiPlayerBet.allbets)
  return &allbets_;
}

// optional int32 player_chairid = 3;
inline bool SC_HongHeiPlayerBet::has_player_chairid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_HongHeiPlayerBet::set_has_player_chairid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_HongHeiPlayerBet::clear_has_player_chairid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_HongHeiPlayerBet::clear_player_chairid() {
  player_chairid_ = 0;
  clear_has_player_chairid();
}
inline ::google::protobuf::int32 SC_HongHeiPlayerBet::player_chairid() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPlayerBet.player_chairid)
  return player_chairid_;
}
inline void SC_HongHeiPlayerBet::set_player_chairid(::google::protobuf::int32 value) {
  set_has_player_chairid();
  player_chairid_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiPlayerBet.player_chairid)
}

// optional int32 playerbet = 4;
inline bool SC_HongHeiPlayerBet::has_playerbet() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_HongHeiPlayerBet::set_has_playerbet() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_HongHeiPlayerBet::clear_has_playerbet() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_HongHeiPlayerBet::clear_playerbet() {
  playerbet_ = 0;
  clear_has_playerbet();
}
inline ::google::protobuf::int32 SC_HongHeiPlayerBet::playerbet() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPlayerBet.playerbet)
  return playerbet_;
}
inline void SC_HongHeiPlayerBet::set_playerbet(::google::protobuf::int32 value) {
  set_has_playerbet();
  playerbet_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiPlayerBet.playerbet)
}

// optional int32 playerbettype = 5;
inline bool SC_HongHeiPlayerBet::has_playerbettype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_HongHeiPlayerBet::set_has_playerbettype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_HongHeiPlayerBet::clear_has_playerbettype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_HongHeiPlayerBet::clear_playerbettype() {
  playerbettype_ = 0;
  clear_has_playerbettype();
}
inline ::google::protobuf::int32 SC_HongHeiPlayerBet::playerbettype() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPlayerBet.playerbettype)
  return playerbettype_;
}
inline void SC_HongHeiPlayerBet::set_playerbettype(::google::protobuf::int32 value) {
  set_has_playerbettype();
  playerbettype_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiPlayerBet.playerbettype)
}

// -------------------------------------------------------------------

// SC_HongHeiAllBet

// repeated int32 allbets = 1;
inline int SC_HongHeiAllBet::allbets_size() const {
  return allbets_.size();
}
inline void SC_HongHeiAllBet::clear_allbets() {
  allbets_.Clear();
}
inline ::google::protobuf::int32 SC_HongHeiAllBet::allbets(int index) const {
  // @@protoc_insertion_point(field_get:SC_HongHeiAllBet.allbets)
  return allbets_.Get(index);
}
inline void SC_HongHeiAllBet::set_allbets(int index, ::google::protobuf::int32 value) {
  allbets_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_HongHeiAllBet.allbets)
}
inline void SC_HongHeiAllBet::add_allbets(::google::protobuf::int32 value) {
  allbets_.Add(value);
  // @@protoc_insertion_point(field_add:SC_HongHeiAllBet.allbets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_HongHeiAllBet::allbets() const {
  // @@protoc_insertion_point(field_list:SC_HongHeiAllBet.allbets)
  return allbets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_HongHeiAllBet::mutable_allbets() {
  // @@protoc_insertion_point(field_mutable_list:SC_HongHeiAllBet.allbets)
  return &allbets_;
}

// -------------------------------------------------------------------

// SC_HongHeiPostCard

// optional int32 result_waittime = 1;
inline bool SC_HongHeiPostCard::has_result_waittime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_HongHeiPostCard::set_has_result_waittime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_HongHeiPostCard::clear_has_result_waittime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_HongHeiPostCard::clear_result_waittime() {
  result_waittime_ = 0;
  clear_has_result_waittime();
}
inline ::google::protobuf::int32 SC_HongHeiPostCard::result_waittime() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPostCard.result_waittime)
  return result_waittime_;
}
inline void SC_HongHeiPostCard::set_result_waittime(::google::protobuf::int32 value) {
  set_has_result_waittime();
  result_waittime_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiPostCard.result_waittime)
}

// optional .SC_HongHeiCard pb_card = 2;
inline bool SC_HongHeiPostCard::has_pb_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_HongHeiPostCard::set_has_pb_card() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_HongHeiPostCard::clear_has_pb_card() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_HongHeiPostCard::clear_pb_card() {
  if (pb_card_ != NULL) pb_card_->::SC_HongHeiCard::Clear();
  clear_has_pb_card();
}
inline const ::SC_HongHeiCard& SC_HongHeiPostCard::pb_card() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPostCard.pb_card)
  return pb_card_ != NULL ? *pb_card_
                         : *::SC_HongHeiCard::internal_default_instance();
}
inline ::SC_HongHeiCard* SC_HongHeiPostCard::mutable_pb_card() {
  set_has_pb_card();
  if (pb_card_ == NULL) {
    pb_card_ = new ::SC_HongHeiCard;
  }
  // @@protoc_insertion_point(field_mutable:SC_HongHeiPostCard.pb_card)
  return pb_card_;
}
inline ::SC_HongHeiCard* SC_HongHeiPostCard::release_pb_card() {
  // @@protoc_insertion_point(field_release:SC_HongHeiPostCard.pb_card)
  clear_has_pb_card();
  ::SC_HongHeiCard* temp = pb_card_;
  pb_card_ = NULL;
  return temp;
}
inline void SC_HongHeiPostCard::set_allocated_pb_card(::SC_HongHeiCard* pb_card) {
  delete pb_card_;
  pb_card_ = pb_card;
  if (pb_card) {
    set_has_pb_card();
  } else {
    clear_has_pb_card();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_HongHeiPostCard.pb_card)
}

// optional int32 table_status = 3;
inline bool SC_HongHeiPostCard::has_table_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_HongHeiPostCard::set_has_table_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_HongHeiPostCard::clear_has_table_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_HongHeiPostCard::clear_table_status() {
  table_status_ = 0;
  clear_has_table_status();
}
inline ::google::protobuf::int32 SC_HongHeiPostCard::table_status() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPostCard.table_status)
  return table_status_;
}
inline void SC_HongHeiPostCard::set_table_status(::google::protobuf::int32 value) {
  set_has_table_status();
  table_status_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiPostCard.table_status)
}

// -------------------------------------------------------------------

// SC_HongHeiPostResult

// optional int32 next_waittime = 1;
inline bool SC_HongHeiPostResult::has_next_waittime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_HongHeiPostResult::set_has_next_waittime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_HongHeiPostResult::clear_has_next_waittime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_HongHeiPostResult::clear_next_waittime() {
  next_waittime_ = 0;
  clear_has_next_waittime();
}
inline ::google::protobuf::int32 SC_HongHeiPostResult::next_waittime() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPostResult.next_waittime)
  return next_waittime_;
}
inline void SC_HongHeiPostResult::set_next_waittime(::google::protobuf::int32 value) {
  set_has_next_waittime();
  next_waittime_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiPostResult.next_waittime)
}

// optional int32 chair = 2;
inline bool SC_HongHeiPostResult::has_chair() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_HongHeiPostResult::set_has_chair() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_HongHeiPostResult::clear_has_chair() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_HongHeiPostResult::clear_chair() {
  chair_ = 0;
  clear_has_chair();
}
inline ::google::protobuf::int32 SC_HongHeiPostResult::chair() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPostResult.chair)
  return chair_;
}
inline void SC_HongHeiPostResult::set_chair(::google::protobuf::int32 value) {
  set_has_chair();
  chair_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiPostResult.chair)
}

// optional int64 money = 3;
inline bool SC_HongHeiPostResult::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_HongHeiPostResult::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_HongHeiPostResult::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_HongHeiPostResult::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SC_HongHeiPostResult::money() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPostResult.money)
  return money_;
}
inline void SC_HongHeiPostResult::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiPostResult.money)
}

// optional int64 tax = 4;
inline bool SC_HongHeiPostResult::has_tax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_HongHeiPostResult::set_has_tax() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_HongHeiPostResult::clear_has_tax() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_HongHeiPostResult::clear_tax() {
  tax_ = GOOGLE_LONGLONG(0);
  clear_has_tax();
}
inline ::google::protobuf::int64 SC_HongHeiPostResult::tax() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPostResult.tax)
  return tax_;
}
inline void SC_HongHeiPostResult::set_tax(::google::protobuf::int64 value) {
  set_has_tax();
  tax_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiPostResult.tax)
}

// optional int32 victory = 5;
inline bool SC_HongHeiPostResult::has_victory() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SC_HongHeiPostResult::set_has_victory() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SC_HongHeiPostResult::clear_has_victory() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SC_HongHeiPostResult::clear_victory() {
  victory_ = 0;
  clear_has_victory();
}
inline ::google::protobuf::int32 SC_HongHeiPostResult::victory() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPostResult.victory)
  return victory_;
}
inline void SC_HongHeiPostResult::set_victory(::google::protobuf::int32 value) {
  set_has_victory();
  victory_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiPostResult.victory)
}

// optional int32 table_status = 6;
inline bool SC_HongHeiPostResult::has_table_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SC_HongHeiPostResult::set_has_table_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SC_HongHeiPostResult::clear_has_table_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SC_HongHeiPostResult::clear_table_status() {
  table_status_ = 0;
  clear_has_table_status();
}
inline ::google::protobuf::int32 SC_HongHeiPostResult::table_status() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPostResult.table_status)
  return table_status_;
}
inline void SC_HongHeiPostResult::set_table_status(::google::protobuf::int32 value) {
  set_has_table_status();
  table_status_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiPostResult.table_status)
}

// optional int32 win_area = 7;
inline bool SC_HongHeiPostResult::has_win_area() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SC_HongHeiPostResult::set_has_win_area() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SC_HongHeiPostResult::clear_has_win_area() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SC_HongHeiPostResult::clear_win_area() {
  win_area_ = 0;
  clear_has_win_area();
}
inline ::google::protobuf::int32 SC_HongHeiPostResult::win_area() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPostResult.win_area)
  return win_area_;
}
inline void SC_HongHeiPostResult::set_win_area(::google::protobuf::int32 value) {
  set_has_win_area();
  win_area_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiPostResult.win_area)
}

// optional int64 win_type = 8;
inline bool SC_HongHeiPostResult::has_win_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SC_HongHeiPostResult::set_has_win_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SC_HongHeiPostResult::clear_has_win_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SC_HongHeiPostResult::clear_win_type() {
  win_type_ = GOOGLE_LONGLONG(0);
  clear_has_win_type();
}
inline ::google::protobuf::int64 SC_HongHeiPostResult::win_type() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPostResult.win_type)
  return win_type_;
}
inline void SC_HongHeiPostResult::set_win_type(::google::protobuf::int64 value) {
  set_has_win_type();
  win_type_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiPostResult.win_type)
}

// -------------------------------------------------------------------

// Player_bet_info

// repeated int64 bet_money = 1;
inline int Player_bet_info::bet_money_size() const {
  return bet_money_.size();
}
inline void Player_bet_info::clear_bet_money() {
  bet_money_.Clear();
}
inline ::google::protobuf::int64 Player_bet_info::bet_money(int index) const {
  // @@protoc_insertion_point(field_get:Player_bet_info.bet_money)
  return bet_money_.Get(index);
}
inline void Player_bet_info::set_bet_money(int index, ::google::protobuf::int64 value) {
  bet_money_.Set(index, value);
  // @@protoc_insertion_point(field_set:Player_bet_info.bet_money)
}
inline void Player_bet_info::add_bet_money(::google::protobuf::int64 value) {
  bet_money_.Add(value);
  // @@protoc_insertion_point(field_add:Player_bet_info.bet_money)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Player_bet_info::bet_money() const {
  // @@protoc_insertion_point(field_list:Player_bet_info.bet_money)
  return bet_money_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Player_bet_info::mutable_bet_money() {
  // @@protoc_insertion_point(field_mutable_list:Player_bet_info.bet_money)
  return &bet_money_;
}

// optional int32 chair = 2;
inline bool Player_bet_info::has_chair() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player_bet_info::set_has_chair() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player_bet_info::clear_has_chair() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player_bet_info::clear_chair() {
  chair_ = 0;
  clear_has_chair();
}
inline ::google::protobuf::int32 Player_bet_info::chair() const {
  // @@protoc_insertion_point(field_get:Player_bet_info.chair)
  return chair_;
}
inline void Player_bet_info::set_chair(::google::protobuf::int32 value) {
  set_has_chair();
  chair_ = value;
  // @@protoc_insertion_point(field_set:Player_bet_info.chair)
}

// -------------------------------------------------------------------

// SC_HongHeiReConnect

// repeated int32 playerbets = 1;
inline int SC_HongHeiReConnect::playerbets_size() const {
  return playerbets_.size();
}
inline void SC_HongHeiReConnect::clear_playerbets() {
  playerbets_.Clear();
}
inline ::google::protobuf::int32 SC_HongHeiReConnect::playerbets(int index) const {
  // @@protoc_insertion_point(field_get:SC_HongHeiReConnect.playerbets)
  return playerbets_.Get(index);
}
inline void SC_HongHeiReConnect::set_playerbets(int index, ::google::protobuf::int32 value) {
  playerbets_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_HongHeiReConnect.playerbets)
}
inline void SC_HongHeiReConnect::add_playerbets(::google::protobuf::int32 value) {
  playerbets_.Add(value);
  // @@protoc_insertion_point(field_add:SC_HongHeiReConnect.playerbets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_HongHeiReConnect::playerbets() const {
  // @@protoc_insertion_point(field_list:SC_HongHeiReConnect.playerbets)
  return playerbets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_HongHeiReConnect::mutable_playerbets() {
  // @@protoc_insertion_point(field_mutable_list:SC_HongHeiReConnect.playerbets)
  return &playerbets_;
}

// repeated int32 allbets = 2;
inline int SC_HongHeiReConnect::allbets_size() const {
  return allbets_.size();
}
inline void SC_HongHeiReConnect::clear_allbets() {
  allbets_.Clear();
}
inline ::google::protobuf::int32 SC_HongHeiReConnect::allbets(int index) const {
  // @@protoc_insertion_point(field_get:SC_HongHeiReConnect.allbets)
  return allbets_.Get(index);
}
inline void SC_HongHeiReConnect::set_allbets(int index, ::google::protobuf::int32 value) {
  allbets_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_HongHeiReConnect.allbets)
}
inline void SC_HongHeiReConnect::add_allbets(::google::protobuf::int32 value) {
  allbets_.Add(value);
  // @@protoc_insertion_point(field_add:SC_HongHeiReConnect.allbets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_HongHeiReConnect::allbets() const {
  // @@protoc_insertion_point(field_list:SC_HongHeiReConnect.allbets)
  return allbets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_HongHeiReConnect::mutable_allbets() {
  // @@protoc_insertion_point(field_mutable_list:SC_HongHeiReConnect.allbets)
  return &allbets_;
}

// optional int32 player_bet = 3;
inline bool SC_HongHeiReConnect::has_player_bet() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_HongHeiReConnect::set_has_player_bet() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_HongHeiReConnect::clear_has_player_bet() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_HongHeiReConnect::clear_player_bet() {
  player_bet_ = 0;
  clear_has_player_bet();
}
inline ::google::protobuf::int32 SC_HongHeiReConnect::player_bet() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiReConnect.player_bet)
  return player_bet_;
}
inline void SC_HongHeiReConnect::set_player_bet(::google::protobuf::int32 value) {
  set_has_player_bet();
  player_bet_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiReConnect.player_bet)
}

// optional .SC_HongHeiCard pb_card = 4;
inline bool SC_HongHeiReConnect::has_pb_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_HongHeiReConnect::set_has_pb_card() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_HongHeiReConnect::clear_has_pb_card() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_HongHeiReConnect::clear_pb_card() {
  if (pb_card_ != NULL) pb_card_->::SC_HongHeiCard::Clear();
  clear_has_pb_card();
}
inline const ::SC_HongHeiCard& SC_HongHeiReConnect::pb_card() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiReConnect.pb_card)
  return pb_card_ != NULL ? *pb_card_
                         : *::SC_HongHeiCard::internal_default_instance();
}
inline ::SC_HongHeiCard* SC_HongHeiReConnect::mutable_pb_card() {
  set_has_pb_card();
  if (pb_card_ == NULL) {
    pb_card_ = new ::SC_HongHeiCard;
  }
  // @@protoc_insertion_point(field_mutable:SC_HongHeiReConnect.pb_card)
  return pb_card_;
}
inline ::SC_HongHeiCard* SC_HongHeiReConnect::release_pb_card() {
  // @@protoc_insertion_point(field_release:SC_HongHeiReConnect.pb_card)
  clear_has_pb_card();
  ::SC_HongHeiCard* temp = pb_card_;
  pb_card_ = NULL;
  return temp;
}
inline void SC_HongHeiReConnect::set_allocated_pb_card(::SC_HongHeiCard* pb_card) {
  delete pb_card_;
  pb_card_ = pb_card;
  if (pb_card) {
    set_has_pb_card();
  } else {
    clear_has_pb_card();
  }
  // @@protoc_insertion_point(field_set_allocated:SC_HongHeiReConnect.pb_card)
}

// optional int32 table_status = 5;
inline bool SC_HongHeiReConnect::has_table_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_HongHeiReConnect::set_has_table_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_HongHeiReConnect::clear_has_table_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_HongHeiReConnect::clear_table_status() {
  table_status_ = 0;
  clear_has_table_status();
}
inline ::google::protobuf::int32 SC_HongHeiReConnect::table_status() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiReConnect.table_status)
  return table_status_;
}
inline void SC_HongHeiReConnect::set_table_status(::google::protobuf::int32 value) {
  set_has_table_status();
  table_status_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiReConnect.table_status)
}

// optional int32 table_waittime = 6;
inline bool SC_HongHeiReConnect::has_table_waittime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_HongHeiReConnect::set_has_table_waittime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_HongHeiReConnect::clear_has_table_waittime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_HongHeiReConnect::clear_table_waittime() {
  table_waittime_ = 0;
  clear_has_table_waittime();
}
inline ::google::protobuf::int32 SC_HongHeiReConnect::table_waittime() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiReConnect.table_waittime)
  return table_waittime_;
}
inline void SC_HongHeiReConnect::set_table_waittime(::google::protobuf::int32 value) {
  set_has_table_waittime();
  table_waittime_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiReConnect.table_waittime)
}

// repeated .Player_bet_info pb_player_bet_info = 7;
inline int SC_HongHeiReConnect::pb_player_bet_info_size() const {
  return pb_player_bet_info_.size();
}
inline void SC_HongHeiReConnect::clear_pb_player_bet_info() {
  pb_player_bet_info_.Clear();
}
inline const ::Player_bet_info& SC_HongHeiReConnect::pb_player_bet_info(int index) const {
  // @@protoc_insertion_point(field_get:SC_HongHeiReConnect.pb_player_bet_info)
  return pb_player_bet_info_.Get(index);
}
inline ::Player_bet_info* SC_HongHeiReConnect::mutable_pb_player_bet_info(int index) {
  // @@protoc_insertion_point(field_mutable:SC_HongHeiReConnect.pb_player_bet_info)
  return pb_player_bet_info_.Mutable(index);
}
inline ::Player_bet_info* SC_HongHeiReConnect::add_pb_player_bet_info() {
  // @@protoc_insertion_point(field_add:SC_HongHeiReConnect.pb_player_bet_info)
  return pb_player_bet_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Player_bet_info >*
SC_HongHeiReConnect::mutable_pb_player_bet_info() {
  // @@protoc_insertion_point(field_mutable_list:SC_HongHeiReConnect.pb_player_bet_info)
  return &pb_player_bet_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Player_bet_info >&
SC_HongHeiReConnect::pb_player_bet_info() const {
  // @@protoc_insertion_point(field_list:SC_HongHeiReConnect.pb_player_bet_info)
  return pb_player_bet_info_;
}

// -------------------------------------------------------------------

// SC_HongHeiRest

// optional int32 rest_waittime = 1;
inline bool SC_HongHeiRest::has_rest_waittime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_HongHeiRest::set_has_rest_waittime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_HongHeiRest::clear_has_rest_waittime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_HongHeiRest::clear_rest_waittime() {
  rest_waittime_ = 0;
  clear_has_rest_waittime();
}
inline ::google::protobuf::int32 SC_HongHeiRest::rest_waittime() const {
  // @@protoc_insertion_point(field_get:SC_HongHeiRest.rest_waittime)
  return rest_waittime_;
}
inline void SC_HongHeiRest::set_rest_waittime(::google::protobuf::int32 value) {
  set_has_rest_waittime();
  rest_waittime_ = value;
  // @@protoc_insertion_point(field_set:SC_HongHeiRest.rest_waittime)
}

// -------------------------------------------------------------------

// SC_HongHeiPlayerList

// repeated .SC_HongHeiOnlinePlayer pb_onlinelist = 1;
inline int SC_HongHeiPlayerList::pb_onlinelist_size() const {
  return pb_onlinelist_.size();
}
inline void SC_HongHeiPlayerList::clear_pb_onlinelist() {
  pb_onlinelist_.Clear();
}
inline const ::SC_HongHeiOnlinePlayer& SC_HongHeiPlayerList::pb_onlinelist(int index) const {
  // @@protoc_insertion_point(field_get:SC_HongHeiPlayerList.pb_onlinelist)
  return pb_onlinelist_.Get(index);
}
inline ::SC_HongHeiOnlinePlayer* SC_HongHeiPlayerList::mutable_pb_onlinelist(int index) {
  // @@protoc_insertion_point(field_mutable:SC_HongHeiPlayerList.pb_onlinelist)
  return pb_onlinelist_.Mutable(index);
}
inline ::SC_HongHeiOnlinePlayer* SC_HongHeiPlayerList::add_pb_onlinelist() {
  // @@protoc_insertion_point(field_add:SC_HongHeiPlayerList.pb_onlinelist)
  return pb_onlinelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SC_HongHeiOnlinePlayer >*
SC_HongHeiPlayerList::mutable_pb_onlinelist() {
  // @@protoc_insertion_point(field_mutable_list:SC_HongHeiPlayerList.pb_onlinelist)
  return &pb_onlinelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SC_HongHeiOnlinePlayer >&
SC_HongHeiPlayerList::pb_onlinelist() const {
  // @@protoc_insertion_point(field_list:SC_HongHeiPlayerList.pb_onlinelist)
  return pb_onlinelist_;
}

// -------------------------------------------------------------------

// SC_HongHeiGameRecord

// repeated .SC_HongHeiRecord pb_record = 1;
inline int SC_HongHeiGameRecord::pb_record_size() const {
  return pb_record_.size();
}
inline void SC_HongHeiGameRecord::clear_pb_record() {
  pb_record_.Clear();
}
inline const ::SC_HongHeiRecord& SC_HongHeiGameRecord::pb_record(int index) const {
  // @@protoc_insertion_point(field_get:SC_HongHeiGameRecord.pb_record)
  return pb_record_.Get(index);
}
inline ::SC_HongHeiRecord* SC_HongHeiGameRecord::mutable_pb_record(int index) {
  // @@protoc_insertion_point(field_mutable:SC_HongHeiGameRecord.pb_record)
  return pb_record_.Mutable(index);
}
inline ::SC_HongHeiRecord* SC_HongHeiGameRecord::add_pb_record() {
  // @@protoc_insertion_point(field_add:SC_HongHeiGameRecord.pb_record)
  return pb_record_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SC_HongHeiRecord >*
SC_HongHeiGameRecord::mutable_pb_record() {
  // @@protoc_insertion_point(field_mutable_list:SC_HongHeiGameRecord.pb_record)
  return &pb_record_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SC_HongHeiRecord >&
SC_HongHeiGameRecord::pb_record() const {
  // @@protoc_insertion_point(field_list:SC_HongHeiGameRecord.pb_record)
  return pb_record_;
}

// -------------------------------------------------------------------

// CS_HongHeiBetStandard

// -------------------------------------------------------------------

// SC_HongHeiBetStandard

// repeated int32 playerbets = 1;
inline int SC_HongHeiBetStandard::playerbets_size() const {
  return playerbets_.size();
}
inline void SC_HongHeiBetStandard::clear_playerbets() {
  playerbets_.Clear();
}
inline ::google::protobuf::int32 SC_HongHeiBetStandard::playerbets(int index) const {
  // @@protoc_insertion_point(field_get:SC_HongHeiBetStandard.playerbets)
  return playerbets_.Get(index);
}
inline void SC_HongHeiBetStandard::set_playerbets(int index, ::google::protobuf::int32 value) {
  playerbets_.Set(index, value);
  // @@protoc_insertion_point(field_set:SC_HongHeiBetStandard.playerbets)
}
inline void SC_HongHeiBetStandard::add_playerbets(::google::protobuf::int32 value) {
  playerbets_.Add(value);
  // @@protoc_insertion_point(field_add:SC_HongHeiBetStandard.playerbets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SC_HongHeiBetStandard::playerbets() const {
  // @@protoc_insertion_point(field_list:SC_HongHeiBetStandard.playerbets)
  return playerbets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SC_HongHeiBetStandard::mutable_playerbets() {
  // @@protoc_insertion_point(field_mutable_list:SC_HongHeiBetStandard.playerbets)
  return &playerbets_;
}

// -------------------------------------------------------------------

// SC_HongHeiRichList

// repeated .SC_HongHeiRichPlayer pb_richlist = 1;
inline int SC_HongHeiRichList::pb_richlist_size() const {
  return pb_richlist_.size();
}
inline void SC_HongHeiRichList::clear_pb_richlist() {
  pb_richlist_.Clear();
}
inline const ::SC_HongHeiRichPlayer& SC_HongHeiRichList::pb_richlist(int index) const {
  // @@protoc_insertion_point(field_get:SC_HongHeiRichList.pb_richlist)
  return pb_richlist_.Get(index);
}
inline ::SC_HongHeiRichPlayer* SC_HongHeiRichList::mutable_pb_richlist(int index) {
  // @@protoc_insertion_point(field_mutable:SC_HongHeiRichList.pb_richlist)
  return pb_richlist_.Mutable(index);
}
inline ::SC_HongHeiRichPlayer* SC_HongHeiRichList::add_pb_richlist() {
  // @@protoc_insertion_point(field_add:SC_HongHeiRichList.pb_richlist)
  return pb_richlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SC_HongHeiRichPlayer >*
SC_HongHeiRichList::mutable_pb_richlist() {
  // @@protoc_insertion_point(field_mutable_list:SC_HongHeiRichList.pb_richlist)
  return &pb_richlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SC_HongHeiRichPlayer >&
SC_HongHeiRichList::pb_richlist() const {
  // @@protoc_insertion_point(field_list:SC_HongHeiRichList.pb_richlist)
  return pb_richlist_;
}

// -------------------------------------------------------------------

// CS_HongHeiGetState

// -------------------------------------------------------------------

// SC_HongHeiGetState

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::SC_HongHeiStart_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_HongHeiStart_MsgID>() {
  return ::SC_HongHeiStart_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_HongHeiPlayerBet_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_HongHeiPlayerBet_MsgID>() {
  return ::CS_HongHeiPlayerBet_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_HongHeiPlayerBet_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_HongHeiPlayerBet_MsgID>() {
  return ::SC_HongHeiPlayerBet_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_HongHeiAllBet_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_HongHeiAllBet_MsgID>() {
  return ::SC_HongHeiAllBet_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_HongHeiPostCard_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_HongHeiPostCard_MsgID>() {
  return ::SC_HongHeiPostCard_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_HongHeiPostResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_HongHeiPostResult_MsgID>() {
  return ::SC_HongHeiPostResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_HongHeiReConnect_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_HongHeiReConnect_MsgID>() {
  return ::SC_HongHeiReConnect_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_HongHeiRest_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_HongHeiRest_MsgID>() {
  return ::SC_HongHeiRest_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_HongHeiPlayerList_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_HongHeiPlayerList_MsgID>() {
  return ::SC_HongHeiPlayerList_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_HongHeiGameRecord_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_HongHeiGameRecord_MsgID>() {
  return ::SC_HongHeiGameRecord_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_HongHeiBetStandard_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_HongHeiBetStandard_MsgID>() {
  return ::CS_HongHeiBetStandard_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_HongHeiBetStandard_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_HongHeiBetStandard_MsgID>() {
  return ::SC_HongHeiBetStandard_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_HongHeiRichList_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_HongHeiRichList_MsgID>() {
  return ::SC_HongHeiRichList_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_HongHeiGetState_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_HongHeiGetState_MsgID>() {
  return ::CS_HongHeiGetState_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SC_HongHeiGetState_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_HongHeiGetState_MsgID>() {
  return ::SC_HongHeiGetState_MsgID_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_public_5fhhdz_2eproto__INCLUDED
