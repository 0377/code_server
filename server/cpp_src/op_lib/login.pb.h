// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#ifndef PROTOBUF_login_2eproto__INCLUDED
#define PROTOBUF_login_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class GuestAccount;
class GuestAccountDefaultTypeInternal;
extern GuestAccountDefaultTypeInternal _GuestAccount_default_instance_;
class VerifyAccount;
class VerifyAccountDefaultTypeInternal;
extern VerifyAccountDefaultTypeInternal _VerifyAccount_default_instance_;
class VerifyAccountResult;
class VerifyAccountResultDefaultTypeInternal;
extern VerifyAccountResultDefaultTypeInternal _VerifyAccountResult_default_instance_;

namespace protobuf_login_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_login_2eproto

// ===================================================================

class VerifyAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VerifyAccount) */ {
 public:
  VerifyAccount();
  virtual ~VerifyAccount();

  VerifyAccount(const VerifyAccount& from);

  inline VerifyAccount& operator=(const VerifyAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyAccount& default_instance();

  static inline const VerifyAccount* internal_default_instance() {
    return reinterpret_cast<const VerifyAccount*>(
               &_VerifyAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(VerifyAccount* other);

  // implements Message ----------------------------------------------

  inline VerifyAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  VerifyAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VerifyAccount& from);
  void MergeFrom(const VerifyAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VerifyAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:VerifyAccount)
 private:
  void set_has_account();
  void clear_has_account();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend struct protobuf_login_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VerifyAccountResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VerifyAccountResult) */ {
 public:
  VerifyAccountResult();
  virtual ~VerifyAccountResult();

  VerifyAccountResult(const VerifyAccountResult& from);

  inline VerifyAccountResult& operator=(const VerifyAccountResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyAccountResult& default_instance();

  static inline const VerifyAccountResult* internal_default_instance() {
    return reinterpret_cast<const VerifyAccountResult*>(
               &_VerifyAccountResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(VerifyAccountResult* other);

  // implements Message ----------------------------------------------

  inline VerifyAccountResult* New() const PROTOBUF_FINAL { return New(NULL); }

  VerifyAccountResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VerifyAccountResult& from);
  void MergeFrom(const VerifyAccountResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VerifyAccountResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 8;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 8;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string password = 10;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 10;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string alipay_account = 11;
  bool has_alipay_account() const;
  void clear_alipay_account();
  static const int kAlipayAccountFieldNumber = 11;
  const ::std::string& alipay_account() const;
  void set_alipay_account(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account(::std::string&& value);
  #endif
  void set_alipay_account(const char* value);
  void set_alipay_account(const char* value, size_t size);
  ::std::string* mutable_alipay_account();
  ::std::string* release_alipay_account();
  void set_allocated_alipay_account(::std::string* alipay_account);

  // optional string alipay_name = 12;
  bool has_alipay_name() const;
  void clear_alipay_name();
  static const int kAlipayNameFieldNumber = 12;
  const ::std::string& alipay_name() const;
  void set_alipay_name(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name(::std::string&& value);
  #endif
  void set_alipay_name(const char* value);
  void set_alipay_name(const char* value, size_t size);
  ::std::string* mutable_alipay_name();
  ::std::string* release_alipay_name();
  void set_allocated_alipay_name(::std::string* alipay_name);

  // optional string channel_id = 15;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 15;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // optional string invite_code = 18;
  bool has_invite_code() const;
  void clear_invite_code();
  static const int kInviteCodeFieldNumber = 18;
  const ::std::string& invite_code() const;
  void set_invite_code(const ::std::string& value);
  #if LANG_CXX11
  void set_invite_code(::std::string&& value);
  #endif
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  ::std::string* mutable_invite_code();
  ::std::string* release_invite_code();
  void set_allocated_invite_code(::std::string* invite_code);

  // optional int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 guid = 3;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 no_bank_password = 4;
  bool has_no_bank_password() const;
  void clear_no_bank_password();
  static const int kNoBankPasswordFieldNumber = 4;
  ::google::protobuf::int32 no_bank_password() const;
  void set_no_bank_password(::google::protobuf::int32 value);

  // optional int32 vip = 5;
  bool has_vip() const;
  void clear_vip();
  static const int kVipFieldNumber = 5;
  ::google::protobuf::int32 vip() const;
  void set_vip(::google::protobuf::int32 value);

  // optional int32 login_time = 6;
  bool has_login_time() const;
  void clear_login_time();
  static const int kLoginTimeFieldNumber = 6;
  ::google::protobuf::int32 login_time() const;
  void set_login_time(::google::protobuf::int32 value);

  // optional int32 logout_time = 7;
  bool has_logout_time() const;
  void clear_logout_time();
  static const int kLogoutTimeFieldNumber = 7;
  ::google::protobuf::int32 logout_time() const;
  void set_logout_time(::google::protobuf::int32 value);

  // optional int32 is_guest = 9;
  bool has_is_guest() const;
  void clear_is_guest();
  static const int kIsGuestFieldNumber = 9;
  ::google::protobuf::int32 is_guest() const;
  void set_is_guest(::google::protobuf::int32 value);

  // optional int32 change_alipay_num = 13;
  bool has_change_alipay_num() const;
  void clear_change_alipay_num();
  static const int kChangeAlipayNumFieldNumber = 13;
  ::google::protobuf::int32 change_alipay_num() const;
  void set_change_alipay_num(::google::protobuf::int32 value);

  // optional int32 risk = 14;
  bool has_risk() const;
  void clear_risk();
  static const int kRiskFieldNumber = 14;
  ::google::protobuf::int32 risk() const;
  void set_risk(::google::protobuf::int32 value);

  // optional bool enable_transfer = 16;
  bool has_enable_transfer() const;
  void clear_enable_transfer();
  static const int kEnableTransferFieldNumber = 16;
  bool enable_transfer() const;
  void set_enable_transfer(bool value);

  // optional int32 inviter_guid = 17 [default = 0];
  bool has_inviter_guid() const;
  void clear_inviter_guid();
  static const int kInviterGuidFieldNumber = 17;
  ::google::protobuf::int32 inviter_guid() const;
  void set_inviter_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:VerifyAccountResult)
 private:
  void set_has_ret();
  void clear_has_ret();
  void set_has_guid();
  void clear_has_guid();
  void set_has_no_bank_password();
  void clear_has_no_bank_password();
  void set_has_vip();
  void clear_has_vip();
  void set_has_login_time();
  void clear_has_login_time();
  void set_has_logout_time();
  void clear_has_logout_time();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_is_guest();
  void clear_has_is_guest();
  void set_has_password();
  void clear_has_password();
  void set_has_alipay_account();
  void clear_has_alipay_account();
  void set_has_alipay_name();
  void clear_has_alipay_name();
  void set_has_change_alipay_num();
  void clear_has_change_alipay_num();
  void set_has_risk();
  void clear_has_risk();
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_enable_transfer();
  void clear_has_enable_transfer();
  void set_has_inviter_guid();
  void clear_has_inviter_guid();
  void set_has_invite_code();
  void clear_has_invite_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::internal::ArenaStringPtr invite_code_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 no_bank_password_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 login_time_;
  ::google::protobuf::int32 logout_time_;
  ::google::protobuf::int32 is_guest_;
  ::google::protobuf::int32 change_alipay_num_;
  ::google::protobuf::int32 risk_;
  bool enable_transfer_;
  ::google::protobuf::int32 inviter_guid_;
  friend struct protobuf_login_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuestAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuestAccount) */ {
 public:
  GuestAccount();
  virtual ~GuestAccount();

  GuestAccount(const GuestAccount& from);

  inline GuestAccount& operator=(const GuestAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuestAccount& default_instance();

  static inline const GuestAccount* internal_default_instance() {
    return reinterpret_cast<const GuestAccount*>(
               &_GuestAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GuestAccount* other);

  // implements Message ----------------------------------------------

  inline GuestAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  GuestAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuestAccount& from);
  void MergeFrom(const GuestAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuestAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 3;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 3;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string nickname = 8;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 8;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string password = 10;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 10;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string alipay_account = 11;
  bool has_alipay_account() const;
  void clear_alipay_account();
  static const int kAlipayAccountFieldNumber = 11;
  const ::std::string& alipay_account() const;
  void set_alipay_account(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account(::std::string&& value);
  #endif
  void set_alipay_account(const char* value);
  void set_alipay_account(const char* value, size_t size);
  ::std::string* mutable_alipay_account();
  ::std::string* release_alipay_account();
  void set_allocated_alipay_account(::std::string* alipay_account);

  // optional string alipay_name = 12;
  bool has_alipay_name() const;
  void clear_alipay_name();
  static const int kAlipayNameFieldNumber = 12;
  const ::std::string& alipay_name() const;
  void set_alipay_name(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name(::std::string&& value);
  #endif
  void set_alipay_name(const char* value);
  void set_alipay_name(const char* value, size_t size);
  ::std::string* mutable_alipay_name();
  ::std::string* release_alipay_name();
  void set_allocated_alipay_name(::std::string* alipay_name);

  // optional string channel_id = 15;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 15;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // optional int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 no_bank_password = 4;
  bool has_no_bank_password() const;
  void clear_no_bank_password();
  static const int kNoBankPasswordFieldNumber = 4;
  ::google::protobuf::int32 no_bank_password() const;
  void set_no_bank_password(::google::protobuf::int32 value);

  // optional int32 vip = 5;
  bool has_vip() const;
  void clear_vip();
  static const int kVipFieldNumber = 5;
  ::google::protobuf::int32 vip() const;
  void set_vip(::google::protobuf::int32 value);

  // optional int32 login_time = 6;
  bool has_login_time() const;
  void clear_login_time();
  static const int kLoginTimeFieldNumber = 6;
  ::google::protobuf::int32 login_time() const;
  void set_login_time(::google::protobuf::int32 value);

  // optional int32 logout_time = 7;
  bool has_logout_time() const;
  void clear_logout_time();
  static const int kLogoutTimeFieldNumber = 7;
  ::google::protobuf::int32 logout_time() const;
  void set_logout_time(::google::protobuf::int32 value);

  // optional int32 is_guest = 9;
  bool has_is_guest() const;
  void clear_is_guest();
  static const int kIsGuestFieldNumber = 9;
  ::google::protobuf::int32 is_guest() const;
  void set_is_guest(::google::protobuf::int32 value);

  // optional int32 change_alipay_num = 13;
  bool has_change_alipay_num() const;
  void clear_change_alipay_num();
  static const int kChangeAlipayNumFieldNumber = 13;
  ::google::protobuf::int32 change_alipay_num() const;
  void set_change_alipay_num(::google::protobuf::int32 value);

  // optional int32 risk = 14;
  bool has_risk() const;
  void clear_risk();
  static const int kRiskFieldNumber = 14;
  ::google::protobuf::int32 risk() const;
  void set_risk(::google::protobuf::int32 value);

  // optional bool enable_transfer = 16;
  bool has_enable_transfer() const;
  void clear_enable_transfer();
  static const int kEnableTransferFieldNumber = 16;
  bool enable_transfer() const;
  void set_enable_transfer(bool value);

  // optional int32 is_first = 17 [default = 2];
  bool has_is_first() const;
  void clear_is_first();
  static const int kIsFirstFieldNumber = 17;
  ::google::protobuf::int32 is_first() const;
  void set_is_first(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuestAccount)
 private:
  void set_has_ret();
  void clear_has_ret();
  void set_has_guid();
  void clear_has_guid();
  void set_has_account();
  void clear_has_account();
  void set_has_no_bank_password();
  void clear_has_no_bank_password();
  void set_has_vip();
  void clear_has_vip();
  void set_has_login_time();
  void clear_has_login_time();
  void set_has_logout_time();
  void clear_has_logout_time();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_is_guest();
  void clear_has_is_guest();
  void set_has_password();
  void clear_has_password();
  void set_has_alipay_account();
  void clear_has_alipay_account();
  void set_has_alipay_name();
  void clear_has_alipay_name();
  void set_has_change_alipay_num();
  void clear_has_change_alipay_num();
  void set_has_risk();
  void clear_has_risk();
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_enable_transfer();
  void clear_has_enable_transfer();
  void set_has_is_first();
  void clear_has_is_first();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 no_bank_password_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 login_time_;
  ::google::protobuf::int32 logout_time_;
  ::google::protobuf::int32 is_guest_;
  ::google::protobuf::int32 change_alipay_num_;
  ::google::protobuf::int32 risk_;
  bool enable_transfer_;
  ::google::protobuf::int32 is_first_;
  friend struct protobuf_login_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyAccount

// optional string account = 1;
inline bool VerifyAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& VerifyAccount::account() const {
  // @@protoc_insertion_point(field_get:VerifyAccount.account)
  return account_.GetNoArena();
}
inline void VerifyAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccount.account)
}
#if LANG_CXX11
inline void VerifyAccount::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccount.account)
}
#endif
inline void VerifyAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccount.account)
}
inline void VerifyAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccount.account)
}
inline ::std::string* VerifyAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:VerifyAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyAccount::release_account() {
  // @@protoc_insertion_point(field_release:VerifyAccount.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccount.account)
}

// optional string password = 2;
inline bool VerifyAccount::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyAccount::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyAccount::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& VerifyAccount::password() const {
  // @@protoc_insertion_point(field_get:VerifyAccount.password)
  return password_.GetNoArena();
}
inline void VerifyAccount::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccount.password)
}
#if LANG_CXX11
inline void VerifyAccount::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccount.password)
}
#endif
inline void VerifyAccount::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccount.password)
}
inline void VerifyAccount::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccount.password)
}
inline ::std::string* VerifyAccount::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:VerifyAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyAccount::release_password() {
  // @@protoc_insertion_point(field_release:VerifyAccount.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccount.password)
}

// -------------------------------------------------------------------

// VerifyAccountResult

// optional int32 ret = 1;
inline bool VerifyAccountResult::has_ret() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VerifyAccountResult::set_has_ret() {
  _has_bits_[0] |= 0x00000040u;
}
inline void VerifyAccountResult::clear_has_ret() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void VerifyAccountResult::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 VerifyAccountResult::ret() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.ret)
  return ret_;
}
inline void VerifyAccountResult::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.ret)
}

// optional int32 guid = 3;
inline bool VerifyAccountResult::has_guid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void VerifyAccountResult::set_has_guid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void VerifyAccountResult::clear_has_guid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void VerifyAccountResult::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 VerifyAccountResult::guid() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.guid)
  return guid_;
}
inline void VerifyAccountResult::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.guid)
}

// optional int32 no_bank_password = 4;
inline bool VerifyAccountResult::has_no_bank_password() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void VerifyAccountResult::set_has_no_bank_password() {
  _has_bits_[0] |= 0x00000100u;
}
inline void VerifyAccountResult::clear_has_no_bank_password() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void VerifyAccountResult::clear_no_bank_password() {
  no_bank_password_ = 0;
  clear_has_no_bank_password();
}
inline ::google::protobuf::int32 VerifyAccountResult::no_bank_password() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.no_bank_password)
  return no_bank_password_;
}
inline void VerifyAccountResult::set_no_bank_password(::google::protobuf::int32 value) {
  set_has_no_bank_password();
  no_bank_password_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.no_bank_password)
}

// optional int32 vip = 5;
inline bool VerifyAccountResult::has_vip() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void VerifyAccountResult::set_has_vip() {
  _has_bits_[0] |= 0x00000200u;
}
inline void VerifyAccountResult::clear_has_vip() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void VerifyAccountResult::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 VerifyAccountResult::vip() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.vip)
  return vip_;
}
inline void VerifyAccountResult::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.vip)
}

// optional int32 login_time = 6;
inline bool VerifyAccountResult::has_login_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void VerifyAccountResult::set_has_login_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void VerifyAccountResult::clear_has_login_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void VerifyAccountResult::clear_login_time() {
  login_time_ = 0;
  clear_has_login_time();
}
inline ::google::protobuf::int32 VerifyAccountResult::login_time() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.login_time)
  return login_time_;
}
inline void VerifyAccountResult::set_login_time(::google::protobuf::int32 value) {
  set_has_login_time();
  login_time_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.login_time)
}

// optional int32 logout_time = 7;
inline bool VerifyAccountResult::has_logout_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void VerifyAccountResult::set_has_logout_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void VerifyAccountResult::clear_has_logout_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void VerifyAccountResult::clear_logout_time() {
  logout_time_ = 0;
  clear_has_logout_time();
}
inline ::google::protobuf::int32 VerifyAccountResult::logout_time() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.logout_time)
  return logout_time_;
}
inline void VerifyAccountResult::set_logout_time(::google::protobuf::int32 value) {
  set_has_logout_time();
  logout_time_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.logout_time)
}

// optional string nickname = 8;
inline bool VerifyAccountResult::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyAccountResult::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyAccountResult::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyAccountResult::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& VerifyAccountResult::nickname() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.nickname)
  return nickname_.GetNoArena();
}
inline void VerifyAccountResult::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccountResult.nickname)
}
#if LANG_CXX11
inline void VerifyAccountResult::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccountResult.nickname)
}
#endif
inline void VerifyAccountResult::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccountResult.nickname)
}
inline void VerifyAccountResult::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccountResult.nickname)
}
inline ::std::string* VerifyAccountResult::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:VerifyAccountResult.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyAccountResult::release_nickname() {
  // @@protoc_insertion_point(field_release:VerifyAccountResult.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyAccountResult::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccountResult.nickname)
}

// optional int32 is_guest = 9;
inline bool VerifyAccountResult::has_is_guest() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void VerifyAccountResult::set_has_is_guest() {
  _has_bits_[0] |= 0x00001000u;
}
inline void VerifyAccountResult::clear_has_is_guest() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void VerifyAccountResult::clear_is_guest() {
  is_guest_ = 0;
  clear_has_is_guest();
}
inline ::google::protobuf::int32 VerifyAccountResult::is_guest() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.is_guest)
  return is_guest_;
}
inline void VerifyAccountResult::set_is_guest(::google::protobuf::int32 value) {
  set_has_is_guest();
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.is_guest)
}

// optional string password = 10;
inline bool VerifyAccountResult::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyAccountResult::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyAccountResult::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyAccountResult::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& VerifyAccountResult::password() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.password)
  return password_.GetNoArena();
}
inline void VerifyAccountResult::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccountResult.password)
}
#if LANG_CXX11
inline void VerifyAccountResult::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccountResult.password)
}
#endif
inline void VerifyAccountResult::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccountResult.password)
}
inline void VerifyAccountResult::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccountResult.password)
}
inline ::std::string* VerifyAccountResult::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:VerifyAccountResult.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyAccountResult::release_password() {
  // @@protoc_insertion_point(field_release:VerifyAccountResult.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyAccountResult::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccountResult.password)
}

// optional string alipay_account = 11;
inline bool VerifyAccountResult::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VerifyAccountResult::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VerifyAccountResult::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VerifyAccountResult::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
inline const ::std::string& VerifyAccountResult::alipay_account() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.alipay_account)
  return alipay_account_.GetNoArena();
}
inline void VerifyAccountResult::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccountResult.alipay_account)
}
#if LANG_CXX11
inline void VerifyAccountResult::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccountResult.alipay_account)
}
#endif
inline void VerifyAccountResult::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccountResult.alipay_account)
}
inline void VerifyAccountResult::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccountResult.alipay_account)
}
inline ::std::string* VerifyAccountResult::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:VerifyAccountResult.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyAccountResult::release_alipay_account() {
  // @@protoc_insertion_point(field_release:VerifyAccountResult.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyAccountResult::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccountResult.alipay_account)
}

// optional string alipay_name = 12;
inline bool VerifyAccountResult::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VerifyAccountResult::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VerifyAccountResult::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VerifyAccountResult::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
inline const ::std::string& VerifyAccountResult::alipay_name() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.alipay_name)
  return alipay_name_.GetNoArena();
}
inline void VerifyAccountResult::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccountResult.alipay_name)
}
#if LANG_CXX11
inline void VerifyAccountResult::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccountResult.alipay_name)
}
#endif
inline void VerifyAccountResult::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccountResult.alipay_name)
}
inline void VerifyAccountResult::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccountResult.alipay_name)
}
inline ::std::string* VerifyAccountResult::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:VerifyAccountResult.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyAccountResult::release_alipay_name() {
  // @@protoc_insertion_point(field_release:VerifyAccountResult.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyAccountResult::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccountResult.alipay_name)
}

// optional int32 change_alipay_num = 13;
inline bool VerifyAccountResult::has_change_alipay_num() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void VerifyAccountResult::set_has_change_alipay_num() {
  _has_bits_[0] |= 0x00002000u;
}
inline void VerifyAccountResult::clear_has_change_alipay_num() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void VerifyAccountResult::clear_change_alipay_num() {
  change_alipay_num_ = 0;
  clear_has_change_alipay_num();
}
inline ::google::protobuf::int32 VerifyAccountResult::change_alipay_num() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.change_alipay_num)
  return change_alipay_num_;
}
inline void VerifyAccountResult::set_change_alipay_num(::google::protobuf::int32 value) {
  set_has_change_alipay_num();
  change_alipay_num_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.change_alipay_num)
}

// optional int32 risk = 14;
inline bool VerifyAccountResult::has_risk() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void VerifyAccountResult::set_has_risk() {
  _has_bits_[0] |= 0x00004000u;
}
inline void VerifyAccountResult::clear_has_risk() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void VerifyAccountResult::clear_risk() {
  risk_ = 0;
  clear_has_risk();
}
inline ::google::protobuf::int32 VerifyAccountResult::risk() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.risk)
  return risk_;
}
inline void VerifyAccountResult::set_risk(::google::protobuf::int32 value) {
  set_has_risk();
  risk_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.risk)
}

// optional string channel_id = 15;
inline bool VerifyAccountResult::has_channel_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VerifyAccountResult::set_has_channel_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VerifyAccountResult::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VerifyAccountResult::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& VerifyAccountResult::channel_id() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.channel_id)
  return channel_id_.GetNoArena();
}
inline void VerifyAccountResult::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccountResult.channel_id)
}
#if LANG_CXX11
inline void VerifyAccountResult::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccountResult.channel_id)
}
#endif
inline void VerifyAccountResult::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccountResult.channel_id)
}
inline void VerifyAccountResult::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccountResult.channel_id)
}
inline ::std::string* VerifyAccountResult::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:VerifyAccountResult.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyAccountResult::release_channel_id() {
  // @@protoc_insertion_point(field_release:VerifyAccountResult.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyAccountResult::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccountResult.channel_id)
}

// optional bool enable_transfer = 16;
inline bool VerifyAccountResult::has_enable_transfer() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void VerifyAccountResult::set_has_enable_transfer() {
  _has_bits_[0] |= 0x00008000u;
}
inline void VerifyAccountResult::clear_has_enable_transfer() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void VerifyAccountResult::clear_enable_transfer() {
  enable_transfer_ = false;
  clear_has_enable_transfer();
}
inline bool VerifyAccountResult::enable_transfer() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.enable_transfer)
  return enable_transfer_;
}
inline void VerifyAccountResult::set_enable_transfer(bool value) {
  set_has_enable_transfer();
  enable_transfer_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.enable_transfer)
}

// optional int32 inviter_guid = 17 [default = 0];
inline bool VerifyAccountResult::has_inviter_guid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void VerifyAccountResult::set_has_inviter_guid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void VerifyAccountResult::clear_has_inviter_guid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void VerifyAccountResult::clear_inviter_guid() {
  inviter_guid_ = 0;
  clear_has_inviter_guid();
}
inline ::google::protobuf::int32 VerifyAccountResult::inviter_guid() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.inviter_guid)
  return inviter_guid_;
}
inline void VerifyAccountResult::set_inviter_guid(::google::protobuf::int32 value) {
  set_has_inviter_guid();
  inviter_guid_ = value;
  // @@protoc_insertion_point(field_set:VerifyAccountResult.inviter_guid)
}

// optional string invite_code = 18;
inline bool VerifyAccountResult::has_invite_code() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VerifyAccountResult::set_has_invite_code() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VerifyAccountResult::clear_has_invite_code() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VerifyAccountResult::clear_invite_code() {
  invite_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invite_code();
}
inline const ::std::string& VerifyAccountResult::invite_code() const {
  // @@protoc_insertion_point(field_get:VerifyAccountResult.invite_code)
  return invite_code_.GetNoArena();
}
inline void VerifyAccountResult::set_invite_code(const ::std::string& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VerifyAccountResult.invite_code)
}
#if LANG_CXX11
inline void VerifyAccountResult::set_invite_code(::std::string&& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VerifyAccountResult.invite_code)
}
#endif
inline void VerifyAccountResult::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VerifyAccountResult.invite_code)
}
inline void VerifyAccountResult::set_invite_code(const char* value, size_t size) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VerifyAccountResult.invite_code)
}
inline ::std::string* VerifyAccountResult::mutable_invite_code() {
  set_has_invite_code();
  // @@protoc_insertion_point(field_mutable:VerifyAccountResult.invite_code)
  return invite_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyAccountResult::release_invite_code() {
  // @@protoc_insertion_point(field_release:VerifyAccountResult.invite_code)
  clear_has_invite_code();
  return invite_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyAccountResult::set_allocated_invite_code(::std::string* invite_code) {
  if (invite_code != NULL) {
    set_has_invite_code();
  } else {
    clear_has_invite_code();
  }
  invite_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invite_code);
  // @@protoc_insertion_point(field_set_allocated:VerifyAccountResult.invite_code)
}

// -------------------------------------------------------------------

// GuestAccount

// optional int32 ret = 1;
inline bool GuestAccount::has_ret() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuestAccount::set_has_ret() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuestAccount::clear_has_ret() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuestAccount::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 GuestAccount::ret() const {
  // @@protoc_insertion_point(field_get:GuestAccount.ret)
  return ret_;
}
inline void GuestAccount::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.ret)
}

// optional int32 guid = 2;
inline bool GuestAccount::has_guid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuestAccount::set_has_guid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuestAccount::clear_has_guid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuestAccount::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 GuestAccount::guid() const {
  // @@protoc_insertion_point(field_get:GuestAccount.guid)
  return guid_;
}
inline void GuestAccount::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.guid)
}

// optional string account = 3;
inline bool GuestAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuestAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuestAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuestAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& GuestAccount::account() const {
  // @@protoc_insertion_point(field_get:GuestAccount.account)
  return account_.GetNoArena();
}
inline void GuestAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestAccount.account)
}
#if LANG_CXX11
inline void GuestAccount::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestAccount.account)
}
#endif
inline void GuestAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestAccount.account)
}
inline void GuestAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestAccount.account)
}
inline ::std::string* GuestAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:GuestAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuestAccount::release_account() {
  // @@protoc_insertion_point(field_release:GuestAccount.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuestAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:GuestAccount.account)
}

// optional int32 no_bank_password = 4;
inline bool GuestAccount::has_no_bank_password() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuestAccount::set_has_no_bank_password() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuestAccount::clear_has_no_bank_password() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuestAccount::clear_no_bank_password() {
  no_bank_password_ = 0;
  clear_has_no_bank_password();
}
inline ::google::protobuf::int32 GuestAccount::no_bank_password() const {
  // @@protoc_insertion_point(field_get:GuestAccount.no_bank_password)
  return no_bank_password_;
}
inline void GuestAccount::set_no_bank_password(::google::protobuf::int32 value) {
  set_has_no_bank_password();
  no_bank_password_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.no_bank_password)
}

// optional int32 vip = 5;
inline bool GuestAccount::has_vip() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuestAccount::set_has_vip() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuestAccount::clear_has_vip() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuestAccount::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 GuestAccount::vip() const {
  // @@protoc_insertion_point(field_get:GuestAccount.vip)
  return vip_;
}
inline void GuestAccount::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.vip)
}

// optional int32 login_time = 6;
inline bool GuestAccount::has_login_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuestAccount::set_has_login_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuestAccount::clear_has_login_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuestAccount::clear_login_time() {
  login_time_ = 0;
  clear_has_login_time();
}
inline ::google::protobuf::int32 GuestAccount::login_time() const {
  // @@protoc_insertion_point(field_get:GuestAccount.login_time)
  return login_time_;
}
inline void GuestAccount::set_login_time(::google::protobuf::int32 value) {
  set_has_login_time();
  login_time_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.login_time)
}

// optional int32 logout_time = 7;
inline bool GuestAccount::has_logout_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuestAccount::set_has_logout_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuestAccount::clear_has_logout_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuestAccount::clear_logout_time() {
  logout_time_ = 0;
  clear_has_logout_time();
}
inline ::google::protobuf::int32 GuestAccount::logout_time() const {
  // @@protoc_insertion_point(field_get:GuestAccount.logout_time)
  return logout_time_;
}
inline void GuestAccount::set_logout_time(::google::protobuf::int32 value) {
  set_has_logout_time();
  logout_time_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.logout_time)
}

// optional string nickname = 8;
inline bool GuestAccount::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuestAccount::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuestAccount::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuestAccount::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& GuestAccount::nickname() const {
  // @@protoc_insertion_point(field_get:GuestAccount.nickname)
  return nickname_.GetNoArena();
}
inline void GuestAccount::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestAccount.nickname)
}
#if LANG_CXX11
inline void GuestAccount::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestAccount.nickname)
}
#endif
inline void GuestAccount::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestAccount.nickname)
}
inline void GuestAccount::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestAccount.nickname)
}
inline ::std::string* GuestAccount::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:GuestAccount.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuestAccount::release_nickname() {
  // @@protoc_insertion_point(field_release:GuestAccount.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuestAccount::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:GuestAccount.nickname)
}

// optional int32 is_guest = 9;
inline bool GuestAccount::has_is_guest() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GuestAccount::set_has_is_guest() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GuestAccount::clear_has_is_guest() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GuestAccount::clear_is_guest() {
  is_guest_ = 0;
  clear_has_is_guest();
}
inline ::google::protobuf::int32 GuestAccount::is_guest() const {
  // @@protoc_insertion_point(field_get:GuestAccount.is_guest)
  return is_guest_;
}
inline void GuestAccount::set_is_guest(::google::protobuf::int32 value) {
  set_has_is_guest();
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.is_guest)
}

// optional string password = 10;
inline bool GuestAccount::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuestAccount::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuestAccount::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuestAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& GuestAccount::password() const {
  // @@protoc_insertion_point(field_get:GuestAccount.password)
  return password_.GetNoArena();
}
inline void GuestAccount::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestAccount.password)
}
#if LANG_CXX11
inline void GuestAccount::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestAccount.password)
}
#endif
inline void GuestAccount::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestAccount.password)
}
inline void GuestAccount::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestAccount.password)
}
inline ::std::string* GuestAccount::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:GuestAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuestAccount::release_password() {
  // @@protoc_insertion_point(field_release:GuestAccount.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuestAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:GuestAccount.password)
}

// optional string alipay_account = 11;
inline bool GuestAccount::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuestAccount::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuestAccount::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuestAccount::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
inline const ::std::string& GuestAccount::alipay_account() const {
  // @@protoc_insertion_point(field_get:GuestAccount.alipay_account)
  return alipay_account_.GetNoArena();
}
inline void GuestAccount::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestAccount.alipay_account)
}
#if LANG_CXX11
inline void GuestAccount::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestAccount.alipay_account)
}
#endif
inline void GuestAccount::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestAccount.alipay_account)
}
inline void GuestAccount::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestAccount.alipay_account)
}
inline ::std::string* GuestAccount::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:GuestAccount.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuestAccount::release_alipay_account() {
  // @@protoc_insertion_point(field_release:GuestAccount.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuestAccount::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:GuestAccount.alipay_account)
}

// optional string alipay_name = 12;
inline bool GuestAccount::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuestAccount::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuestAccount::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuestAccount::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
inline const ::std::string& GuestAccount::alipay_name() const {
  // @@protoc_insertion_point(field_get:GuestAccount.alipay_name)
  return alipay_name_.GetNoArena();
}
inline void GuestAccount::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestAccount.alipay_name)
}
#if LANG_CXX11
inline void GuestAccount::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestAccount.alipay_name)
}
#endif
inline void GuestAccount::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestAccount.alipay_name)
}
inline void GuestAccount::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestAccount.alipay_name)
}
inline ::std::string* GuestAccount::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:GuestAccount.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuestAccount::release_alipay_name() {
  // @@protoc_insertion_point(field_release:GuestAccount.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuestAccount::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:GuestAccount.alipay_name)
}

// optional int32 change_alipay_num = 13;
inline bool GuestAccount::has_change_alipay_num() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GuestAccount::set_has_change_alipay_num() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GuestAccount::clear_has_change_alipay_num() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GuestAccount::clear_change_alipay_num() {
  change_alipay_num_ = 0;
  clear_has_change_alipay_num();
}
inline ::google::protobuf::int32 GuestAccount::change_alipay_num() const {
  // @@protoc_insertion_point(field_get:GuestAccount.change_alipay_num)
  return change_alipay_num_;
}
inline void GuestAccount::set_change_alipay_num(::google::protobuf::int32 value) {
  set_has_change_alipay_num();
  change_alipay_num_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.change_alipay_num)
}

// optional int32 risk = 14;
inline bool GuestAccount::has_risk() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GuestAccount::set_has_risk() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GuestAccount::clear_has_risk() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GuestAccount::clear_risk() {
  risk_ = 0;
  clear_has_risk();
}
inline ::google::protobuf::int32 GuestAccount::risk() const {
  // @@protoc_insertion_point(field_get:GuestAccount.risk)
  return risk_;
}
inline void GuestAccount::set_risk(::google::protobuf::int32 value) {
  set_has_risk();
  risk_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.risk)
}

// optional string channel_id = 15;
inline bool GuestAccount::has_channel_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuestAccount::set_has_channel_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuestAccount::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuestAccount::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& GuestAccount::channel_id() const {
  // @@protoc_insertion_point(field_get:GuestAccount.channel_id)
  return channel_id_.GetNoArena();
}
inline void GuestAccount::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestAccount.channel_id)
}
#if LANG_CXX11
inline void GuestAccount::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestAccount.channel_id)
}
#endif
inline void GuestAccount::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestAccount.channel_id)
}
inline void GuestAccount::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestAccount.channel_id)
}
inline ::std::string* GuestAccount::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:GuestAccount.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuestAccount::release_channel_id() {
  // @@protoc_insertion_point(field_release:GuestAccount.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuestAccount::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:GuestAccount.channel_id)
}

// optional bool enable_transfer = 16;
inline bool GuestAccount::has_enable_transfer() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GuestAccount::set_has_enable_transfer() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GuestAccount::clear_has_enable_transfer() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GuestAccount::clear_enable_transfer() {
  enable_transfer_ = false;
  clear_has_enable_transfer();
}
inline bool GuestAccount::enable_transfer() const {
  // @@protoc_insertion_point(field_get:GuestAccount.enable_transfer)
  return enable_transfer_;
}
inline void GuestAccount::set_enable_transfer(bool value) {
  set_has_enable_transfer();
  enable_transfer_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.enable_transfer)
}

// optional int32 is_first = 17 [default = 2];
inline bool GuestAccount::has_is_first() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GuestAccount::set_has_is_first() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GuestAccount::clear_has_is_first() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GuestAccount::clear_is_first() {
  is_first_ = 2;
  clear_has_is_first();
}
inline ::google::protobuf::int32 GuestAccount::is_first() const {
  // @@protoc_insertion_point(field_get:GuestAccount.is_first)
  return is_first_;
}
inline void GuestAccount::set_is_first(::google::protobuf::int32 value) {
  set_has_is_first();
  is_first_ = value;
  // @@protoc_insertion_point(field_set:GuestAccount.is_first)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_login_2eproto__INCLUDED
