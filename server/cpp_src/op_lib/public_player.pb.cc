// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: public_player.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "public_player.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class GameClientRoomListCfgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GameClientRoomListCfg> {
} _GameClientRoomListCfg_default_instance_;
class PlayerBaseInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PlayerBaseInfo> {
} _PlayerBaseInfo_default_instance_;
class PlayerVisualInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PlayerVisualInfo> {
} _PlayerVisualInfo_default_instance_;
class ItemInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ItemInfo> {
} _ItemInfo_default_instance_;
class Msg_DataInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Msg_DataInfo> {
} _Msg_DataInfo_default_instance_;
class ItemBagInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ItemBagInfo> {
} _ItemBagInfo_default_instance_;
class MailInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MailInfo> {
} _MailInfo_default_instance_;
class MailListInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MailListInfo> {
} _MailListInfo_default_instance_;
class BankStatementDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BankStatement> {
} _BankStatement_default_instance_;
class RankItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RankItem> {
} _RankItem_default_instance_;
class RankListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RankList> {
} _RankList_default_instance_;
class AndroidInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AndroidInfo> {
} _AndroidInfo_default_instance_;
class CashFalseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CashFalse> {
} _CashFalse_default_instance_;
class CashMoneyTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CashMoneyType> {
} _CashMoneyType_default_instance_;
class PlayerMoneyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PlayerMoney> {
} _PlayerMoney_default_instance_;
class RechargeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Recharge> {
} _Recharge_default_instance_;
class MarqueeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Marquee> {
} _Marquee_default_instance_;
class AgentsTransferDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AgentsTransferData> {
} _AgentsTransferData_default_instance_;
class BankCardInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BankCardInfo> {
} _BankCardInfo_default_instance_;
class PlayerInfoInMemeryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PlayerInfoInMemery> {
} _PlayerInfoInMemery_default_instance_;

namespace protobuf_public_5fplayer_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[20];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameClientRoomListCfg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameClientRoomListCfg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameClientRoomListCfg, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameClientRoomListCfg, second_game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameClientRoomListCfg, first_game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameClientRoomListCfg, game_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameClientRoomListCfg, table_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameClientRoomListCfg, money_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameClientRoomListCfg, cell_money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameClientRoomListCfg, tax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameClientRoomListCfg, room_lua_cfg_),
  2,
  3,
  4,
  0,
  5,
  6,
  7,
  8,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBaseInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBaseInfo, bank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBaseInfo, login_award_day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBaseInfo, login_award_receive_day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBaseInfo, online_award_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBaseInfo, online_award_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBaseInfo, relief_payment_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBaseInfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBaseInfo, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBaseInfo, header_icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBaseInfo, slotma_addition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBaseInfo, newplayer_reward_),
  0,
  1,
  2,
  3,
  4,
  5,
  10,
  7,
  6,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerVisualInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerVisualInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerVisualInfo, chair_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerVisualInfo, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerVisualInfo, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerVisualInfo, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerVisualInfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerVisualInfo, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerVisualInfo, header_icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerVisualInfo, ip_area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerVisualInfo, is_ready_),
  3,
  4,
  0,
  1,
  7,
  5,
  8,
  2,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemInfo, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemInfo, item_num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DataInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DataInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DataInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DataInfo, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DataInfo, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DataInfo, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DataInfo, is_read_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_DataInfo, content_),
  1,
  2,
  3,
  4,
  5,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemBagInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemBagInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemBagInfo, pb_items_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailInfo, mail_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailInfo, expiration_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailInfo, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailInfo, send_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailInfo, send_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailInfo, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailInfo, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailInfo, pb_attachment_),
  0,
  4,
  5,
  6,
  1,
  2,
  3,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailListInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailListInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailListInfo, pb_mails_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankStatement, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankStatement, serial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankStatement, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankStatement, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankStatement, opt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankStatement, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankStatement, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankStatement, bank_balance_),
  1,
  2,
  3,
  6,
  0,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankItem, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankItem, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankItem, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankItem, money_),
  1,
  2,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankList, pb_rank_list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AndroidInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AndroidInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AndroidInfo, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AndroidInfo, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AndroidInfo, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AndroidInfo, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AndroidInfo, money_),
  2,
  0,
  1,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashFalse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashFalse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashFalse, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashFalse, order_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashFalse, coins_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashFalse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashFalse, status_c_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashMoneyType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashMoneyType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashMoneyType, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashMoneyType, created_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CashMoneyType, status_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMoney, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMoney, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMoney, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMoney, bank_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Recharge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Recharge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Recharge, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Recharge, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Recharge, exchange_gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Recharge, pay_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Recharge, server_status_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Marquee, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Marquee, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Marquee, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Marquee, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Marquee, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Marquee, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Marquee, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Marquee, interval_time_),
  1,
  2,
  3,
  0,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentsTransferData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentsTransferData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentsTransferData, agentsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentsTransferData, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentsTransferData, transfer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentsTransferData, transfer_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentsTransferData, transfer_money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentsTransferData, retid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentsTransferData, recode_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankCardInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankCardInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankCardInfo, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankCardInfo, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankCardInfo, card_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankCardInfo, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankCardInfo, bank_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankCardInfo, bank_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BankCardInfo, bank_code_),
  6,
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfoInMemery, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfoInMemery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfoInMemery, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfoInMemery, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfoInMemery, bank_),
  0,
  1,
  2,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 14, sizeof(GameClientRoomListCfg)},
  { 23, 39, sizeof(PlayerBaseInfo)},
  { 50, 64, sizeof(PlayerVisualInfo)},
  { 73, 80, sizeof(ItemInfo)},
  { 82, 93, sizeof(Msg_DataInfo)},
  { 99, 105, sizeof(ItemBagInfo)},
  { 106, 119, sizeof(MailInfo)},
  { 127, 133, sizeof(MailListInfo)},
  { 134, 146, sizeof(BankStatement)},
  { 153, 162, sizeof(RankItem)},
  { 166, 172, sizeof(RankList)},
  { 173, 183, sizeof(AndroidInfo)},
  { 188, 198, sizeof(CashFalse)},
  { 203, 211, sizeof(CashMoneyType)},
  { 214, 221, sizeof(PlayerMoney)},
  { 223, 233, sizeof(Recharge)},
  { 238, 249, sizeof(Marquee)},
  { 255, 267, sizeof(AgentsTransferData)},
  { 274, 286, sizeof(BankCardInfo)},
  { 293, 301, sizeof(PlayerInfoInMemery)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameClientRoomListCfg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerVisualInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Msg_DataInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ItemBagInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MailInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MailListInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BankStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RankItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RankList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AndroidInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CashFalse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CashMoneyType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerMoney_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Recharge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Marquee_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AgentsTransferData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BankCardInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerInfoInMemery_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "public_player.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

}  // namespace

void TableStruct::Shutdown() {
  _GameClientRoomListCfg_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _PlayerBaseInfo_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _PlayerVisualInfo_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ItemInfo_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Msg_DataInfo_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _ItemBagInfo_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _MailInfo_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _MailListInfo_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _BankStatement_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _RankItem_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _RankList_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _AndroidInfo_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _CashFalse_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _CashMoneyType_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _PlayerMoney_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _Recharge_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _Marquee_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _AgentsTransferData_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _BankCardInfo_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _PlayerInfoInMemery_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _GameClientRoomListCfg_default_instance_.DefaultConstruct();
  _PlayerBaseInfo_default_instance_.DefaultConstruct();
  _PlayerVisualInfo_default_instance_.DefaultConstruct();
  _ItemInfo_default_instance_.DefaultConstruct();
  _Msg_DataInfo_default_instance_.DefaultConstruct();
  _ItemBagInfo_default_instance_.DefaultConstruct();
  _MailInfo_default_instance_.DefaultConstruct();
  _MailListInfo_default_instance_.DefaultConstruct();
  _BankStatement_default_instance_.DefaultConstruct();
  _RankItem_default_instance_.DefaultConstruct();
  _RankList_default_instance_.DefaultConstruct();
  _AndroidInfo_default_instance_.DefaultConstruct();
  _CashFalse_default_instance_.DefaultConstruct();
  _CashMoneyType_default_instance_.DefaultConstruct();
  _PlayerMoney_default_instance_.DefaultConstruct();
  _Recharge_default_instance_.DefaultConstruct();
  _Marquee_default_instance_.DefaultConstruct();
  _AgentsTransferData_default_instance_.DefaultConstruct();
  _BankCardInfo_default_instance_.DefaultConstruct();
  _PlayerInfoInMemery_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\023public_player.proto\"\317\001\n\025GameClientRoom"
      "ListCfg\022\017\n\007game_id\030\001 \001(\005\022\030\n\020second_game_"
      "type\030\002 \001(\005\022\027\n\017first_game_type\030\003 \001(\005\022\021\n\tg"
      "ame_name\030\004 \001(\t\022\023\n\013table_count\030\005 \001(\005\022\023\n\013m"
      "oney_limit\030\006 \001(\005\022\022\n\ncell_money\030\007 \001(\005\022\013\n\003"
      "tax\030\010 \001(\005\022\024\n\014room_lua_cfg\030\t \001(\t\"\243\002\n\016Play"
      "erBaseInfo\022\017\n\004bank\030\001 \001(\003:\0010\022\027\n\017login_awa"
      "rd_day\030\002 \001(\005\022\037\n\027login_award_receive_day\030"
      "\003 \001(\005\022\031\n\021online_award_time\030\004 \001(\005\022\030\n\020onli"
      "ne_award_num\030\005 \001(\005\022\034\n\024relief_payment_cou"
      "nt\030\006 \001(\005\022\020\n\005level\030\007 \001(\005:\0011\022\020\n\005money\030\010 \001("
      "\003:\0010\022\026\n\013header_icon\030\t \001(\005:\0010\022\032\n\017slotma_a"
      "ddition\030\n \001(\005:\0010\022\033\n\020newplayer_reward\030\013 \001"
      "(\005:\0010\"\265\001\n\020PlayerVisualInfo\022\020\n\010chair_id\030\001"
      " \001(\005\022\014\n\004guid\030\002 \001(\005\022\017\n\007account\030\003 \001(\t\022\020\n\010n"
      "ickname\030\004 \001(\t\022\020\n\005level\030\005 \001(\005:\0011\022\020\n\005money"
      "\030\006 \001(\003:\0010\022\027\n\013header_icon\030\007 \001(\005:\002-1\022\017\n\007ip"
      "_area\030\010 \001(\t\022\020\n\010is_ready\030\t \001(\010\"-\n\010ItemInf"
      "o\022\017\n\007item_id\030\001 \001(\005\022\020\n\010item_num\030\002 \001(\005\"t\n\014"
      "Msg_DataInfo\022\n\n\002id\030\001 \001(\005\022\022\n\nstart_time\030\002"
      " \001(\005\022\020\n\010end_time\030\003 \001(\005\022\020\n\010msg_type\030\004 \001(\005"
      "\022\017\n\007is_read\030\005 \001(\005\022\017\n\007content\030\006 \001(\t\"*\n\013It"
      "emBagInfo\022\033\n\010pb_items\030\001 \003(\0132\t.ItemInfo\"\252"
      "\001\n\010MailInfo\022\017\n\007mail_id\030\001 \001(\t\022\027\n\017expirati"
      "on_time\030\002 \001(\005\022\014\n\004guid\030\003 \001(\005\022\021\n\tsend_guid"
      "\030\004 \001(\005\022\021\n\tsend_name\030\005 \001(\t\022\r\n\005title\030\006 \001(\t"
      "\022\017\n\007content\030\007 \001(\t\022 \n\rpb_attachment\030\010 \003(\013"
      "2\t.ItemInfo\"+\n\014MailListInfo\022\033\n\010pb_mails\030"
      "\001 \003(\0132\t.MailInfo\"}\n\rBankStatement\022\016\n\006ser"
      "ial\030\001 \001(\003\022\014\n\004guid\030\002 \001(\005\022\014\n\004time\030\003 \001(\005\022\013\n"
      "\003opt\030\004 \001(\005\022\016\n\006target\030\005 \001(\t\022\r\n\005money\030\006 \001("
      "\003\022\024\n\014bank_balance\030\007 \001(\003\"G\n\010RankItem\022\014\n\004r"
      "ank\030\001 \001(\005\022\014\n\004guid\030\002 \001(\005\022\020\n\010nickname\030\003 \001("
      "\t\022\r\n\005money\030\004 \001(\003\"+\n\010RankList\022\037\n\014pb_rank_"
      "list\030\001 \003(\0132\t.RankItem\"^\n\013AndroidInfo\022\014\n\004"
      "guid\030\001 \001(\005\022\017\n\007account\030\002 \001(\t\022\020\n\010nickname\030"
      "\003 \001(\t\022\017\n\007game_id\030\004 \001(\005\022\r\n\005money\030\005 \001(\003\"\\\n"
      "\tCashFalse\022\014\n\004guid\030\001 \001(\005\022\020\n\010order_id\030\002 \001"
      "(\005\022\r\n\005coins\030\003 \001(\003\022\016\n\006status\030\004 \001(\005\022\020\n\010sta"
      "tus_c\030\005 \001(\005\"B\n\rCashMoneyType\022\r\n\005money\030\001 "
      "\001(\005\022\022\n\ncreated_at\030\002 \001(\t\022\016\n\006status\030\003 \001(\005\""
      "*\n\013PlayerMoney\022\r\n\005money\030\001 \001(\003\022\014\n\004bank\030\002 "
      "\001(\003\"f\n\010Recharge\022\014\n\004guid\030\001 \001(\005\022\n\n\002id\030\002 \001("
      "\005\022\025\n\rexchange_gold\030\003 \001(\003\022\022\n\npay_status\030\004"
      " \001(\005\022\025\n\rserver_status\030\005 \001(\005\"s\n\007Marquee\022\n"
      "\n\002id\030\001 \001(\005\022\022\n\nstart_time\030\002 \001(\005\022\020\n\010end_ti"
      "me\030\003 \001(\005\022\017\n\007content\030\004 \001(\t\022\016\n\006number\030\005 \001("
      "\005\022\025\n\rinterval_time\030\006 \001(\005\"\233\001\n\022AgentsTrans"
      "ferData\022\020\n\010AgentsID\030\001 \001(\005\022\020\n\010PlayerID\030\002 "
      "\001(\005\022\023\n\013transfer_id\030\003 \001(\005\022\025\n\rtransfer_typ"
      "e\030\004 \001(\005\022\026\n\016transfer_money\030\005 \001(\005\022\r\n\005retID"
      "\030\006 \001(\005\022\016\n\006reCode\030\007 \001(\005\"\213\001\n\014BankCardInfo\022"
      "\014\n\004guid\030\001 \001(\005\022\017\n\007account\030\002 \001(\t\022\020\n\010card_n"
      "um\030\003 \001(\t\022\021\n\tuser_name\030\004 \001(\t\022\021\n\tbank_name"
      "\030\005 \001(\t\022\021\n\tbank_addr\030\006 \001(\t\022\021\n\tbank_code\030\007"
      " \001(\t\"\?\n\022PlayerInfoInMemery\022\014\n\004guid\030\001 \001(\005"
      "\022\r\n\005money\030\002 \001(\005\022\014\n\004bank\030\003 \001(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2269);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "public_player.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_public_5fplayer_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameClientRoomListCfg::kGameIdFieldNumber;
const int GameClientRoomListCfg::kSecondGameTypeFieldNumber;
const int GameClientRoomListCfg::kFirstGameTypeFieldNumber;
const int GameClientRoomListCfg::kGameNameFieldNumber;
const int GameClientRoomListCfg::kTableCountFieldNumber;
const int GameClientRoomListCfg::kMoneyLimitFieldNumber;
const int GameClientRoomListCfg::kCellMoneyFieldNumber;
const int GameClientRoomListCfg::kTaxFieldNumber;
const int GameClientRoomListCfg::kRoomLuaCfgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameClientRoomListCfg::GameClientRoomListCfg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameClientRoomListCfg)
}
GameClientRoomListCfg::GameClientRoomListCfg(const GameClientRoomListCfg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  game_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_name()) {
    game_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_name_);
  }
  room_lua_cfg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_room_lua_cfg()) {
    room_lua_cfg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_lua_cfg_);
  }
  ::memcpy(&game_id_, &from.game_id_,
    reinterpret_cast<char*>(&tax_) -
    reinterpret_cast<char*>(&game_id_) + sizeof(tax_));
  // @@protoc_insertion_point(copy_constructor:GameClientRoomListCfg)
}

void GameClientRoomListCfg::SharedCtor() {
  _cached_size_ = 0;
  game_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_lua_cfg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&game_id_, 0, reinterpret_cast<char*>(&tax_) -
    reinterpret_cast<char*>(&game_id_) + sizeof(tax_));
}

GameClientRoomListCfg::~GameClientRoomListCfg() {
  // @@protoc_insertion_point(destructor:GameClientRoomListCfg)
  SharedDtor();
}

void GameClientRoomListCfg::SharedDtor() {
  game_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_lua_cfg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameClientRoomListCfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameClientRoomListCfg::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameClientRoomListCfg& GameClientRoomListCfg::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameClientRoomListCfg* GameClientRoomListCfg::New(::google::protobuf::Arena* arena) const {
  GameClientRoomListCfg* n = new GameClientRoomListCfg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameClientRoomListCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:GameClientRoomListCfg)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_game_name()) {
      GOOGLE_DCHECK(!game_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*game_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_room_lua_cfg()) {
      GOOGLE_DCHECK(!room_lua_cfg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*room_lua_cfg_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 252u) {
    ::memset(&game_id_, 0, reinterpret_cast<char*>(&cell_money_) -
      reinterpret_cast<char*>(&game_id_) + sizeof(cell_money_));
  }
  tax_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameClientRoomListCfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameClientRoomListCfg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 game_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 second_game_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_second_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 first_game_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_first_game_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_game_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string game_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->game_name().data(), this->game_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GameClientRoomListCfg.game_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 table_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_table_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &table_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 money_limit = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_money_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 cell_money = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_cell_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cell_money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tax = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_tax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string room_lua_cfg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_lua_cfg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->room_lua_cfg().data(), this->room_lua_cfg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GameClientRoomListCfg.room_lua_cfg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameClientRoomListCfg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameClientRoomListCfg)
  return false;
#undef DO_
}

void GameClientRoomListCfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameClientRoomListCfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 game_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->game_id(), output);
  }

  // optional int32 second_game_type = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->second_game_type(), output);
  }

  // optional int32 first_game_type = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->first_game_type(), output);
  }

  // optional string game_name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_name().data(), this->game_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GameClientRoomListCfg.game_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->game_name(), output);
  }

  // optional int32 table_count = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->table_count(), output);
  }

  // optional int32 money_limit = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->money_limit(), output);
  }

  // optional int32 cell_money = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->cell_money(), output);
  }

  // optional int32 tax = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->tax(), output);
  }

  // optional string room_lua_cfg = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->room_lua_cfg().data(), this->room_lua_cfg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GameClientRoomListCfg.room_lua_cfg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->room_lua_cfg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GameClientRoomListCfg)
}

::google::protobuf::uint8* GameClientRoomListCfg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GameClientRoomListCfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 game_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->game_id(), target);
  }

  // optional int32 second_game_type = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->second_game_type(), target);
  }

  // optional int32 first_game_type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->first_game_type(), target);
  }

  // optional string game_name = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_name().data(), this->game_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GameClientRoomListCfg.game_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->game_name(), target);
  }

  // optional int32 table_count = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->table_count(), target);
  }

  // optional int32 money_limit = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->money_limit(), target);
  }

  // optional int32 cell_money = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->cell_money(), target);
  }

  // optional int32 tax = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->tax(), target);
  }

  // optional string room_lua_cfg = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->room_lua_cfg().data(), this->room_lua_cfg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GameClientRoomListCfg.room_lua_cfg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->room_lua_cfg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameClientRoomListCfg)
  return target;
}

size_t GameClientRoomListCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameClientRoomListCfg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string game_name = 4;
    if (has_game_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->game_name());
    }

    // optional string room_lua_cfg = 9;
    if (has_room_lua_cfg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->room_lua_cfg());
    }

    // optional int32 game_id = 1;
    if (has_game_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_id());
    }

    // optional int32 second_game_type = 2;
    if (has_second_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_game_type());
    }

    // optional int32 first_game_type = 3;
    if (has_first_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_game_type());
    }

    // optional int32 table_count = 5;
    if (has_table_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->table_count());
    }

    // optional int32 money_limit = 6;
    if (has_money_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money_limit());
    }

    // optional int32 cell_money = 7;
    if (has_cell_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cell_money());
    }

  }
  // optional int32 tax = 8;
  if (has_tax()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tax());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameClientRoomListCfg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameClientRoomListCfg)
  GOOGLE_DCHECK_NE(&from, this);
  const GameClientRoomListCfg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameClientRoomListCfg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameClientRoomListCfg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameClientRoomListCfg)
    MergeFrom(*source);
  }
}

void GameClientRoomListCfg::MergeFrom(const GameClientRoomListCfg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameClientRoomListCfg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_game_name();
      game_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_room_lua_cfg();
      room_lua_cfg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_lua_cfg_);
    }
    if (cached_has_bits & 0x00000004u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      second_game_type_ = from.second_game_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      first_game_type_ = from.first_game_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      table_count_ = from.table_count_;
    }
    if (cached_has_bits & 0x00000040u) {
      money_limit_ = from.money_limit_;
    }
    if (cached_has_bits & 0x00000080u) {
      cell_money_ = from.cell_money_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_tax(from.tax());
  }
}

void GameClientRoomListCfg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameClientRoomListCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameClientRoomListCfg::CopyFrom(const GameClientRoomListCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameClientRoomListCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameClientRoomListCfg::IsInitialized() const {
  return true;
}

void GameClientRoomListCfg::Swap(GameClientRoomListCfg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameClientRoomListCfg::InternalSwap(GameClientRoomListCfg* other) {
  game_name_.Swap(&other->game_name_);
  room_lua_cfg_.Swap(&other->room_lua_cfg_);
  std::swap(game_id_, other->game_id_);
  std::swap(second_game_type_, other->second_game_type_);
  std::swap(first_game_type_, other->first_game_type_);
  std::swap(table_count_, other->table_count_);
  std::swap(money_limit_, other->money_limit_);
  std::swap(cell_money_, other->cell_money_);
  std::swap(tax_, other->tax_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameClientRoomListCfg::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameClientRoomListCfg

// optional int32 game_id = 1;
bool GameClientRoomListCfg::has_game_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GameClientRoomListCfg::set_has_game_id() {
  _has_bits_[0] |= 0x00000004u;
}
void GameClientRoomListCfg::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void GameClientRoomListCfg::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
::google::protobuf::int32 GameClientRoomListCfg::game_id() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.game_id)
  return game_id_;
}
void GameClientRoomListCfg::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.game_id)
}

// optional int32 second_game_type = 2;
bool GameClientRoomListCfg::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GameClientRoomListCfg::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000008u;
}
void GameClientRoomListCfg::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void GameClientRoomListCfg::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
::google::protobuf::int32 GameClientRoomListCfg::second_game_type() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.second_game_type)
  return second_game_type_;
}
void GameClientRoomListCfg::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.second_game_type)
}

// optional int32 first_game_type = 3;
bool GameClientRoomListCfg::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GameClientRoomListCfg::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000010u;
}
void GameClientRoomListCfg::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void GameClientRoomListCfg::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
::google::protobuf::int32 GameClientRoomListCfg::first_game_type() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.first_game_type)
  return first_game_type_;
}
void GameClientRoomListCfg::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.first_game_type)
}

// optional string game_name = 4;
bool GameClientRoomListCfg::has_game_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GameClientRoomListCfg::set_has_game_name() {
  _has_bits_[0] |= 0x00000001u;
}
void GameClientRoomListCfg::clear_has_game_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void GameClientRoomListCfg::clear_game_name() {
  game_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_name();
}
const ::std::string& GameClientRoomListCfg::game_name() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.game_name)
  return game_name_.GetNoArena();
}
void GameClientRoomListCfg::set_game_name(const ::std::string& value) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.game_name)
}
#if LANG_CXX11
void GameClientRoomListCfg::set_game_name(::std::string&& value) {
  set_has_game_name();
  game_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameClientRoomListCfg.game_name)
}
#endif
void GameClientRoomListCfg::set_game_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameClientRoomListCfg.game_name)
}
void GameClientRoomListCfg::set_game_name(const char* value, size_t size) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameClientRoomListCfg.game_name)
}
::std::string* GameClientRoomListCfg::mutable_game_name() {
  set_has_game_name();
  // @@protoc_insertion_point(field_mutable:GameClientRoomListCfg.game_name)
  return game_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameClientRoomListCfg::release_game_name() {
  // @@protoc_insertion_point(field_release:GameClientRoomListCfg.game_name)
  clear_has_game_name();
  return game_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameClientRoomListCfg::set_allocated_game_name(::std::string* game_name) {
  if (game_name != NULL) {
    set_has_game_name();
  } else {
    clear_has_game_name();
  }
  game_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_name);
  // @@protoc_insertion_point(field_set_allocated:GameClientRoomListCfg.game_name)
}

// optional int32 table_count = 5;
bool GameClientRoomListCfg::has_table_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GameClientRoomListCfg::set_has_table_count() {
  _has_bits_[0] |= 0x00000020u;
}
void GameClientRoomListCfg::clear_has_table_count() {
  _has_bits_[0] &= ~0x00000020u;
}
void GameClientRoomListCfg::clear_table_count() {
  table_count_ = 0;
  clear_has_table_count();
}
::google::protobuf::int32 GameClientRoomListCfg::table_count() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.table_count)
  return table_count_;
}
void GameClientRoomListCfg::set_table_count(::google::protobuf::int32 value) {
  set_has_table_count();
  table_count_ = value;
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.table_count)
}

// optional int32 money_limit = 6;
bool GameClientRoomListCfg::has_money_limit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GameClientRoomListCfg::set_has_money_limit() {
  _has_bits_[0] |= 0x00000040u;
}
void GameClientRoomListCfg::clear_has_money_limit() {
  _has_bits_[0] &= ~0x00000040u;
}
void GameClientRoomListCfg::clear_money_limit() {
  money_limit_ = 0;
  clear_has_money_limit();
}
::google::protobuf::int32 GameClientRoomListCfg::money_limit() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.money_limit)
  return money_limit_;
}
void GameClientRoomListCfg::set_money_limit(::google::protobuf::int32 value) {
  set_has_money_limit();
  money_limit_ = value;
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.money_limit)
}

// optional int32 cell_money = 7;
bool GameClientRoomListCfg::has_cell_money() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GameClientRoomListCfg::set_has_cell_money() {
  _has_bits_[0] |= 0x00000080u;
}
void GameClientRoomListCfg::clear_has_cell_money() {
  _has_bits_[0] &= ~0x00000080u;
}
void GameClientRoomListCfg::clear_cell_money() {
  cell_money_ = 0;
  clear_has_cell_money();
}
::google::protobuf::int32 GameClientRoomListCfg::cell_money() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.cell_money)
  return cell_money_;
}
void GameClientRoomListCfg::set_cell_money(::google::protobuf::int32 value) {
  set_has_cell_money();
  cell_money_ = value;
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.cell_money)
}

// optional int32 tax = 8;
bool GameClientRoomListCfg::has_tax() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void GameClientRoomListCfg::set_has_tax() {
  _has_bits_[0] |= 0x00000100u;
}
void GameClientRoomListCfg::clear_has_tax() {
  _has_bits_[0] &= ~0x00000100u;
}
void GameClientRoomListCfg::clear_tax() {
  tax_ = 0;
  clear_has_tax();
}
::google::protobuf::int32 GameClientRoomListCfg::tax() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.tax)
  return tax_;
}
void GameClientRoomListCfg::set_tax(::google::protobuf::int32 value) {
  set_has_tax();
  tax_ = value;
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.tax)
}

// optional string room_lua_cfg = 9;
bool GameClientRoomListCfg::has_room_lua_cfg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GameClientRoomListCfg::set_has_room_lua_cfg() {
  _has_bits_[0] |= 0x00000002u;
}
void GameClientRoomListCfg::clear_has_room_lua_cfg() {
  _has_bits_[0] &= ~0x00000002u;
}
void GameClientRoomListCfg::clear_room_lua_cfg() {
  room_lua_cfg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_lua_cfg();
}
const ::std::string& GameClientRoomListCfg::room_lua_cfg() const {
  // @@protoc_insertion_point(field_get:GameClientRoomListCfg.room_lua_cfg)
  return room_lua_cfg_.GetNoArena();
}
void GameClientRoomListCfg::set_room_lua_cfg(const ::std::string& value) {
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameClientRoomListCfg.room_lua_cfg)
}
#if LANG_CXX11
void GameClientRoomListCfg::set_room_lua_cfg(::std::string&& value) {
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameClientRoomListCfg.room_lua_cfg)
}
#endif
void GameClientRoomListCfg::set_room_lua_cfg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameClientRoomListCfg.room_lua_cfg)
}
void GameClientRoomListCfg::set_room_lua_cfg(const char* value, size_t size) {
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameClientRoomListCfg.room_lua_cfg)
}
::std::string* GameClientRoomListCfg::mutable_room_lua_cfg() {
  set_has_room_lua_cfg();
  // @@protoc_insertion_point(field_mutable:GameClientRoomListCfg.room_lua_cfg)
  return room_lua_cfg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameClientRoomListCfg::release_room_lua_cfg() {
  // @@protoc_insertion_point(field_release:GameClientRoomListCfg.room_lua_cfg)
  clear_has_room_lua_cfg();
  return room_lua_cfg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameClientRoomListCfg::set_allocated_room_lua_cfg(::std::string* room_lua_cfg) {
  if (room_lua_cfg != NULL) {
    set_has_room_lua_cfg();
  } else {
    clear_has_room_lua_cfg();
  }
  room_lua_cfg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_lua_cfg);
  // @@protoc_insertion_point(field_set_allocated:GameClientRoomListCfg.room_lua_cfg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerBaseInfo::kBankFieldNumber;
const int PlayerBaseInfo::kLoginAwardDayFieldNumber;
const int PlayerBaseInfo::kLoginAwardReceiveDayFieldNumber;
const int PlayerBaseInfo::kOnlineAwardTimeFieldNumber;
const int PlayerBaseInfo::kOnlineAwardNumFieldNumber;
const int PlayerBaseInfo::kReliefPaymentCountFieldNumber;
const int PlayerBaseInfo::kLevelFieldNumber;
const int PlayerBaseInfo::kMoneyFieldNumber;
const int PlayerBaseInfo::kHeaderIconFieldNumber;
const int PlayerBaseInfo::kSlotmaAdditionFieldNumber;
const int PlayerBaseInfo::kNewplayerRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerBaseInfo::PlayerBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerBaseInfo)
}
PlayerBaseInfo::PlayerBaseInfo(const PlayerBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bank_, &from.bank_,
    reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&bank_) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:PlayerBaseInfo)
}

void PlayerBaseInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bank_, 0, reinterpret_cast<char*>(&newplayer_reward_) -
    reinterpret_cast<char*>(&bank_) + sizeof(newplayer_reward_));
  level_ = 1;
}

PlayerBaseInfo::~PlayerBaseInfo() {
  // @@protoc_insertion_point(destructor:PlayerBaseInfo)
  SharedDtor();
}

void PlayerBaseInfo::SharedDtor() {
}

void PlayerBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerBaseInfo::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerBaseInfo& PlayerBaseInfo::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerBaseInfo* PlayerBaseInfo::New(::google::protobuf::Arena* arena) const {
  PlayerBaseInfo* n = new PlayerBaseInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerBaseInfo)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&bank_, 0, reinterpret_cast<char*>(&money_) -
      reinterpret_cast<char*>(&bank_) + sizeof(money_));
  }
  if (_has_bits_[8 / 32] & 1792u) {
    ::memset(&slotma_addition_, 0, reinterpret_cast<char*>(&newplayer_reward_) -
      reinterpret_cast<char*>(&slotma_addition_) + sizeof(newplayer_reward_));
    level_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerBaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 bank = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_bank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 login_award_day = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_login_award_day();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &login_award_day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 login_award_receive_day = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_login_award_receive_day();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &login_award_receive_day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 online_award_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_online_award_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &online_award_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 online_award_num = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_online_award_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &online_award_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 relief_payment_count = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_relief_payment_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &relief_payment_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 7 [default = 1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 8 [default = 0];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 header_icon = 9 [default = 0];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_header_icon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &header_icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 slotma_addition = 10 [default = 0];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_slotma_addition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slotma_addition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 newplayer_reward = 11 [default = 0];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_newplayer_reward();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &newplayer_reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerBaseInfo)
  return false;
#undef DO_
}

void PlayerBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 bank = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->bank(), output);
  }

  // optional int32 login_award_day = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->login_award_day(), output);
  }

  // optional int32 login_award_receive_day = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->login_award_receive_day(), output);
  }

  // optional int32 online_award_time = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->online_award_time(), output);
  }

  // optional int32 online_award_num = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->online_award_num(), output);
  }

  // optional int32 relief_payment_count = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->relief_payment_count(), output);
  }

  // optional int32 level = 7 [default = 1];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->level(), output);
  }

  // optional int64 money = 8 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->money(), output);
  }

  // optional int32 header_icon = 9 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->header_icon(), output);
  }

  // optional int32 slotma_addition = 10 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->slotma_addition(), output);
  }

  // optional int32 newplayer_reward = 11 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->newplayer_reward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerBaseInfo)
}

::google::protobuf::uint8* PlayerBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 bank = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->bank(), target);
  }

  // optional int32 login_award_day = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->login_award_day(), target);
  }

  // optional int32 login_award_receive_day = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->login_award_receive_day(), target);
  }

  // optional int32 online_award_time = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->online_award_time(), target);
  }

  // optional int32 online_award_num = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->online_award_num(), target);
  }

  // optional int32 relief_payment_count = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->relief_payment_count(), target);
  }

  // optional int32 level = 7 [default = 1];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->level(), target);
  }

  // optional int64 money = 8 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->money(), target);
  }

  // optional int32 header_icon = 9 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->header_icon(), target);
  }

  // optional int32 slotma_addition = 10 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->slotma_addition(), target);
  }

  // optional int32 newplayer_reward = 11 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->newplayer_reward(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerBaseInfo)
  return target;
}

size_t PlayerBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerBaseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int64 bank = 1 [default = 0];
    if (has_bank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bank());
    }

    // optional int32 login_award_day = 2;
    if (has_login_award_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->login_award_day());
    }

    // optional int32 login_award_receive_day = 3;
    if (has_login_award_receive_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->login_award_receive_day());
    }

    // optional int32 online_award_time = 4;
    if (has_online_award_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->online_award_time());
    }

    // optional int32 online_award_num = 5;
    if (has_online_award_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->online_award_num());
    }

    // optional int32 relief_payment_count = 6;
    if (has_relief_payment_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->relief_payment_count());
    }

    // optional int32 header_icon = 9 [default = 0];
    if (has_header_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->header_icon());
    }

    // optional int64 money = 8 [default = 0];
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional int32 slotma_addition = 10 [default = 0];
    if (has_slotma_addition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slotma_addition());
    }

    // optional int32 newplayer_reward = 11 [default = 0];
    if (has_newplayer_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->newplayer_reward());
    }

    // optional int32 level = 7 [default = 1];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerBaseInfo)
    MergeFrom(*source);
  }
}

void PlayerBaseInfo::MergeFrom(const PlayerBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      bank_ = from.bank_;
    }
    if (cached_has_bits & 0x00000002u) {
      login_award_day_ = from.login_award_day_;
    }
    if (cached_has_bits & 0x00000004u) {
      login_award_receive_day_ = from.login_award_receive_day_;
    }
    if (cached_has_bits & 0x00000008u) {
      online_award_time_ = from.online_award_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      online_award_num_ = from.online_award_num_;
    }
    if (cached_has_bits & 0x00000020u) {
      relief_payment_count_ = from.relief_payment_count_;
    }
    if (cached_has_bits & 0x00000040u) {
      header_icon_ = from.header_icon_;
    }
    if (cached_has_bits & 0x00000080u) {
      money_ = from.money_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      slotma_addition_ = from.slotma_addition_;
    }
    if (cached_has_bits & 0x00000200u) {
      newplayer_reward_ = from.newplayer_reward_;
    }
    if (cached_has_bits & 0x00000400u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerBaseInfo::CopyFrom(const PlayerBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerBaseInfo::IsInitialized() const {
  return true;
}

void PlayerBaseInfo::Swap(PlayerBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerBaseInfo::InternalSwap(PlayerBaseInfo* other) {
  std::swap(bank_, other->bank_);
  std::swap(login_award_day_, other->login_award_day_);
  std::swap(login_award_receive_day_, other->login_award_receive_day_);
  std::swap(online_award_time_, other->online_award_time_);
  std::swap(online_award_num_, other->online_award_num_);
  std::swap(relief_payment_count_, other->relief_payment_count_);
  std::swap(header_icon_, other->header_icon_);
  std::swap(money_, other->money_);
  std::swap(slotma_addition_, other->slotma_addition_);
  std::swap(newplayer_reward_, other->newplayer_reward_);
  std::swap(level_, other->level_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerBaseInfo::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerBaseInfo

// optional int64 bank = 1 [default = 0];
bool PlayerBaseInfo::has_bank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PlayerBaseInfo::set_has_bank() {
  _has_bits_[0] |= 0x00000001u;
}
void PlayerBaseInfo::clear_has_bank() {
  _has_bits_[0] &= ~0x00000001u;
}
void PlayerBaseInfo::clear_bank() {
  bank_ = GOOGLE_LONGLONG(0);
  clear_has_bank();
}
::google::protobuf::int64 PlayerBaseInfo::bank() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.bank)
  return bank_;
}
void PlayerBaseInfo::set_bank(::google::protobuf::int64 value) {
  set_has_bank();
  bank_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.bank)
}

// optional int32 login_award_day = 2;
bool PlayerBaseInfo::has_login_award_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PlayerBaseInfo::set_has_login_award_day() {
  _has_bits_[0] |= 0x00000002u;
}
void PlayerBaseInfo::clear_has_login_award_day() {
  _has_bits_[0] &= ~0x00000002u;
}
void PlayerBaseInfo::clear_login_award_day() {
  login_award_day_ = 0;
  clear_has_login_award_day();
}
::google::protobuf::int32 PlayerBaseInfo::login_award_day() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.login_award_day)
  return login_award_day_;
}
void PlayerBaseInfo::set_login_award_day(::google::protobuf::int32 value) {
  set_has_login_award_day();
  login_award_day_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.login_award_day)
}

// optional int32 login_award_receive_day = 3;
bool PlayerBaseInfo::has_login_award_receive_day() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PlayerBaseInfo::set_has_login_award_receive_day() {
  _has_bits_[0] |= 0x00000004u;
}
void PlayerBaseInfo::clear_has_login_award_receive_day() {
  _has_bits_[0] &= ~0x00000004u;
}
void PlayerBaseInfo::clear_login_award_receive_day() {
  login_award_receive_day_ = 0;
  clear_has_login_award_receive_day();
}
::google::protobuf::int32 PlayerBaseInfo::login_award_receive_day() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.login_award_receive_day)
  return login_award_receive_day_;
}
void PlayerBaseInfo::set_login_award_receive_day(::google::protobuf::int32 value) {
  set_has_login_award_receive_day();
  login_award_receive_day_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.login_award_receive_day)
}

// optional int32 online_award_time = 4;
bool PlayerBaseInfo::has_online_award_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PlayerBaseInfo::set_has_online_award_time() {
  _has_bits_[0] |= 0x00000008u;
}
void PlayerBaseInfo::clear_has_online_award_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void PlayerBaseInfo::clear_online_award_time() {
  online_award_time_ = 0;
  clear_has_online_award_time();
}
::google::protobuf::int32 PlayerBaseInfo::online_award_time() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.online_award_time)
  return online_award_time_;
}
void PlayerBaseInfo::set_online_award_time(::google::protobuf::int32 value) {
  set_has_online_award_time();
  online_award_time_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.online_award_time)
}

// optional int32 online_award_num = 5;
bool PlayerBaseInfo::has_online_award_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PlayerBaseInfo::set_has_online_award_num() {
  _has_bits_[0] |= 0x00000010u;
}
void PlayerBaseInfo::clear_has_online_award_num() {
  _has_bits_[0] &= ~0x00000010u;
}
void PlayerBaseInfo::clear_online_award_num() {
  online_award_num_ = 0;
  clear_has_online_award_num();
}
::google::protobuf::int32 PlayerBaseInfo::online_award_num() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.online_award_num)
  return online_award_num_;
}
void PlayerBaseInfo::set_online_award_num(::google::protobuf::int32 value) {
  set_has_online_award_num();
  online_award_num_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.online_award_num)
}

// optional int32 relief_payment_count = 6;
bool PlayerBaseInfo::has_relief_payment_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PlayerBaseInfo::set_has_relief_payment_count() {
  _has_bits_[0] |= 0x00000020u;
}
void PlayerBaseInfo::clear_has_relief_payment_count() {
  _has_bits_[0] &= ~0x00000020u;
}
void PlayerBaseInfo::clear_relief_payment_count() {
  relief_payment_count_ = 0;
  clear_has_relief_payment_count();
}
::google::protobuf::int32 PlayerBaseInfo::relief_payment_count() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.relief_payment_count)
  return relief_payment_count_;
}
void PlayerBaseInfo::set_relief_payment_count(::google::protobuf::int32 value) {
  set_has_relief_payment_count();
  relief_payment_count_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.relief_payment_count)
}

// optional int32 level = 7 [default = 1];
bool PlayerBaseInfo::has_level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void PlayerBaseInfo::set_has_level() {
  _has_bits_[0] |= 0x00000400u;
}
void PlayerBaseInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000400u;
}
void PlayerBaseInfo::clear_level() {
  level_ = 1;
  clear_has_level();
}
::google::protobuf::int32 PlayerBaseInfo::level() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.level)
  return level_;
}
void PlayerBaseInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.level)
}

// optional int64 money = 8 [default = 0];
bool PlayerBaseInfo::has_money() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PlayerBaseInfo::set_has_money() {
  _has_bits_[0] |= 0x00000080u;
}
void PlayerBaseInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000080u;
}
void PlayerBaseInfo::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 PlayerBaseInfo::money() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.money)
  return money_;
}
void PlayerBaseInfo::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.money)
}

// optional int32 header_icon = 9 [default = 0];
bool PlayerBaseInfo::has_header_icon() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PlayerBaseInfo::set_has_header_icon() {
  _has_bits_[0] |= 0x00000040u;
}
void PlayerBaseInfo::clear_has_header_icon() {
  _has_bits_[0] &= ~0x00000040u;
}
void PlayerBaseInfo::clear_header_icon() {
  header_icon_ = 0;
  clear_has_header_icon();
}
::google::protobuf::int32 PlayerBaseInfo::header_icon() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.header_icon)
  return header_icon_;
}
void PlayerBaseInfo::set_header_icon(::google::protobuf::int32 value) {
  set_has_header_icon();
  header_icon_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.header_icon)
}

// optional int32 slotma_addition = 10 [default = 0];
bool PlayerBaseInfo::has_slotma_addition() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PlayerBaseInfo::set_has_slotma_addition() {
  _has_bits_[0] |= 0x00000100u;
}
void PlayerBaseInfo::clear_has_slotma_addition() {
  _has_bits_[0] &= ~0x00000100u;
}
void PlayerBaseInfo::clear_slotma_addition() {
  slotma_addition_ = 0;
  clear_has_slotma_addition();
}
::google::protobuf::int32 PlayerBaseInfo::slotma_addition() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.slotma_addition)
  return slotma_addition_;
}
void PlayerBaseInfo::set_slotma_addition(::google::protobuf::int32 value) {
  set_has_slotma_addition();
  slotma_addition_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.slotma_addition)
}

// optional int32 newplayer_reward = 11 [default = 0];
bool PlayerBaseInfo::has_newplayer_reward() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void PlayerBaseInfo::set_has_newplayer_reward() {
  _has_bits_[0] |= 0x00000200u;
}
void PlayerBaseInfo::clear_has_newplayer_reward() {
  _has_bits_[0] &= ~0x00000200u;
}
void PlayerBaseInfo::clear_newplayer_reward() {
  newplayer_reward_ = 0;
  clear_has_newplayer_reward();
}
::google::protobuf::int32 PlayerBaseInfo::newplayer_reward() const {
  // @@protoc_insertion_point(field_get:PlayerBaseInfo.newplayer_reward)
  return newplayer_reward_;
}
void PlayerBaseInfo::set_newplayer_reward(::google::protobuf::int32 value) {
  set_has_newplayer_reward();
  newplayer_reward_ = value;
  // @@protoc_insertion_point(field_set:PlayerBaseInfo.newplayer_reward)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerVisualInfo::kChairIdFieldNumber;
const int PlayerVisualInfo::kGuidFieldNumber;
const int PlayerVisualInfo::kAccountFieldNumber;
const int PlayerVisualInfo::kNicknameFieldNumber;
const int PlayerVisualInfo::kLevelFieldNumber;
const int PlayerVisualInfo::kMoneyFieldNumber;
const int PlayerVisualInfo::kHeaderIconFieldNumber;
const int PlayerVisualInfo::kIpAreaFieldNumber;
const int PlayerVisualInfo::kIsReadyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerVisualInfo::PlayerVisualInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerVisualInfo)
}
PlayerVisualInfo::PlayerVisualInfo(const PlayerVisualInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip_area()) {
    ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
  }
  ::memcpy(&chair_id_, &from.chair_id_,
    reinterpret_cast<char*>(&header_icon_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(header_icon_));
  // @@protoc_insertion_point(copy_constructor:PlayerVisualInfo)
}

void PlayerVisualInfo::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&chair_id_, 0, reinterpret_cast<char*>(&is_ready_) -
    reinterpret_cast<char*>(&chair_id_) + sizeof(is_ready_));
  level_ = 1;
  header_icon_ = -1;
}

PlayerVisualInfo::~PlayerVisualInfo() {
  // @@protoc_insertion_point(destructor:PlayerVisualInfo)
  SharedDtor();
}

void PlayerVisualInfo::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerVisualInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerVisualInfo::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerVisualInfo& PlayerVisualInfo::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerVisualInfo* PlayerVisualInfo::New(::google::protobuf::Arena* arena) const {
  PlayerVisualInfo* n = new PlayerVisualInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerVisualInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerVisualInfo)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_nickname()) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
    if (has_ip_area()) {
      GOOGLE_DCHECK(!ip_area_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ip_area_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 248u) {
    ::memset(&chair_id_, 0, reinterpret_cast<char*>(&is_ready_) -
      reinterpret_cast<char*>(&chair_id_) + sizeof(is_ready_));
    level_ = 1;
  }
  header_icon_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerVisualInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerVisualInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chair_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_chair_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chair_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PlayerVisualInfo.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PlayerVisualInfo.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 5 [default = 1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 header_icon = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_header_icon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &header_icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip_area = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_area()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip_area().data(), this->ip_area().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PlayerVisualInfo.ip_area");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_ready = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_is_ready();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ready_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerVisualInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerVisualInfo)
  return false;
#undef DO_
}

void PlayerVisualInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerVisualInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chair_id(), output);
  }

  // optional int32 guid = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->guid(), output);
  }

  // optional string account = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayerVisualInfo.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account(), output);
  }

  // optional string nickname = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayerVisualInfo.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->nickname(), output);
  }

  // optional int32 level = 5 [default = 1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // optional int64 money = 6 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->money(), output);
  }

  // optional int32 header_icon = 7 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->header_icon(), output);
  }

  // optional string ip_area = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayerVisualInfo.ip_area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->ip_area(), output);
  }

  // optional bool is_ready = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_ready(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerVisualInfo)
}

::google::protobuf::uint8* PlayerVisualInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerVisualInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 chair_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chair_id(), target);
  }

  // optional int32 guid = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->guid(), target);
  }

  // optional string account = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayerVisualInfo.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account(), target);
  }

  // optional string nickname = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayerVisualInfo.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nickname(), target);
  }

  // optional int32 level = 5 [default = 1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // optional int64 money = 6 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->money(), target);
  }

  // optional int32 header_icon = 7 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->header_icon(), target);
  }

  // optional string ip_area = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip_area().data(), this->ip_area().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayerVisualInfo.ip_area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->ip_area(), target);
  }

  // optional bool is_ready = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_ready(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerVisualInfo)
  return target;
}

size_t PlayerVisualInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerVisualInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string account = 3;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string nickname = 4;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string ip_area = 8;
    if (has_ip_area()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip_area());
    }

    // optional int32 chair_id = 1;
    if (has_chair_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chair_id());
    }

    // optional int32 guid = 2;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

    // optional int64 money = 6 [default = 0];
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional bool is_ready = 9;
    if (has_is_ready()) {
      total_size += 1 + 1;
    }

    // optional int32 level = 5 [default = 1];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  // optional int32 header_icon = 7 [default = -1];
  if (has_header_icon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->header_icon());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerVisualInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerVisualInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerVisualInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerVisualInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerVisualInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerVisualInfo)
    MergeFrom(*source);
  }
}

void PlayerVisualInfo::MergeFrom(const PlayerVisualInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerVisualInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_ip_area();
      ip_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_area_);
    }
    if (cached_has_bits & 0x00000008u) {
      chair_id_ = from.chair_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000020u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_ready_ = from.is_ready_;
    }
    if (cached_has_bits & 0x00000080u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_header_icon(from.header_icon());
  }
}

void PlayerVisualInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerVisualInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerVisualInfo::CopyFrom(const PlayerVisualInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerVisualInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerVisualInfo::IsInitialized() const {
  return true;
}

void PlayerVisualInfo::Swap(PlayerVisualInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerVisualInfo::InternalSwap(PlayerVisualInfo* other) {
  account_.Swap(&other->account_);
  nickname_.Swap(&other->nickname_);
  ip_area_.Swap(&other->ip_area_);
  std::swap(chair_id_, other->chair_id_);
  std::swap(guid_, other->guid_);
  std::swap(money_, other->money_);
  std::swap(is_ready_, other->is_ready_);
  std::swap(level_, other->level_);
  std::swap(header_icon_, other->header_icon_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerVisualInfo::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerVisualInfo

// optional int32 chair_id = 1;
bool PlayerVisualInfo::has_chair_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PlayerVisualInfo::set_has_chair_id() {
  _has_bits_[0] |= 0x00000008u;
}
void PlayerVisualInfo::clear_has_chair_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void PlayerVisualInfo::clear_chair_id() {
  chair_id_ = 0;
  clear_has_chair_id();
}
::google::protobuf::int32 PlayerVisualInfo::chair_id() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.chair_id)
  return chair_id_;
}
void PlayerVisualInfo::set_chair_id(::google::protobuf::int32 value) {
  set_has_chair_id();
  chair_id_ = value;
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.chair_id)
}

// optional int32 guid = 2;
bool PlayerVisualInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PlayerVisualInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000010u;
}
void PlayerVisualInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000010u;
}
void PlayerVisualInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 PlayerVisualInfo::guid() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.guid)
  return guid_;
}
void PlayerVisualInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.guid)
}

// optional string account = 3;
bool PlayerVisualInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PlayerVisualInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void PlayerVisualInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void PlayerVisualInfo::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& PlayerVisualInfo::account() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.account)
  return account_.GetNoArena();
}
void PlayerVisualInfo::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.account)
}
#if LANG_CXX11
void PlayerVisualInfo::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerVisualInfo.account)
}
#endif
void PlayerVisualInfo::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerVisualInfo.account)
}
void PlayerVisualInfo::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerVisualInfo.account)
}
::std::string* PlayerVisualInfo::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:PlayerVisualInfo.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerVisualInfo::release_account() {
  // @@protoc_insertion_point(field_release:PlayerVisualInfo.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerVisualInfo::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:PlayerVisualInfo.account)
}

// optional string nickname = 4;
bool PlayerVisualInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PlayerVisualInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
void PlayerVisualInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void PlayerVisualInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& PlayerVisualInfo::nickname() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.nickname)
  return nickname_.GetNoArena();
}
void PlayerVisualInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.nickname)
}
#if LANG_CXX11
void PlayerVisualInfo::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerVisualInfo.nickname)
}
#endif
void PlayerVisualInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerVisualInfo.nickname)
}
void PlayerVisualInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerVisualInfo.nickname)
}
::std::string* PlayerVisualInfo::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:PlayerVisualInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerVisualInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:PlayerVisualInfo.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerVisualInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:PlayerVisualInfo.nickname)
}

// optional int32 level = 5 [default = 1];
bool PlayerVisualInfo::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PlayerVisualInfo::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
void PlayerVisualInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
void PlayerVisualInfo::clear_level() {
  level_ = 1;
  clear_has_level();
}
::google::protobuf::int32 PlayerVisualInfo::level() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.level)
  return level_;
}
void PlayerVisualInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.level)
}

// optional int64 money = 6 [default = 0];
bool PlayerVisualInfo::has_money() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PlayerVisualInfo::set_has_money() {
  _has_bits_[0] |= 0x00000020u;
}
void PlayerVisualInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000020u;
}
void PlayerVisualInfo::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 PlayerVisualInfo::money() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.money)
  return money_;
}
void PlayerVisualInfo::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.money)
}

// optional int32 header_icon = 7 [default = -1];
bool PlayerVisualInfo::has_header_icon() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PlayerVisualInfo::set_has_header_icon() {
  _has_bits_[0] |= 0x00000100u;
}
void PlayerVisualInfo::clear_has_header_icon() {
  _has_bits_[0] &= ~0x00000100u;
}
void PlayerVisualInfo::clear_header_icon() {
  header_icon_ = -1;
  clear_has_header_icon();
}
::google::protobuf::int32 PlayerVisualInfo::header_icon() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.header_icon)
  return header_icon_;
}
void PlayerVisualInfo::set_header_icon(::google::protobuf::int32 value) {
  set_has_header_icon();
  header_icon_ = value;
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.header_icon)
}

// optional string ip_area = 8;
bool PlayerVisualInfo::has_ip_area() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PlayerVisualInfo::set_has_ip_area() {
  _has_bits_[0] |= 0x00000004u;
}
void PlayerVisualInfo::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000004u;
}
void PlayerVisualInfo::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
const ::std::string& PlayerVisualInfo::ip_area() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.ip_area)
  return ip_area_.GetNoArena();
}
void PlayerVisualInfo::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.ip_area)
}
#if LANG_CXX11
void PlayerVisualInfo::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerVisualInfo.ip_area)
}
#endif
void PlayerVisualInfo::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerVisualInfo.ip_area)
}
void PlayerVisualInfo::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerVisualInfo.ip_area)
}
::std::string* PlayerVisualInfo::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:PlayerVisualInfo.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerVisualInfo::release_ip_area() {
  // @@protoc_insertion_point(field_release:PlayerVisualInfo.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerVisualInfo::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:PlayerVisualInfo.ip_area)
}

// optional bool is_ready = 9;
bool PlayerVisualInfo::has_is_ready() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PlayerVisualInfo::set_has_is_ready() {
  _has_bits_[0] |= 0x00000040u;
}
void PlayerVisualInfo::clear_has_is_ready() {
  _has_bits_[0] &= ~0x00000040u;
}
void PlayerVisualInfo::clear_is_ready() {
  is_ready_ = false;
  clear_has_is_ready();
}
bool PlayerVisualInfo::is_ready() const {
  // @@protoc_insertion_point(field_get:PlayerVisualInfo.is_ready)
  return is_ready_;
}
void PlayerVisualInfo::set_is_ready(bool value) {
  set_has_is_ready();
  is_ready_ = value;
  // @@protoc_insertion_point(field_set:PlayerVisualInfo.is_ready)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemInfo::kItemIdFieldNumber;
const int ItemInfo::kItemNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemInfo::ItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ItemInfo)
}
ItemInfo::ItemInfo(const ItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&item_num_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(item_num_));
  // @@protoc_insertion_point(copy_constructor:ItemInfo)
}

void ItemInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&item_num_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(item_num_));
}

ItemInfo::~ItemInfo() {
  // @@protoc_insertion_point(destructor:ItemInfo)
  SharedDtor();
}

void ItemInfo::SharedDtor() {
}

void ItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemInfo::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemInfo& ItemInfo::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ItemInfo* ItemInfo::New(::google::protobuf::Arena* arena) const {
  ItemInfo* n = new ItemInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ItemInfo)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&item_num_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(item_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ItemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 item_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ItemInfo)
  return false;
#undef DO_
}

void ItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }

  // optional int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ItemInfo)
}

::google::protobuf::uint8* ItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }

  // optional int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ItemInfo)
  return target;
}

size_t ItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ItemInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }

    // optional int32 item_num = 2;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ItemInfo)
    MergeFrom(*source);
  }
}

void ItemInfo::MergeFrom(const ItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_num_ = from.item_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemInfo::CopyFrom(const ItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemInfo::IsInitialized() const {
  return true;
}

void ItemInfo::Swap(ItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemInfo::InternalSwap(ItemInfo* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(item_num_, other->item_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemInfo::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemInfo

// optional int32 item_id = 1;
bool ItemInfo::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemInfo::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemInfo::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemInfo::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
::google::protobuf::int32 ItemInfo::item_id() const {
  // @@protoc_insertion_point(field_get:ItemInfo.item_id)
  return item_id_;
}
void ItemInfo::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.item_id)
}

// optional int32 item_num = 2;
bool ItemInfo::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemInfo::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemInfo::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemInfo::clear_item_num() {
  item_num_ = 0;
  clear_has_item_num();
}
::google::protobuf::int32 ItemInfo::item_num() const {
  // @@protoc_insertion_point(field_get:ItemInfo.item_num)
  return item_num_;
}
void ItemInfo::set_item_num(::google::protobuf::int32 value) {
  set_has_item_num();
  item_num_ = value;
  // @@protoc_insertion_point(field_set:ItemInfo.item_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msg_DataInfo::kIdFieldNumber;
const int Msg_DataInfo::kStartTimeFieldNumber;
const int Msg_DataInfo::kEndTimeFieldNumber;
const int Msg_DataInfo::kMsgTypeFieldNumber;
const int Msg_DataInfo::kIsReadFieldNumber;
const int Msg_DataInfo::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msg_DataInfo::Msg_DataInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Msg_DataInfo)
}
Msg_DataInfo::Msg_DataInfo(const Msg_DataInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&is_read_) -
    reinterpret_cast<char*>(&id_) + sizeof(is_read_));
  // @@protoc_insertion_point(copy_constructor:Msg_DataInfo)
}

void Msg_DataInfo::SharedCtor() {
  _cached_size_ = 0;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&is_read_) -
    reinterpret_cast<char*>(&id_) + sizeof(is_read_));
}

Msg_DataInfo::~Msg_DataInfo() {
  // @@protoc_insertion_point(destructor:Msg_DataInfo)
  SharedDtor();
}

void Msg_DataInfo::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Msg_DataInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_DataInfo::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Msg_DataInfo& Msg_DataInfo::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

Msg_DataInfo* Msg_DataInfo::New(::google::protobuf::Arena* arena) const {
  Msg_DataInfo* n = new Msg_DataInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Msg_DataInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_DataInfo)
  if (has_content()) {
    GOOGLE_DCHECK(!content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*content_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 62u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&is_read_) -
      reinterpret_cast<char*>(&id_) + sizeof(is_read_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Msg_DataInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Msg_DataInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 end_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 msg_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_msg_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 is_read = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_is_read();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_read_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Msg_DataInfo.content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Msg_DataInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Msg_DataInfo)
  return false;
#undef DO_
}

void Msg_DataInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Msg_DataInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 start_time = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->start_time(), output);
  }

  // optional int32 end_time = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->end_time(), output);
  }

  // optional int32 msg_type = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->msg_type(), output);
  }

  // optional int32 is_read = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->is_read(), output);
  }

  // optional string content = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Msg_DataInfo.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Msg_DataInfo)
}

::google::protobuf::uint8* Msg_DataInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg_DataInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 start_time = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->start_time(), target);
  }

  // optional int32 end_time = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->end_time(), target);
  }

  // optional int32 msg_type = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->msg_type(), target);
  }

  // optional int32 is_read = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->is_read(), target);
  }

  // optional string content = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Msg_DataInfo.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg_DataInfo)
  return target;
}

size_t Msg_DataInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_DataInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string content = 6;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 start_time = 2;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start_time());
    }

    // optional int32 end_time = 3;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->end_time());
    }

    // optional int32 msg_type = 4;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_type());
    }

    // optional int32 is_read = 5;
    if (has_is_read()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_read());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_DataInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_DataInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg_DataInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Msg_DataInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_DataInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_DataInfo)
    MergeFrom(*source);
  }
}

void Msg_DataInfo::MergeFrom(const Msg_DataInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_DataInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      start_time_ = from.start_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      end_time_ = from.end_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      msg_type_ = from.msg_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_read_ = from.is_read_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Msg_DataInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_DataInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_DataInfo::CopyFrom(const Msg_DataInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_DataInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_DataInfo::IsInitialized() const {
  return true;
}

void Msg_DataInfo::Swap(Msg_DataInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msg_DataInfo::InternalSwap(Msg_DataInfo* other) {
  content_.Swap(&other->content_);
  std::swap(id_, other->id_);
  std::swap(start_time_, other->start_time_);
  std::swap(end_time_, other->end_time_);
  std::swap(msg_type_, other->msg_type_);
  std::swap(is_read_, other->is_read_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Msg_DataInfo::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Msg_DataInfo

// optional int32 id = 1;
bool Msg_DataInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Msg_DataInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void Msg_DataInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void Msg_DataInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 Msg_DataInfo::id() const {
  // @@protoc_insertion_point(field_get:Msg_DataInfo.id)
  return id_;
}
void Msg_DataInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Msg_DataInfo.id)
}

// optional int32 start_time = 2;
bool Msg_DataInfo::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Msg_DataInfo::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
void Msg_DataInfo::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void Msg_DataInfo::clear_start_time() {
  start_time_ = 0;
  clear_has_start_time();
}
::google::protobuf::int32 Msg_DataInfo::start_time() const {
  // @@protoc_insertion_point(field_get:Msg_DataInfo.start_time)
  return start_time_;
}
void Msg_DataInfo::set_start_time(::google::protobuf::int32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:Msg_DataInfo.start_time)
}

// optional int32 end_time = 3;
bool Msg_DataInfo::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Msg_DataInfo::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
void Msg_DataInfo::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void Msg_DataInfo::clear_end_time() {
  end_time_ = 0;
  clear_has_end_time();
}
::google::protobuf::int32 Msg_DataInfo::end_time() const {
  // @@protoc_insertion_point(field_get:Msg_DataInfo.end_time)
  return end_time_;
}
void Msg_DataInfo::set_end_time(::google::protobuf::int32 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:Msg_DataInfo.end_time)
}

// optional int32 msg_type = 4;
bool Msg_DataInfo::has_msg_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Msg_DataInfo::set_has_msg_type() {
  _has_bits_[0] |= 0x00000010u;
}
void Msg_DataInfo::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void Msg_DataInfo::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
::google::protobuf::int32 Msg_DataInfo::msg_type() const {
  // @@protoc_insertion_point(field_get:Msg_DataInfo.msg_type)
  return msg_type_;
}
void Msg_DataInfo::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:Msg_DataInfo.msg_type)
}

// optional int32 is_read = 5;
bool Msg_DataInfo::has_is_read() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Msg_DataInfo::set_has_is_read() {
  _has_bits_[0] |= 0x00000020u;
}
void Msg_DataInfo::clear_has_is_read() {
  _has_bits_[0] &= ~0x00000020u;
}
void Msg_DataInfo::clear_is_read() {
  is_read_ = 0;
  clear_has_is_read();
}
::google::protobuf::int32 Msg_DataInfo::is_read() const {
  // @@protoc_insertion_point(field_get:Msg_DataInfo.is_read)
  return is_read_;
}
void Msg_DataInfo::set_is_read(::google::protobuf::int32 value) {
  set_has_is_read();
  is_read_ = value;
  // @@protoc_insertion_point(field_set:Msg_DataInfo.is_read)
}

// optional string content = 6;
bool Msg_DataInfo::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Msg_DataInfo::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
void Msg_DataInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void Msg_DataInfo::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
const ::std::string& Msg_DataInfo::content() const {
  // @@protoc_insertion_point(field_get:Msg_DataInfo.content)
  return content_.GetNoArena();
}
void Msg_DataInfo::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Msg_DataInfo.content)
}
#if LANG_CXX11
void Msg_DataInfo::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Msg_DataInfo.content)
}
#endif
void Msg_DataInfo::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Msg_DataInfo.content)
}
void Msg_DataInfo::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Msg_DataInfo.content)
}
::std::string* Msg_DataInfo::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:Msg_DataInfo.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Msg_DataInfo::release_content() {
  // @@protoc_insertion_point(field_release:Msg_DataInfo.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Msg_DataInfo::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:Msg_DataInfo.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemBagInfo::kPbItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemBagInfo::ItemBagInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ItemBagInfo)
}
ItemBagInfo::ItemBagInfo(const ItemBagInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_items_(from.pb_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ItemBagInfo)
}

void ItemBagInfo::SharedCtor() {
  _cached_size_ = 0;
}

ItemBagInfo::~ItemBagInfo() {
  // @@protoc_insertion_point(destructor:ItemBagInfo)
  SharedDtor();
}

void ItemBagInfo::SharedDtor() {
}

void ItemBagInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemBagInfo::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemBagInfo& ItemBagInfo::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

ItemBagInfo* ItemBagInfo::New(::google::protobuf::Arena* arena) const {
  ItemBagInfo* n = new ItemBagInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemBagInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ItemBagInfo)
  pb_items_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ItemBagInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ItemBagInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ItemInfo pb_items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ItemBagInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ItemBagInfo)
  return false;
#undef DO_
}

void ItemBagInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ItemBagInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ItemInfo pb_items = 1;
  for (unsigned int i = 0, n = this->pb_items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_items(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ItemBagInfo)
}

::google::protobuf::uint8* ItemBagInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ItemBagInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ItemInfo pb_items = 1;
  for (unsigned int i = 0, n = this->pb_items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_items(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ItemBagInfo)
  return target;
}

size_t ItemBagInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ItemBagInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .ItemInfo pb_items = 1;
  {
    unsigned int count = this->pb_items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemBagInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ItemBagInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemBagInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemBagInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ItemBagInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ItemBagInfo)
    MergeFrom(*source);
  }
}

void ItemBagInfo::MergeFrom(const ItemBagInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ItemBagInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_items_.MergeFrom(from.pb_items_);
}

void ItemBagInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ItemBagInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemBagInfo::CopyFrom(const ItemBagInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ItemBagInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemBagInfo::IsInitialized() const {
  return true;
}

void ItemBagInfo::Swap(ItemBagInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemBagInfo::InternalSwap(ItemBagInfo* other) {
  pb_items_.InternalSwap(&other->pb_items_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemBagInfo::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemBagInfo

// repeated .ItemInfo pb_items = 1;
int ItemBagInfo::pb_items_size() const {
  return pb_items_.size();
}
void ItemBagInfo::clear_pb_items() {
  pb_items_.Clear();
}
const ::ItemInfo& ItemBagInfo::pb_items(int index) const {
  // @@protoc_insertion_point(field_get:ItemBagInfo.pb_items)
  return pb_items_.Get(index);
}
::ItemInfo* ItemBagInfo::mutable_pb_items(int index) {
  // @@protoc_insertion_point(field_mutable:ItemBagInfo.pb_items)
  return pb_items_.Mutable(index);
}
::ItemInfo* ItemBagInfo::add_pb_items() {
  // @@protoc_insertion_point(field_add:ItemBagInfo.pb_items)
  return pb_items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ItemInfo >*
ItemBagInfo::mutable_pb_items() {
  // @@protoc_insertion_point(field_mutable_list:ItemBagInfo.pb_items)
  return &pb_items_;
}
const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
ItemBagInfo::pb_items() const {
  // @@protoc_insertion_point(field_list:ItemBagInfo.pb_items)
  return pb_items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailInfo::kMailIdFieldNumber;
const int MailInfo::kExpirationTimeFieldNumber;
const int MailInfo::kGuidFieldNumber;
const int MailInfo::kSendGuidFieldNumber;
const int MailInfo::kSendNameFieldNumber;
const int MailInfo::kTitleFieldNumber;
const int MailInfo::kContentFieldNumber;
const int MailInfo::kPbAttachmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailInfo::MailInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MailInfo)
}
MailInfo::MailInfo(const MailInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_attachment_(from.pb_attachment_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mail_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mail_id()) {
    mail_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_id_);
  }
  send_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_send_name()) {
    send_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.send_name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  ::memcpy(&expiration_time_, &from.expiration_time_,
    reinterpret_cast<char*>(&send_guid_) -
    reinterpret_cast<char*>(&expiration_time_) + sizeof(send_guid_));
  // @@protoc_insertion_point(copy_constructor:MailInfo)
}

void MailInfo::SharedCtor() {
  _cached_size_ = 0;
  mail_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  send_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&expiration_time_, 0, reinterpret_cast<char*>(&send_guid_) -
    reinterpret_cast<char*>(&expiration_time_) + sizeof(send_guid_));
}

MailInfo::~MailInfo() {
  // @@protoc_insertion_point(destructor:MailInfo)
  SharedDtor();
}

void MailInfo::SharedDtor() {
  mail_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  send_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MailInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailInfo::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailInfo& MailInfo::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

MailInfo* MailInfo::New(::google::protobuf::Arena* arena) const {
  MailInfo* n = new MailInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MailInfo)
  pb_attachment_.Clear();
  if (_has_bits_[0 / 32] & 15u) {
    if (has_mail_id()) {
      GOOGLE_DCHECK(!mail_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mail_id_.UnsafeRawStringPointer())->clear();
    }
    if (has_send_name()) {
      GOOGLE_DCHECK(!send_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*send_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_title()) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (has_content()) {
      GOOGLE_DCHECK(!content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*content_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 112u) {
    ::memset(&expiration_time_, 0, reinterpret_cast<char*>(&send_guid_) -
      reinterpret_cast<char*>(&expiration_time_) + sizeof(send_guid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MailInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MailInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string mail_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mail_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mail_id().data(), this->mail_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MailInfo.mail_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 expiration_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_expiration_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &expiration_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 send_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_send_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &send_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string send_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_send_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->send_name().data(), this->send_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MailInfo.send_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MailInfo.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string content = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MailInfo.content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ItemInfo pb_attachment = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_attachment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MailInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MailInfo)
  return false;
#undef DO_
}

void MailInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MailInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string mail_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_id().data(), this->mail_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MailInfo.mail_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mail_id(), output);
  }

  // optional int32 expiration_time = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->expiration_time(), output);
  }

  // optional int32 guid = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->guid(), output);
  }

  // optional int32 send_guid = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->send_guid(), output);
  }

  // optional string send_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->send_name().data(), this->send_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MailInfo.send_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->send_name(), output);
  }

  // optional string title = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MailInfo.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->title(), output);
  }

  // optional string content = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MailInfo.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->content(), output);
  }

  // repeated .ItemInfo pb_attachment = 8;
  for (unsigned int i = 0, n = this->pb_attachment_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->pb_attachment(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MailInfo)
}

::google::protobuf::uint8* MailInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MailInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string mail_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_id().data(), this->mail_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MailInfo.mail_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mail_id(), target);
  }

  // optional int32 expiration_time = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->expiration_time(), target);
  }

  // optional int32 guid = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->guid(), target);
  }

  // optional int32 send_guid = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->send_guid(), target);
  }

  // optional string send_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->send_name().data(), this->send_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MailInfo.send_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->send_name(), target);
  }

  // optional string title = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MailInfo.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->title(), target);
  }

  // optional string content = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MailInfo.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->content(), target);
  }

  // repeated .ItemInfo pb_attachment = 8;
  for (unsigned int i = 0, n = this->pb_attachment_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->pb_attachment(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MailInfo)
  return target;
}

size_t MailInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MailInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .ItemInfo pb_attachment = 8;
  {
    unsigned int count = this->pb_attachment_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_attachment(i));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional string mail_id = 1;
    if (has_mail_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mail_id());
    }

    // optional string send_name = 5;
    if (has_send_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->send_name());
    }

    // optional string title = 6;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string content = 7;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional int32 expiration_time = 2;
    if (has_expiration_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->expiration_time());
    }

    // optional int32 guid = 3;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

    // optional int32 send_guid = 4;
    if (has_send_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->send_guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MailInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MailInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MailInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MailInfo)
    MergeFrom(*source);
  }
}

void MailInfo::MergeFrom(const MailInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MailInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_attachment_.MergeFrom(from.pb_attachment_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_mail_id();
      mail_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_send_name();
      send_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.send_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (cached_has_bits & 0x00000010u) {
      expiration_time_ = from.expiration_time_;
    }
    if (cached_has_bits & 0x00000020u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000040u) {
      send_guid_ = from.send_guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MailInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MailInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailInfo::CopyFrom(const MailInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MailInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailInfo::IsInitialized() const {
  return true;
}

void MailInfo::Swap(MailInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailInfo::InternalSwap(MailInfo* other) {
  pb_attachment_.InternalSwap(&other->pb_attachment_);
  mail_id_.Swap(&other->mail_id_);
  send_name_.Swap(&other->send_name_);
  title_.Swap(&other->title_);
  content_.Swap(&other->content_);
  std::swap(expiration_time_, other->expiration_time_);
  std::swap(guid_, other->guid_);
  std::swap(send_guid_, other->send_guid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailInfo::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailInfo

// optional string mail_id = 1;
bool MailInfo::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MailInfo::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
void MailInfo::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void MailInfo::clear_mail_id() {
  mail_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mail_id();
}
const ::std::string& MailInfo::mail_id() const {
  // @@protoc_insertion_point(field_get:MailInfo.mail_id)
  return mail_id_.GetNoArena();
}
void MailInfo::set_mail_id(const ::std::string& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MailInfo.mail_id)
}
#if LANG_CXX11
void MailInfo::set_mail_id(::std::string&& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MailInfo.mail_id)
}
#endif
void MailInfo::set_mail_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MailInfo.mail_id)
}
void MailInfo::set_mail_id(const char* value, size_t size) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MailInfo.mail_id)
}
::std::string* MailInfo::mutable_mail_id() {
  set_has_mail_id();
  // @@protoc_insertion_point(field_mutable:MailInfo.mail_id)
  return mail_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailInfo::release_mail_id() {
  // @@protoc_insertion_point(field_release:MailInfo.mail_id)
  clear_has_mail_id();
  return mail_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailInfo::set_allocated_mail_id(::std::string* mail_id) {
  if (mail_id != NULL) {
    set_has_mail_id();
  } else {
    clear_has_mail_id();
  }
  mail_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_id);
  // @@protoc_insertion_point(field_set_allocated:MailInfo.mail_id)
}

// optional int32 expiration_time = 2;
bool MailInfo::has_expiration_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MailInfo::set_has_expiration_time() {
  _has_bits_[0] |= 0x00000010u;
}
void MailInfo::clear_has_expiration_time() {
  _has_bits_[0] &= ~0x00000010u;
}
void MailInfo::clear_expiration_time() {
  expiration_time_ = 0;
  clear_has_expiration_time();
}
::google::protobuf::int32 MailInfo::expiration_time() const {
  // @@protoc_insertion_point(field_get:MailInfo.expiration_time)
  return expiration_time_;
}
void MailInfo::set_expiration_time(::google::protobuf::int32 value) {
  set_has_expiration_time();
  expiration_time_ = value;
  // @@protoc_insertion_point(field_set:MailInfo.expiration_time)
}

// optional int32 guid = 3;
bool MailInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MailInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000020u;
}
void MailInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000020u;
}
void MailInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 MailInfo::guid() const {
  // @@protoc_insertion_point(field_get:MailInfo.guid)
  return guid_;
}
void MailInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:MailInfo.guid)
}

// optional int32 send_guid = 4;
bool MailInfo::has_send_guid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void MailInfo::set_has_send_guid() {
  _has_bits_[0] |= 0x00000040u;
}
void MailInfo::clear_has_send_guid() {
  _has_bits_[0] &= ~0x00000040u;
}
void MailInfo::clear_send_guid() {
  send_guid_ = 0;
  clear_has_send_guid();
}
::google::protobuf::int32 MailInfo::send_guid() const {
  // @@protoc_insertion_point(field_get:MailInfo.send_guid)
  return send_guid_;
}
void MailInfo::set_send_guid(::google::protobuf::int32 value) {
  set_has_send_guid();
  send_guid_ = value;
  // @@protoc_insertion_point(field_set:MailInfo.send_guid)
}

// optional string send_name = 5;
bool MailInfo::has_send_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MailInfo::set_has_send_name() {
  _has_bits_[0] |= 0x00000002u;
}
void MailInfo::clear_has_send_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void MailInfo::clear_send_name() {
  send_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_send_name();
}
const ::std::string& MailInfo::send_name() const {
  // @@protoc_insertion_point(field_get:MailInfo.send_name)
  return send_name_.GetNoArena();
}
void MailInfo::set_send_name(const ::std::string& value) {
  set_has_send_name();
  send_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MailInfo.send_name)
}
#if LANG_CXX11
void MailInfo::set_send_name(::std::string&& value) {
  set_has_send_name();
  send_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MailInfo.send_name)
}
#endif
void MailInfo::set_send_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_send_name();
  send_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MailInfo.send_name)
}
void MailInfo::set_send_name(const char* value, size_t size) {
  set_has_send_name();
  send_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MailInfo.send_name)
}
::std::string* MailInfo::mutable_send_name() {
  set_has_send_name();
  // @@protoc_insertion_point(field_mutable:MailInfo.send_name)
  return send_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailInfo::release_send_name() {
  // @@protoc_insertion_point(field_release:MailInfo.send_name)
  clear_has_send_name();
  return send_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailInfo::set_allocated_send_name(::std::string* send_name) {
  if (send_name != NULL) {
    set_has_send_name();
  } else {
    clear_has_send_name();
  }
  send_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), send_name);
  // @@protoc_insertion_point(field_set_allocated:MailInfo.send_name)
}

// optional string title = 6;
bool MailInfo::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MailInfo::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
void MailInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
void MailInfo::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& MailInfo::title() const {
  // @@protoc_insertion_point(field_get:MailInfo.title)
  return title_.GetNoArena();
}
void MailInfo::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MailInfo.title)
}
#if LANG_CXX11
void MailInfo::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MailInfo.title)
}
#endif
void MailInfo::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MailInfo.title)
}
void MailInfo::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MailInfo.title)
}
::std::string* MailInfo::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:MailInfo.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailInfo::release_title() {
  // @@protoc_insertion_point(field_release:MailInfo.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailInfo::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:MailInfo.title)
}

// optional string content = 7;
bool MailInfo::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MailInfo::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
void MailInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
void MailInfo::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
const ::std::string& MailInfo::content() const {
  // @@protoc_insertion_point(field_get:MailInfo.content)
  return content_.GetNoArena();
}
void MailInfo::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MailInfo.content)
}
#if LANG_CXX11
void MailInfo::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MailInfo.content)
}
#endif
void MailInfo::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MailInfo.content)
}
void MailInfo::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MailInfo.content)
}
::std::string* MailInfo::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:MailInfo.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailInfo::release_content() {
  // @@protoc_insertion_point(field_release:MailInfo.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailInfo::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:MailInfo.content)
}

// repeated .ItemInfo pb_attachment = 8;
int MailInfo::pb_attachment_size() const {
  return pb_attachment_.size();
}
void MailInfo::clear_pb_attachment() {
  pb_attachment_.Clear();
}
const ::ItemInfo& MailInfo::pb_attachment(int index) const {
  // @@protoc_insertion_point(field_get:MailInfo.pb_attachment)
  return pb_attachment_.Get(index);
}
::ItemInfo* MailInfo::mutable_pb_attachment(int index) {
  // @@protoc_insertion_point(field_mutable:MailInfo.pb_attachment)
  return pb_attachment_.Mutable(index);
}
::ItemInfo* MailInfo::add_pb_attachment() {
  // @@protoc_insertion_point(field_add:MailInfo.pb_attachment)
  return pb_attachment_.Add();
}
::google::protobuf::RepeatedPtrField< ::ItemInfo >*
MailInfo::mutable_pb_attachment() {
  // @@protoc_insertion_point(field_mutable_list:MailInfo.pb_attachment)
  return &pb_attachment_;
}
const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
MailInfo::pb_attachment() const {
  // @@protoc_insertion_point(field_list:MailInfo.pb_attachment)
  return pb_attachment_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailListInfo::kPbMailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailListInfo::MailListInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MailListInfo)
}
MailListInfo::MailListInfo(const MailListInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_mails_(from.pb_mails_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MailListInfo)
}

void MailListInfo::SharedCtor() {
  _cached_size_ = 0;
}

MailListInfo::~MailListInfo() {
  // @@protoc_insertion_point(destructor:MailListInfo)
  SharedDtor();
}

void MailListInfo::SharedDtor() {
}

void MailListInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailListInfo::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailListInfo& MailListInfo::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

MailListInfo* MailListInfo::New(::google::protobuf::Arena* arena) const {
  MailListInfo* n = new MailListInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailListInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MailListInfo)
  pb_mails_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MailListInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MailListInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MailInfo pb_mails = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_mails()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MailListInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MailListInfo)
  return false;
#undef DO_
}

void MailListInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MailListInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MailInfo pb_mails = 1;
  for (unsigned int i = 0, n = this->pb_mails_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_mails(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MailListInfo)
}

::google::protobuf::uint8* MailListInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MailListInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MailInfo pb_mails = 1;
  for (unsigned int i = 0, n = this->pb_mails_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_mails(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MailListInfo)
  return target;
}

size_t MailListInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MailListInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MailInfo pb_mails = 1;
  {
    unsigned int count = this->pb_mails_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_mails(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailListInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MailListInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MailListInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailListInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MailListInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MailListInfo)
    MergeFrom(*source);
  }
}

void MailListInfo::MergeFrom(const MailListInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MailListInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_mails_.MergeFrom(from.pb_mails_);
}

void MailListInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MailListInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailListInfo::CopyFrom(const MailListInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MailListInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailListInfo::IsInitialized() const {
  return true;
}

void MailListInfo::Swap(MailListInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailListInfo::InternalSwap(MailListInfo* other) {
  pb_mails_.InternalSwap(&other->pb_mails_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailListInfo::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailListInfo

// repeated .MailInfo pb_mails = 1;
int MailListInfo::pb_mails_size() const {
  return pb_mails_.size();
}
void MailListInfo::clear_pb_mails() {
  pb_mails_.Clear();
}
const ::MailInfo& MailListInfo::pb_mails(int index) const {
  // @@protoc_insertion_point(field_get:MailListInfo.pb_mails)
  return pb_mails_.Get(index);
}
::MailInfo* MailListInfo::mutable_pb_mails(int index) {
  // @@protoc_insertion_point(field_mutable:MailListInfo.pb_mails)
  return pb_mails_.Mutable(index);
}
::MailInfo* MailListInfo::add_pb_mails() {
  // @@protoc_insertion_point(field_add:MailListInfo.pb_mails)
  return pb_mails_.Add();
}
::google::protobuf::RepeatedPtrField< ::MailInfo >*
MailListInfo::mutable_pb_mails() {
  // @@protoc_insertion_point(field_mutable_list:MailListInfo.pb_mails)
  return &pb_mails_;
}
const ::google::protobuf::RepeatedPtrField< ::MailInfo >&
MailListInfo::pb_mails() const {
  // @@protoc_insertion_point(field_list:MailListInfo.pb_mails)
  return pb_mails_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BankStatement::kSerialFieldNumber;
const int BankStatement::kGuidFieldNumber;
const int BankStatement::kTimeFieldNumber;
const int BankStatement::kOptFieldNumber;
const int BankStatement::kTargetFieldNumber;
const int BankStatement::kMoneyFieldNumber;
const int BankStatement::kBankBalanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BankStatement::BankStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BankStatement)
}
BankStatement::BankStatement(const BankStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_target()) {
    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  ::memcpy(&serial_, &from.serial_,
    reinterpret_cast<char*>(&opt_) -
    reinterpret_cast<char*>(&serial_) + sizeof(opt_));
  // @@protoc_insertion_point(copy_constructor:BankStatement)
}

void BankStatement::SharedCtor() {
  _cached_size_ = 0;
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serial_, 0, reinterpret_cast<char*>(&opt_) -
    reinterpret_cast<char*>(&serial_) + sizeof(opt_));
}

BankStatement::~BankStatement() {
  // @@protoc_insertion_point(destructor:BankStatement)
  SharedDtor();
}

void BankStatement::SharedDtor() {
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BankStatement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BankStatement::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BankStatement& BankStatement::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

BankStatement* BankStatement::New(::google::protobuf::Arena* arena) const {
  BankStatement* n = new BankStatement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BankStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:BankStatement)
  if (has_target()) {
    GOOGLE_DCHECK(!target_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*target_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 126u) {
    ::memset(&serial_, 0, reinterpret_cast<char*>(&opt_) -
      reinterpret_cast<char*>(&serial_) + sizeof(opt_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BankStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BankStatement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 serial = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_serial();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 opt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_opt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string target = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->target().data(), this->target().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BankStatement.target");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 bank_balance = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_bank_balance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bank_balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BankStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BankStatement)
  return false;
#undef DO_
}

void BankStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BankStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 serial = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serial(), output);
  }

  // optional int32 guid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->guid(), output);
  }

  // optional int32 time = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->time(), output);
  }

  // optional int32 opt = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->opt(), output);
  }

  // optional string target = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target().data(), this->target().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BankStatement.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->target(), output);
  }

  // optional int64 money = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->money(), output);
  }

  // optional int64 bank_balance = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->bank_balance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BankStatement)
}

::google::protobuf::uint8* BankStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BankStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 serial = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serial(), target);
  }

  // optional int32 guid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->guid(), target);
  }

  // optional int32 time = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->time(), target);
  }

  // optional int32 opt = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->opt(), target);
  }

  // optional string target = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target().data(), this->target().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BankStatement.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->target(), target);
  }

  // optional int64 money = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->money(), target);
  }

  // optional int64 bank_balance = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->bank_balance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BankStatement)
  return target;
}

size_t BankStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BankStatement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string target = 5;
    if (has_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->target());
    }

    // optional int64 serial = 1;
    if (has_serial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serial());
    }

    // optional int32 guid = 2;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

    // optional int32 time = 3;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }

    // optional int64 money = 6;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional int64 bank_balance = 7;
    if (has_bank_balance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bank_balance());
    }

    // optional int32 opt = 4;
    if (has_opt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opt());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BankStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BankStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const BankStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BankStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BankStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BankStatement)
    MergeFrom(*source);
  }
}

void BankStatement::MergeFrom(const BankStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BankStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_target();
      target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
    }
    if (cached_has_bits & 0x00000002u) {
      serial_ = from.serial_;
    }
    if (cached_has_bits & 0x00000004u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000008u) {
      time_ = from.time_;
    }
    if (cached_has_bits & 0x00000010u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000020u) {
      bank_balance_ = from.bank_balance_;
    }
    if (cached_has_bits & 0x00000040u) {
      opt_ = from.opt_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BankStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BankStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BankStatement::CopyFrom(const BankStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BankStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BankStatement::IsInitialized() const {
  return true;
}

void BankStatement::Swap(BankStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BankStatement::InternalSwap(BankStatement* other) {
  target_.Swap(&other->target_);
  std::swap(serial_, other->serial_);
  std::swap(guid_, other->guid_);
  std::swap(time_, other->time_);
  std::swap(money_, other->money_);
  std::swap(bank_balance_, other->bank_balance_);
  std::swap(opt_, other->opt_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BankStatement::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BankStatement

// optional int64 serial = 1;
bool BankStatement::has_serial() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BankStatement::set_has_serial() {
  _has_bits_[0] |= 0x00000002u;
}
void BankStatement::clear_has_serial() {
  _has_bits_[0] &= ~0x00000002u;
}
void BankStatement::clear_serial() {
  serial_ = GOOGLE_LONGLONG(0);
  clear_has_serial();
}
::google::protobuf::int64 BankStatement::serial() const {
  // @@protoc_insertion_point(field_get:BankStatement.serial)
  return serial_;
}
void BankStatement::set_serial(::google::protobuf::int64 value) {
  set_has_serial();
  serial_ = value;
  // @@protoc_insertion_point(field_set:BankStatement.serial)
}

// optional int32 guid = 2;
bool BankStatement::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BankStatement::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
void BankStatement::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BankStatement::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 BankStatement::guid() const {
  // @@protoc_insertion_point(field_get:BankStatement.guid)
  return guid_;
}
void BankStatement::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:BankStatement.guid)
}

// optional int32 time = 3;
bool BankStatement::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BankStatement::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BankStatement::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BankStatement::clear_time() {
  time_ = 0;
  clear_has_time();
}
::google::protobuf::int32 BankStatement::time() const {
  // @@protoc_insertion_point(field_get:BankStatement.time)
  return time_;
}
void BankStatement::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:BankStatement.time)
}

// optional int32 opt = 4;
bool BankStatement::has_opt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BankStatement::set_has_opt() {
  _has_bits_[0] |= 0x00000040u;
}
void BankStatement::clear_has_opt() {
  _has_bits_[0] &= ~0x00000040u;
}
void BankStatement::clear_opt() {
  opt_ = 0;
  clear_has_opt();
}
::google::protobuf::int32 BankStatement::opt() const {
  // @@protoc_insertion_point(field_get:BankStatement.opt)
  return opt_;
}
void BankStatement::set_opt(::google::protobuf::int32 value) {
  set_has_opt();
  opt_ = value;
  // @@protoc_insertion_point(field_set:BankStatement.opt)
}

// optional string target = 5;
bool BankStatement::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BankStatement::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
void BankStatement::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
void BankStatement::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target();
}
const ::std::string& BankStatement::target() const {
  // @@protoc_insertion_point(field_get:BankStatement.target)
  return target_.GetNoArena();
}
void BankStatement::set_target(const ::std::string& value) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankStatement.target)
}
#if LANG_CXX11
void BankStatement::set_target(::std::string&& value) {
  set_has_target();
  target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankStatement.target)
}
#endif
void BankStatement::set_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankStatement.target)
}
void BankStatement::set_target(const char* value, size_t size) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankStatement.target)
}
::std::string* BankStatement::mutable_target() {
  set_has_target();
  // @@protoc_insertion_point(field_mutable:BankStatement.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BankStatement::release_target() {
  // @@protoc_insertion_point(field_release:BankStatement.target)
  clear_has_target();
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BankStatement::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    set_has_target();
  } else {
    clear_has_target();
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:BankStatement.target)
}

// optional int64 money = 6;
bool BankStatement::has_money() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BankStatement::set_has_money() {
  _has_bits_[0] |= 0x00000010u;
}
void BankStatement::clear_has_money() {
  _has_bits_[0] &= ~0x00000010u;
}
void BankStatement::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 BankStatement::money() const {
  // @@protoc_insertion_point(field_get:BankStatement.money)
  return money_;
}
void BankStatement::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:BankStatement.money)
}

// optional int64 bank_balance = 7;
bool BankStatement::has_bank_balance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BankStatement::set_has_bank_balance() {
  _has_bits_[0] |= 0x00000020u;
}
void BankStatement::clear_has_bank_balance() {
  _has_bits_[0] &= ~0x00000020u;
}
void BankStatement::clear_bank_balance() {
  bank_balance_ = GOOGLE_LONGLONG(0);
  clear_has_bank_balance();
}
::google::protobuf::int64 BankStatement::bank_balance() const {
  // @@protoc_insertion_point(field_get:BankStatement.bank_balance)
  return bank_balance_;
}
void BankStatement::set_bank_balance(::google::protobuf::int64 value) {
  set_has_bank_balance();
  bank_balance_ = value;
  // @@protoc_insertion_point(field_set:BankStatement.bank_balance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankItem::kRankFieldNumber;
const int RankItem::kGuidFieldNumber;
const int RankItem::kNicknameFieldNumber;
const int RankItem::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankItem::RankItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RankItem)
}
RankItem::RankItem(const RankItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&rank_, &from.rank_,
    reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&rank_) + sizeof(money_));
  // @@protoc_insertion_point(copy_constructor:RankItem)
}

void RankItem::SharedCtor() {
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rank_, 0, reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&rank_) + sizeof(money_));
}

RankItem::~RankItem() {
  // @@protoc_insertion_point(destructor:RankItem)
  SharedDtor();
}

void RankItem::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RankItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankItem::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RankItem& RankItem::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

RankItem* RankItem::New(::google::protobuf::Arena* arena) const {
  RankItem* n = new RankItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankItem::Clear() {
// @@protoc_insertion_point(message_clear_start:RankItem)
  if (has_nickname()) {
    GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*nickname_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&rank_, 0, reinterpret_cast<char*>(&money_) -
      reinterpret_cast<char*>(&rank_) + sizeof(money_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RankItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RankItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rank = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "RankItem.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RankItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RankItem)
  return false;
#undef DO_
}

void RankItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RankItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 rank = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }

  // optional int32 guid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->guid(), output);
  }

  // optional string nickname = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RankItem.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nickname(), output);
  }

  // optional int64 money = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RankItem)
}

::google::protobuf::uint8* RankItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RankItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 rank = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }

  // optional int32 guid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->guid(), target);
  }

  // optional string nickname = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RankItem.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  // optional int64 money = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RankItem)
  return target;
}

size_t RankItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RankItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string nickname = 3;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional int32 rank = 1;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank());
    }

    // optional int32 guid = 2;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

    // optional int64 money = 4;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RankItem)
  GOOGLE_DCHECK_NE(&from, this);
  const RankItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RankItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RankItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RankItem)
    MergeFrom(*source);
  }
}

void RankItem::MergeFrom(const RankItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RankItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      rank_ = from.rank_;
    }
    if (cached_has_bits & 0x00000004u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000008u) {
      money_ = from.money_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RankItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RankItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankItem::CopyFrom(const RankItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RankItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankItem::IsInitialized() const {
  return true;
}

void RankItem::Swap(RankItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankItem::InternalSwap(RankItem* other) {
  nickname_.Swap(&other->nickname_);
  std::swap(rank_, other->rank_);
  std::swap(guid_, other->guid_);
  std::swap(money_, other->money_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RankItem::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RankItem

// optional int32 rank = 1;
bool RankItem::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RankItem::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
void RankItem::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
void RankItem::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
::google::protobuf::int32 RankItem::rank() const {
  // @@protoc_insertion_point(field_get:RankItem.rank)
  return rank_;
}
void RankItem::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:RankItem.rank)
}

// optional int32 guid = 2;
bool RankItem::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RankItem::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
void RankItem::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
void RankItem::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 RankItem::guid() const {
  // @@protoc_insertion_point(field_get:RankItem.guid)
  return guid_;
}
void RankItem::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:RankItem.guid)
}

// optional string nickname = 3;
bool RankItem::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RankItem::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
void RankItem::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
void RankItem::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& RankItem::nickname() const {
  // @@protoc_insertion_point(field_get:RankItem.nickname)
  return nickname_.GetNoArena();
}
void RankItem::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RankItem.nickname)
}
#if LANG_CXX11
void RankItem::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RankItem.nickname)
}
#endif
void RankItem::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RankItem.nickname)
}
void RankItem::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RankItem.nickname)
}
::std::string* RankItem::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:RankItem.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RankItem::release_nickname() {
  // @@protoc_insertion_point(field_release:RankItem.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RankItem::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:RankItem.nickname)
}

// optional int64 money = 4;
bool RankItem::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RankItem::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
void RankItem::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
void RankItem::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 RankItem::money() const {
  // @@protoc_insertion_point(field_get:RankItem.money)
  return money_;
}
void RankItem::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:RankItem.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankList::kPbRankListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankList::RankList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RankList)
}
RankList::RankList(const RankList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pb_rank_list_(from.pb_rank_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:RankList)
}

void RankList::SharedCtor() {
  _cached_size_ = 0;
}

RankList::~RankList() {
  // @@protoc_insertion_point(destructor:RankList)
  SharedDtor();
}

void RankList::SharedDtor() {
}

void RankList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankList::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RankList& RankList::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

RankList* RankList::New(::google::protobuf::Arena* arena) const {
  RankList* n = new RankList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankList::Clear() {
// @@protoc_insertion_point(message_clear_start:RankList)
  pb_rank_list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RankList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RankList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .RankItem pb_rank_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pb_rank_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RankList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RankList)
  return false;
#undef DO_
}

void RankList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RankList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .RankItem pb_rank_list = 1;
  for (unsigned int i = 0, n = this->pb_rank_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pb_rank_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RankList)
}

::google::protobuf::uint8* RankList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RankList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .RankItem pb_rank_list = 1;
  for (unsigned int i = 0, n = this->pb_rank_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pb_rank_list(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RankList)
  return target;
}

size_t RankList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RankList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .RankItem pb_rank_list = 1;
  {
    unsigned int count = this->pb_rank_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pb_rank_list(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RankList)
  GOOGLE_DCHECK_NE(&from, this);
  const RankList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RankList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RankList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RankList)
    MergeFrom(*source);
  }
}

void RankList::MergeFrom(const RankList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RankList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pb_rank_list_.MergeFrom(from.pb_rank_list_);
}

void RankList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RankList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankList::CopyFrom(const RankList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RankList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankList::IsInitialized() const {
  return true;
}

void RankList::Swap(RankList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankList::InternalSwap(RankList* other) {
  pb_rank_list_.InternalSwap(&other->pb_rank_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RankList::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RankList

// repeated .RankItem pb_rank_list = 1;
int RankList::pb_rank_list_size() const {
  return pb_rank_list_.size();
}
void RankList::clear_pb_rank_list() {
  pb_rank_list_.Clear();
}
const ::RankItem& RankList::pb_rank_list(int index) const {
  // @@protoc_insertion_point(field_get:RankList.pb_rank_list)
  return pb_rank_list_.Get(index);
}
::RankItem* RankList::mutable_pb_rank_list(int index) {
  // @@protoc_insertion_point(field_mutable:RankList.pb_rank_list)
  return pb_rank_list_.Mutable(index);
}
::RankItem* RankList::add_pb_rank_list() {
  // @@protoc_insertion_point(field_add:RankList.pb_rank_list)
  return pb_rank_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::RankItem >*
RankList::mutable_pb_rank_list() {
  // @@protoc_insertion_point(field_mutable_list:RankList.pb_rank_list)
  return &pb_rank_list_;
}
const ::google::protobuf::RepeatedPtrField< ::RankItem >&
RankList::pb_rank_list() const {
  // @@protoc_insertion_point(field_list:RankList.pb_rank_list)
  return pb_rank_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AndroidInfo::kGuidFieldNumber;
const int AndroidInfo::kAccountFieldNumber;
const int AndroidInfo::kNicknameFieldNumber;
const int AndroidInfo::kGameIdFieldNumber;
const int AndroidInfo::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AndroidInfo::AndroidInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AndroidInfo)
}
AndroidInfo::AndroidInfo(const AndroidInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&guid_, &from.guid_,
    reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&guid_) + sizeof(money_));
  // @@protoc_insertion_point(copy_constructor:AndroidInfo)
}

void AndroidInfo::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&guid_) + sizeof(money_));
}

AndroidInfo::~AndroidInfo() {
  // @@protoc_insertion_point(destructor:AndroidInfo)
  SharedDtor();
}

void AndroidInfo::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AndroidInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AndroidInfo::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AndroidInfo& AndroidInfo::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

AndroidInfo* AndroidInfo::New(::google::protobuf::Arena* arena) const {
  AndroidInfo* n = new AndroidInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AndroidInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AndroidInfo)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_nickname()) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&guid_, 0, reinterpret_cast<char*>(&money_) -
      reinterpret_cast<char*>(&guid_) + sizeof(money_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AndroidInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AndroidInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AndroidInfo.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AndroidInfo.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 game_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 money = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AndroidInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AndroidInfo)
  return false;
#undef DO_
}

void AndroidInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AndroidInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guid(), output);
  }

  // optional string account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AndroidInfo.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // optional string nickname = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AndroidInfo.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nickname(), output);
  }

  // optional int32 game_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->game_id(), output);
  }

  // optional int64 money = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AndroidInfo)
}

::google::protobuf::uint8* AndroidInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AndroidInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guid(), target);
  }

  // optional string account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AndroidInfo.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // optional string nickname = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AndroidInfo.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  // optional int32 game_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->game_id(), target);
  }

  // optional int64 money = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AndroidInfo)
  return target;
}

size_t AndroidInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AndroidInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string nickname = 3;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional int32 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

    // optional int32 game_id = 4;
    if (has_game_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_id());
    }

    // optional int64 money = 5;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AndroidInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AndroidInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AndroidInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AndroidInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AndroidInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AndroidInfo)
    MergeFrom(*source);
  }
}

void AndroidInfo::MergeFrom(const AndroidInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AndroidInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000004u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000008u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      money_ = from.money_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AndroidInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AndroidInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AndroidInfo::CopyFrom(const AndroidInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AndroidInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AndroidInfo::IsInitialized() const {
  return true;
}

void AndroidInfo::Swap(AndroidInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AndroidInfo::InternalSwap(AndroidInfo* other) {
  account_.Swap(&other->account_);
  nickname_.Swap(&other->nickname_);
  std::swap(guid_, other->guid_);
  std::swap(game_id_, other->game_id_);
  std::swap(money_, other->money_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AndroidInfo::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AndroidInfo

// optional int32 guid = 1;
bool AndroidInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AndroidInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
void AndroidInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
void AndroidInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 AndroidInfo::guid() const {
  // @@protoc_insertion_point(field_get:AndroidInfo.guid)
  return guid_;
}
void AndroidInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:AndroidInfo.guid)
}

// optional string account = 2;
bool AndroidInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AndroidInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void AndroidInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void AndroidInfo::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& AndroidInfo::account() const {
  // @@protoc_insertion_point(field_get:AndroidInfo.account)
  return account_.GetNoArena();
}
void AndroidInfo::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AndroidInfo.account)
}
#if LANG_CXX11
void AndroidInfo::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AndroidInfo.account)
}
#endif
void AndroidInfo::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AndroidInfo.account)
}
void AndroidInfo::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AndroidInfo.account)
}
::std::string* AndroidInfo::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:AndroidInfo.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AndroidInfo::release_account() {
  // @@protoc_insertion_point(field_release:AndroidInfo.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AndroidInfo::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:AndroidInfo.account)
}

// optional string nickname = 3;
bool AndroidInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AndroidInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
void AndroidInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void AndroidInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& AndroidInfo::nickname() const {
  // @@protoc_insertion_point(field_get:AndroidInfo.nickname)
  return nickname_.GetNoArena();
}
void AndroidInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AndroidInfo.nickname)
}
#if LANG_CXX11
void AndroidInfo::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AndroidInfo.nickname)
}
#endif
void AndroidInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AndroidInfo.nickname)
}
void AndroidInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AndroidInfo.nickname)
}
::std::string* AndroidInfo::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:AndroidInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AndroidInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:AndroidInfo.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AndroidInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:AndroidInfo.nickname)
}

// optional int32 game_id = 4;
bool AndroidInfo::has_game_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AndroidInfo::set_has_game_id() {
  _has_bits_[0] |= 0x00000008u;
}
void AndroidInfo::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void AndroidInfo::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
::google::protobuf::int32 AndroidInfo::game_id() const {
  // @@protoc_insertion_point(field_get:AndroidInfo.game_id)
  return game_id_;
}
void AndroidInfo::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:AndroidInfo.game_id)
}

// optional int64 money = 5;
bool AndroidInfo::has_money() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AndroidInfo::set_has_money() {
  _has_bits_[0] |= 0x00000010u;
}
void AndroidInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000010u;
}
void AndroidInfo::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 AndroidInfo::money() const {
  // @@protoc_insertion_point(field_get:AndroidInfo.money)
  return money_;
}
void AndroidInfo::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:AndroidInfo.money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CashFalse::kGuidFieldNumber;
const int CashFalse::kOrderIdFieldNumber;
const int CashFalse::kCoinsFieldNumber;
const int CashFalse::kStatusFieldNumber;
const int CashFalse::kStatusCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CashFalse::CashFalse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CashFalse)
}
CashFalse::CashFalse(const CashFalse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    reinterpret_cast<char*>(&status_c_) -
    reinterpret_cast<char*>(&guid_) + sizeof(status_c_));
  // @@protoc_insertion_point(copy_constructor:CashFalse)
}

void CashFalse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&guid_, 0, reinterpret_cast<char*>(&status_c_) -
    reinterpret_cast<char*>(&guid_) + sizeof(status_c_));
}

CashFalse::~CashFalse() {
  // @@protoc_insertion_point(destructor:CashFalse)
  SharedDtor();
}

void CashFalse::SharedDtor() {
}

void CashFalse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CashFalse::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CashFalse& CashFalse::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CashFalse* CashFalse::New(::google::protobuf::Arena* arena) const {
  CashFalse* n = new CashFalse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CashFalse::Clear() {
// @@protoc_insertion_point(message_clear_start:CashFalse)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&guid_, 0, reinterpret_cast<char*>(&status_c_) -
      reinterpret_cast<char*>(&guid_) + sizeof(status_c_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CashFalse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CashFalse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 order_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_order_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 coins = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_coins();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &coins_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 status_c = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_status_c();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CashFalse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CashFalse)
  return false;
#undef DO_
}

void CashFalse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CashFalse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guid(), output);
  }

  // optional int32 order_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->order_id(), output);
  }

  // optional int64 coins = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->coins(), output);
  }

  // optional int32 status = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->status(), output);
  }

  // optional int32 status_c = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->status_c(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CashFalse)
}

::google::protobuf::uint8* CashFalse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CashFalse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guid(), target);
  }

  // optional int32 order_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->order_id(), target);
  }

  // optional int64 coins = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->coins(), target);
  }

  // optional int32 status = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->status(), target);
  }

  // optional int32 status_c = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->status_c(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CashFalse)
  return target;
}

size_t CashFalse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CashFalse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

    // optional int32 order_id = 2;
    if (has_order_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order_id());
    }

    // optional int64 coins = 3;
    if (has_coins()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->coins());
    }

    // optional int32 status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // optional int32 status_c = 5;
    if (has_status_c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status_c());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CashFalse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CashFalse)
  GOOGLE_DCHECK_NE(&from, this);
  const CashFalse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CashFalse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CashFalse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CashFalse)
    MergeFrom(*source);
  }
}

void CashFalse::MergeFrom(const CashFalse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CashFalse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      order_id_ = from.order_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      coins_ = from.coins_;
    }
    if (cached_has_bits & 0x00000008u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000010u) {
      status_c_ = from.status_c_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CashFalse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CashFalse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CashFalse::CopyFrom(const CashFalse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CashFalse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CashFalse::IsInitialized() const {
  return true;
}

void CashFalse::Swap(CashFalse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CashFalse::InternalSwap(CashFalse* other) {
  std::swap(guid_, other->guid_);
  std::swap(order_id_, other->order_id_);
  std::swap(coins_, other->coins_);
  std::swap(status_, other->status_);
  std::swap(status_c_, other->status_c_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CashFalse::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CashFalse

// optional int32 guid = 1;
bool CashFalse::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CashFalse::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void CashFalse::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CashFalse::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 CashFalse::guid() const {
  // @@protoc_insertion_point(field_get:CashFalse.guid)
  return guid_;
}
void CashFalse::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:CashFalse.guid)
}

// optional int32 order_id = 2;
bool CashFalse::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CashFalse::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CashFalse::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CashFalse::clear_order_id() {
  order_id_ = 0;
  clear_has_order_id();
}
::google::protobuf::int32 CashFalse::order_id() const {
  // @@protoc_insertion_point(field_get:CashFalse.order_id)
  return order_id_;
}
void CashFalse::set_order_id(::google::protobuf::int32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:CashFalse.order_id)
}

// optional int64 coins = 3;
bool CashFalse::has_coins() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CashFalse::set_has_coins() {
  _has_bits_[0] |= 0x00000004u;
}
void CashFalse::clear_has_coins() {
  _has_bits_[0] &= ~0x00000004u;
}
void CashFalse::clear_coins() {
  coins_ = GOOGLE_LONGLONG(0);
  clear_has_coins();
}
::google::protobuf::int64 CashFalse::coins() const {
  // @@protoc_insertion_point(field_get:CashFalse.coins)
  return coins_;
}
void CashFalse::set_coins(::google::protobuf::int64 value) {
  set_has_coins();
  coins_ = value;
  // @@protoc_insertion_point(field_set:CashFalse.coins)
}

// optional int32 status = 4;
bool CashFalse::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CashFalse::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
void CashFalse::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
void CashFalse::clear_status() {
  status_ = 0;
  clear_has_status();
}
::google::protobuf::int32 CashFalse::status() const {
  // @@protoc_insertion_point(field_get:CashFalse.status)
  return status_;
}
void CashFalse::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CashFalse.status)
}

// optional int32 status_c = 5;
bool CashFalse::has_status_c() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CashFalse::set_has_status_c() {
  _has_bits_[0] |= 0x00000010u;
}
void CashFalse::clear_has_status_c() {
  _has_bits_[0] &= ~0x00000010u;
}
void CashFalse::clear_status_c() {
  status_c_ = 0;
  clear_has_status_c();
}
::google::protobuf::int32 CashFalse::status_c() const {
  // @@protoc_insertion_point(field_get:CashFalse.status_c)
  return status_c_;
}
void CashFalse::set_status_c(::google::protobuf::int32 value) {
  set_has_status_c();
  status_c_ = value;
  // @@protoc_insertion_point(field_set:CashFalse.status_c)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CashMoneyType::kMoneyFieldNumber;
const int CashMoneyType::kCreatedAtFieldNumber;
const int CashMoneyType::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CashMoneyType::CashMoneyType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CashMoneyType)
}
CashMoneyType::CashMoneyType(const CashMoneyType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  created_at_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_created_at()) {
    created_at_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.created_at_);
  }
  ::memcpy(&money_, &from.money_,
    reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&money_) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:CashMoneyType)
}

void CashMoneyType::SharedCtor() {
  _cached_size_ = 0;
  created_at_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&money_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&money_) + sizeof(status_));
}

CashMoneyType::~CashMoneyType() {
  // @@protoc_insertion_point(destructor:CashMoneyType)
  SharedDtor();
}

void CashMoneyType::SharedDtor() {
  created_at_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CashMoneyType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CashMoneyType::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CashMoneyType& CashMoneyType::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

CashMoneyType* CashMoneyType::New(::google::protobuf::Arena* arena) const {
  CashMoneyType* n = new CashMoneyType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CashMoneyType::Clear() {
// @@protoc_insertion_point(message_clear_start:CashMoneyType)
  if (has_created_at()) {
    GOOGLE_DCHECK(!created_at_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*created_at_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&money_, 0, reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&money_) + sizeof(status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CashMoneyType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CashMoneyType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 money = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string created_at = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_created_at()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->created_at().data(), this->created_at().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CashMoneyType.created_at");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CashMoneyType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CashMoneyType)
  return false;
#undef DO_
}

void CashMoneyType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CashMoneyType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 money = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->money(), output);
  }

  // optional string created_at = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->created_at().data(), this->created_at().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CashMoneyType.created_at");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->created_at(), output);
  }

  // optional int32 status = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CashMoneyType)
}

::google::protobuf::uint8* CashMoneyType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CashMoneyType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 money = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->money(), target);
  }

  // optional string created_at = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->created_at().data(), this->created_at().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CashMoneyType.created_at");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->created_at(), target);
  }

  // optional int32 status = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CashMoneyType)
  return target;
}

size_t CashMoneyType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CashMoneyType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string created_at = 2;
    if (has_created_at()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->created_at());
    }

    // optional int32 money = 1;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

    // optional int32 status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CashMoneyType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CashMoneyType)
  GOOGLE_DCHECK_NE(&from, this);
  const CashMoneyType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CashMoneyType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CashMoneyType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CashMoneyType)
    MergeFrom(*source);
  }
}

void CashMoneyType::MergeFrom(const CashMoneyType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CashMoneyType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_created_at();
      created_at_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.created_at_);
    }
    if (cached_has_bits & 0x00000002u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000004u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CashMoneyType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CashMoneyType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CashMoneyType::CopyFrom(const CashMoneyType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CashMoneyType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CashMoneyType::IsInitialized() const {
  return true;
}

void CashMoneyType::Swap(CashMoneyType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CashMoneyType::InternalSwap(CashMoneyType* other) {
  created_at_.Swap(&other->created_at_);
  std::swap(money_, other->money_);
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CashMoneyType::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CashMoneyType

// optional int32 money = 1;
bool CashMoneyType::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CashMoneyType::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
void CashMoneyType::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
void CashMoneyType::clear_money() {
  money_ = 0;
  clear_has_money();
}
::google::protobuf::int32 CashMoneyType::money() const {
  // @@protoc_insertion_point(field_get:CashMoneyType.money)
  return money_;
}
void CashMoneyType::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:CashMoneyType.money)
}

// optional string created_at = 2;
bool CashMoneyType::has_created_at() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CashMoneyType::set_has_created_at() {
  _has_bits_[0] |= 0x00000001u;
}
void CashMoneyType::clear_has_created_at() {
  _has_bits_[0] &= ~0x00000001u;
}
void CashMoneyType::clear_created_at() {
  created_at_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_created_at();
}
const ::std::string& CashMoneyType::created_at() const {
  // @@protoc_insertion_point(field_get:CashMoneyType.created_at)
  return created_at_.GetNoArena();
}
void CashMoneyType::set_created_at(const ::std::string& value) {
  set_has_created_at();
  created_at_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CashMoneyType.created_at)
}
#if LANG_CXX11
void CashMoneyType::set_created_at(::std::string&& value) {
  set_has_created_at();
  created_at_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CashMoneyType.created_at)
}
#endif
void CashMoneyType::set_created_at(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_created_at();
  created_at_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CashMoneyType.created_at)
}
void CashMoneyType::set_created_at(const char* value, size_t size) {
  set_has_created_at();
  created_at_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CashMoneyType.created_at)
}
::std::string* CashMoneyType::mutable_created_at() {
  set_has_created_at();
  // @@protoc_insertion_point(field_mutable:CashMoneyType.created_at)
  return created_at_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CashMoneyType::release_created_at() {
  // @@protoc_insertion_point(field_release:CashMoneyType.created_at)
  clear_has_created_at();
  return created_at_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CashMoneyType::set_allocated_created_at(::std::string* created_at) {
  if (created_at != NULL) {
    set_has_created_at();
  } else {
    clear_has_created_at();
  }
  created_at_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), created_at);
  // @@protoc_insertion_point(field_set_allocated:CashMoneyType.created_at)
}

// optional int32 status = 3;
bool CashMoneyType::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CashMoneyType::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
void CashMoneyType::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
void CashMoneyType::clear_status() {
  status_ = 0;
  clear_has_status();
}
::google::protobuf::int32 CashMoneyType::status() const {
  // @@protoc_insertion_point(field_get:CashMoneyType.status)
  return status_;
}
void CashMoneyType::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CashMoneyType.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerMoney::kMoneyFieldNumber;
const int PlayerMoney::kBankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerMoney::PlayerMoney()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerMoney)
}
PlayerMoney::PlayerMoney(const PlayerMoney& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&money_, &from.money_,
    reinterpret_cast<char*>(&bank_) -
    reinterpret_cast<char*>(&money_) + sizeof(bank_));
  // @@protoc_insertion_point(copy_constructor:PlayerMoney)
}

void PlayerMoney::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&money_, 0, reinterpret_cast<char*>(&bank_) -
    reinterpret_cast<char*>(&money_) + sizeof(bank_));
}

PlayerMoney::~PlayerMoney() {
  // @@protoc_insertion_point(destructor:PlayerMoney)
  SharedDtor();
}

void PlayerMoney::SharedDtor() {
}

void PlayerMoney::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerMoney::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerMoney& PlayerMoney::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerMoney* PlayerMoney::New(::google::protobuf::Arena* arena) const {
  PlayerMoney* n = new PlayerMoney;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerMoney::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerMoney)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&money_, 0, reinterpret_cast<char*>(&bank_) -
      reinterpret_cast<char*>(&money_) + sizeof(bank_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerMoney::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerMoney)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 money = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 bank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_bank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerMoney)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerMoney)
  return false;
#undef DO_
}

void PlayerMoney::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerMoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 money = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->money(), output);
  }

  // optional int64 bank = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->bank(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerMoney)
}

::google::protobuf::uint8* PlayerMoney::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerMoney)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 money = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->money(), target);
  }

  // optional int64 bank = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->bank(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerMoney)
  return target;
}

size_t PlayerMoney::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerMoney)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 money = 1;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->money());
    }

    // optional int64 bank = 2;
    if (has_bank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bank());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerMoney::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerMoney)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerMoney* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerMoney>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerMoney)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerMoney)
    MergeFrom(*source);
  }
}

void PlayerMoney::MergeFrom(const PlayerMoney& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerMoney)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000002u) {
      bank_ = from.bank_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerMoney::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerMoney::CopyFrom(const PlayerMoney& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerMoney::IsInitialized() const {
  return true;
}

void PlayerMoney::Swap(PlayerMoney* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerMoney::InternalSwap(PlayerMoney* other) {
  std::swap(money_, other->money_);
  std::swap(bank_, other->bank_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerMoney::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerMoney

// optional int64 money = 1;
bool PlayerMoney::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PlayerMoney::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void PlayerMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void PlayerMoney::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
::google::protobuf::int64 PlayerMoney::money() const {
  // @@protoc_insertion_point(field_get:PlayerMoney.money)
  return money_;
}
void PlayerMoney::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:PlayerMoney.money)
}

// optional int64 bank = 2;
bool PlayerMoney::has_bank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PlayerMoney::set_has_bank() {
  _has_bits_[0] |= 0x00000002u;
}
void PlayerMoney::clear_has_bank() {
  _has_bits_[0] &= ~0x00000002u;
}
void PlayerMoney::clear_bank() {
  bank_ = GOOGLE_LONGLONG(0);
  clear_has_bank();
}
::google::protobuf::int64 PlayerMoney::bank() const {
  // @@protoc_insertion_point(field_get:PlayerMoney.bank)
  return bank_;
}
void PlayerMoney::set_bank(::google::protobuf::int64 value) {
  set_has_bank();
  bank_ = value;
  // @@protoc_insertion_point(field_set:PlayerMoney.bank)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Recharge::kGuidFieldNumber;
const int Recharge::kIdFieldNumber;
const int Recharge::kExchangeGoldFieldNumber;
const int Recharge::kPayStatusFieldNumber;
const int Recharge::kServerStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Recharge::Recharge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Recharge)
}
Recharge::Recharge(const Recharge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    reinterpret_cast<char*>(&server_status_) -
    reinterpret_cast<char*>(&guid_) + sizeof(server_status_));
  // @@protoc_insertion_point(copy_constructor:Recharge)
}

void Recharge::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&guid_, 0, reinterpret_cast<char*>(&server_status_) -
    reinterpret_cast<char*>(&guid_) + sizeof(server_status_));
}

Recharge::~Recharge() {
  // @@protoc_insertion_point(destructor:Recharge)
  SharedDtor();
}

void Recharge::SharedDtor() {
}

void Recharge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Recharge::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Recharge& Recharge::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

Recharge* Recharge::New(::google::protobuf::Arena* arena) const {
  Recharge* n = new Recharge;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Recharge::Clear() {
// @@protoc_insertion_point(message_clear_start:Recharge)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&guid_, 0, reinterpret_cast<char*>(&server_status_) -
      reinterpret_cast<char*>(&guid_) + sizeof(server_status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Recharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Recharge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 exchange_gold = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_exchange_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exchange_gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pay_status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_pay_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pay_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 server_status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_server_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Recharge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Recharge)
  return false;
#undef DO_
}

void Recharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Recharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guid(), output);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional int64 exchange_gold = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->exchange_gold(), output);
  }

  // optional int32 pay_status = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pay_status(), output);
  }

  // optional int32 server_status = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->server_status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Recharge)
}

::google::protobuf::uint8* Recharge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Recharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guid(), target);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional int64 exchange_gold = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->exchange_gold(), target);
  }

  // optional int32 pay_status = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pay_status(), target);
  }

  // optional int32 server_status = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->server_status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Recharge)
  return target;
}

size_t Recharge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Recharge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int64 exchange_gold = 3;
    if (has_exchange_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->exchange_gold());
    }

    // optional int32 pay_status = 4;
    if (has_pay_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pay_status());
    }

    // optional int32 server_status = 5;
    if (has_server_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->server_status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Recharge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Recharge)
  GOOGLE_DCHECK_NE(&from, this);
  const Recharge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Recharge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Recharge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Recharge)
    MergeFrom(*source);
  }
}

void Recharge::MergeFrom(const Recharge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Recharge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      exchange_gold_ = from.exchange_gold_;
    }
    if (cached_has_bits & 0x00000008u) {
      pay_status_ = from.pay_status_;
    }
    if (cached_has_bits & 0x00000010u) {
      server_status_ = from.server_status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Recharge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Recharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Recharge::CopyFrom(const Recharge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Recharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Recharge::IsInitialized() const {
  return true;
}

void Recharge::Swap(Recharge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Recharge::InternalSwap(Recharge* other) {
  std::swap(guid_, other->guid_);
  std::swap(id_, other->id_);
  std::swap(exchange_gold_, other->exchange_gold_);
  std::swap(pay_status_, other->pay_status_);
  std::swap(server_status_, other->server_status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Recharge::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Recharge

// optional int32 guid = 1;
bool Recharge::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Recharge::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void Recharge::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Recharge::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 Recharge::guid() const {
  // @@protoc_insertion_point(field_get:Recharge.guid)
  return guid_;
}
void Recharge::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Recharge.guid)
}

// optional int32 id = 2;
bool Recharge::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Recharge::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void Recharge::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void Recharge::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 Recharge::id() const {
  // @@protoc_insertion_point(field_get:Recharge.id)
  return id_;
}
void Recharge::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Recharge.id)
}

// optional int64 exchange_gold = 3;
bool Recharge::has_exchange_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Recharge::set_has_exchange_gold() {
  _has_bits_[0] |= 0x00000004u;
}
void Recharge::clear_has_exchange_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
void Recharge::clear_exchange_gold() {
  exchange_gold_ = GOOGLE_LONGLONG(0);
  clear_has_exchange_gold();
}
::google::protobuf::int64 Recharge::exchange_gold() const {
  // @@protoc_insertion_point(field_get:Recharge.exchange_gold)
  return exchange_gold_;
}
void Recharge::set_exchange_gold(::google::protobuf::int64 value) {
  set_has_exchange_gold();
  exchange_gold_ = value;
  // @@protoc_insertion_point(field_set:Recharge.exchange_gold)
}

// optional int32 pay_status = 4;
bool Recharge::has_pay_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Recharge::set_has_pay_status() {
  _has_bits_[0] |= 0x00000008u;
}
void Recharge::clear_has_pay_status() {
  _has_bits_[0] &= ~0x00000008u;
}
void Recharge::clear_pay_status() {
  pay_status_ = 0;
  clear_has_pay_status();
}
::google::protobuf::int32 Recharge::pay_status() const {
  // @@protoc_insertion_point(field_get:Recharge.pay_status)
  return pay_status_;
}
void Recharge::set_pay_status(::google::protobuf::int32 value) {
  set_has_pay_status();
  pay_status_ = value;
  // @@protoc_insertion_point(field_set:Recharge.pay_status)
}

// optional int32 server_status = 5;
bool Recharge::has_server_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Recharge::set_has_server_status() {
  _has_bits_[0] |= 0x00000010u;
}
void Recharge::clear_has_server_status() {
  _has_bits_[0] &= ~0x00000010u;
}
void Recharge::clear_server_status() {
  server_status_ = 0;
  clear_has_server_status();
}
::google::protobuf::int32 Recharge::server_status() const {
  // @@protoc_insertion_point(field_get:Recharge.server_status)
  return server_status_;
}
void Recharge::set_server_status(::google::protobuf::int32 value) {
  set_has_server_status();
  server_status_ = value;
  // @@protoc_insertion_point(field_set:Recharge.server_status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Marquee::kIdFieldNumber;
const int Marquee::kStartTimeFieldNumber;
const int Marquee::kEndTimeFieldNumber;
const int Marquee::kContentFieldNumber;
const int Marquee::kNumberFieldNumber;
const int Marquee::kIntervalTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Marquee::Marquee()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Marquee)
}
Marquee::Marquee(const Marquee& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&interval_time_) -
    reinterpret_cast<char*>(&id_) + sizeof(interval_time_));
  // @@protoc_insertion_point(copy_constructor:Marquee)
}

void Marquee::SharedCtor() {
  _cached_size_ = 0;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&interval_time_) -
    reinterpret_cast<char*>(&id_) + sizeof(interval_time_));
}

Marquee::~Marquee() {
  // @@protoc_insertion_point(destructor:Marquee)
  SharedDtor();
}

void Marquee::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Marquee::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Marquee::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Marquee& Marquee::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

Marquee* Marquee::New(::google::protobuf::Arena* arena) const {
  Marquee* n = new Marquee;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Marquee::Clear() {
// @@protoc_insertion_point(message_clear_start:Marquee)
  if (has_content()) {
    GOOGLE_DCHECK(!content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*content_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 62u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&interval_time_) -
      reinterpret_cast<char*>(&id_) + sizeof(interval_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Marquee::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Marquee)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 end_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string content = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Marquee.content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 number = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 interval_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_interval_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &interval_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Marquee)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Marquee)
  return false;
#undef DO_
}

void Marquee::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Marquee)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 start_time = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->start_time(), output);
  }

  // optional int32 end_time = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->end_time(), output);
  }

  // optional string content = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Marquee.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->content(), output);
  }

  // optional int32 number = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->number(), output);
  }

  // optional int32 interval_time = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->interval_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Marquee)
}

::google::protobuf::uint8* Marquee::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Marquee)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 start_time = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->start_time(), target);
  }

  // optional int32 end_time = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->end_time(), target);
  }

  // optional string content = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Marquee.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->content(), target);
  }

  // optional int32 number = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->number(), target);
  }

  // optional int32 interval_time = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->interval_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Marquee)
  return target;
}

size_t Marquee::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Marquee)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string content = 4;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 start_time = 2;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start_time());
    }

    // optional int32 end_time = 3;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->end_time());
    }

    // optional int32 number = 5;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->number());
    }

    // optional int32 interval_time = 6;
    if (has_interval_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->interval_time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Marquee::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Marquee)
  GOOGLE_DCHECK_NE(&from, this);
  const Marquee* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Marquee>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Marquee)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Marquee)
    MergeFrom(*source);
  }
}

void Marquee::MergeFrom(const Marquee& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Marquee)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      start_time_ = from.start_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      end_time_ = from.end_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      number_ = from.number_;
    }
    if (cached_has_bits & 0x00000020u) {
      interval_time_ = from.interval_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Marquee::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Marquee)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Marquee::CopyFrom(const Marquee& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Marquee)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Marquee::IsInitialized() const {
  return true;
}

void Marquee::Swap(Marquee* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Marquee::InternalSwap(Marquee* other) {
  content_.Swap(&other->content_);
  std::swap(id_, other->id_);
  std::swap(start_time_, other->start_time_);
  std::swap(end_time_, other->end_time_);
  std::swap(number_, other->number_);
  std::swap(interval_time_, other->interval_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Marquee::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Marquee

// optional int32 id = 1;
bool Marquee::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Marquee::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void Marquee::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void Marquee::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 Marquee::id() const {
  // @@protoc_insertion_point(field_get:Marquee.id)
  return id_;
}
void Marquee::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Marquee.id)
}

// optional int32 start_time = 2;
bool Marquee::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Marquee::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
void Marquee::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void Marquee::clear_start_time() {
  start_time_ = 0;
  clear_has_start_time();
}
::google::protobuf::int32 Marquee::start_time() const {
  // @@protoc_insertion_point(field_get:Marquee.start_time)
  return start_time_;
}
void Marquee::set_start_time(::google::protobuf::int32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:Marquee.start_time)
}

// optional int32 end_time = 3;
bool Marquee::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Marquee::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
void Marquee::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void Marquee::clear_end_time() {
  end_time_ = 0;
  clear_has_end_time();
}
::google::protobuf::int32 Marquee::end_time() const {
  // @@protoc_insertion_point(field_get:Marquee.end_time)
  return end_time_;
}
void Marquee::set_end_time(::google::protobuf::int32 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:Marquee.end_time)
}

// optional string content = 4;
bool Marquee::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Marquee::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
void Marquee::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void Marquee::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
const ::std::string& Marquee::content() const {
  // @@protoc_insertion_point(field_get:Marquee.content)
  return content_.GetNoArena();
}
void Marquee::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Marquee.content)
}
#if LANG_CXX11
void Marquee::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Marquee.content)
}
#endif
void Marquee::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Marquee.content)
}
void Marquee::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Marquee.content)
}
::std::string* Marquee::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:Marquee.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Marquee::release_content() {
  // @@protoc_insertion_point(field_release:Marquee.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Marquee::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:Marquee.content)
}

// optional int32 number = 5;
bool Marquee::has_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Marquee::set_has_number() {
  _has_bits_[0] |= 0x00000010u;
}
void Marquee::clear_has_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void Marquee::clear_number() {
  number_ = 0;
  clear_has_number();
}
::google::protobuf::int32 Marquee::number() const {
  // @@protoc_insertion_point(field_get:Marquee.number)
  return number_;
}
void Marquee::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:Marquee.number)
}

// optional int32 interval_time = 6;
bool Marquee::has_interval_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Marquee::set_has_interval_time() {
  _has_bits_[0] |= 0x00000020u;
}
void Marquee::clear_has_interval_time() {
  _has_bits_[0] &= ~0x00000020u;
}
void Marquee::clear_interval_time() {
  interval_time_ = 0;
  clear_has_interval_time();
}
::google::protobuf::int32 Marquee::interval_time() const {
  // @@protoc_insertion_point(field_get:Marquee.interval_time)
  return interval_time_;
}
void Marquee::set_interval_time(::google::protobuf::int32 value) {
  set_has_interval_time();
  interval_time_ = value;
  // @@protoc_insertion_point(field_set:Marquee.interval_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AgentsTransferData::kAgentsIDFieldNumber;
const int AgentsTransferData::kPlayerIDFieldNumber;
const int AgentsTransferData::kTransferIdFieldNumber;
const int AgentsTransferData::kTransferTypeFieldNumber;
const int AgentsTransferData::kTransferMoneyFieldNumber;
const int AgentsTransferData::kRetIDFieldNumber;
const int AgentsTransferData::kReCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AgentsTransferData::AgentsTransferData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AgentsTransferData)
}
AgentsTransferData::AgentsTransferData(const AgentsTransferData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&agentsid_, &from.agentsid_,
    reinterpret_cast<char*>(&recode_) -
    reinterpret_cast<char*>(&agentsid_) + sizeof(recode_));
  // @@protoc_insertion_point(copy_constructor:AgentsTransferData)
}

void AgentsTransferData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&agentsid_, 0, reinterpret_cast<char*>(&recode_) -
    reinterpret_cast<char*>(&agentsid_) + sizeof(recode_));
}

AgentsTransferData::~AgentsTransferData() {
  // @@protoc_insertion_point(destructor:AgentsTransferData)
  SharedDtor();
}

void AgentsTransferData::SharedDtor() {
}

void AgentsTransferData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AgentsTransferData::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AgentsTransferData& AgentsTransferData::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

AgentsTransferData* AgentsTransferData::New(::google::protobuf::Arena* arena) const {
  AgentsTransferData* n = new AgentsTransferData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AgentsTransferData::Clear() {
// @@protoc_insertion_point(message_clear_start:AgentsTransferData)
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&agentsid_, 0, reinterpret_cast<char*>(&recode_) -
      reinterpret_cast<char*>(&agentsid_) + sizeof(recode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AgentsTransferData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AgentsTransferData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 AgentsID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_agentsid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &agentsid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 PlayerID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 transfer_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_transfer_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transfer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 transfer_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_transfer_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transfer_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 transfer_money = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_transfer_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transfer_money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 retID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_retid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 reCode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_recode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AgentsTransferData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AgentsTransferData)
  return false;
#undef DO_
}

void AgentsTransferData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AgentsTransferData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 AgentsID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->agentsid(), output);
  }

  // optional int32 PlayerID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->playerid(), output);
  }

  // optional int32 transfer_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->transfer_id(), output);
  }

  // optional int32 transfer_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->transfer_type(), output);
  }

  // optional int32 transfer_money = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->transfer_money(), output);
  }

  // optional int32 retID = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->retid(), output);
  }

  // optional int32 reCode = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->recode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AgentsTransferData)
}

::google::protobuf::uint8* AgentsTransferData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AgentsTransferData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 AgentsID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->agentsid(), target);
  }

  // optional int32 PlayerID = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->playerid(), target);
  }

  // optional int32 transfer_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->transfer_id(), target);
  }

  // optional int32 transfer_type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->transfer_type(), target);
  }

  // optional int32 transfer_money = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->transfer_money(), target);
  }

  // optional int32 retID = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->retid(), target);
  }

  // optional int32 reCode = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->recode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AgentsTransferData)
  return target;
}

size_t AgentsTransferData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AgentsTransferData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 AgentsID = 1;
    if (has_agentsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->agentsid());
    }

    // optional int32 PlayerID = 2;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->playerid());
    }

    // optional int32 transfer_id = 3;
    if (has_transfer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transfer_id());
    }

    // optional int32 transfer_type = 4;
    if (has_transfer_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transfer_type());
    }

    // optional int32 transfer_money = 5;
    if (has_transfer_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transfer_money());
    }

    // optional int32 retID = 6;
    if (has_retid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->retid());
    }

    // optional int32 reCode = 7;
    if (has_recode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AgentsTransferData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AgentsTransferData)
  GOOGLE_DCHECK_NE(&from, this);
  const AgentsTransferData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AgentsTransferData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AgentsTransferData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AgentsTransferData)
    MergeFrom(*source);
  }
}

void AgentsTransferData::MergeFrom(const AgentsTransferData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AgentsTransferData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      agentsid_ = from.agentsid_;
    }
    if (cached_has_bits & 0x00000002u) {
      playerid_ = from.playerid_;
    }
    if (cached_has_bits & 0x00000004u) {
      transfer_id_ = from.transfer_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      transfer_type_ = from.transfer_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      transfer_money_ = from.transfer_money_;
    }
    if (cached_has_bits & 0x00000020u) {
      retid_ = from.retid_;
    }
    if (cached_has_bits & 0x00000040u) {
      recode_ = from.recode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AgentsTransferData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AgentsTransferData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgentsTransferData::CopyFrom(const AgentsTransferData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AgentsTransferData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentsTransferData::IsInitialized() const {
  return true;
}

void AgentsTransferData::Swap(AgentsTransferData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AgentsTransferData::InternalSwap(AgentsTransferData* other) {
  std::swap(agentsid_, other->agentsid_);
  std::swap(playerid_, other->playerid_);
  std::swap(transfer_id_, other->transfer_id_);
  std::swap(transfer_type_, other->transfer_type_);
  std::swap(transfer_money_, other->transfer_money_);
  std::swap(retid_, other->retid_);
  std::swap(recode_, other->recode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AgentsTransferData::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AgentsTransferData

// optional int32 AgentsID = 1;
bool AgentsTransferData::has_agentsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AgentsTransferData::set_has_agentsid() {
  _has_bits_[0] |= 0x00000001u;
}
void AgentsTransferData::clear_has_agentsid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AgentsTransferData::clear_agentsid() {
  agentsid_ = 0;
  clear_has_agentsid();
}
::google::protobuf::int32 AgentsTransferData::agentsid() const {
  // @@protoc_insertion_point(field_get:AgentsTransferData.AgentsID)
  return agentsid_;
}
void AgentsTransferData::set_agentsid(::google::protobuf::int32 value) {
  set_has_agentsid();
  agentsid_ = value;
  // @@protoc_insertion_point(field_set:AgentsTransferData.AgentsID)
}

// optional int32 PlayerID = 2;
bool AgentsTransferData::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AgentsTransferData::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
void AgentsTransferData::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AgentsTransferData::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
::google::protobuf::int32 AgentsTransferData::playerid() const {
  // @@protoc_insertion_point(field_get:AgentsTransferData.PlayerID)
  return playerid_;
}
void AgentsTransferData::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:AgentsTransferData.PlayerID)
}

// optional int32 transfer_id = 3;
bool AgentsTransferData::has_transfer_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AgentsTransferData::set_has_transfer_id() {
  _has_bits_[0] |= 0x00000004u;
}
void AgentsTransferData::clear_has_transfer_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void AgentsTransferData::clear_transfer_id() {
  transfer_id_ = 0;
  clear_has_transfer_id();
}
::google::protobuf::int32 AgentsTransferData::transfer_id() const {
  // @@protoc_insertion_point(field_get:AgentsTransferData.transfer_id)
  return transfer_id_;
}
void AgentsTransferData::set_transfer_id(::google::protobuf::int32 value) {
  set_has_transfer_id();
  transfer_id_ = value;
  // @@protoc_insertion_point(field_set:AgentsTransferData.transfer_id)
}

// optional int32 transfer_type = 4;
bool AgentsTransferData::has_transfer_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AgentsTransferData::set_has_transfer_type() {
  _has_bits_[0] |= 0x00000008u;
}
void AgentsTransferData::clear_has_transfer_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void AgentsTransferData::clear_transfer_type() {
  transfer_type_ = 0;
  clear_has_transfer_type();
}
::google::protobuf::int32 AgentsTransferData::transfer_type() const {
  // @@protoc_insertion_point(field_get:AgentsTransferData.transfer_type)
  return transfer_type_;
}
void AgentsTransferData::set_transfer_type(::google::protobuf::int32 value) {
  set_has_transfer_type();
  transfer_type_ = value;
  // @@protoc_insertion_point(field_set:AgentsTransferData.transfer_type)
}

// optional int32 transfer_money = 5;
bool AgentsTransferData::has_transfer_money() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AgentsTransferData::set_has_transfer_money() {
  _has_bits_[0] |= 0x00000010u;
}
void AgentsTransferData::clear_has_transfer_money() {
  _has_bits_[0] &= ~0x00000010u;
}
void AgentsTransferData::clear_transfer_money() {
  transfer_money_ = 0;
  clear_has_transfer_money();
}
::google::protobuf::int32 AgentsTransferData::transfer_money() const {
  // @@protoc_insertion_point(field_get:AgentsTransferData.transfer_money)
  return transfer_money_;
}
void AgentsTransferData::set_transfer_money(::google::protobuf::int32 value) {
  set_has_transfer_money();
  transfer_money_ = value;
  // @@protoc_insertion_point(field_set:AgentsTransferData.transfer_money)
}

// optional int32 retID = 6;
bool AgentsTransferData::has_retid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AgentsTransferData::set_has_retid() {
  _has_bits_[0] |= 0x00000020u;
}
void AgentsTransferData::clear_has_retid() {
  _has_bits_[0] &= ~0x00000020u;
}
void AgentsTransferData::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
::google::protobuf::int32 AgentsTransferData::retid() const {
  // @@protoc_insertion_point(field_get:AgentsTransferData.retID)
  return retid_;
}
void AgentsTransferData::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:AgentsTransferData.retID)
}

// optional int32 reCode = 7;
bool AgentsTransferData::has_recode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AgentsTransferData::set_has_recode() {
  _has_bits_[0] |= 0x00000040u;
}
void AgentsTransferData::clear_has_recode() {
  _has_bits_[0] &= ~0x00000040u;
}
void AgentsTransferData::clear_recode() {
  recode_ = 0;
  clear_has_recode();
}
::google::protobuf::int32 AgentsTransferData::recode() const {
  // @@protoc_insertion_point(field_get:AgentsTransferData.reCode)
  return recode_;
}
void AgentsTransferData::set_recode(::google::protobuf::int32 value) {
  set_has_recode();
  recode_ = value;
  // @@protoc_insertion_point(field_set:AgentsTransferData.reCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BankCardInfo::kGuidFieldNumber;
const int BankCardInfo::kAccountFieldNumber;
const int BankCardInfo::kCardNumFieldNumber;
const int BankCardInfo::kUserNameFieldNumber;
const int BankCardInfo::kBankNameFieldNumber;
const int BankCardInfo::kBankAddrFieldNumber;
const int BankCardInfo::kBankCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BankCardInfo::BankCardInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BankCardInfo)
}
BankCardInfo::BankCardInfo(const BankCardInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  card_num_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_card_num()) {
    card_num_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_num_);
  }
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_name()) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  bank_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bank_name()) {
    bank_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_name_);
  }
  bank_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bank_addr()) {
    bank_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_addr_);
  }
  bank_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bank_code()) {
    bank_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_code_);
  }
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:BankCardInfo)
}

void BankCardInfo::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_num_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_ = 0;
}

BankCardInfo::~BankCardInfo() {
  // @@protoc_insertion_point(destructor:BankCardInfo)
  SharedDtor();
}

void BankCardInfo::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_num_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bank_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BankCardInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BankCardInfo::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BankCardInfo& BankCardInfo::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

BankCardInfo* BankCardInfo::New(::google::protobuf::Arena* arena) const {
  BankCardInfo* n = new BankCardInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BankCardInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:BankCardInfo)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_card_num()) {
      GOOGLE_DCHECK(!card_num_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*card_num_.UnsafeRawStringPointer())->clear();
    }
    if (has_user_name()) {
      GOOGLE_DCHECK(!user_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*user_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_bank_name()) {
      GOOGLE_DCHECK(!bank_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bank_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_bank_addr()) {
      GOOGLE_DCHECK(!bank_addr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bank_addr_.UnsafeRawStringPointer())->clear();
    }
    if (has_bank_code()) {
      GOOGLE_DCHECK(!bank_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bank_code_.UnsafeRawStringPointer())->clear();
    }
  }
  guid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BankCardInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BankCardInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BankCardInfo.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string card_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card_num()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->card_num().data(), this->card_num().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BankCardInfo.card_num");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string user_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BankCardInfo.user_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bank_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bank_name().data(), this->bank_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BankCardInfo.bank_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bank_addr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bank_addr().data(), this->bank_addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BankCardInfo.bank_addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bank_code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bank_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bank_code().data(), this->bank_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BankCardInfo.bank_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BankCardInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BankCardInfo)
  return false;
#undef DO_
}

void BankCardInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BankCardInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guid(), output);
  }

  // optional string account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BankCardInfo.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // optional string card_num = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->card_num().data(), this->card_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BankCardInfo.card_num");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->card_num(), output);
  }

  // optional string user_name = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BankCardInfo.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_name(), output);
  }

  // optional string bank_name = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bank_name().data(), this->bank_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BankCardInfo.bank_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->bank_name(), output);
  }

  // optional string bank_addr = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bank_addr().data(), this->bank_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BankCardInfo.bank_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->bank_addr(), output);
  }

  // optional string bank_code = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bank_code().data(), this->bank_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BankCardInfo.bank_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->bank_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BankCardInfo)
}

::google::protobuf::uint8* BankCardInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BankCardInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guid(), target);
  }

  // optional string account = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BankCardInfo.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // optional string card_num = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->card_num().data(), this->card_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BankCardInfo.card_num");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->card_num(), target);
  }

  // optional string user_name = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BankCardInfo.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_name(), target);
  }

  // optional string bank_name = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bank_name().data(), this->bank_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BankCardInfo.bank_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->bank_name(), target);
  }

  // optional string bank_addr = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bank_addr().data(), this->bank_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BankCardInfo.bank_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->bank_addr(), target);
  }

  // optional string bank_code = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bank_code().data(), this->bank_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BankCardInfo.bank_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->bank_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BankCardInfo)
  return target;
}

size_t BankCardInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BankCardInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string card_num = 3;
    if (has_card_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->card_num());
    }

    // optional string user_name = 4;
    if (has_user_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_name());
    }

    // optional string bank_name = 5;
    if (has_bank_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bank_name());
    }

    // optional string bank_addr = 6;
    if (has_bank_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bank_addr());
    }

    // optional string bank_code = 7;
    if (has_bank_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bank_code());
    }

    // optional int32 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BankCardInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BankCardInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BankCardInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BankCardInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BankCardInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BankCardInfo)
    MergeFrom(*source);
  }
}

void BankCardInfo::MergeFrom(const BankCardInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BankCardInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_card_num();
      card_num_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_num_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_bank_name();
      bank_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_name_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_bank_addr();
      bank_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_addr_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_bank_code();
      bank_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bank_code_);
    }
    if (cached_has_bits & 0x00000040u) {
      guid_ = from.guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BankCardInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BankCardInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BankCardInfo::CopyFrom(const BankCardInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BankCardInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BankCardInfo::IsInitialized() const {
  return true;
}

void BankCardInfo::Swap(BankCardInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BankCardInfo::InternalSwap(BankCardInfo* other) {
  account_.Swap(&other->account_);
  card_num_.Swap(&other->card_num_);
  user_name_.Swap(&other->user_name_);
  bank_name_.Swap(&other->bank_name_);
  bank_addr_.Swap(&other->bank_addr_);
  bank_code_.Swap(&other->bank_code_);
  std::swap(guid_, other->guid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BankCardInfo::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BankCardInfo

// optional int32 guid = 1;
bool BankCardInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BankCardInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000040u;
}
void BankCardInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000040u;
}
void BankCardInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 BankCardInfo::guid() const {
  // @@protoc_insertion_point(field_get:BankCardInfo.guid)
  return guid_;
}
void BankCardInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:BankCardInfo.guid)
}

// optional string account = 2;
bool BankCardInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BankCardInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void BankCardInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void BankCardInfo::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& BankCardInfo::account() const {
  // @@protoc_insertion_point(field_get:BankCardInfo.account)
  return account_.GetNoArena();
}
void BankCardInfo::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankCardInfo.account)
}
#if LANG_CXX11
void BankCardInfo::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankCardInfo.account)
}
#endif
void BankCardInfo::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankCardInfo.account)
}
void BankCardInfo::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankCardInfo.account)
}
::std::string* BankCardInfo::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:BankCardInfo.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BankCardInfo::release_account() {
  // @@protoc_insertion_point(field_release:BankCardInfo.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BankCardInfo::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:BankCardInfo.account)
}

// optional string card_num = 3;
bool BankCardInfo::has_card_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BankCardInfo::set_has_card_num() {
  _has_bits_[0] |= 0x00000002u;
}
void BankCardInfo::clear_has_card_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void BankCardInfo::clear_card_num() {
  card_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_num();
}
const ::std::string& BankCardInfo::card_num() const {
  // @@protoc_insertion_point(field_get:BankCardInfo.card_num)
  return card_num_.GetNoArena();
}
void BankCardInfo::set_card_num(const ::std::string& value) {
  set_has_card_num();
  card_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankCardInfo.card_num)
}
#if LANG_CXX11
void BankCardInfo::set_card_num(::std::string&& value) {
  set_has_card_num();
  card_num_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankCardInfo.card_num)
}
#endif
void BankCardInfo::set_card_num(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_num();
  card_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankCardInfo.card_num)
}
void BankCardInfo::set_card_num(const char* value, size_t size) {
  set_has_card_num();
  card_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankCardInfo.card_num)
}
::std::string* BankCardInfo::mutable_card_num() {
  set_has_card_num();
  // @@protoc_insertion_point(field_mutable:BankCardInfo.card_num)
  return card_num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BankCardInfo::release_card_num() {
  // @@protoc_insertion_point(field_release:BankCardInfo.card_num)
  clear_has_card_num();
  return card_num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BankCardInfo::set_allocated_card_num(::std::string* card_num) {
  if (card_num != NULL) {
    set_has_card_num();
  } else {
    clear_has_card_num();
  }
  card_num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_num);
  // @@protoc_insertion_point(field_set_allocated:BankCardInfo.card_num)
}

// optional string user_name = 4;
bool BankCardInfo::has_user_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BankCardInfo::set_has_user_name() {
  _has_bits_[0] |= 0x00000004u;
}
void BankCardInfo::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void BankCardInfo::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
const ::std::string& BankCardInfo::user_name() const {
  // @@protoc_insertion_point(field_get:BankCardInfo.user_name)
  return user_name_.GetNoArena();
}
void BankCardInfo::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankCardInfo.user_name)
}
#if LANG_CXX11
void BankCardInfo::set_user_name(::std::string&& value) {
  set_has_user_name();
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankCardInfo.user_name)
}
#endif
void BankCardInfo::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankCardInfo.user_name)
}
void BankCardInfo::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankCardInfo.user_name)
}
::std::string* BankCardInfo::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:BankCardInfo.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BankCardInfo::release_user_name() {
  // @@protoc_insertion_point(field_release:BankCardInfo.user_name)
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BankCardInfo::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:BankCardInfo.user_name)
}

// optional string bank_name = 5;
bool BankCardInfo::has_bank_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BankCardInfo::set_has_bank_name() {
  _has_bits_[0] |= 0x00000008u;
}
void BankCardInfo::clear_has_bank_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void BankCardInfo::clear_bank_name() {
  bank_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bank_name();
}
const ::std::string& BankCardInfo::bank_name() const {
  // @@protoc_insertion_point(field_get:BankCardInfo.bank_name)
  return bank_name_.GetNoArena();
}
void BankCardInfo::set_bank_name(const ::std::string& value) {
  set_has_bank_name();
  bank_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankCardInfo.bank_name)
}
#if LANG_CXX11
void BankCardInfo::set_bank_name(::std::string&& value) {
  set_has_bank_name();
  bank_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankCardInfo.bank_name)
}
#endif
void BankCardInfo::set_bank_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bank_name();
  bank_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankCardInfo.bank_name)
}
void BankCardInfo::set_bank_name(const char* value, size_t size) {
  set_has_bank_name();
  bank_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankCardInfo.bank_name)
}
::std::string* BankCardInfo::mutable_bank_name() {
  set_has_bank_name();
  // @@protoc_insertion_point(field_mutable:BankCardInfo.bank_name)
  return bank_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BankCardInfo::release_bank_name() {
  // @@protoc_insertion_point(field_release:BankCardInfo.bank_name)
  clear_has_bank_name();
  return bank_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BankCardInfo::set_allocated_bank_name(::std::string* bank_name) {
  if (bank_name != NULL) {
    set_has_bank_name();
  } else {
    clear_has_bank_name();
  }
  bank_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_name);
  // @@protoc_insertion_point(field_set_allocated:BankCardInfo.bank_name)
}

// optional string bank_addr = 6;
bool BankCardInfo::has_bank_addr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BankCardInfo::set_has_bank_addr() {
  _has_bits_[0] |= 0x00000010u;
}
void BankCardInfo::clear_has_bank_addr() {
  _has_bits_[0] &= ~0x00000010u;
}
void BankCardInfo::clear_bank_addr() {
  bank_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bank_addr();
}
const ::std::string& BankCardInfo::bank_addr() const {
  // @@protoc_insertion_point(field_get:BankCardInfo.bank_addr)
  return bank_addr_.GetNoArena();
}
void BankCardInfo::set_bank_addr(const ::std::string& value) {
  set_has_bank_addr();
  bank_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankCardInfo.bank_addr)
}
#if LANG_CXX11
void BankCardInfo::set_bank_addr(::std::string&& value) {
  set_has_bank_addr();
  bank_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankCardInfo.bank_addr)
}
#endif
void BankCardInfo::set_bank_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bank_addr();
  bank_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankCardInfo.bank_addr)
}
void BankCardInfo::set_bank_addr(const char* value, size_t size) {
  set_has_bank_addr();
  bank_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankCardInfo.bank_addr)
}
::std::string* BankCardInfo::mutable_bank_addr() {
  set_has_bank_addr();
  // @@protoc_insertion_point(field_mutable:BankCardInfo.bank_addr)
  return bank_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BankCardInfo::release_bank_addr() {
  // @@protoc_insertion_point(field_release:BankCardInfo.bank_addr)
  clear_has_bank_addr();
  return bank_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BankCardInfo::set_allocated_bank_addr(::std::string* bank_addr) {
  if (bank_addr != NULL) {
    set_has_bank_addr();
  } else {
    clear_has_bank_addr();
  }
  bank_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_addr);
  // @@protoc_insertion_point(field_set_allocated:BankCardInfo.bank_addr)
}

// optional string bank_code = 7;
bool BankCardInfo::has_bank_code() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BankCardInfo::set_has_bank_code() {
  _has_bits_[0] |= 0x00000020u;
}
void BankCardInfo::clear_has_bank_code() {
  _has_bits_[0] &= ~0x00000020u;
}
void BankCardInfo::clear_bank_code() {
  bank_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bank_code();
}
const ::std::string& BankCardInfo::bank_code() const {
  // @@protoc_insertion_point(field_get:BankCardInfo.bank_code)
  return bank_code_.GetNoArena();
}
void BankCardInfo::set_bank_code(const ::std::string& value) {
  set_has_bank_code();
  bank_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BankCardInfo.bank_code)
}
#if LANG_CXX11
void BankCardInfo::set_bank_code(::std::string&& value) {
  set_has_bank_code();
  bank_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BankCardInfo.bank_code)
}
#endif
void BankCardInfo::set_bank_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bank_code();
  bank_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BankCardInfo.bank_code)
}
void BankCardInfo::set_bank_code(const char* value, size_t size) {
  set_has_bank_code();
  bank_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BankCardInfo.bank_code)
}
::std::string* BankCardInfo::mutable_bank_code() {
  set_has_bank_code();
  // @@protoc_insertion_point(field_mutable:BankCardInfo.bank_code)
  return bank_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BankCardInfo::release_bank_code() {
  // @@protoc_insertion_point(field_release:BankCardInfo.bank_code)
  clear_has_bank_code();
  return bank_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BankCardInfo::set_allocated_bank_code(::std::string* bank_code) {
  if (bank_code != NULL) {
    set_has_bank_code();
  } else {
    clear_has_bank_code();
  }
  bank_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bank_code);
  // @@protoc_insertion_point(field_set_allocated:BankCardInfo.bank_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerInfoInMemery::kGuidFieldNumber;
const int PlayerInfoInMemery::kMoneyFieldNumber;
const int PlayerInfoInMemery::kBankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerInfoInMemery::PlayerInfoInMemery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_public_5fplayer_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerInfoInMemery)
}
PlayerInfoInMemery::PlayerInfoInMemery(const PlayerInfoInMemery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    reinterpret_cast<char*>(&bank_) -
    reinterpret_cast<char*>(&guid_) + sizeof(bank_));
  // @@protoc_insertion_point(copy_constructor:PlayerInfoInMemery)
}

void PlayerInfoInMemery::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&guid_, 0, reinterpret_cast<char*>(&bank_) -
    reinterpret_cast<char*>(&guid_) + sizeof(bank_));
}

PlayerInfoInMemery::~PlayerInfoInMemery() {
  // @@protoc_insertion_point(destructor:PlayerInfoInMemery)
  SharedDtor();
}

void PlayerInfoInMemery::SharedDtor() {
}

void PlayerInfoInMemery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerInfoInMemery::descriptor() {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerInfoInMemery& PlayerInfoInMemery::default_instance() {
  protobuf_public_5fplayer_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerInfoInMemery* PlayerInfoInMemery::New(::google::protobuf::Arena* arena) const {
  PlayerInfoInMemery* n = new PlayerInfoInMemery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerInfoInMemery::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerInfoInMemery)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&guid_, 0, reinterpret_cast<char*>(&bank_) -
      reinterpret_cast<char*>(&guid_) + sizeof(bank_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerInfoInMemery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerInfoInMemery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 money = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bank = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_bank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerInfoInMemery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerInfoInMemery)
  return false;
#undef DO_
}

void PlayerInfoInMemery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerInfoInMemery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guid(), output);
  }

  // optional int32 money = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->money(), output);
  }

  // optional int32 bank = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bank(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerInfoInMemery)
}

::google::protobuf::uint8* PlayerInfoInMemery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerInfoInMemery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guid(), target);
  }

  // optional int32 money = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->money(), target);
  }

  // optional int32 bank = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bank(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerInfoInMemery)
  return target;
}

size_t PlayerInfoInMemery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerInfoInMemery)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 guid = 1;
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guid());
    }

    // optional int32 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

    // optional int32 bank = 3;
    if (has_bank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bank());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerInfoInMemery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerInfoInMemery)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerInfoInMemery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerInfoInMemery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerInfoInMemery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerInfoInMemery)
    MergeFrom(*source);
  }
}

void PlayerInfoInMemery::MergeFrom(const PlayerInfoInMemery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerInfoInMemery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      guid_ = from.guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000004u) {
      bank_ = from.bank_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerInfoInMemery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerInfoInMemery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerInfoInMemery::CopyFrom(const PlayerInfoInMemery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerInfoInMemery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerInfoInMemery::IsInitialized() const {
  return true;
}

void PlayerInfoInMemery::Swap(PlayerInfoInMemery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerInfoInMemery::InternalSwap(PlayerInfoInMemery* other) {
  std::swap(guid_, other->guid_);
  std::swap(money_, other->money_);
  std::swap(bank_, other->bank_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerInfoInMemery::GetMetadata() const {
  protobuf_public_5fplayer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fplayer_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerInfoInMemery

// optional int32 guid = 1;
bool PlayerInfoInMemery::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PlayerInfoInMemery::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void PlayerInfoInMemery::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void PlayerInfoInMemery::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
::google::protobuf::int32 PlayerInfoInMemery::guid() const {
  // @@protoc_insertion_point(field_get:PlayerInfoInMemery.guid)
  return guid_;
}
void PlayerInfoInMemery::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:PlayerInfoInMemery.guid)
}

// optional int32 money = 2;
bool PlayerInfoInMemery::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PlayerInfoInMemery::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
void PlayerInfoInMemery::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
void PlayerInfoInMemery::clear_money() {
  money_ = 0;
  clear_has_money();
}
::google::protobuf::int32 PlayerInfoInMemery::money() const {
  // @@protoc_insertion_point(field_get:PlayerInfoInMemery.money)
  return money_;
}
void PlayerInfoInMemery::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:PlayerInfoInMemery.money)
}

// optional int32 bank = 3;
bool PlayerInfoInMemery::has_bank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PlayerInfoInMemery::set_has_bank() {
  _has_bits_[0] |= 0x00000004u;
}
void PlayerInfoInMemery::clear_has_bank() {
  _has_bits_[0] &= ~0x00000004u;
}
void PlayerInfoInMemery::clear_bank() {
  bank_ = 0;
  clear_has_bank();
}
::google::protobuf::int32 PlayerInfoInMemery::bank() const {
  // @@protoc_insertion_point(field_get:PlayerInfoInMemery.bank)
  return bank_;
}
void PlayerInfoInMemery::set_bank(::google::protobuf::int32 value) {
  set_has_bank();
  bank_ = value;
  // @@protoc_insertion_point(field_set:PlayerInfoInMemery.bank)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
