// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: public_enum.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "public_enum.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobuf_public_5fenum_2eproto {


namespace {

const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[17];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = { ~0u };
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;
namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "public_enum.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void TableStruct::Shutdown() {
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\021public_enum.proto*S\n\022REG_ACCOUNT_RESUL"
      "T\022\036\n\032REG_ACCOUNT_RESULT_SUCCESS\020\000\022\035\n\031REG"
      "_ACCOUNT_RESULT_FAILED\020\001*\333\t\n\014LOGIN_RESUL"
      "T\022\030\n\024LOGIN_RESULT_SUCCESS\020\000\022\035\n\031LOGIN_RES"
      "ULT_REPEAT_LOGIN\020\001\022\027\n\023LOGIN_RESULT_DB_ER"
      "R\020\002\022%\n!LOGIN_RESULT_ACCOUNT_PASSWORD_ERR"
      "\020\003\022!\n\035LOGIN_RESULT_NO_DEFAULT_LOBBY\020\004\022\033\n"
      "\027LOGIN_RESULT_SMS_CLOSED\020\005\022\035\n\031LOGIN_RESU"
      "LT_SMS_REPEATED\020\006\022%\n!LOGIN_RESULT_RESET_"
      "ACCOUNT_FAILED\020\007\022\033\n\027LOGIN_RESULT_SMS_FAI"
      "LED\020\010\022\036\n\032LOGIN_RESULT_ALIYUN_FAILED\020\t\022$\n"
      " LOGIN_RESULT_SET_PASSWORD_FAILED\020\n\022$\n L"
      "OGIN_RESULT_SET_NICKNAME_FAILED\020\013\022#\n\037LOG"
      "IN_RESULT_SET_PASSWORD_GUEST\020\014\022\036\n\032LOGIN_"
      "RESULT_SAME_PASSWORD\020\r\022\'\n#LOGIN_RESULT_L"
      "OGIN_VALIDATEBOX_FAIL\020\016\022!\n\035LOGIN_RESULT_"
      "ACCOUNT_DISABLED\020\017\022&\n\"LOGIN_RESULT_RESET"
      "_ACCOUNT_DUP_ACC\020\020\022+\n\'LOGIN_RESULT_RESET"
      "_ACCOUNT_DUP_NICKNAME\020\021\022*\n&LOGIN_RESULT_"
      "SET_NICKNAME_DUP_NICKNAME\020\022\022.\n*LOGIN_RES"
      "ULT_SET_ACCOUNT_OR_PASSWORD_EMPTY\020\023\022$\n L"
      "OGIN_RESULT_PASSWORD_SIZE_LIMIT\020\024\022$\n LOG"
      "IN_RESULT_PASSWORD_CHAR_LIMIT\020\025\022#\n\037LOGIN"
      "_RESULT_ACCOUNT_SIZE_LIMIT\020\026\022#\n\037LOGIN_RE"
      "SULT_ACCOUNT_CHAR_LIMIT\020\027\022\030\n\024LOGIN_RESUL"
      "T_SMS_ERR\020\030\022\037\n\033LOGIN_RESULT_NICKNAME_EMP"
      "TY\020\031\022\037\n\033LOGIN_RESULT_NICKNAME_LIMIT\020\032\022\036\n"
      "\032LOGIN_RESULT_ACCOUNT_EMPTY\020\033\022\034\n\030LOGIN_R"
      "ESULT_TEL_LEN_ERR\020\034\022\030\n\024LOGIN_RESULT_TEL_"
      "ERR\020\035\022\031\n\025LOGIN_RESULT_TEL_USED\020\036\022\034\n\030LOGI"
      "N_RESULT_REDIS_ERROR\020\037\022\031\n\025LOGIN_RESULT_M"
      "AINTAIN\020 \022!\n\035LOGIN_RESULT_FREQUENTLY_LOG"
      "IN\020!\022\"\n\036LOGIN_RESULT_UNCOMPLETED_LOGIN\020\""
      "\022\034\n\030LOGIN_RESULT_LOGIN_QUQUE\020#*\371\002\n\017BANK_"
      "OPT_RESULT\022\033\n\027BANK_OPT_RESULT_SUCCESS\020\000\022"
      ")\n%BANK_OPT_RESULT_PASSWORD_HAS_BEEN_SET"
      "\020\001\022\'\n#BANK_OPT_RESULT_PASSWORD_IS_NOT_SE"
      "T\020\002\022$\n BANK_OPT_RESULT_OLD_PASSWORD_ERR\020"
      "\003\022\"\n\036BANK_OPT_RESULT_ALREADY_LOGGED\020\004\022 \n"
      "\034BANK_OPT_RESULT_LOGIN_FAILED\020\005\022\035\n\031BANK_"
      "OPT_RESULT_NOT_LOGIN\020\006\022\035\n\031BANK_OPT_RESUL"
      "T_MONEY_ERR\020\007\022$\n BANK_OPT_RESULT_TRANSFE"
      "R_ACCOUNT\020\010\022%\n!BANK_OPT_RESULT_FORBID_IN"
      "_GAMEING\020\t*\264\002\n\027BANK_STATEMENT_OPT_TYPE\022#"
      "\n\037BANK_STATEMENT_OPT_TYPE_DEPOSIT\020\000\022 \n\034B"
      "ANK_STATEMENT_OPT_TYPE_DRAW\020\001\022(\n$BANK_ST"
      "ATEMENT_OPT_TYPE_TRANSFER_OUT\020\002\022\'\n#BANK_"
      "STATEMENT_OPT_TYPE_TRANSFER_IN\020\003\022(\n$BANK"
      "_STATEMENT_OPT_TYPE_REWARD_LOGIN\020\004\022)\n%BA"
      "NK_STATEMENT_OPT_TYPE_REWARD_ONLINE\020\005\022*\n"
      "&BANK_STATEMENT_OPT_TYPE_RELIEF_PAYMENT\020"
      "\006*\355\001\n\023ITEM_OPERATE_RESULT\022\037\n\033ITEM_OPERAT"
      "E_RESULT_SUCCESS\020\000\022\"\n\036ITEM_OPERATE_RESUL"
      "T_ITEMID_ERR\020\001\022\037\n\033ITEM_OPERATE_RESULT_NU"
      "M_ERR\020\002\022(\n$ITEM_OPERATE_RESULT_MONEY_NOT"
      "_ENOUGH\020\003\022\"\n\036ITEM_OPERATE_RESULT_DEL_FAI"
      "LED\020\004\022\"\n\036ITEM_OPERATE_RESULT_USE_FAILED\020"
      "\005*+\n\017ITEM_PRICE_TYPE\022\030\n\024ITEM_PRICE_TYPE_"
      "GOLD\020\000*3\n\tITEM_TYPE\022\023\n\017ITEM_TYPE_MONEY\020\000"
      "\022\021\n\rITEM_TYPE_BOX\020\001*\355\002\n\025RECEIVE_REWARD_R"
      "ESULT\022!\n\035RECEIVE_REWARD_RESULT_SUCCESS\020\000"
      "\022#\n\037RECEIVE_REWARD_RESULT_ERR_MONEY\020\001\022&\n"
      "\"RECEIVE_REWARD_RESULT_ERR_REPEATED\020\002\022.\n"
      "*RECEIVE_REWARD_RESULT_ERR_FIND_LOGIN_AW"
      "ARD\020\003\022/\n+RECEIVE_REWARD_RESULT_ERR_FIND_"
      "ONLINE_AWARD\020\004\022-\n)RECEIVE_REWARD_RESULT_"
      "ERR_ONLINE_AWARD_CD\020\005\022)\n%RECEIVE_REWARD_"
      "RESULT_ERR_COUNT_LIMIT\020\006\022)\n%RECEIVE_REWA"
      "RD_RESULT_ERR_MONEY_LIMIT\020\007*\327\001\n\017MAIL_OPT"
      "_RESULT\022\033\n\027MAIL_OPT_RESULT_SUCCESS\020\000\022\037\n\033"
      "MAIL_OPT_RESULT_FIND_FAILED\020\001\022\037\n\033MAIL_OP"
      "T_RESULT_NO_RECEIVER\020\002\022\036\n\032MAIL_OPT_RESUL"
      "T_EXPIRATION\020\003\022!\n\035MAIL_OPT_RESULT_NO_ATT"
      "ACHMENT\020\004\022\"\n\036MAIL_OPT_RESULT_HAS_ATTACHM"
      "ENT\020\005*\177\n\tRANK_TYPE\022\025\n\021RANK_TYPE_FORTUNE\020"
      "\001\022\034\n\030RANK_TYPE_DAILY_EARNINGS\020\002\022\035\n\031RANK_"
      "TYPE_WEEKLY_EARNINGS\020\003\022\036\n\032RANK_TYPE_MONT"
      "HLY_EARNINGS\020\004*\330\010\n\022GAME_SERVER_RESULT\022\036\n"
      "\032GAME_SERVER_RESULT_SUCCESS\020\000\022\036\n\032GAME_SE"
      "RVER_RESULT_IN_GAME\020\001\022\036\n\032GAME_SERVER_RES"
      "ULT_IN_ROOM\020\002\022\037\n\033GAME_SERVER_RESULT_OUT_"
      "ROOM\020\003\022$\n GAME_SERVER_RESULT_NOT_FIND_RO"
      "OM\020\004\022%\n!GAME_SERVER_RESULT_NOT_FIND_TABL"
      "E\020\005\022%\n!GAME_SERVER_RESULT_NOT_FIND_CHAIR"
      "\020\006\022&\n\"GAME_SERVER_RESULT_PLAYER_ON_CHAIR"
      "\020\007\022(\n$GAME_SERVER_RESULT_CHAIR_HAVE_PLAY"
      "ER\020\010\022&\n\"GAME_SERVER_RESULT_PLAYER_NO_CHA"
      "IR\020\t\022%\n!GAME_SERVER_RESULT_OHTER_ON_CHAI"
      "R\020\n\022%\n!GAME_SERVER_RESULT_NO_GAME_SERVER"
      "\020\013\022!\n\035GAME_SERVER_RESULT_ROOM_LIMIT\020\014\022$\n"
      " GAME_SERVER_RESULT_FREEZEACCOUNT\020\r\022\037\n\033G"
      "AME_SERVER_RESULT_MAINTAIN\020\016\0220\n,GAME_SER"
      "VER_RESULT_CREATE_PRIVATE_ROOM_CHAIR\020\017\022."
      "\n*GAME_SERVER_RESULT_CREATE_PRIVATE_ROOM"
      "_ALL\020\020\022/\n+GAME_SERVER_RESULT_CREATE_PRIV"
      "ATE_ROOM_BANK\020\021\0220\n,GAME_SERVER_RESULT_CR"
      "EATE_PRIVATE_ROOM_MONEY\020\022\022,\n(GAME_SERVER"
      "_RESULT_JOIN_PRIVATE_ROOM_ALL\020\023\022-\n)GAME_"
      "SERVER_RESULT_JOIN_PRIVATE_ROOM_BANK\020\024\022."
      "\n*GAME_SERVER_RESULT_JOIN_PRIVATE_ROOM_M"
      "ONEY\020\025\022-\n)GAME_SERVER_RESULT_PRIVATE_ROO"
      "M_NOT_FOUND\020\026\022#\n\037GAME_SERVER_RESULT_READ"
      "Y_FAILED\020\027\022(\n$GAME_SERVER_RESULT_PRIVATE"
      "_ROOM_FULL\020\030\022$\n GAME_SERVER_RESULT_ALIBA"
      "BA_CLOSE\020\031\022%\n!GAME_SERVER_RESULT_CASH_BA"
      "NKCLOSE\020\032*~\n\016GM_ANDROID_OPT\022\031\n\025GM_ANDROI"
      "D_ADD_ACTIVE\020\001\022\031\n\025GM_ANDROID_SUB_ACTIVE\020"
      "\002\022\032\n\026GM_ANDROID_ADD_PASSIVE\020\003\022\032\n\026GM_ANDR"
      "OID_SUB_PASSIVE\020\004*\253\010\n\022LOG_MONEY_OPT_TYPE"
      "\022\037\n\033LOG_MONEY_OPT_TYPE_BUY_ITEM\020\001\022\032\n\026LOG"
      "_MONEY_OPT_TYPE_BOX\020\002\022#\n\037LOG_MONEY_OPT_T"
      "YPE_REWARD_LOGIN\020\003\022$\n LOG_MONEY_OPT_TYPE"
      "_REWARD_ONLINE\020\004\022%\n!LOG_MONEY_OPT_TYPE_R"
      "ELIEF_PAYMENT\020\005\022\033\n\027LOG_MONEY_OPT_TYPE_LA"
      "ND\020\006\022 \n\034LOG_MONEY_OPT_TYPE_ZHAJINHUA\020\007\022\037"
      "\n\033LOG_MONEY_OPT_TYPE_SHOWHAND\020\010\022\031\n\025LOG_M"
      "ONEY_OPT_TYPE_OX\020\t\022\034\n\030LOG_MONEY_OPT_TYPE"
      "_FURIT\020\n\022\037\n\033LOG_MONEY_OPT_TYPE_BENZ_BMW\020"
      "\013\022\034\n\030LOG_MONEY_OPT_TYPE_TEXAS\020\014\022\033\n\027LOG_M"
      "ONEY_OPT_TYPE_BUYU\020\r\022\035\n\031LOG_MONEY_OPT_TY"
      "PE_SLOTMA\020\016\022$\n LOG_MONEY_OPT_TYPE_RESET_"
      "ACCOUNT\020\017\022!\n\035LOG_MONEY_OPT_TYPE_CASH_MON"
      "EY\020\020\022%\n!LOG_MONEY_OPT_TYPE_RECHARGE_MONE"
      "Y\020\021\022\031\n\025LOG_MONEY_OPT_TYPE_GM\020\022\022\035\n\031LOG_MO"
      "NEY_OPT_TYPE_INVITE\020\023\022\'\n#LOG_MONEY_OPT_T"
      "YPE_CASH_MONEY_FALSE\020\024\022*\n&LOG_MONEY_OPT_"
      "TYPE_CREATE_PRIVATE_ROOM\020\025\022 \n\034LOG_MONEY_"
      "OPT_TYPE_BANKER_OX\020\026\022$\n LOG_MONEY_OPT_TY"
      "PE_FORTUNE_SLOTS\020\027\022\035\n\031LOG_MONEY_OPT_TYPE"
      "_MAAJAN\020\030\022!\n\035LOG_MONEY_OPT_TYPE_CLASSIC_"
      "OX\020\031\022\036\n\032LOG_MONEY_OPT_TYPE_POINT21\020\032\022\036\n\032"
      "LOG_MONEY_OPT_TYPE_SANGONG\020\033\022\036\n\032LOG_MONE"
      "Y_OPT_TYPE_HONGHEI\020\034\022!\n\035LOG_MONEY_OPT_TY"
      "PE_CHANNEL_ZK\020\035\022\'\n#LOG_MONEY_OPT_TYPE_PL"
      "AYER_PROMOTION\020\036\022\035\n\031LOG_MONEY_OPT_TYPE_L"
      "ONGHU\020\037*^\n\017GAME_READY_MODE\022\030\n\024GAME_READY"
      "_MODE_NONE\020\001\022\027\n\023GAME_READY_MODE_ALL\020\002\022\030\n"
      "\024GAME_READY_MODE_PART\020\003*\223\001\n\020GAME_BAND_AL"
      "IPAY\022\034\n\030GAME_BAND_ALIPAY_SUCCESS\020\000\022 \n\034GA"
      "ME_BAND_ALIPAY_CHECK_ERROR\020\001\022 \n\034GAME_BAN"
      "D_ALIPAY_REPEAT_BAND\020\002\022\035\n\031GAME_BAND_ALIP"
      "AY_DB_ERROR\020\003*\357\013\n\020GMmessageRetCode\022\034\n\030GM"
      "messageRetCode_Success\020\001\022&\n\"GMmessageRet"
      "Code_SocketConnectFail\020\000\022#\n\037GMmessageRet"
      "Code_GmCommandError\020\002\022 \n\034GMmessageRetCod"
      "e_GmParamMiss\020\003\022%\n!GMmessageRetCode_MsgP"
      "layerOffline\020e\022\037\n\033GMmessageRetCode_MsgDB"
      "Faild\020f\022$\n GMmessageRetCode_MsgGameIdnoF"
      "ind\020g\022%\n!GMmessageRetCode_MsgGateDataErr"
      "or\020h\022%\n!GMmessageRetCode_Msgnofindsessio"
      "n\020i\022!\n\035GMmessageRetCode_MsgParamMiss\020j\022!"
      "\n\035GMmessageRetCode_MsgTypeError\020k\022 \n\034GMm"
      "essageRetCode_FBParamMiss\020y\022$\n GMmessage"
      "RetCode_FBPlayerOffline\020z\022$\n GMmessageRe"
      "tCode_FBGateDataError\020{\022\"\n\036GMmessageRetC"
      "ode_DelMsgDBError\020}\022\'\n\"GMmessageRetCode_"
      "ATMoneyParamError\020\202\001\022.\n)GMmessageRetCode"
      "_ATGameServerNofindPlayer\020\203\001\022&\n!GMmessag"
      "eRetCode_ATNotEnoughMoney\020\204\001\0221\n,GMmessag"
      "eRetCode_ATJudgmentPlayerOnlineError\020\205\001\022"
      "(\n#GMmessageRetCode_ATDB_NoFind_Player\020\206"
      "\001\022\"\n\035GMmessageRetCode_ATDB_NotData\020\207\001\022+\n"
      "&GMmessageRetCode_ATChangMoney_DB_Error\020"
      "\210\001\022$\n\037GMmessageRetCode_ATCantTransfer\020\211\001"
      "\022\"\n\035GMmessageRetCode_ATnofindUser\020\212\001\022!\n\034"
      "GMmessageRetCode_ATtypeError\020\214\001\022.\n)GMmes"
      "sageRetCode_PLGameServerNofindPlayer\020\215\001\022"
      "&\n!GMmessageRetCode_PLNotEnoughMoney\020\216\001\022"
      "1\n,GMmessageRetCode_PLJudgmentPlayerOnli"
      "neError\020\217\001\022(\n#GMmessageRetCode_PLDB_NoFi"
      "nd_Player\020\220\001\022\"\n\035GMmessageRetCode_PLDB_No"
      "tData\020\221\001\022+\n&GMmessageRetCode_PLChangMone"
      "y_DB_Error\020\222\001\022$\n\037GMmessageRetCode_PLCant"
      "Transfer\020\223\001\022\"\n\035GMmessageRetCode_PLnofind"
      "User\020\224\001\022%\n GMmessageRetCode_AT_PL_onePla"
      "yer\020\225\001\022$\n\037GMmessageRetCode_EditAliPayFai"
      "l\020\240\001\022.\n)GMmessageRetCode_FreezeAccountOn"
      "LineFaild\020\245\001\022,\n\'GMmessageRetCode_FreezeA"
      "ccountGameFaild\020\246\001\022#\n\036GMmessageRetCode_D"
      "BRquestError\020\347\007*\360\001\n\021ChangeMoneyRecode\022\026\n"
      "\022ChangMoney_Success\020\000\022%\n!ChangMoney_Game"
      "ServerNofindPlayer\020\001\022\035\n\031ChangMoney_NotEn"
      "oughMoney\020\002\022(\n$ChangMoney_JudgmentPlayer"
      "OnlineError\020\003\022\037\n\033ChangMoney_DB_NoFind_Pl"
      "ayer\020\004\022\031\n\025ChangMoney_DB_NotData\020\005\022\027\n\023Cha"
      "ngMoney_DB_Error\020\006"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7418);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "public_enum.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_public_5fenum_2eproto

const ::google::protobuf::EnumDescriptor* REG_ACCOUNT_RESULT_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[0];
}
bool REG_ACCOUNT_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LOGIN_RESULT_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[1];
}
bool LOGIN_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BANK_OPT_RESULT_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[2];
}
bool BANK_OPT_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BANK_STATEMENT_OPT_TYPE_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[3];
}
bool BANK_STATEMENT_OPT_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ITEM_OPERATE_RESULT_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[4];
}
bool ITEM_OPERATE_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ITEM_PRICE_TYPE_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[5];
}
bool ITEM_PRICE_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ITEM_TYPE_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[6];
}
bool ITEM_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RECEIVE_REWARD_RESULT_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[7];
}
bool RECEIVE_REWARD_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MAIL_OPT_RESULT_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[8];
}
bool MAIL_OPT_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RANK_TYPE_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[9];
}
bool RANK_TYPE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GAME_SERVER_RESULT_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[10];
}
bool GAME_SERVER_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GM_ANDROID_OPT_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[11];
}
bool GM_ANDROID_OPT_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LOG_MONEY_OPT_TYPE_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[12];
}
bool LOG_MONEY_OPT_TYPE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GAME_READY_MODE_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[13];
}
bool GAME_READY_MODE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GAME_BAND_ALIPAY_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[14];
}
bool GAME_BAND_ALIPAY_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GMmessageRetCode_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[15];
}
bool GMmessageRetCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 121:
    case 122:
    case 123:
    case 125:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 160:
    case 165:
    case 166:
    case 999:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ChangeMoneyRecode_descriptor() {
  protobuf_public_5fenum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_public_5fenum_2eproto::file_level_enum_descriptors[16];
}
bool ChangeMoneyRecode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
