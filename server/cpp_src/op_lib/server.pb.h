// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

#ifndef PROTOBUF_server_2eproto__INCLUDED
#define PROTOBUF_server_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "login.pb.h"
#include "redis.pb.h"
#include "public_player.pb.h"
#include "config.pb.h"
// @@protoc_insertion_point(includes)
class AddMoneyInfo;
class AddMoneyInfoDefaultTypeInternal;
extern AddMoneyInfoDefaultTypeInternal _AddMoneyInfo_default_instance_;
class AgentsTransferData;
class AgentsTransferDataDefaultTypeInternal;
extern AgentsTransferDataDefaultTypeInternal _AgentsTransferData_default_instance_;
class AndroidInfo;
class AndroidInfoDefaultTypeInternal;
extern AndroidInfoDefaultTypeInternal _AndroidInfo_default_instance_;
class BankCardInfo;
class BankCardInfoDefaultTypeInternal;
extern BankCardInfoDefaultTypeInternal _BankCardInfo_default_instance_;
class BankStatement;
class BankStatementDefaultTypeInternal;
extern BankStatementDefaultTypeInternal _BankStatement_default_instance_;
class BrnnChiCfg;
class BrnnChiCfgDefaultTypeInternal;
extern BrnnChiCfgDefaultTypeInternal _BrnnChiCfg_default_instance_;
class CS_QueryMaintain;
class CS_QueryMaintainDefaultTypeInternal;
extern CS_QueryMaintainDefaultTypeInternal _CS_QueryMaintain_default_instance_;
class CashFalse;
class CashFalseDefaultTypeInternal;
extern CashFalseDefaultTypeInternal _CashFalse_default_instance_;
class CashMoneyType;
class CashMoneyTypeDefaultTypeInternal;
extern CashMoneyTypeDefaultTypeInternal _CashMoneyType_default_instance_;
class ClientChannelInfo;
class ClientChannelInfoDefaultTypeInternal;
extern ClientChannelInfoDefaultTypeInternal _ClientChannelInfo_default_instance_;
class CommonServer_Config;
class CommonServer_ConfigDefaultTypeInternal;
extern CommonServer_ConfigDefaultTypeInternal _CommonServer_Config_default_instance_;
class ConfigServer_Config;
class ConfigServer_ConfigDefaultTypeInternal;
extern ConfigServer_ConfigDefaultTypeInternal _ConfigServer_Config_default_instance_;
class DBChannelInviteConfig;
class DBChannelInviteConfigDefaultTypeInternal;
extern DBChannelInviteConfigDefaultTypeInternal _DBChannelInviteConfig_default_instance_;
class DBConnectOption;
class DBConnectOptionDefaultTypeInternal;
extern DBConnectOptionDefaultTypeInternal _DBConnectOption_default_instance_;
class DBGameConfig;
class DBGameConfigDefaultTypeInternal;
extern DBGameConfigDefaultTypeInternal _DBGameConfig_default_instance_;
class DBGameConfigMgr;
class DBGameConfigMgrDefaultTypeInternal;
extern DBGameConfigMgrDefaultTypeInternal _DBGameConfigMgr_default_instance_;
class DBServerConfig;
class DBServerConfigDefaultTypeInternal;
extern DBServerConfigDefaultTypeInternal _DBServerConfig_default_instance_;
class DES_SendMail;
class DES_SendMailDefaultTypeInternal;
extern DES_SendMailDefaultTypeInternal _DES_SendMail_default_instance_;
class DE_UpdateRank;
class DE_UpdateRankDefaultTypeInternal;
extern DE_UpdateRankDefaultTypeInternal _DE_UpdateRank_default_instance_;
class DF_ChangMoney;
class DF_ChangMoneyDefaultTypeInternal;
extern DF_ChangMoneyDefaultTypeInternal _DF_ChangMoney_default_instance_;
class DF_GetPlayerInfo;
class DF_GetPlayerInfoDefaultTypeInternal;
extern DF_GetPlayerInfoDefaultTypeInternal _DF_GetPlayerInfo_default_instance_;
class DF_Reply;
class DF_ReplyDefaultTypeInternal;
extern DF_ReplyDefaultTypeInternal _DF_Reply_default_instance_;
class DF_SavePlayerInfo;
class DF_SavePlayerInfoDefaultTypeInternal;
extern DF_SavePlayerInfoDefaultTypeInternal _DF_SavePlayerInfo_default_instance_;
class DL_AddMoney;
class DL_AddMoneyDefaultTypeInternal;
extern DL_AddMoneyDefaultTypeInternal _DL_AddMoney_default_instance_;
class DL_AlipayEdit;
class DL_AlipayEditDefaultTypeInternal;
extern DL_AlipayEditDefaultTypeInternal _DL_AlipayEdit_default_instance_;
class DL_CC_ChangeMoney;
class DL_CC_ChangeMoneyDefaultTypeInternal;
extern DL_CC_ChangeMoneyDefaultTypeInternal _DL_CC_ChangeMoney_default_instance_;
class DL_CashFalseInfo;
class DL_CashFalseInfoDefaultTypeInternal;
extern DL_CashFalseInfoDefaultTypeInternal _DL_CashFalseInfo_default_instance_;
class DL_CashReply;
class DL_CashReplyDefaultTypeInternal;
extern DL_CashReplyDefaultTypeInternal _DL_CashReply_default_instance_;
class DL_DBGameConfigMgr;
class DL_DBGameConfigMgrDefaultTypeInternal;
extern DL_DBGameConfigMgrDefaultTypeInternal _DL_DBGameConfigMgr_default_instance_;
class DL_DO_SQL;
class DL_DO_SQLDefaultTypeInternal;
extern DL_DO_SQLDefaultTypeInternal _DL_DO_SQL_default_instance_;
class DL_DelMessage;
class DL_DelMessageDefaultTypeInternal;
extern DL_DelMessageDefaultTypeInternal _DL_DelMessage_default_instance_;
class DL_LuaCmdPlayerResult;
class DL_LuaCmdPlayerResultDefaultTypeInternal;
extern DL_LuaCmdPlayerResultDefaultTypeInternal _DL_LuaCmdPlayerResult_default_instance_;
class DL_NewNotice;
class DL_NewNoticeDefaultTypeInternal;
extern DL_NewNoticeDefaultTypeInternal _DL_NewNotice_default_instance_;
class DL_PhoneQuery;
class DL_PhoneQueryDefaultTypeInternal;
extern DL_PhoneQueryDefaultTypeInternal _DL_PhoneQuery_default_instance_;
class DL_RegAccount;
class DL_RegAccountDefaultTypeInternal;
extern DL_RegAccountDefaultTypeInternal _DL_RegAccount_default_instance_;
class DL_RegAccount2;
class DL_RegAccount2DefaultTypeInternal;
extern DL_RegAccount2DefaultTypeInternal _DL_RegAccount2_default_instance_;
class DL_ServerConfig;
class DL_ServerConfigDefaultTypeInternal;
extern DL_ServerConfigDefaultTypeInternal _DL_ServerConfig_default_instance_;
class DL_VerifyAccountResult;
class DL_VerifyAccountResultDefaultTypeInternal;
extern DL_VerifyAccountResultDefaultTypeInternal _DL_VerifyAccountResult_default_instance_;
class DS_BandAlipay;
class DS_BandAlipayDefaultTypeInternal;
extern DS_BandAlipayDefaultTypeInternal _DS_BandAlipay_default_instance_;
class DS_BandAlipayNum;
class DS_BandAlipayNumDefaultTypeInternal;
extern DS_BandAlipayNumDefaultTypeInternal _DS_BandAlipayNum_default_instance_;
class DS_BankChangePassword;
class DS_BankChangePasswordDefaultTypeInternal;
extern DS_BankChangePasswordDefaultTypeInternal _DS_BankChangePassword_default_instance_;
class DS_BankLogin;
class DS_BankLoginDefaultTypeInternal;
extern DS_BankLoginDefaultTypeInternal _DS_BankLogin_default_instance_;
class DS_BankStatement;
class DS_BankStatementDefaultTypeInternal;
extern DS_BankStatementDefaultTypeInternal _DS_BankStatement_default_instance_;
class DS_BankTransfer;
class DS_BankTransferDefaultTypeInternal;
extern DS_BankTransferDefaultTypeInternal _DS_BankTransfer_default_instance_;
class DS_BankTransferByGuid;
class DS_BankTransferByGuidDefaultTypeInternal;
extern DS_BankTransferByGuidDefaultTypeInternal _DS_BankTransferByGuid_default_instance_;
class DS_BindBankCard;
class DS_BindBankCardDefaultTypeInternal;
extern DS_BindBankCardDefaultTypeInternal _DS_BindBankCard_default_instance_;
class DS_CashMoney;
class DS_CashMoneyDefaultTypeInternal;
extern DS_CashMoneyDefaultTypeInternal _DS_CashMoney_default_instance_;
class DS_CashMoneyType;
class DS_CashMoneyTypeDefaultTypeInternal;
extern DS_CashMoneyTypeDefaultTypeInternal _DS_CashMoneyType_default_instance_;
class DS_GetBankCardInfo;
class DS_GetBankCardInfoDefaultTypeInternal;
extern DS_GetBankCardInfoDefaultTypeInternal _DS_GetBankCardInfo_default_instance_;
class DS_LoadAndroidData;
class DS_LoadAndroidDataDefaultTypeInternal;
extern DS_LoadAndroidDataDefaultTypeInternal _DS_LoadAndroidData_default_instance_;
class DS_LoadPlayerData;
class DS_LoadPlayerDataDefaultTypeInternal;
extern DS_LoadPlayerDataDefaultTypeInternal _DS_LoadPlayerData_default_instance_;
class DS_OxConfigData;
class DS_OxConfigDataDefaultTypeInternal;
extern DS_OxConfigDataDefaultTypeInternal _DS_OxConfigData_default_instance_;
class DS_QueryBrnnChiCfg;
class DS_QueryBrnnChiCfgDefaultTypeInternal;
extern DS_QueryBrnnChiCfgDefaultTypeInternal _DS_QueryBrnnChiCfg_default_instance_;
class DS_QueryChannelInviteCfg;
class DS_QueryChannelInviteCfgDefaultTypeInternal;
extern DS_QueryChannelInviteCfgDefaultTypeInternal _DS_QueryChannelInviteCfg_default_instance_;
class DS_QueryPlayerInviteReward;
class DS_QueryPlayerInviteRewardDefaultTypeInternal;
extern DS_QueryPlayerInviteRewardDefaultTypeInternal _DS_QueryPlayerInviteReward_default_instance_;
class DS_QueryPlayerMarquee;
class DS_QueryPlayerMarqueeDefaultTypeInternal;
extern DS_QueryPlayerMarqueeDefaultTypeInternal _DS_QueryPlayerMarquee_default_instance_;
class DS_QueryPlayerMsgData;
class DS_QueryPlayerMsgDataDefaultTypeInternal;
extern DS_QueryPlayerMsgDataDefaultTypeInternal _DS_QueryPlayerMsgData_default_instance_;
class DS_QueryPlayerPromotion;
class DS_QueryPlayerPromotionDefaultTypeInternal;
extern DS_QueryPlayerPromotionDefaultTypeInternal _DS_QueryPlayerPromotion_default_instance_;
class DS_QueryPlayerRecharge;
class DS_QueryPlayerRechargeDefaultTypeInternal;
extern DS_QueryPlayerRechargeDefaultTypeInternal _DS_QueryPlayerRecharge_default_instance_;
class DS_QueryRobotCfg;
class DS_QueryRobotCfgDefaultTypeInternal;
extern DS_QueryRobotCfgDefaultTypeInternal _DS_QueryRobotCfg_default_instance_;
class DS_ResetAccount;
class DS_ResetAccountDefaultTypeInternal;
extern DS_ResetAccountDefaultTypeInternal _DS_ResetAccount_default_instance_;
class DS_SaveBankStatement;
class DS_SaveBankStatementDefaultTypeInternal;
extern DS_SaveBankStatementDefaultTypeInternal _DS_SaveBankStatement_default_instance_;
class DS_ServerConfig;
class DS_ServerConfigDefaultTypeInternal;
extern DS_ServerConfigDefaultTypeInternal _DS_ServerConfig_default_instance_;
class DS_SetNickname;
class DS_SetNicknameDefaultTypeInternal;
extern DS_SetNicknameDefaultTypeInternal _DS_SetNickname_default_instance_;
class DS_SetPassword;
class DS_SetPasswordDefaultTypeInternal;
extern DS_SetPasswordDefaultTypeInternal _DS_SetPassword_default_instance_;
class FD_ChangMoney;
class FD_ChangMoneyDefaultTypeInternal;
extern FD_ChangMoneyDefaultTypeInternal _FD_ChangMoney_default_instance_;
class FD_ChangMoneyDeal;
class FD_ChangMoneyDealDefaultTypeInternal;
extern FD_ChangMoneyDealDefaultTypeInternal _FD_ChangMoneyDeal_default_instance_;
class FD_GetPlayerInfo;
class FD_GetPlayerInfoDefaultTypeInternal;
extern FD_GetPlayerInfoDefaultTypeInternal _FD_GetPlayerInfo_default_instance_;
class FG_ClientChannelInfo;
class FG_ClientChannelInfoDefaultTypeInternal;
extern FG_ClientChannelInfoDefaultTypeInternal _FG_ClientChannelInfo_default_instance_;
class FG_GameServerCfg;
class FG_GameServerCfgDefaultTypeInternal;
extern FG_GameServerCfgDefaultTypeInternal _FG_GameServerCfg_default_instance_;
class FG_GetPlayerInfo;
class FG_GetPlayerInfoDefaultTypeInternal;
extern FG_GetPlayerInfoDefaultTypeInternal _FG_GetPlayerInfo_default_instance_;
class FS_Black_List;
class FS_Black_ListDefaultTypeInternal;
extern FS_Black_ListDefaultTypeInternal _FS_Black_List_default_instance_;
class FS_ChangMoneyDeal;
class FS_ChangMoneyDealDefaultTypeInternal;
extern FS_ChangMoneyDealDefaultTypeInternal _FS_ChangMoneyDeal_default_instance_;
class FS_ChangeGameCfg;
class FS_ChangeGameCfgDefaultTypeInternal;
extern FS_ChangeGameCfgDefaultTypeInternal _FS_ChangeGameCfg_default_instance_;
class FS_ChangeRobotCfg;
class FS_ChangeRobotCfgDefaultTypeInternal;
extern FS_ChangeRobotCfgDefaultTypeInternal _FS_ChangeRobotCfg_default_instance_;
class FW_ChangeGameCfg;
class FW_ChangeGameCfgDefaultTypeInternal;
extern FW_ChangeGameCfgDefaultTypeInternal _FW_ChangeGameCfg_default_instance_;
class FW_ChangeRobotCfg;
class FW_ChangeRobotCfgDefaultTypeInternal;
extern FW_ChangeRobotCfgDefaultTypeInternal _FW_ChangeRobotCfg_default_instance_;
class FW_GetCfg;
class FW_GetCfgDefaultTypeInternal;
extern FW_GetCfgDefaultTypeInternal _FW_GetCfg_default_instance_;
class FW_Result;
class FW_ResultDefaultTypeInternal;
extern FW_ResultDefaultTypeInternal _FW_Result_default_instance_;
class FW_SavePlayersInfoToMySQL;
class FW_SavePlayersInfoToMySQLDefaultTypeInternal;
extern FW_SavePlayersInfoToMySQLDefaultTypeInternal _FW_SavePlayersInfoToMySQL_default_instance_;
class GF_GetPlayerInfo;
class GF_GetPlayerInfoDefaultTypeInternal;
extern GF_GetPlayerInfoDefaultTypeInternal _GF_GetPlayerInfo_default_instance_;
class GF_PlayerIn;
class GF_PlayerInDefaultTypeInternal;
extern GF_PlayerInDefaultTypeInternal _GF_PlayerIn_default_instance_;
class GF_PlayerOut;
class GF_PlayerOutDefaultTypeInternal;
extern GF_PlayerOutDefaultTypeInternal _GF_PlayerOut_default_instance_;
class GF_SavePlayerInfo;
class GF_SavePlayerInfoDefaultTypeInternal;
extern GF_SavePlayerInfoDefaultTypeInternal _GF_SavePlayerInfo_default_instance_;
class GL_GetServerCfg;
class GL_GetServerCfgDefaultTypeInternal;
extern GL_GetServerCfgDefaultTypeInternal _GL_GetServerCfg_default_instance_;
class GL_NewNotice;
class GL_NewNoticeDefaultTypeInternal;
extern GL_NewNoticeDefaultTypeInternal _GL_NewNotice_default_instance_;
class GameClientRoomListCfg;
class GameClientRoomListCfgDefaultTypeInternal;
extern GameClientRoomListCfgDefaultTypeInternal _GameClientRoomListCfg_default_instance_;
class GameServerConfigInfo;
class GameServerConfigInfoDefaultTypeInternal;
extern GameServerConfigInfoDefaultTypeInternal _GameServerConfigInfo_default_instance_;
class GateServerConfigInfo;
class GateServerConfigInfoDefaultTypeInternal;
extern GateServerConfigInfoDefaultTypeInternal _GateServerConfigInfo_default_instance_;
class GuestAccount;
class GuestAccountDefaultTypeInternal;
extern GuestAccountDefaultTypeInternal _GuestAccount_default_instance_;
class ItemBagInfo;
class ItemBagInfoDefaultTypeInternal;
extern ItemBagInfoDefaultTypeInternal _ItemBagInfo_default_instance_;
class ItemInfo;
class ItemInfoDefaultTypeInternal;
extern ItemInfoDefaultTypeInternal _ItemInfo_default_instance_;
class LD_AddMoney;
class LD_AddMoneyDefaultTypeInternal;
extern LD_AddMoneyDefaultTypeInternal _LD_AddMoney_default_instance_;
class LD_AgentsTransfer_finish;
class LD_AgentsTransfer_finishDefaultTypeInternal;
extern LD_AgentsTransfer_finishDefaultTypeInternal _LD_AgentsTransfer_finish_default_instance_;
class LD_AlipayEdit;
class LD_AlipayEditDefaultTypeInternal;
extern LD_AlipayEditDefaultTypeInternal _LD_AlipayEdit_default_instance_;
class LD_CC_ChangeMoney;
class LD_CC_ChangeMoneyDefaultTypeInternal;
extern LD_CC_ChangeMoneyDefaultTypeInternal _LD_CC_ChangeMoney_default_instance_;
class LD_CashDeal;
class LD_CashDealDefaultTypeInternal;
extern LD_CashDealDefaultTypeInternal _LD_CashDeal_default_instance_;
class LD_CashFalse;
class LD_CashFalseDefaultTypeInternal;
extern LD_CashFalseDefaultTypeInternal _LD_CashFalse_default_instance_;
class LD_CashReply;
class LD_CashReplyDefaultTypeInternal;
extern LD_CashReplyDefaultTypeInternal _LD_CashReply_default_instance_;
class LD_DO_SQL;
class LD_DO_SQLDefaultTypeInternal;
extern LD_DO_SQLDefaultTypeInternal _LD_DO_SQL_default_instance_;
class LD_DelMessage;
class LD_DelMessageDefaultTypeInternal;
extern LD_DelMessageDefaultTypeInternal _LD_DelMessage_default_instance_;
class LD_GetServerCfg;
class LD_GetServerCfgDefaultTypeInternal;
extern LD_GetServerCfgDefaultTypeInternal _LD_GetServerCfg_default_instance_;
class LD_LuaCmdPlayerResult;
class LD_LuaCmdPlayerResultDefaultTypeInternal;
extern LD_LuaCmdPlayerResultDefaultTypeInternal _LD_LuaCmdPlayerResult_default_instance_;
class LD_NewNotice;
class LD_NewNoticeDefaultTypeInternal;
extern LD_NewNoticeDefaultTypeInternal _LD_NewNotice_default_instance_;
class LD_OfflineChangeMoney;
class LD_OfflineChangeMoneyDefaultTypeInternal;
extern LD_OfflineChangeMoneyDefaultTypeInternal _LD_OfflineChangeMoney_default_instance_;
class LD_PhoneQuery;
class LD_PhoneQueryDefaultTypeInternal;
extern LD_PhoneQueryDefaultTypeInternal _LD_PhoneQuery_default_instance_;
class LD_RegAccount;
class LD_RegAccountDefaultTypeInternal;
extern LD_RegAccountDefaultTypeInternal _LD_RegAccount_default_instance_;
class LD_SmsLogin;
class LD_SmsLoginDefaultTypeInternal;
extern LD_SmsLoginDefaultTypeInternal _LD_SmsLogin_default_instance_;
class LD_VerifyAccount;
class LD_VerifyAccountDefaultTypeInternal;
extern LD_VerifyAccountDefaultTypeInternal _LD_VerifyAccount_default_instance_;
class LG_AddNewGameServer;
class LG_AddNewGameServerDefaultTypeInternal;
extern LG_AddNewGameServerDefaultTypeInternal _LG_AddNewGameServer_default_instance_;
class LG_DBGameConfigMgr;
class LG_DBGameConfigMgrDefaultTypeInternal;
extern LG_DBGameConfigMgrDefaultTypeInternal _LG_DBGameConfigMgr_default_instance_;
class LG_DelNotice;
class LG_DelNoticeDefaultTypeInternal;
extern LG_DelNoticeDefaultTypeInternal _LG_DelNotice_default_instance_;
class LG_FeedBackUpdate;
class LG_FeedBackUpdateDefaultTypeInternal;
extern LG_FeedBackUpdateDefaultTypeInternal _LG_FeedBackUpdate_default_instance_;
class LG_KickClient;
class LG_KickClientDefaultTypeInternal;
extern LG_KickClientDefaultTypeInternal _LG_KickClient_default_instance_;
class LG_NewNotice;
class LG_NewNoticeDefaultTypeInternal;
extern LG_NewNoticeDefaultTypeInternal _LG_NewNotice_default_instance_;
class LG_PhoneQuery;
class LG_PhoneQueryDefaultTypeInternal;
extern LG_PhoneQueryDefaultTypeInternal _LG_PhoneQuery_default_instance_;
class LS_AddMoney;
class LS_AddMoneyDefaultTypeInternal;
extern LS_AddMoneyDefaultTypeInternal _LS_AddMoney_default_instance_;
class LS_AlipayEdit;
class LS_AlipayEditDefaultTypeInternal;
extern LS_AlipayEditDefaultTypeInternal _LS_AlipayEdit_default_instance_;
class LS_BankTransferByGuid;
class LS_BankTransferByGuidDefaultTypeInternal;
extern LS_BankTransferByGuidDefaultTypeInternal _LS_BankTransferByGuid_default_instance_;
class LS_BankTransferSelf;
class LS_BankTransferSelfDefaultTypeInternal;
extern LS_BankTransferSelfDefaultTypeInternal _LS_BankTransferSelf_default_instance_;
class LS_BankTransferTarget;
class LS_BankTransferTargetDefaultTypeInternal;
extern LS_BankTransferTargetDefaultTypeInternal _LS_BankTransferTarget_default_instance_;
class LS_CC_ChangeMoney;
class LS_CC_ChangeMoneyDefaultTypeInternal;
extern LS_CC_ChangeMoneyDefaultTypeInternal _LS_CC_ChangeMoney_default_instance_;
class LS_CashDeal;
class LS_CashDealDefaultTypeInternal;
extern LS_CashDealDefaultTypeInternal _LS_CashDeal_default_instance_;
class LS_ChangeGameResult;
class LS_ChangeGameResultDefaultTypeInternal;
extern LS_ChangeGameResultDefaultTypeInternal _LS_ChangeGameResult_default_instance_;
class LS_ChangeMoney;
class LS_ChangeMoneyDefaultTypeInternal;
extern LS_ChangeMoneyDefaultTypeInternal _LS_ChangeMoney_default_instance_;
class LS_ChangeTax;
class LS_ChangeTaxDefaultTypeInternal;
extern LS_ChangeTaxDefaultTypeInternal _LS_ChangeTax_default_instance_;
class LS_DelMessage;
class LS_DelMessageDefaultTypeInternal;
extern LS_DelMessageDefaultTypeInternal _LS_DelMessage_default_instance_;
class LS_FreezeAccount;
class LS_FreezeAccountDefaultTypeInternal;
extern LS_FreezeAccountDefaultTypeInternal _LS_FreezeAccount_default_instance_;
class LS_LoginNotify;
class LS_LoginNotifyDefaultTypeInternal;
extern LS_LoginNotifyDefaultTypeInternal _LS_LoginNotify_default_instance_;
class LS_LoginNotifyAgain;
class LS_LoginNotifyAgainDefaultTypeInternal;
extern LS_LoginNotifyAgainDefaultTypeInternal _LS_LoginNotifyAgain_default_instance_;
class LS_LuaCmdPlayerResult;
class LS_LuaCmdPlayerResultDefaultTypeInternal;
extern LS_LuaCmdPlayerResultDefaultTypeInternal _LS_LuaCmdPlayerResult_default_instance_;
class LS_LuaGameCmd;
class LS_LuaGameCmdDefaultTypeInternal;
extern LS_LuaGameCmdDefaultTypeInternal _LS_LuaGameCmd_default_instance_;
class LS_NewNotice;
class LS_NewNoticeDefaultTypeInternal;
extern LS_NewNoticeDefaultTypeInternal _LS_NewNotice_default_instance_;
class LW_CashFalse;
class LW_CashFalseDefaultTypeInternal;
extern LW_CashFalseDefaultTypeInternal _LW_CashFalse_default_instance_;
class LW_ChangeMoney;
class LW_ChangeMoneyDefaultTypeInternal;
extern LW_ChangeMoneyDefaultTypeInternal _LW_ChangeMoney_default_instance_;
class LW_ChangeTax;
class LW_ChangeTaxDefaultTypeInternal;
extern LW_ChangeTaxDefaultTypeInternal _LW_ChangeTax_default_instance_;
class LW_ClientUpdateResult;
class LW_ClientUpdateResultDefaultTypeInternal;
extern LW_ClientUpdateResultDefaultTypeInternal _LW_ClientUpdateResult_default_instance_;
class LW_GMMessage;
class LW_GMMessageDefaultTypeInternal;
extern LW_GMMessageDefaultTypeInternal _LW_GMMessage_default_instance_;
class LW_LuaCmdPlayerResult;
class LW_LuaCmdPlayerResultDefaultTypeInternal;
extern LW_LuaCmdPlayerResultDefaultTypeInternal _LW_LuaCmdPlayerResult_default_instance_;
class LW_LuaGameCmd;
class LW_LuaGameCmdDefaultTypeInternal;
extern LW_LuaGameCmdDefaultTypeInternal _LW_LuaGameCmd_default_instance_;
class LW_ResponseGameServerInfo;
class LW_ResponseGameServerInfoDefaultTypeInternal;
extern LW_ResponseGameServerInfoDefaultTypeInternal _LW_ResponseGameServerInfo_default_instance_;
class L_KickClient;
class L_KickClientDefaultTypeInternal;
extern L_KickClientDefaultTypeInternal _L_KickClient_default_instance_;
class LoginServerConfigInfo;
class LoginServerConfigInfoDefaultTypeInternal;
extern LoginServerConfigInfoDefaultTypeInternal _LoginServerConfigInfo_default_instance_;
class MailInfo;
class MailInfoDefaultTypeInternal;
extern MailInfoDefaultTypeInternal _MailInfo_default_instance_;
class MailListInfo;
class MailListInfoDefaultTypeInternal;
extern MailListInfoDefaultTypeInternal _MailListInfo_default_instance_;
class Marquee;
class MarqueeDefaultTypeInternal;
extern MarqueeDefaultTypeInternal _Marquee_default_instance_;
class Marquee_Data;
class Marquee_DataDefaultTypeInternal;
extern Marquee_DataDefaultTypeInternal _Marquee_Data_default_instance_;
class Msg_Data;
class Msg_DataDefaultTypeInternal;
extern Msg_DataDefaultTypeInternal _Msg_Data_default_instance_;
class Msg_DataInfo;
class Msg_DataInfoDefaultTypeInternal;
extern Msg_DataInfoDefaultTypeInternal _Msg_DataInfo_default_instance_;
class NetworkAddress;
class NetworkAddressDefaultTypeInternal;
extern NetworkAddressDefaultTypeInternal _NetworkAddress_default_instance_;
class PlayerBaseInfo;
class PlayerBaseInfoDefaultTypeInternal;
extern PlayerBaseInfoDefaultTypeInternal _PlayerBaseInfo_default_instance_;
class PlayerInfoInMemery;
class PlayerInfoInMemeryDefaultTypeInternal;
extern PlayerInfoInMemeryDefaultTypeInternal _PlayerInfoInMemery_default_instance_;
class PlayerLoginInfo;
class PlayerLoginInfoDefaultTypeInternal;
extern PlayerLoginInfoDefaultTypeInternal _PlayerLoginInfo_default_instance_;
class PlayerMoney;
class PlayerMoneyDefaultTypeInternal;
extern PlayerMoneyDefaultTypeInternal _PlayerMoney_default_instance_;
class PlayerPromotion;
class PlayerPromotionDefaultTypeInternal;
extern PlayerPromotionDefaultTypeInternal _PlayerPromotion_default_instance_;
class PlayerVisualInfo;
class PlayerVisualInfoDefaultTypeInternal;
extern PlayerVisualInfoDefaultTypeInternal _PlayerVisualInfo_default_instance_;
class PrivateRoomInfoConfig;
class PrivateRoomInfoConfigDefaultTypeInternal;
extern PrivateRoomInfoConfigDefaultTypeInternal _PrivateRoomInfoConfig_default_instance_;
class PrivateRoomListConfig;
class PrivateRoomListConfigDefaultTypeInternal;
extern PrivateRoomListConfigDefaultTypeInternal _PrivateRoomListConfig_default_instance_;
class RankItem;
class RankItemDefaultTypeInternal;
extern RankItemDefaultTypeInternal _RankItem_default_instance_;
class RankList;
class RankListDefaultTypeInternal;
extern RankListDefaultTypeInternal _RankList_default_instance_;
class Recharge;
class RechargeDefaultTypeInternal;
extern RechargeDefaultTypeInternal _Recharge_default_instance_;
class RedisConnectOption;
class RedisConnectOptionDefaultTypeInternal;
extern RedisConnectOptionDefaultTypeInternal _RedisConnectOption_default_instance_;
class RedisSentinelOption;
class RedisSentinelOptionDefaultTypeInternal;
extern RedisSentinelOptionDefaultTypeInternal _RedisSentinelOption_default_instance_;
class SD_Agent_CashMoney;
class SD_Agent_CashMoneyDefaultTypeInternal;
extern SD_Agent_CashMoneyDefaultTypeInternal _SD_Agent_CashMoney_default_instance_;
class SD_BandAlipay;
class SD_BandAlipayDefaultTypeInternal;
extern SD_BandAlipayDefaultTypeInternal _SD_BandAlipay_default_instance_;
class SD_BankChangePassword;
class SD_BankChangePasswordDefaultTypeInternal;
extern SD_BankChangePasswordDefaultTypeInternal _SD_BankChangePassword_default_instance_;
class SD_BankLog;
class SD_BankLogDefaultTypeInternal;
extern SD_BankLogDefaultTypeInternal _SD_BankLog_default_instance_;
class SD_BankLogin;
class SD_BankLoginDefaultTypeInternal;
extern SD_BankLoginDefaultTypeInternal _SD_BankLogin_default_instance_;
class SD_BankSetPassword;
class SD_BankSetPasswordDefaultTypeInternal;
extern SD_BankSetPasswordDefaultTypeInternal _SD_BankSetPassword_default_instance_;
class SD_BankStatement;
class SD_BankStatementDefaultTypeInternal;
extern SD_BankStatementDefaultTypeInternal _SD_BankStatement_default_instance_;
class SD_BankTransfer;
class SD_BankTransferDefaultTypeInternal;
extern SD_BankTransferDefaultTypeInternal _SD_BankTransfer_default_instance_;
class SD_BindBankCard;
class SD_BindBankCardDefaultTypeInternal;
extern SD_BindBankCardDefaultTypeInternal _SD_BindBankCard_default_instance_;
class SD_CashMoney;
class SD_CashMoneyDefaultTypeInternal;
extern SD_CashMoneyDefaultTypeInternal _SD_CashMoney_default_instance_;
class SD_CashMoneyType;
class SD_CashMoneyTypeDefaultTypeInternal;
extern SD_CashMoneyTypeDefaultTypeInternal _SD_CashMoneyType_default_instance_;
class SD_ChangMoneyReply;
class SD_ChangMoneyReplyDefaultTypeInternal;
extern SD_ChangMoneyReplyDefaultTypeInternal _SD_ChangMoneyReply_default_instance_;
class SD_DelMail;
class SD_DelMailDefaultTypeInternal;
extern SD_DelMailDefaultTypeInternal _SD_DelMail_default_instance_;
class SD_Do_OneSql;
class SD_Do_OneSqlDefaultTypeInternal;
extern SD_Do_OneSqlDefaultTypeInternal _SD_Do_OneSql_default_instance_;
class SD_FilishPrivateRoomLog;
class SD_FilishPrivateRoomLogDefaultTypeInternal;
extern SD_FilishPrivateRoomLogDefaultTypeInternal _SD_FilishPrivateRoomLog_default_instance_;
class SD_GetBankCardInfo;
class SD_GetBankCardInfoDefaultTypeInternal;
extern SD_GetBankCardInfoDefaultTypeInternal _SD_GetBankCardInfo_default_instance_;
class SD_LoadAndroidData;
class SD_LoadAndroidDataDefaultTypeInternal;
extern SD_LoadAndroidDataDefaultTypeInternal _SD_LoadAndroidData_default_instance_;
class SD_LogMoney;
class SD_LogMoneyDefaultTypeInternal;
extern SD_LogMoneyDefaultTypeInternal _SD_LogMoney_default_instance_;
class SD_NotifyPhpServer;
class SD_NotifyPhpServerDefaultTypeInternal;
extern SD_NotifyPhpServerDefaultTypeInternal _SD_NotifyPhpServer_default_instance_;
class SD_OnlineAccount;
class SD_OnlineAccountDefaultTypeInternal;
extern SD_OnlineAccountDefaultTypeInternal _SD_OnlineAccount_default_instance_;
class SD_PrivateRoomLog;
class SD_PrivateRoomLogDefaultTypeInternal;
extern SD_PrivateRoomLogDefaultTypeInternal _SD_PrivateRoomLog_default_instance_;
class SD_QueryBrnnChiCfg;
class SD_QueryBrnnChiCfgDefaultTypeInternal;
extern SD_QueryBrnnChiCfgDefaultTypeInternal _SD_QueryBrnnChiCfg_default_instance_;
class SD_QueryChannelInviteCfg;
class SD_QueryChannelInviteCfgDefaultTypeInternal;
extern SD_QueryChannelInviteCfgDefaultTypeInternal _SD_QueryChannelInviteCfg_default_instance_;
class SD_QueryOxConfigData;
class SD_QueryOxConfigDataDefaultTypeInternal;
extern SD_QueryOxConfigDataDefaultTypeInternal _SD_QueryOxConfigData_default_instance_;
class SD_QueryPlayerData;
class SD_QueryPlayerDataDefaultTypeInternal;
extern SD_QueryPlayerDataDefaultTypeInternal _SD_QueryPlayerData_default_instance_;
class SD_QueryPlayerInviteReward;
class SD_QueryPlayerInviteRewardDefaultTypeInternal;
extern SD_QueryPlayerInviteRewardDefaultTypeInternal _SD_QueryPlayerInviteReward_default_instance_;
class SD_QueryPlayerMarquee;
class SD_QueryPlayerMarqueeDefaultTypeInternal;
extern SD_QueryPlayerMarqueeDefaultTypeInternal _SD_QueryPlayerMarquee_default_instance_;
class SD_QueryPlayerMsgData;
class SD_QueryPlayerMsgDataDefaultTypeInternal;
extern SD_QueryPlayerMsgDataDefaultTypeInternal _SD_QueryPlayerMsgData_default_instance_;
class SD_QueryPlayerPromotion;
class SD_QueryPlayerPromotionDefaultTypeInternal;
extern SD_QueryPlayerPromotionDefaultTypeInternal _SD_QueryPlayerPromotion_default_instance_;
class SD_QueryPlayerRecharge;
class SD_QueryPlayerRechargeDefaultTypeInternal;
extern SD_QueryPlayerRechargeDefaultTypeInternal _SD_QueryPlayerRecharge_default_instance_;
class SD_QueryRobotCfg;
class SD_QueryRobotCfgDefaultTypeInternal;
extern SD_QueryRobotCfgDefaultTypeInternal _SD_QueryRobotCfg_default_instance_;
class SD_ReceiveMailAttachment;
class SD_ReceiveMailAttachmentDefaultTypeInternal;
extern SD_ReceiveMailAttachmentDefaultTypeInternal _SD_ReceiveMailAttachment_default_instance_;
class SD_ResetAccount;
class SD_ResetAccountDefaultTypeInternal;
extern SD_ResetAccountDefaultTypeInternal _SD_ResetAccount_default_instance_;
class SD_SaveBankStatement;
class SD_SaveBankStatementDefaultTypeInternal;
extern SD_SaveBankStatementDefaultTypeInternal _SD_SaveBankStatement_default_instance_;
class SD_SavePlayerBank;
class SD_SavePlayerBankDefaultTypeInternal;
extern SD_SavePlayerBankDefaultTypeInternal _SD_SavePlayerBank_default_instance_;
class SD_SavePlayerData;
class SD_SavePlayerDataDefaultTypeInternal;
extern SD_SavePlayerDataDefaultTypeInternal _SD_SavePlayerData_default_instance_;
class SD_SavePlayerMoney;
class SD_SavePlayerMoneyDefaultTypeInternal;
extern SD_SavePlayerMoneyDefaultTypeInternal _SD_SavePlayerMoney_default_instance_;
class SD_SavePlayerOxData;
class SD_SavePlayerOxDataDefaultTypeInternal;
extern SD_SavePlayerOxDataDefaultTypeInternal _SD_SavePlayerOxData_default_instance_;
class SD_Save_Storage;
class SD_Save_StorageDefaultTypeInternal;
extern SD_Save_StorageDefaultTypeInternal _SD_Save_Storage_default_instance_;
class SD_SendMail;
class SD_SendMailDefaultTypeInternal;
extern SD_SendMailDefaultTypeInternal _SD_SendMail_default_instance_;
class SD_ServerConfig;
class SD_ServerConfigDefaultTypeInternal;
extern SD_ServerConfigDefaultTypeInternal _SD_ServerConfig_default_instance_;
class SD_SetMsgReadFlag;
class SD_SetMsgReadFlagDefaultTypeInternal;
extern SD_SetMsgReadFlagDefaultTypeInternal _SD_SetMsgReadFlag_default_instance_;
class SD_SetNickname;
class SD_SetNicknameDefaultTypeInternal;
extern SD_SetNicknameDefaultTypeInternal _SD_SetNickname_default_instance_;
class SD_SetPassword;
class SD_SetPasswordDefaultTypeInternal;
extern SD_SetPasswordDefaultTypeInternal _SD_SetPassword_default_instance_;
class SD_SetPasswordBySms;
class SD_SetPasswordBySmsDefaultTypeInternal;
extern SD_SetPasswordBySmsDefaultTypeInternal _SD_SetPasswordBySms_default_instance_;
class SD_StartPrivateRoomLog;
class SD_StartPrivateRoomLogDefaultTypeInternal;
extern SD_StartPrivateRoomLogDefaultTypeInternal _SD_StartPrivateRoomLog_default_instance_;
class SD_UpdateEarnings;
class SD_UpdateEarningsDefaultTypeInternal;
extern SD_UpdateEarningsDefaultTypeInternal _SD_UpdateEarnings_default_instance_;
class SD_UpdateGameTotalTax;
class SD_UpdateGameTotalTaxDefaultTypeInternal;
extern SD_UpdateGameTotalTaxDefaultTypeInternal _SD_UpdateGameTotalTax_default_instance_;
class SF_ChangeGameCfg;
class SF_ChangeGameCfgDefaultTypeInternal;
extern SF_ChangeGameCfgDefaultTypeInternal _SF_ChangeGameCfg_default_instance_;
class SL_AddMoney;
class SL_AddMoneyDefaultTypeInternal;
extern SL_AddMoneyDefaultTypeInternal _SL_AddMoney_default_instance_;
class SL_CC_ChangeMoney;
class SL_CC_ChangeMoneyDefaultTypeInternal;
extern SL_CC_ChangeMoneyDefaultTypeInternal _SL_CC_ChangeMoney_default_instance_;
class SL_CashReply;
class SL_CashReplyDefaultTypeInternal;
extern SL_CashReplyDefaultTypeInternal _SL_CashReply_default_instance_;
class SL_ChangeGameResult;
class SL_ChangeGameResultDefaultTypeInternal;
extern SL_ChangeGameResultDefaultTypeInternal _SL_ChangeGameResult_default_instance_;
class SL_ChangeMoney;
class SL_ChangeMoneyDefaultTypeInternal;
extern SL_ChangeMoneyDefaultTypeInternal _SL_ChangeMoney_default_instance_;
class SL_ChangeTax;
class SL_ChangeTaxDefaultTypeInternal;
extern SL_ChangeTaxDefaultTypeInternal _SL_ChangeTax_default_instance_;
class SL_Channel_Invite_Tax;
class SL_Channel_Invite_TaxDefaultTypeInternal;
extern SL_Channel_Invite_TaxDefaultTypeInternal _SL_Channel_Invite_Tax_default_instance_;
class SL_FreezeAccount;
class SL_FreezeAccountDefaultTypeInternal;
extern SL_FreezeAccountDefaultTypeInternal _SL_FreezeAccount_default_instance_;
class SL_Log_Game;
class SL_Log_GameDefaultTypeInternal;
extern SL_Log_GameDefaultTypeInternal _SL_Log_Game_default_instance_;
class SL_Log_Money;
class SL_Log_MoneyDefaultTypeInternal;
extern SL_Log_MoneyDefaultTypeInternal _SL_Log_Money_default_instance_;
class SL_Log_Robot_Money;
class SL_Log_Robot_MoneyDefaultTypeInternal;
extern SL_Log_Robot_MoneyDefaultTypeInternal _SL_Log_Robot_Money_default_instance_;
class SL_LuaCmdPlayerResult;
class SL_LuaCmdPlayerResultDefaultTypeInternal;
extern SL_LuaCmdPlayerResultDefaultTypeInternal _SL_LuaCmdPlayerResult_default_instance_;
class SL_LuaGameCmd;
class SL_LuaGameCmdDefaultTypeInternal;
extern SL_LuaGameCmdDefaultTypeInternal _SL_LuaGameCmd_default_instance_;
class SL_WebGameServerInfo;
class SL_WebGameServerInfoDefaultTypeInternal;
extern SL_WebGameServerInfoDefaultTypeInternal _SL_WebGameServerInfo_default_instance_;
class SS_ChangeGame;
class SS_ChangeGameDefaultTypeInternal;
extern SS_ChangeGameDefaultTypeInternal _SS_ChangeGame_default_instance_;
class SS_JoinPrivateRoom;
class SS_JoinPrivateRoomDefaultTypeInternal;
extern SS_JoinPrivateRoomDefaultTypeInternal _SS_JoinPrivateRoom_default_instance_;
class SW_MaintainResult;
class SW_MaintainResultDefaultTypeInternal;
extern SW_MaintainResultDefaultTypeInternal _SW_MaintainResult_default_instance_;
class S_BankTransferByGuid;
class S_BankTransferByGuidDefaultTypeInternal;
extern S_BankTransferByGuidDefaultTypeInternal _S_BankTransferByGuid_default_instance_;
class S_Connect;
class S_ConnectDefaultTypeInternal;
extern S_ConnectDefaultTypeInternal _S_Connect_default_instance_;
class S_ConnectDB;
class S_ConnectDBDefaultTypeInternal;
extern S_ConnectDBDefaultTypeInternal _S_ConnectDB_default_instance_;
class S_Heartbeat;
class S_HeartbeatDefaultTypeInternal;
extern S_HeartbeatDefaultTypeInternal _S_Heartbeat_default_instance_;
class S_Logout;
class S_LogoutDefaultTypeInternal;
extern S_LogoutDefaultTypeInternal _S_Logout_default_instance_;
class S_NotifyDBServerStart;
class S_NotifyDBServerStartDefaultTypeInternal;
extern S_NotifyDBServerStartDefaultTypeInternal _S_NotifyDBServerStart_default_instance_;
class S_NotifyGameServerStart;
class S_NotifyGameServerStartDefaultTypeInternal;
extern S_NotifyGameServerStartDefaultTypeInternal _S_NotifyGameServerStart_default_instance_;
class S_NotifyLoginServerStart;
class S_NotifyLoginServerStartDefaultTypeInternal;
extern S_NotifyLoginServerStartDefaultTypeInternal _S_NotifyLoginServerStart_default_instance_;
class S_ReplyPrivateRoomConfig;
class S_ReplyPrivateRoomConfigDefaultTypeInternal;
extern S_ReplyPrivateRoomConfigDefaultTypeInternal _S_ReplyPrivateRoomConfig_default_instance_;
class S_ReplyServerConfig;
class S_ReplyServerConfigDefaultTypeInternal;
extern S_ReplyServerConfigDefaultTypeInternal _S_ReplyServerConfig_default_instance_;
class S_ReplyUpdateDBServerConfigByGame;
class S_ReplyUpdateDBServerConfigByGameDefaultTypeInternal;
extern S_ReplyUpdateDBServerConfigByGameDefaultTypeInternal _S_ReplyUpdateDBServerConfigByGame_default_instance_;
class S_ReplyUpdateDBServerConfigByLogin;
class S_ReplyUpdateDBServerConfigByLoginDefaultTypeInternal;
extern S_ReplyUpdateDBServerConfigByLoginDefaultTypeInternal _S_ReplyUpdateDBServerConfigByLogin_default_instance_;
class S_ReplyUpdateGameServerConfig;
class S_ReplyUpdateGameServerConfigDefaultTypeInternal;
extern S_ReplyUpdateGameServerConfigDefaultTypeInternal _S_ReplyUpdateGameServerConfig_default_instance_;
class S_ReplyUpdateLoginServerConfigByGame;
class S_ReplyUpdateLoginServerConfigByGameDefaultTypeInternal;
extern S_ReplyUpdateLoginServerConfigByGameDefaultTypeInternal _S_ReplyUpdateLoginServerConfigByGame_default_instance_;
class S_ReplyUpdateLoginServerConfigByGate;
class S_ReplyUpdateLoginServerConfigByGateDefaultTypeInternal;
extern S_ReplyUpdateLoginServerConfigByGateDefaultTypeInternal _S_ReplyUpdateLoginServerConfigByGate_default_instance_;
class S_RequestServerConfig;
class S_RequestServerConfigDefaultTypeInternal;
extern S_RequestServerConfigDefaultTypeInternal _S_RequestServerConfig_default_instance_;
class S_RequestUpdateDBServerConfigByGame;
class S_RequestUpdateDBServerConfigByGameDefaultTypeInternal;
extern S_RequestUpdateDBServerConfigByGameDefaultTypeInternal _S_RequestUpdateDBServerConfigByGame_default_instance_;
class S_RequestUpdateDBServerConfigByLogin;
class S_RequestUpdateDBServerConfigByLoginDefaultTypeInternal;
extern S_RequestUpdateDBServerConfigByLoginDefaultTypeInternal _S_RequestUpdateDBServerConfigByLogin_default_instance_;
class S_RequestUpdateGameServerConfig;
class S_RequestUpdateGameServerConfigDefaultTypeInternal;
extern S_RequestUpdateGameServerConfigDefaultTypeInternal _S_RequestUpdateGameServerConfig_default_instance_;
class S_RequestUpdateLoginServerConfigByGame;
class S_RequestUpdateLoginServerConfigByGameDefaultTypeInternal;
extern S_RequestUpdateLoginServerConfigByGameDefaultTypeInternal _S_RequestUpdateLoginServerConfigByGame_default_instance_;
class S_RequestUpdateLoginServerConfigByGate;
class S_RequestUpdateLoginServerConfigByGateDefaultTypeInternal;
extern S_RequestUpdateLoginServerConfigByGateDefaultTypeInternal _S_RequestUpdateLoginServerConfigByGate_default_instance_;
class S_UpdateGamePlayerCount;
class S_UpdateGamePlayerCountDefaultTypeInternal;
extern S_UpdateGamePlayerCountDefaultTypeInternal _S_UpdateGamePlayerCount_default_instance_;
class VerifyAccount;
class VerifyAccountDefaultTypeInternal;
extern VerifyAccountDefaultTypeInternal _VerifyAccount_default_instance_;
class VerifyAccountResult;
class VerifyAccountResultDefaultTypeInternal;
extern VerifyAccountResultDefaultTypeInternal _VerifyAccountResult_default_instance_;
class WF_CashFalse;
class WF_CashFalseDefaultTypeInternal;
extern WF_CashFalseDefaultTypeInternal _WF_CashFalse_default_instance_;
class WF_Cash_false;
class WF_Cash_falseDefaultTypeInternal;
extern WF_Cash_falseDefaultTypeInternal _WF_Cash_false_default_instance_;
class WF_ChangeGameCfg;
class WF_ChangeGameCfgDefaultTypeInternal;
extern WF_ChangeGameCfgDefaultTypeInternal _WF_ChangeGameCfg_default_instance_;
class WF_ChangeRobotCfg;
class WF_ChangeRobotCfgDefaultTypeInternal;
extern WF_ChangeRobotCfgDefaultTypeInternal _WF_ChangeRobotCfg_default_instance_;
class WF_GetCfg;
class WF_GetCfgDefaultTypeInternal;
extern WF_GetCfgDefaultTypeInternal _WF_GetCfg_default_instance_;
class WF_Recharge;
class WF_RechargeDefaultTypeInternal;
extern WF_RechargeDefaultTypeInternal _WF_Recharge_default_instance_;
class WF_SavePlayersInfoToMySQL;
class WF_SavePlayersInfoToMySQLDefaultTypeInternal;
extern WF_SavePlayersInfoToMySQLDefaultTypeInternal _WF_SavePlayersInfoToMySQL_default_instance_;
class WL_BroadcastClientUpdate;
class WL_BroadcastClientUpdateDefaultTypeInternal;
extern WL_BroadcastClientUpdateDefaultTypeInternal _WL_BroadcastClientUpdate_default_instance_;
class WL_ChangeMoney;
class WL_ChangeMoneyDefaultTypeInternal;
extern WL_ChangeMoneyDefaultTypeInternal _WL_ChangeMoney_default_instance_;
class WL_ChangeTax;
class WL_ChangeTaxDefaultTypeInternal;
extern WL_ChangeTaxDefaultTypeInternal _WL_ChangeTax_default_instance_;
class WL_GMMessage;
class WL_GMMessageDefaultTypeInternal;
extern WL_GMMessageDefaultTypeInternal _WL_GMMessage_default_instance_;
class WL_LuaCmdPlayerResult;
class WL_LuaCmdPlayerResultDefaultTypeInternal;
extern WL_LuaCmdPlayerResultDefaultTypeInternal _WL_LuaCmdPlayerResult_default_instance_;
class WL_LuaGameCmd;
class WL_LuaGameCmdDefaultTypeInternal;
extern WL_LuaGameCmdDefaultTypeInternal _WL_LuaGameCmd_default_instance_;
class WL_RequestGameServerInfo;
class WL_RequestGameServerInfoDefaultTypeInternal;
extern WL_RequestGameServerInfoDefaultTypeInternal _WL_RequestGameServerInfo_default_instance_;
class WS_MaintainUpdate;
class WS_MaintainUpdateDefaultTypeInternal;
extern WS_MaintainUpdateDefaultTypeInternal _WS_MaintainUpdate_default_instance_;
class WebGameServerInfo;
class WebGameServerInfoDefaultTypeInternal;
extern WebGameServerInfoDefaultTypeInternal _WebGameServerInfo_default_instance_;

namespace protobuf_server_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_server_2eproto

enum S_Connect_MsgID {
  S_Connect_MsgID_ID = 1
};
bool S_Connect_MsgID_IsValid(int value);
const S_Connect_MsgID S_Connect_MsgID_MsgID_MIN = S_Connect_MsgID_ID;
const S_Connect_MsgID S_Connect_MsgID_MsgID_MAX = S_Connect_MsgID_ID;
const int S_Connect_MsgID_MsgID_ARRAYSIZE = S_Connect_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_Connect_MsgID_descriptor();
inline const ::std::string& S_Connect_MsgID_Name(S_Connect_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_Connect_MsgID_descriptor(), value);
}
inline bool S_Connect_MsgID_Parse(
    const ::std::string& name, S_Connect_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_Connect_MsgID>(
    S_Connect_MsgID_descriptor(), name, value);
}
enum S_UpdateGamePlayerCount_MsgID {
  S_UpdateGamePlayerCount_MsgID_ID = 2
};
bool S_UpdateGamePlayerCount_MsgID_IsValid(int value);
const S_UpdateGamePlayerCount_MsgID S_UpdateGamePlayerCount_MsgID_MsgID_MIN = S_UpdateGamePlayerCount_MsgID_ID;
const S_UpdateGamePlayerCount_MsgID S_UpdateGamePlayerCount_MsgID_MsgID_MAX = S_UpdateGamePlayerCount_MsgID_ID;
const int S_UpdateGamePlayerCount_MsgID_MsgID_ARRAYSIZE = S_UpdateGamePlayerCount_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_UpdateGamePlayerCount_MsgID_descriptor();
inline const ::std::string& S_UpdateGamePlayerCount_MsgID_Name(S_UpdateGamePlayerCount_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_UpdateGamePlayerCount_MsgID_descriptor(), value);
}
inline bool S_UpdateGamePlayerCount_MsgID_Parse(
    const ::std::string& name, S_UpdateGamePlayerCount_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_UpdateGamePlayerCount_MsgID>(
    S_UpdateGamePlayerCount_MsgID_descriptor(), name, value);
}
enum S_ConnectDB_MsgID {
  S_ConnectDB_MsgID_ID = 3
};
bool S_ConnectDB_MsgID_IsValid(int value);
const S_ConnectDB_MsgID S_ConnectDB_MsgID_MsgID_MIN = S_ConnectDB_MsgID_ID;
const S_ConnectDB_MsgID S_ConnectDB_MsgID_MsgID_MAX = S_ConnectDB_MsgID_ID;
const int S_ConnectDB_MsgID_MsgID_ARRAYSIZE = S_ConnectDB_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_ConnectDB_MsgID_descriptor();
inline const ::std::string& S_ConnectDB_MsgID_Name(S_ConnectDB_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_ConnectDB_MsgID_descriptor(), value);
}
inline bool S_ConnectDB_MsgID_Parse(
    const ::std::string& name, S_ConnectDB_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_ConnectDB_MsgID>(
    S_ConnectDB_MsgID_descriptor(), name, value);
}
enum S_RequestServerConfig_MsgID {
  S_RequestServerConfig_MsgID_ID = 10
};
bool S_RequestServerConfig_MsgID_IsValid(int value);
const S_RequestServerConfig_MsgID S_RequestServerConfig_MsgID_MsgID_MIN = S_RequestServerConfig_MsgID_ID;
const S_RequestServerConfig_MsgID S_RequestServerConfig_MsgID_MsgID_MAX = S_RequestServerConfig_MsgID_ID;
const int S_RequestServerConfig_MsgID_MsgID_ARRAYSIZE = S_RequestServerConfig_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_RequestServerConfig_MsgID_descriptor();
inline const ::std::string& S_RequestServerConfig_MsgID_Name(S_RequestServerConfig_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_RequestServerConfig_MsgID_descriptor(), value);
}
inline bool S_RequestServerConfig_MsgID_Parse(
    const ::std::string& name, S_RequestServerConfig_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_RequestServerConfig_MsgID>(
    S_RequestServerConfig_MsgID_descriptor(), name, value);
}
enum S_ReplyServerConfig_MsgID {
  S_ReplyServerConfig_MsgID_ID = 11
};
bool S_ReplyServerConfig_MsgID_IsValid(int value);
const S_ReplyServerConfig_MsgID S_ReplyServerConfig_MsgID_MsgID_MIN = S_ReplyServerConfig_MsgID_ID;
const S_ReplyServerConfig_MsgID S_ReplyServerConfig_MsgID_MsgID_MAX = S_ReplyServerConfig_MsgID_ID;
const int S_ReplyServerConfig_MsgID_MsgID_ARRAYSIZE = S_ReplyServerConfig_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_ReplyServerConfig_MsgID_descriptor();
inline const ::std::string& S_ReplyServerConfig_MsgID_Name(S_ReplyServerConfig_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_ReplyServerConfig_MsgID_descriptor(), value);
}
inline bool S_ReplyServerConfig_MsgID_Parse(
    const ::std::string& name, S_ReplyServerConfig_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_ReplyServerConfig_MsgID>(
    S_ReplyServerConfig_MsgID_descriptor(), name, value);
}
enum S_NotifyGameServerStart_MsgID {
  S_NotifyGameServerStart_MsgID_ID = 12
};
bool S_NotifyGameServerStart_MsgID_IsValid(int value);
const S_NotifyGameServerStart_MsgID S_NotifyGameServerStart_MsgID_MsgID_MIN = S_NotifyGameServerStart_MsgID_ID;
const S_NotifyGameServerStart_MsgID S_NotifyGameServerStart_MsgID_MsgID_MAX = S_NotifyGameServerStart_MsgID_ID;
const int S_NotifyGameServerStart_MsgID_MsgID_ARRAYSIZE = S_NotifyGameServerStart_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_NotifyGameServerStart_MsgID_descriptor();
inline const ::std::string& S_NotifyGameServerStart_MsgID_Name(S_NotifyGameServerStart_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_NotifyGameServerStart_MsgID_descriptor(), value);
}
inline bool S_NotifyGameServerStart_MsgID_Parse(
    const ::std::string& name, S_NotifyGameServerStart_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_NotifyGameServerStart_MsgID>(
    S_NotifyGameServerStart_MsgID_descriptor(), name, value);
}
enum S_RequestUpdateGameServerConfig_MsgID {
  S_RequestUpdateGameServerConfig_MsgID_ID = 13
};
bool S_RequestUpdateGameServerConfig_MsgID_IsValid(int value);
const S_RequestUpdateGameServerConfig_MsgID S_RequestUpdateGameServerConfig_MsgID_MsgID_MIN = S_RequestUpdateGameServerConfig_MsgID_ID;
const S_RequestUpdateGameServerConfig_MsgID S_RequestUpdateGameServerConfig_MsgID_MsgID_MAX = S_RequestUpdateGameServerConfig_MsgID_ID;
const int S_RequestUpdateGameServerConfig_MsgID_MsgID_ARRAYSIZE = S_RequestUpdateGameServerConfig_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_RequestUpdateGameServerConfig_MsgID_descriptor();
inline const ::std::string& S_RequestUpdateGameServerConfig_MsgID_Name(S_RequestUpdateGameServerConfig_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_RequestUpdateGameServerConfig_MsgID_descriptor(), value);
}
inline bool S_RequestUpdateGameServerConfig_MsgID_Parse(
    const ::std::string& name, S_RequestUpdateGameServerConfig_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_RequestUpdateGameServerConfig_MsgID>(
    S_RequestUpdateGameServerConfig_MsgID_descriptor(), name, value);
}
enum S_ReplyUpdateGameServerConfig_MsgID {
  S_ReplyUpdateGameServerConfig_MsgID_ID = 14
};
bool S_ReplyUpdateGameServerConfig_MsgID_IsValid(int value);
const S_ReplyUpdateGameServerConfig_MsgID S_ReplyUpdateGameServerConfig_MsgID_MsgID_MIN = S_ReplyUpdateGameServerConfig_MsgID_ID;
const S_ReplyUpdateGameServerConfig_MsgID S_ReplyUpdateGameServerConfig_MsgID_MsgID_MAX = S_ReplyUpdateGameServerConfig_MsgID_ID;
const int S_ReplyUpdateGameServerConfig_MsgID_MsgID_ARRAYSIZE = S_ReplyUpdateGameServerConfig_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_ReplyUpdateGameServerConfig_MsgID_descriptor();
inline const ::std::string& S_ReplyUpdateGameServerConfig_MsgID_Name(S_ReplyUpdateGameServerConfig_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_ReplyUpdateGameServerConfig_MsgID_descriptor(), value);
}
inline bool S_ReplyUpdateGameServerConfig_MsgID_Parse(
    const ::std::string& name, S_ReplyUpdateGameServerConfig_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_ReplyUpdateGameServerConfig_MsgID>(
    S_ReplyUpdateGameServerConfig_MsgID_descriptor(), name, value);
}
enum S_NotifyLoginServerStart_MsgID {
  S_NotifyLoginServerStart_MsgID_ID = 15
};
bool S_NotifyLoginServerStart_MsgID_IsValid(int value);
const S_NotifyLoginServerStart_MsgID S_NotifyLoginServerStart_MsgID_MsgID_MIN = S_NotifyLoginServerStart_MsgID_ID;
const S_NotifyLoginServerStart_MsgID S_NotifyLoginServerStart_MsgID_MsgID_MAX = S_NotifyLoginServerStart_MsgID_ID;
const int S_NotifyLoginServerStart_MsgID_MsgID_ARRAYSIZE = S_NotifyLoginServerStart_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_NotifyLoginServerStart_MsgID_descriptor();
inline const ::std::string& S_NotifyLoginServerStart_MsgID_Name(S_NotifyLoginServerStart_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_NotifyLoginServerStart_MsgID_descriptor(), value);
}
inline bool S_NotifyLoginServerStart_MsgID_Parse(
    const ::std::string& name, S_NotifyLoginServerStart_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_NotifyLoginServerStart_MsgID>(
    S_NotifyLoginServerStart_MsgID_descriptor(), name, value);
}
enum S_RequestUpdateLoginServerConfigByGate_MsgID {
  S_RequestUpdateLoginServerConfigByGate_MsgID_ID = 16
};
bool S_RequestUpdateLoginServerConfigByGate_MsgID_IsValid(int value);
const S_RequestUpdateLoginServerConfigByGate_MsgID S_RequestUpdateLoginServerConfigByGate_MsgID_MsgID_MIN = S_RequestUpdateLoginServerConfigByGate_MsgID_ID;
const S_RequestUpdateLoginServerConfigByGate_MsgID S_RequestUpdateLoginServerConfigByGate_MsgID_MsgID_MAX = S_RequestUpdateLoginServerConfigByGate_MsgID_ID;
const int S_RequestUpdateLoginServerConfigByGate_MsgID_MsgID_ARRAYSIZE = S_RequestUpdateLoginServerConfigByGate_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_RequestUpdateLoginServerConfigByGate_MsgID_descriptor();
inline const ::std::string& S_RequestUpdateLoginServerConfigByGate_MsgID_Name(S_RequestUpdateLoginServerConfigByGate_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_RequestUpdateLoginServerConfigByGate_MsgID_descriptor(), value);
}
inline bool S_RequestUpdateLoginServerConfigByGate_MsgID_Parse(
    const ::std::string& name, S_RequestUpdateLoginServerConfigByGate_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_RequestUpdateLoginServerConfigByGate_MsgID>(
    S_RequestUpdateLoginServerConfigByGate_MsgID_descriptor(), name, value);
}
enum S_ReplyUpdateLoginServerConfigByGate_MsgID {
  S_ReplyUpdateLoginServerConfigByGate_MsgID_ID = 17
};
bool S_ReplyUpdateLoginServerConfigByGate_MsgID_IsValid(int value);
const S_ReplyUpdateLoginServerConfigByGate_MsgID S_ReplyUpdateLoginServerConfigByGate_MsgID_MsgID_MIN = S_ReplyUpdateLoginServerConfigByGate_MsgID_ID;
const S_ReplyUpdateLoginServerConfigByGate_MsgID S_ReplyUpdateLoginServerConfigByGate_MsgID_MsgID_MAX = S_ReplyUpdateLoginServerConfigByGate_MsgID_ID;
const int S_ReplyUpdateLoginServerConfigByGate_MsgID_MsgID_ARRAYSIZE = S_ReplyUpdateLoginServerConfigByGate_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_ReplyUpdateLoginServerConfigByGate_MsgID_descriptor();
inline const ::std::string& S_ReplyUpdateLoginServerConfigByGate_MsgID_Name(S_ReplyUpdateLoginServerConfigByGate_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_ReplyUpdateLoginServerConfigByGate_MsgID_descriptor(), value);
}
inline bool S_ReplyUpdateLoginServerConfigByGate_MsgID_Parse(
    const ::std::string& name, S_ReplyUpdateLoginServerConfigByGate_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_ReplyUpdateLoginServerConfigByGate_MsgID>(
    S_ReplyUpdateLoginServerConfigByGate_MsgID_descriptor(), name, value);
}
enum S_RequestUpdateLoginServerConfigByGame_MsgID {
  S_RequestUpdateLoginServerConfigByGame_MsgID_ID = 18
};
bool S_RequestUpdateLoginServerConfigByGame_MsgID_IsValid(int value);
const S_RequestUpdateLoginServerConfigByGame_MsgID S_RequestUpdateLoginServerConfigByGame_MsgID_MsgID_MIN = S_RequestUpdateLoginServerConfigByGame_MsgID_ID;
const S_RequestUpdateLoginServerConfigByGame_MsgID S_RequestUpdateLoginServerConfigByGame_MsgID_MsgID_MAX = S_RequestUpdateLoginServerConfigByGame_MsgID_ID;
const int S_RequestUpdateLoginServerConfigByGame_MsgID_MsgID_ARRAYSIZE = S_RequestUpdateLoginServerConfigByGame_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_RequestUpdateLoginServerConfigByGame_MsgID_descriptor();
inline const ::std::string& S_RequestUpdateLoginServerConfigByGame_MsgID_Name(S_RequestUpdateLoginServerConfigByGame_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_RequestUpdateLoginServerConfigByGame_MsgID_descriptor(), value);
}
inline bool S_RequestUpdateLoginServerConfigByGame_MsgID_Parse(
    const ::std::string& name, S_RequestUpdateLoginServerConfigByGame_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_RequestUpdateLoginServerConfigByGame_MsgID>(
    S_RequestUpdateLoginServerConfigByGame_MsgID_descriptor(), name, value);
}
enum S_ReplyUpdateLoginServerConfigByGame_MsgID {
  S_ReplyUpdateLoginServerConfigByGame_MsgID_ID = 19
};
bool S_ReplyUpdateLoginServerConfigByGame_MsgID_IsValid(int value);
const S_ReplyUpdateLoginServerConfigByGame_MsgID S_ReplyUpdateLoginServerConfigByGame_MsgID_MsgID_MIN = S_ReplyUpdateLoginServerConfigByGame_MsgID_ID;
const S_ReplyUpdateLoginServerConfigByGame_MsgID S_ReplyUpdateLoginServerConfigByGame_MsgID_MsgID_MAX = S_ReplyUpdateLoginServerConfigByGame_MsgID_ID;
const int S_ReplyUpdateLoginServerConfigByGame_MsgID_MsgID_ARRAYSIZE = S_ReplyUpdateLoginServerConfigByGame_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_ReplyUpdateLoginServerConfigByGame_MsgID_descriptor();
inline const ::std::string& S_ReplyUpdateLoginServerConfigByGame_MsgID_Name(S_ReplyUpdateLoginServerConfigByGame_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_ReplyUpdateLoginServerConfigByGame_MsgID_descriptor(), value);
}
inline bool S_ReplyUpdateLoginServerConfigByGame_MsgID_Parse(
    const ::std::string& name, S_ReplyUpdateLoginServerConfigByGame_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_ReplyUpdateLoginServerConfigByGame_MsgID>(
    S_ReplyUpdateLoginServerConfigByGame_MsgID_descriptor(), name, value);
}
enum S_NotifyDBServerStart_MsgID {
  S_NotifyDBServerStart_MsgID_ID = 20
};
bool S_NotifyDBServerStart_MsgID_IsValid(int value);
const S_NotifyDBServerStart_MsgID S_NotifyDBServerStart_MsgID_MsgID_MIN = S_NotifyDBServerStart_MsgID_ID;
const S_NotifyDBServerStart_MsgID S_NotifyDBServerStart_MsgID_MsgID_MAX = S_NotifyDBServerStart_MsgID_ID;
const int S_NotifyDBServerStart_MsgID_MsgID_ARRAYSIZE = S_NotifyDBServerStart_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_NotifyDBServerStart_MsgID_descriptor();
inline const ::std::string& S_NotifyDBServerStart_MsgID_Name(S_NotifyDBServerStart_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_NotifyDBServerStart_MsgID_descriptor(), value);
}
inline bool S_NotifyDBServerStart_MsgID_Parse(
    const ::std::string& name, S_NotifyDBServerStart_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_NotifyDBServerStart_MsgID>(
    S_NotifyDBServerStart_MsgID_descriptor(), name, value);
}
enum S_RequestUpdateDBServerConfigByGame_MsgID {
  S_RequestUpdateDBServerConfigByGame_MsgID_ID = 21
};
bool S_RequestUpdateDBServerConfigByGame_MsgID_IsValid(int value);
const S_RequestUpdateDBServerConfigByGame_MsgID S_RequestUpdateDBServerConfigByGame_MsgID_MsgID_MIN = S_RequestUpdateDBServerConfigByGame_MsgID_ID;
const S_RequestUpdateDBServerConfigByGame_MsgID S_RequestUpdateDBServerConfigByGame_MsgID_MsgID_MAX = S_RequestUpdateDBServerConfigByGame_MsgID_ID;
const int S_RequestUpdateDBServerConfigByGame_MsgID_MsgID_ARRAYSIZE = S_RequestUpdateDBServerConfigByGame_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_RequestUpdateDBServerConfigByGame_MsgID_descriptor();
inline const ::std::string& S_RequestUpdateDBServerConfigByGame_MsgID_Name(S_RequestUpdateDBServerConfigByGame_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_RequestUpdateDBServerConfigByGame_MsgID_descriptor(), value);
}
inline bool S_RequestUpdateDBServerConfigByGame_MsgID_Parse(
    const ::std::string& name, S_RequestUpdateDBServerConfigByGame_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_RequestUpdateDBServerConfigByGame_MsgID>(
    S_RequestUpdateDBServerConfigByGame_MsgID_descriptor(), name, value);
}
enum S_ReplyUpdateDBServerConfigByGame_MsgID {
  S_ReplyUpdateDBServerConfigByGame_MsgID_ID = 22
};
bool S_ReplyUpdateDBServerConfigByGame_MsgID_IsValid(int value);
const S_ReplyUpdateDBServerConfigByGame_MsgID S_ReplyUpdateDBServerConfigByGame_MsgID_MsgID_MIN = S_ReplyUpdateDBServerConfigByGame_MsgID_ID;
const S_ReplyUpdateDBServerConfigByGame_MsgID S_ReplyUpdateDBServerConfigByGame_MsgID_MsgID_MAX = S_ReplyUpdateDBServerConfigByGame_MsgID_ID;
const int S_ReplyUpdateDBServerConfigByGame_MsgID_MsgID_ARRAYSIZE = S_ReplyUpdateDBServerConfigByGame_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_ReplyUpdateDBServerConfigByGame_MsgID_descriptor();
inline const ::std::string& S_ReplyUpdateDBServerConfigByGame_MsgID_Name(S_ReplyUpdateDBServerConfigByGame_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_ReplyUpdateDBServerConfigByGame_MsgID_descriptor(), value);
}
inline bool S_ReplyUpdateDBServerConfigByGame_MsgID_Parse(
    const ::std::string& name, S_ReplyUpdateDBServerConfigByGame_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_ReplyUpdateDBServerConfigByGame_MsgID>(
    S_ReplyUpdateDBServerConfigByGame_MsgID_descriptor(), name, value);
}
enum S_RequestUpdateDBServerConfigByLogin_MsgID {
  S_RequestUpdateDBServerConfigByLogin_MsgID_ID = 23
};
bool S_RequestUpdateDBServerConfigByLogin_MsgID_IsValid(int value);
const S_RequestUpdateDBServerConfigByLogin_MsgID S_RequestUpdateDBServerConfigByLogin_MsgID_MsgID_MIN = S_RequestUpdateDBServerConfigByLogin_MsgID_ID;
const S_RequestUpdateDBServerConfigByLogin_MsgID S_RequestUpdateDBServerConfigByLogin_MsgID_MsgID_MAX = S_RequestUpdateDBServerConfigByLogin_MsgID_ID;
const int S_RequestUpdateDBServerConfigByLogin_MsgID_MsgID_ARRAYSIZE = S_RequestUpdateDBServerConfigByLogin_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_RequestUpdateDBServerConfigByLogin_MsgID_descriptor();
inline const ::std::string& S_RequestUpdateDBServerConfigByLogin_MsgID_Name(S_RequestUpdateDBServerConfigByLogin_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_RequestUpdateDBServerConfigByLogin_MsgID_descriptor(), value);
}
inline bool S_RequestUpdateDBServerConfigByLogin_MsgID_Parse(
    const ::std::string& name, S_RequestUpdateDBServerConfigByLogin_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_RequestUpdateDBServerConfigByLogin_MsgID>(
    S_RequestUpdateDBServerConfigByLogin_MsgID_descriptor(), name, value);
}
enum S_ReplyUpdateDBServerConfigByLogin_MsgID {
  S_ReplyUpdateDBServerConfigByLogin_MsgID_ID = 24
};
bool S_ReplyUpdateDBServerConfigByLogin_MsgID_IsValid(int value);
const S_ReplyUpdateDBServerConfigByLogin_MsgID S_ReplyUpdateDBServerConfigByLogin_MsgID_MsgID_MIN = S_ReplyUpdateDBServerConfigByLogin_MsgID_ID;
const S_ReplyUpdateDBServerConfigByLogin_MsgID S_ReplyUpdateDBServerConfigByLogin_MsgID_MsgID_MAX = S_ReplyUpdateDBServerConfigByLogin_MsgID_ID;
const int S_ReplyUpdateDBServerConfigByLogin_MsgID_MsgID_ARRAYSIZE = S_ReplyUpdateDBServerConfigByLogin_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_ReplyUpdateDBServerConfigByLogin_MsgID_descriptor();
inline const ::std::string& S_ReplyUpdateDBServerConfigByLogin_MsgID_Name(S_ReplyUpdateDBServerConfigByLogin_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_ReplyUpdateDBServerConfigByLogin_MsgID_descriptor(), value);
}
inline bool S_ReplyUpdateDBServerConfigByLogin_MsgID_Parse(
    const ::std::string& name, S_ReplyUpdateDBServerConfigByLogin_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_ReplyUpdateDBServerConfigByLogin_MsgID>(
    S_ReplyUpdateDBServerConfigByLogin_MsgID_descriptor(), name, value);
}
enum S_ReplyPrivateRoomConfig_MsgID {
  S_ReplyPrivateRoomConfig_MsgID_ID = 25
};
bool S_ReplyPrivateRoomConfig_MsgID_IsValid(int value);
const S_ReplyPrivateRoomConfig_MsgID S_ReplyPrivateRoomConfig_MsgID_MsgID_MIN = S_ReplyPrivateRoomConfig_MsgID_ID;
const S_ReplyPrivateRoomConfig_MsgID S_ReplyPrivateRoomConfig_MsgID_MsgID_MAX = S_ReplyPrivateRoomConfig_MsgID_ID;
const int S_ReplyPrivateRoomConfig_MsgID_MsgID_ARRAYSIZE = S_ReplyPrivateRoomConfig_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_ReplyPrivateRoomConfig_MsgID_descriptor();
inline const ::std::string& S_ReplyPrivateRoomConfig_MsgID_Name(S_ReplyPrivateRoomConfig_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_ReplyPrivateRoomConfig_MsgID_descriptor(), value);
}
inline bool S_ReplyPrivateRoomConfig_MsgID_Parse(
    const ::std::string& name, S_ReplyPrivateRoomConfig_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_ReplyPrivateRoomConfig_MsgID>(
    S_ReplyPrivateRoomConfig_MsgID_descriptor(), name, value);
}
enum LD_RegAccount_MsgID {
  LD_RegAccount_MsgID_ID = 100
};
bool LD_RegAccount_MsgID_IsValid(int value);
const LD_RegAccount_MsgID LD_RegAccount_MsgID_MsgID_MIN = LD_RegAccount_MsgID_ID;
const LD_RegAccount_MsgID LD_RegAccount_MsgID_MsgID_MAX = LD_RegAccount_MsgID_ID;
const int LD_RegAccount_MsgID_MsgID_ARRAYSIZE = LD_RegAccount_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_RegAccount_MsgID_descriptor();
inline const ::std::string& LD_RegAccount_MsgID_Name(LD_RegAccount_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_RegAccount_MsgID_descriptor(), value);
}
inline bool LD_RegAccount_MsgID_Parse(
    const ::std::string& name, LD_RegAccount_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_RegAccount_MsgID>(
    LD_RegAccount_MsgID_descriptor(), name, value);
}
enum DL_RegAccount_MsgID {
  DL_RegAccount_MsgID_ID = 101
};
bool DL_RegAccount_MsgID_IsValid(int value);
const DL_RegAccount_MsgID DL_RegAccount_MsgID_MsgID_MIN = DL_RegAccount_MsgID_ID;
const DL_RegAccount_MsgID DL_RegAccount_MsgID_MsgID_MAX = DL_RegAccount_MsgID_ID;
const int DL_RegAccount_MsgID_MsgID_ARRAYSIZE = DL_RegAccount_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DL_RegAccount_MsgID_descriptor();
inline const ::std::string& DL_RegAccount_MsgID_Name(DL_RegAccount_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DL_RegAccount_MsgID_descriptor(), value);
}
inline bool DL_RegAccount_MsgID_Parse(
    const ::std::string& name, DL_RegAccount_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DL_RegAccount_MsgID>(
    DL_RegAccount_MsgID_descriptor(), name, value);
}
enum DL_RegAccount2_MsgID {
  DL_RegAccount2_MsgID_ID = 103
};
bool DL_RegAccount2_MsgID_IsValid(int value);
const DL_RegAccount2_MsgID DL_RegAccount2_MsgID_MsgID_MIN = DL_RegAccount2_MsgID_ID;
const DL_RegAccount2_MsgID DL_RegAccount2_MsgID_MsgID_MAX = DL_RegAccount2_MsgID_ID;
const int DL_RegAccount2_MsgID_MsgID_ARRAYSIZE = DL_RegAccount2_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DL_RegAccount2_MsgID_descriptor();
inline const ::std::string& DL_RegAccount2_MsgID_Name(DL_RegAccount2_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DL_RegAccount2_MsgID_descriptor(), value);
}
inline bool DL_RegAccount2_MsgID_Parse(
    const ::std::string& name, DL_RegAccount2_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DL_RegAccount2_MsgID>(
    DL_RegAccount2_MsgID_descriptor(), name, value);
}
enum SD_OnlineAccount_MsgID {
  SD_OnlineAccount_MsgID_ID = 102
};
bool SD_OnlineAccount_MsgID_IsValid(int value);
const SD_OnlineAccount_MsgID SD_OnlineAccount_MsgID_MsgID_MIN = SD_OnlineAccount_MsgID_ID;
const SD_OnlineAccount_MsgID SD_OnlineAccount_MsgID_MsgID_MAX = SD_OnlineAccount_MsgID_ID;
const int SD_OnlineAccount_MsgID_MsgID_ARRAYSIZE = SD_OnlineAccount_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_OnlineAccount_MsgID_descriptor();
inline const ::std::string& SD_OnlineAccount_MsgID_Name(SD_OnlineAccount_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_OnlineAccount_MsgID_descriptor(), value);
}
inline bool SD_OnlineAccount_MsgID_Parse(
    const ::std::string& name, SD_OnlineAccount_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_OnlineAccount_MsgID>(
    SD_OnlineAccount_MsgID_descriptor(), name, value);
}
enum LD_PhoneQuery_MsgID {
  LD_PhoneQuery_MsgID_ID = 104
};
bool LD_PhoneQuery_MsgID_IsValid(int value);
const LD_PhoneQuery_MsgID LD_PhoneQuery_MsgID_MsgID_MIN = LD_PhoneQuery_MsgID_ID;
const LD_PhoneQuery_MsgID LD_PhoneQuery_MsgID_MsgID_MAX = LD_PhoneQuery_MsgID_ID;
const int LD_PhoneQuery_MsgID_MsgID_ARRAYSIZE = LD_PhoneQuery_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_PhoneQuery_MsgID_descriptor();
inline const ::std::string& LD_PhoneQuery_MsgID_Name(LD_PhoneQuery_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_PhoneQuery_MsgID_descriptor(), value);
}
inline bool LD_PhoneQuery_MsgID_Parse(
    const ::std::string& name, LD_PhoneQuery_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_PhoneQuery_MsgID>(
    LD_PhoneQuery_MsgID_descriptor(), name, value);
}
enum DL_PhoneQuery_MsgID {
  DL_PhoneQuery_MsgID_ID = 105
};
bool DL_PhoneQuery_MsgID_IsValid(int value);
const DL_PhoneQuery_MsgID DL_PhoneQuery_MsgID_MsgID_MIN = DL_PhoneQuery_MsgID_ID;
const DL_PhoneQuery_MsgID DL_PhoneQuery_MsgID_MsgID_MAX = DL_PhoneQuery_MsgID_ID;
const int DL_PhoneQuery_MsgID_MsgID_ARRAYSIZE = DL_PhoneQuery_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DL_PhoneQuery_MsgID_descriptor();
inline const ::std::string& DL_PhoneQuery_MsgID_Name(DL_PhoneQuery_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DL_PhoneQuery_MsgID_descriptor(), value);
}
inline bool DL_PhoneQuery_MsgID_Parse(
    const ::std::string& name, DL_PhoneQuery_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DL_PhoneQuery_MsgID>(
    DL_PhoneQuery_MsgID_descriptor(), name, value);
}
enum S_Heartbeat_MsgID {
  S_Heartbeat_MsgID_ID = 106
};
bool S_Heartbeat_MsgID_IsValid(int value);
const S_Heartbeat_MsgID S_Heartbeat_MsgID_MsgID_MIN = S_Heartbeat_MsgID_ID;
const S_Heartbeat_MsgID S_Heartbeat_MsgID_MsgID_MAX = S_Heartbeat_MsgID_ID;
const int S_Heartbeat_MsgID_MsgID_ARRAYSIZE = S_Heartbeat_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_Heartbeat_MsgID_descriptor();
inline const ::std::string& S_Heartbeat_MsgID_Name(S_Heartbeat_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_Heartbeat_MsgID_descriptor(), value);
}
inline bool S_Heartbeat_MsgID_Parse(
    const ::std::string& name, S_Heartbeat_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_Heartbeat_MsgID>(
    S_Heartbeat_MsgID_descriptor(), name, value);
}
enum S_Logout_MsgID {
  S_Logout_MsgID_ID = 1500
};
bool S_Logout_MsgID_IsValid(int value);
const S_Logout_MsgID S_Logout_MsgID_MsgID_MIN = S_Logout_MsgID_ID;
const S_Logout_MsgID S_Logout_MsgID_MsgID_MAX = S_Logout_MsgID_ID;
const int S_Logout_MsgID_MsgID_ARRAYSIZE = S_Logout_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_Logout_MsgID_descriptor();
inline const ::std::string& S_Logout_MsgID_Name(S_Logout_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_Logout_MsgID_descriptor(), value);
}
inline bool S_Logout_MsgID_Parse(
    const ::std::string& name, S_Logout_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_Logout_MsgID>(
    S_Logout_MsgID_descriptor(), name, value);
}
enum LD_VerifyAccount_MsgID {
  LD_VerifyAccount_MsgID_ID = 1501
};
bool LD_VerifyAccount_MsgID_IsValid(int value);
const LD_VerifyAccount_MsgID LD_VerifyAccount_MsgID_MsgID_MIN = LD_VerifyAccount_MsgID_ID;
const LD_VerifyAccount_MsgID LD_VerifyAccount_MsgID_MsgID_MAX = LD_VerifyAccount_MsgID_ID;
const int LD_VerifyAccount_MsgID_MsgID_ARRAYSIZE = LD_VerifyAccount_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_VerifyAccount_MsgID_descriptor();
inline const ::std::string& LD_VerifyAccount_MsgID_Name(LD_VerifyAccount_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_VerifyAccount_MsgID_descriptor(), value);
}
inline bool LD_VerifyAccount_MsgID_Parse(
    const ::std::string& name, LD_VerifyAccount_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_VerifyAccount_MsgID>(
    LD_VerifyAccount_MsgID_descriptor(), name, value);
}
enum DL_VerifyAccountResult_MsgID {
  DL_VerifyAccountResult_MsgID_ID = 1502
};
bool DL_VerifyAccountResult_MsgID_IsValid(int value);
const DL_VerifyAccountResult_MsgID DL_VerifyAccountResult_MsgID_MsgID_MIN = DL_VerifyAccountResult_MsgID_ID;
const DL_VerifyAccountResult_MsgID DL_VerifyAccountResult_MsgID_MsgID_MAX = DL_VerifyAccountResult_MsgID_ID;
const int DL_VerifyAccountResult_MsgID_MsgID_ARRAYSIZE = DL_VerifyAccountResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DL_VerifyAccountResult_MsgID_descriptor();
inline const ::std::string& DL_VerifyAccountResult_MsgID_Name(DL_VerifyAccountResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DL_VerifyAccountResult_MsgID_descriptor(), value);
}
inline bool DL_VerifyAccountResult_MsgID_Parse(
    const ::std::string& name, DL_VerifyAccountResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DL_VerifyAccountResult_MsgID>(
    DL_VerifyAccountResult_MsgID_descriptor(), name, value);
}
enum LD_SmsLogin_MsgID {
  LD_SmsLogin_MsgID_ID = 1533
};
bool LD_SmsLogin_MsgID_IsValid(int value);
const LD_SmsLogin_MsgID LD_SmsLogin_MsgID_MsgID_MIN = LD_SmsLogin_MsgID_ID;
const LD_SmsLogin_MsgID LD_SmsLogin_MsgID_MsgID_MAX = LD_SmsLogin_MsgID_ID;
const int LD_SmsLogin_MsgID_MsgID_ARRAYSIZE = LD_SmsLogin_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_SmsLogin_MsgID_descriptor();
inline const ::std::string& LD_SmsLogin_MsgID_Name(LD_SmsLogin_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_SmsLogin_MsgID_descriptor(), value);
}
inline bool LD_SmsLogin_MsgID_Parse(
    const ::std::string& name, LD_SmsLogin_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_SmsLogin_MsgID>(
    LD_SmsLogin_MsgID_descriptor(), name, value);
}
enum LS_LoginNotify_MsgID {
  LS_LoginNotify_MsgID_ID = 1503
};
bool LS_LoginNotify_MsgID_IsValid(int value);
const LS_LoginNotify_MsgID LS_LoginNotify_MsgID_MsgID_MIN = LS_LoginNotify_MsgID_ID;
const LS_LoginNotify_MsgID LS_LoginNotify_MsgID_MsgID_MAX = LS_LoginNotify_MsgID_ID;
const int LS_LoginNotify_MsgID_MsgID_ARRAYSIZE = LS_LoginNotify_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_LoginNotify_MsgID_descriptor();
inline const ::std::string& LS_LoginNotify_MsgID_Name(LS_LoginNotify_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_LoginNotify_MsgID_descriptor(), value);
}
inline bool LS_LoginNotify_MsgID_Parse(
    const ::std::string& name, LS_LoginNotify_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_LoginNotify_MsgID>(
    LS_LoginNotify_MsgID_descriptor(), name, value);
}
enum LS_LoginNotifyAgain_MsgID {
  LS_LoginNotifyAgain_MsgID_ID = 1506
};
bool LS_LoginNotifyAgain_MsgID_IsValid(int value);
const LS_LoginNotifyAgain_MsgID LS_LoginNotifyAgain_MsgID_MsgID_MIN = LS_LoginNotifyAgain_MsgID_ID;
const LS_LoginNotifyAgain_MsgID LS_LoginNotifyAgain_MsgID_MsgID_MAX = LS_LoginNotifyAgain_MsgID_ID;
const int LS_LoginNotifyAgain_MsgID_MsgID_ARRAYSIZE = LS_LoginNotifyAgain_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_LoginNotifyAgain_MsgID_descriptor();
inline const ::std::string& LS_LoginNotifyAgain_MsgID_Name(LS_LoginNotifyAgain_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_LoginNotifyAgain_MsgID_descriptor(), value);
}
inline bool LS_LoginNotifyAgain_MsgID_Parse(
    const ::std::string& name, LS_LoginNotifyAgain_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_LoginNotifyAgain_MsgID>(
    LS_LoginNotifyAgain_MsgID_descriptor(), name, value);
}
enum LG_KickClient_MsgID {
  LG_KickClient_MsgID_ID = 1507
};
bool LG_KickClient_MsgID_IsValid(int value);
const LG_KickClient_MsgID LG_KickClient_MsgID_MsgID_MIN = LG_KickClient_MsgID_ID;
const LG_KickClient_MsgID LG_KickClient_MsgID_MsgID_MAX = LG_KickClient_MsgID_ID;
const int LG_KickClient_MsgID_MsgID_ARRAYSIZE = LG_KickClient_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LG_KickClient_MsgID_descriptor();
inline const ::std::string& LG_KickClient_MsgID_Name(LG_KickClient_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LG_KickClient_MsgID_descriptor(), value);
}
inline bool LG_KickClient_MsgID_Parse(
    const ::std::string& name, LG_KickClient_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LG_KickClient_MsgID>(
    LG_KickClient_MsgID_descriptor(), name, value);
}
enum L_KickClient_MsgID {
  L_KickClient_MsgID_ID = 1509
};
bool L_KickClient_MsgID_IsValid(int value);
const L_KickClient_MsgID L_KickClient_MsgID_MsgID_MIN = L_KickClient_MsgID_ID;
const L_KickClient_MsgID L_KickClient_MsgID_MsgID_MAX = L_KickClient_MsgID_ID;
const int L_KickClient_MsgID_MsgID_ARRAYSIZE = L_KickClient_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* L_KickClient_MsgID_descriptor();
inline const ::std::string& L_KickClient_MsgID_Name(L_KickClient_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    L_KickClient_MsgID_descriptor(), value);
}
inline bool L_KickClient_MsgID_Parse(
    const ::std::string& name, L_KickClient_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<L_KickClient_MsgID>(
    L_KickClient_MsgID_descriptor(), name, value);
}
enum SD_ResetAccount_MsgID {
  SD_ResetAccount_MsgID_ID = 1550
};
bool SD_ResetAccount_MsgID_IsValid(int value);
const SD_ResetAccount_MsgID SD_ResetAccount_MsgID_MsgID_MIN = SD_ResetAccount_MsgID_ID;
const SD_ResetAccount_MsgID SD_ResetAccount_MsgID_MsgID_MAX = SD_ResetAccount_MsgID_ID;
const int SD_ResetAccount_MsgID_MsgID_ARRAYSIZE = SD_ResetAccount_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_ResetAccount_MsgID_descriptor();
inline const ::std::string& SD_ResetAccount_MsgID_Name(SD_ResetAccount_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_ResetAccount_MsgID_descriptor(), value);
}
inline bool SD_ResetAccount_MsgID_Parse(
    const ::std::string& name, SD_ResetAccount_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_ResetAccount_MsgID>(
    SD_ResetAccount_MsgID_descriptor(), name, value);
}
enum DS_ResetAccount_MsgID {
  DS_ResetAccount_MsgID_ID = 1551
};
bool DS_ResetAccount_MsgID_IsValid(int value);
const DS_ResetAccount_MsgID DS_ResetAccount_MsgID_MsgID_MIN = DS_ResetAccount_MsgID_ID;
const DS_ResetAccount_MsgID DS_ResetAccount_MsgID_MsgID_MAX = DS_ResetAccount_MsgID_ID;
const int DS_ResetAccount_MsgID_MsgID_ARRAYSIZE = DS_ResetAccount_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_ResetAccount_MsgID_descriptor();
inline const ::std::string& DS_ResetAccount_MsgID_Name(DS_ResetAccount_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_ResetAccount_MsgID_descriptor(), value);
}
inline bool DS_ResetAccount_MsgID_Parse(
    const ::std::string& name, DS_ResetAccount_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_ResetAccount_MsgID>(
    DS_ResetAccount_MsgID_descriptor(), name, value);
}
enum SD_SetPassword_MsgID {
  SD_SetPassword_MsgID_ID = 1552
};
bool SD_SetPassword_MsgID_IsValid(int value);
const SD_SetPassword_MsgID SD_SetPassword_MsgID_MsgID_MIN = SD_SetPassword_MsgID_ID;
const SD_SetPassword_MsgID SD_SetPassword_MsgID_MsgID_MAX = SD_SetPassword_MsgID_ID;
const int SD_SetPassword_MsgID_MsgID_ARRAYSIZE = SD_SetPassword_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_SetPassword_MsgID_descriptor();
inline const ::std::string& SD_SetPassword_MsgID_Name(SD_SetPassword_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_SetPassword_MsgID_descriptor(), value);
}
inline bool SD_SetPassword_MsgID_Parse(
    const ::std::string& name, SD_SetPassword_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_SetPassword_MsgID>(
    SD_SetPassword_MsgID_descriptor(), name, value);
}
enum DS_SetPassword_MsgID {
  DS_SetPassword_MsgID_ID = 1553
};
bool DS_SetPassword_MsgID_IsValid(int value);
const DS_SetPassword_MsgID DS_SetPassword_MsgID_MsgID_MIN = DS_SetPassword_MsgID_ID;
const DS_SetPassword_MsgID DS_SetPassword_MsgID_MsgID_MAX = DS_SetPassword_MsgID_ID;
const int DS_SetPassword_MsgID_MsgID_ARRAYSIZE = DS_SetPassword_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_SetPassword_MsgID_descriptor();
inline const ::std::string& DS_SetPassword_MsgID_Name(DS_SetPassword_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_SetPassword_MsgID_descriptor(), value);
}
inline bool DS_SetPassword_MsgID_Parse(
    const ::std::string& name, DS_SetPassword_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_SetPassword_MsgID>(
    DS_SetPassword_MsgID_descriptor(), name, value);
}
enum SD_SetNickname_MsgID {
  SD_SetNickname_MsgID_ID = 1554
};
bool SD_SetNickname_MsgID_IsValid(int value);
const SD_SetNickname_MsgID SD_SetNickname_MsgID_MsgID_MIN = SD_SetNickname_MsgID_ID;
const SD_SetNickname_MsgID SD_SetNickname_MsgID_MsgID_MAX = SD_SetNickname_MsgID_ID;
const int SD_SetNickname_MsgID_MsgID_ARRAYSIZE = SD_SetNickname_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_SetNickname_MsgID_descriptor();
inline const ::std::string& SD_SetNickname_MsgID_Name(SD_SetNickname_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_SetNickname_MsgID_descriptor(), value);
}
inline bool SD_SetNickname_MsgID_Parse(
    const ::std::string& name, SD_SetNickname_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_SetNickname_MsgID>(
    SD_SetNickname_MsgID_descriptor(), name, value);
}
enum DS_SetNickname_MsgID {
  DS_SetNickname_MsgID_ID = 1555
};
bool DS_SetNickname_MsgID_IsValid(int value);
const DS_SetNickname_MsgID DS_SetNickname_MsgID_MsgID_MIN = DS_SetNickname_MsgID_ID;
const DS_SetNickname_MsgID DS_SetNickname_MsgID_MsgID_MAX = DS_SetNickname_MsgID_ID;
const int DS_SetNickname_MsgID_MsgID_ARRAYSIZE = DS_SetNickname_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_SetNickname_MsgID_descriptor();
inline const ::std::string& DS_SetNickname_MsgID_Name(DS_SetNickname_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_SetNickname_MsgID_descriptor(), value);
}
inline bool DS_SetNickname_MsgID_Parse(
    const ::std::string& name, DS_SetNickname_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_SetNickname_MsgID>(
    DS_SetNickname_MsgID_descriptor(), name, value);
}
enum SD_SetPasswordBySms_MsgID {
  SD_SetPasswordBySms_MsgID_ID = 1556
};
bool SD_SetPasswordBySms_MsgID_IsValid(int value);
const SD_SetPasswordBySms_MsgID SD_SetPasswordBySms_MsgID_MsgID_MIN = SD_SetPasswordBySms_MsgID_ID;
const SD_SetPasswordBySms_MsgID SD_SetPasswordBySms_MsgID_MsgID_MAX = SD_SetPasswordBySms_MsgID_ID;
const int SD_SetPasswordBySms_MsgID_MsgID_ARRAYSIZE = SD_SetPasswordBySms_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_SetPasswordBySms_MsgID_descriptor();
inline const ::std::string& SD_SetPasswordBySms_MsgID_Name(SD_SetPasswordBySms_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_SetPasswordBySms_MsgID_descriptor(), value);
}
inline bool SD_SetPasswordBySms_MsgID_Parse(
    const ::std::string& name, SD_SetPasswordBySms_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_SetPasswordBySms_MsgID>(
    SD_SetPasswordBySms_MsgID_descriptor(), name, value);
}
enum SD_QueryPlayerData_MsgID {
  SD_QueryPlayerData_MsgID_ID = 1600
};
bool SD_QueryPlayerData_MsgID_IsValid(int value);
const SD_QueryPlayerData_MsgID SD_QueryPlayerData_MsgID_MsgID_MIN = SD_QueryPlayerData_MsgID_ID;
const SD_QueryPlayerData_MsgID SD_QueryPlayerData_MsgID_MsgID_MAX = SD_QueryPlayerData_MsgID_ID;
const int SD_QueryPlayerData_MsgID_MsgID_ARRAYSIZE = SD_QueryPlayerData_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_QueryPlayerData_MsgID_descriptor();
inline const ::std::string& SD_QueryPlayerData_MsgID_Name(SD_QueryPlayerData_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_QueryPlayerData_MsgID_descriptor(), value);
}
inline bool SD_QueryPlayerData_MsgID_Parse(
    const ::std::string& name, SD_QueryPlayerData_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_QueryPlayerData_MsgID>(
    SD_QueryPlayerData_MsgID_descriptor(), name, value);
}
enum DS_LoadPlayerData_MsgID {
  DS_LoadPlayerData_MsgID_ID = 1601
};
bool DS_LoadPlayerData_MsgID_IsValid(int value);
const DS_LoadPlayerData_MsgID DS_LoadPlayerData_MsgID_MsgID_MIN = DS_LoadPlayerData_MsgID_ID;
const DS_LoadPlayerData_MsgID DS_LoadPlayerData_MsgID_MsgID_MAX = DS_LoadPlayerData_MsgID_ID;
const int DS_LoadPlayerData_MsgID_MsgID_ARRAYSIZE = DS_LoadPlayerData_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_LoadPlayerData_MsgID_descriptor();
inline const ::std::string& DS_LoadPlayerData_MsgID_Name(DS_LoadPlayerData_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_LoadPlayerData_MsgID_descriptor(), value);
}
inline bool DS_LoadPlayerData_MsgID_Parse(
    const ::std::string& name, DS_LoadPlayerData_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_LoadPlayerData_MsgID>(
    DS_LoadPlayerData_MsgID_descriptor(), name, value);
}
enum SD_SavePlayerData_MsgID {
  SD_SavePlayerData_MsgID_ID = 1603
};
bool SD_SavePlayerData_MsgID_IsValid(int value);
const SD_SavePlayerData_MsgID SD_SavePlayerData_MsgID_MsgID_MIN = SD_SavePlayerData_MsgID_ID;
const SD_SavePlayerData_MsgID SD_SavePlayerData_MsgID_MsgID_MAX = SD_SavePlayerData_MsgID_ID;
const int SD_SavePlayerData_MsgID_MsgID_ARRAYSIZE = SD_SavePlayerData_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_SavePlayerData_MsgID_descriptor();
inline const ::std::string& SD_SavePlayerData_MsgID_Name(SD_SavePlayerData_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_SavePlayerData_MsgID_descriptor(), value);
}
inline bool SD_SavePlayerData_MsgID_Parse(
    const ::std::string& name, SD_SavePlayerData_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_SavePlayerData_MsgID>(
    SD_SavePlayerData_MsgID_descriptor(), name, value);
}
enum SS_ChangeGame_MsgID {
  SS_ChangeGame_MsgID_ID = 1604
};
bool SS_ChangeGame_MsgID_IsValid(int value);
const SS_ChangeGame_MsgID SS_ChangeGame_MsgID_MsgID_MIN = SS_ChangeGame_MsgID_ID;
const SS_ChangeGame_MsgID SS_ChangeGame_MsgID_MsgID_MAX = SS_ChangeGame_MsgID_ID;
const int SS_ChangeGame_MsgID_MsgID_ARRAYSIZE = SS_ChangeGame_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SS_ChangeGame_MsgID_descriptor();
inline const ::std::string& SS_ChangeGame_MsgID_Name(SS_ChangeGame_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SS_ChangeGame_MsgID_descriptor(), value);
}
inline bool SS_ChangeGame_MsgID_Parse(
    const ::std::string& name, SS_ChangeGame_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SS_ChangeGame_MsgID>(
    SS_ChangeGame_MsgID_descriptor(), name, value);
}
enum LS_ChangeGameResult_MsgID {
  LS_ChangeGameResult_MsgID_ID = 1605
};
bool LS_ChangeGameResult_MsgID_IsValid(int value);
const LS_ChangeGameResult_MsgID LS_ChangeGameResult_MsgID_MsgID_MIN = LS_ChangeGameResult_MsgID_ID;
const LS_ChangeGameResult_MsgID LS_ChangeGameResult_MsgID_MsgID_MAX = LS_ChangeGameResult_MsgID_ID;
const int LS_ChangeGameResult_MsgID_MsgID_ARRAYSIZE = LS_ChangeGameResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_ChangeGameResult_MsgID_descriptor();
inline const ::std::string& LS_ChangeGameResult_MsgID_Name(LS_ChangeGameResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_ChangeGameResult_MsgID_descriptor(), value);
}
inline bool LS_ChangeGameResult_MsgID_Parse(
    const ::std::string& name, LS_ChangeGameResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_ChangeGameResult_MsgID>(
    LS_ChangeGameResult_MsgID_descriptor(), name, value);
}
enum SD_SavePlayerMoney_MsgID {
  SD_SavePlayerMoney_MsgID_ID = 1606
};
bool SD_SavePlayerMoney_MsgID_IsValid(int value);
const SD_SavePlayerMoney_MsgID SD_SavePlayerMoney_MsgID_MsgID_MIN = SD_SavePlayerMoney_MsgID_ID;
const SD_SavePlayerMoney_MsgID SD_SavePlayerMoney_MsgID_MsgID_MAX = SD_SavePlayerMoney_MsgID_ID;
const int SD_SavePlayerMoney_MsgID_MsgID_ARRAYSIZE = SD_SavePlayerMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_SavePlayerMoney_MsgID_descriptor();
inline const ::std::string& SD_SavePlayerMoney_MsgID_Name(SD_SavePlayerMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_SavePlayerMoney_MsgID_descriptor(), value);
}
inline bool SD_SavePlayerMoney_MsgID_Parse(
    const ::std::string& name, SD_SavePlayerMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_SavePlayerMoney_MsgID>(
    SD_SavePlayerMoney_MsgID_descriptor(), name, value);
}
enum SD_SavePlayerBank_MsgID {
  SD_SavePlayerBank_MsgID_ID = 1607
};
bool SD_SavePlayerBank_MsgID_IsValid(int value);
const SD_SavePlayerBank_MsgID SD_SavePlayerBank_MsgID_MsgID_MIN = SD_SavePlayerBank_MsgID_ID;
const SD_SavePlayerBank_MsgID SD_SavePlayerBank_MsgID_MsgID_MAX = SD_SavePlayerBank_MsgID_ID;
const int SD_SavePlayerBank_MsgID_MsgID_ARRAYSIZE = SD_SavePlayerBank_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_SavePlayerBank_MsgID_descriptor();
inline const ::std::string& SD_SavePlayerBank_MsgID_Name(SD_SavePlayerBank_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_SavePlayerBank_MsgID_descriptor(), value);
}
inline bool SD_SavePlayerBank_MsgID_Parse(
    const ::std::string& name, SD_SavePlayerBank_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_SavePlayerBank_MsgID>(
    SD_SavePlayerBank_MsgID_descriptor(), name, value);
}
enum SL_ChangeGameResult_MsgID {
  SL_ChangeGameResult_MsgID_ID = 1608
};
bool SL_ChangeGameResult_MsgID_IsValid(int value);
const SL_ChangeGameResult_MsgID SL_ChangeGameResult_MsgID_MsgID_MIN = SL_ChangeGameResult_MsgID_ID;
const SL_ChangeGameResult_MsgID SL_ChangeGameResult_MsgID_MsgID_MAX = SL_ChangeGameResult_MsgID_ID;
const int SL_ChangeGameResult_MsgID_MsgID_ARRAYSIZE = SL_ChangeGameResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SL_ChangeGameResult_MsgID_descriptor();
inline const ::std::string& SL_ChangeGameResult_MsgID_Name(SL_ChangeGameResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SL_ChangeGameResult_MsgID_descriptor(), value);
}
inline bool SL_ChangeGameResult_MsgID_Parse(
    const ::std::string& name, SL_ChangeGameResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SL_ChangeGameResult_MsgID>(
    SL_ChangeGameResult_MsgID_descriptor(), name, value);
}
enum SS_JoinPrivateRoom_MsgID {
  SS_JoinPrivateRoom_MsgID_ID = 1609
};
bool SS_JoinPrivateRoom_MsgID_IsValid(int value);
const SS_JoinPrivateRoom_MsgID SS_JoinPrivateRoom_MsgID_MsgID_MIN = SS_JoinPrivateRoom_MsgID_ID;
const SS_JoinPrivateRoom_MsgID SS_JoinPrivateRoom_MsgID_MsgID_MAX = SS_JoinPrivateRoom_MsgID_ID;
const int SS_JoinPrivateRoom_MsgID_MsgID_ARRAYSIZE = SS_JoinPrivateRoom_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SS_JoinPrivateRoom_MsgID_descriptor();
inline const ::std::string& SS_JoinPrivateRoom_MsgID_Name(SS_JoinPrivateRoom_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SS_JoinPrivateRoom_MsgID_descriptor(), value);
}
inline bool SS_JoinPrivateRoom_MsgID_Parse(
    const ::std::string& name, SS_JoinPrivateRoom_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SS_JoinPrivateRoom_MsgID>(
    SS_JoinPrivateRoom_MsgID_descriptor(), name, value);
}
enum SD_PrivateRoomLog_MsgID {
  SD_PrivateRoomLog_MsgID_ID = 1610
};
bool SD_PrivateRoomLog_MsgID_IsValid(int value);
const SD_PrivateRoomLog_MsgID SD_PrivateRoomLog_MsgID_MsgID_MIN = SD_PrivateRoomLog_MsgID_ID;
const SD_PrivateRoomLog_MsgID SD_PrivateRoomLog_MsgID_MsgID_MAX = SD_PrivateRoomLog_MsgID_ID;
const int SD_PrivateRoomLog_MsgID_MsgID_ARRAYSIZE = SD_PrivateRoomLog_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_PrivateRoomLog_MsgID_descriptor();
inline const ::std::string& SD_PrivateRoomLog_MsgID_Name(SD_PrivateRoomLog_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_PrivateRoomLog_MsgID_descriptor(), value);
}
inline bool SD_PrivateRoomLog_MsgID_Parse(
    const ::std::string& name, SD_PrivateRoomLog_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_PrivateRoomLog_MsgID>(
    SD_PrivateRoomLog_MsgID_descriptor(), name, value);
}
enum SD_FilishPrivateRoomLog_MsgID {
  SD_FilishPrivateRoomLog_MsgID_ID = 1611
};
bool SD_FilishPrivateRoomLog_MsgID_IsValid(int value);
const SD_FilishPrivateRoomLog_MsgID SD_FilishPrivateRoomLog_MsgID_MsgID_MIN = SD_FilishPrivateRoomLog_MsgID_ID;
const SD_FilishPrivateRoomLog_MsgID SD_FilishPrivateRoomLog_MsgID_MsgID_MAX = SD_FilishPrivateRoomLog_MsgID_ID;
const int SD_FilishPrivateRoomLog_MsgID_MsgID_ARRAYSIZE = SD_FilishPrivateRoomLog_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_FilishPrivateRoomLog_MsgID_descriptor();
inline const ::std::string& SD_FilishPrivateRoomLog_MsgID_Name(SD_FilishPrivateRoomLog_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_FilishPrivateRoomLog_MsgID_descriptor(), value);
}
inline bool SD_FilishPrivateRoomLog_MsgID_Parse(
    const ::std::string& name, SD_FilishPrivateRoomLog_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_FilishPrivateRoomLog_MsgID>(
    SD_FilishPrivateRoomLog_MsgID_descriptor(), name, value);
}
enum SD_StartPrivateRoomLog_MsgID {
  SD_StartPrivateRoomLog_MsgID_ID = 1612
};
bool SD_StartPrivateRoomLog_MsgID_IsValid(int value);
const SD_StartPrivateRoomLog_MsgID SD_StartPrivateRoomLog_MsgID_MsgID_MIN = SD_StartPrivateRoomLog_MsgID_ID;
const SD_StartPrivateRoomLog_MsgID SD_StartPrivateRoomLog_MsgID_MsgID_MAX = SD_StartPrivateRoomLog_MsgID_ID;
const int SD_StartPrivateRoomLog_MsgID_MsgID_ARRAYSIZE = SD_StartPrivateRoomLog_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_StartPrivateRoomLog_MsgID_descriptor();
inline const ::std::string& SD_StartPrivateRoomLog_MsgID_Name(SD_StartPrivateRoomLog_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_StartPrivateRoomLog_MsgID_descriptor(), value);
}
inline bool SD_StartPrivateRoomLog_MsgID_Parse(
    const ::std::string& name, SD_StartPrivateRoomLog_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_StartPrivateRoomLog_MsgID>(
    SD_StartPrivateRoomLog_MsgID_descriptor(), name, value);
}
enum SD_LoadAndroidData_MsgID {
  SD_LoadAndroidData_MsgID_ID = 1620
};
bool SD_LoadAndroidData_MsgID_IsValid(int value);
const SD_LoadAndroidData_MsgID SD_LoadAndroidData_MsgID_MsgID_MIN = SD_LoadAndroidData_MsgID_ID;
const SD_LoadAndroidData_MsgID SD_LoadAndroidData_MsgID_MsgID_MAX = SD_LoadAndroidData_MsgID_ID;
const int SD_LoadAndroidData_MsgID_MsgID_ARRAYSIZE = SD_LoadAndroidData_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_LoadAndroidData_MsgID_descriptor();
inline const ::std::string& SD_LoadAndroidData_MsgID_Name(SD_LoadAndroidData_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_LoadAndroidData_MsgID_descriptor(), value);
}
inline bool SD_LoadAndroidData_MsgID_Parse(
    const ::std::string& name, SD_LoadAndroidData_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_LoadAndroidData_MsgID>(
    SD_LoadAndroidData_MsgID_descriptor(), name, value);
}
enum DS_LoadAndroidData_MsgID {
  DS_LoadAndroidData_MsgID_ID = 1621
};
bool DS_LoadAndroidData_MsgID_IsValid(int value);
const DS_LoadAndroidData_MsgID DS_LoadAndroidData_MsgID_MsgID_MIN = DS_LoadAndroidData_MsgID_ID;
const DS_LoadAndroidData_MsgID DS_LoadAndroidData_MsgID_MsgID_MAX = DS_LoadAndroidData_MsgID_ID;
const int DS_LoadAndroidData_MsgID_MsgID_ARRAYSIZE = DS_LoadAndroidData_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_LoadAndroidData_MsgID_descriptor();
inline const ::std::string& DS_LoadAndroidData_MsgID_Name(DS_LoadAndroidData_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_LoadAndroidData_MsgID_descriptor(), value);
}
inline bool DS_LoadAndroidData_MsgID_Parse(
    const ::std::string& name, DS_LoadAndroidData_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_LoadAndroidData_MsgID>(
    DS_LoadAndroidData_MsgID_descriptor(), name, value);
}
enum DS_QueryPlayerMsgData_MsgID {
  DS_QueryPlayerMsgData_MsgID_ID = 1630
};
bool DS_QueryPlayerMsgData_MsgID_IsValid(int value);
const DS_QueryPlayerMsgData_MsgID DS_QueryPlayerMsgData_MsgID_MsgID_MIN = DS_QueryPlayerMsgData_MsgID_ID;
const DS_QueryPlayerMsgData_MsgID DS_QueryPlayerMsgData_MsgID_MsgID_MAX = DS_QueryPlayerMsgData_MsgID_ID;
const int DS_QueryPlayerMsgData_MsgID_MsgID_ARRAYSIZE = DS_QueryPlayerMsgData_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_QueryPlayerMsgData_MsgID_descriptor();
inline const ::std::string& DS_QueryPlayerMsgData_MsgID_Name(DS_QueryPlayerMsgData_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_QueryPlayerMsgData_MsgID_descriptor(), value);
}
inline bool DS_QueryPlayerMsgData_MsgID_Parse(
    const ::std::string& name, DS_QueryPlayerMsgData_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_QueryPlayerMsgData_MsgID>(
    DS_QueryPlayerMsgData_MsgID_descriptor(), name, value);
}
enum SD_QueryPlayerMsgData_MsgID {
  SD_QueryPlayerMsgData_MsgID_ID = 1631
};
bool SD_QueryPlayerMsgData_MsgID_IsValid(int value);
const SD_QueryPlayerMsgData_MsgID SD_QueryPlayerMsgData_MsgID_MsgID_MIN = SD_QueryPlayerMsgData_MsgID_ID;
const SD_QueryPlayerMsgData_MsgID SD_QueryPlayerMsgData_MsgID_MsgID_MAX = SD_QueryPlayerMsgData_MsgID_ID;
const int SD_QueryPlayerMsgData_MsgID_MsgID_ARRAYSIZE = SD_QueryPlayerMsgData_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_QueryPlayerMsgData_MsgID_descriptor();
inline const ::std::string& SD_QueryPlayerMsgData_MsgID_Name(SD_QueryPlayerMsgData_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_QueryPlayerMsgData_MsgID_descriptor(), value);
}
inline bool SD_QueryPlayerMsgData_MsgID_Parse(
    const ::std::string& name, SD_QueryPlayerMsgData_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_QueryPlayerMsgData_MsgID>(
    SD_QueryPlayerMsgData_MsgID_descriptor(), name, value);
}
enum SD_SetMsgReadFlag_MsgID {
  SD_SetMsgReadFlag_MsgID_ID = 1632
};
bool SD_SetMsgReadFlag_MsgID_IsValid(int value);
const SD_SetMsgReadFlag_MsgID SD_SetMsgReadFlag_MsgID_MsgID_MIN = SD_SetMsgReadFlag_MsgID_ID;
const SD_SetMsgReadFlag_MsgID SD_SetMsgReadFlag_MsgID_MsgID_MAX = SD_SetMsgReadFlag_MsgID_ID;
const int SD_SetMsgReadFlag_MsgID_MsgID_ARRAYSIZE = SD_SetMsgReadFlag_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_SetMsgReadFlag_MsgID_descriptor();
inline const ::std::string& SD_SetMsgReadFlag_MsgID_Name(SD_SetMsgReadFlag_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_SetMsgReadFlag_MsgID_descriptor(), value);
}
inline bool SD_SetMsgReadFlag_MsgID_Parse(
    const ::std::string& name, SD_SetMsgReadFlag_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_SetMsgReadFlag_MsgID>(
    SD_SetMsgReadFlag_MsgID_descriptor(), name, value);
}
enum DS_QueryPlayerMarquee_MsgID {
  DS_QueryPlayerMarquee_MsgID_ID = 1633
};
bool DS_QueryPlayerMarquee_MsgID_IsValid(int value);
const DS_QueryPlayerMarquee_MsgID DS_QueryPlayerMarquee_MsgID_MsgID_MIN = DS_QueryPlayerMarquee_MsgID_ID;
const DS_QueryPlayerMarquee_MsgID DS_QueryPlayerMarquee_MsgID_MsgID_MAX = DS_QueryPlayerMarquee_MsgID_ID;
const int DS_QueryPlayerMarquee_MsgID_MsgID_ARRAYSIZE = DS_QueryPlayerMarquee_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_QueryPlayerMarquee_MsgID_descriptor();
inline const ::std::string& DS_QueryPlayerMarquee_MsgID_Name(DS_QueryPlayerMarquee_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_QueryPlayerMarquee_MsgID_descriptor(), value);
}
inline bool DS_QueryPlayerMarquee_MsgID_Parse(
    const ::std::string& name, DS_QueryPlayerMarquee_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_QueryPlayerMarquee_MsgID>(
    DS_QueryPlayerMarquee_MsgID_descriptor(), name, value);
}
enum SD_QueryPlayerMarquee_MsgID {
  SD_QueryPlayerMarquee_MsgID_ID = 1634
};
bool SD_QueryPlayerMarquee_MsgID_IsValid(int value);
const SD_QueryPlayerMarquee_MsgID SD_QueryPlayerMarquee_MsgID_MsgID_MIN = SD_QueryPlayerMarquee_MsgID_ID;
const SD_QueryPlayerMarquee_MsgID SD_QueryPlayerMarquee_MsgID_MsgID_MAX = SD_QueryPlayerMarquee_MsgID_ID;
const int SD_QueryPlayerMarquee_MsgID_MsgID_ARRAYSIZE = SD_QueryPlayerMarquee_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_QueryPlayerMarquee_MsgID_descriptor();
inline const ::std::string& SD_QueryPlayerMarquee_MsgID_Name(SD_QueryPlayerMarquee_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_QueryPlayerMarquee_MsgID_descriptor(), value);
}
inline bool SD_QueryPlayerMarquee_MsgID_Parse(
    const ::std::string& name, SD_QueryPlayerMarquee_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_QueryPlayerMarquee_MsgID>(
    SD_QueryPlayerMarquee_MsgID_descriptor(), name, value);
}
enum DS_QueryPlayerInviteReward_MsgID {
  DS_QueryPlayerInviteReward_MsgID_ID = 1635
};
bool DS_QueryPlayerInviteReward_MsgID_IsValid(int value);
const DS_QueryPlayerInviteReward_MsgID DS_QueryPlayerInviteReward_MsgID_MsgID_MIN = DS_QueryPlayerInviteReward_MsgID_ID;
const DS_QueryPlayerInviteReward_MsgID DS_QueryPlayerInviteReward_MsgID_MsgID_MAX = DS_QueryPlayerInviteReward_MsgID_ID;
const int DS_QueryPlayerInviteReward_MsgID_MsgID_ARRAYSIZE = DS_QueryPlayerInviteReward_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_QueryPlayerInviteReward_MsgID_descriptor();
inline const ::std::string& DS_QueryPlayerInviteReward_MsgID_Name(DS_QueryPlayerInviteReward_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_QueryPlayerInviteReward_MsgID_descriptor(), value);
}
inline bool DS_QueryPlayerInviteReward_MsgID_Parse(
    const ::std::string& name, DS_QueryPlayerInviteReward_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_QueryPlayerInviteReward_MsgID>(
    DS_QueryPlayerInviteReward_MsgID_descriptor(), name, value);
}
enum SD_QueryPlayerInviteReward_MsgID {
  SD_QueryPlayerInviteReward_MsgID_ID = 1636
};
bool SD_QueryPlayerInviteReward_MsgID_IsValid(int value);
const SD_QueryPlayerInviteReward_MsgID SD_QueryPlayerInviteReward_MsgID_MsgID_MIN = SD_QueryPlayerInviteReward_MsgID_ID;
const SD_QueryPlayerInviteReward_MsgID SD_QueryPlayerInviteReward_MsgID_MsgID_MAX = SD_QueryPlayerInviteReward_MsgID_ID;
const int SD_QueryPlayerInviteReward_MsgID_MsgID_ARRAYSIZE = SD_QueryPlayerInviteReward_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_QueryPlayerInviteReward_MsgID_descriptor();
inline const ::std::string& SD_QueryPlayerInviteReward_MsgID_Name(SD_QueryPlayerInviteReward_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_QueryPlayerInviteReward_MsgID_descriptor(), value);
}
inline bool SD_QueryPlayerInviteReward_MsgID_Parse(
    const ::std::string& name, SD_QueryPlayerInviteReward_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_QueryPlayerInviteReward_MsgID>(
    SD_QueryPlayerInviteReward_MsgID_descriptor(), name, value);
}
enum DS_QueryChannelInviteCfg_MsgID {
  DS_QueryChannelInviteCfg_MsgID_ID = 1637
};
bool DS_QueryChannelInviteCfg_MsgID_IsValid(int value);
const DS_QueryChannelInviteCfg_MsgID DS_QueryChannelInviteCfg_MsgID_MsgID_MIN = DS_QueryChannelInviteCfg_MsgID_ID;
const DS_QueryChannelInviteCfg_MsgID DS_QueryChannelInviteCfg_MsgID_MsgID_MAX = DS_QueryChannelInviteCfg_MsgID_ID;
const int DS_QueryChannelInviteCfg_MsgID_MsgID_ARRAYSIZE = DS_QueryChannelInviteCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_QueryChannelInviteCfg_MsgID_descriptor();
inline const ::std::string& DS_QueryChannelInviteCfg_MsgID_Name(DS_QueryChannelInviteCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_QueryChannelInviteCfg_MsgID_descriptor(), value);
}
inline bool DS_QueryChannelInviteCfg_MsgID_Parse(
    const ::std::string& name, DS_QueryChannelInviteCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_QueryChannelInviteCfg_MsgID>(
    DS_QueryChannelInviteCfg_MsgID_descriptor(), name, value);
}
enum SD_QueryChannelInviteCfg_MsgID {
  SD_QueryChannelInviteCfg_MsgID_ID = 1638
};
bool SD_QueryChannelInviteCfg_MsgID_IsValid(int value);
const SD_QueryChannelInviteCfg_MsgID SD_QueryChannelInviteCfg_MsgID_MsgID_MIN = SD_QueryChannelInviteCfg_MsgID_ID;
const SD_QueryChannelInviteCfg_MsgID SD_QueryChannelInviteCfg_MsgID_MsgID_MAX = SD_QueryChannelInviteCfg_MsgID_ID;
const int SD_QueryChannelInviteCfg_MsgID_MsgID_ARRAYSIZE = SD_QueryChannelInviteCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_QueryChannelInviteCfg_MsgID_descriptor();
inline const ::std::string& SD_QueryChannelInviteCfg_MsgID_Name(SD_QueryChannelInviteCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_QueryChannelInviteCfg_MsgID_descriptor(), value);
}
inline bool SD_QueryChannelInviteCfg_MsgID_Parse(
    const ::std::string& name, SD_QueryChannelInviteCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_QueryChannelInviteCfg_MsgID>(
    SD_QueryChannelInviteCfg_MsgID_descriptor(), name, value);
}
enum SD_SavePlayerOxData_MsgID {
  SD_SavePlayerOxData_MsgID_ID = 1622
};
bool SD_SavePlayerOxData_MsgID_IsValid(int value);
const SD_SavePlayerOxData_MsgID SD_SavePlayerOxData_MsgID_MsgID_MIN = SD_SavePlayerOxData_MsgID_ID;
const SD_SavePlayerOxData_MsgID SD_SavePlayerOxData_MsgID_MsgID_MAX = SD_SavePlayerOxData_MsgID_ID;
const int SD_SavePlayerOxData_MsgID_MsgID_ARRAYSIZE = SD_SavePlayerOxData_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_SavePlayerOxData_MsgID_descriptor();
inline const ::std::string& SD_SavePlayerOxData_MsgID_Name(SD_SavePlayerOxData_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_SavePlayerOxData_MsgID_descriptor(), value);
}
inline bool SD_SavePlayerOxData_MsgID_Parse(
    const ::std::string& name, SD_SavePlayerOxData_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_SavePlayerOxData_MsgID>(
    SD_SavePlayerOxData_MsgID_descriptor(), name, value);
}
enum SD_QueryOxConfigData_MsgID {
  SD_QueryOxConfigData_MsgID_ID = 1623
};
bool SD_QueryOxConfigData_MsgID_IsValid(int value);
const SD_QueryOxConfigData_MsgID SD_QueryOxConfigData_MsgID_MsgID_MIN = SD_QueryOxConfigData_MsgID_ID;
const SD_QueryOxConfigData_MsgID SD_QueryOxConfigData_MsgID_MsgID_MAX = SD_QueryOxConfigData_MsgID_ID;
const int SD_QueryOxConfigData_MsgID_MsgID_ARRAYSIZE = SD_QueryOxConfigData_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_QueryOxConfigData_MsgID_descriptor();
inline const ::std::string& SD_QueryOxConfigData_MsgID_Name(SD_QueryOxConfigData_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_QueryOxConfigData_MsgID_descriptor(), value);
}
inline bool SD_QueryOxConfigData_MsgID_Parse(
    const ::std::string& name, SD_QueryOxConfigData_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_QueryOxConfigData_MsgID>(
    SD_QueryOxConfigData_MsgID_descriptor(), name, value);
}
enum DS_OxConfigData_MsgID {
  DS_OxConfigData_MsgID_ID = 1624
};
bool DS_OxConfigData_MsgID_IsValid(int value);
const DS_OxConfigData_MsgID DS_OxConfigData_MsgID_MsgID_MIN = DS_OxConfigData_MsgID_ID;
const DS_OxConfigData_MsgID DS_OxConfigData_MsgID_MsgID_MAX = DS_OxConfigData_MsgID_ID;
const int DS_OxConfigData_MsgID_MsgID_ARRAYSIZE = DS_OxConfigData_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_OxConfigData_MsgID_descriptor();
inline const ::std::string& DS_OxConfigData_MsgID_Name(DS_OxConfigData_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_OxConfigData_MsgID_descriptor(), value);
}
inline bool DS_OxConfigData_MsgID_Parse(
    const ::std::string& name, DS_OxConfigData_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_OxConfigData_MsgID>(
    DS_OxConfigData_MsgID_descriptor(), name, value);
}
enum LG_PhoneQuery_MsgID {
  LG_PhoneQuery_MsgID_ID = 1625
};
bool LG_PhoneQuery_MsgID_IsValid(int value);
const LG_PhoneQuery_MsgID LG_PhoneQuery_MsgID_MsgID_MIN = LG_PhoneQuery_MsgID_ID;
const LG_PhoneQuery_MsgID LG_PhoneQuery_MsgID_MsgID_MAX = LG_PhoneQuery_MsgID_ID;
const int LG_PhoneQuery_MsgID_MsgID_ARRAYSIZE = LG_PhoneQuery_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LG_PhoneQuery_MsgID_descriptor();
inline const ::std::string& LG_PhoneQuery_MsgID_Name(LG_PhoneQuery_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LG_PhoneQuery_MsgID_descriptor(), value);
}
inline bool LG_PhoneQuery_MsgID_Parse(
    const ::std::string& name, LG_PhoneQuery_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LG_PhoneQuery_MsgID>(
    LG_PhoneQuery_MsgID_descriptor(), name, value);
}
enum SD_BankSetPassword_MsgID {
  SD_BankSetPassword_MsgID_ID = 30000
};
bool SD_BankSetPassword_MsgID_IsValid(int value);
const SD_BankSetPassword_MsgID SD_BankSetPassword_MsgID_MsgID_MIN = SD_BankSetPassword_MsgID_ID;
const SD_BankSetPassword_MsgID SD_BankSetPassword_MsgID_MsgID_MAX = SD_BankSetPassword_MsgID_ID;
const int SD_BankSetPassword_MsgID_MsgID_ARRAYSIZE = SD_BankSetPassword_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_BankSetPassword_MsgID_descriptor();
inline const ::std::string& SD_BankSetPassword_MsgID_Name(SD_BankSetPassword_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_BankSetPassword_MsgID_descriptor(), value);
}
inline bool SD_BankSetPassword_MsgID_Parse(
    const ::std::string& name, SD_BankSetPassword_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_BankSetPassword_MsgID>(
    SD_BankSetPassword_MsgID_descriptor(), name, value);
}
enum SD_BankChangePassword_MsgID {
  SD_BankChangePassword_MsgID_ID = 30001
};
bool SD_BankChangePassword_MsgID_IsValid(int value);
const SD_BankChangePassword_MsgID SD_BankChangePassword_MsgID_MsgID_MIN = SD_BankChangePassword_MsgID_ID;
const SD_BankChangePassword_MsgID SD_BankChangePassword_MsgID_MsgID_MAX = SD_BankChangePassword_MsgID_ID;
const int SD_BankChangePassword_MsgID_MsgID_ARRAYSIZE = SD_BankChangePassword_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_BankChangePassword_MsgID_descriptor();
inline const ::std::string& SD_BankChangePassword_MsgID_Name(SD_BankChangePassword_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_BankChangePassword_MsgID_descriptor(), value);
}
inline bool SD_BankChangePassword_MsgID_Parse(
    const ::std::string& name, SD_BankChangePassword_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_BankChangePassword_MsgID>(
    SD_BankChangePassword_MsgID_descriptor(), name, value);
}
enum DS_BankChangePassword_MsgID {
  DS_BankChangePassword_MsgID_ID = 30002
};
bool DS_BankChangePassword_MsgID_IsValid(int value);
const DS_BankChangePassword_MsgID DS_BankChangePassword_MsgID_MsgID_MIN = DS_BankChangePassword_MsgID_ID;
const DS_BankChangePassword_MsgID DS_BankChangePassword_MsgID_MsgID_MAX = DS_BankChangePassword_MsgID_ID;
const int DS_BankChangePassword_MsgID_MsgID_ARRAYSIZE = DS_BankChangePassword_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_BankChangePassword_MsgID_descriptor();
inline const ::std::string& DS_BankChangePassword_MsgID_Name(DS_BankChangePassword_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_BankChangePassword_MsgID_descriptor(), value);
}
inline bool DS_BankChangePassword_MsgID_Parse(
    const ::std::string& name, DS_BankChangePassword_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_BankChangePassword_MsgID>(
    DS_BankChangePassword_MsgID_descriptor(), name, value);
}
enum SD_BankLogin_MsgID {
  SD_BankLogin_MsgID_ID = 30003
};
bool SD_BankLogin_MsgID_IsValid(int value);
const SD_BankLogin_MsgID SD_BankLogin_MsgID_MsgID_MIN = SD_BankLogin_MsgID_ID;
const SD_BankLogin_MsgID SD_BankLogin_MsgID_MsgID_MAX = SD_BankLogin_MsgID_ID;
const int SD_BankLogin_MsgID_MsgID_ARRAYSIZE = SD_BankLogin_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_BankLogin_MsgID_descriptor();
inline const ::std::string& SD_BankLogin_MsgID_Name(SD_BankLogin_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_BankLogin_MsgID_descriptor(), value);
}
inline bool SD_BankLogin_MsgID_Parse(
    const ::std::string& name, SD_BankLogin_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_BankLogin_MsgID>(
    SD_BankLogin_MsgID_descriptor(), name, value);
}
enum DS_BankLogin_MsgID {
  DS_BankLogin_MsgID_ID = 30004
};
bool DS_BankLogin_MsgID_IsValid(int value);
const DS_BankLogin_MsgID DS_BankLogin_MsgID_MsgID_MIN = DS_BankLogin_MsgID_ID;
const DS_BankLogin_MsgID DS_BankLogin_MsgID_MsgID_MAX = DS_BankLogin_MsgID_ID;
const int DS_BankLogin_MsgID_MsgID_ARRAYSIZE = DS_BankLogin_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_BankLogin_MsgID_descriptor();
inline const ::std::string& DS_BankLogin_MsgID_Name(DS_BankLogin_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_BankLogin_MsgID_descriptor(), value);
}
inline bool DS_BankLogin_MsgID_Parse(
    const ::std::string& name, DS_BankLogin_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_BankLogin_MsgID>(
    DS_BankLogin_MsgID_descriptor(), name, value);
}
enum SD_SaveBankStatement_MsgID {
  SD_SaveBankStatement_MsgID_ID = 30005
};
bool SD_SaveBankStatement_MsgID_IsValid(int value);
const SD_SaveBankStatement_MsgID SD_SaveBankStatement_MsgID_MsgID_MIN = SD_SaveBankStatement_MsgID_ID;
const SD_SaveBankStatement_MsgID SD_SaveBankStatement_MsgID_MsgID_MAX = SD_SaveBankStatement_MsgID_ID;
const int SD_SaveBankStatement_MsgID_MsgID_ARRAYSIZE = SD_SaveBankStatement_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_SaveBankStatement_MsgID_descriptor();
inline const ::std::string& SD_SaveBankStatement_MsgID_Name(SD_SaveBankStatement_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_SaveBankStatement_MsgID_descriptor(), value);
}
inline bool SD_SaveBankStatement_MsgID_Parse(
    const ::std::string& name, SD_SaveBankStatement_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_SaveBankStatement_MsgID>(
    SD_SaveBankStatement_MsgID_descriptor(), name, value);
}
enum DS_SaveBankStatement_MsgID {
  DS_SaveBankStatement_MsgID_ID = 30006
};
bool DS_SaveBankStatement_MsgID_IsValid(int value);
const DS_SaveBankStatement_MsgID DS_SaveBankStatement_MsgID_MsgID_MIN = DS_SaveBankStatement_MsgID_ID;
const DS_SaveBankStatement_MsgID DS_SaveBankStatement_MsgID_MsgID_MAX = DS_SaveBankStatement_MsgID_ID;
const int DS_SaveBankStatement_MsgID_MsgID_ARRAYSIZE = DS_SaveBankStatement_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_SaveBankStatement_MsgID_descriptor();
inline const ::std::string& DS_SaveBankStatement_MsgID_Name(DS_SaveBankStatement_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_SaveBankStatement_MsgID_descriptor(), value);
}
inline bool DS_SaveBankStatement_MsgID_Parse(
    const ::std::string& name, DS_SaveBankStatement_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_SaveBankStatement_MsgID>(
    DS_SaveBankStatement_MsgID_descriptor(), name, value);
}
enum SD_BankStatement_MsgID {
  SD_BankStatement_MsgID_ID = 30007
};
bool SD_BankStatement_MsgID_IsValid(int value);
const SD_BankStatement_MsgID SD_BankStatement_MsgID_MsgID_MIN = SD_BankStatement_MsgID_ID;
const SD_BankStatement_MsgID SD_BankStatement_MsgID_MsgID_MAX = SD_BankStatement_MsgID_ID;
const int SD_BankStatement_MsgID_MsgID_ARRAYSIZE = SD_BankStatement_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_BankStatement_MsgID_descriptor();
inline const ::std::string& SD_BankStatement_MsgID_Name(SD_BankStatement_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_BankStatement_MsgID_descriptor(), value);
}
inline bool SD_BankStatement_MsgID_Parse(
    const ::std::string& name, SD_BankStatement_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_BankStatement_MsgID>(
    SD_BankStatement_MsgID_descriptor(), name, value);
}
enum DS_BankStatement_MsgID {
  DS_BankStatement_MsgID_ID = 3008
};
bool DS_BankStatement_MsgID_IsValid(int value);
const DS_BankStatement_MsgID DS_BankStatement_MsgID_MsgID_MIN = DS_BankStatement_MsgID_ID;
const DS_BankStatement_MsgID DS_BankStatement_MsgID_MsgID_MAX = DS_BankStatement_MsgID_ID;
const int DS_BankStatement_MsgID_MsgID_ARRAYSIZE = DS_BankStatement_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_BankStatement_MsgID_descriptor();
inline const ::std::string& DS_BankStatement_MsgID_Name(DS_BankStatement_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_BankStatement_MsgID_descriptor(), value);
}
inline bool DS_BankStatement_MsgID_Parse(
    const ::std::string& name, DS_BankStatement_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_BankStatement_MsgID>(
    DS_BankStatement_MsgID_descriptor(), name, value);
}
enum SD_BankTransfer_MsgID {
  SD_BankTransfer_MsgID_ID = 30009
};
bool SD_BankTransfer_MsgID_IsValid(int value);
const SD_BankTransfer_MsgID SD_BankTransfer_MsgID_MsgID_MIN = SD_BankTransfer_MsgID_ID;
const SD_BankTransfer_MsgID SD_BankTransfer_MsgID_MsgID_MAX = SD_BankTransfer_MsgID_ID;
const int SD_BankTransfer_MsgID_MsgID_ARRAYSIZE = SD_BankTransfer_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_BankTransfer_MsgID_descriptor();
inline const ::std::string& SD_BankTransfer_MsgID_Name(SD_BankTransfer_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_BankTransfer_MsgID_descriptor(), value);
}
inline bool SD_BankTransfer_MsgID_Parse(
    const ::std::string& name, SD_BankTransfer_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_BankTransfer_MsgID>(
    SD_BankTransfer_MsgID_descriptor(), name, value);
}
enum DS_BankTransfer_MsgID {
  DS_BankTransfer_MsgID_ID = 30010
};
bool DS_BankTransfer_MsgID_IsValid(int value);
const DS_BankTransfer_MsgID DS_BankTransfer_MsgID_MsgID_MIN = DS_BankTransfer_MsgID_ID;
const DS_BankTransfer_MsgID DS_BankTransfer_MsgID_MsgID_MAX = DS_BankTransfer_MsgID_ID;
const int DS_BankTransfer_MsgID_MsgID_ARRAYSIZE = DS_BankTransfer_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_BankTransfer_MsgID_descriptor();
inline const ::std::string& DS_BankTransfer_MsgID_Name(DS_BankTransfer_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_BankTransfer_MsgID_descriptor(), value);
}
inline bool DS_BankTransfer_MsgID_Parse(
    const ::std::string& name, DS_BankTransfer_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_BankTransfer_MsgID>(
    DS_BankTransfer_MsgID_descriptor(), name, value);
}
enum LS_BankTransferSelf_MsgID {
  LS_BankTransferSelf_MsgID_ID = 30011
};
bool LS_BankTransferSelf_MsgID_IsValid(int value);
const LS_BankTransferSelf_MsgID LS_BankTransferSelf_MsgID_MsgID_MIN = LS_BankTransferSelf_MsgID_ID;
const LS_BankTransferSelf_MsgID LS_BankTransferSelf_MsgID_MsgID_MAX = LS_BankTransferSelf_MsgID_ID;
const int LS_BankTransferSelf_MsgID_MsgID_ARRAYSIZE = LS_BankTransferSelf_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_BankTransferSelf_MsgID_descriptor();
inline const ::std::string& LS_BankTransferSelf_MsgID_Name(LS_BankTransferSelf_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_BankTransferSelf_MsgID_descriptor(), value);
}
inline bool LS_BankTransferSelf_MsgID_Parse(
    const ::std::string& name, LS_BankTransferSelf_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_BankTransferSelf_MsgID>(
    LS_BankTransferSelf_MsgID_descriptor(), name, value);
}
enum LS_BankTransferTarget_MsgID {
  LS_BankTransferTarget_MsgID_ID = 30012
};
bool LS_BankTransferTarget_MsgID_IsValid(int value);
const LS_BankTransferTarget_MsgID LS_BankTransferTarget_MsgID_MsgID_MIN = LS_BankTransferTarget_MsgID_ID;
const LS_BankTransferTarget_MsgID LS_BankTransferTarget_MsgID_MsgID_MAX = LS_BankTransferTarget_MsgID_ID;
const int LS_BankTransferTarget_MsgID_MsgID_ARRAYSIZE = LS_BankTransferTarget_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_BankTransferTarget_MsgID_descriptor();
inline const ::std::string& LS_BankTransferTarget_MsgID_Name(LS_BankTransferTarget_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_BankTransferTarget_MsgID_descriptor(), value);
}
inline bool LS_BankTransferTarget_MsgID_Parse(
    const ::std::string& name, LS_BankTransferTarget_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_BankTransferTarget_MsgID>(
    LS_BankTransferTarget_MsgID_descriptor(), name, value);
}
enum S_BankTransferByGuid_MsgID {
  S_BankTransferByGuid_MsgID_ID = 30013
};
bool S_BankTransferByGuid_MsgID_IsValid(int value);
const S_BankTransferByGuid_MsgID S_BankTransferByGuid_MsgID_MsgID_MIN = S_BankTransferByGuid_MsgID_ID;
const S_BankTransferByGuid_MsgID S_BankTransferByGuid_MsgID_MsgID_MAX = S_BankTransferByGuid_MsgID_ID;
const int S_BankTransferByGuid_MsgID_MsgID_ARRAYSIZE = S_BankTransferByGuid_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* S_BankTransferByGuid_MsgID_descriptor();
inline const ::std::string& S_BankTransferByGuid_MsgID_Name(S_BankTransferByGuid_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    S_BankTransferByGuid_MsgID_descriptor(), value);
}
inline bool S_BankTransferByGuid_MsgID_Parse(
    const ::std::string& name, S_BankTransferByGuid_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S_BankTransferByGuid_MsgID>(
    S_BankTransferByGuid_MsgID_descriptor(), name, value);
}
enum DS_BankTransferByGuid_MsgID {
  DS_BankTransferByGuid_MsgID_ID = 30014
};
bool DS_BankTransferByGuid_MsgID_IsValid(int value);
const DS_BankTransferByGuid_MsgID DS_BankTransferByGuid_MsgID_MsgID_MIN = DS_BankTransferByGuid_MsgID_ID;
const DS_BankTransferByGuid_MsgID DS_BankTransferByGuid_MsgID_MsgID_MAX = DS_BankTransferByGuid_MsgID_ID;
const int DS_BankTransferByGuid_MsgID_MsgID_ARRAYSIZE = DS_BankTransferByGuid_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_BankTransferByGuid_MsgID_descriptor();
inline const ::std::string& DS_BankTransferByGuid_MsgID_Name(DS_BankTransferByGuid_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_BankTransferByGuid_MsgID_descriptor(), value);
}
inline bool DS_BankTransferByGuid_MsgID_Parse(
    const ::std::string& name, DS_BankTransferByGuid_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_BankTransferByGuid_MsgID>(
    DS_BankTransferByGuid_MsgID_descriptor(), name, value);
}
enum LS_BankTransferByGuid_MsgID {
  LS_BankTransferByGuid_MsgID_ID = 30015
};
bool LS_BankTransferByGuid_MsgID_IsValid(int value);
const LS_BankTransferByGuid_MsgID LS_BankTransferByGuid_MsgID_MsgID_MIN = LS_BankTransferByGuid_MsgID_ID;
const LS_BankTransferByGuid_MsgID LS_BankTransferByGuid_MsgID_MsgID_MAX = LS_BankTransferByGuid_MsgID_ID;
const int LS_BankTransferByGuid_MsgID_MsgID_ARRAYSIZE = LS_BankTransferByGuid_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_BankTransferByGuid_MsgID_descriptor();
inline const ::std::string& LS_BankTransferByGuid_MsgID_Name(LS_BankTransferByGuid_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_BankTransferByGuid_MsgID_descriptor(), value);
}
inline bool LS_BankTransferByGuid_MsgID_Parse(
    const ::std::string& name, LS_BankTransferByGuid_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_BankTransferByGuid_MsgID>(
    LS_BankTransferByGuid_MsgID_descriptor(), name, value);
}
enum SD_BankLog_MsgID {
  SD_BankLog_MsgID_ID = 30016
};
bool SD_BankLog_MsgID_IsValid(int value);
const SD_BankLog_MsgID SD_BankLog_MsgID_MsgID_MIN = SD_BankLog_MsgID_ID;
const SD_BankLog_MsgID SD_BankLog_MsgID_MsgID_MAX = SD_BankLog_MsgID_ID;
const int SD_BankLog_MsgID_MsgID_ARRAYSIZE = SD_BankLog_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_BankLog_MsgID_descriptor();
inline const ::std::string& SD_BankLog_MsgID_Name(SD_BankLog_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_BankLog_MsgID_descriptor(), value);
}
inline bool SD_BankLog_MsgID_Parse(
    const ::std::string& name, SD_BankLog_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_BankLog_MsgID>(
    SD_BankLog_MsgID_descriptor(), name, value);
}
enum SD_Do_OneSql_MsgID {
  SD_Do_OneSql_MsgID_ID = 30017
};
bool SD_Do_OneSql_MsgID_IsValid(int value);
const SD_Do_OneSql_MsgID SD_Do_OneSql_MsgID_MsgID_MIN = SD_Do_OneSql_MsgID_ID;
const SD_Do_OneSql_MsgID SD_Do_OneSql_MsgID_MsgID_MAX = SD_Do_OneSql_MsgID_ID;
const int SD_Do_OneSql_MsgID_MsgID_ARRAYSIZE = SD_Do_OneSql_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_Do_OneSql_MsgID_descriptor();
inline const ::std::string& SD_Do_OneSql_MsgID_Name(SD_Do_OneSql_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_Do_OneSql_MsgID_descriptor(), value);
}
inline bool SD_Do_OneSql_MsgID_Parse(
    const ::std::string& name, SD_Do_OneSql_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_Do_OneSql_MsgID>(
    SD_Do_OneSql_MsgID_descriptor(), name, value);
}
enum SD_SendMail_MsgID {
  SD_SendMail_MsgID_ID = 31080
};
bool SD_SendMail_MsgID_IsValid(int value);
const SD_SendMail_MsgID SD_SendMail_MsgID_MsgID_MIN = SD_SendMail_MsgID_ID;
const SD_SendMail_MsgID SD_SendMail_MsgID_MsgID_MAX = SD_SendMail_MsgID_ID;
const int SD_SendMail_MsgID_MsgID_ARRAYSIZE = SD_SendMail_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_SendMail_MsgID_descriptor();
inline const ::std::string& SD_SendMail_MsgID_Name(SD_SendMail_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_SendMail_MsgID_descriptor(), value);
}
inline bool SD_SendMail_MsgID_Parse(
    const ::std::string& name, SD_SendMail_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_SendMail_MsgID>(
    SD_SendMail_MsgID_descriptor(), name, value);
}
enum DES_SendMail_MsgID {
  DES_SendMail_MsgID_ID = 31081
};
bool DES_SendMail_MsgID_IsValid(int value);
const DES_SendMail_MsgID DES_SendMail_MsgID_MsgID_MIN = DES_SendMail_MsgID_ID;
const DES_SendMail_MsgID DES_SendMail_MsgID_MsgID_MAX = DES_SendMail_MsgID_ID;
const int DES_SendMail_MsgID_MsgID_ARRAYSIZE = DES_SendMail_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DES_SendMail_MsgID_descriptor();
inline const ::std::string& DES_SendMail_MsgID_Name(DES_SendMail_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DES_SendMail_MsgID_descriptor(), value);
}
inline bool DES_SendMail_MsgID_Parse(
    const ::std::string& name, DES_SendMail_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DES_SendMail_MsgID>(
    DES_SendMail_MsgID_descriptor(), name, value);
}
enum SD_DelMail_MsgID {
  SD_DelMail_MsgID_ID = 31084
};
bool SD_DelMail_MsgID_IsValid(int value);
const SD_DelMail_MsgID SD_DelMail_MsgID_MsgID_MIN = SD_DelMail_MsgID_ID;
const SD_DelMail_MsgID SD_DelMail_MsgID_MsgID_MAX = SD_DelMail_MsgID_ID;
const int SD_DelMail_MsgID_MsgID_ARRAYSIZE = SD_DelMail_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_DelMail_MsgID_descriptor();
inline const ::std::string& SD_DelMail_MsgID_Name(SD_DelMail_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_DelMail_MsgID_descriptor(), value);
}
inline bool SD_DelMail_MsgID_Parse(
    const ::std::string& name, SD_DelMail_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_DelMail_MsgID>(
    SD_DelMail_MsgID_descriptor(), name, value);
}
enum SD_ReceiveMailAttachment_MsgID {
  SD_ReceiveMailAttachment_MsgID_ID = 31085
};
bool SD_ReceiveMailAttachment_MsgID_IsValid(int value);
const SD_ReceiveMailAttachment_MsgID SD_ReceiveMailAttachment_MsgID_MsgID_MIN = SD_ReceiveMailAttachment_MsgID_ID;
const SD_ReceiveMailAttachment_MsgID SD_ReceiveMailAttachment_MsgID_MsgID_MAX = SD_ReceiveMailAttachment_MsgID_ID;
const int SD_ReceiveMailAttachment_MsgID_MsgID_ARRAYSIZE = SD_ReceiveMailAttachment_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_ReceiveMailAttachment_MsgID_descriptor();
inline const ::std::string& SD_ReceiveMailAttachment_MsgID_Name(SD_ReceiveMailAttachment_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_ReceiveMailAttachment_MsgID_descriptor(), value);
}
inline bool SD_ReceiveMailAttachment_MsgID_Parse(
    const ::std::string& name, SD_ReceiveMailAttachment_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_ReceiveMailAttachment_MsgID>(
    SD_ReceiveMailAttachment_MsgID_descriptor(), name, value);
}
enum DE_UpdateRank_MsgID {
  DE_UpdateRank_MsgID_ID = 32000
};
bool DE_UpdateRank_MsgID_IsValid(int value);
const DE_UpdateRank_MsgID DE_UpdateRank_MsgID_MsgID_MIN = DE_UpdateRank_MsgID_ID;
const DE_UpdateRank_MsgID DE_UpdateRank_MsgID_MsgID_MAX = DE_UpdateRank_MsgID_ID;
const int DE_UpdateRank_MsgID_MsgID_ARRAYSIZE = DE_UpdateRank_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DE_UpdateRank_MsgID_descriptor();
inline const ::std::string& DE_UpdateRank_MsgID_Name(DE_UpdateRank_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DE_UpdateRank_MsgID_descriptor(), value);
}
inline bool DE_UpdateRank_MsgID_Parse(
    const ::std::string& name, DE_UpdateRank_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DE_UpdateRank_MsgID>(
    DE_UpdateRank_MsgID_descriptor(), name, value);
}
enum SD_UpdateEarnings_MsgID {
  SD_UpdateEarnings_MsgID_ID = 32001
};
bool SD_UpdateEarnings_MsgID_IsValid(int value);
const SD_UpdateEarnings_MsgID SD_UpdateEarnings_MsgID_MsgID_MIN = SD_UpdateEarnings_MsgID_ID;
const SD_UpdateEarnings_MsgID SD_UpdateEarnings_MsgID_MsgID_MAX = SD_UpdateEarnings_MsgID_ID;
const int SD_UpdateEarnings_MsgID_MsgID_ARRAYSIZE = SD_UpdateEarnings_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_UpdateEarnings_MsgID_descriptor();
inline const ::std::string& SD_UpdateEarnings_MsgID_Name(SD_UpdateEarnings_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_UpdateEarnings_MsgID_descriptor(), value);
}
inline bool SD_UpdateEarnings_MsgID_Parse(
    const ::std::string& name, SD_UpdateEarnings_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_UpdateEarnings_MsgID>(
    SD_UpdateEarnings_MsgID_descriptor(), name, value);
}
enum SD_LogMoney_MsgID {
  SD_LogMoney_MsgID_ID = 33000
};
bool SD_LogMoney_MsgID_IsValid(int value);
const SD_LogMoney_MsgID SD_LogMoney_MsgID_MsgID_MIN = SD_LogMoney_MsgID_ID;
const SD_LogMoney_MsgID SD_LogMoney_MsgID_MsgID_MAX = SD_LogMoney_MsgID_ID;
const int SD_LogMoney_MsgID_MsgID_ARRAYSIZE = SD_LogMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_LogMoney_MsgID_descriptor();
inline const ::std::string& SD_LogMoney_MsgID_Name(SD_LogMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_LogMoney_MsgID_descriptor(), value);
}
inline bool SD_LogMoney_MsgID_Parse(
    const ::std::string& name, SD_LogMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_LogMoney_MsgID>(
    SD_LogMoney_MsgID_descriptor(), name, value);
}
enum WL_RequestGameServerInfo_MsgID {
  WL_RequestGameServerInfo_MsgID_ID = 40000
};
bool WL_RequestGameServerInfo_MsgID_IsValid(int value);
const WL_RequestGameServerInfo_MsgID WL_RequestGameServerInfo_MsgID_MsgID_MIN = WL_RequestGameServerInfo_MsgID_ID;
const WL_RequestGameServerInfo_MsgID WL_RequestGameServerInfo_MsgID_MsgID_MAX = WL_RequestGameServerInfo_MsgID_ID;
const int WL_RequestGameServerInfo_MsgID_MsgID_ARRAYSIZE = WL_RequestGameServerInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* WL_RequestGameServerInfo_MsgID_descriptor();
inline const ::std::string& WL_RequestGameServerInfo_MsgID_Name(WL_RequestGameServerInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    WL_RequestGameServerInfo_MsgID_descriptor(), value);
}
inline bool WL_RequestGameServerInfo_MsgID_Parse(
    const ::std::string& name, WL_RequestGameServerInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WL_RequestGameServerInfo_MsgID>(
    WL_RequestGameServerInfo_MsgID_descriptor(), name, value);
}
enum LW_ResponseGameServerInfo_MsgID {
  LW_ResponseGameServerInfo_MsgID_ID = 40001
};
bool LW_ResponseGameServerInfo_MsgID_IsValid(int value);
const LW_ResponseGameServerInfo_MsgID LW_ResponseGameServerInfo_MsgID_MsgID_MIN = LW_ResponseGameServerInfo_MsgID_ID;
const LW_ResponseGameServerInfo_MsgID LW_ResponseGameServerInfo_MsgID_MsgID_MAX = LW_ResponseGameServerInfo_MsgID_ID;
const int LW_ResponseGameServerInfo_MsgID_MsgID_ARRAYSIZE = LW_ResponseGameServerInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LW_ResponseGameServerInfo_MsgID_descriptor();
inline const ::std::string& LW_ResponseGameServerInfo_MsgID_Name(LW_ResponseGameServerInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LW_ResponseGameServerInfo_MsgID_descriptor(), value);
}
inline bool LW_ResponseGameServerInfo_MsgID_Parse(
    const ::std::string& name, LW_ResponseGameServerInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LW_ResponseGameServerInfo_MsgID>(
    LW_ResponseGameServerInfo_MsgID_descriptor(), name, value);
}
enum SL_WebGameServerInfo_MsgID {
  SL_WebGameServerInfo_MsgID_ID = 40002
};
bool SL_WebGameServerInfo_MsgID_IsValid(int value);
const SL_WebGameServerInfo_MsgID SL_WebGameServerInfo_MsgID_MsgID_MIN = SL_WebGameServerInfo_MsgID_ID;
const SL_WebGameServerInfo_MsgID SL_WebGameServerInfo_MsgID_MsgID_MAX = SL_WebGameServerInfo_MsgID_ID;
const int SL_WebGameServerInfo_MsgID_MsgID_ARRAYSIZE = SL_WebGameServerInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SL_WebGameServerInfo_MsgID_descriptor();
inline const ::std::string& SL_WebGameServerInfo_MsgID_Name(SL_WebGameServerInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SL_WebGameServerInfo_MsgID_descriptor(), value);
}
inline bool SL_WebGameServerInfo_MsgID_Parse(
    const ::std::string& name, SL_WebGameServerInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SL_WebGameServerInfo_MsgID>(
    SL_WebGameServerInfo_MsgID_descriptor(), name, value);
}
enum WL_GMMessage_MsgID {
  WL_GMMessage_MsgID_ID = 40011
};
bool WL_GMMessage_MsgID_IsValid(int value);
const WL_GMMessage_MsgID WL_GMMessage_MsgID_MsgID_MIN = WL_GMMessage_MsgID_ID;
const WL_GMMessage_MsgID WL_GMMessage_MsgID_MsgID_MAX = WL_GMMessage_MsgID_ID;
const int WL_GMMessage_MsgID_MsgID_ARRAYSIZE = WL_GMMessage_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* WL_GMMessage_MsgID_descriptor();
inline const ::std::string& WL_GMMessage_MsgID_Name(WL_GMMessage_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    WL_GMMessage_MsgID_descriptor(), value);
}
inline bool WL_GMMessage_MsgID_Parse(
    const ::std::string& name, WL_GMMessage_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WL_GMMessage_MsgID>(
    WL_GMMessage_MsgID_descriptor(), name, value);
}
enum LW_GMMessage_MsgID {
  LW_GMMessage_MsgID_ID = 40012
};
bool LW_GMMessage_MsgID_IsValid(int value);
const LW_GMMessage_MsgID LW_GMMessage_MsgID_MsgID_MIN = LW_GMMessage_MsgID_ID;
const LW_GMMessage_MsgID LW_GMMessage_MsgID_MsgID_MAX = LW_GMMessage_MsgID_ID;
const int LW_GMMessage_MsgID_MsgID_ARRAYSIZE = LW_GMMessage_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LW_GMMessage_MsgID_descriptor();
inline const ::std::string& LW_GMMessage_MsgID_Name(LW_GMMessage_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LW_GMMessage_MsgID_descriptor(), value);
}
inline bool LW_GMMessage_MsgID_Parse(
    const ::std::string& name, LW_GMMessage_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LW_GMMessage_MsgID>(
    LW_GMMessage_MsgID_descriptor(), name, value);
}
enum LD_NewNotice_MsgID {
  LD_NewNotice_MsgID_ID = 40013
};
bool LD_NewNotice_MsgID_IsValid(int value);
const LD_NewNotice_MsgID LD_NewNotice_MsgID_MsgID_MIN = LD_NewNotice_MsgID_ID;
const LD_NewNotice_MsgID LD_NewNotice_MsgID_MsgID_MAX = LD_NewNotice_MsgID_ID;
const int LD_NewNotice_MsgID_MsgID_ARRAYSIZE = LD_NewNotice_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_NewNotice_MsgID_descriptor();
inline const ::std::string& LD_NewNotice_MsgID_Name(LD_NewNotice_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_NewNotice_MsgID_descriptor(), value);
}
inline bool LD_NewNotice_MsgID_Parse(
    const ::std::string& name, LD_NewNotice_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_NewNotice_MsgID>(
    LD_NewNotice_MsgID_descriptor(), name, value);
}
enum DL_NewNotice_MsgID {
  DL_NewNotice_MsgID_ID = 40014
};
bool DL_NewNotice_MsgID_IsValid(int value);
const DL_NewNotice_MsgID DL_NewNotice_MsgID_MsgID_MIN = DL_NewNotice_MsgID_ID;
const DL_NewNotice_MsgID DL_NewNotice_MsgID_MsgID_MAX = DL_NewNotice_MsgID_ID;
const int DL_NewNotice_MsgID_MsgID_ARRAYSIZE = DL_NewNotice_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DL_NewNotice_MsgID_descriptor();
inline const ::std::string& DL_NewNotice_MsgID_Name(DL_NewNotice_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DL_NewNotice_MsgID_descriptor(), value);
}
inline bool DL_NewNotice_MsgID_Parse(
    const ::std::string& name, DL_NewNotice_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DL_NewNotice_MsgID>(
    DL_NewNotice_MsgID_descriptor(), name, value);
}
enum LS_NewNotice_MsgID {
  LS_NewNotice_MsgID_ID = 40015
};
bool LS_NewNotice_MsgID_IsValid(int value);
const LS_NewNotice_MsgID LS_NewNotice_MsgID_MsgID_MIN = LS_NewNotice_MsgID_ID;
const LS_NewNotice_MsgID LS_NewNotice_MsgID_MsgID_MAX = LS_NewNotice_MsgID_ID;
const int LS_NewNotice_MsgID_MsgID_ARRAYSIZE = LS_NewNotice_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_NewNotice_MsgID_descriptor();
inline const ::std::string& LS_NewNotice_MsgID_Name(LS_NewNotice_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_NewNotice_MsgID_descriptor(), value);
}
inline bool LS_NewNotice_MsgID_Parse(
    const ::std::string& name, LS_NewNotice_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_NewNotice_MsgID>(
    LS_NewNotice_MsgID_descriptor(), name, value);
}
enum LS_DelMessage_MsgID {
  LS_DelMessage_MsgID_ID = 40016
};
bool LS_DelMessage_MsgID_IsValid(int value);
const LS_DelMessage_MsgID LS_DelMessage_MsgID_MsgID_MIN = LS_DelMessage_MsgID_ID;
const LS_DelMessage_MsgID LS_DelMessage_MsgID_MsgID_MAX = LS_DelMessage_MsgID_ID;
const int LS_DelMessage_MsgID_MsgID_ARRAYSIZE = LS_DelMessage_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_DelMessage_MsgID_descriptor();
inline const ::std::string& LS_DelMessage_MsgID_Name(LS_DelMessage_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_DelMessage_MsgID_descriptor(), value);
}
inline bool LS_DelMessage_MsgID_Parse(
    const ::std::string& name, LS_DelMessage_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_DelMessage_MsgID>(
    LS_DelMessage_MsgID_descriptor(), name, value);
}
enum LG_NewNotice_MsgID {
  LG_NewNotice_MsgID_ID = 40017
};
bool LG_NewNotice_MsgID_IsValid(int value);
const LG_NewNotice_MsgID LG_NewNotice_MsgID_MsgID_MIN = LG_NewNotice_MsgID_ID;
const LG_NewNotice_MsgID LG_NewNotice_MsgID_MsgID_MAX = LG_NewNotice_MsgID_ID;
const int LG_NewNotice_MsgID_MsgID_ARRAYSIZE = LG_NewNotice_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LG_NewNotice_MsgID_descriptor();
inline const ::std::string& LG_NewNotice_MsgID_Name(LG_NewNotice_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LG_NewNotice_MsgID_descriptor(), value);
}
inline bool LG_NewNotice_MsgID_Parse(
    const ::std::string& name, LG_NewNotice_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LG_NewNotice_MsgID>(
    LG_NewNotice_MsgID_descriptor(), name, value);
}
enum LG_DelNotice_MsgID {
  LG_DelNotice_MsgID_ID = 40018
};
bool LG_DelNotice_MsgID_IsValid(int value);
const LG_DelNotice_MsgID LG_DelNotice_MsgID_MsgID_MIN = LG_DelNotice_MsgID_ID;
const LG_DelNotice_MsgID LG_DelNotice_MsgID_MsgID_MAX = LG_DelNotice_MsgID_ID;
const int LG_DelNotice_MsgID_MsgID_ARRAYSIZE = LG_DelNotice_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LG_DelNotice_MsgID_descriptor();
inline const ::std::string& LG_DelNotice_MsgID_Name(LG_DelNotice_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LG_DelNotice_MsgID_descriptor(), value);
}
inline bool LG_DelNotice_MsgID_Parse(
    const ::std::string& name, LG_DelNotice_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LG_DelNotice_MsgID>(
    LG_DelNotice_MsgID_descriptor(), name, value);
}
enum GL_NewNotice_MsgID {
  GL_NewNotice_MsgID_ID = 40019
};
bool GL_NewNotice_MsgID_IsValid(int value);
const GL_NewNotice_MsgID GL_NewNotice_MsgID_MsgID_MIN = GL_NewNotice_MsgID_ID;
const GL_NewNotice_MsgID GL_NewNotice_MsgID_MsgID_MAX = GL_NewNotice_MsgID_ID;
const int GL_NewNotice_MsgID_MsgID_ARRAYSIZE = GL_NewNotice_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* GL_NewNotice_MsgID_descriptor();
inline const ::std::string& GL_NewNotice_MsgID_Name(GL_NewNotice_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    GL_NewNotice_MsgID_descriptor(), value);
}
inline bool GL_NewNotice_MsgID_Parse(
    const ::std::string& name, GL_NewNotice_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GL_NewNotice_MsgID>(
    GL_NewNotice_MsgID_descriptor(), name, value);
}
enum LG_FeedBackUpdate_MsgID {
  LG_FeedBackUpdate_MsgID_ID = 40020
};
bool LG_FeedBackUpdate_MsgID_IsValid(int value);
const LG_FeedBackUpdate_MsgID LG_FeedBackUpdate_MsgID_MsgID_MIN = LG_FeedBackUpdate_MsgID_ID;
const LG_FeedBackUpdate_MsgID LG_FeedBackUpdate_MsgID_MsgID_MAX = LG_FeedBackUpdate_MsgID_ID;
const int LG_FeedBackUpdate_MsgID_MsgID_ARRAYSIZE = LG_FeedBackUpdate_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LG_FeedBackUpdate_MsgID_descriptor();
inline const ::std::string& LG_FeedBackUpdate_MsgID_Name(LG_FeedBackUpdate_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LG_FeedBackUpdate_MsgID_descriptor(), value);
}
inline bool LG_FeedBackUpdate_MsgID_Parse(
    const ::std::string& name, LG_FeedBackUpdate_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LG_FeedBackUpdate_MsgID>(
    LG_FeedBackUpdate_MsgID_descriptor(), name, value);
}
enum LD_DelMessage_MsgID {
  LD_DelMessage_MsgID_ID = 40021
};
bool LD_DelMessage_MsgID_IsValid(int value);
const LD_DelMessage_MsgID LD_DelMessage_MsgID_MsgID_MIN = LD_DelMessage_MsgID_ID;
const LD_DelMessage_MsgID LD_DelMessage_MsgID_MsgID_MAX = LD_DelMessage_MsgID_ID;
const int LD_DelMessage_MsgID_MsgID_ARRAYSIZE = LD_DelMessage_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_DelMessage_MsgID_descriptor();
inline const ::std::string& LD_DelMessage_MsgID_Name(LD_DelMessage_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_DelMessage_MsgID_descriptor(), value);
}
inline bool LD_DelMessage_MsgID_Parse(
    const ::std::string& name, LD_DelMessage_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_DelMessage_MsgID>(
    LD_DelMessage_MsgID_descriptor(), name, value);
}
enum DL_DelMessage_MsgID {
  DL_DelMessage_MsgID_ID = 40022
};
bool DL_DelMessage_MsgID_IsValid(int value);
const DL_DelMessage_MsgID DL_DelMessage_MsgID_MsgID_MIN = DL_DelMessage_MsgID_ID;
const DL_DelMessage_MsgID DL_DelMessage_MsgID_MsgID_MAX = DL_DelMessage_MsgID_ID;
const int DL_DelMessage_MsgID_MsgID_ARRAYSIZE = DL_DelMessage_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DL_DelMessage_MsgID_descriptor();
inline const ::std::string& DL_DelMessage_MsgID_Name(DL_DelMessage_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DL_DelMessage_MsgID_descriptor(), value);
}
inline bool DL_DelMessage_MsgID_Parse(
    const ::std::string& name, DL_DelMessage_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DL_DelMessage_MsgID>(
    DL_DelMessage_MsgID_descriptor(), name, value);
}
enum SL_Log_Money_MsgID {
  SL_Log_Money_MsgID_ID = 40023
};
bool SL_Log_Money_MsgID_IsValid(int value);
const SL_Log_Money_MsgID SL_Log_Money_MsgID_MsgID_MIN = SL_Log_Money_MsgID_ID;
const SL_Log_Money_MsgID SL_Log_Money_MsgID_MsgID_MAX = SL_Log_Money_MsgID_ID;
const int SL_Log_Money_MsgID_MsgID_ARRAYSIZE = SL_Log_Money_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SL_Log_Money_MsgID_descriptor();
inline const ::std::string& SL_Log_Money_MsgID_Name(SL_Log_Money_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SL_Log_Money_MsgID_descriptor(), value);
}
inline bool SL_Log_Money_MsgID_Parse(
    const ::std::string& name, SL_Log_Money_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SL_Log_Money_MsgID>(
    SL_Log_Money_MsgID_descriptor(), name, value);
}
enum SL_Log_Game_MsgID {
  SL_Log_Game_MsgID_ID = 40024
};
bool SL_Log_Game_MsgID_IsValid(int value);
const SL_Log_Game_MsgID SL_Log_Game_MsgID_MsgID_MIN = SL_Log_Game_MsgID_ID;
const SL_Log_Game_MsgID SL_Log_Game_MsgID_MsgID_MAX = SL_Log_Game_MsgID_ID;
const int SL_Log_Game_MsgID_MsgID_ARRAYSIZE = SL_Log_Game_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SL_Log_Game_MsgID_descriptor();
inline const ::std::string& SL_Log_Game_MsgID_Name(SL_Log_Game_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SL_Log_Game_MsgID_descriptor(), value);
}
inline bool SL_Log_Game_MsgID_Parse(
    const ::std::string& name, SL_Log_Game_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SL_Log_Game_MsgID>(
    SL_Log_Game_MsgID_descriptor(), name, value);
}
enum WF_CashFalse_MsgID {
  WF_CashFalse_MsgID_ID = 40025
};
bool WF_CashFalse_MsgID_IsValid(int value);
const WF_CashFalse_MsgID WF_CashFalse_MsgID_MsgID_MIN = WF_CashFalse_MsgID_ID;
const WF_CashFalse_MsgID WF_CashFalse_MsgID_MsgID_MAX = WF_CashFalse_MsgID_ID;
const int WF_CashFalse_MsgID_MsgID_ARRAYSIZE = WF_CashFalse_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* WF_CashFalse_MsgID_descriptor();
inline const ::std::string& WF_CashFalse_MsgID_Name(WF_CashFalse_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    WF_CashFalse_MsgID_descriptor(), value);
}
inline bool WF_CashFalse_MsgID_Parse(
    const ::std::string& name, WF_CashFalse_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WF_CashFalse_MsgID>(
    WF_CashFalse_MsgID_descriptor(), name, value);
}
enum LW_CashFalse_MsgID {
  LW_CashFalse_MsgID_ID = 40026
};
bool LW_CashFalse_MsgID_IsValid(int value);
const LW_CashFalse_MsgID LW_CashFalse_MsgID_MsgID_MIN = LW_CashFalse_MsgID_ID;
const LW_CashFalse_MsgID LW_CashFalse_MsgID_MsgID_MAX = LW_CashFalse_MsgID_ID;
const int LW_CashFalse_MsgID_MsgID_ARRAYSIZE = LW_CashFalse_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LW_CashFalse_MsgID_descriptor();
inline const ::std::string& LW_CashFalse_MsgID_Name(LW_CashFalse_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LW_CashFalse_MsgID_descriptor(), value);
}
inline bool LW_CashFalse_MsgID_Parse(
    const ::std::string& name, LW_CashFalse_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LW_CashFalse_MsgID>(
    LW_CashFalse_MsgID_descriptor(), name, value);
}
enum LD_CashFalse_MsgID {
  LD_CashFalse_MsgID_ID = 40026
};
bool LD_CashFalse_MsgID_IsValid(int value);
const LD_CashFalse_MsgID LD_CashFalse_MsgID_MsgID_MIN = LD_CashFalse_MsgID_ID;
const LD_CashFalse_MsgID LD_CashFalse_MsgID_MsgID_MAX = LD_CashFalse_MsgID_ID;
const int LD_CashFalse_MsgID_MsgID_ARRAYSIZE = LD_CashFalse_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_CashFalse_MsgID_descriptor();
inline const ::std::string& LD_CashFalse_MsgID_Name(LD_CashFalse_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_CashFalse_MsgID_descriptor(), value);
}
inline bool LD_CashFalse_MsgID_Parse(
    const ::std::string& name, LD_CashFalse_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_CashFalse_MsgID>(
    LD_CashFalse_MsgID_descriptor(), name, value);
}
enum DL_CashFalseInfo_MsgID {
  DL_CashFalseInfo_MsgID_ID = 40027
};
bool DL_CashFalseInfo_MsgID_IsValid(int value);
const DL_CashFalseInfo_MsgID DL_CashFalseInfo_MsgID_MsgID_MIN = DL_CashFalseInfo_MsgID_ID;
const DL_CashFalseInfo_MsgID DL_CashFalseInfo_MsgID_MsgID_MAX = DL_CashFalseInfo_MsgID_ID;
const int DL_CashFalseInfo_MsgID_MsgID_ARRAYSIZE = DL_CashFalseInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DL_CashFalseInfo_MsgID_descriptor();
inline const ::std::string& DL_CashFalseInfo_MsgID_Name(DL_CashFalseInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DL_CashFalseInfo_MsgID_descriptor(), value);
}
inline bool DL_CashFalseInfo_MsgID_Parse(
    const ::std::string& name, DL_CashFalseInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DL_CashFalseInfo_MsgID>(
    DL_CashFalseInfo_MsgID_descriptor(), name, value);
}
enum LD_CashDeal_MsgID {
  LD_CashDeal_MsgID_ID = 40028
};
bool LD_CashDeal_MsgID_IsValid(int value);
const LD_CashDeal_MsgID LD_CashDeal_MsgID_MsgID_MIN = LD_CashDeal_MsgID_ID;
const LD_CashDeal_MsgID LD_CashDeal_MsgID_MsgID_MAX = LD_CashDeal_MsgID_ID;
const int LD_CashDeal_MsgID_MsgID_ARRAYSIZE = LD_CashDeal_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_CashDeal_MsgID_descriptor();
inline const ::std::string& LD_CashDeal_MsgID_Name(LD_CashDeal_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_CashDeal_MsgID_descriptor(), value);
}
inline bool LD_CashDeal_MsgID_Parse(
    const ::std::string& name, LD_CashDeal_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_CashDeal_MsgID>(
    LD_CashDeal_MsgID_descriptor(), name, value);
}
enum DL_CashReply_MsgID {
  DL_CashReply_MsgID_ID = 40029
};
bool DL_CashReply_MsgID_IsValid(int value);
const DL_CashReply_MsgID DL_CashReply_MsgID_MsgID_MIN = DL_CashReply_MsgID_ID;
const DL_CashReply_MsgID DL_CashReply_MsgID_MsgID_MAX = DL_CashReply_MsgID_ID;
const int DL_CashReply_MsgID_MsgID_ARRAYSIZE = DL_CashReply_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DL_CashReply_MsgID_descriptor();
inline const ::std::string& DL_CashReply_MsgID_Name(DL_CashReply_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DL_CashReply_MsgID_descriptor(), value);
}
inline bool DL_CashReply_MsgID_Parse(
    const ::std::string& name, DL_CashReply_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DL_CashReply_MsgID>(
    DL_CashReply_MsgID_descriptor(), name, value);
}
enum LS_CashDeal_MsgID {
  LS_CashDeal_MsgID_ID = 40030
};
bool LS_CashDeal_MsgID_IsValid(int value);
const LS_CashDeal_MsgID LS_CashDeal_MsgID_MsgID_MIN = LS_CashDeal_MsgID_ID;
const LS_CashDeal_MsgID LS_CashDeal_MsgID_MsgID_MAX = LS_CashDeal_MsgID_ID;
const int LS_CashDeal_MsgID_MsgID_ARRAYSIZE = LS_CashDeal_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_CashDeal_MsgID_descriptor();
inline const ::std::string& LS_CashDeal_MsgID_Name(LS_CashDeal_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_CashDeal_MsgID_descriptor(), value);
}
inline bool LS_CashDeal_MsgID_Parse(
    const ::std::string& name, LS_CashDeal_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_CashDeal_MsgID>(
    LS_CashDeal_MsgID_descriptor(), name, value);
}
enum SL_CashReply_MsgID {
  SL_CashReply_MsgID_ID = 40031
};
bool SL_CashReply_MsgID_IsValid(int value);
const SL_CashReply_MsgID SL_CashReply_MsgID_MsgID_MIN = SL_CashReply_MsgID_ID;
const SL_CashReply_MsgID SL_CashReply_MsgID_MsgID_MAX = SL_CashReply_MsgID_ID;
const int SL_CashReply_MsgID_MsgID_ARRAYSIZE = SL_CashReply_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SL_CashReply_MsgID_descriptor();
inline const ::std::string& SL_CashReply_MsgID_Name(SL_CashReply_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SL_CashReply_MsgID_descriptor(), value);
}
inline bool SL_CashReply_MsgID_Parse(
    const ::std::string& name, SL_CashReply_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SL_CashReply_MsgID>(
    SL_CashReply_MsgID_descriptor(), name, value);
}
enum LD_CashReply_MsgID {
  LD_CashReply_MsgID_ID = 40032
};
bool LD_CashReply_MsgID_IsValid(int value);
const LD_CashReply_MsgID LD_CashReply_MsgID_MsgID_MIN = LD_CashReply_MsgID_ID;
const LD_CashReply_MsgID LD_CashReply_MsgID_MsgID_MAX = LD_CashReply_MsgID_ID;
const int LD_CashReply_MsgID_MsgID_ARRAYSIZE = LD_CashReply_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_CashReply_MsgID_descriptor();
inline const ::std::string& LD_CashReply_MsgID_Name(LD_CashReply_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_CashReply_MsgID_descriptor(), value);
}
inline bool LD_CashReply_MsgID_Parse(
    const ::std::string& name, LD_CashReply_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_CashReply_MsgID>(
    LD_CashReply_MsgID_descriptor(), name, value);
}
enum SD_CashMoneyType_MsgID {
  SD_CashMoneyType_MsgID_ID = 40033
};
bool SD_CashMoneyType_MsgID_IsValid(int value);
const SD_CashMoneyType_MsgID SD_CashMoneyType_MsgID_MsgID_MIN = SD_CashMoneyType_MsgID_ID;
const SD_CashMoneyType_MsgID SD_CashMoneyType_MsgID_MsgID_MAX = SD_CashMoneyType_MsgID_ID;
const int SD_CashMoneyType_MsgID_MsgID_ARRAYSIZE = SD_CashMoneyType_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_CashMoneyType_MsgID_descriptor();
inline const ::std::string& SD_CashMoneyType_MsgID_Name(SD_CashMoneyType_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_CashMoneyType_MsgID_descriptor(), value);
}
inline bool SD_CashMoneyType_MsgID_Parse(
    const ::std::string& name, SD_CashMoneyType_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_CashMoneyType_MsgID>(
    SD_CashMoneyType_MsgID_descriptor(), name, value);
}
enum DS_CashMoneyType_MsgID {
  DS_CashMoneyType_MsgID_ID = 40034
};
bool DS_CashMoneyType_MsgID_IsValid(int value);
const DS_CashMoneyType_MsgID DS_CashMoneyType_MsgID_MsgID_MIN = DS_CashMoneyType_MsgID_ID;
const DS_CashMoneyType_MsgID DS_CashMoneyType_MsgID_MsgID_MAX = DS_CashMoneyType_MsgID_ID;
const int DS_CashMoneyType_MsgID_MsgID_ARRAYSIZE = DS_CashMoneyType_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_CashMoneyType_MsgID_descriptor();
inline const ::std::string& DS_CashMoneyType_MsgID_Name(DS_CashMoneyType_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_CashMoneyType_MsgID_descriptor(), value);
}
inline bool DS_CashMoneyType_MsgID_Parse(
    const ::std::string& name, DS_CashMoneyType_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_CashMoneyType_MsgID>(
    DS_CashMoneyType_MsgID_descriptor(), name, value);
}
enum SD_CashMoney_MsgID {
  SD_CashMoney_MsgID_ID = 40035
};
bool SD_CashMoney_MsgID_IsValid(int value);
const SD_CashMoney_MsgID SD_CashMoney_MsgID_MsgID_MIN = SD_CashMoney_MsgID_ID;
const SD_CashMoney_MsgID SD_CashMoney_MsgID_MsgID_MAX = SD_CashMoney_MsgID_ID;
const int SD_CashMoney_MsgID_MsgID_ARRAYSIZE = SD_CashMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_CashMoney_MsgID_descriptor();
inline const ::std::string& SD_CashMoney_MsgID_Name(SD_CashMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_CashMoney_MsgID_descriptor(), value);
}
inline bool SD_CashMoney_MsgID_Parse(
    const ::std::string& name, SD_CashMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_CashMoney_MsgID>(
    SD_CashMoney_MsgID_descriptor(), name, value);
}
enum DS_CashMoney_MsgID {
  DS_CashMoney_MsgID_ID = 40036
};
bool DS_CashMoney_MsgID_IsValid(int value);
const DS_CashMoney_MsgID DS_CashMoney_MsgID_MsgID_MIN = DS_CashMoney_MsgID_ID;
const DS_CashMoney_MsgID DS_CashMoney_MsgID_MsgID_MAX = DS_CashMoney_MsgID_ID;
const int DS_CashMoney_MsgID_MsgID_ARRAYSIZE = DS_CashMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_CashMoney_MsgID_descriptor();
inline const ::std::string& DS_CashMoney_MsgID_Name(DS_CashMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_CashMoney_MsgID_descriptor(), value);
}
inline bool DS_CashMoney_MsgID_Parse(
    const ::std::string& name, DS_CashMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_CashMoney_MsgID>(
    DS_CashMoney_MsgID_descriptor(), name, value);
}
enum WF_Recharge_MsgID {
  WF_Recharge_MsgID_ID = 40037
};
bool WF_Recharge_MsgID_IsValid(int value);
const WF_Recharge_MsgID WF_Recharge_MsgID_MsgID_MIN = WF_Recharge_MsgID_ID;
const WF_Recharge_MsgID WF_Recharge_MsgID_MsgID_MAX = WF_Recharge_MsgID_ID;
const int WF_Recharge_MsgID_MsgID_ARRAYSIZE = WF_Recharge_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* WF_Recharge_MsgID_descriptor();
inline const ::std::string& WF_Recharge_MsgID_Name(WF_Recharge_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    WF_Recharge_MsgID_descriptor(), value);
}
inline bool WF_Recharge_MsgID_Parse(
    const ::std::string& name, WF_Recharge_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WF_Recharge_MsgID>(
    WF_Recharge_MsgID_descriptor(), name, value);
}
enum FW_Result_MsgID {
  FW_Result_MsgID_ID = 40038
};
bool FW_Result_MsgID_IsValid(int value);
const FW_Result_MsgID FW_Result_MsgID_MsgID_MIN = FW_Result_MsgID_ID;
const FW_Result_MsgID FW_Result_MsgID_MsgID_MAX = FW_Result_MsgID_ID;
const int FW_Result_MsgID_MsgID_ARRAYSIZE = FW_Result_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FW_Result_MsgID_descriptor();
inline const ::std::string& FW_Result_MsgID_Name(FW_Result_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FW_Result_MsgID_descriptor(), value);
}
inline bool FW_Result_MsgID_Parse(
    const ::std::string& name, FW_Result_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FW_Result_MsgID>(
    FW_Result_MsgID_descriptor(), name, value);
}
enum FD_ChangMoney_MsgID {
  FD_ChangMoney_MsgID_ID = 40039
};
bool FD_ChangMoney_MsgID_IsValid(int value);
const FD_ChangMoney_MsgID FD_ChangMoney_MsgID_MsgID_MIN = FD_ChangMoney_MsgID_ID;
const FD_ChangMoney_MsgID FD_ChangMoney_MsgID_MsgID_MAX = FD_ChangMoney_MsgID_ID;
const int FD_ChangMoney_MsgID_MsgID_ARRAYSIZE = FD_ChangMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FD_ChangMoney_MsgID_descriptor();
inline const ::std::string& FD_ChangMoney_MsgID_Name(FD_ChangMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FD_ChangMoney_MsgID_descriptor(), value);
}
inline bool FD_ChangMoney_MsgID_Parse(
    const ::std::string& name, FD_ChangMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FD_ChangMoney_MsgID>(
    FD_ChangMoney_MsgID_descriptor(), name, value);
}
enum DF_Reply_MsgID {
  DF_Reply_MsgID_ID = 40042
};
bool DF_Reply_MsgID_IsValid(int value);
const DF_Reply_MsgID DF_Reply_MsgID_MsgID_MIN = DF_Reply_MsgID_ID;
const DF_Reply_MsgID DF_Reply_MsgID_MsgID_MAX = DF_Reply_MsgID_ID;
const int DF_Reply_MsgID_MsgID_ARRAYSIZE = DF_Reply_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DF_Reply_MsgID_descriptor();
inline const ::std::string& DF_Reply_MsgID_Name(DF_Reply_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DF_Reply_MsgID_descriptor(), value);
}
inline bool DF_Reply_MsgID_Parse(
    const ::std::string& name, DF_Reply_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DF_Reply_MsgID>(
    DF_Reply_MsgID_descriptor(), name, value);
}
enum FD_ChangMoneyDeal_MsgID {
  FD_ChangMoneyDeal_MsgID_ID = 40041
};
bool FD_ChangMoneyDeal_MsgID_IsValid(int value);
const FD_ChangMoneyDeal_MsgID FD_ChangMoneyDeal_MsgID_MsgID_MIN = FD_ChangMoneyDeal_MsgID_ID;
const FD_ChangMoneyDeal_MsgID FD_ChangMoneyDeal_MsgID_MsgID_MAX = FD_ChangMoneyDeal_MsgID_ID;
const int FD_ChangMoneyDeal_MsgID_MsgID_ARRAYSIZE = FD_ChangMoneyDeal_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FD_ChangMoneyDeal_MsgID_descriptor();
inline const ::std::string& FD_ChangMoneyDeal_MsgID_Name(FD_ChangMoneyDeal_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FD_ChangMoneyDeal_MsgID_descriptor(), value);
}
inline bool FD_ChangMoneyDeal_MsgID_Parse(
    const ::std::string& name, FD_ChangMoneyDeal_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FD_ChangMoneyDeal_MsgID>(
    FD_ChangMoneyDeal_MsgID_descriptor(), name, value);
}
enum DF_ChangMoney_MsgID {
  DF_ChangMoney_MsgID_ID = 40040
};
bool DF_ChangMoney_MsgID_IsValid(int value);
const DF_ChangMoney_MsgID DF_ChangMoney_MsgID_MsgID_MIN = DF_ChangMoney_MsgID_ID;
const DF_ChangMoney_MsgID DF_ChangMoney_MsgID_MsgID_MAX = DF_ChangMoney_MsgID_ID;
const int DF_ChangMoney_MsgID_MsgID_ARRAYSIZE = DF_ChangMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DF_ChangMoney_MsgID_descriptor();
inline const ::std::string& DF_ChangMoney_MsgID_Name(DF_ChangMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DF_ChangMoney_MsgID_descriptor(), value);
}
inline bool DF_ChangMoney_MsgID_Parse(
    const ::std::string& name, DF_ChangMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DF_ChangMoney_MsgID>(
    DF_ChangMoney_MsgID_descriptor(), name, value);
}
enum FS_ChangMoneyDeal_MsgID {
  FS_ChangMoneyDeal_MsgID_ID = 40043
};
bool FS_ChangMoneyDeal_MsgID_IsValid(int value);
const FS_ChangMoneyDeal_MsgID FS_ChangMoneyDeal_MsgID_MsgID_MIN = FS_ChangMoneyDeal_MsgID_ID;
const FS_ChangMoneyDeal_MsgID FS_ChangMoneyDeal_MsgID_MsgID_MAX = FS_ChangMoneyDeal_MsgID_ID;
const int FS_ChangMoneyDeal_MsgID_MsgID_ARRAYSIZE = FS_ChangMoneyDeal_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FS_ChangMoneyDeal_MsgID_descriptor();
inline const ::std::string& FS_ChangMoneyDeal_MsgID_Name(FS_ChangMoneyDeal_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FS_ChangMoneyDeal_MsgID_descriptor(), value);
}
inline bool FS_ChangMoneyDeal_MsgID_Parse(
    const ::std::string& name, FS_ChangMoneyDeal_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FS_ChangMoneyDeal_MsgID>(
    FS_ChangMoneyDeal_MsgID_descriptor(), name, value);
}
enum SD_ChangMoneyReply_MsgID {
  SD_ChangMoneyReply_MsgID_ID = 40044
};
bool SD_ChangMoneyReply_MsgID_IsValid(int value);
const SD_ChangMoneyReply_MsgID SD_ChangMoneyReply_MsgID_MsgID_MIN = SD_ChangMoneyReply_MsgID_ID;
const SD_ChangMoneyReply_MsgID SD_ChangMoneyReply_MsgID_MsgID_MAX = SD_ChangMoneyReply_MsgID_ID;
const int SD_ChangMoneyReply_MsgID_MsgID_ARRAYSIZE = SD_ChangMoneyReply_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_ChangMoneyReply_MsgID_descriptor();
inline const ::std::string& SD_ChangMoneyReply_MsgID_Name(SD_ChangMoneyReply_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_ChangMoneyReply_MsgID_descriptor(), value);
}
inline bool SD_ChangMoneyReply_MsgID_Parse(
    const ::std::string& name, SD_ChangMoneyReply_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_ChangMoneyReply_MsgID>(
    SD_ChangMoneyReply_MsgID_descriptor(), name, value);
}
enum SD_BandAlipay_MsgID {
  SD_BandAlipay_MsgID_ID = 40046
};
bool SD_BandAlipay_MsgID_IsValid(int value);
const SD_BandAlipay_MsgID SD_BandAlipay_MsgID_MsgID_MIN = SD_BandAlipay_MsgID_ID;
const SD_BandAlipay_MsgID SD_BandAlipay_MsgID_MsgID_MAX = SD_BandAlipay_MsgID_ID;
const int SD_BandAlipay_MsgID_MsgID_ARRAYSIZE = SD_BandAlipay_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_BandAlipay_MsgID_descriptor();
inline const ::std::string& SD_BandAlipay_MsgID_Name(SD_BandAlipay_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_BandAlipay_MsgID_descriptor(), value);
}
inline bool SD_BandAlipay_MsgID_Parse(
    const ::std::string& name, SD_BandAlipay_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_BandAlipay_MsgID>(
    SD_BandAlipay_MsgID_descriptor(), name, value);
}
enum DS_BandAlipay_MsgID {
  DS_BandAlipay_MsgID_ID = 40047
};
bool DS_BandAlipay_MsgID_IsValid(int value);
const DS_BandAlipay_MsgID DS_BandAlipay_MsgID_MsgID_MIN = DS_BandAlipay_MsgID_ID;
const DS_BandAlipay_MsgID DS_BandAlipay_MsgID_MsgID_MAX = DS_BandAlipay_MsgID_ID;
const int DS_BandAlipay_MsgID_MsgID_ARRAYSIZE = DS_BandAlipay_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_BandAlipay_MsgID_descriptor();
inline const ::std::string& DS_BandAlipay_MsgID_Name(DS_BandAlipay_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_BandAlipay_MsgID_descriptor(), value);
}
inline bool DS_BandAlipay_MsgID_Parse(
    const ::std::string& name, DS_BandAlipay_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_BandAlipay_MsgID>(
    DS_BandAlipay_MsgID_descriptor(), name, value);
}
enum DS_BandAlipayNum_MsgID {
  DS_BandAlipayNum_MsgID_ID = 40048
};
bool DS_BandAlipayNum_MsgID_IsValid(int value);
const DS_BandAlipayNum_MsgID DS_BandAlipayNum_MsgID_MsgID_MIN = DS_BandAlipayNum_MsgID_ID;
const DS_BandAlipayNum_MsgID DS_BandAlipayNum_MsgID_MsgID_MAX = DS_BandAlipayNum_MsgID_ID;
const int DS_BandAlipayNum_MsgID_MsgID_ARRAYSIZE = DS_BandAlipayNum_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_BandAlipayNum_MsgID_descriptor();
inline const ::std::string& DS_BandAlipayNum_MsgID_Name(DS_BandAlipayNum_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_BandAlipayNum_MsgID_descriptor(), value);
}
inline bool DS_BandAlipayNum_MsgID_Parse(
    const ::std::string& name, DS_BandAlipayNum_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_BandAlipayNum_MsgID>(
    DS_BandAlipayNum_MsgID_descriptor(), name, value);
}
enum WL_ChangeTax_MsgID {
  WL_ChangeTax_MsgID_ID = 40050
};
bool WL_ChangeTax_MsgID_IsValid(int value);
const WL_ChangeTax_MsgID WL_ChangeTax_MsgID_MsgID_MIN = WL_ChangeTax_MsgID_ID;
const WL_ChangeTax_MsgID WL_ChangeTax_MsgID_MsgID_MAX = WL_ChangeTax_MsgID_ID;
const int WL_ChangeTax_MsgID_MsgID_ARRAYSIZE = WL_ChangeTax_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* WL_ChangeTax_MsgID_descriptor();
inline const ::std::string& WL_ChangeTax_MsgID_Name(WL_ChangeTax_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    WL_ChangeTax_MsgID_descriptor(), value);
}
inline bool WL_ChangeTax_MsgID_Parse(
    const ::std::string& name, WL_ChangeTax_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WL_ChangeTax_MsgID>(
    WL_ChangeTax_MsgID_descriptor(), name, value);
}
enum LS_ChangeTax_MsgID {
  LS_ChangeTax_MsgID_ID = 40051
};
bool LS_ChangeTax_MsgID_IsValid(int value);
const LS_ChangeTax_MsgID LS_ChangeTax_MsgID_MsgID_MIN = LS_ChangeTax_MsgID_ID;
const LS_ChangeTax_MsgID LS_ChangeTax_MsgID_MsgID_MAX = LS_ChangeTax_MsgID_ID;
const int LS_ChangeTax_MsgID_MsgID_ARRAYSIZE = LS_ChangeTax_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_ChangeTax_MsgID_descriptor();
inline const ::std::string& LS_ChangeTax_MsgID_Name(LS_ChangeTax_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_ChangeTax_MsgID_descriptor(), value);
}
inline bool LS_ChangeTax_MsgID_Parse(
    const ::std::string& name, LS_ChangeTax_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_ChangeTax_MsgID>(
    LS_ChangeTax_MsgID_descriptor(), name, value);
}
enum SL_ChangeTax_MsgID {
  SL_ChangeTax_MsgID_ID = 40052
};
bool SL_ChangeTax_MsgID_IsValid(int value);
const SL_ChangeTax_MsgID SL_ChangeTax_MsgID_MsgID_MIN = SL_ChangeTax_MsgID_ID;
const SL_ChangeTax_MsgID SL_ChangeTax_MsgID_MsgID_MAX = SL_ChangeTax_MsgID_ID;
const int SL_ChangeTax_MsgID_MsgID_ARRAYSIZE = SL_ChangeTax_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SL_ChangeTax_MsgID_descriptor();
inline const ::std::string& SL_ChangeTax_MsgID_Name(SL_ChangeTax_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SL_ChangeTax_MsgID_descriptor(), value);
}
inline bool SL_ChangeTax_MsgID_Parse(
    const ::std::string& name, SL_ChangeTax_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SL_ChangeTax_MsgID>(
    SL_ChangeTax_MsgID_descriptor(), name, value);
}
enum LW_ChangeTax_MsgID {
  LW_ChangeTax_MsgID_ID = 40053
};
bool LW_ChangeTax_MsgID_IsValid(int value);
const LW_ChangeTax_MsgID LW_ChangeTax_MsgID_MsgID_MIN = LW_ChangeTax_MsgID_ID;
const LW_ChangeTax_MsgID LW_ChangeTax_MsgID_MsgID_MAX = LW_ChangeTax_MsgID_ID;
const int LW_ChangeTax_MsgID_MsgID_ARRAYSIZE = LW_ChangeTax_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LW_ChangeTax_MsgID_descriptor();
inline const ::std::string& LW_ChangeTax_MsgID_Name(LW_ChangeTax_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LW_ChangeTax_MsgID_descriptor(), value);
}
inline bool LW_ChangeTax_MsgID_Parse(
    const ::std::string& name, LW_ChangeTax_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LW_ChangeTax_MsgID>(
    LW_ChangeTax_MsgID_descriptor(), name, value);
}
enum WF_ChangeGameCfg_MsgID {
  WF_ChangeGameCfg_MsgID_ID = 40054
};
bool WF_ChangeGameCfg_MsgID_IsValid(int value);
const WF_ChangeGameCfg_MsgID WF_ChangeGameCfg_MsgID_MsgID_MIN = WF_ChangeGameCfg_MsgID_ID;
const WF_ChangeGameCfg_MsgID WF_ChangeGameCfg_MsgID_MsgID_MAX = WF_ChangeGameCfg_MsgID_ID;
const int WF_ChangeGameCfg_MsgID_MsgID_ARRAYSIZE = WF_ChangeGameCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* WF_ChangeGameCfg_MsgID_descriptor();
inline const ::std::string& WF_ChangeGameCfg_MsgID_Name(WF_ChangeGameCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    WF_ChangeGameCfg_MsgID_descriptor(), value);
}
inline bool WF_ChangeGameCfg_MsgID_Parse(
    const ::std::string& name, WF_ChangeGameCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WF_ChangeGameCfg_MsgID>(
    WF_ChangeGameCfg_MsgID_descriptor(), name, value);
}
enum FS_ChangeGameCfg_MsgID {
  FS_ChangeGameCfg_MsgID_ID = 40057
};
bool FS_ChangeGameCfg_MsgID_IsValid(int value);
const FS_ChangeGameCfg_MsgID FS_ChangeGameCfg_MsgID_MsgID_MIN = FS_ChangeGameCfg_MsgID_ID;
const FS_ChangeGameCfg_MsgID FS_ChangeGameCfg_MsgID_MsgID_MAX = FS_ChangeGameCfg_MsgID_ID;
const int FS_ChangeGameCfg_MsgID_MsgID_ARRAYSIZE = FS_ChangeGameCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FS_ChangeGameCfg_MsgID_descriptor();
inline const ::std::string& FS_ChangeGameCfg_MsgID_Name(FS_ChangeGameCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FS_ChangeGameCfg_MsgID_descriptor(), value);
}
inline bool FS_ChangeGameCfg_MsgID_Parse(
    const ::std::string& name, FS_ChangeGameCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FS_ChangeGameCfg_MsgID>(
    FS_ChangeGameCfg_MsgID_descriptor(), name, value);
}
enum SF_ChangeGameCfg_MsgID {
  SF_ChangeGameCfg_MsgID_ID = 40058
};
bool SF_ChangeGameCfg_MsgID_IsValid(int value);
const SF_ChangeGameCfg_MsgID SF_ChangeGameCfg_MsgID_MsgID_MIN = SF_ChangeGameCfg_MsgID_ID;
const SF_ChangeGameCfg_MsgID SF_ChangeGameCfg_MsgID_MsgID_MAX = SF_ChangeGameCfg_MsgID_ID;
const int SF_ChangeGameCfg_MsgID_MsgID_ARRAYSIZE = SF_ChangeGameCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SF_ChangeGameCfg_MsgID_descriptor();
inline const ::std::string& SF_ChangeGameCfg_MsgID_Name(SF_ChangeGameCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SF_ChangeGameCfg_MsgID_descriptor(), value);
}
inline bool SF_ChangeGameCfg_MsgID_Parse(
    const ::std::string& name, SF_ChangeGameCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SF_ChangeGameCfg_MsgID>(
    SF_ChangeGameCfg_MsgID_descriptor(), name, value);
}
enum FW_ChangeGameCfg_MsgID {
  FW_ChangeGameCfg_MsgID_ID = 40059
};
bool FW_ChangeGameCfg_MsgID_IsValid(int value);
const FW_ChangeGameCfg_MsgID FW_ChangeGameCfg_MsgID_MsgID_MIN = FW_ChangeGameCfg_MsgID_ID;
const FW_ChangeGameCfg_MsgID FW_ChangeGameCfg_MsgID_MsgID_MAX = FW_ChangeGameCfg_MsgID_ID;
const int FW_ChangeGameCfg_MsgID_MsgID_ARRAYSIZE = FW_ChangeGameCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FW_ChangeGameCfg_MsgID_descriptor();
inline const ::std::string& FW_ChangeGameCfg_MsgID_Name(FW_ChangeGameCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FW_ChangeGameCfg_MsgID_descriptor(), value);
}
inline bool FW_ChangeGameCfg_MsgID_Parse(
    const ::std::string& name, FW_ChangeGameCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FW_ChangeGameCfg_MsgID>(
    FW_ChangeGameCfg_MsgID_descriptor(), name, value);
}
enum LG_AddNewGameServer_MsgID {
  LG_AddNewGameServer_MsgID_ID = 40060
};
bool LG_AddNewGameServer_MsgID_IsValid(int value);
const LG_AddNewGameServer_MsgID LG_AddNewGameServer_MsgID_MsgID_MIN = LG_AddNewGameServer_MsgID_ID;
const LG_AddNewGameServer_MsgID LG_AddNewGameServer_MsgID_MsgID_MAX = LG_AddNewGameServer_MsgID_ID;
const int LG_AddNewGameServer_MsgID_MsgID_ARRAYSIZE = LG_AddNewGameServer_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LG_AddNewGameServer_MsgID_descriptor();
inline const ::std::string& LG_AddNewGameServer_MsgID_Name(LG_AddNewGameServer_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LG_AddNewGameServer_MsgID_descriptor(), value);
}
inline bool LG_AddNewGameServer_MsgID_Parse(
    const ::std::string& name, LG_AddNewGameServer_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LG_AddNewGameServer_MsgID>(
    LG_AddNewGameServer_MsgID_descriptor(), name, value);
}
enum SD_ServerConfig_MsgID {
  SD_ServerConfig_MsgID_ID = 40061
};
bool SD_ServerConfig_MsgID_IsValid(int value);
const SD_ServerConfig_MsgID SD_ServerConfig_MsgID_MsgID_MIN = SD_ServerConfig_MsgID_ID;
const SD_ServerConfig_MsgID SD_ServerConfig_MsgID_MsgID_MAX = SD_ServerConfig_MsgID_ID;
const int SD_ServerConfig_MsgID_MsgID_ARRAYSIZE = SD_ServerConfig_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_ServerConfig_MsgID_descriptor();
inline const ::std::string& SD_ServerConfig_MsgID_Name(SD_ServerConfig_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_ServerConfig_MsgID_descriptor(), value);
}
inline bool SD_ServerConfig_MsgID_Parse(
    const ::std::string& name, SD_ServerConfig_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_ServerConfig_MsgID>(
    SD_ServerConfig_MsgID_descriptor(), name, value);
}
enum DS_ServerConfig_MsgID {
  DS_ServerConfig_MsgID_ID = 40062
};
bool DS_ServerConfig_MsgID_IsValid(int value);
const DS_ServerConfig_MsgID DS_ServerConfig_MsgID_MsgID_MIN = DS_ServerConfig_MsgID_ID;
const DS_ServerConfig_MsgID DS_ServerConfig_MsgID_MsgID_MAX = DS_ServerConfig_MsgID_ID;
const int DS_ServerConfig_MsgID_MsgID_ARRAYSIZE = DS_ServerConfig_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_ServerConfig_MsgID_descriptor();
inline const ::std::string& DS_ServerConfig_MsgID_Name(DS_ServerConfig_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_ServerConfig_MsgID_descriptor(), value);
}
inline bool DS_ServerConfig_MsgID_Parse(
    const ::std::string& name, DS_ServerConfig_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_ServerConfig_MsgID>(
    DS_ServerConfig_MsgID_descriptor(), name, value);
}
enum DL_ServerConfig_MsgID {
  DL_ServerConfig_MsgID_ID = 40063
};
bool DL_ServerConfig_MsgID_IsValid(int value);
const DL_ServerConfig_MsgID DL_ServerConfig_MsgID_MsgID_MIN = DL_ServerConfig_MsgID_ID;
const DL_ServerConfig_MsgID DL_ServerConfig_MsgID_MsgID_MAX = DL_ServerConfig_MsgID_ID;
const int DL_ServerConfig_MsgID_MsgID_ARRAYSIZE = DL_ServerConfig_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DL_ServerConfig_MsgID_descriptor();
inline const ::std::string& DL_ServerConfig_MsgID_Name(DL_ServerConfig_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DL_ServerConfig_MsgID_descriptor(), value);
}
inline bool DL_ServerConfig_MsgID_Parse(
    const ::std::string& name, DL_ServerConfig_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DL_ServerConfig_MsgID>(
    DL_ServerConfig_MsgID_descriptor(), name, value);
}
enum WL_ChangeMoney_MsgID {
  WL_ChangeMoney_MsgID_ID = 40064
};
bool WL_ChangeMoney_MsgID_IsValid(int value);
const WL_ChangeMoney_MsgID WL_ChangeMoney_MsgID_MsgID_MIN = WL_ChangeMoney_MsgID_ID;
const WL_ChangeMoney_MsgID WL_ChangeMoney_MsgID_MsgID_MAX = WL_ChangeMoney_MsgID_ID;
const int WL_ChangeMoney_MsgID_MsgID_ARRAYSIZE = WL_ChangeMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* WL_ChangeMoney_MsgID_descriptor();
inline const ::std::string& WL_ChangeMoney_MsgID_Name(WL_ChangeMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    WL_ChangeMoney_MsgID_descriptor(), value);
}
inline bool WL_ChangeMoney_MsgID_Parse(
    const ::std::string& name, WL_ChangeMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WL_ChangeMoney_MsgID>(
    WL_ChangeMoney_MsgID_descriptor(), name, value);
}
enum LS_ChangeMoney_MsgID {
  LS_ChangeMoney_MsgID_ID = 40065
};
bool LS_ChangeMoney_MsgID_IsValid(int value);
const LS_ChangeMoney_MsgID LS_ChangeMoney_MsgID_MsgID_MIN = LS_ChangeMoney_MsgID_ID;
const LS_ChangeMoney_MsgID LS_ChangeMoney_MsgID_MsgID_MAX = LS_ChangeMoney_MsgID_ID;
const int LS_ChangeMoney_MsgID_MsgID_ARRAYSIZE = LS_ChangeMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_ChangeMoney_MsgID_descriptor();
inline const ::std::string& LS_ChangeMoney_MsgID_Name(LS_ChangeMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_ChangeMoney_MsgID_descriptor(), value);
}
inline bool LS_ChangeMoney_MsgID_Parse(
    const ::std::string& name, LS_ChangeMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_ChangeMoney_MsgID>(
    LS_ChangeMoney_MsgID_descriptor(), name, value);
}
enum SL_ChangeMoney_MsgID {
  SL_ChangeMoney_MsgID_ID = 40066
};
bool SL_ChangeMoney_MsgID_IsValid(int value);
const SL_ChangeMoney_MsgID SL_ChangeMoney_MsgID_MsgID_MIN = SL_ChangeMoney_MsgID_ID;
const SL_ChangeMoney_MsgID SL_ChangeMoney_MsgID_MsgID_MAX = SL_ChangeMoney_MsgID_ID;
const int SL_ChangeMoney_MsgID_MsgID_ARRAYSIZE = SL_ChangeMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SL_ChangeMoney_MsgID_descriptor();
inline const ::std::string& SL_ChangeMoney_MsgID_Name(SL_ChangeMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SL_ChangeMoney_MsgID_descriptor(), value);
}
inline bool SL_ChangeMoney_MsgID_Parse(
    const ::std::string& name, SL_ChangeMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SL_ChangeMoney_MsgID>(
    SL_ChangeMoney_MsgID_descriptor(), name, value);
}
enum LW_ChangeMoney_MsgID {
  LW_ChangeMoney_MsgID_ID = 40067
};
bool LW_ChangeMoney_MsgID_IsValid(int value);
const LW_ChangeMoney_MsgID LW_ChangeMoney_MsgID_MsgID_MIN = LW_ChangeMoney_MsgID_ID;
const LW_ChangeMoney_MsgID LW_ChangeMoney_MsgID_MsgID_MAX = LW_ChangeMoney_MsgID_ID;
const int LW_ChangeMoney_MsgID_MsgID_ARRAYSIZE = LW_ChangeMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LW_ChangeMoney_MsgID_descriptor();
inline const ::std::string& LW_ChangeMoney_MsgID_Name(LW_ChangeMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LW_ChangeMoney_MsgID_descriptor(), value);
}
inline bool LW_ChangeMoney_MsgID_Parse(
    const ::std::string& name, LW_ChangeMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LW_ChangeMoney_MsgID>(
    LW_ChangeMoney_MsgID_descriptor(), name, value);
}
enum LD_OfflineChangeMoney_MsgID {
  LD_OfflineChangeMoney_MsgID_ID = 40068
};
bool LD_OfflineChangeMoney_MsgID_IsValid(int value);
const LD_OfflineChangeMoney_MsgID LD_OfflineChangeMoney_MsgID_MsgID_MIN = LD_OfflineChangeMoney_MsgID_ID;
const LD_OfflineChangeMoney_MsgID LD_OfflineChangeMoney_MsgID_MsgID_MAX = LD_OfflineChangeMoney_MsgID_ID;
const int LD_OfflineChangeMoney_MsgID_MsgID_ARRAYSIZE = LD_OfflineChangeMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_OfflineChangeMoney_MsgID_descriptor();
inline const ::std::string& LD_OfflineChangeMoney_MsgID_Name(LD_OfflineChangeMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_OfflineChangeMoney_MsgID_descriptor(), value);
}
inline bool LD_OfflineChangeMoney_MsgID_Parse(
    const ::std::string& name, LD_OfflineChangeMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_OfflineChangeMoney_MsgID>(
    LD_OfflineChangeMoney_MsgID_descriptor(), name, value);
}
enum GL_GetServerCfg_MsgID {
  GL_GetServerCfg_MsgID_ID = 40069
};
bool GL_GetServerCfg_MsgID_IsValid(int value);
const GL_GetServerCfg_MsgID GL_GetServerCfg_MsgID_MsgID_MIN = GL_GetServerCfg_MsgID_ID;
const GL_GetServerCfg_MsgID GL_GetServerCfg_MsgID_MsgID_MAX = GL_GetServerCfg_MsgID_ID;
const int GL_GetServerCfg_MsgID_MsgID_ARRAYSIZE = GL_GetServerCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* GL_GetServerCfg_MsgID_descriptor();
inline const ::std::string& GL_GetServerCfg_MsgID_Name(GL_GetServerCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    GL_GetServerCfg_MsgID_descriptor(), value);
}
inline bool GL_GetServerCfg_MsgID_Parse(
    const ::std::string& name, GL_GetServerCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GL_GetServerCfg_MsgID>(
    GL_GetServerCfg_MsgID_descriptor(), name, value);
}
enum LD_GetServerCfg_MsgID {
  LD_GetServerCfg_MsgID_ID = 40070
};
bool LD_GetServerCfg_MsgID_IsValid(int value);
const LD_GetServerCfg_MsgID LD_GetServerCfg_MsgID_MsgID_MIN = LD_GetServerCfg_MsgID_ID;
const LD_GetServerCfg_MsgID LD_GetServerCfg_MsgID_MsgID_MAX = LD_GetServerCfg_MsgID_ID;
const int LD_GetServerCfg_MsgID_MsgID_ARRAYSIZE = LD_GetServerCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_GetServerCfg_MsgID_descriptor();
inline const ::std::string& LD_GetServerCfg_MsgID_Name(LD_GetServerCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_GetServerCfg_MsgID_descriptor(), value);
}
inline bool LD_GetServerCfg_MsgID_Parse(
    const ::std::string& name, LD_GetServerCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_GetServerCfg_MsgID>(
    LD_GetServerCfg_MsgID_descriptor(), name, value);
}
enum DL_DBGameConfigMgr_MsgID {
  DL_DBGameConfigMgr_MsgID_ID = 40071
};
bool DL_DBGameConfigMgr_MsgID_IsValid(int value);
const DL_DBGameConfigMgr_MsgID DL_DBGameConfigMgr_MsgID_MsgID_MIN = DL_DBGameConfigMgr_MsgID_ID;
const DL_DBGameConfigMgr_MsgID DL_DBGameConfigMgr_MsgID_MsgID_MAX = DL_DBGameConfigMgr_MsgID_ID;
const int DL_DBGameConfigMgr_MsgID_MsgID_ARRAYSIZE = DL_DBGameConfigMgr_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DL_DBGameConfigMgr_MsgID_descriptor();
inline const ::std::string& DL_DBGameConfigMgr_MsgID_Name(DL_DBGameConfigMgr_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DL_DBGameConfigMgr_MsgID_descriptor(), value);
}
inline bool DL_DBGameConfigMgr_MsgID_Parse(
    const ::std::string& name, DL_DBGameConfigMgr_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DL_DBGameConfigMgr_MsgID>(
    DL_DBGameConfigMgr_MsgID_descriptor(), name, value);
}
enum LG_DBGameConfigMgr_MsgID {
  LG_DBGameConfigMgr_MsgID_ID = 40072
};
bool LG_DBGameConfigMgr_MsgID_IsValid(int value);
const LG_DBGameConfigMgr_MsgID LG_DBGameConfigMgr_MsgID_MsgID_MIN = LG_DBGameConfigMgr_MsgID_ID;
const LG_DBGameConfigMgr_MsgID LG_DBGameConfigMgr_MsgID_MsgID_MAX = LG_DBGameConfigMgr_MsgID_ID;
const int LG_DBGameConfigMgr_MsgID_MsgID_ARRAYSIZE = LG_DBGameConfigMgr_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LG_DBGameConfigMgr_MsgID_descriptor();
inline const ::std::string& LG_DBGameConfigMgr_MsgID_Name(LG_DBGameConfigMgr_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LG_DBGameConfigMgr_MsgID_descriptor(), value);
}
inline bool LG_DBGameConfigMgr_MsgID_Parse(
    const ::std::string& name, LG_DBGameConfigMgr_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LG_DBGameConfigMgr_MsgID>(
    LG_DBGameConfigMgr_MsgID_descriptor(), name, value);
}
enum SL_Channel_Invite_Tax_MsgID {
  SL_Channel_Invite_Tax_MsgID_ID = 40075
};
bool SL_Channel_Invite_Tax_MsgID_IsValid(int value);
const SL_Channel_Invite_Tax_MsgID SL_Channel_Invite_Tax_MsgID_MsgID_MIN = SL_Channel_Invite_Tax_MsgID_ID;
const SL_Channel_Invite_Tax_MsgID SL_Channel_Invite_Tax_MsgID_MsgID_MAX = SL_Channel_Invite_Tax_MsgID_ID;
const int SL_Channel_Invite_Tax_MsgID_MsgID_ARRAYSIZE = SL_Channel_Invite_Tax_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SL_Channel_Invite_Tax_MsgID_descriptor();
inline const ::std::string& SL_Channel_Invite_Tax_MsgID_Name(SL_Channel_Invite_Tax_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SL_Channel_Invite_Tax_MsgID_descriptor(), value);
}
inline bool SL_Channel_Invite_Tax_MsgID_Parse(
    const ::std::string& name, SL_Channel_Invite_Tax_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SL_Channel_Invite_Tax_MsgID>(
    SL_Channel_Invite_Tax_MsgID_descriptor(), name, value);
}
enum WL_BroadcastClientUpdate_MsgID {
  WL_BroadcastClientUpdate_MsgID_ID = 40076
};
bool WL_BroadcastClientUpdate_MsgID_IsValid(int value);
const WL_BroadcastClientUpdate_MsgID WL_BroadcastClientUpdate_MsgID_MsgID_MIN = WL_BroadcastClientUpdate_MsgID_ID;
const WL_BroadcastClientUpdate_MsgID WL_BroadcastClientUpdate_MsgID_MsgID_MAX = WL_BroadcastClientUpdate_MsgID_ID;
const int WL_BroadcastClientUpdate_MsgID_MsgID_ARRAYSIZE = WL_BroadcastClientUpdate_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* WL_BroadcastClientUpdate_MsgID_descriptor();
inline const ::std::string& WL_BroadcastClientUpdate_MsgID_Name(WL_BroadcastClientUpdate_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    WL_BroadcastClientUpdate_MsgID_descriptor(), value);
}
inline bool WL_BroadcastClientUpdate_MsgID_Parse(
    const ::std::string& name, WL_BroadcastClientUpdate_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WL_BroadcastClientUpdate_MsgID>(
    WL_BroadcastClientUpdate_MsgID_descriptor(), name, value);
}
enum LW_ClientUpdateResult_MsgID {
  LW_ClientUpdateResult_MsgID_ID = 40077
};
bool LW_ClientUpdateResult_MsgID_IsValid(int value);
const LW_ClientUpdateResult_MsgID LW_ClientUpdateResult_MsgID_MsgID_MIN = LW_ClientUpdateResult_MsgID_ID;
const LW_ClientUpdateResult_MsgID LW_ClientUpdateResult_MsgID_MsgID_MAX = LW_ClientUpdateResult_MsgID_ID;
const int LW_ClientUpdateResult_MsgID_MsgID_ARRAYSIZE = LW_ClientUpdateResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LW_ClientUpdateResult_MsgID_descriptor();
inline const ::std::string& LW_ClientUpdateResult_MsgID_Name(LW_ClientUpdateResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LW_ClientUpdateResult_MsgID_descriptor(), value);
}
inline bool LW_ClientUpdateResult_MsgID_Parse(
    const ::std::string& name, LW_ClientUpdateResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LW_ClientUpdateResult_MsgID>(
    LW_ClientUpdateResult_MsgID_descriptor(), name, value);
}
enum WL_LuaCmdPlayerResult_MsgID {
  WL_LuaCmdPlayerResult_MsgID_ID = 40078
};
bool WL_LuaCmdPlayerResult_MsgID_IsValid(int value);
const WL_LuaCmdPlayerResult_MsgID WL_LuaCmdPlayerResult_MsgID_MsgID_MIN = WL_LuaCmdPlayerResult_MsgID_ID;
const WL_LuaCmdPlayerResult_MsgID WL_LuaCmdPlayerResult_MsgID_MsgID_MAX = WL_LuaCmdPlayerResult_MsgID_ID;
const int WL_LuaCmdPlayerResult_MsgID_MsgID_ARRAYSIZE = WL_LuaCmdPlayerResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* WL_LuaCmdPlayerResult_MsgID_descriptor();
inline const ::std::string& WL_LuaCmdPlayerResult_MsgID_Name(WL_LuaCmdPlayerResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    WL_LuaCmdPlayerResult_MsgID_descriptor(), value);
}
inline bool WL_LuaCmdPlayerResult_MsgID_Parse(
    const ::std::string& name, WL_LuaCmdPlayerResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WL_LuaCmdPlayerResult_MsgID>(
    WL_LuaCmdPlayerResult_MsgID_descriptor(), name, value);
}
enum LW_LuaCmdPlayerResult_MsgID {
  LW_LuaCmdPlayerResult_MsgID_ID = 40079
};
bool LW_LuaCmdPlayerResult_MsgID_IsValid(int value);
const LW_LuaCmdPlayerResult_MsgID LW_LuaCmdPlayerResult_MsgID_MsgID_MIN = LW_LuaCmdPlayerResult_MsgID_ID;
const LW_LuaCmdPlayerResult_MsgID LW_LuaCmdPlayerResult_MsgID_MsgID_MAX = LW_LuaCmdPlayerResult_MsgID_ID;
const int LW_LuaCmdPlayerResult_MsgID_MsgID_ARRAYSIZE = LW_LuaCmdPlayerResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LW_LuaCmdPlayerResult_MsgID_descriptor();
inline const ::std::string& LW_LuaCmdPlayerResult_MsgID_Name(LW_LuaCmdPlayerResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LW_LuaCmdPlayerResult_MsgID_descriptor(), value);
}
inline bool LW_LuaCmdPlayerResult_MsgID_Parse(
    const ::std::string& name, LW_LuaCmdPlayerResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LW_LuaCmdPlayerResult_MsgID>(
    LW_LuaCmdPlayerResult_MsgID_descriptor(), name, value);
}
enum LS_LuaCmdPlayerResult_MsgID {
  LS_LuaCmdPlayerResult_MsgID_ID = 40080
};
bool LS_LuaCmdPlayerResult_MsgID_IsValid(int value);
const LS_LuaCmdPlayerResult_MsgID LS_LuaCmdPlayerResult_MsgID_MsgID_MIN = LS_LuaCmdPlayerResult_MsgID_ID;
const LS_LuaCmdPlayerResult_MsgID LS_LuaCmdPlayerResult_MsgID_MsgID_MAX = LS_LuaCmdPlayerResult_MsgID_ID;
const int LS_LuaCmdPlayerResult_MsgID_MsgID_ARRAYSIZE = LS_LuaCmdPlayerResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_LuaCmdPlayerResult_MsgID_descriptor();
inline const ::std::string& LS_LuaCmdPlayerResult_MsgID_Name(LS_LuaCmdPlayerResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_LuaCmdPlayerResult_MsgID_descriptor(), value);
}
inline bool LS_LuaCmdPlayerResult_MsgID_Parse(
    const ::std::string& name, LS_LuaCmdPlayerResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_LuaCmdPlayerResult_MsgID>(
    LS_LuaCmdPlayerResult_MsgID_descriptor(), name, value);
}
enum SL_LuaCmdPlayerResult_MsgID {
  SL_LuaCmdPlayerResult_MsgID_ID = 40081
};
bool SL_LuaCmdPlayerResult_MsgID_IsValid(int value);
const SL_LuaCmdPlayerResult_MsgID SL_LuaCmdPlayerResult_MsgID_MsgID_MIN = SL_LuaCmdPlayerResult_MsgID_ID;
const SL_LuaCmdPlayerResult_MsgID SL_LuaCmdPlayerResult_MsgID_MsgID_MAX = SL_LuaCmdPlayerResult_MsgID_ID;
const int SL_LuaCmdPlayerResult_MsgID_MsgID_ARRAYSIZE = SL_LuaCmdPlayerResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SL_LuaCmdPlayerResult_MsgID_descriptor();
inline const ::std::string& SL_LuaCmdPlayerResult_MsgID_Name(SL_LuaCmdPlayerResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SL_LuaCmdPlayerResult_MsgID_descriptor(), value);
}
inline bool SL_LuaCmdPlayerResult_MsgID_Parse(
    const ::std::string& name, SL_LuaCmdPlayerResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SL_LuaCmdPlayerResult_MsgID>(
    SL_LuaCmdPlayerResult_MsgID_descriptor(), name, value);
}
enum LD_LuaCmdPlayerResult_MsgID {
  LD_LuaCmdPlayerResult_MsgID_ID = 40082
};
bool LD_LuaCmdPlayerResult_MsgID_IsValid(int value);
const LD_LuaCmdPlayerResult_MsgID LD_LuaCmdPlayerResult_MsgID_MsgID_MIN = LD_LuaCmdPlayerResult_MsgID_ID;
const LD_LuaCmdPlayerResult_MsgID LD_LuaCmdPlayerResult_MsgID_MsgID_MAX = LD_LuaCmdPlayerResult_MsgID_ID;
const int LD_LuaCmdPlayerResult_MsgID_MsgID_ARRAYSIZE = LD_LuaCmdPlayerResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_LuaCmdPlayerResult_MsgID_descriptor();
inline const ::std::string& LD_LuaCmdPlayerResult_MsgID_Name(LD_LuaCmdPlayerResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_LuaCmdPlayerResult_MsgID_descriptor(), value);
}
inline bool LD_LuaCmdPlayerResult_MsgID_Parse(
    const ::std::string& name, LD_LuaCmdPlayerResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_LuaCmdPlayerResult_MsgID>(
    LD_LuaCmdPlayerResult_MsgID_descriptor(), name, value);
}
enum DL_LuaCmdPlayerResult_MsgID {
  DL_LuaCmdPlayerResult_MsgID_ID = 40083
};
bool DL_LuaCmdPlayerResult_MsgID_IsValid(int value);
const DL_LuaCmdPlayerResult_MsgID DL_LuaCmdPlayerResult_MsgID_MsgID_MIN = DL_LuaCmdPlayerResult_MsgID_ID;
const DL_LuaCmdPlayerResult_MsgID DL_LuaCmdPlayerResult_MsgID_MsgID_MAX = DL_LuaCmdPlayerResult_MsgID_ID;
const int DL_LuaCmdPlayerResult_MsgID_MsgID_ARRAYSIZE = DL_LuaCmdPlayerResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DL_LuaCmdPlayerResult_MsgID_descriptor();
inline const ::std::string& DL_LuaCmdPlayerResult_MsgID_Name(DL_LuaCmdPlayerResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DL_LuaCmdPlayerResult_MsgID_descriptor(), value);
}
inline bool DL_LuaCmdPlayerResult_MsgID_Parse(
    const ::std::string& name, DL_LuaCmdPlayerResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DL_LuaCmdPlayerResult_MsgID>(
    DL_LuaCmdPlayerResult_MsgID_descriptor(), name, value);
}
enum LD_AgentsTransfer_finish_MsgID {
  LD_AgentsTransfer_finish_MsgID_ID = 40084
};
bool LD_AgentsTransfer_finish_MsgID_IsValid(int value);
const LD_AgentsTransfer_finish_MsgID LD_AgentsTransfer_finish_MsgID_MsgID_MIN = LD_AgentsTransfer_finish_MsgID_ID;
const LD_AgentsTransfer_finish_MsgID LD_AgentsTransfer_finish_MsgID_MsgID_MAX = LD_AgentsTransfer_finish_MsgID_ID;
const int LD_AgentsTransfer_finish_MsgID_MsgID_ARRAYSIZE = LD_AgentsTransfer_finish_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_AgentsTransfer_finish_MsgID_descriptor();
inline const ::std::string& LD_AgentsTransfer_finish_MsgID_Name(LD_AgentsTransfer_finish_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_AgentsTransfer_finish_MsgID_descriptor(), value);
}
inline bool LD_AgentsTransfer_finish_MsgID_Parse(
    const ::std::string& name, LD_AgentsTransfer_finish_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_AgentsTransfer_finish_MsgID>(
    LD_AgentsTransfer_finish_MsgID_descriptor(), name, value);
}
enum LS_CC_ChangeMoney_MsgID {
  LS_CC_ChangeMoney_MsgID_ID = 40085
};
bool LS_CC_ChangeMoney_MsgID_IsValid(int value);
const LS_CC_ChangeMoney_MsgID LS_CC_ChangeMoney_MsgID_MsgID_MIN = LS_CC_ChangeMoney_MsgID_ID;
const LS_CC_ChangeMoney_MsgID LS_CC_ChangeMoney_MsgID_MsgID_MAX = LS_CC_ChangeMoney_MsgID_ID;
const int LS_CC_ChangeMoney_MsgID_MsgID_ARRAYSIZE = LS_CC_ChangeMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_CC_ChangeMoney_MsgID_descriptor();
inline const ::std::string& LS_CC_ChangeMoney_MsgID_Name(LS_CC_ChangeMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_CC_ChangeMoney_MsgID_descriptor(), value);
}
inline bool LS_CC_ChangeMoney_MsgID_Parse(
    const ::std::string& name, LS_CC_ChangeMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_CC_ChangeMoney_MsgID>(
    LS_CC_ChangeMoney_MsgID_descriptor(), name, value);
}
enum SL_CC_ChangeMoney_MsgID {
  SL_CC_ChangeMoney_MsgID_ID = 40086
};
bool SL_CC_ChangeMoney_MsgID_IsValid(int value);
const SL_CC_ChangeMoney_MsgID SL_CC_ChangeMoney_MsgID_MsgID_MIN = SL_CC_ChangeMoney_MsgID_ID;
const SL_CC_ChangeMoney_MsgID SL_CC_ChangeMoney_MsgID_MsgID_MAX = SL_CC_ChangeMoney_MsgID_ID;
const int SL_CC_ChangeMoney_MsgID_MsgID_ARRAYSIZE = SL_CC_ChangeMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SL_CC_ChangeMoney_MsgID_descriptor();
inline const ::std::string& SL_CC_ChangeMoney_MsgID_Name(SL_CC_ChangeMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SL_CC_ChangeMoney_MsgID_descriptor(), value);
}
inline bool SL_CC_ChangeMoney_MsgID_Parse(
    const ::std::string& name, SL_CC_ChangeMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SL_CC_ChangeMoney_MsgID>(
    SL_CC_ChangeMoney_MsgID_descriptor(), name, value);
}
enum LD_CC_ChangeMoney_MsgID {
  LD_CC_ChangeMoney_MsgID_ID = 40087
};
bool LD_CC_ChangeMoney_MsgID_IsValid(int value);
const LD_CC_ChangeMoney_MsgID LD_CC_ChangeMoney_MsgID_MsgID_MIN = LD_CC_ChangeMoney_MsgID_ID;
const LD_CC_ChangeMoney_MsgID LD_CC_ChangeMoney_MsgID_MsgID_MAX = LD_CC_ChangeMoney_MsgID_ID;
const int LD_CC_ChangeMoney_MsgID_MsgID_ARRAYSIZE = LD_CC_ChangeMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_CC_ChangeMoney_MsgID_descriptor();
inline const ::std::string& LD_CC_ChangeMoney_MsgID_Name(LD_CC_ChangeMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_CC_ChangeMoney_MsgID_descriptor(), value);
}
inline bool LD_CC_ChangeMoney_MsgID_Parse(
    const ::std::string& name, LD_CC_ChangeMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_CC_ChangeMoney_MsgID>(
    LD_CC_ChangeMoney_MsgID_descriptor(), name, value);
}
enum DL_CC_ChangeMoney_MsgID {
  DL_CC_ChangeMoney_MsgID_ID = 40088
};
bool DL_CC_ChangeMoney_MsgID_IsValid(int value);
const DL_CC_ChangeMoney_MsgID DL_CC_ChangeMoney_MsgID_MsgID_MIN = DL_CC_ChangeMoney_MsgID_ID;
const DL_CC_ChangeMoney_MsgID DL_CC_ChangeMoney_MsgID_MsgID_MAX = DL_CC_ChangeMoney_MsgID_ID;
const int DL_CC_ChangeMoney_MsgID_MsgID_ARRAYSIZE = DL_CC_ChangeMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DL_CC_ChangeMoney_MsgID_descriptor();
inline const ::std::string& DL_CC_ChangeMoney_MsgID_Name(DL_CC_ChangeMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DL_CC_ChangeMoney_MsgID_descriptor(), value);
}
inline bool DL_CC_ChangeMoney_MsgID_Parse(
    const ::std::string& name, DL_CC_ChangeMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DL_CC_ChangeMoney_MsgID>(
    DL_CC_ChangeMoney_MsgID_descriptor(), name, value);
}
enum LD_DO_SQL_MsgID {
  LD_DO_SQL_MsgID_ID = 40089
};
bool LD_DO_SQL_MsgID_IsValid(int value);
const LD_DO_SQL_MsgID LD_DO_SQL_MsgID_MsgID_MIN = LD_DO_SQL_MsgID_ID;
const LD_DO_SQL_MsgID LD_DO_SQL_MsgID_MsgID_MAX = LD_DO_SQL_MsgID_ID;
const int LD_DO_SQL_MsgID_MsgID_ARRAYSIZE = LD_DO_SQL_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_DO_SQL_MsgID_descriptor();
inline const ::std::string& LD_DO_SQL_MsgID_Name(LD_DO_SQL_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_DO_SQL_MsgID_descriptor(), value);
}
inline bool LD_DO_SQL_MsgID_Parse(
    const ::std::string& name, LD_DO_SQL_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_DO_SQL_MsgID>(
    LD_DO_SQL_MsgID_descriptor(), name, value);
}
enum DL_DO_SQL_MsgID {
  DL_DO_SQL_MsgID_ID = 40090
};
bool DL_DO_SQL_MsgID_IsValid(int value);
const DL_DO_SQL_MsgID DL_DO_SQL_MsgID_MsgID_MIN = DL_DO_SQL_MsgID_ID;
const DL_DO_SQL_MsgID DL_DO_SQL_MsgID_MsgID_MAX = DL_DO_SQL_MsgID_ID;
const int DL_DO_SQL_MsgID_MsgID_ARRAYSIZE = DL_DO_SQL_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DL_DO_SQL_MsgID_descriptor();
inline const ::std::string& DL_DO_SQL_MsgID_Name(DL_DO_SQL_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DL_DO_SQL_MsgID_descriptor(), value);
}
inline bool DL_DO_SQL_MsgID_Parse(
    const ::std::string& name, DL_DO_SQL_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DL_DO_SQL_MsgID>(
    DL_DO_SQL_MsgID_descriptor(), name, value);
}
enum SL_Log_Robot_Money_MsgID {
  SL_Log_Robot_Money_MsgID_ID = 40091
};
bool SL_Log_Robot_Money_MsgID_IsValid(int value);
const SL_Log_Robot_Money_MsgID SL_Log_Robot_Money_MsgID_MsgID_MIN = SL_Log_Robot_Money_MsgID_ID;
const SL_Log_Robot_Money_MsgID SL_Log_Robot_Money_MsgID_MsgID_MAX = SL_Log_Robot_Money_MsgID_ID;
const int SL_Log_Robot_Money_MsgID_MsgID_ARRAYSIZE = SL_Log_Robot_Money_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SL_Log_Robot_Money_MsgID_descriptor();
inline const ::std::string& SL_Log_Robot_Money_MsgID_Name(SL_Log_Robot_Money_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SL_Log_Robot_Money_MsgID_descriptor(), value);
}
inline bool SL_Log_Robot_Money_MsgID_Parse(
    const ::std::string& name, SL_Log_Robot_Money_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SL_Log_Robot_Money_MsgID>(
    SL_Log_Robot_Money_MsgID_descriptor(), name, value);
}
enum WF_GetCfg_MsgID {
  WF_GetCfg_MsgID_ID = 40093
};
bool WF_GetCfg_MsgID_IsValid(int value);
const WF_GetCfg_MsgID WF_GetCfg_MsgID_MsgID_MIN = WF_GetCfg_MsgID_ID;
const WF_GetCfg_MsgID WF_GetCfg_MsgID_MsgID_MAX = WF_GetCfg_MsgID_ID;
const int WF_GetCfg_MsgID_MsgID_ARRAYSIZE = WF_GetCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* WF_GetCfg_MsgID_descriptor();
inline const ::std::string& WF_GetCfg_MsgID_Name(WF_GetCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    WF_GetCfg_MsgID_descriptor(), value);
}
inline bool WF_GetCfg_MsgID_Parse(
    const ::std::string& name, WF_GetCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WF_GetCfg_MsgID>(
    WF_GetCfg_MsgID_descriptor(), name, value);
}
enum FW_GetCfg_MsgID {
  FW_GetCfg_MsgID_ID = 40094
};
bool FW_GetCfg_MsgID_IsValid(int value);
const FW_GetCfg_MsgID FW_GetCfg_MsgID_MsgID_MIN = FW_GetCfg_MsgID_ID;
const FW_GetCfg_MsgID FW_GetCfg_MsgID_MsgID_MAX = FW_GetCfg_MsgID_ID;
const int FW_GetCfg_MsgID_MsgID_ARRAYSIZE = FW_GetCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FW_GetCfg_MsgID_descriptor();
inline const ::std::string& FW_GetCfg_MsgID_Name(FW_GetCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FW_GetCfg_MsgID_descriptor(), value);
}
inline bool FW_GetCfg_MsgID_Parse(
    const ::std::string& name, FW_GetCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FW_GetCfg_MsgID>(
    FW_GetCfg_MsgID_descriptor(), name, value);
}
enum FG_GameServerCfg_MsgID {
  FG_GameServerCfg_MsgID_ID = 40095
};
bool FG_GameServerCfg_MsgID_IsValid(int value);
const FG_GameServerCfg_MsgID FG_GameServerCfg_MsgID_MsgID_MIN = FG_GameServerCfg_MsgID_ID;
const FG_GameServerCfg_MsgID FG_GameServerCfg_MsgID_MsgID_MAX = FG_GameServerCfg_MsgID_ID;
const int FG_GameServerCfg_MsgID_MsgID_ARRAYSIZE = FG_GameServerCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FG_GameServerCfg_MsgID_descriptor();
inline const ::std::string& FG_GameServerCfg_MsgID_Name(FG_GameServerCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FG_GameServerCfg_MsgID_descriptor(), value);
}
inline bool FG_GameServerCfg_MsgID_Parse(
    const ::std::string& name, FG_GameServerCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FG_GameServerCfg_MsgID>(
    FG_GameServerCfg_MsgID_descriptor(), name, value);
}
enum LD_AlipayEdit_MsgID {
  LD_AlipayEdit_MsgID_ID = 40096
};
bool LD_AlipayEdit_MsgID_IsValid(int value);
const LD_AlipayEdit_MsgID LD_AlipayEdit_MsgID_MsgID_MIN = LD_AlipayEdit_MsgID_ID;
const LD_AlipayEdit_MsgID LD_AlipayEdit_MsgID_MsgID_MAX = LD_AlipayEdit_MsgID_ID;
const int LD_AlipayEdit_MsgID_MsgID_ARRAYSIZE = LD_AlipayEdit_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_AlipayEdit_MsgID_descriptor();
inline const ::std::string& LD_AlipayEdit_MsgID_Name(LD_AlipayEdit_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_AlipayEdit_MsgID_descriptor(), value);
}
inline bool LD_AlipayEdit_MsgID_Parse(
    const ::std::string& name, LD_AlipayEdit_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_AlipayEdit_MsgID>(
    LD_AlipayEdit_MsgID_descriptor(), name, value);
}
enum DL_AlipayEdit_MsgID {
  DL_AlipayEdit_MsgID_ID = 40097
};
bool DL_AlipayEdit_MsgID_IsValid(int value);
const DL_AlipayEdit_MsgID DL_AlipayEdit_MsgID_MsgID_MIN = DL_AlipayEdit_MsgID_ID;
const DL_AlipayEdit_MsgID DL_AlipayEdit_MsgID_MsgID_MAX = DL_AlipayEdit_MsgID_ID;
const int DL_AlipayEdit_MsgID_MsgID_ARRAYSIZE = DL_AlipayEdit_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DL_AlipayEdit_MsgID_descriptor();
inline const ::std::string& DL_AlipayEdit_MsgID_Name(DL_AlipayEdit_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DL_AlipayEdit_MsgID_descriptor(), value);
}
inline bool DL_AlipayEdit_MsgID_Parse(
    const ::std::string& name, DL_AlipayEdit_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DL_AlipayEdit_MsgID>(
    DL_AlipayEdit_MsgID_descriptor(), name, value);
}
enum LS_AlipayEdit_MsgID {
  LS_AlipayEdit_MsgID_ID = 40098
};
bool LS_AlipayEdit_MsgID_IsValid(int value);
const LS_AlipayEdit_MsgID LS_AlipayEdit_MsgID_MsgID_MIN = LS_AlipayEdit_MsgID_ID;
const LS_AlipayEdit_MsgID LS_AlipayEdit_MsgID_MsgID_MAX = LS_AlipayEdit_MsgID_ID;
const int LS_AlipayEdit_MsgID_MsgID_ARRAYSIZE = LS_AlipayEdit_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_AlipayEdit_MsgID_descriptor();
inline const ::std::string& LS_AlipayEdit_MsgID_Name(LS_AlipayEdit_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_AlipayEdit_MsgID_descriptor(), value);
}
inline bool LS_AlipayEdit_MsgID_Parse(
    const ::std::string& name, LS_AlipayEdit_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_AlipayEdit_MsgID>(
    LS_AlipayEdit_MsgID_descriptor(), name, value);
}
enum SL_AddMoney_MsgID {
  SL_AddMoney_MsgID_ID = 40100
};
bool SL_AddMoney_MsgID_IsValid(int value);
const SL_AddMoney_MsgID SL_AddMoney_MsgID_MsgID_MIN = SL_AddMoney_MsgID_ID;
const SL_AddMoney_MsgID SL_AddMoney_MsgID_MsgID_MAX = SL_AddMoney_MsgID_ID;
const int SL_AddMoney_MsgID_MsgID_ARRAYSIZE = SL_AddMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SL_AddMoney_MsgID_descriptor();
inline const ::std::string& SL_AddMoney_MsgID_Name(SL_AddMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SL_AddMoney_MsgID_descriptor(), value);
}
inline bool SL_AddMoney_MsgID_Parse(
    const ::std::string& name, SL_AddMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SL_AddMoney_MsgID>(
    SL_AddMoney_MsgID_descriptor(), name, value);
}
enum DL_AddMoney_MsgID {
  DL_AddMoney_MsgID_ID = 40101
};
bool DL_AddMoney_MsgID_IsValid(int value);
const DL_AddMoney_MsgID DL_AddMoney_MsgID_MsgID_MIN = DL_AddMoney_MsgID_ID;
const DL_AddMoney_MsgID DL_AddMoney_MsgID_MsgID_MAX = DL_AddMoney_MsgID_ID;
const int DL_AddMoney_MsgID_MsgID_ARRAYSIZE = DL_AddMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DL_AddMoney_MsgID_descriptor();
inline const ::std::string& DL_AddMoney_MsgID_Name(DL_AddMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DL_AddMoney_MsgID_descriptor(), value);
}
inline bool DL_AddMoney_MsgID_Parse(
    const ::std::string& name, DL_AddMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DL_AddMoney_MsgID>(
    DL_AddMoney_MsgID_descriptor(), name, value);
}
enum LS_AddMoney_MsgID {
  LS_AddMoney_MsgID_ID = 40102
};
bool LS_AddMoney_MsgID_IsValid(int value);
const LS_AddMoney_MsgID LS_AddMoney_MsgID_MsgID_MIN = LS_AddMoney_MsgID_ID;
const LS_AddMoney_MsgID LS_AddMoney_MsgID_MsgID_MAX = LS_AddMoney_MsgID_ID;
const int LS_AddMoney_MsgID_MsgID_ARRAYSIZE = LS_AddMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_AddMoney_MsgID_descriptor();
inline const ::std::string& LS_AddMoney_MsgID_Name(LS_AddMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_AddMoney_MsgID_descriptor(), value);
}
inline bool LS_AddMoney_MsgID_Parse(
    const ::std::string& name, LS_AddMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_AddMoney_MsgID>(
    LS_AddMoney_MsgID_descriptor(), name, value);
}
enum LD_AddMoney_MsgID {
  LD_AddMoney_MsgID_ID = 40103
};
bool LD_AddMoney_MsgID_IsValid(int value);
const LD_AddMoney_MsgID LD_AddMoney_MsgID_MsgID_MIN = LD_AddMoney_MsgID_ID;
const LD_AddMoney_MsgID LD_AddMoney_MsgID_MsgID_MAX = LD_AddMoney_MsgID_ID;
const int LD_AddMoney_MsgID_MsgID_ARRAYSIZE = LD_AddMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LD_AddMoney_MsgID_descriptor();
inline const ::std::string& LD_AddMoney_MsgID_Name(LD_AddMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LD_AddMoney_MsgID_descriptor(), value);
}
inline bool LD_AddMoney_MsgID_Parse(
    const ::std::string& name, LD_AddMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LD_AddMoney_MsgID>(
    LD_AddMoney_MsgID_descriptor(), name, value);
}
enum LS_FreezeAccount_MsgID {
  LS_FreezeAccount_MsgID_ID = 11084
};
bool LS_FreezeAccount_MsgID_IsValid(int value);
const LS_FreezeAccount_MsgID LS_FreezeAccount_MsgID_MsgID_MIN = LS_FreezeAccount_MsgID_ID;
const LS_FreezeAccount_MsgID LS_FreezeAccount_MsgID_MsgID_MAX = LS_FreezeAccount_MsgID_ID;
const int LS_FreezeAccount_MsgID_MsgID_ARRAYSIZE = LS_FreezeAccount_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_FreezeAccount_MsgID_descriptor();
inline const ::std::string& LS_FreezeAccount_MsgID_Name(LS_FreezeAccount_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_FreezeAccount_MsgID_descriptor(), value);
}
inline bool LS_FreezeAccount_MsgID_Parse(
    const ::std::string& name, LS_FreezeAccount_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_FreezeAccount_MsgID>(
    LS_FreezeAccount_MsgID_descriptor(), name, value);
}
enum SL_FreezeAccount_MsgID {
  SL_FreezeAccount_MsgID_ID = 11085
};
bool SL_FreezeAccount_MsgID_IsValid(int value);
const SL_FreezeAccount_MsgID SL_FreezeAccount_MsgID_MsgID_MIN = SL_FreezeAccount_MsgID_ID;
const SL_FreezeAccount_MsgID SL_FreezeAccount_MsgID_MsgID_MAX = SL_FreezeAccount_MsgID_ID;
const int SL_FreezeAccount_MsgID_MsgID_ARRAYSIZE = SL_FreezeAccount_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SL_FreezeAccount_MsgID_descriptor();
inline const ::std::string& SL_FreezeAccount_MsgID_Name(SL_FreezeAccount_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SL_FreezeAccount_MsgID_descriptor(), value);
}
inline bool SL_FreezeAccount_MsgID_Parse(
    const ::std::string& name, SL_FreezeAccount_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SL_FreezeAccount_MsgID>(
    SL_FreezeAccount_MsgID_descriptor(), name, value);
}
enum WS_MaintainUpdate_MsgID {
  WS_MaintainUpdate_MsgID_ID = 40104
};
bool WS_MaintainUpdate_MsgID_IsValid(int value);
const WS_MaintainUpdate_MsgID WS_MaintainUpdate_MsgID_MsgID_MIN = WS_MaintainUpdate_MsgID_ID;
const WS_MaintainUpdate_MsgID WS_MaintainUpdate_MsgID_MsgID_MAX = WS_MaintainUpdate_MsgID_ID;
const int WS_MaintainUpdate_MsgID_MsgID_ARRAYSIZE = WS_MaintainUpdate_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* WS_MaintainUpdate_MsgID_descriptor();
inline const ::std::string& WS_MaintainUpdate_MsgID_Name(WS_MaintainUpdate_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    WS_MaintainUpdate_MsgID_descriptor(), value);
}
inline bool WS_MaintainUpdate_MsgID_Parse(
    const ::std::string& name, WS_MaintainUpdate_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WS_MaintainUpdate_MsgID>(
    WS_MaintainUpdate_MsgID_descriptor(), name, value);
}
enum SW_MaintainResult_MsgID {
  SW_MaintainResult_MsgID_ID = 40105
};
bool SW_MaintainResult_MsgID_IsValid(int value);
const SW_MaintainResult_MsgID SW_MaintainResult_MsgID_MsgID_MIN = SW_MaintainResult_MsgID_ID;
const SW_MaintainResult_MsgID SW_MaintainResult_MsgID_MsgID_MAX = SW_MaintainResult_MsgID_ID;
const int SW_MaintainResult_MsgID_MsgID_ARRAYSIZE = SW_MaintainResult_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SW_MaintainResult_MsgID_descriptor();
inline const ::std::string& SW_MaintainResult_MsgID_Name(SW_MaintainResult_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SW_MaintainResult_MsgID_descriptor(), value);
}
inline bool SW_MaintainResult_MsgID_Parse(
    const ::std::string& name, SW_MaintainResult_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SW_MaintainResult_MsgID>(
    SW_MaintainResult_MsgID_descriptor(), name, value);
}
enum CS_QueryMaintain_MsgID {
  CS_QueryMaintain_MsgID_ID = 40106
};
bool CS_QueryMaintain_MsgID_IsValid(int value);
const CS_QueryMaintain_MsgID CS_QueryMaintain_MsgID_MsgID_MIN = CS_QueryMaintain_MsgID_ID;
const CS_QueryMaintain_MsgID CS_QueryMaintain_MsgID_MsgID_MAX = CS_QueryMaintain_MsgID_ID;
const int CS_QueryMaintain_MsgID_MsgID_ARRAYSIZE = CS_QueryMaintain_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CS_QueryMaintain_MsgID_descriptor();
inline const ::std::string& CS_QueryMaintain_MsgID_Name(CS_QueryMaintain_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CS_QueryMaintain_MsgID_descriptor(), value);
}
inline bool CS_QueryMaintain_MsgID_Parse(
    const ::std::string& name, CS_QueryMaintain_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CS_QueryMaintain_MsgID>(
    CS_QueryMaintain_MsgID_descriptor(), name, value);
}
enum GF_PlayerIn_MsgID {
  GF_PlayerIn_MsgID_ID = 40110
};
bool GF_PlayerIn_MsgID_IsValid(int value);
const GF_PlayerIn_MsgID GF_PlayerIn_MsgID_MsgID_MIN = GF_PlayerIn_MsgID_ID;
const GF_PlayerIn_MsgID GF_PlayerIn_MsgID_MsgID_MAX = GF_PlayerIn_MsgID_ID;
const int GF_PlayerIn_MsgID_MsgID_ARRAYSIZE = GF_PlayerIn_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* GF_PlayerIn_MsgID_descriptor();
inline const ::std::string& GF_PlayerIn_MsgID_Name(GF_PlayerIn_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    GF_PlayerIn_MsgID_descriptor(), value);
}
inline bool GF_PlayerIn_MsgID_Parse(
    const ::std::string& name, GF_PlayerIn_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GF_PlayerIn_MsgID>(
    GF_PlayerIn_MsgID_descriptor(), name, value);
}
enum GF_PlayerOut_MsgID {
  GF_PlayerOut_MsgID_ID = 40111
};
bool GF_PlayerOut_MsgID_IsValid(int value);
const GF_PlayerOut_MsgID GF_PlayerOut_MsgID_MsgID_MIN = GF_PlayerOut_MsgID_ID;
const GF_PlayerOut_MsgID GF_PlayerOut_MsgID_MsgID_MAX = GF_PlayerOut_MsgID_ID;
const int GF_PlayerOut_MsgID_MsgID_ARRAYSIZE = GF_PlayerOut_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* GF_PlayerOut_MsgID_descriptor();
inline const ::std::string& GF_PlayerOut_MsgID_Name(GF_PlayerOut_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    GF_PlayerOut_MsgID_descriptor(), value);
}
inline bool GF_PlayerOut_MsgID_Parse(
    const ::std::string& name, GF_PlayerOut_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GF_PlayerOut_MsgID>(
    GF_PlayerOut_MsgID_descriptor(), name, value);
}
enum WF_ChangeRobotCfg_MsgID {
  WF_ChangeRobotCfg_MsgID_ID = 40112
};
bool WF_ChangeRobotCfg_MsgID_IsValid(int value);
const WF_ChangeRobotCfg_MsgID WF_ChangeRobotCfg_MsgID_MsgID_MIN = WF_ChangeRobotCfg_MsgID_ID;
const WF_ChangeRobotCfg_MsgID WF_ChangeRobotCfg_MsgID_MsgID_MAX = WF_ChangeRobotCfg_MsgID_ID;
const int WF_ChangeRobotCfg_MsgID_MsgID_ARRAYSIZE = WF_ChangeRobotCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* WF_ChangeRobotCfg_MsgID_descriptor();
inline const ::std::string& WF_ChangeRobotCfg_MsgID_Name(WF_ChangeRobotCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    WF_ChangeRobotCfg_MsgID_descriptor(), value);
}
inline bool WF_ChangeRobotCfg_MsgID_Parse(
    const ::std::string& name, WF_ChangeRobotCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WF_ChangeRobotCfg_MsgID>(
    WF_ChangeRobotCfg_MsgID_descriptor(), name, value);
}
enum FW_ChangeRobotCfg_MsgID {
  FW_ChangeRobotCfg_MsgID_ID = 40113
};
bool FW_ChangeRobotCfg_MsgID_IsValid(int value);
const FW_ChangeRobotCfg_MsgID FW_ChangeRobotCfg_MsgID_MsgID_MIN = FW_ChangeRobotCfg_MsgID_ID;
const FW_ChangeRobotCfg_MsgID FW_ChangeRobotCfg_MsgID_MsgID_MAX = FW_ChangeRobotCfg_MsgID_ID;
const int FW_ChangeRobotCfg_MsgID_MsgID_ARRAYSIZE = FW_ChangeRobotCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FW_ChangeRobotCfg_MsgID_descriptor();
inline const ::std::string& FW_ChangeRobotCfg_MsgID_Name(FW_ChangeRobotCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FW_ChangeRobotCfg_MsgID_descriptor(), value);
}
inline bool FW_ChangeRobotCfg_MsgID_Parse(
    const ::std::string& name, FW_ChangeRobotCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FW_ChangeRobotCfg_MsgID>(
    FW_ChangeRobotCfg_MsgID_descriptor(), name, value);
}
enum FS_ChangeRobotCfg_MsgID {
  FS_ChangeRobotCfg_MsgID_ID = 40114
};
bool FS_ChangeRobotCfg_MsgID_IsValid(int value);
const FS_ChangeRobotCfg_MsgID FS_ChangeRobotCfg_MsgID_MsgID_MIN = FS_ChangeRobotCfg_MsgID_ID;
const FS_ChangeRobotCfg_MsgID FS_ChangeRobotCfg_MsgID_MsgID_MAX = FS_ChangeRobotCfg_MsgID_ID;
const int FS_ChangeRobotCfg_MsgID_MsgID_ARRAYSIZE = FS_ChangeRobotCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FS_ChangeRobotCfg_MsgID_descriptor();
inline const ::std::string& FS_ChangeRobotCfg_MsgID_Name(FS_ChangeRobotCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FS_ChangeRobotCfg_MsgID_descriptor(), value);
}
inline bool FS_ChangeRobotCfg_MsgID_Parse(
    const ::std::string& name, FS_ChangeRobotCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FS_ChangeRobotCfg_MsgID>(
    FS_ChangeRobotCfg_MsgID_descriptor(), name, value);
}
enum SD_QueryRobotCfg_MsgID {
  SD_QueryRobotCfg_MsgID_ID = 40115
};
bool SD_QueryRobotCfg_MsgID_IsValid(int value);
const SD_QueryRobotCfg_MsgID SD_QueryRobotCfg_MsgID_MsgID_MIN = SD_QueryRobotCfg_MsgID_ID;
const SD_QueryRobotCfg_MsgID SD_QueryRobotCfg_MsgID_MsgID_MAX = SD_QueryRobotCfg_MsgID_ID;
const int SD_QueryRobotCfg_MsgID_MsgID_ARRAYSIZE = SD_QueryRobotCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_QueryRobotCfg_MsgID_descriptor();
inline const ::std::string& SD_QueryRobotCfg_MsgID_Name(SD_QueryRobotCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_QueryRobotCfg_MsgID_descriptor(), value);
}
inline bool SD_QueryRobotCfg_MsgID_Parse(
    const ::std::string& name, SD_QueryRobotCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_QueryRobotCfg_MsgID>(
    SD_QueryRobotCfg_MsgID_descriptor(), name, value);
}
enum DS_QueryRobotCfg_MsgID {
  DS_QueryRobotCfg_MsgID_ID = 40116
};
bool DS_QueryRobotCfg_MsgID_IsValid(int value);
const DS_QueryRobotCfg_MsgID DS_QueryRobotCfg_MsgID_MsgID_MIN = DS_QueryRobotCfg_MsgID_ID;
const DS_QueryRobotCfg_MsgID DS_QueryRobotCfg_MsgID_MsgID_MAX = DS_QueryRobotCfg_MsgID_ID;
const int DS_QueryRobotCfg_MsgID_MsgID_ARRAYSIZE = DS_QueryRobotCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_QueryRobotCfg_MsgID_descriptor();
inline const ::std::string& DS_QueryRobotCfg_MsgID_Name(DS_QueryRobotCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_QueryRobotCfg_MsgID_descriptor(), value);
}
inline bool DS_QueryRobotCfg_MsgID_Parse(
    const ::std::string& name, DS_QueryRobotCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_QueryRobotCfg_MsgID>(
    DS_QueryRobotCfg_MsgID_descriptor(), name, value);
}
enum SD_Save_Storage_MsgID {
  SD_Save_Storage_MsgID_ID = 40117
};
bool SD_Save_Storage_MsgID_IsValid(int value);
const SD_Save_Storage_MsgID SD_Save_Storage_MsgID_MsgID_MIN = SD_Save_Storage_MsgID_ID;
const SD_Save_Storage_MsgID SD_Save_Storage_MsgID_MsgID_MAX = SD_Save_Storage_MsgID_ID;
const int SD_Save_Storage_MsgID_MsgID_ARRAYSIZE = SD_Save_Storage_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_Save_Storage_MsgID_descriptor();
inline const ::std::string& SD_Save_Storage_MsgID_Name(SD_Save_Storage_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_Save_Storage_MsgID_descriptor(), value);
}
inline bool SD_Save_Storage_MsgID_Parse(
    const ::std::string& name, SD_Save_Storage_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_Save_Storage_MsgID>(
    SD_Save_Storage_MsgID_descriptor(), name, value);
}
enum SD_Agent_CashMoney_MsgID {
  SD_Agent_CashMoney_MsgID_ID = 40118
};
bool SD_Agent_CashMoney_MsgID_IsValid(int value);
const SD_Agent_CashMoney_MsgID SD_Agent_CashMoney_MsgID_MsgID_MIN = SD_Agent_CashMoney_MsgID_ID;
const SD_Agent_CashMoney_MsgID SD_Agent_CashMoney_MsgID_MsgID_MAX = SD_Agent_CashMoney_MsgID_ID;
const int SD_Agent_CashMoney_MsgID_MsgID_ARRAYSIZE = SD_Agent_CashMoney_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_Agent_CashMoney_MsgID_descriptor();
inline const ::std::string& SD_Agent_CashMoney_MsgID_Name(SD_Agent_CashMoney_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_Agent_CashMoney_MsgID_descriptor(), value);
}
inline bool SD_Agent_CashMoney_MsgID_Parse(
    const ::std::string& name, SD_Agent_CashMoney_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_Agent_CashMoney_MsgID>(
    SD_Agent_CashMoney_MsgID_descriptor(), name, value);
}
enum SD_UpdateGameTotalTax_MsgID {
  SD_UpdateGameTotalTax_MsgID_ID = 40119
};
bool SD_UpdateGameTotalTax_MsgID_IsValid(int value);
const SD_UpdateGameTotalTax_MsgID SD_UpdateGameTotalTax_MsgID_MsgID_MIN = SD_UpdateGameTotalTax_MsgID_ID;
const SD_UpdateGameTotalTax_MsgID SD_UpdateGameTotalTax_MsgID_MsgID_MAX = SD_UpdateGameTotalTax_MsgID_ID;
const int SD_UpdateGameTotalTax_MsgID_MsgID_ARRAYSIZE = SD_UpdateGameTotalTax_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_UpdateGameTotalTax_MsgID_descriptor();
inline const ::std::string& SD_UpdateGameTotalTax_MsgID_Name(SD_UpdateGameTotalTax_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_UpdateGameTotalTax_MsgID_descriptor(), value);
}
inline bool SD_UpdateGameTotalTax_MsgID_Parse(
    const ::std::string& name, SD_UpdateGameTotalTax_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_UpdateGameTotalTax_MsgID>(
    SD_UpdateGameTotalTax_MsgID_descriptor(), name, value);
}
enum WF_Cash_false_MsgID {
  WF_Cash_false_MsgID_ID = 40120
};
bool WF_Cash_false_MsgID_IsValid(int value);
const WF_Cash_false_MsgID WF_Cash_false_MsgID_MsgID_MIN = WF_Cash_false_MsgID_ID;
const WF_Cash_false_MsgID WF_Cash_false_MsgID_MsgID_MAX = WF_Cash_false_MsgID_ID;
const int WF_Cash_false_MsgID_MsgID_ARRAYSIZE = WF_Cash_false_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* WF_Cash_false_MsgID_descriptor();
inline const ::std::string& WF_Cash_false_MsgID_Name(WF_Cash_false_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    WF_Cash_false_MsgID_descriptor(), value);
}
inline bool WF_Cash_false_MsgID_Parse(
    const ::std::string& name, WF_Cash_false_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WF_Cash_false_MsgID>(
    WF_Cash_false_MsgID_descriptor(), name, value);
}
enum FS_Black_List_MsgID {
  FS_Black_List_MsgID_ID = 40121
};
bool FS_Black_List_MsgID_IsValid(int value);
const FS_Black_List_MsgID FS_Black_List_MsgID_MsgID_MIN = FS_Black_List_MsgID_ID;
const FS_Black_List_MsgID FS_Black_List_MsgID_MsgID_MAX = FS_Black_List_MsgID_ID;
const int FS_Black_List_MsgID_MsgID_ARRAYSIZE = FS_Black_List_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FS_Black_List_MsgID_descriptor();
inline const ::std::string& FS_Black_List_MsgID_Name(FS_Black_List_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FS_Black_List_MsgID_descriptor(), value);
}
inline bool FS_Black_List_MsgID_Parse(
    const ::std::string& name, FS_Black_List_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FS_Black_List_MsgID>(
    FS_Black_List_MsgID_descriptor(), name, value);
}
enum SD_BindBankCard_MsgID {
  SD_BindBankCard_MsgID_ID = 40122
};
bool SD_BindBankCard_MsgID_IsValid(int value);
const SD_BindBankCard_MsgID SD_BindBankCard_MsgID_MsgID_MIN = SD_BindBankCard_MsgID_ID;
const SD_BindBankCard_MsgID SD_BindBankCard_MsgID_MsgID_MAX = SD_BindBankCard_MsgID_ID;
const int SD_BindBankCard_MsgID_MsgID_ARRAYSIZE = SD_BindBankCard_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_BindBankCard_MsgID_descriptor();
inline const ::std::string& SD_BindBankCard_MsgID_Name(SD_BindBankCard_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_BindBankCard_MsgID_descriptor(), value);
}
inline bool SD_BindBankCard_MsgID_Parse(
    const ::std::string& name, SD_BindBankCard_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_BindBankCard_MsgID>(
    SD_BindBankCard_MsgID_descriptor(), name, value);
}
enum DS_BindBankCard_MsgID {
  DS_BindBankCard_MsgID_ID = 40123
};
bool DS_BindBankCard_MsgID_IsValid(int value);
const DS_BindBankCard_MsgID DS_BindBankCard_MsgID_MsgID_MIN = DS_BindBankCard_MsgID_ID;
const DS_BindBankCard_MsgID DS_BindBankCard_MsgID_MsgID_MAX = DS_BindBankCard_MsgID_ID;
const int DS_BindBankCard_MsgID_MsgID_ARRAYSIZE = DS_BindBankCard_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_BindBankCard_MsgID_descriptor();
inline const ::std::string& DS_BindBankCard_MsgID_Name(DS_BindBankCard_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_BindBankCard_MsgID_descriptor(), value);
}
inline bool DS_BindBankCard_MsgID_Parse(
    const ::std::string& name, DS_BindBankCard_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_BindBankCard_MsgID>(
    DS_BindBankCard_MsgID_descriptor(), name, value);
}
enum SD_GetBankCardInfo_MsgID {
  SD_GetBankCardInfo_MsgID_ID = 40124
};
bool SD_GetBankCardInfo_MsgID_IsValid(int value);
const SD_GetBankCardInfo_MsgID SD_GetBankCardInfo_MsgID_MsgID_MIN = SD_GetBankCardInfo_MsgID_ID;
const SD_GetBankCardInfo_MsgID SD_GetBankCardInfo_MsgID_MsgID_MAX = SD_GetBankCardInfo_MsgID_ID;
const int SD_GetBankCardInfo_MsgID_MsgID_ARRAYSIZE = SD_GetBankCardInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_GetBankCardInfo_MsgID_descriptor();
inline const ::std::string& SD_GetBankCardInfo_MsgID_Name(SD_GetBankCardInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_GetBankCardInfo_MsgID_descriptor(), value);
}
inline bool SD_GetBankCardInfo_MsgID_Parse(
    const ::std::string& name, SD_GetBankCardInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_GetBankCardInfo_MsgID>(
    SD_GetBankCardInfo_MsgID_descriptor(), name, value);
}
enum DS_GetBankCardInfo_MsgID {
  DS_GetBankCardInfo_MsgID_ID = 40125
};
bool DS_GetBankCardInfo_MsgID_IsValid(int value);
const DS_GetBankCardInfo_MsgID DS_GetBankCardInfo_MsgID_MsgID_MIN = DS_GetBankCardInfo_MsgID_ID;
const DS_GetBankCardInfo_MsgID DS_GetBankCardInfo_MsgID_MsgID_MAX = DS_GetBankCardInfo_MsgID_ID;
const int DS_GetBankCardInfo_MsgID_MsgID_ARRAYSIZE = DS_GetBankCardInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_GetBankCardInfo_MsgID_descriptor();
inline const ::std::string& DS_GetBankCardInfo_MsgID_Name(DS_GetBankCardInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_GetBankCardInfo_MsgID_descriptor(), value);
}
inline bool DS_GetBankCardInfo_MsgID_Parse(
    const ::std::string& name, DS_GetBankCardInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_GetBankCardInfo_MsgID>(
    DS_GetBankCardInfo_MsgID_descriptor(), name, value);
}
enum FG_ClientChannelInfo_MsgID {
  FG_ClientChannelInfo_MsgID_ID = 40126
};
bool FG_ClientChannelInfo_MsgID_IsValid(int value);
const FG_ClientChannelInfo_MsgID FG_ClientChannelInfo_MsgID_MsgID_MIN = FG_ClientChannelInfo_MsgID_ID;
const FG_ClientChannelInfo_MsgID FG_ClientChannelInfo_MsgID_MsgID_MAX = FG_ClientChannelInfo_MsgID_ID;
const int FG_ClientChannelInfo_MsgID_MsgID_ARRAYSIZE = FG_ClientChannelInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FG_ClientChannelInfo_MsgID_descriptor();
inline const ::std::string& FG_ClientChannelInfo_MsgID_Name(FG_ClientChannelInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FG_ClientChannelInfo_MsgID_descriptor(), value);
}
inline bool FG_ClientChannelInfo_MsgID_Parse(
    const ::std::string& name, FG_ClientChannelInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FG_ClientChannelInfo_MsgID>(
    FG_ClientChannelInfo_MsgID_descriptor(), name, value);
}
enum WL_LuaGameCmd_MsgID {
  WL_LuaGameCmd_MsgID_ID = 40127
};
bool WL_LuaGameCmd_MsgID_IsValid(int value);
const WL_LuaGameCmd_MsgID WL_LuaGameCmd_MsgID_MsgID_MIN = WL_LuaGameCmd_MsgID_ID;
const WL_LuaGameCmd_MsgID WL_LuaGameCmd_MsgID_MsgID_MAX = WL_LuaGameCmd_MsgID_ID;
const int WL_LuaGameCmd_MsgID_MsgID_ARRAYSIZE = WL_LuaGameCmd_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* WL_LuaGameCmd_MsgID_descriptor();
inline const ::std::string& WL_LuaGameCmd_MsgID_Name(WL_LuaGameCmd_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    WL_LuaGameCmd_MsgID_descriptor(), value);
}
inline bool WL_LuaGameCmd_MsgID_Parse(
    const ::std::string& name, WL_LuaGameCmd_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WL_LuaGameCmd_MsgID>(
    WL_LuaGameCmd_MsgID_descriptor(), name, value);
}
enum LW_LuaGameCmd_MsgID {
  LW_LuaGameCmd_MsgID_ID = 40128
};
bool LW_LuaGameCmd_MsgID_IsValid(int value);
const LW_LuaGameCmd_MsgID LW_LuaGameCmd_MsgID_MsgID_MIN = LW_LuaGameCmd_MsgID_ID;
const LW_LuaGameCmd_MsgID LW_LuaGameCmd_MsgID_MsgID_MAX = LW_LuaGameCmd_MsgID_ID;
const int LW_LuaGameCmd_MsgID_MsgID_ARRAYSIZE = LW_LuaGameCmd_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LW_LuaGameCmd_MsgID_descriptor();
inline const ::std::string& LW_LuaGameCmd_MsgID_Name(LW_LuaGameCmd_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LW_LuaGameCmd_MsgID_descriptor(), value);
}
inline bool LW_LuaGameCmd_MsgID_Parse(
    const ::std::string& name, LW_LuaGameCmd_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LW_LuaGameCmd_MsgID>(
    LW_LuaGameCmd_MsgID_descriptor(), name, value);
}
enum LS_LuaGameCmd_MsgID {
  LS_LuaGameCmd_MsgID_ID = 40129
};
bool LS_LuaGameCmd_MsgID_IsValid(int value);
const LS_LuaGameCmd_MsgID LS_LuaGameCmd_MsgID_MsgID_MIN = LS_LuaGameCmd_MsgID_ID;
const LS_LuaGameCmd_MsgID LS_LuaGameCmd_MsgID_MsgID_MAX = LS_LuaGameCmd_MsgID_ID;
const int LS_LuaGameCmd_MsgID_MsgID_ARRAYSIZE = LS_LuaGameCmd_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LS_LuaGameCmd_MsgID_descriptor();
inline const ::std::string& LS_LuaGameCmd_MsgID_Name(LS_LuaGameCmd_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LS_LuaGameCmd_MsgID_descriptor(), value);
}
inline bool LS_LuaGameCmd_MsgID_Parse(
    const ::std::string& name, LS_LuaGameCmd_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LS_LuaGameCmd_MsgID>(
    LS_LuaGameCmd_MsgID_descriptor(), name, value);
}
enum SL_LuaGameCmd_MsgID {
  SL_LuaGameCmd_MsgID_ID = 40130
};
bool SL_LuaGameCmd_MsgID_IsValid(int value);
const SL_LuaGameCmd_MsgID SL_LuaGameCmd_MsgID_MsgID_MIN = SL_LuaGameCmd_MsgID_ID;
const SL_LuaGameCmd_MsgID SL_LuaGameCmd_MsgID_MsgID_MAX = SL_LuaGameCmd_MsgID_ID;
const int SL_LuaGameCmd_MsgID_MsgID_ARRAYSIZE = SL_LuaGameCmd_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SL_LuaGameCmd_MsgID_descriptor();
inline const ::std::string& SL_LuaGameCmd_MsgID_Name(SL_LuaGameCmd_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SL_LuaGameCmd_MsgID_descriptor(), value);
}
inline bool SL_LuaGameCmd_MsgID_Parse(
    const ::std::string& name, SL_LuaGameCmd_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SL_LuaGameCmd_MsgID>(
    SL_LuaGameCmd_MsgID_descriptor(), name, value);
}
enum SD_QueryBrnnChiCfg_MsgID {
  SD_QueryBrnnChiCfg_MsgID_ID = 40131
};
bool SD_QueryBrnnChiCfg_MsgID_IsValid(int value);
const SD_QueryBrnnChiCfg_MsgID SD_QueryBrnnChiCfg_MsgID_MsgID_MIN = SD_QueryBrnnChiCfg_MsgID_ID;
const SD_QueryBrnnChiCfg_MsgID SD_QueryBrnnChiCfg_MsgID_MsgID_MAX = SD_QueryBrnnChiCfg_MsgID_ID;
const int SD_QueryBrnnChiCfg_MsgID_MsgID_ARRAYSIZE = SD_QueryBrnnChiCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_QueryBrnnChiCfg_MsgID_descriptor();
inline const ::std::string& SD_QueryBrnnChiCfg_MsgID_Name(SD_QueryBrnnChiCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_QueryBrnnChiCfg_MsgID_descriptor(), value);
}
inline bool SD_QueryBrnnChiCfg_MsgID_Parse(
    const ::std::string& name, SD_QueryBrnnChiCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_QueryBrnnChiCfg_MsgID>(
    SD_QueryBrnnChiCfg_MsgID_descriptor(), name, value);
}
enum DS_QueryBrnnChiCfg_MsgID {
  DS_QueryBrnnChiCfg_MsgID_ID = 40132
};
bool DS_QueryBrnnChiCfg_MsgID_IsValid(int value);
const DS_QueryBrnnChiCfg_MsgID DS_QueryBrnnChiCfg_MsgID_MsgID_MIN = DS_QueryBrnnChiCfg_MsgID_ID;
const DS_QueryBrnnChiCfg_MsgID DS_QueryBrnnChiCfg_MsgID_MsgID_MAX = DS_QueryBrnnChiCfg_MsgID_ID;
const int DS_QueryBrnnChiCfg_MsgID_MsgID_ARRAYSIZE = DS_QueryBrnnChiCfg_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_QueryBrnnChiCfg_MsgID_descriptor();
inline const ::std::string& DS_QueryBrnnChiCfg_MsgID_Name(DS_QueryBrnnChiCfg_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_QueryBrnnChiCfg_MsgID_descriptor(), value);
}
inline bool DS_QueryBrnnChiCfg_MsgID_Parse(
    const ::std::string& name, DS_QueryBrnnChiCfg_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_QueryBrnnChiCfg_MsgID>(
    DS_QueryBrnnChiCfg_MsgID_descriptor(), name, value);
}
enum SD_QueryPlayerPromotion_MsgID {
  SD_QueryPlayerPromotion_MsgID_ID = 40133
};
bool SD_QueryPlayerPromotion_MsgID_IsValid(int value);
const SD_QueryPlayerPromotion_MsgID SD_QueryPlayerPromotion_MsgID_MsgID_MIN = SD_QueryPlayerPromotion_MsgID_ID;
const SD_QueryPlayerPromotion_MsgID SD_QueryPlayerPromotion_MsgID_MsgID_MAX = SD_QueryPlayerPromotion_MsgID_ID;
const int SD_QueryPlayerPromotion_MsgID_MsgID_ARRAYSIZE = SD_QueryPlayerPromotion_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_QueryPlayerPromotion_MsgID_descriptor();
inline const ::std::string& SD_QueryPlayerPromotion_MsgID_Name(SD_QueryPlayerPromotion_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_QueryPlayerPromotion_MsgID_descriptor(), value);
}
inline bool SD_QueryPlayerPromotion_MsgID_Parse(
    const ::std::string& name, SD_QueryPlayerPromotion_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_QueryPlayerPromotion_MsgID>(
    SD_QueryPlayerPromotion_MsgID_descriptor(), name, value);
}
enum DS_QueryPlayerPromotion_MsgID {
  DS_QueryPlayerPromotion_MsgID_ID = 40134
};
bool DS_QueryPlayerPromotion_MsgID_IsValid(int value);
const DS_QueryPlayerPromotion_MsgID DS_QueryPlayerPromotion_MsgID_MsgID_MIN = DS_QueryPlayerPromotion_MsgID_ID;
const DS_QueryPlayerPromotion_MsgID DS_QueryPlayerPromotion_MsgID_MsgID_MAX = DS_QueryPlayerPromotion_MsgID_ID;
const int DS_QueryPlayerPromotion_MsgID_MsgID_ARRAYSIZE = DS_QueryPlayerPromotion_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_QueryPlayerPromotion_MsgID_descriptor();
inline const ::std::string& DS_QueryPlayerPromotion_MsgID_Name(DS_QueryPlayerPromotion_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_QueryPlayerPromotion_MsgID_descriptor(), value);
}
inline bool DS_QueryPlayerPromotion_MsgID_Parse(
    const ::std::string& name, DS_QueryPlayerPromotion_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_QueryPlayerPromotion_MsgID>(
    DS_QueryPlayerPromotion_MsgID_descriptor(), name, value);
}
enum SD_NotifyPhpServer_MsgID {
  SD_NotifyPhpServer_MsgID_ID = 40135
};
bool SD_NotifyPhpServer_MsgID_IsValid(int value);
const SD_NotifyPhpServer_MsgID SD_NotifyPhpServer_MsgID_MsgID_MIN = SD_NotifyPhpServer_MsgID_ID;
const SD_NotifyPhpServer_MsgID SD_NotifyPhpServer_MsgID_MsgID_MAX = SD_NotifyPhpServer_MsgID_ID;
const int SD_NotifyPhpServer_MsgID_MsgID_ARRAYSIZE = SD_NotifyPhpServer_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_NotifyPhpServer_MsgID_descriptor();
inline const ::std::string& SD_NotifyPhpServer_MsgID_Name(SD_NotifyPhpServer_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_NotifyPhpServer_MsgID_descriptor(), value);
}
inline bool SD_NotifyPhpServer_MsgID_Parse(
    const ::std::string& name, SD_NotifyPhpServer_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_NotifyPhpServer_MsgID>(
    SD_NotifyPhpServer_MsgID_descriptor(), name, value);
}
enum SD_QueryPlayerRecharge_MsgID {
  SD_QueryPlayerRecharge_MsgID_ID = 40136
};
bool SD_QueryPlayerRecharge_MsgID_IsValid(int value);
const SD_QueryPlayerRecharge_MsgID SD_QueryPlayerRecharge_MsgID_MsgID_MIN = SD_QueryPlayerRecharge_MsgID_ID;
const SD_QueryPlayerRecharge_MsgID SD_QueryPlayerRecharge_MsgID_MsgID_MAX = SD_QueryPlayerRecharge_MsgID_ID;
const int SD_QueryPlayerRecharge_MsgID_MsgID_ARRAYSIZE = SD_QueryPlayerRecharge_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SD_QueryPlayerRecharge_MsgID_descriptor();
inline const ::std::string& SD_QueryPlayerRecharge_MsgID_Name(SD_QueryPlayerRecharge_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SD_QueryPlayerRecharge_MsgID_descriptor(), value);
}
inline bool SD_QueryPlayerRecharge_MsgID_Parse(
    const ::std::string& name, SD_QueryPlayerRecharge_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SD_QueryPlayerRecharge_MsgID>(
    SD_QueryPlayerRecharge_MsgID_descriptor(), name, value);
}
enum DS_QueryPlayerRecharge_MsgID {
  DS_QueryPlayerRecharge_MsgID_ID = 40137
};
bool DS_QueryPlayerRecharge_MsgID_IsValid(int value);
const DS_QueryPlayerRecharge_MsgID DS_QueryPlayerRecharge_MsgID_MsgID_MIN = DS_QueryPlayerRecharge_MsgID_ID;
const DS_QueryPlayerRecharge_MsgID DS_QueryPlayerRecharge_MsgID_MsgID_MAX = DS_QueryPlayerRecharge_MsgID_ID;
const int DS_QueryPlayerRecharge_MsgID_MsgID_ARRAYSIZE = DS_QueryPlayerRecharge_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DS_QueryPlayerRecharge_MsgID_descriptor();
inline const ::std::string& DS_QueryPlayerRecharge_MsgID_Name(DS_QueryPlayerRecharge_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DS_QueryPlayerRecharge_MsgID_descriptor(), value);
}
inline bool DS_QueryPlayerRecharge_MsgID_Parse(
    const ::std::string& name, DS_QueryPlayerRecharge_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DS_QueryPlayerRecharge_MsgID>(
    DS_QueryPlayerRecharge_MsgID_descriptor(), name, value);
}
enum GF_SavePlayerInfo_MsgID {
  GF_SavePlayerInfo_MsgID_ID = 40138
};
bool GF_SavePlayerInfo_MsgID_IsValid(int value);
const GF_SavePlayerInfo_MsgID GF_SavePlayerInfo_MsgID_MsgID_MIN = GF_SavePlayerInfo_MsgID_ID;
const GF_SavePlayerInfo_MsgID GF_SavePlayerInfo_MsgID_MsgID_MAX = GF_SavePlayerInfo_MsgID_ID;
const int GF_SavePlayerInfo_MsgID_MsgID_ARRAYSIZE = GF_SavePlayerInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* GF_SavePlayerInfo_MsgID_descriptor();
inline const ::std::string& GF_SavePlayerInfo_MsgID_Name(GF_SavePlayerInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    GF_SavePlayerInfo_MsgID_descriptor(), value);
}
inline bool GF_SavePlayerInfo_MsgID_Parse(
    const ::std::string& name, GF_SavePlayerInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GF_SavePlayerInfo_MsgID>(
    GF_SavePlayerInfo_MsgID_descriptor(), name, value);
}
enum GF_GetPlayerInfo_MsgID {
  GF_GetPlayerInfo_MsgID_ID = 40139
};
bool GF_GetPlayerInfo_MsgID_IsValid(int value);
const GF_GetPlayerInfo_MsgID GF_GetPlayerInfo_MsgID_MsgID_MIN = GF_GetPlayerInfo_MsgID_ID;
const GF_GetPlayerInfo_MsgID GF_GetPlayerInfo_MsgID_MsgID_MAX = GF_GetPlayerInfo_MsgID_ID;
const int GF_GetPlayerInfo_MsgID_MsgID_ARRAYSIZE = GF_GetPlayerInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* GF_GetPlayerInfo_MsgID_descriptor();
inline const ::std::string& GF_GetPlayerInfo_MsgID_Name(GF_GetPlayerInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    GF_GetPlayerInfo_MsgID_descriptor(), value);
}
inline bool GF_GetPlayerInfo_MsgID_Parse(
    const ::std::string& name, GF_GetPlayerInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GF_GetPlayerInfo_MsgID>(
    GF_GetPlayerInfo_MsgID_descriptor(), name, value);
}
enum FG_GetPlayerInfo_MsgID {
  FG_GetPlayerInfo_MsgID_ID = 40140
};
bool FG_GetPlayerInfo_MsgID_IsValid(int value);
const FG_GetPlayerInfo_MsgID FG_GetPlayerInfo_MsgID_MsgID_MIN = FG_GetPlayerInfo_MsgID_ID;
const FG_GetPlayerInfo_MsgID FG_GetPlayerInfo_MsgID_MsgID_MAX = FG_GetPlayerInfo_MsgID_ID;
const int FG_GetPlayerInfo_MsgID_MsgID_ARRAYSIZE = FG_GetPlayerInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FG_GetPlayerInfo_MsgID_descriptor();
inline const ::std::string& FG_GetPlayerInfo_MsgID_Name(FG_GetPlayerInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FG_GetPlayerInfo_MsgID_descriptor(), value);
}
inline bool FG_GetPlayerInfo_MsgID_Parse(
    const ::std::string& name, FG_GetPlayerInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FG_GetPlayerInfo_MsgID>(
    FG_GetPlayerInfo_MsgID_descriptor(), name, value);
}
enum DF_SavePlayerInfo_MsgID {
  DF_SavePlayerInfo_MsgID_ID = 40141
};
bool DF_SavePlayerInfo_MsgID_IsValid(int value);
const DF_SavePlayerInfo_MsgID DF_SavePlayerInfo_MsgID_MsgID_MIN = DF_SavePlayerInfo_MsgID_ID;
const DF_SavePlayerInfo_MsgID DF_SavePlayerInfo_MsgID_MsgID_MAX = DF_SavePlayerInfo_MsgID_ID;
const int DF_SavePlayerInfo_MsgID_MsgID_ARRAYSIZE = DF_SavePlayerInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DF_SavePlayerInfo_MsgID_descriptor();
inline const ::std::string& DF_SavePlayerInfo_MsgID_Name(DF_SavePlayerInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DF_SavePlayerInfo_MsgID_descriptor(), value);
}
inline bool DF_SavePlayerInfo_MsgID_Parse(
    const ::std::string& name, DF_SavePlayerInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DF_SavePlayerInfo_MsgID>(
    DF_SavePlayerInfo_MsgID_descriptor(), name, value);
}
enum DF_GetPlayerInfo_MsgID {
  DF_GetPlayerInfo_MsgID_ID = 40142
};
bool DF_GetPlayerInfo_MsgID_IsValid(int value);
const DF_GetPlayerInfo_MsgID DF_GetPlayerInfo_MsgID_MsgID_MIN = DF_GetPlayerInfo_MsgID_ID;
const DF_GetPlayerInfo_MsgID DF_GetPlayerInfo_MsgID_MsgID_MAX = DF_GetPlayerInfo_MsgID_ID;
const int DF_GetPlayerInfo_MsgID_MsgID_ARRAYSIZE = DF_GetPlayerInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* DF_GetPlayerInfo_MsgID_descriptor();
inline const ::std::string& DF_GetPlayerInfo_MsgID_Name(DF_GetPlayerInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    DF_GetPlayerInfo_MsgID_descriptor(), value);
}
inline bool DF_GetPlayerInfo_MsgID_Parse(
    const ::std::string& name, DF_GetPlayerInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DF_GetPlayerInfo_MsgID>(
    DF_GetPlayerInfo_MsgID_descriptor(), name, value);
}
enum FD_GetPlayerInfo_MsgID {
  FD_GetPlayerInfo_MsgID_ID = 40143
};
bool FD_GetPlayerInfo_MsgID_IsValid(int value);
const FD_GetPlayerInfo_MsgID FD_GetPlayerInfo_MsgID_MsgID_MIN = FD_GetPlayerInfo_MsgID_ID;
const FD_GetPlayerInfo_MsgID FD_GetPlayerInfo_MsgID_MsgID_MAX = FD_GetPlayerInfo_MsgID_ID;
const int FD_GetPlayerInfo_MsgID_MsgID_ARRAYSIZE = FD_GetPlayerInfo_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FD_GetPlayerInfo_MsgID_descriptor();
inline const ::std::string& FD_GetPlayerInfo_MsgID_Name(FD_GetPlayerInfo_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FD_GetPlayerInfo_MsgID_descriptor(), value);
}
inline bool FD_GetPlayerInfo_MsgID_Parse(
    const ::std::string& name, FD_GetPlayerInfo_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FD_GetPlayerInfo_MsgID>(
    FD_GetPlayerInfo_MsgID_descriptor(), name, value);
}
enum WF_SavePlayersInfoToMySQL_MsgID {
  WF_SavePlayersInfoToMySQL_MsgID_ID = 40144
};
bool WF_SavePlayersInfoToMySQL_MsgID_IsValid(int value);
const WF_SavePlayersInfoToMySQL_MsgID WF_SavePlayersInfoToMySQL_MsgID_MsgID_MIN = WF_SavePlayersInfoToMySQL_MsgID_ID;
const WF_SavePlayersInfoToMySQL_MsgID WF_SavePlayersInfoToMySQL_MsgID_MsgID_MAX = WF_SavePlayersInfoToMySQL_MsgID_ID;
const int WF_SavePlayersInfoToMySQL_MsgID_MsgID_ARRAYSIZE = WF_SavePlayersInfoToMySQL_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* WF_SavePlayersInfoToMySQL_MsgID_descriptor();
inline const ::std::string& WF_SavePlayersInfoToMySQL_MsgID_Name(WF_SavePlayersInfoToMySQL_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    WF_SavePlayersInfoToMySQL_MsgID_descriptor(), value);
}
inline bool WF_SavePlayersInfoToMySQL_MsgID_Parse(
    const ::std::string& name, WF_SavePlayersInfoToMySQL_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WF_SavePlayersInfoToMySQL_MsgID>(
    WF_SavePlayersInfoToMySQL_MsgID_descriptor(), name, value);
}
enum FW_SavePlayersInfoToMySQL_MsgID {
  FW_SavePlayersInfoToMySQL_MsgID_ID = 40145
};
bool FW_SavePlayersInfoToMySQL_MsgID_IsValid(int value);
const FW_SavePlayersInfoToMySQL_MsgID FW_SavePlayersInfoToMySQL_MsgID_MsgID_MIN = FW_SavePlayersInfoToMySQL_MsgID_ID;
const FW_SavePlayersInfoToMySQL_MsgID FW_SavePlayersInfoToMySQL_MsgID_MsgID_MAX = FW_SavePlayersInfoToMySQL_MsgID_ID;
const int FW_SavePlayersInfoToMySQL_MsgID_MsgID_ARRAYSIZE = FW_SavePlayersInfoToMySQL_MsgID_MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FW_SavePlayersInfoToMySQL_MsgID_descriptor();
inline const ::std::string& FW_SavePlayersInfoToMySQL_MsgID_Name(FW_SavePlayersInfoToMySQL_MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FW_SavePlayersInfoToMySQL_MsgID_descriptor(), value);
}
inline bool FW_SavePlayersInfoToMySQL_MsgID_Parse(
    const ::std::string& name, FW_SavePlayersInfoToMySQL_MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FW_SavePlayersInfoToMySQL_MsgID>(
    FW_SavePlayersInfoToMySQL_MsgID_descriptor(), name, value);
}
enum ServerSessionFrom {
  ServerSessionFromGate = 1,
  ServerSessionFromLogin = 2,
  ServerSessionFromDB = 3,
  ServerSessionFromGame = 4,
  ServerSessionFromWeb = 5
};
bool ServerSessionFrom_IsValid(int value);
const ServerSessionFrom ServerSessionFrom_MIN = ServerSessionFromGate;
const ServerSessionFrom ServerSessionFrom_MAX = ServerSessionFromWeb;
const int ServerSessionFrom_ARRAYSIZE = ServerSessionFrom_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerSessionFrom_descriptor();
inline const ::std::string& ServerSessionFrom_Name(ServerSessionFrom value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerSessionFrom_descriptor(), value);
}
inline bool ServerSessionFrom_Parse(
    const ::std::string& name, ServerSessionFrom* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerSessionFrom>(
    ServerSessionFrom_descriptor(), name, value);
}
enum Msg_type {
  notice = 1,
  notice_private = 2
};
bool Msg_type_IsValid(int value);
const Msg_type Msg_type_MIN = notice;
const Msg_type Msg_type_MAX = notice_private;
const int Msg_type_ARRAYSIZE = Msg_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Msg_type_descriptor();
inline const ::std::string& Msg_type_Name(Msg_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Msg_type_descriptor(), value);
}
inline bool Msg_type_Parse(
    const ::std::string& name, Msg_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Msg_type>(
    Msg_type_descriptor(), name, value);
}
// ===================================================================

class S_Connect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_Connect) */ {
 public:
  S_Connect();
  virtual ~S_Connect();

  S_Connect(const S_Connect& from);

  inline S_Connect& operator=(const S_Connect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_Connect& default_instance();

  static inline const S_Connect* internal_default_instance() {
    return reinterpret_cast<const S_Connect*>(
               &_S_Connect_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(S_Connect* other);

  // implements Message ----------------------------------------------

  inline S_Connect* New() const PROTOBUF_FINAL { return New(NULL); }

  S_Connect* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_Connect& from);
  void MergeFrom(const S_Connect& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_Connect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_Connect_MsgID MsgID;
  static const MsgID ID =
    S_Connect_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_Connect_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_Connect_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_Connect_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_Connect_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_Connect_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_Connect_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_Connect_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 server_id = 2;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // optional int32 first_game_type = 3;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 3;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional int32 second_game_type = 4;
  bool has_second_game_type() const;
  void clear_second_game_type();
  static const int kSecondGameTypeFieldNumber = 4;
  ::google::protobuf::int32 second_game_type() const;
  void set_second_game_type(::google::protobuf::int32 value);

  // optional bool default_lobby = 5;
  bool has_default_lobby() const;
  void clear_default_lobby();
  static const int kDefaultLobbyFieldNumber = 5;
  bool default_lobby() const;
  void set_default_lobby(bool value);

  // optional int32 player_limit = 6;
  bool has_player_limit() const;
  void clear_player_limit();
  static const int kPlayerLimitFieldNumber = 6;
  ::google::protobuf::int32 player_limit() const;
  void set_player_limit(::google::protobuf::int32 value);

  // optional .ServerSessionFrom type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::ServerSessionFrom type() const;
  void set_type(::ServerSessionFrom value);

  // @@protoc_insertion_point(class_scope:S_Connect)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_server_id();
  void clear_has_server_id();
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_second_game_type();
  void clear_has_second_game_type();
  void set_has_default_lobby();
  void clear_has_default_lobby();
  void set_has_player_limit();
  void clear_has_player_limit();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 first_game_type_;
  ::google::protobuf::int32 second_game_type_;
  bool default_lobby_;
  ::google::protobuf::int32 player_limit_;
  int type_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_UpdateGamePlayerCount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_UpdateGamePlayerCount) */ {
 public:
  S_UpdateGamePlayerCount();
  virtual ~S_UpdateGamePlayerCount();

  S_UpdateGamePlayerCount(const S_UpdateGamePlayerCount& from);

  inline S_UpdateGamePlayerCount& operator=(const S_UpdateGamePlayerCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_UpdateGamePlayerCount& default_instance();

  static inline const S_UpdateGamePlayerCount* internal_default_instance() {
    return reinterpret_cast<const S_UpdateGamePlayerCount*>(
               &_S_UpdateGamePlayerCount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(S_UpdateGamePlayerCount* other);

  // implements Message ----------------------------------------------

  inline S_UpdateGamePlayerCount* New() const PROTOBUF_FINAL { return New(NULL); }

  S_UpdateGamePlayerCount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_UpdateGamePlayerCount& from);
  void MergeFrom(const S_UpdateGamePlayerCount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_UpdateGamePlayerCount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_UpdateGamePlayerCount_MsgID MsgID;
  static const MsgID ID =
    S_UpdateGamePlayerCount_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_UpdateGamePlayerCount_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_UpdateGamePlayerCount_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_UpdateGamePlayerCount_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_UpdateGamePlayerCount_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_UpdateGamePlayerCount_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_UpdateGamePlayerCount_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_UpdateGamePlayerCount_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 cur_player_count = 1;
  bool has_cur_player_count() const;
  void clear_cur_player_count();
  static const int kCurPlayerCountFieldNumber = 1;
  ::google::protobuf::int32 cur_player_count() const;
  void set_cur_player_count(::google::protobuf::int32 value);

  // optional int32 cur_android_count = 2;
  bool has_cur_android_count() const;
  void clear_cur_android_count();
  static const int kCurAndroidCountFieldNumber = 2;
  ::google::protobuf::int32 cur_android_count() const;
  void set_cur_android_count(::google::protobuf::int32 value);

  // optional int32 cur_ios_count = 3;
  bool has_cur_ios_count() const;
  void clear_cur_ios_count();
  static const int kCurIosCountFieldNumber = 3;
  ::google::protobuf::int32 cur_ios_count() const;
  void set_cur_ios_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_UpdateGamePlayerCount)
 private:
  void set_has_cur_player_count();
  void clear_has_cur_player_count();
  void set_has_cur_android_count();
  void clear_has_cur_android_count();
  void set_has_cur_ios_count();
  void clear_has_cur_ios_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 cur_player_count_;
  ::google::protobuf::int32 cur_android_count_;
  ::google::protobuf::int32 cur_ios_count_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_ConnectDB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_ConnectDB) */ {
 public:
  S_ConnectDB();
  virtual ~S_ConnectDB();

  S_ConnectDB(const S_ConnectDB& from);

  inline S_ConnectDB& operator=(const S_ConnectDB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ConnectDB& default_instance();

  static inline const S_ConnectDB* internal_default_instance() {
    return reinterpret_cast<const S_ConnectDB*>(
               &_S_ConnectDB_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(S_ConnectDB* other);

  // implements Message ----------------------------------------------

  inline S_ConnectDB* New() const PROTOBUF_FINAL { return New(NULL); }

  S_ConnectDB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_ConnectDB& from);
  void MergeFrom(const S_ConnectDB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_ConnectDB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_ConnectDB_MsgID MsgID;
  static const MsgID ID =
    S_ConnectDB_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_ConnectDB_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_ConnectDB_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_ConnectDB_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_ConnectDB_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_ConnectDB_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_ConnectDB_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_ConnectDB_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:S_ConnectDB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_RequestServerConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_RequestServerConfig) */ {
 public:
  S_RequestServerConfig();
  virtual ~S_RequestServerConfig();

  S_RequestServerConfig(const S_RequestServerConfig& from);

  inline S_RequestServerConfig& operator=(const S_RequestServerConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_RequestServerConfig& default_instance();

  static inline const S_RequestServerConfig* internal_default_instance() {
    return reinterpret_cast<const S_RequestServerConfig*>(
               &_S_RequestServerConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(S_RequestServerConfig* other);

  // implements Message ----------------------------------------------

  inline S_RequestServerConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  S_RequestServerConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_RequestServerConfig& from);
  void MergeFrom(const S_RequestServerConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_RequestServerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_RequestServerConfig_MsgID MsgID;
  static const MsgID ID =
    S_RequestServerConfig_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_RequestServerConfig_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_RequestServerConfig_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_RequestServerConfig_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_RequestServerConfig_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_RequestServerConfig_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_RequestServerConfig_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_RequestServerConfig_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 server_id = 2;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // optional .ServerSessionFrom type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::ServerSessionFrom type() const;
  void set_type(::ServerSessionFrom value);

  // @@protoc_insertion_point(class_scope:S_RequestServerConfig)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_server_id();
  void clear_has_server_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 server_id_;
  int type_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_ReplyServerConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_ReplyServerConfig) */ {
 public:
  S_ReplyServerConfig();
  virtual ~S_ReplyServerConfig();

  S_ReplyServerConfig(const S_ReplyServerConfig& from);

  inline S_ReplyServerConfig& operator=(const S_ReplyServerConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ReplyServerConfig& default_instance();

  static inline const S_ReplyServerConfig* internal_default_instance() {
    return reinterpret_cast<const S_ReplyServerConfig*>(
               &_S_ReplyServerConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(S_ReplyServerConfig* other);

  // implements Message ----------------------------------------------

  inline S_ReplyServerConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  S_ReplyServerConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_ReplyServerConfig& from);
  void MergeFrom(const S_ReplyServerConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_ReplyServerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_ReplyServerConfig_MsgID MsgID;
  static const MsgID ID =
    S_ReplyServerConfig_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_ReplyServerConfig_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_ReplyServerConfig_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_ReplyServerConfig_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_ReplyServerConfig_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_ReplyServerConfig_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_ReplyServerConfig_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_ReplyServerConfig_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .GameClientRoomListCfg client_room_cfg = 7;
  int client_room_cfg_size() const;
  void clear_client_room_cfg();
  static const int kClientRoomCfgFieldNumber = 7;
  const ::GameClientRoomListCfg& client_room_cfg(int index) const;
  ::GameClientRoomListCfg* mutable_client_room_cfg(int index);
  ::GameClientRoomListCfg* add_client_room_cfg();
  ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg >*
      mutable_client_room_cfg();
  const ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg >&
      client_room_cfg() const;

  // optional .DBServerConfig db_config = 3;
  bool has_db_config() const;
  void clear_db_config();
  static const int kDbConfigFieldNumber = 3;
  const ::DBServerConfig& db_config() const;
  ::DBServerConfig* mutable_db_config();
  ::DBServerConfig* release_db_config();
  void set_allocated_db_config(::DBServerConfig* db_config);

  // optional .LoginServerConfigInfo login_config = 4;
  bool has_login_config() const;
  void clear_login_config();
  static const int kLoginConfigFieldNumber = 4;
  const ::LoginServerConfigInfo& login_config() const;
  ::LoginServerConfigInfo* mutable_login_config();
  ::LoginServerConfigInfo* release_login_config();
  void set_allocated_login_config(::LoginServerConfigInfo* login_config);

  // optional .GameServerConfigInfo game_config = 5;
  bool has_game_config() const;
  void clear_game_config();
  static const int kGameConfigFieldNumber = 5;
  const ::GameServerConfigInfo& game_config() const;
  ::GameServerConfigInfo* mutable_game_config();
  ::GameServerConfigInfo* release_game_config();
  void set_allocated_game_config(::GameServerConfigInfo* game_config);

  // optional .GateServerConfigInfo gate_config = 6;
  bool has_gate_config() const;
  void clear_gate_config();
  static const int kGateConfigFieldNumber = 6;
  const ::GateServerConfigInfo& gate_config() const;
  ::GateServerConfigInfo* mutable_gate_config();
  ::GateServerConfigInfo* release_gate_config();
  void set_allocated_gate_config(::GateServerConfigInfo* gate_config);

  // optional int32 server_id = 2;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // optional .ServerSessionFrom type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::ServerSessionFrom type() const;
  void set_type(::ServerSessionFrom value);

  // @@protoc_insertion_point(class_scope:S_ReplyServerConfig)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_server_id();
  void clear_has_server_id();
  void set_has_db_config();
  void clear_has_db_config();
  void set_has_login_config();
  void clear_has_login_config();
  void set_has_game_config();
  void clear_has_game_config();
  void set_has_gate_config();
  void clear_has_gate_config();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg > client_room_cfg_;
  ::DBServerConfig* db_config_;
  ::LoginServerConfigInfo* login_config_;
  ::GameServerConfigInfo* game_config_;
  ::GateServerConfigInfo* gate_config_;
  ::google::protobuf::int32 server_id_;
  int type_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_NotifyGameServerStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_NotifyGameServerStart) */ {
 public:
  S_NotifyGameServerStart();
  virtual ~S_NotifyGameServerStart();

  S_NotifyGameServerStart(const S_NotifyGameServerStart& from);

  inline S_NotifyGameServerStart& operator=(const S_NotifyGameServerStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_NotifyGameServerStart& default_instance();

  static inline const S_NotifyGameServerStart* internal_default_instance() {
    return reinterpret_cast<const S_NotifyGameServerStart*>(
               &_S_NotifyGameServerStart_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(S_NotifyGameServerStart* other);

  // implements Message ----------------------------------------------

  inline S_NotifyGameServerStart* New() const PROTOBUF_FINAL { return New(NULL); }

  S_NotifyGameServerStart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_NotifyGameServerStart& from);
  void MergeFrom(const S_NotifyGameServerStart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_NotifyGameServerStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_NotifyGameServerStart_MsgID MsgID;
  static const MsgID ID =
    S_NotifyGameServerStart_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_NotifyGameServerStart_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_NotifyGameServerStart_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_NotifyGameServerStart_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_NotifyGameServerStart_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_NotifyGameServerStart_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_NotifyGameServerStart_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_NotifyGameServerStart_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 game_id = 1;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_NotifyGameServerStart)
 private:
  void set_has_game_id();
  void clear_has_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 game_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_RequestUpdateGameServerConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_RequestUpdateGameServerConfig) */ {
 public:
  S_RequestUpdateGameServerConfig();
  virtual ~S_RequestUpdateGameServerConfig();

  S_RequestUpdateGameServerConfig(const S_RequestUpdateGameServerConfig& from);

  inline S_RequestUpdateGameServerConfig& operator=(const S_RequestUpdateGameServerConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_RequestUpdateGameServerConfig& default_instance();

  static inline const S_RequestUpdateGameServerConfig* internal_default_instance() {
    return reinterpret_cast<const S_RequestUpdateGameServerConfig*>(
               &_S_RequestUpdateGameServerConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(S_RequestUpdateGameServerConfig* other);

  // implements Message ----------------------------------------------

  inline S_RequestUpdateGameServerConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  S_RequestUpdateGameServerConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_RequestUpdateGameServerConfig& from);
  void MergeFrom(const S_RequestUpdateGameServerConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_RequestUpdateGameServerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_RequestUpdateGameServerConfig_MsgID MsgID;
  static const MsgID ID =
    S_RequestUpdateGameServerConfig_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_RequestUpdateGameServerConfig_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_RequestUpdateGameServerConfig_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_RequestUpdateGameServerConfig_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_RequestUpdateGameServerConfig_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_RequestUpdateGameServerConfig_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_RequestUpdateGameServerConfig_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_RequestUpdateGameServerConfig_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 game_id = 1;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_RequestUpdateGameServerConfig)
 private:
  void set_has_game_id();
  void clear_has_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 game_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_ReplyUpdateGameServerConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_ReplyUpdateGameServerConfig) */ {
 public:
  S_ReplyUpdateGameServerConfig();
  virtual ~S_ReplyUpdateGameServerConfig();

  S_ReplyUpdateGameServerConfig(const S_ReplyUpdateGameServerConfig& from);

  inline S_ReplyUpdateGameServerConfig& operator=(const S_ReplyUpdateGameServerConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ReplyUpdateGameServerConfig& default_instance();

  static inline const S_ReplyUpdateGameServerConfig* internal_default_instance() {
    return reinterpret_cast<const S_ReplyUpdateGameServerConfig*>(
               &_S_ReplyUpdateGameServerConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(S_ReplyUpdateGameServerConfig* other);

  // implements Message ----------------------------------------------

  inline S_ReplyUpdateGameServerConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  S_ReplyUpdateGameServerConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_ReplyUpdateGameServerConfig& from);
  void MergeFrom(const S_ReplyUpdateGameServerConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_ReplyUpdateGameServerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_ReplyUpdateGameServerConfig_MsgID MsgID;
  static const MsgID ID =
    S_ReplyUpdateGameServerConfig_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_ReplyUpdateGameServerConfig_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_ReplyUpdateGameServerConfig_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_ReplyUpdateGameServerConfig_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_ReplyUpdateGameServerConfig_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_ReplyUpdateGameServerConfig_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_ReplyUpdateGameServerConfig_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_ReplyUpdateGameServerConfig_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .GameClientRoomListCfg client_room_cfg = 5;
  int client_room_cfg_size() const;
  void clear_client_room_cfg();
  static const int kClientRoomCfgFieldNumber = 5;
  const ::GameClientRoomListCfg& client_room_cfg(int index) const;
  ::GameClientRoomListCfg* mutable_client_room_cfg(int index);
  ::GameClientRoomListCfg* add_client_room_cfg();
  ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg >*
      mutable_client_room_cfg();
  const ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg >&
      client_room_cfg() const;

  // optional string ip = 3;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional int32 server_id = 1;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // optional int32 game_id = 2;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // optional int32 port = 4;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_ReplyUpdateGameServerConfig)
 private:
  void set_has_server_id();
  void clear_has_server_id();
  void set_has_game_id();
  void clear_has_game_id();
  void set_has_ip();
  void clear_has_ip();
  void set_has_port();
  void clear_has_port();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg > client_room_cfg_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 game_id_;
  ::google::protobuf::int32 port_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_NotifyLoginServerStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_NotifyLoginServerStart) */ {
 public:
  S_NotifyLoginServerStart();
  virtual ~S_NotifyLoginServerStart();

  S_NotifyLoginServerStart(const S_NotifyLoginServerStart& from);

  inline S_NotifyLoginServerStart& operator=(const S_NotifyLoginServerStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_NotifyLoginServerStart& default_instance();

  static inline const S_NotifyLoginServerStart* internal_default_instance() {
    return reinterpret_cast<const S_NotifyLoginServerStart*>(
               &_S_NotifyLoginServerStart_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(S_NotifyLoginServerStart* other);

  // implements Message ----------------------------------------------

  inline S_NotifyLoginServerStart* New() const PROTOBUF_FINAL { return New(NULL); }

  S_NotifyLoginServerStart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_NotifyLoginServerStart& from);
  void MergeFrom(const S_NotifyLoginServerStart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_NotifyLoginServerStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_NotifyLoginServerStart_MsgID MsgID;
  static const MsgID ID =
    S_NotifyLoginServerStart_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_NotifyLoginServerStart_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_NotifyLoginServerStart_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_NotifyLoginServerStart_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_NotifyLoginServerStart_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_NotifyLoginServerStart_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_NotifyLoginServerStart_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_NotifyLoginServerStart_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 login_id = 1;
  bool has_login_id() const;
  void clear_login_id();
  static const int kLoginIdFieldNumber = 1;
  ::google::protobuf::int32 login_id() const;
  void set_login_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_NotifyLoginServerStart)
 private:
  void set_has_login_id();
  void clear_has_login_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 login_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_RequestUpdateLoginServerConfigByGate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_RequestUpdateLoginServerConfigByGate) */ {
 public:
  S_RequestUpdateLoginServerConfigByGate();
  virtual ~S_RequestUpdateLoginServerConfigByGate();

  S_RequestUpdateLoginServerConfigByGate(const S_RequestUpdateLoginServerConfigByGate& from);

  inline S_RequestUpdateLoginServerConfigByGate& operator=(const S_RequestUpdateLoginServerConfigByGate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_RequestUpdateLoginServerConfigByGate& default_instance();

  static inline const S_RequestUpdateLoginServerConfigByGate* internal_default_instance() {
    return reinterpret_cast<const S_RequestUpdateLoginServerConfigByGate*>(
               &_S_RequestUpdateLoginServerConfigByGate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(S_RequestUpdateLoginServerConfigByGate* other);

  // implements Message ----------------------------------------------

  inline S_RequestUpdateLoginServerConfigByGate* New() const PROTOBUF_FINAL { return New(NULL); }

  S_RequestUpdateLoginServerConfigByGate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_RequestUpdateLoginServerConfigByGate& from);
  void MergeFrom(const S_RequestUpdateLoginServerConfigByGate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_RequestUpdateLoginServerConfigByGate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_RequestUpdateLoginServerConfigByGate_MsgID MsgID;
  static const MsgID ID =
    S_RequestUpdateLoginServerConfigByGate_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_RequestUpdateLoginServerConfigByGate_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_RequestUpdateLoginServerConfigByGate_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_RequestUpdateLoginServerConfigByGate_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_RequestUpdateLoginServerConfigByGate_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_RequestUpdateLoginServerConfigByGate_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_RequestUpdateLoginServerConfigByGate_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_RequestUpdateLoginServerConfigByGate_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 login_id = 1;
  bool has_login_id() const;
  void clear_login_id();
  static const int kLoginIdFieldNumber = 1;
  ::google::protobuf::int32 login_id() const;
  void set_login_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_RequestUpdateLoginServerConfigByGate)
 private:
  void set_has_login_id();
  void clear_has_login_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 login_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_ReplyUpdateLoginServerConfigByGate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_ReplyUpdateLoginServerConfigByGate) */ {
 public:
  S_ReplyUpdateLoginServerConfigByGate();
  virtual ~S_ReplyUpdateLoginServerConfigByGate();

  S_ReplyUpdateLoginServerConfigByGate(const S_ReplyUpdateLoginServerConfigByGate& from);

  inline S_ReplyUpdateLoginServerConfigByGate& operator=(const S_ReplyUpdateLoginServerConfigByGate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ReplyUpdateLoginServerConfigByGate& default_instance();

  static inline const S_ReplyUpdateLoginServerConfigByGate* internal_default_instance() {
    return reinterpret_cast<const S_ReplyUpdateLoginServerConfigByGate*>(
               &_S_ReplyUpdateLoginServerConfigByGate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(S_ReplyUpdateLoginServerConfigByGate* other);

  // implements Message ----------------------------------------------

  inline S_ReplyUpdateLoginServerConfigByGate* New() const PROTOBUF_FINAL { return New(NULL); }

  S_ReplyUpdateLoginServerConfigByGate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_ReplyUpdateLoginServerConfigByGate& from);
  void MergeFrom(const S_ReplyUpdateLoginServerConfigByGate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_ReplyUpdateLoginServerConfigByGate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_ReplyUpdateLoginServerConfigByGate_MsgID MsgID;
  static const MsgID ID =
    S_ReplyUpdateLoginServerConfigByGate_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_ReplyUpdateLoginServerConfigByGate_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_ReplyUpdateLoginServerConfigByGate_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_ReplyUpdateLoginServerConfigByGate_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_ReplyUpdateLoginServerConfigByGate_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_ReplyUpdateLoginServerConfigByGate_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_ReplyUpdateLoginServerConfigByGate_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_ReplyUpdateLoginServerConfigByGate_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string ip = 3;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional int32 server_id = 1;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // optional int32 login_id = 2;
  bool has_login_id() const;
  void clear_login_id();
  static const int kLoginIdFieldNumber = 2;
  ::google::protobuf::int32 login_id() const;
  void set_login_id(::google::protobuf::int32 value);

  // optional int32 port = 4;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_ReplyUpdateLoginServerConfigByGate)
 private:
  void set_has_server_id();
  void clear_has_server_id();
  void set_has_login_id();
  void clear_has_login_id();
  void set_has_ip();
  void clear_has_ip();
  void set_has_port();
  void clear_has_port();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 login_id_;
  ::google::protobuf::int32 port_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_RequestUpdateLoginServerConfigByGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_RequestUpdateLoginServerConfigByGame) */ {
 public:
  S_RequestUpdateLoginServerConfigByGame();
  virtual ~S_RequestUpdateLoginServerConfigByGame();

  S_RequestUpdateLoginServerConfigByGame(const S_RequestUpdateLoginServerConfigByGame& from);

  inline S_RequestUpdateLoginServerConfigByGame& operator=(const S_RequestUpdateLoginServerConfigByGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_RequestUpdateLoginServerConfigByGame& default_instance();

  static inline const S_RequestUpdateLoginServerConfigByGame* internal_default_instance() {
    return reinterpret_cast<const S_RequestUpdateLoginServerConfigByGame*>(
               &_S_RequestUpdateLoginServerConfigByGame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(S_RequestUpdateLoginServerConfigByGame* other);

  // implements Message ----------------------------------------------

  inline S_RequestUpdateLoginServerConfigByGame* New() const PROTOBUF_FINAL { return New(NULL); }

  S_RequestUpdateLoginServerConfigByGame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_RequestUpdateLoginServerConfigByGame& from);
  void MergeFrom(const S_RequestUpdateLoginServerConfigByGame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_RequestUpdateLoginServerConfigByGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_RequestUpdateLoginServerConfigByGame_MsgID MsgID;
  static const MsgID ID =
    S_RequestUpdateLoginServerConfigByGame_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_RequestUpdateLoginServerConfigByGame_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_RequestUpdateLoginServerConfigByGame_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_RequestUpdateLoginServerConfigByGame_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_RequestUpdateLoginServerConfigByGame_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_RequestUpdateLoginServerConfigByGame_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_RequestUpdateLoginServerConfigByGame_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_RequestUpdateLoginServerConfigByGame_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 login_id = 1;
  bool has_login_id() const;
  void clear_login_id();
  static const int kLoginIdFieldNumber = 1;
  ::google::protobuf::int32 login_id() const;
  void set_login_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_RequestUpdateLoginServerConfigByGame)
 private:
  void set_has_login_id();
  void clear_has_login_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 login_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_ReplyUpdateLoginServerConfigByGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_ReplyUpdateLoginServerConfigByGame) */ {
 public:
  S_ReplyUpdateLoginServerConfigByGame();
  virtual ~S_ReplyUpdateLoginServerConfigByGame();

  S_ReplyUpdateLoginServerConfigByGame(const S_ReplyUpdateLoginServerConfigByGame& from);

  inline S_ReplyUpdateLoginServerConfigByGame& operator=(const S_ReplyUpdateLoginServerConfigByGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ReplyUpdateLoginServerConfigByGame& default_instance();

  static inline const S_ReplyUpdateLoginServerConfigByGame* internal_default_instance() {
    return reinterpret_cast<const S_ReplyUpdateLoginServerConfigByGame*>(
               &_S_ReplyUpdateLoginServerConfigByGame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(S_ReplyUpdateLoginServerConfigByGame* other);

  // implements Message ----------------------------------------------

  inline S_ReplyUpdateLoginServerConfigByGame* New() const PROTOBUF_FINAL { return New(NULL); }

  S_ReplyUpdateLoginServerConfigByGame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_ReplyUpdateLoginServerConfigByGame& from);
  void MergeFrom(const S_ReplyUpdateLoginServerConfigByGame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_ReplyUpdateLoginServerConfigByGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_ReplyUpdateLoginServerConfigByGame_MsgID MsgID;
  static const MsgID ID =
    S_ReplyUpdateLoginServerConfigByGame_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_ReplyUpdateLoginServerConfigByGame_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_ReplyUpdateLoginServerConfigByGame_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_ReplyUpdateLoginServerConfigByGame_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_ReplyUpdateLoginServerConfigByGame_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_ReplyUpdateLoginServerConfigByGame_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_ReplyUpdateLoginServerConfigByGame_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_ReplyUpdateLoginServerConfigByGame_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string ip = 3;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional int32 server_id = 1;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // optional int32 login_id = 2;
  bool has_login_id() const;
  void clear_login_id();
  static const int kLoginIdFieldNumber = 2;
  ::google::protobuf::int32 login_id() const;
  void set_login_id(::google::protobuf::int32 value);

  // optional int32 port = 4;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_ReplyUpdateLoginServerConfigByGame)
 private:
  void set_has_server_id();
  void clear_has_server_id();
  void set_has_login_id();
  void clear_has_login_id();
  void set_has_ip();
  void clear_has_ip();
  void set_has_port();
  void clear_has_port();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 login_id_;
  ::google::protobuf::int32 port_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_NotifyDBServerStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_NotifyDBServerStart) */ {
 public:
  S_NotifyDBServerStart();
  virtual ~S_NotifyDBServerStart();

  S_NotifyDBServerStart(const S_NotifyDBServerStart& from);

  inline S_NotifyDBServerStart& operator=(const S_NotifyDBServerStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_NotifyDBServerStart& default_instance();

  static inline const S_NotifyDBServerStart* internal_default_instance() {
    return reinterpret_cast<const S_NotifyDBServerStart*>(
               &_S_NotifyDBServerStart_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(S_NotifyDBServerStart* other);

  // implements Message ----------------------------------------------

  inline S_NotifyDBServerStart* New() const PROTOBUF_FINAL { return New(NULL); }

  S_NotifyDBServerStart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_NotifyDBServerStart& from);
  void MergeFrom(const S_NotifyDBServerStart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_NotifyDBServerStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_NotifyDBServerStart_MsgID MsgID;
  static const MsgID ID =
    S_NotifyDBServerStart_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_NotifyDBServerStart_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_NotifyDBServerStart_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_NotifyDBServerStart_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_NotifyDBServerStart_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_NotifyDBServerStart_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_NotifyDBServerStart_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_NotifyDBServerStart_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 db_id = 1;
  bool has_db_id() const;
  void clear_db_id();
  static const int kDbIdFieldNumber = 1;
  ::google::protobuf::int32 db_id() const;
  void set_db_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_NotifyDBServerStart)
 private:
  void set_has_db_id();
  void clear_has_db_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 db_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_RequestUpdateDBServerConfigByGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_RequestUpdateDBServerConfigByGame) */ {
 public:
  S_RequestUpdateDBServerConfigByGame();
  virtual ~S_RequestUpdateDBServerConfigByGame();

  S_RequestUpdateDBServerConfigByGame(const S_RequestUpdateDBServerConfigByGame& from);

  inline S_RequestUpdateDBServerConfigByGame& operator=(const S_RequestUpdateDBServerConfigByGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_RequestUpdateDBServerConfigByGame& default_instance();

  static inline const S_RequestUpdateDBServerConfigByGame* internal_default_instance() {
    return reinterpret_cast<const S_RequestUpdateDBServerConfigByGame*>(
               &_S_RequestUpdateDBServerConfigByGame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(S_RequestUpdateDBServerConfigByGame* other);

  // implements Message ----------------------------------------------

  inline S_RequestUpdateDBServerConfigByGame* New() const PROTOBUF_FINAL { return New(NULL); }

  S_RequestUpdateDBServerConfigByGame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_RequestUpdateDBServerConfigByGame& from);
  void MergeFrom(const S_RequestUpdateDBServerConfigByGame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_RequestUpdateDBServerConfigByGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_RequestUpdateDBServerConfigByGame_MsgID MsgID;
  static const MsgID ID =
    S_RequestUpdateDBServerConfigByGame_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_RequestUpdateDBServerConfigByGame_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_RequestUpdateDBServerConfigByGame_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_RequestUpdateDBServerConfigByGame_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_RequestUpdateDBServerConfigByGame_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_RequestUpdateDBServerConfigByGame_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_RequestUpdateDBServerConfigByGame_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_RequestUpdateDBServerConfigByGame_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 db_id = 1;
  bool has_db_id() const;
  void clear_db_id();
  static const int kDbIdFieldNumber = 1;
  ::google::protobuf::int32 db_id() const;
  void set_db_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_RequestUpdateDBServerConfigByGame)
 private:
  void set_has_db_id();
  void clear_has_db_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 db_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_ReplyUpdateDBServerConfigByGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_ReplyUpdateDBServerConfigByGame) */ {
 public:
  S_ReplyUpdateDBServerConfigByGame();
  virtual ~S_ReplyUpdateDBServerConfigByGame();

  S_ReplyUpdateDBServerConfigByGame(const S_ReplyUpdateDBServerConfigByGame& from);

  inline S_ReplyUpdateDBServerConfigByGame& operator=(const S_ReplyUpdateDBServerConfigByGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ReplyUpdateDBServerConfigByGame& default_instance();

  static inline const S_ReplyUpdateDBServerConfigByGame* internal_default_instance() {
    return reinterpret_cast<const S_ReplyUpdateDBServerConfigByGame*>(
               &_S_ReplyUpdateDBServerConfigByGame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(S_ReplyUpdateDBServerConfigByGame* other);

  // implements Message ----------------------------------------------

  inline S_ReplyUpdateDBServerConfigByGame* New() const PROTOBUF_FINAL { return New(NULL); }

  S_ReplyUpdateDBServerConfigByGame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_ReplyUpdateDBServerConfigByGame& from);
  void MergeFrom(const S_ReplyUpdateDBServerConfigByGame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_ReplyUpdateDBServerConfigByGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_ReplyUpdateDBServerConfigByGame_MsgID MsgID;
  static const MsgID ID =
    S_ReplyUpdateDBServerConfigByGame_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_ReplyUpdateDBServerConfigByGame_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_ReplyUpdateDBServerConfigByGame_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_ReplyUpdateDBServerConfigByGame_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_ReplyUpdateDBServerConfigByGame_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_ReplyUpdateDBServerConfigByGame_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_ReplyUpdateDBServerConfigByGame_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_ReplyUpdateDBServerConfigByGame_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string ip = 3;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional int32 server_id = 1;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // optional int32 db_id = 2;
  bool has_db_id() const;
  void clear_db_id();
  static const int kDbIdFieldNumber = 2;
  ::google::protobuf::int32 db_id() const;
  void set_db_id(::google::protobuf::int32 value);

  // optional int32 port = 4;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_ReplyUpdateDBServerConfigByGame)
 private:
  void set_has_server_id();
  void clear_has_server_id();
  void set_has_db_id();
  void clear_has_db_id();
  void set_has_ip();
  void clear_has_ip();
  void set_has_port();
  void clear_has_port();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 db_id_;
  ::google::protobuf::int32 port_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_RequestUpdateDBServerConfigByLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_RequestUpdateDBServerConfigByLogin) */ {
 public:
  S_RequestUpdateDBServerConfigByLogin();
  virtual ~S_RequestUpdateDBServerConfigByLogin();

  S_RequestUpdateDBServerConfigByLogin(const S_RequestUpdateDBServerConfigByLogin& from);

  inline S_RequestUpdateDBServerConfigByLogin& operator=(const S_RequestUpdateDBServerConfigByLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_RequestUpdateDBServerConfigByLogin& default_instance();

  static inline const S_RequestUpdateDBServerConfigByLogin* internal_default_instance() {
    return reinterpret_cast<const S_RequestUpdateDBServerConfigByLogin*>(
               &_S_RequestUpdateDBServerConfigByLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(S_RequestUpdateDBServerConfigByLogin* other);

  // implements Message ----------------------------------------------

  inline S_RequestUpdateDBServerConfigByLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  S_RequestUpdateDBServerConfigByLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_RequestUpdateDBServerConfigByLogin& from);
  void MergeFrom(const S_RequestUpdateDBServerConfigByLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_RequestUpdateDBServerConfigByLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_RequestUpdateDBServerConfigByLogin_MsgID MsgID;
  static const MsgID ID =
    S_RequestUpdateDBServerConfigByLogin_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_RequestUpdateDBServerConfigByLogin_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_RequestUpdateDBServerConfigByLogin_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_RequestUpdateDBServerConfigByLogin_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_RequestUpdateDBServerConfigByLogin_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_RequestUpdateDBServerConfigByLogin_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_RequestUpdateDBServerConfigByLogin_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_RequestUpdateDBServerConfigByLogin_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 db_id = 1;
  bool has_db_id() const;
  void clear_db_id();
  static const int kDbIdFieldNumber = 1;
  ::google::protobuf::int32 db_id() const;
  void set_db_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_RequestUpdateDBServerConfigByLogin)
 private:
  void set_has_db_id();
  void clear_has_db_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 db_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_ReplyUpdateDBServerConfigByLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_ReplyUpdateDBServerConfigByLogin) */ {
 public:
  S_ReplyUpdateDBServerConfigByLogin();
  virtual ~S_ReplyUpdateDBServerConfigByLogin();

  S_ReplyUpdateDBServerConfigByLogin(const S_ReplyUpdateDBServerConfigByLogin& from);

  inline S_ReplyUpdateDBServerConfigByLogin& operator=(const S_ReplyUpdateDBServerConfigByLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ReplyUpdateDBServerConfigByLogin& default_instance();

  static inline const S_ReplyUpdateDBServerConfigByLogin* internal_default_instance() {
    return reinterpret_cast<const S_ReplyUpdateDBServerConfigByLogin*>(
               &_S_ReplyUpdateDBServerConfigByLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(S_ReplyUpdateDBServerConfigByLogin* other);

  // implements Message ----------------------------------------------

  inline S_ReplyUpdateDBServerConfigByLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  S_ReplyUpdateDBServerConfigByLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_ReplyUpdateDBServerConfigByLogin& from);
  void MergeFrom(const S_ReplyUpdateDBServerConfigByLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_ReplyUpdateDBServerConfigByLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_ReplyUpdateDBServerConfigByLogin_MsgID MsgID;
  static const MsgID ID =
    S_ReplyUpdateDBServerConfigByLogin_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_ReplyUpdateDBServerConfigByLogin_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_ReplyUpdateDBServerConfigByLogin_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_ReplyUpdateDBServerConfigByLogin_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_ReplyUpdateDBServerConfigByLogin_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_ReplyUpdateDBServerConfigByLogin_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_ReplyUpdateDBServerConfigByLogin_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_ReplyUpdateDBServerConfigByLogin_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string ip = 3;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional int32 server_id = 1;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // optional int32 db_id = 2;
  bool has_db_id() const;
  void clear_db_id();
  static const int kDbIdFieldNumber = 2;
  ::google::protobuf::int32 db_id() const;
  void set_db_id(::google::protobuf::int32 value);

  // optional int32 port = 4;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_ReplyUpdateDBServerConfigByLogin)
 private:
  void set_has_server_id();
  void clear_has_server_id();
  void set_has_db_id();
  void clear_has_db_id();
  void set_has_ip();
  void clear_has_ip();
  void set_has_port();
  void clear_has_port();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 db_id_;
  ::google::protobuf::int32 port_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_ReplyPrivateRoomConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_ReplyPrivateRoomConfig) */ {
 public:
  S_ReplyPrivateRoomConfig();
  virtual ~S_ReplyPrivateRoomConfig();

  S_ReplyPrivateRoomConfig(const S_ReplyPrivateRoomConfig& from);

  inline S_ReplyPrivateRoomConfig& operator=(const S_ReplyPrivateRoomConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_ReplyPrivateRoomConfig& default_instance();

  static inline const S_ReplyPrivateRoomConfig* internal_default_instance() {
    return reinterpret_cast<const S_ReplyPrivateRoomConfig*>(
               &_S_ReplyPrivateRoomConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(S_ReplyPrivateRoomConfig* other);

  // implements Message ----------------------------------------------

  inline S_ReplyPrivateRoomConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  S_ReplyPrivateRoomConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_ReplyPrivateRoomConfig& from);
  void MergeFrom(const S_ReplyPrivateRoomConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_ReplyPrivateRoomConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_ReplyPrivateRoomConfig_MsgID MsgID;
  static const MsgID ID =
    S_ReplyPrivateRoomConfig_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_ReplyPrivateRoomConfig_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_ReplyPrivateRoomConfig_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_ReplyPrivateRoomConfig_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_ReplyPrivateRoomConfig_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_ReplyPrivateRoomConfig_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_ReplyPrivateRoomConfig_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_ReplyPrivateRoomConfig_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .PrivateRoomListConfig info_list = 1;
  bool has_info_list() const;
  void clear_info_list();
  static const int kInfoListFieldNumber = 1;
  const ::PrivateRoomListConfig& info_list() const;
  ::PrivateRoomListConfig* mutable_info_list();
  ::PrivateRoomListConfig* release_info_list();
  void set_allocated_info_list(::PrivateRoomListConfig* info_list);

  // @@protoc_insertion_point(class_scope:S_ReplyPrivateRoomConfig)
 private:
  void set_has_info_list();
  void clear_has_info_list();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::PrivateRoomListConfig* info_list_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_RegAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_RegAccount) */ {
 public:
  LD_RegAccount();
  virtual ~LD_RegAccount();

  LD_RegAccount(const LD_RegAccount& from);

  inline LD_RegAccount& operator=(const LD_RegAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_RegAccount& default_instance();

  static inline const LD_RegAccount* internal_default_instance() {
    return reinterpret_cast<const LD_RegAccount*>(
               &_LD_RegAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(LD_RegAccount* other);

  // implements Message ----------------------------------------------

  inline LD_RegAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_RegAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_RegAccount& from);
  void MergeFrom(const LD_RegAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_RegAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_RegAccount_MsgID MsgID;
  static const MsgID ID =
    LD_RegAccount_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_RegAccount_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_RegAccount_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_RegAccount_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_RegAccount_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_RegAccount_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_RegAccount_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_RegAccount_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string phone = 3;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 3;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional string phone_type = 4;
  bool has_phone_type() const;
  void clear_phone_type();
  static const int kPhoneTypeFieldNumber = 4;
  const ::std::string& phone_type() const;
  void set_phone_type(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_type(::std::string&& value);
  #endif
  void set_phone_type(const char* value);
  void set_phone_type(const char* value, size_t size);
  ::std::string* mutable_phone_type();
  ::std::string* release_phone_type();
  void set_allocated_phone_type(::std::string* phone_type);

  // optional string version = 5;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 5;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string channel_id = 6;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 6;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // optional string package_name = 7;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 7;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional string imei = 8;
  bool has_imei() const;
  void clear_imei();
  static const int kImeiFieldNumber = 8;
  const ::std::string& imei() const;
  void set_imei(const ::std::string& value);
  #if LANG_CXX11
  void set_imei(::std::string&& value);
  #endif
  void set_imei(const char* value);
  void set_imei(const char* value, size_t size);
  ::std::string* mutable_imei();
  ::std::string* release_imei();
  void set_allocated_imei(::std::string* imei);

  // optional string ip = 9;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 9;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string ip_area = 10;
  bool has_ip_area() const;
  void clear_ip_area();
  static const int kIpAreaFieldNumber = 10;
  const ::std::string& ip_area() const;
  void set_ip_area(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_area(::std::string&& value);
  #endif
  void set_ip_area(const char* value);
  void set_ip_area(const char* value, size_t size);
  ::std::string* mutable_ip_area();
  ::std::string* release_ip_area();
  void set_allocated_ip_area(::std::string* ip_area);

  // optional int32 session_id = 11;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 11;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  // optional int32 gate_id = 12;
  bool has_gate_id() const;
  void clear_gate_id();
  static const int kGateIdFieldNumber = 12;
  ::google::protobuf::int32 gate_id() const;
  void set_gate_id(::google::protobuf::int32 value);

  // optional int32 android_uid = 13;
  bool has_android_uid() const;
  void clear_android_uid();
  static const int kAndroidUidFieldNumber = 13;
  ::google::protobuf::int32 android_uid() const;
  void set_android_uid(::google::protobuf::int32 value);

  // optional int32 android_pid = 14;
  bool has_android_pid() const;
  void clear_android_pid();
  static const int kAndroidPidFieldNumber = 14;
  ::google::protobuf::int32 android_pid() const;
  void set_android_pid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_RegAccount)
 private:
  void set_has_account();
  void clear_has_account();
  void set_has_password();
  void clear_has_password();
  void set_has_phone();
  void clear_has_phone();
  void set_has_phone_type();
  void clear_has_phone_type();
  void set_has_version();
  void clear_has_version();
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_imei();
  void clear_has_imei();
  void set_has_ip();
  void clear_has_ip();
  void set_has_ip_area();
  void clear_has_ip_area();
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_gate_id();
  void clear_has_gate_id();
  void set_has_android_uid();
  void clear_has_android_uid();
  void set_has_android_pid();
  void clear_has_android_pid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr phone_type_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr imei_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr ip_area_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 gate_id_;
  ::google::protobuf::int32 android_uid_;
  ::google::protobuf::int32 android_pid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_RegAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DL_RegAccount) */ {
 public:
  DL_RegAccount();
  virtual ~DL_RegAccount();

  DL_RegAccount(const DL_RegAccount& from);

  inline DL_RegAccount& operator=(const DL_RegAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_RegAccount& default_instance();

  static inline const DL_RegAccount* internal_default_instance() {
    return reinterpret_cast<const DL_RegAccount*>(
               &_DL_RegAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(DL_RegAccount* other);

  // implements Message ----------------------------------------------

  inline DL_RegAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_RegAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_RegAccount& from);
  void MergeFrom(const DL_RegAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_RegAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DL_RegAccount_MsgID MsgID;
  static const MsgID ID =
    DL_RegAccount_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DL_RegAccount_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DL_RegAccount_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DL_RegAccount_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DL_RegAccount_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DL_RegAccount_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DL_RegAccount_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DL_RegAccount_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string nickname = 7;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 7;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string password = 8;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 8;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string phone = 9;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 9;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional string phone_type = 10;
  bool has_phone_type() const;
  void clear_phone_type();
  static const int kPhoneTypeFieldNumber = 10;
  const ::std::string& phone_type() const;
  void set_phone_type(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_type(::std::string&& value);
  #endif
  void set_phone_type(const char* value);
  void set_phone_type(const char* value, size_t size);
  ::std::string* mutable_phone_type();
  ::std::string* release_phone_type();
  void set_allocated_phone_type(::std::string* phone_type);

  // optional string version = 11;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 11;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string channel_id = 12;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 12;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // optional string package_name = 13;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 13;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional string imei = 14;
  bool has_imei() const;
  void clear_imei();
  static const int kImeiFieldNumber = 14;
  const ::std::string& imei() const;
  void set_imei(const ::std::string& value);
  #if LANG_CXX11
  void set_imei(::std::string&& value);
  #endif
  void set_imei(const char* value);
  void set_imei(const char* value, size_t size);
  ::std::string* mutable_imei();
  ::std::string* release_imei();
  void set_allocated_imei(::std::string* imei);

  // optional string ip = 15;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 15;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string ip_area = 16;
  bool has_ip_area() const;
  void clear_ip_area();
  static const int kIpAreaFieldNumber = 16;
  const ::std::string& ip_area() const;
  void set_ip_area(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_area(::std::string&& value);
  #endif
  void set_ip_area(const char* value);
  void set_ip_area(const char* value, size_t size);
  ::std::string* mutable_ip_area();
  ::std::string* release_ip_area();
  void set_allocated_ip_area(::std::string* ip_area);

  // optional int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional bool is_guest = 3;
  bool has_is_guest() const;
  void clear_is_guest();
  static const int kIsGuestFieldNumber = 3;
  bool is_guest() const;
  void set_is_guest(bool value);

  // optional int32 session_id = 4;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 4;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  // optional int32 gate_id = 5;
  bool has_gate_id() const;
  void clear_gate_id();
  static const int kGateIdFieldNumber = 5;
  ::google::protobuf::int32 gate_id() const;
  void set_gate_id(::google::protobuf::int32 value);

  // optional int32 guid = 6;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 6;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DL_RegAccount)
 private:
  void set_has_ret();
  void clear_has_ret();
  void set_has_account();
  void clear_has_account();
  void set_has_is_guest();
  void clear_has_is_guest();
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_gate_id();
  void clear_has_gate_id();
  void set_has_guid();
  void clear_has_guid();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_password();
  void clear_has_password();
  void set_has_phone();
  void clear_has_phone();
  void set_has_phone_type();
  void clear_has_phone_type();
  void set_has_version();
  void clear_has_version();
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_imei();
  void clear_has_imei();
  void set_has_ip();
  void clear_has_ip();
  void set_has_ip_area();
  void clear_has_ip_area();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr phone_type_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr imei_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr ip_area_;
  ::google::protobuf::int32 ret_;
  bool is_guest_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 gate_id_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_RegAccount2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DL_RegAccount2) */ {
 public:
  DL_RegAccount2();
  virtual ~DL_RegAccount2();

  DL_RegAccount2(const DL_RegAccount2& from);

  inline DL_RegAccount2& operator=(const DL_RegAccount2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_RegAccount2& default_instance();

  static inline const DL_RegAccount2* internal_default_instance() {
    return reinterpret_cast<const DL_RegAccount2*>(
               &_DL_RegAccount2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(DL_RegAccount2* other);

  // implements Message ----------------------------------------------

  inline DL_RegAccount2* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_RegAccount2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_RegAccount2& from);
  void MergeFrom(const DL_RegAccount2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_RegAccount2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DL_RegAccount2_MsgID MsgID;
  static const MsgID ID =
    DL_RegAccount2_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DL_RegAccount2_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DL_RegAccount2_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DL_RegAccount2_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DL_RegAccount2_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DL_RegAccount2_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DL_RegAccount2_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DL_RegAccount2_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string phone = 9;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 9;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional string phone_type = 10;
  bool has_phone_type() const;
  void clear_phone_type();
  static const int kPhoneTypeFieldNumber = 10;
  const ::std::string& phone_type() const;
  void set_phone_type(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_type(::std::string&& value);
  #endif
  void set_phone_type(const char* value);
  void set_phone_type(const char* value, size_t size);
  ::std::string* mutable_phone_type();
  ::std::string* release_phone_type();
  void set_allocated_phone_type(::std::string* phone_type);

  // optional string version = 11;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 11;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string channel_id = 12;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 12;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // optional string package_name = 13;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 13;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional string imei = 14;
  bool has_imei() const;
  void clear_imei();
  static const int kImeiFieldNumber = 14;
  const ::std::string& imei() const;
  void set_imei(const ::std::string& value);
  #if LANG_CXX11
  void set_imei(::std::string&& value);
  #endif
  void set_imei(const char* value);
  void set_imei(const char* value, size_t size);
  ::std::string* mutable_imei();
  ::std::string* release_imei();
  void set_allocated_imei(::std::string* imei);

  // optional string ip = 15;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 15;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string ip_area = 16;
  bool has_ip_area() const;
  void clear_ip_area();
  static const int kIpAreaFieldNumber = 16;
  const ::std::string& ip_area() const;
  void set_ip_area(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_area(::std::string&& value);
  #endif
  void set_ip_area(const char* value);
  void set_ip_area(const char* value, size_t size);
  ::std::string* mutable_ip_area();
  ::std::string* release_ip_area();
  void set_allocated_ip_area(::std::string* ip_area);

  // optional .GuestAccount guest_account_result = 1;
  bool has_guest_account_result() const;
  void clear_guest_account_result();
  static const int kGuestAccountResultFieldNumber = 1;
  const ::GuestAccount& guest_account_result() const;
  ::GuestAccount* mutable_guest_account_result();
  ::GuestAccount* release_guest_account_result();
  void set_allocated_guest_account_result(::GuestAccount* guest_account_result);

  // optional int32 session_id = 2;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  // optional int32 gate_id = 3;
  bool has_gate_id() const;
  void clear_gate_id();
  static const int kGateIdFieldNumber = 3;
  ::google::protobuf::int32 gate_id() const;
  void set_gate_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DL_RegAccount2)
 private:
  void set_has_guest_account_result();
  void clear_has_guest_account_result();
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_gate_id();
  void clear_has_gate_id();
  void set_has_phone();
  void clear_has_phone();
  void set_has_phone_type();
  void clear_has_phone_type();
  void set_has_version();
  void clear_has_version();
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_imei();
  void clear_has_imei();
  void set_has_ip();
  void clear_has_ip();
  void set_has_ip_area();
  void clear_has_ip_area();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr phone_type_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr imei_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr ip_area_;
  ::GuestAccount* guest_account_result_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 gate_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_OnlineAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_OnlineAccount) */ {
 public:
  SD_OnlineAccount();
  virtual ~SD_OnlineAccount();

  SD_OnlineAccount(const SD_OnlineAccount& from);

  inline SD_OnlineAccount& operator=(const SD_OnlineAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_OnlineAccount& default_instance();

  static inline const SD_OnlineAccount* internal_default_instance() {
    return reinterpret_cast<const SD_OnlineAccount*>(
               &_SD_OnlineAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(SD_OnlineAccount* other);

  // implements Message ----------------------------------------------

  inline SD_OnlineAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_OnlineAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_OnlineAccount& from);
  void MergeFrom(const SD_OnlineAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_OnlineAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_OnlineAccount_MsgID MsgID;
  static const MsgID ID =
    SD_OnlineAccount_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_OnlineAccount_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_OnlineAccount_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_OnlineAccount_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_OnlineAccount_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_OnlineAccount_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_OnlineAccount_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_OnlineAccount_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 first_game_type = 2;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 2;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional int32 second_game_type = 3;
  bool has_second_game_type() const;
  void clear_second_game_type();
  static const int kSecondGameTypeFieldNumber = 3;
  ::google::protobuf::int32 second_game_type() const;
  void set_second_game_type(::google::protobuf::int32 value);

  // optional int32 gamer_id = 4;
  bool has_gamer_id() const;
  void clear_gamer_id();
  static const int kGamerIdFieldNumber = 4;
  ::google::protobuf::int32 gamer_id() const;
  void set_gamer_id(::google::protobuf::int32 value);

  // optional int32 in_game = 5;
  bool has_in_game() const;
  void clear_in_game();
  static const int kInGameFieldNumber = 5;
  ::google::protobuf::int32 in_game() const;
  void set_in_game(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_OnlineAccount)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_second_game_type();
  void clear_has_second_game_type();
  void set_has_gamer_id();
  void clear_has_gamer_id();
  void set_has_in_game();
  void clear_has_in_game();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 first_game_type_;
  ::google::protobuf::int32 second_game_type_;
  ::google::protobuf::int32 gamer_id_;
  ::google::protobuf::int32 in_game_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_PhoneQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_PhoneQuery) */ {
 public:
  LD_PhoneQuery();
  virtual ~LD_PhoneQuery();

  LD_PhoneQuery(const LD_PhoneQuery& from);

  inline LD_PhoneQuery& operator=(const LD_PhoneQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_PhoneQuery& default_instance();

  static inline const LD_PhoneQuery* internal_default_instance() {
    return reinterpret_cast<const LD_PhoneQuery*>(
               &_LD_PhoneQuery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(LD_PhoneQuery* other);

  // implements Message ----------------------------------------------

  inline LD_PhoneQuery* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_PhoneQuery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_PhoneQuery& from);
  void MergeFrom(const LD_PhoneQuery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_PhoneQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_PhoneQuery_MsgID MsgID;
  static const MsgID ID =
    LD_PhoneQuery_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_PhoneQuery_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_PhoneQuery_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_PhoneQuery_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_PhoneQuery_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_PhoneQuery_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_PhoneQuery_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_PhoneQuery_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string phone = 1;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 1;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional int32 gate_session_id = 2;
  bool has_gate_session_id() const;
  void clear_gate_session_id();
  static const int kGateSessionIdFieldNumber = 2;
  ::google::protobuf::int32 gate_session_id() const;
  void set_gate_session_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_PhoneQuery)
 private:
  void set_has_phone();
  void clear_has_phone();
  void set_has_gate_session_id();
  void clear_has_gate_session_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::int32 gate_session_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_PhoneQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DL_PhoneQuery) */ {
 public:
  DL_PhoneQuery();
  virtual ~DL_PhoneQuery();

  DL_PhoneQuery(const DL_PhoneQuery& from);

  inline DL_PhoneQuery& operator=(const DL_PhoneQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_PhoneQuery& default_instance();

  static inline const DL_PhoneQuery* internal_default_instance() {
    return reinterpret_cast<const DL_PhoneQuery*>(
               &_DL_PhoneQuery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(DL_PhoneQuery* other);

  // implements Message ----------------------------------------------

  inline DL_PhoneQuery* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_PhoneQuery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_PhoneQuery& from);
  void MergeFrom(const DL_PhoneQuery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_PhoneQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DL_PhoneQuery_MsgID MsgID;
  static const MsgID ID =
    DL_PhoneQuery_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DL_PhoneQuery_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DL_PhoneQuery_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DL_PhoneQuery_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DL_PhoneQuery_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DL_PhoneQuery_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DL_PhoneQuery_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DL_PhoneQuery_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string phone = 2;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 2;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 gate_session_id = 3;
  bool has_gate_session_id() const;
  void clear_gate_session_id();
  static const int kGateSessionIdFieldNumber = 3;
  ::google::protobuf::int32 gate_session_id() const;
  void set_gate_session_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DL_PhoneQuery)
 private:
  void set_has_ret();
  void clear_has_ret();
  void set_has_phone();
  void clear_has_phone();
  void set_has_gate_session_id();
  void clear_has_gate_session_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 gate_session_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_Heartbeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_Heartbeat) */ {
 public:
  S_Heartbeat();
  virtual ~S_Heartbeat();

  S_Heartbeat(const S_Heartbeat& from);

  inline S_Heartbeat& operator=(const S_Heartbeat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_Heartbeat& default_instance();

  static inline const S_Heartbeat* internal_default_instance() {
    return reinterpret_cast<const S_Heartbeat*>(
               &_S_Heartbeat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(S_Heartbeat* other);

  // implements Message ----------------------------------------------

  inline S_Heartbeat* New() const PROTOBUF_FINAL { return New(NULL); }

  S_Heartbeat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_Heartbeat& from);
  void MergeFrom(const S_Heartbeat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_Heartbeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_Heartbeat_MsgID MsgID;
  static const MsgID ID =
    S_Heartbeat_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_Heartbeat_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_Heartbeat_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_Heartbeat_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_Heartbeat_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_Heartbeat_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_Heartbeat_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_Heartbeat_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:S_Heartbeat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_Logout : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_Logout) */ {
 public:
  S_Logout();
  virtual ~S_Logout();

  S_Logout(const S_Logout& from);

  inline S_Logout& operator=(const S_Logout& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_Logout& default_instance();

  static inline const S_Logout* internal_default_instance() {
    return reinterpret_cast<const S_Logout*>(
               &_S_Logout_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(S_Logout* other);

  // implements Message ----------------------------------------------

  inline S_Logout* New() const PROTOBUF_FINAL { return New(NULL); }

  S_Logout* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_Logout& from);
  void MergeFrom(const S_Logout& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_Logout* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_Logout_MsgID MsgID;
  static const MsgID ID =
    S_Logout_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_Logout_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_Logout_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_Logout_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_Logout_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_Logout_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_Logout_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_Logout_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string phone = 8;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 8;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional string phone_type = 9;
  bool has_phone_type() const;
  void clear_phone_type();
  static const int kPhoneTypeFieldNumber = 9;
  const ::std::string& phone_type() const;
  void set_phone_type(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_type(::std::string&& value);
  #endif
  void set_phone_type(const char* value);
  void set_phone_type(const char* value, size_t size);
  ::std::string* mutable_phone_type();
  ::std::string* release_phone_type();
  void set_allocated_phone_type(::std::string* phone_type);

  // optional string version = 10;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 10;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string channel_id = 11;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 11;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // optional string package_name = 12;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 12;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional string imei = 13;
  bool has_imei() const;
  void clear_imei();
  static const int kImeiFieldNumber = 13;
  const ::std::string& imei() const;
  void set_imei(const ::std::string& value);
  #if LANG_CXX11
  void set_imei(::std::string&& value);
  #endif
  void set_imei(const char* value);
  void set_imei(const char* value, size_t size);
  ::std::string* mutable_imei();
  ::std::string* release_imei();
  void set_allocated_imei(::std::string* imei);

  // optional string ip = 14;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 14;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 session_id = 3;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  // optional int32 gate_id = 4;
  bool has_gate_id() const;
  void clear_gate_id();
  static const int kGateIdFieldNumber = 4;
  ::google::protobuf::int32 gate_id() const;
  void set_gate_id(::google::protobuf::int32 value);

  // optional int32 login_time = 5;
  bool has_login_time() const;
  void clear_login_time();
  static const int kLoginTimeFieldNumber = 5;
  ::google::protobuf::int32 login_time() const;
  void set_login_time(::google::protobuf::int32 value);

  // optional int32 logout_time = 6;
  bool has_logout_time() const;
  void clear_logout_time();
  static const int kLogoutTimeFieldNumber = 6;
  ::google::protobuf::int32 logout_time() const;
  void set_logout_time(::google::protobuf::int32 value);

  // optional bool is_offline = 7;
  bool has_is_offline() const;
  void clear_is_offline();
  static const int kIsOfflineFieldNumber = 7;
  bool is_offline() const;
  void set_is_offline(bool value);

  // optional int32 user_data = 15;
  bool has_user_data() const;
  void clear_user_data();
  static const int kUserDataFieldNumber = 15;
  ::google::protobuf::int32 user_data() const;
  void set_user_data(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_Logout)
 private:
  void set_has_account();
  void clear_has_account();
  void set_has_guid();
  void clear_has_guid();
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_gate_id();
  void clear_has_gate_id();
  void set_has_login_time();
  void clear_has_login_time();
  void set_has_logout_time();
  void clear_has_logout_time();
  void set_has_is_offline();
  void clear_has_is_offline();
  void set_has_phone();
  void clear_has_phone();
  void set_has_phone_type();
  void clear_has_phone_type();
  void set_has_version();
  void clear_has_version();
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_imei();
  void clear_has_imei();
  void set_has_ip();
  void clear_has_ip();
  void set_has_user_data();
  void clear_has_user_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr phone_type_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr imei_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 gate_id_;
  ::google::protobuf::int32 login_time_;
  ::google::protobuf::int32 logout_time_;
  bool is_offline_;
  ::google::protobuf::int32 user_data_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_VerifyAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_VerifyAccount) */ {
 public:
  LD_VerifyAccount();
  virtual ~LD_VerifyAccount();

  LD_VerifyAccount(const LD_VerifyAccount& from);

  inline LD_VerifyAccount& operator=(const LD_VerifyAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_VerifyAccount& default_instance();

  static inline const LD_VerifyAccount* internal_default_instance() {
    return reinterpret_cast<const LD_VerifyAccount*>(
               &_LD_VerifyAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(LD_VerifyAccount* other);

  // implements Message ----------------------------------------------

  inline LD_VerifyAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_VerifyAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_VerifyAccount& from);
  void MergeFrom(const LD_VerifyAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_VerifyAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_VerifyAccount_MsgID MsgID;
  static const MsgID ID =
    LD_VerifyAccount_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_VerifyAccount_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_VerifyAccount_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_VerifyAccount_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_VerifyAccount_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_VerifyAccount_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_VerifyAccount_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_VerifyAccount_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .VerifyAccount verify_account = 1;
  bool has_verify_account() const;
  void clear_verify_account();
  static const int kVerifyAccountFieldNumber = 1;
  const ::VerifyAccount& verify_account() const;
  ::VerifyAccount* mutable_verify_account();
  ::VerifyAccount* release_verify_account();
  void set_allocated_verify_account(::VerifyAccount* verify_account);

  // optional int32 session_id = 2;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  // optional int32 gate_id = 3;
  bool has_gate_id() const;
  void clear_gate_id();
  static const int kGateIdFieldNumber = 3;
  ::google::protobuf::int32 gate_id() const;
  void set_gate_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_VerifyAccount)
 private:
  void set_has_verify_account();
  void clear_has_verify_account();
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_gate_id();
  void clear_has_gate_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::VerifyAccount* verify_account_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 gate_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_VerifyAccountResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DL_VerifyAccountResult) */ {
 public:
  DL_VerifyAccountResult();
  virtual ~DL_VerifyAccountResult();

  DL_VerifyAccountResult(const DL_VerifyAccountResult& from);

  inline DL_VerifyAccountResult& operator=(const DL_VerifyAccountResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_VerifyAccountResult& default_instance();

  static inline const DL_VerifyAccountResult* internal_default_instance() {
    return reinterpret_cast<const DL_VerifyAccountResult*>(
               &_DL_VerifyAccountResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(DL_VerifyAccountResult* other);

  // implements Message ----------------------------------------------

  inline DL_VerifyAccountResult* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_VerifyAccountResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_VerifyAccountResult& from);
  void MergeFrom(const DL_VerifyAccountResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_VerifyAccountResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DL_VerifyAccountResult_MsgID MsgID;
  static const MsgID ID =
    DL_VerifyAccountResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DL_VerifyAccountResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DL_VerifyAccountResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DL_VerifyAccountResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DL_VerifyAccountResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DL_VerifyAccountResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DL_VerifyAccountResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DL_VerifyAccountResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 4;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 4;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string password = 5;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 5;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional .VerifyAccountResult verify_account_result = 1;
  bool has_verify_account_result() const;
  void clear_verify_account_result();
  static const int kVerifyAccountResultFieldNumber = 1;
  const ::VerifyAccountResult& verify_account_result() const;
  ::VerifyAccountResult* mutable_verify_account_result();
  ::VerifyAccountResult* release_verify_account_result();
  void set_allocated_verify_account_result(::VerifyAccountResult* verify_account_result);

  // optional int32 session_id = 2;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  // optional int32 gate_id = 3;
  bool has_gate_id() const;
  void clear_gate_id();
  static const int kGateIdFieldNumber = 3;
  ::google::protobuf::int32 gate_id() const;
  void set_gate_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DL_VerifyAccountResult)
 private:
  void set_has_verify_account_result();
  void clear_has_verify_account_result();
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_gate_id();
  void clear_has_gate_id();
  void set_has_account();
  void clear_has_account();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::VerifyAccountResult* verify_account_result_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 gate_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_SmsLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_SmsLogin) */ {
 public:
  LD_SmsLogin();
  virtual ~LD_SmsLogin();

  LD_SmsLogin(const LD_SmsLogin& from);

  inline LD_SmsLogin& operator=(const LD_SmsLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_SmsLogin& default_instance();

  static inline const LD_SmsLogin* internal_default_instance() {
    return reinterpret_cast<const LD_SmsLogin*>(
               &_LD_SmsLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(LD_SmsLogin* other);

  // implements Message ----------------------------------------------

  inline LD_SmsLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_SmsLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_SmsLogin& from);
  void MergeFrom(const LD_SmsLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_SmsLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_SmsLogin_MsgID MsgID;
  static const MsgID ID =
    LD_SmsLogin_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_SmsLogin_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_SmsLogin_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_SmsLogin_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_SmsLogin_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_SmsLogin_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_SmsLogin_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_SmsLogin_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string phone = 3;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 3;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional string phone_type = 4;
  bool has_phone_type() const;
  void clear_phone_type();
  static const int kPhoneTypeFieldNumber = 4;
  const ::std::string& phone_type() const;
  void set_phone_type(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_type(::std::string&& value);
  #endif
  void set_phone_type(const char* value);
  void set_phone_type(const char* value, size_t size);
  ::std::string* mutable_phone_type();
  ::std::string* release_phone_type();
  void set_allocated_phone_type(::std::string* phone_type);

  // optional string version = 5;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 5;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string channel_id = 6;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 6;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // optional string package_name = 7;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 7;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional string imei = 8;
  bool has_imei() const;
  void clear_imei();
  static const int kImeiFieldNumber = 8;
  const ::std::string& imei() const;
  void set_imei(const ::std::string& value);
  #if LANG_CXX11
  void set_imei(::std::string&& value);
  #endif
  void set_imei(const char* value);
  void set_imei(const char* value, size_t size);
  ::std::string* mutable_imei();
  ::std::string* release_imei();
  void set_allocated_imei(::std::string* imei);

  // optional string ip = 9;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 9;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string ip_area = 11;
  bool has_ip_area() const;
  void clear_ip_area();
  static const int kIpAreaFieldNumber = 11;
  const ::std::string& ip_area() const;
  void set_ip_area(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_area(::std::string&& value);
  #endif
  void set_ip_area(const char* value);
  void set_ip_area(const char* value, size_t size);
  ::std::string* mutable_ip_area();
  ::std::string* release_ip_area();
  void set_allocated_ip_area(::std::string* ip_area);

  // optional int32 session_id = 2;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  // optional int32 gate_id = 10;
  bool has_gate_id() const;
  void clear_gate_id();
  static const int kGateIdFieldNumber = 10;
  ::google::protobuf::int32 gate_id() const;
  void set_gate_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_SmsLogin)
 private:
  void set_has_account();
  void clear_has_account();
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_phone();
  void clear_has_phone();
  void set_has_phone_type();
  void clear_has_phone_type();
  void set_has_version();
  void clear_has_version();
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_imei();
  void clear_has_imei();
  void set_has_ip();
  void clear_has_ip();
  void set_has_gate_id();
  void clear_has_gate_id();
  void set_has_ip_area();
  void clear_has_ip_area();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr phone_type_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr imei_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr ip_area_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 gate_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_LoginNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_LoginNotify) */ {
 public:
  LS_LoginNotify();
  virtual ~LS_LoginNotify();

  LS_LoginNotify(const LS_LoginNotify& from);

  inline LS_LoginNotify& operator=(const LS_LoginNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_LoginNotify& default_instance();

  static inline const LS_LoginNotify* internal_default_instance() {
    return reinterpret_cast<const LS_LoginNotify*>(
               &_LS_LoginNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(LS_LoginNotify* other);

  // implements Message ----------------------------------------------

  inline LS_LoginNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_LoginNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_LoginNotify& from);
  void MergeFrom(const LS_LoginNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_LoginNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_LoginNotify_MsgID MsgID;
  static const MsgID ID =
    LS_LoginNotify_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_LoginNotify_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_LoginNotify_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_LoginNotify_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_LoginNotify_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_LoginNotify_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_LoginNotify_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_LoginNotify_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional .PlayerLoginInfo player_login_info = 1;
  bool has_player_login_info() const;
  void clear_player_login_info();
  static const int kPlayerLoginInfoFieldNumber = 1;
  const ::PlayerLoginInfo& player_login_info() const;
  ::PlayerLoginInfo* mutable_player_login_info();
  ::PlayerLoginInfo* release_player_login_info();
  void set_allocated_player_login_info(::PlayerLoginInfo* player_login_info);

  // @@protoc_insertion_point(class_scope:LS_LoginNotify)
 private:
  void set_has_player_login_info();
  void clear_has_player_login_info();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::PlayerLoginInfo* player_login_info_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_LoginNotifyAgain : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_LoginNotifyAgain) */ {
 public:
  LS_LoginNotifyAgain();
  virtual ~LS_LoginNotifyAgain();

  LS_LoginNotifyAgain(const LS_LoginNotifyAgain& from);

  inline LS_LoginNotifyAgain& operator=(const LS_LoginNotifyAgain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_LoginNotifyAgain& default_instance();

  static inline const LS_LoginNotifyAgain* internal_default_instance() {
    return reinterpret_cast<const LS_LoginNotifyAgain*>(
               &_LS_LoginNotifyAgain_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(LS_LoginNotifyAgain* other);

  // implements Message ----------------------------------------------

  inline LS_LoginNotifyAgain* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_LoginNotifyAgain* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_LoginNotifyAgain& from);
  void MergeFrom(const LS_LoginNotifyAgain& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_LoginNotifyAgain* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_LoginNotifyAgain_MsgID MsgID;
  static const MsgID ID =
    LS_LoginNotifyAgain_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_LoginNotifyAgain_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_LoginNotifyAgain_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_LoginNotifyAgain_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_LoginNotifyAgain_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_LoginNotifyAgain_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_LoginNotifyAgain_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_LoginNotifyAgain_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_LoginNotifyAgain)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LG_KickClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LG_KickClient) */ {
 public:
  LG_KickClient();
  virtual ~LG_KickClient();

  LG_KickClient(const LG_KickClient& from);

  inline LG_KickClient& operator=(const LG_KickClient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LG_KickClient& default_instance();

  static inline const LG_KickClient* internal_default_instance() {
    return reinterpret_cast<const LG_KickClient*>(
               &_LG_KickClient_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(LG_KickClient* other);

  // implements Message ----------------------------------------------

  inline LG_KickClient* New() const PROTOBUF_FINAL { return New(NULL); }

  LG_KickClient* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LG_KickClient& from);
  void MergeFrom(const LG_KickClient& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LG_KickClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LG_KickClient_MsgID MsgID;
  static const MsgID ID =
    LG_KickClient_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LG_KickClient_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LG_KickClient_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LG_KickClient_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LG_KickClient_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LG_KickClient_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LG_KickClient_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LG_KickClient_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string reply_account = 3;
  bool has_reply_account() const;
  void clear_reply_account();
  static const int kReplyAccountFieldNumber = 3;
  const ::std::string& reply_account() const;
  void set_reply_account(const ::std::string& value);
  #if LANG_CXX11
  void set_reply_account(::std::string&& value);
  #endif
  void set_reply_account(const char* value);
  void set_reply_account(const char* value, size_t size);
  ::std::string* mutable_reply_account();
  ::std::string* release_reply_account();
  void set_allocated_reply_account(::std::string* reply_account);

  // optional int32 session_id = 1;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  // optional int32 gate_id = 2;
  bool has_gate_id() const;
  void clear_gate_id();
  static const int kGateIdFieldNumber = 2;
  ::google::protobuf::int32 gate_id() const;
  void set_gate_id(::google::protobuf::int32 value);

  // optional int32 user_data = 4;
  bool has_user_data() const;
  void clear_user_data();
  static const int kUserDataFieldNumber = 4;
  ::google::protobuf::int32 user_data() const;
  void set_user_data(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LG_KickClient)
 private:
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_gate_id();
  void clear_has_gate_id();
  void set_has_reply_account();
  void clear_has_reply_account();
  void set_has_user_data();
  void clear_has_user_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr reply_account_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 gate_id_;
  ::google::protobuf::int32 user_data_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class L_KickClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:L_KickClient) */ {
 public:
  L_KickClient();
  virtual ~L_KickClient();

  L_KickClient(const L_KickClient& from);

  inline L_KickClient& operator=(const L_KickClient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const L_KickClient& default_instance();

  static inline const L_KickClient* internal_default_instance() {
    return reinterpret_cast<const L_KickClient*>(
               &_L_KickClient_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(L_KickClient* other);

  // implements Message ----------------------------------------------

  inline L_KickClient* New() const PROTOBUF_FINAL { return New(NULL); }

  L_KickClient* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const L_KickClient& from);
  void MergeFrom(const L_KickClient& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(L_KickClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef L_KickClient_MsgID MsgID;
  static const MsgID ID =
    L_KickClient_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return L_KickClient_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    L_KickClient_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    L_KickClient_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    L_KickClient_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return L_KickClient_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return L_KickClient_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return L_KickClient_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string reply_account = 1;
  bool has_reply_account() const;
  void clear_reply_account();
  static const int kReplyAccountFieldNumber = 1;
  const ::std::string& reply_account() const;
  void set_reply_account(const ::std::string& value);
  #if LANG_CXX11
  void set_reply_account(::std::string&& value);
  #endif
  void set_reply_account(const char* value);
  void set_reply_account(const char* value, size_t size);
  ::std::string* mutable_reply_account();
  ::std::string* release_reply_account();
  void set_allocated_reply_account(::std::string* reply_account);

  // optional int32 user_data = 2;
  bool has_user_data() const;
  void clear_user_data();
  static const int kUserDataFieldNumber = 2;
  ::google::protobuf::int32 user_data() const;
  void set_user_data(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:L_KickClient)
 private:
  void set_has_reply_account();
  void clear_has_reply_account();
  void set_has_user_data();
  void clear_has_user_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr reply_account_;
  ::google::protobuf::int32 user_data_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_ResetAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_ResetAccount) */ {
 public:
  SD_ResetAccount();
  virtual ~SD_ResetAccount();

  SD_ResetAccount(const SD_ResetAccount& from);

  inline SD_ResetAccount& operator=(const SD_ResetAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_ResetAccount& default_instance();

  static inline const SD_ResetAccount* internal_default_instance() {
    return reinterpret_cast<const SD_ResetAccount*>(
               &_SD_ResetAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(SD_ResetAccount* other);

  // implements Message ----------------------------------------------

  inline SD_ResetAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_ResetAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_ResetAccount& from);
  void MergeFrom(const SD_ResetAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_ResetAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_ResetAccount_MsgID MsgID;
  static const MsgID ID =
    SD_ResetAccount_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_ResetAccount_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_ResetAccount_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_ResetAccount_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_ResetAccount_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_ResetAccount_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_ResetAccount_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_ResetAccount_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string password = 3;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string nickname = 4;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 4;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_ResetAccount)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_account();
  void clear_has_account();
  void set_has_password();
  void clear_has_password();
  void set_has_nickname();
  void clear_has_nickname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_ResetAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_ResetAccount) */ {
 public:
  DS_ResetAccount();
  virtual ~DS_ResetAccount();

  DS_ResetAccount(const DS_ResetAccount& from);

  inline DS_ResetAccount& operator=(const DS_ResetAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_ResetAccount& default_instance();

  static inline const DS_ResetAccount* internal_default_instance() {
    return reinterpret_cast<const DS_ResetAccount*>(
               &_DS_ResetAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(DS_ResetAccount* other);

  // implements Message ----------------------------------------------

  inline DS_ResetAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_ResetAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_ResetAccount& from);
  void MergeFrom(const DS_ResetAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_ResetAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_ResetAccount_MsgID MsgID;
  static const MsgID ID =
    DS_ResetAccount_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_ResetAccount_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_ResetAccount_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_ResetAccount_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_ResetAccount_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_ResetAccount_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_ResetAccount_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_ResetAccount_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 3;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 3;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string nickname = 4;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 4;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_ResetAccount)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_ret();
  void clear_has_ret();
  void set_has_account();
  void clear_has_account();
  void set_has_nickname();
  void clear_has_nickname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 ret_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_SetPassword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_SetPassword) */ {
 public:
  SD_SetPassword();
  virtual ~SD_SetPassword();

  SD_SetPassword(const SD_SetPassword& from);

  inline SD_SetPassword& operator=(const SD_SetPassword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_SetPassword& default_instance();

  static inline const SD_SetPassword* internal_default_instance() {
    return reinterpret_cast<const SD_SetPassword*>(
               &_SD_SetPassword_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(SD_SetPassword* other);

  // implements Message ----------------------------------------------

  inline SD_SetPassword* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_SetPassword* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_SetPassword& from);
  void MergeFrom(const SD_SetPassword& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_SetPassword* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_SetPassword_MsgID MsgID;
  static const MsgID ID =
    SD_SetPassword_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_SetPassword_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_SetPassword_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_SetPassword_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_SetPassword_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_SetPassword_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_SetPassword_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_SetPassword_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string old_password = 2;
  bool has_old_password() const;
  void clear_old_password();
  static const int kOldPasswordFieldNumber = 2;
  const ::std::string& old_password() const;
  void set_old_password(const ::std::string& value);
  #if LANG_CXX11
  void set_old_password(::std::string&& value);
  #endif
  void set_old_password(const char* value);
  void set_old_password(const char* value, size_t size);
  ::std::string* mutable_old_password();
  ::std::string* release_old_password();
  void set_allocated_old_password(::std::string* old_password);

  // optional string password = 3;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_SetPassword)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_old_password();
  void clear_has_old_password();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr old_password_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_SetPassword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_SetPassword) */ {
 public:
  DS_SetPassword();
  virtual ~DS_SetPassword();

  DS_SetPassword(const DS_SetPassword& from);

  inline DS_SetPassword& operator=(const DS_SetPassword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_SetPassword& default_instance();

  static inline const DS_SetPassword* internal_default_instance() {
    return reinterpret_cast<const DS_SetPassword*>(
               &_DS_SetPassword_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(DS_SetPassword* other);

  // implements Message ----------------------------------------------

  inline DS_SetPassword* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_SetPassword* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_SetPassword& from);
  void MergeFrom(const DS_SetPassword& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_SetPassword* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_SetPassword_MsgID MsgID;
  static const MsgID ID =
    DS_SetPassword_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_SetPassword_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_SetPassword_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_SetPassword_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_SetPassword_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_SetPassword_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_SetPassword_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_SetPassword_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_SetPassword)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_ret();
  void clear_has_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 ret_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_SetNickname : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_SetNickname) */ {
 public:
  SD_SetNickname();
  virtual ~SD_SetNickname();

  SD_SetNickname(const SD_SetNickname& from);

  inline SD_SetNickname& operator=(const SD_SetNickname& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_SetNickname& default_instance();

  static inline const SD_SetNickname* internal_default_instance() {
    return reinterpret_cast<const SD_SetNickname*>(
               &_SD_SetNickname_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(SD_SetNickname* other);

  // implements Message ----------------------------------------------

  inline SD_SetNickname* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_SetNickname* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_SetNickname& from);
  void MergeFrom(const SD_SetNickname& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_SetNickname* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_SetNickname_MsgID MsgID;
  static const MsgID ID =
    SD_SetNickname_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_SetNickname_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_SetNickname_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_SetNickname_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_SetNickname_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_SetNickname_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_SetNickname_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_SetNickname_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_SetNickname)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_nickname();
  void clear_has_nickname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_SetNickname : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_SetNickname) */ {
 public:
  DS_SetNickname();
  virtual ~DS_SetNickname();

  DS_SetNickname(const DS_SetNickname& from);

  inline DS_SetNickname& operator=(const DS_SetNickname& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_SetNickname& default_instance();

  static inline const DS_SetNickname* internal_default_instance() {
    return reinterpret_cast<const DS_SetNickname*>(
               &_DS_SetNickname_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(DS_SetNickname* other);

  // implements Message ----------------------------------------------

  inline DS_SetNickname* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_SetNickname* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_SetNickname& from);
  void MergeFrom(const DS_SetNickname& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_SetNickname* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_SetNickname_MsgID MsgID;
  static const MsgID ID =
    DS_SetNickname_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_SetNickname_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_SetNickname_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_SetNickname_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_SetNickname_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_SetNickname_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_SetNickname_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_SetNickname_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 ret = 3;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 3;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_SetNickname)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_ret();
  void clear_has_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 ret_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_SetPasswordBySms : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_SetPasswordBySms) */ {
 public:
  SD_SetPasswordBySms();
  virtual ~SD_SetPasswordBySms();

  SD_SetPasswordBySms(const SD_SetPasswordBySms& from);

  inline SD_SetPasswordBySms& operator=(const SD_SetPasswordBySms& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_SetPasswordBySms& default_instance();

  static inline const SD_SetPasswordBySms* internal_default_instance() {
    return reinterpret_cast<const SD_SetPasswordBySms*>(
               &_SD_SetPasswordBySms_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(SD_SetPasswordBySms* other);

  // implements Message ----------------------------------------------

  inline SD_SetPasswordBySms* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_SetPasswordBySms* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_SetPasswordBySms& from);
  void MergeFrom(const SD_SetPasswordBySms& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_SetPasswordBySms* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_SetPasswordBySms_MsgID MsgID;
  static const MsgID ID =
    SD_SetPasswordBySms_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_SetPasswordBySms_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_SetPasswordBySms_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_SetPasswordBySms_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_SetPasswordBySms_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_SetPasswordBySms_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_SetPasswordBySms_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_SetPasswordBySms_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_SetPasswordBySms)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_QueryPlayerData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_QueryPlayerData) */ {
 public:
  SD_QueryPlayerData();
  virtual ~SD_QueryPlayerData();

  SD_QueryPlayerData(const SD_QueryPlayerData& from);

  inline SD_QueryPlayerData& operator=(const SD_QueryPlayerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_QueryPlayerData& default_instance();

  static inline const SD_QueryPlayerData* internal_default_instance() {
    return reinterpret_cast<const SD_QueryPlayerData*>(
               &_SD_QueryPlayerData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(SD_QueryPlayerData* other);

  // implements Message ----------------------------------------------

  inline SD_QueryPlayerData* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_QueryPlayerData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_QueryPlayerData& from);
  void MergeFrom(const SD_QueryPlayerData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_QueryPlayerData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_QueryPlayerData_MsgID MsgID;
  static const MsgID ID =
    SD_QueryPlayerData_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_QueryPlayerData_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_QueryPlayerData_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_QueryPlayerData_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_QueryPlayerData_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_QueryPlayerData_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_QueryPlayerData_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_QueryPlayerData_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_QueryPlayerData)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_account();
  void clear_has_account();
  void set_has_nickname();
  void clear_has_nickname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_LoadPlayerData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_LoadPlayerData) */ {
 public:
  DS_LoadPlayerData();
  virtual ~DS_LoadPlayerData();

  DS_LoadPlayerData(const DS_LoadPlayerData& from);

  inline DS_LoadPlayerData& operator=(const DS_LoadPlayerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_LoadPlayerData& default_instance();

  static inline const DS_LoadPlayerData* internal_default_instance() {
    return reinterpret_cast<const DS_LoadPlayerData*>(
               &_DS_LoadPlayerData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(DS_LoadPlayerData* other);

  // implements Message ----------------------------------------------

  inline DS_LoadPlayerData* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_LoadPlayerData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_LoadPlayerData& from);
  void MergeFrom(const DS_LoadPlayerData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_LoadPlayerData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_LoadPlayerData_MsgID MsgID;
  static const MsgID ID =
    DS_LoadPlayerData_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_LoadPlayerData_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_LoadPlayerData_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_LoadPlayerData_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_LoadPlayerData_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_LoadPlayerData_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_LoadPlayerData_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_LoadPlayerData_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .PlayerBaseInfo pb_base_info = 3;
  bool has_pb_base_info() const;
  void clear_pb_base_info();
  static const int kPbBaseInfoFieldNumber = 3;
  const ::PlayerBaseInfo& pb_base_info() const;
  ::PlayerBaseInfo* mutable_pb_base_info();
  ::PlayerBaseInfo* release_pb_base_info();
  void set_allocated_pb_base_info(::PlayerBaseInfo* pb_base_info);

  // optional .ItemBagInfo pb_item_bag = 4;
  bool has_pb_item_bag() const;
  void clear_pb_item_bag();
  static const int kPbItemBagFieldNumber = 4;
  const ::ItemBagInfo& pb_item_bag() const;
  ::ItemBagInfo* mutable_pb_item_bag();
  ::ItemBagInfo* release_pb_item_bag();
  void set_allocated_pb_item_bag(::ItemBagInfo* pb_item_bag);

  // optional .MailListInfo pb_mail_list = 5;
  bool has_pb_mail_list() const;
  void clear_pb_mail_list();
  static const int kPbMailListFieldNumber = 5;
  const ::MailListInfo& pb_mail_list() const;
  ::MailListInfo* mutable_pb_mail_list();
  ::MailListInfo* release_pb_mail_list();
  void set_allocated_pb_mail_list(::MailListInfo* pb_mail_list);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 info_type = 2;
  bool has_info_type() const;
  void clear_info_type();
  static const int kInfoTypeFieldNumber = 2;
  ::google::protobuf::int32 info_type() const;
  void set_info_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_LoadPlayerData)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_info_type();
  void clear_has_info_type();
  void set_has_pb_base_info();
  void clear_has_pb_base_info();
  void set_has_pb_item_bag();
  void clear_has_pb_item_bag();
  void set_has_pb_mail_list();
  void clear_has_pb_mail_list();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::PlayerBaseInfo* pb_base_info_;
  ::ItemBagInfo* pb_item_bag_;
  ::MailListInfo* pb_mail_list_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 info_type_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_SavePlayerData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_SavePlayerData) */ {
 public:
  SD_SavePlayerData();
  virtual ~SD_SavePlayerData();

  SD_SavePlayerData(const SD_SavePlayerData& from);

  inline SD_SavePlayerData& operator=(const SD_SavePlayerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_SavePlayerData& default_instance();

  static inline const SD_SavePlayerData* internal_default_instance() {
    return reinterpret_cast<const SD_SavePlayerData*>(
               &_SD_SavePlayerData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(SD_SavePlayerData* other);

  // implements Message ----------------------------------------------

  inline SD_SavePlayerData* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_SavePlayerData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_SavePlayerData& from);
  void MergeFrom(const SD_SavePlayerData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_SavePlayerData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_SavePlayerData_MsgID MsgID;
  static const MsgID ID =
    SD_SavePlayerData_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_SavePlayerData_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_SavePlayerData_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_SavePlayerData_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_SavePlayerData_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_SavePlayerData_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_SavePlayerData_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_SavePlayerData_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .PlayerBaseInfo pb_base_info = 2;
  bool has_pb_base_info() const;
  void clear_pb_base_info();
  static const int kPbBaseInfoFieldNumber = 2;
  const ::PlayerBaseInfo& pb_base_info() const;
  ::PlayerBaseInfo* mutable_pb_base_info();
  ::PlayerBaseInfo* release_pb_base_info();
  void set_allocated_pb_base_info(::PlayerBaseInfo* pb_base_info);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_SavePlayerData)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_pb_base_info();
  void clear_has_pb_base_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::PlayerBaseInfo* pb_base_info_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SS_ChangeGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SS_ChangeGame) */ {
 public:
  SS_ChangeGame();
  virtual ~SS_ChangeGame();

  SS_ChangeGame(const SS_ChangeGame& from);

  inline SS_ChangeGame& operator=(const SS_ChangeGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SS_ChangeGame& default_instance();

  static inline const SS_ChangeGame* internal_default_instance() {
    return reinterpret_cast<const SS_ChangeGame*>(
               &_SS_ChangeGame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(SS_ChangeGame* other);

  // implements Message ----------------------------------------------

  inline SS_ChangeGame* New() const PROTOBUF_FINAL { return New(NULL); }

  SS_ChangeGame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SS_ChangeGame& from);
  void MergeFrom(const SS_ChangeGame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SS_ChangeGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SS_ChangeGame_MsgID MsgID;
  static const MsgID ID =
    SS_ChangeGame_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SS_ChangeGame_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SS_ChangeGame_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SS_ChangeGame_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SS_ChangeGame_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SS_ChangeGame_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SS_ChangeGame_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SS_ChangeGame_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 4;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 4;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string nickname = 5;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 5;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string phone = 16;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 16;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional string phone_type = 17;
  bool has_phone_type() const;
  void clear_phone_type();
  static const int kPhoneTypeFieldNumber = 17;
  const ::std::string& phone_type() const;
  void set_phone_type(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_type(::std::string&& value);
  #endif
  void set_phone_type(const char* value);
  void set_phone_type(const char* value, size_t size);
  ::std::string* mutable_phone_type();
  ::std::string* release_phone_type();
  void set_allocated_phone_type(::std::string* phone_type);

  // optional string version = 18;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 18;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string channel_id = 19;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 19;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // optional string package_name = 20;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 20;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional string imei = 21;
  bool has_imei() const;
  void clear_imei();
  static const int kImeiFieldNumber = 21;
  const ::std::string& imei() const;
  void set_imei(const ::std::string& value);
  #if LANG_CXX11
  void set_imei(::std::string&& value);
  #endif
  void set_imei(const char* value);
  void set_imei(const char* value, size_t size);
  ::std::string* mutable_imei();
  ::std::string* release_imei();
  void set_allocated_imei(::std::string* imei);

  // optional string ip = 22;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 22;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string ip_area = 23;
  bool has_ip_area() const;
  void clear_ip_area();
  static const int kIpAreaFieldNumber = 23;
  const ::std::string& ip_area() const;
  void set_ip_area(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_area(::std::string&& value);
  #endif
  void set_ip_area(const char* value);
  void set_ip_area(const char* value, size_t size);
  ::std::string* mutable_ip_area();
  ::std::string* release_ip_area();
  void set_allocated_ip_area(::std::string* ip_area);

  // optional string create_channel_id = 25;
  bool has_create_channel_id() const;
  void clear_create_channel_id();
  static const int kCreateChannelIdFieldNumber = 25;
  const ::std::string& create_channel_id() const;
  void set_create_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_create_channel_id(::std::string&& value);
  #endif
  void set_create_channel_id(const char* value);
  void set_create_channel_id(const char* value, size_t size);
  ::std::string* mutable_create_channel_id();
  ::std::string* release_create_channel_id();
  void set_allocated_create_channel_id(::std::string* create_channel_id);

  // optional string invite_code = 28;
  bool has_invite_code() const;
  void clear_invite_code();
  static const int kInviteCodeFieldNumber = 28;
  const ::std::string& invite_code() const;
  void set_invite_code(const ::std::string& value);
  #if LANG_CXX11
  void set_invite_code(::std::string&& value);
  #endif
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  ::std::string* mutable_invite_code();
  ::std::string* release_invite_code();
  void set_allocated_invite_code(::std::string* invite_code);

  // optional string alipay_account = 34;
  bool has_alipay_account() const;
  void clear_alipay_account();
  static const int kAlipayAccountFieldNumber = 34;
  const ::std::string& alipay_account() const;
  void set_alipay_account(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account(::std::string&& value);
  #endif
  void set_alipay_account(const char* value);
  void set_alipay_account(const char* value, size_t size);
  ::std::string* mutable_alipay_account();
  ::std::string* release_alipay_account();
  void set_allocated_alipay_account(::std::string* alipay_account);

  // optional string alipay_name = 35;
  bool has_alipay_name() const;
  void clear_alipay_name();
  static const int kAlipayNameFieldNumber = 35;
  const ::std::string& alipay_name() const;
  void set_alipay_name(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name(::std::string&& value);
  #endif
  void set_alipay_name(const char* value);
  void set_alipay_name(const char* value, size_t size);
  ::std::string* mutable_alipay_name();
  ::std::string* release_alipay_name();
  void set_allocated_alipay_name(::std::string* alipay_name);

  // optional .PlayerBaseInfo pb_base_info = 29;
  bool has_pb_base_info() const;
  void clear_pb_base_info();
  static const int kPbBaseInfoFieldNumber = 29;
  const ::PlayerBaseInfo& pb_base_info() const;
  ::PlayerBaseInfo* mutable_pb_base_info();
  ::PlayerBaseInfo* release_pb_base_info();
  void set_allocated_pb_base_info(::PlayerBaseInfo* pb_base_info);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 session_id = 2;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  ::google::protobuf::int32 session_id() const;
  void set_session_id(::google::protobuf::int32 value);

  // optional int32 gate_id = 3;
  bool has_gate_id() const;
  void clear_gate_id();
  static const int kGateIdFieldNumber = 3;
  ::google::protobuf::int32 gate_id() const;
  void set_gate_id(::google::protobuf::int32 value);

  // optional int32 vip = 6;
  bool has_vip() const;
  void clear_vip();
  static const int kVipFieldNumber = 6;
  ::google::protobuf::int32 vip() const;
  void set_vip(::google::protobuf::int32 value);

  // optional int32 login_time = 7;
  bool has_login_time() const;
  void clear_login_time();
  static const int kLoginTimeFieldNumber = 7;
  ::google::protobuf::int32 login_time() const;
  void set_login_time(::google::protobuf::int32 value);

  // optional int32 logout_time = 8;
  bool has_logout_time() const;
  void clear_logout_time();
  static const int kLogoutTimeFieldNumber = 8;
  ::google::protobuf::int32 logout_time() const;
  void set_logout_time(::google::protobuf::int32 value);

  // optional int32 online_award_start_time = 12;
  bool has_online_award_start_time() const;
  void clear_online_award_start_time();
  static const int kOnlineAwardStartTimeFieldNumber = 12;
  ::google::protobuf::int32 online_award_start_time() const;
  void set_online_award_start_time(::google::protobuf::int32 value);

  // optional int32 game_id = 13;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 13;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // optional int32 first_game_type = 14;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 14;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional bool bank_password = 9;
  bool has_bank_password() const;
  void clear_bank_password();
  static const int kBankPasswordFieldNumber = 9;
  bool bank_password() const;
  void set_bank_password(bool value);

  // optional bool bank_login = 10;
  bool has_bank_login() const;
  void clear_bank_login();
  static const int kBankLoginFieldNumber = 10;
  bool bank_login() const;
  void set_bank_login(bool value);

  // optional bool is_guest = 11;
  bool has_is_guest() const;
  void clear_is_guest();
  static const int kIsGuestFieldNumber = 11;
  bool is_guest() const;
  void set_is_guest(bool value);

  // optional bool enable_transfer = 26;
  bool has_enable_transfer() const;
  void clear_enable_transfer();
  static const int kEnableTransferFieldNumber = 26;
  bool enable_transfer() const;
  void set_enable_transfer(bool value);

  // optional int32 second_game_type = 15;
  bool has_second_game_type() const;
  void clear_second_game_type();
  static const int kSecondGameTypeFieldNumber = 15;
  ::google::protobuf::int32 second_game_type() const;
  void set_second_game_type(::google::protobuf::int32 value);

  // optional int32 risk = 24;
  bool has_risk() const;
  void clear_risk();
  static const int kRiskFieldNumber = 24;
  ::google::protobuf::int32 risk() const;
  void set_risk(::google::protobuf::int32 value);

  // optional int32 inviter_guid = 27;
  bool has_inviter_guid() const;
  void clear_inviter_guid();
  static const int kInviterGuidFieldNumber = 27;
  ::google::protobuf::int32 inviter_guid() const;
  void set_inviter_guid(::google::protobuf::int32 value);

  // optional int32 private_room_opt = 30;
  bool has_private_room_opt() const;
  void clear_private_room_opt();
  static const int kPrivateRoomOptFieldNumber = 30;
  ::google::protobuf::int32 private_room_opt() const;
  void set_private_room_opt(::google::protobuf::int32 value);

  // optional int32 owner_guid = 31;
  bool has_owner_guid() const;
  void clear_owner_guid();
  static const int kOwnerGuidFieldNumber = 31;
  ::google::protobuf::int32 owner_guid() const;
  void set_owner_guid(::google::protobuf::int32 value);

  // optional int32 private_room_chair_count = 32;
  bool has_private_room_chair_count() const;
  void clear_private_room_chair_count();
  static const int kPrivateRoomChairCountFieldNumber = 32;
  ::google::protobuf::int32 private_room_chair_count() const;
  void set_private_room_chair_count(::google::protobuf::int32 value);

  // optional int32 private_room_score_type = 33;
  bool has_private_room_score_type() const;
  void clear_private_room_score_type();
  static const int kPrivateRoomScoreTypeFieldNumber = 33;
  ::google::protobuf::int32 private_room_score_type() const;
  void set_private_room_score_type(::google::protobuf::int32 value);

  // optional int32 change_alipay_num = 36;
  bool has_change_alipay_num() const;
  void clear_change_alipay_num();
  static const int kChangeAlipayNumFieldNumber = 36;
  ::google::protobuf::int32 change_alipay_num() const;
  void set_change_alipay_num(::google::protobuf::int32 value);

  // optional int32 ddz_dapai_times = 37;
  bool has_ddz_dapai_times() const;
  void clear_ddz_dapai_times();
  static const int kDdzDapaiTimesFieldNumber = 37;
  ::google::protobuf::int32 ddz_dapai_times() const;
  void set_ddz_dapai_times(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SS_ChangeGame)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_gate_id();
  void clear_has_gate_id();
  void set_has_account();
  void clear_has_account();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_vip();
  void clear_has_vip();
  void set_has_login_time();
  void clear_has_login_time();
  void set_has_logout_time();
  void clear_has_logout_time();
  void set_has_bank_password();
  void clear_has_bank_password();
  void set_has_bank_login();
  void clear_has_bank_login();
  void set_has_is_guest();
  void clear_has_is_guest();
  void set_has_online_award_start_time();
  void clear_has_online_award_start_time();
  void set_has_game_id();
  void clear_has_game_id();
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_second_game_type();
  void clear_has_second_game_type();
  void set_has_phone();
  void clear_has_phone();
  void set_has_phone_type();
  void clear_has_phone_type();
  void set_has_version();
  void clear_has_version();
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_imei();
  void clear_has_imei();
  void set_has_ip();
  void clear_has_ip();
  void set_has_ip_area();
  void clear_has_ip_area();
  void set_has_risk();
  void clear_has_risk();
  void set_has_create_channel_id();
  void clear_has_create_channel_id();
  void set_has_enable_transfer();
  void clear_has_enable_transfer();
  void set_has_inviter_guid();
  void clear_has_inviter_guid();
  void set_has_invite_code();
  void clear_has_invite_code();
  void set_has_pb_base_info();
  void clear_has_pb_base_info();
  void set_has_private_room_opt();
  void clear_has_private_room_opt();
  void set_has_owner_guid();
  void clear_has_owner_guid();
  void set_has_private_room_chair_count();
  void clear_has_private_room_chair_count();
  void set_has_private_room_score_type();
  void clear_has_private_room_score_type();
  void set_has_alipay_account();
  void clear_has_alipay_account();
  void set_has_alipay_name();
  void clear_has_alipay_name();
  void set_has_change_alipay_num();
  void clear_has_change_alipay_num();
  void set_has_ddz_dapai_times();
  void clear_has_ddz_dapai_times();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<2> _has_bits_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr phone_type_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr imei_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr ip_area_;
  ::google::protobuf::internal::ArenaStringPtr create_channel_id_;
  ::google::protobuf::internal::ArenaStringPtr invite_code_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_;
  ::PlayerBaseInfo* pb_base_info_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 session_id_;
  ::google::protobuf::int32 gate_id_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 login_time_;
  ::google::protobuf::int32 logout_time_;
  ::google::protobuf::int32 online_award_start_time_;
  ::google::protobuf::int32 game_id_;
  ::google::protobuf::int32 first_game_type_;
  bool bank_password_;
  bool bank_login_;
  bool is_guest_;
  bool enable_transfer_;
  ::google::protobuf::int32 second_game_type_;
  ::google::protobuf::int32 risk_;
  ::google::protobuf::int32 inviter_guid_;
  ::google::protobuf::int32 private_room_opt_;
  ::google::protobuf::int32 owner_guid_;
  ::google::protobuf::int32 private_room_chair_count_;
  ::google::protobuf::int32 private_room_score_type_;
  ::google::protobuf::int32 change_alipay_num_;
  ::google::protobuf::int32 ddz_dapai_times_;
  mutable int _cached_size_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_ChangeGameResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_ChangeGameResult) */ {
 public:
  LS_ChangeGameResult();
  virtual ~LS_ChangeGameResult();

  LS_ChangeGameResult(const LS_ChangeGameResult& from);

  inline LS_ChangeGameResult& operator=(const LS_ChangeGameResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_ChangeGameResult& default_instance();

  static inline const LS_ChangeGameResult* internal_default_instance() {
    return reinterpret_cast<const LS_ChangeGameResult*>(
               &_LS_ChangeGameResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(LS_ChangeGameResult* other);

  // implements Message ----------------------------------------------

  inline LS_ChangeGameResult* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_ChangeGameResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_ChangeGameResult& from);
  void MergeFrom(const LS_ChangeGameResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_ChangeGameResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_ChangeGameResult_MsgID MsgID;
  static const MsgID ID =
    LS_ChangeGameResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_ChangeGameResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_ChangeGameResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_ChangeGameResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_ChangeGameResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_ChangeGameResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_ChangeGameResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_ChangeGameResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .SS_ChangeGame change_msg = 3;
  bool has_change_msg() const;
  void clear_change_msg();
  static const int kChangeMsgFieldNumber = 3;
  const ::SS_ChangeGame& change_msg() const;
  ::SS_ChangeGame* mutable_change_msg();
  ::SS_ChangeGame* release_change_msg();
  void set_allocated_change_msg(::SS_ChangeGame* change_msg);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional bool success = 2;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // optional int32 game_id = 4;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 4;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_ChangeGameResult)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_success();
  void clear_has_success();
  void set_has_change_msg();
  void clear_has_change_msg();
  void set_has_game_id();
  void clear_has_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::SS_ChangeGame* change_msg_;
  ::google::protobuf::int32 guid_;
  bool success_;
  ::google::protobuf::int32 game_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_SavePlayerMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_SavePlayerMoney) */ {
 public:
  SD_SavePlayerMoney();
  virtual ~SD_SavePlayerMoney();

  SD_SavePlayerMoney(const SD_SavePlayerMoney& from);

  inline SD_SavePlayerMoney& operator=(const SD_SavePlayerMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_SavePlayerMoney& default_instance();

  static inline const SD_SavePlayerMoney* internal_default_instance() {
    return reinterpret_cast<const SD_SavePlayerMoney*>(
               &_SD_SavePlayerMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(SD_SavePlayerMoney* other);

  // implements Message ----------------------------------------------

  inline SD_SavePlayerMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_SavePlayerMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_SavePlayerMoney& from);
  void MergeFrom(const SD_SavePlayerMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_SavePlayerMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_SavePlayerMoney_MsgID MsgID;
  static const MsgID ID =
    SD_SavePlayerMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_SavePlayerMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_SavePlayerMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_SavePlayerMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_SavePlayerMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_SavePlayerMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_SavePlayerMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_SavePlayerMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_SavePlayerMoney)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_SavePlayerBank : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_SavePlayerBank) */ {
 public:
  SD_SavePlayerBank();
  virtual ~SD_SavePlayerBank();

  SD_SavePlayerBank(const SD_SavePlayerBank& from);

  inline SD_SavePlayerBank& operator=(const SD_SavePlayerBank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_SavePlayerBank& default_instance();

  static inline const SD_SavePlayerBank* internal_default_instance() {
    return reinterpret_cast<const SD_SavePlayerBank*>(
               &_SD_SavePlayerBank_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(SD_SavePlayerBank* other);

  // implements Message ----------------------------------------------

  inline SD_SavePlayerBank* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_SavePlayerBank* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_SavePlayerBank& from);
  void MergeFrom(const SD_SavePlayerBank& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_SavePlayerBank* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_SavePlayerBank_MsgID MsgID;
  static const MsgID ID =
    SD_SavePlayerBank_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_SavePlayerBank_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_SavePlayerBank_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_SavePlayerBank_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_SavePlayerBank_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_SavePlayerBank_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_SavePlayerBank_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_SavePlayerBank_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 bank = 2;
  bool has_bank() const;
  void clear_bank();
  static const int kBankFieldNumber = 2;
  ::google::protobuf::int64 bank() const;
  void set_bank(::google::protobuf::int64 value);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_SavePlayerBank)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_bank();
  void clear_has_bank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 bank_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SL_ChangeGameResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SL_ChangeGameResult) */ {
 public:
  SL_ChangeGameResult();
  virtual ~SL_ChangeGameResult();

  SL_ChangeGameResult(const SL_ChangeGameResult& from);

  inline SL_ChangeGameResult& operator=(const SL_ChangeGameResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SL_ChangeGameResult& default_instance();

  static inline const SL_ChangeGameResult* internal_default_instance() {
    return reinterpret_cast<const SL_ChangeGameResult*>(
               &_SL_ChangeGameResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(SL_ChangeGameResult* other);

  // implements Message ----------------------------------------------

  inline SL_ChangeGameResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SL_ChangeGameResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SL_ChangeGameResult& from);
  void MergeFrom(const SL_ChangeGameResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SL_ChangeGameResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SL_ChangeGameResult_MsgID MsgID;
  static const MsgID ID =
    SL_ChangeGameResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SL_ChangeGameResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SL_ChangeGameResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SL_ChangeGameResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SL_ChangeGameResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SL_ChangeGameResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SL_ChangeGameResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SL_ChangeGameResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .SS_ChangeGame change_msg = 3;
  bool has_change_msg() const;
  void clear_change_msg();
  static const int kChangeMsgFieldNumber = 3;
  const ::SS_ChangeGame& change_msg() const;
  ::SS_ChangeGame* mutable_change_msg();
  ::SS_ChangeGame* release_change_msg();
  void set_allocated_change_msg(::SS_ChangeGame* change_msg);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional bool success = 2;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // optional int32 game_id = 4;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 4;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SL_ChangeGameResult)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_success();
  void clear_has_success();
  void set_has_change_msg();
  void clear_has_change_msg();
  void set_has_game_id();
  void clear_has_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::SS_ChangeGame* change_msg_;
  ::google::protobuf::int32 guid_;
  bool success_;
  ::google::protobuf::int32 game_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SS_JoinPrivateRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SS_JoinPrivateRoom) */ {
 public:
  SS_JoinPrivateRoom();
  virtual ~SS_JoinPrivateRoom();

  SS_JoinPrivateRoom(const SS_JoinPrivateRoom& from);

  inline SS_JoinPrivateRoom& operator=(const SS_JoinPrivateRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SS_JoinPrivateRoom& default_instance();

  static inline const SS_JoinPrivateRoom* internal_default_instance() {
    return reinterpret_cast<const SS_JoinPrivateRoom*>(
               &_SS_JoinPrivateRoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(SS_JoinPrivateRoom* other);

  // implements Message ----------------------------------------------

  inline SS_JoinPrivateRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  SS_JoinPrivateRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SS_JoinPrivateRoom& from);
  void MergeFrom(const SS_JoinPrivateRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SS_JoinPrivateRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SS_JoinPrivateRoom_MsgID MsgID;
  static const MsgID ID =
    SS_JoinPrivateRoom_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SS_JoinPrivateRoom_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SS_JoinPrivateRoom_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SS_JoinPrivateRoom_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SS_JoinPrivateRoom_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SS_JoinPrivateRoom_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SS_JoinPrivateRoom_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SS_JoinPrivateRoom_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 owner_guid = 1;
  bool has_owner_guid() const;
  void clear_owner_guid();
  static const int kOwnerGuidFieldNumber = 1;
  ::google::protobuf::int32 owner_guid() const;
  void set_owner_guid(::google::protobuf::int32 value);

  // optional int32 owner_game_id = 2;
  bool has_owner_game_id() const;
  void clear_owner_game_id();
  static const int kOwnerGameIdFieldNumber = 2;
  ::google::protobuf::int32 owner_game_id() const;
  void set_owner_game_id(::google::protobuf::int32 value);

  // optional int32 first_game_type = 3;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 3;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional int32 second_game_type = 4;
  bool has_second_game_type() const;
  void clear_second_game_type();
  static const int kSecondGameTypeFieldNumber = 4;
  ::google::protobuf::int32 second_game_type() const;
  void set_second_game_type(::google::protobuf::int32 value);

  // optional int32 private_room_score_type = 5;
  bool has_private_room_score_type() const;
  void clear_private_room_score_type();
  static const int kPrivateRoomScoreTypeFieldNumber = 5;
  ::google::protobuf::int32 private_room_score_type() const;
  void set_private_room_score_type(::google::protobuf::int32 value);

  // optional int32 guid = 6;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 6;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 game_id = 7;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 7;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SS_JoinPrivateRoom)
 private:
  void set_has_owner_guid();
  void clear_has_owner_guid();
  void set_has_owner_game_id();
  void clear_has_owner_game_id();
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_second_game_type();
  void clear_has_second_game_type();
  void set_has_private_room_score_type();
  void clear_has_private_room_score_type();
  void set_has_guid();
  void clear_has_guid();
  void set_has_game_id();
  void clear_has_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 owner_guid_;
  ::google::protobuf::int32 owner_game_id_;
  ::google::protobuf::int32 first_game_type_;
  ::google::protobuf::int32 second_game_type_;
  ::google::protobuf::int32 private_room_score_type_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 game_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_PrivateRoomLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_PrivateRoomLog) */ {
 public:
  SD_PrivateRoomLog();
  virtual ~SD_PrivateRoomLog();

  SD_PrivateRoomLog(const SD_PrivateRoomLog& from);

  inline SD_PrivateRoomLog& operator=(const SD_PrivateRoomLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_PrivateRoomLog& default_instance();

  static inline const SD_PrivateRoomLog* internal_default_instance() {
    return reinterpret_cast<const SD_PrivateRoomLog*>(
               &_SD_PrivateRoomLog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(SD_PrivateRoomLog* other);

  // implements Message ----------------------------------------------

  inline SD_PrivateRoomLog* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_PrivateRoomLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_PrivateRoomLog& from);
  void MergeFrom(const SD_PrivateRoomLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_PrivateRoomLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_PrivateRoomLog_MsgID MsgID;
  static const MsgID ID =
    SD_PrivateRoomLog_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_PrivateRoomLog_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_PrivateRoomLog_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_PrivateRoomLog_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_PrivateRoomLog_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_PrivateRoomLog_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_PrivateRoomLog_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_PrivateRoomLog_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // optional int32 owner_guid = 2;
  bool has_owner_guid() const;
  void clear_owner_guid();
  static const int kOwnerGuidFieldNumber = 2;
  ::google::protobuf::int32 owner_guid() const;
  void set_owner_guid(::google::protobuf::int32 value);

  // optional int32 first_game_type = 3;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 3;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional int32 chair_max = 4;
  bool has_chair_max() const;
  void clear_chair_max();
  static const int kChairMaxFieldNumber = 4;
  ::google::protobuf::int32 chair_max() const;
  void set_chair_max(::google::protobuf::int32 value);

  // optional int32 chair_count = 5;
  bool has_chair_count() const;
  void clear_chair_count();
  static const int kChairCountFieldNumber = 5;
  ::google::protobuf::int32 chair_count() const;
  void set_chair_count(::google::protobuf::int32 value);

  // optional int32 cell_money = 6;
  bool has_cell_money() const;
  void clear_cell_money();
  static const int kCellMoneyFieldNumber = 6;
  ::google::protobuf::int32 cell_money() const;
  void set_cell_money(::google::protobuf::int32 value);

  // optional int32 room_cost = 7;
  bool has_room_cost() const;
  void clear_room_cost();
  static const int kRoomCostFieldNumber = 7;
  ::google::protobuf::int32 room_cost() const;
  void set_room_cost(::google::protobuf::int32 value);

  // optional int32 money_limit = 8;
  bool has_money_limit() const;
  void clear_money_limit();
  static const int kMoneyLimitFieldNumber = 8;
  ::google::protobuf::int32 money_limit() const;
  void set_money_limit(::google::protobuf::int32 value);

  // optional int32 room_state = 9;
  bool has_room_state() const;
  void clear_room_state();
  static const int kRoomStateFieldNumber = 9;
  ::google::protobuf::int32 room_state() const;
  void set_room_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_PrivateRoomLog)
 private:
  void set_has_room_id();
  void clear_has_room_id();
  void set_has_owner_guid();
  void clear_has_owner_guid();
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_chair_max();
  void clear_has_chair_max();
  void set_has_chair_count();
  void clear_has_chair_count();
  void set_has_cell_money();
  void clear_has_cell_money();
  void set_has_room_cost();
  void clear_has_room_cost();
  void set_has_money_limit();
  void clear_has_money_limit();
  void set_has_room_state();
  void clear_has_room_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 owner_guid_;
  ::google::protobuf::int32 first_game_type_;
  ::google::protobuf::int32 chair_max_;
  ::google::protobuf::int32 chair_count_;
  ::google::protobuf::int32 cell_money_;
  ::google::protobuf::int32 room_cost_;
  ::google::protobuf::int32 money_limit_;
  ::google::protobuf::int32 room_state_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_FilishPrivateRoomLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_FilishPrivateRoomLog) */ {
 public:
  SD_FilishPrivateRoomLog();
  virtual ~SD_FilishPrivateRoomLog();

  SD_FilishPrivateRoomLog(const SD_FilishPrivateRoomLog& from);

  inline SD_FilishPrivateRoomLog& operator=(const SD_FilishPrivateRoomLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_FilishPrivateRoomLog& default_instance();

  static inline const SD_FilishPrivateRoomLog* internal_default_instance() {
    return reinterpret_cast<const SD_FilishPrivateRoomLog*>(
               &_SD_FilishPrivateRoomLog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(SD_FilishPrivateRoomLog* other);

  // implements Message ----------------------------------------------

  inline SD_FilishPrivateRoomLog* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_FilishPrivateRoomLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_FilishPrivateRoomLog& from);
  void MergeFrom(const SD_FilishPrivateRoomLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_FilishPrivateRoomLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_FilishPrivateRoomLog_MsgID MsgID;
  static const MsgID ID =
    SD_FilishPrivateRoomLog_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_FilishPrivateRoomLog_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_FilishPrivateRoomLog_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_FilishPrivateRoomLog_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_FilishPrivateRoomLog_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_FilishPrivateRoomLog_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_FilishPrivateRoomLog_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_FilishPrivateRoomLog_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // optional int32 room_state = 2;
  bool has_room_state() const;
  void clear_room_state();
  static const int kRoomStateFieldNumber = 2;
  ::google::protobuf::int32 room_state() const;
  void set_room_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_FilishPrivateRoomLog)
 private:
  void set_has_room_id();
  void clear_has_room_id();
  void set_has_room_state();
  void clear_has_room_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 room_state_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_StartPrivateRoomLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_StartPrivateRoomLog) */ {
 public:
  SD_StartPrivateRoomLog();
  virtual ~SD_StartPrivateRoomLog();

  SD_StartPrivateRoomLog(const SD_StartPrivateRoomLog& from);

  inline SD_StartPrivateRoomLog& operator=(const SD_StartPrivateRoomLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_StartPrivateRoomLog& default_instance();

  static inline const SD_StartPrivateRoomLog* internal_default_instance() {
    return reinterpret_cast<const SD_StartPrivateRoomLog*>(
               &_SD_StartPrivateRoomLog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(SD_StartPrivateRoomLog* other);

  // implements Message ----------------------------------------------

  inline SD_StartPrivateRoomLog* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_StartPrivateRoomLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_StartPrivateRoomLog& from);
  void MergeFrom(const SD_StartPrivateRoomLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_StartPrivateRoomLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_StartPrivateRoomLog_MsgID MsgID;
  static const MsgID ID =
    SD_StartPrivateRoomLog_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_StartPrivateRoomLog_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_StartPrivateRoomLog_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_StartPrivateRoomLog_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_StartPrivateRoomLog_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_StartPrivateRoomLog_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_StartPrivateRoomLog_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_StartPrivateRoomLog_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 player_guid = 2;
  int player_guid_size() const;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 2;
  ::google::protobuf::int32 player_guid(int index) const;
  void set_player_guid(int index, ::google::protobuf::int32 value);
  void add_player_guid(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_guid();

  // optional int32 room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_StartPrivateRoomLog)
 private:
  void set_has_room_id();
  void clear_has_room_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_guid_;
  ::google::protobuf::int32 room_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_LoadAndroidData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_LoadAndroidData) */ {
 public:
  SD_LoadAndroidData();
  virtual ~SD_LoadAndroidData();

  SD_LoadAndroidData(const SD_LoadAndroidData& from);

  inline SD_LoadAndroidData& operator=(const SD_LoadAndroidData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_LoadAndroidData& default_instance();

  static inline const SD_LoadAndroidData* internal_default_instance() {
    return reinterpret_cast<const SD_LoadAndroidData*>(
               &_SD_LoadAndroidData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(SD_LoadAndroidData* other);

  // implements Message ----------------------------------------------

  inline SD_LoadAndroidData* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_LoadAndroidData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_LoadAndroidData& from);
  void MergeFrom(const SD_LoadAndroidData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_LoadAndroidData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_LoadAndroidData_MsgID MsgID;
  static const MsgID ID =
    SD_LoadAndroidData_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_LoadAndroidData_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_LoadAndroidData_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_LoadAndroidData_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_LoadAndroidData_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_LoadAndroidData_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_LoadAndroidData_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_LoadAndroidData_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 opt_type = 1;
  bool has_opt_type() const;
  void clear_opt_type();
  static const int kOptTypeFieldNumber = 1;
  ::google::protobuf::int32 opt_type() const;
  void set_opt_type(::google::protobuf::int32 value);

  // optional int32 room_id = 2;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // optional int32 guid = 3;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 count = 4;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_LoadAndroidData)
 private:
  void set_has_opt_type();
  void clear_has_opt_type();
  void set_has_room_id();
  void clear_has_room_id();
  void set_has_guid();
  void clear_has_guid();
  void set_has_count();
  void clear_has_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 opt_type_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 count_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_LoadAndroidData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_LoadAndroidData) */ {
 public:
  DS_LoadAndroidData();
  virtual ~DS_LoadAndroidData();

  DS_LoadAndroidData(const DS_LoadAndroidData& from);

  inline DS_LoadAndroidData& operator=(const DS_LoadAndroidData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_LoadAndroidData& default_instance();

  static inline const DS_LoadAndroidData* internal_default_instance() {
    return reinterpret_cast<const DS_LoadAndroidData*>(
               &_DS_LoadAndroidData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(DS_LoadAndroidData* other);

  // implements Message ----------------------------------------------

  inline DS_LoadAndroidData* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_LoadAndroidData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_LoadAndroidData& from);
  void MergeFrom(const DS_LoadAndroidData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_LoadAndroidData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_LoadAndroidData_MsgID MsgID;
  static const MsgID ID =
    DS_LoadAndroidData_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_LoadAndroidData_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_LoadAndroidData_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_LoadAndroidData_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_LoadAndroidData_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_LoadAndroidData_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_LoadAndroidData_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_LoadAndroidData_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .AndroidInfo android_list = 3;
  int android_list_size() const;
  void clear_android_list();
  static const int kAndroidListFieldNumber = 3;
  const ::AndroidInfo& android_list(int index) const;
  ::AndroidInfo* mutable_android_list(int index);
  ::AndroidInfo* add_android_list();
  ::google::protobuf::RepeatedPtrField< ::AndroidInfo >*
      mutable_android_list();
  const ::google::protobuf::RepeatedPtrField< ::AndroidInfo >&
      android_list() const;

  // optional int32 opt_type = 1;
  bool has_opt_type() const;
  void clear_opt_type();
  static const int kOptTypeFieldNumber = 1;
  ::google::protobuf::int32 opt_type() const;
  void set_opt_type(::google::protobuf::int32 value);

  // optional int32 room_id = 2;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_LoadAndroidData)
 private:
  void set_has_opt_type();
  void clear_has_opt_type();
  void set_has_room_id();
  void clear_has_room_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::AndroidInfo > android_list_;
  ::google::protobuf::int32 opt_type_;
  ::google::protobuf::int32 room_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Msg_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Msg_Data) */ {
 public:
  Msg_Data();
  virtual ~Msg_Data();

  Msg_Data(const Msg_Data& from);

  inline Msg_Data& operator=(const Msg_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_Data& default_instance();

  static inline const Msg_Data* internal_default_instance() {
    return reinterpret_cast<const Msg_Data*>(
               &_Msg_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(Msg_Data* other);

  // implements Message ----------------------------------------------

  inline Msg_Data* New() const PROTOBUF_FINAL { return New(NULL); }

  Msg_Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Msg_Data& from);
  void MergeFrom(const Msg_Data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Msg_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Msg_DataInfo pb_msg_data_info = 1;
  int pb_msg_data_info_size() const;
  void clear_pb_msg_data_info();
  static const int kPbMsgDataInfoFieldNumber = 1;
  const ::Msg_DataInfo& pb_msg_data_info(int index) const;
  ::Msg_DataInfo* mutable_pb_msg_data_info(int index);
  ::Msg_DataInfo* add_pb_msg_data_info();
  ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >*
      mutable_pb_msg_data_info();
  const ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >&
      pb_msg_data_info() const;

  // @@protoc_insertion_point(class_scope:Msg_Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo > pb_msg_data_info_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_QueryPlayerMsgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_QueryPlayerMsgData) */ {
 public:
  DS_QueryPlayerMsgData();
  virtual ~DS_QueryPlayerMsgData();

  DS_QueryPlayerMsgData(const DS_QueryPlayerMsgData& from);

  inline DS_QueryPlayerMsgData& operator=(const DS_QueryPlayerMsgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_QueryPlayerMsgData& default_instance();

  static inline const DS_QueryPlayerMsgData* internal_default_instance() {
    return reinterpret_cast<const DS_QueryPlayerMsgData*>(
               &_DS_QueryPlayerMsgData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(DS_QueryPlayerMsgData* other);

  // implements Message ----------------------------------------------

  inline DS_QueryPlayerMsgData* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_QueryPlayerMsgData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_QueryPlayerMsgData& from);
  void MergeFrom(const DS_QueryPlayerMsgData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_QueryPlayerMsgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_QueryPlayerMsgData_MsgID MsgID;
  static const MsgID ID =
    DS_QueryPlayerMsgData_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_QueryPlayerMsgData_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_QueryPlayerMsgData_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_QueryPlayerMsgData_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_QueryPlayerMsgData_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_QueryPlayerMsgData_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_QueryPlayerMsgData_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_QueryPlayerMsgData_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .Msg_Data pb_msg_data = 2;
  bool has_pb_msg_data() const;
  void clear_pb_msg_data();
  static const int kPbMsgDataFieldNumber = 2;
  const ::Msg_Data& pb_msg_data() const;
  ::Msg_Data* mutable_pb_msg_data();
  ::Msg_Data* release_pb_msg_data();
  void set_allocated_pb_msg_data(::Msg_Data* pb_msg_data);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional bool first = 3;
  bool has_first() const;
  void clear_first();
  static const int kFirstFieldNumber = 3;
  bool first() const;
  void set_first(bool value);

  // @@protoc_insertion_point(class_scope:DS_QueryPlayerMsgData)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_pb_msg_data();
  void clear_has_pb_msg_data();
  void set_has_first();
  void clear_has_first();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Msg_Data* pb_msg_data_;
  ::google::protobuf::int32 guid_;
  bool first_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_QueryPlayerMsgData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_QueryPlayerMsgData) */ {
 public:
  SD_QueryPlayerMsgData();
  virtual ~SD_QueryPlayerMsgData();

  SD_QueryPlayerMsgData(const SD_QueryPlayerMsgData& from);

  inline SD_QueryPlayerMsgData& operator=(const SD_QueryPlayerMsgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_QueryPlayerMsgData& default_instance();

  static inline const SD_QueryPlayerMsgData* internal_default_instance() {
    return reinterpret_cast<const SD_QueryPlayerMsgData*>(
               &_SD_QueryPlayerMsgData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(SD_QueryPlayerMsgData* other);

  // implements Message ----------------------------------------------

  inline SD_QueryPlayerMsgData* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_QueryPlayerMsgData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_QueryPlayerMsgData& from);
  void MergeFrom(const SD_QueryPlayerMsgData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_QueryPlayerMsgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_QueryPlayerMsgData_MsgID MsgID;
  static const MsgID ID =
    SD_QueryPlayerMsgData_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_QueryPlayerMsgData_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_QueryPlayerMsgData_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_QueryPlayerMsgData_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_QueryPlayerMsgData_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_QueryPlayerMsgData_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_QueryPlayerMsgData_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_QueryPlayerMsgData_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_QueryPlayerMsgData)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_SetMsgReadFlag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_SetMsgReadFlag) */ {
 public:
  SD_SetMsgReadFlag();
  virtual ~SD_SetMsgReadFlag();

  SD_SetMsgReadFlag(const SD_SetMsgReadFlag& from);

  inline SD_SetMsgReadFlag& operator=(const SD_SetMsgReadFlag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_SetMsgReadFlag& default_instance();

  static inline const SD_SetMsgReadFlag* internal_default_instance() {
    return reinterpret_cast<const SD_SetMsgReadFlag*>(
               &_SD_SetMsgReadFlag_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(SD_SetMsgReadFlag* other);

  // implements Message ----------------------------------------------

  inline SD_SetMsgReadFlag* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_SetMsgReadFlag* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_SetMsgReadFlag& from);
  void MergeFrom(const SD_SetMsgReadFlag& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_SetMsgReadFlag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_SetMsgReadFlag_MsgID MsgID;
  static const MsgID ID =
    SD_SetMsgReadFlag_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_SetMsgReadFlag_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_SetMsgReadFlag_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_SetMsgReadFlag_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_SetMsgReadFlag_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_SetMsgReadFlag_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_SetMsgReadFlag_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_SetMsgReadFlag_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 msg_type = 3;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 3;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_SetMsgReadFlag)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_id();
  void clear_has_id();
  void set_has_msg_type();
  void clear_has_msg_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 msg_type_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Marquee_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Marquee_Data) */ {
 public:
  Marquee_Data();
  virtual ~Marquee_Data();

  Marquee_Data(const Marquee_Data& from);

  inline Marquee_Data& operator=(const Marquee_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Marquee_Data& default_instance();

  static inline const Marquee_Data* internal_default_instance() {
    return reinterpret_cast<const Marquee_Data*>(
               &_Marquee_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(Marquee_Data* other);

  // implements Message ----------------------------------------------

  inline Marquee_Data* New() const PROTOBUF_FINAL { return New(NULL); }

  Marquee_Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Marquee_Data& from);
  void MergeFrom(const Marquee_Data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Marquee_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Marquee pb_msg_data_info = 1;
  int pb_msg_data_info_size() const;
  void clear_pb_msg_data_info();
  static const int kPbMsgDataInfoFieldNumber = 1;
  const ::Marquee& pb_msg_data_info(int index) const;
  ::Marquee* mutable_pb_msg_data_info(int index);
  ::Marquee* add_pb_msg_data_info();
  ::google::protobuf::RepeatedPtrField< ::Marquee >*
      mutable_pb_msg_data_info();
  const ::google::protobuf::RepeatedPtrField< ::Marquee >&
      pb_msg_data_info() const;

  // @@protoc_insertion_point(class_scope:Marquee_Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Marquee > pb_msg_data_info_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_QueryPlayerMarquee : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_QueryPlayerMarquee) */ {
 public:
  DS_QueryPlayerMarquee();
  virtual ~DS_QueryPlayerMarquee();

  DS_QueryPlayerMarquee(const DS_QueryPlayerMarquee& from);

  inline DS_QueryPlayerMarquee& operator=(const DS_QueryPlayerMarquee& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_QueryPlayerMarquee& default_instance();

  static inline const DS_QueryPlayerMarquee* internal_default_instance() {
    return reinterpret_cast<const DS_QueryPlayerMarquee*>(
               &_DS_QueryPlayerMarquee_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(DS_QueryPlayerMarquee* other);

  // implements Message ----------------------------------------------

  inline DS_QueryPlayerMarquee* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_QueryPlayerMarquee* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_QueryPlayerMarquee& from);
  void MergeFrom(const DS_QueryPlayerMarquee& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_QueryPlayerMarquee* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_QueryPlayerMarquee_MsgID MsgID;
  static const MsgID ID =
    DS_QueryPlayerMarquee_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_QueryPlayerMarquee_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_QueryPlayerMarquee_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_QueryPlayerMarquee_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_QueryPlayerMarquee_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_QueryPlayerMarquee_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_QueryPlayerMarquee_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_QueryPlayerMarquee_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .Marquee_Data pb_msg_data = 2;
  bool has_pb_msg_data() const;
  void clear_pb_msg_data();
  static const int kPbMsgDataFieldNumber = 2;
  const ::Marquee_Data& pb_msg_data() const;
  ::Marquee_Data* mutable_pb_msg_data();
  ::Marquee_Data* release_pb_msg_data();
  void set_allocated_pb_msg_data(::Marquee_Data* pb_msg_data);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional bool first = 3;
  bool has_first() const;
  void clear_first();
  static const int kFirstFieldNumber = 3;
  bool first() const;
  void set_first(bool value);

  // @@protoc_insertion_point(class_scope:DS_QueryPlayerMarquee)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_pb_msg_data();
  void clear_has_pb_msg_data();
  void set_has_first();
  void clear_has_first();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Marquee_Data* pb_msg_data_;
  ::google::protobuf::int32 guid_;
  bool first_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_QueryPlayerMarquee : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_QueryPlayerMarquee) */ {
 public:
  SD_QueryPlayerMarquee();
  virtual ~SD_QueryPlayerMarquee();

  SD_QueryPlayerMarquee(const SD_QueryPlayerMarquee& from);

  inline SD_QueryPlayerMarquee& operator=(const SD_QueryPlayerMarquee& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_QueryPlayerMarquee& default_instance();

  static inline const SD_QueryPlayerMarquee* internal_default_instance() {
    return reinterpret_cast<const SD_QueryPlayerMarquee*>(
               &_SD_QueryPlayerMarquee_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(SD_QueryPlayerMarquee* other);

  // implements Message ----------------------------------------------

  inline SD_QueryPlayerMarquee* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_QueryPlayerMarquee* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_QueryPlayerMarquee& from);
  void MergeFrom(const SD_QueryPlayerMarquee& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_QueryPlayerMarquee* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_QueryPlayerMarquee_MsgID MsgID;
  static const MsgID ID =
    SD_QueryPlayerMarquee_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_QueryPlayerMarquee_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_QueryPlayerMarquee_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_QueryPlayerMarquee_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_QueryPlayerMarquee_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_QueryPlayerMarquee_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_QueryPlayerMarquee_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_QueryPlayerMarquee_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_QueryPlayerMarquee)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_QueryPlayerInviteReward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_QueryPlayerInviteReward) */ {
 public:
  DS_QueryPlayerInviteReward();
  virtual ~DS_QueryPlayerInviteReward();

  DS_QueryPlayerInviteReward(const DS_QueryPlayerInviteReward& from);

  inline DS_QueryPlayerInviteReward& operator=(const DS_QueryPlayerInviteReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_QueryPlayerInviteReward& default_instance();

  static inline const DS_QueryPlayerInviteReward* internal_default_instance() {
    return reinterpret_cast<const DS_QueryPlayerInviteReward*>(
               &_DS_QueryPlayerInviteReward_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(DS_QueryPlayerInviteReward* other);

  // implements Message ----------------------------------------------

  inline DS_QueryPlayerInviteReward* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_QueryPlayerInviteReward* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_QueryPlayerInviteReward& from);
  void MergeFrom(const DS_QueryPlayerInviteReward& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_QueryPlayerInviteReward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_QueryPlayerInviteReward_MsgID MsgID;
  static const MsgID ID =
    DS_QueryPlayerInviteReward_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_QueryPlayerInviteReward_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_QueryPlayerInviteReward_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_QueryPlayerInviteReward_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_QueryPlayerInviteReward_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_QueryPlayerInviteReward_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_QueryPlayerInviteReward_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_QueryPlayerInviteReward_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 reward = 2;
  bool has_reward() const;
  void clear_reward();
  static const int kRewardFieldNumber = 2;
  ::google::protobuf::int32 reward() const;
  void set_reward(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_QueryPlayerInviteReward)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_reward();
  void clear_has_reward();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 reward_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_QueryPlayerInviteReward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_QueryPlayerInviteReward) */ {
 public:
  SD_QueryPlayerInviteReward();
  virtual ~SD_QueryPlayerInviteReward();

  SD_QueryPlayerInviteReward(const SD_QueryPlayerInviteReward& from);

  inline SD_QueryPlayerInviteReward& operator=(const SD_QueryPlayerInviteReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_QueryPlayerInviteReward& default_instance();

  static inline const SD_QueryPlayerInviteReward* internal_default_instance() {
    return reinterpret_cast<const SD_QueryPlayerInviteReward*>(
               &_SD_QueryPlayerInviteReward_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(SD_QueryPlayerInviteReward* other);

  // implements Message ----------------------------------------------

  inline SD_QueryPlayerInviteReward* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_QueryPlayerInviteReward* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_QueryPlayerInviteReward& from);
  void MergeFrom(const SD_QueryPlayerInviteReward& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_QueryPlayerInviteReward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_QueryPlayerInviteReward_MsgID MsgID;
  static const MsgID ID =
    SD_QueryPlayerInviteReward_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_QueryPlayerInviteReward_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_QueryPlayerInviteReward_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_QueryPlayerInviteReward_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_QueryPlayerInviteReward_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_QueryPlayerInviteReward_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_QueryPlayerInviteReward_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_QueryPlayerInviteReward_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_QueryPlayerInviteReward)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DBChannelInviteConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBChannelInviteConfig) */ {
 public:
  DBChannelInviteConfig();
  virtual ~DBChannelInviteConfig();

  DBChannelInviteConfig(const DBChannelInviteConfig& from);

  inline DBChannelInviteConfig& operator=(const DBChannelInviteConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBChannelInviteConfig& default_instance();

  static inline const DBChannelInviteConfig* internal_default_instance() {
    return reinterpret_cast<const DBChannelInviteConfig*>(
               &_DBChannelInviteConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(DBChannelInviteConfig* other);

  // implements Message ----------------------------------------------

  inline DBChannelInviteConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  DBChannelInviteConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DBChannelInviteConfig& from);
  void MergeFrom(const DBChannelInviteConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DBChannelInviteConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string channel_id = 1;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // optional int32 is_invite_open = 2;
  bool has_is_invite_open() const;
  void clear_is_invite_open();
  static const int kIsInviteOpenFieldNumber = 2;
  ::google::protobuf::int32 is_invite_open() const;
  void set_is_invite_open(::google::protobuf::int32 value);

  // optional int32 tax_rate = 3;
  bool has_tax_rate() const;
  void clear_tax_rate();
  static const int kTaxRateFieldNumber = 3;
  ::google::protobuf::int32 tax_rate() const;
  void set_tax_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DBChannelInviteConfig)
 private:
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_is_invite_open();
  void clear_has_is_invite_open();
  void set_has_tax_rate();
  void clear_has_tax_rate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::int32 is_invite_open_;
  ::google::protobuf::int32 tax_rate_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_QueryChannelInviteCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_QueryChannelInviteCfg) */ {
 public:
  DS_QueryChannelInviteCfg();
  virtual ~DS_QueryChannelInviteCfg();

  DS_QueryChannelInviteCfg(const DS_QueryChannelInviteCfg& from);

  inline DS_QueryChannelInviteCfg& operator=(const DS_QueryChannelInviteCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_QueryChannelInviteCfg& default_instance();

  static inline const DS_QueryChannelInviteCfg* internal_default_instance() {
    return reinterpret_cast<const DS_QueryChannelInviteCfg*>(
               &_DS_QueryChannelInviteCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(DS_QueryChannelInviteCfg* other);

  // implements Message ----------------------------------------------

  inline DS_QueryChannelInviteCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_QueryChannelInviteCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_QueryChannelInviteCfg& from);
  void MergeFrom(const DS_QueryChannelInviteCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_QueryChannelInviteCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_QueryChannelInviteCfg_MsgID MsgID;
  static const MsgID ID =
    DS_QueryChannelInviteCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_QueryChannelInviteCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_QueryChannelInviteCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_QueryChannelInviteCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_QueryChannelInviteCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_QueryChannelInviteCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_QueryChannelInviteCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_QueryChannelInviteCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .DBChannelInviteConfig cfg = 1;
  int cfg_size() const;
  void clear_cfg();
  static const int kCfgFieldNumber = 1;
  const ::DBChannelInviteConfig& cfg(int index) const;
  ::DBChannelInviteConfig* mutable_cfg(int index);
  ::DBChannelInviteConfig* add_cfg();
  ::google::protobuf::RepeatedPtrField< ::DBChannelInviteConfig >*
      mutable_cfg();
  const ::google::protobuf::RepeatedPtrField< ::DBChannelInviteConfig >&
      cfg() const;

  // @@protoc_insertion_point(class_scope:DS_QueryChannelInviteCfg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DBChannelInviteConfig > cfg_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_QueryChannelInviteCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_QueryChannelInviteCfg) */ {
 public:
  SD_QueryChannelInviteCfg();
  virtual ~SD_QueryChannelInviteCfg();

  SD_QueryChannelInviteCfg(const SD_QueryChannelInviteCfg& from);

  inline SD_QueryChannelInviteCfg& operator=(const SD_QueryChannelInviteCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_QueryChannelInviteCfg& default_instance();

  static inline const SD_QueryChannelInviteCfg* internal_default_instance() {
    return reinterpret_cast<const SD_QueryChannelInviteCfg*>(
               &_SD_QueryChannelInviteCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(SD_QueryChannelInviteCfg* other);

  // implements Message ----------------------------------------------

  inline SD_QueryChannelInviteCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_QueryChannelInviteCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_QueryChannelInviteCfg& from);
  void MergeFrom(const SD_QueryChannelInviteCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_QueryChannelInviteCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_QueryChannelInviteCfg_MsgID MsgID;
  static const MsgID ID =
    SD_QueryChannelInviteCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_QueryChannelInviteCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_QueryChannelInviteCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_QueryChannelInviteCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_QueryChannelInviteCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_QueryChannelInviteCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_QueryChannelInviteCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_QueryChannelInviteCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SD_QueryChannelInviteCfg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_SavePlayerOxData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_SavePlayerOxData) */ {
 public:
  SD_SavePlayerOxData();
  virtual ~SD_SavePlayerOxData();

  SD_SavePlayerOxData(const SD_SavePlayerOxData& from);

  inline SD_SavePlayerOxData& operator=(const SD_SavePlayerOxData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_SavePlayerOxData& default_instance();

  static inline const SD_SavePlayerOxData* internal_default_instance() {
    return reinterpret_cast<const SD_SavePlayerOxData*>(
               &_SD_SavePlayerOxData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(SD_SavePlayerOxData* other);

  // implements Message ----------------------------------------------

  inline SD_SavePlayerOxData* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_SavePlayerOxData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_SavePlayerOxData& from);
  void MergeFrom(const SD_SavePlayerOxData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_SavePlayerOxData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_SavePlayerOxData_MsgID MsgID;
  static const MsgID ID =
    SD_SavePlayerOxData_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_SavePlayerOxData_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_SavePlayerOxData_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_SavePlayerOxData_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_SavePlayerOxData_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_SavePlayerOxData_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_SavePlayerOxData_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_SavePlayerOxData_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string nickname = 5;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 5;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 is_android = 2;
  bool has_is_android() const;
  void clear_is_android();
  static const int kIsAndroidFieldNumber = 2;
  ::google::protobuf::int32 is_android() const;
  void set_is_android(::google::protobuf::int32 value);

  // optional int32 table_id = 3;
  bool has_table_id() const;
  void clear_table_id();
  static const int kTableIdFieldNumber = 3;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // optional int32 banker_id = 4;
  bool has_banker_id() const;
  void clear_banker_id();
  static const int kBankerIdFieldNumber = 4;
  ::google::protobuf::int32 banker_id() const;
  void set_banker_id(::google::protobuf::int32 value);

  // optional int32 money = 6;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 6;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // optional int32 win_money = 7;
  bool has_win_money() const;
  void clear_win_money();
  static const int kWinMoneyFieldNumber = 7;
  ::google::protobuf::int32 win_money() const;
  void set_win_money(::google::protobuf::int32 value);

  // optional int32 bet_money = 8;
  bool has_bet_money() const;
  void clear_bet_money();
  static const int kBetMoneyFieldNumber = 8;
  ::google::protobuf::int32 bet_money() const;
  void set_bet_money(::google::protobuf::int32 value);

  // optional int32 tax = 9;
  bool has_tax() const;
  void clear_tax();
  static const int kTaxFieldNumber = 9;
  ::google::protobuf::int32 tax() const;
  void set_tax(::google::protobuf::int32 value);

  // optional int32 curtime = 10;
  bool has_curtime() const;
  void clear_curtime();
  static const int kCurtimeFieldNumber = 10;
  ::google::protobuf::int32 curtime() const;
  void set_curtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_SavePlayerOxData)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_is_android();
  void clear_has_is_android();
  void set_has_table_id();
  void clear_has_table_id();
  void set_has_banker_id();
  void clear_has_banker_id();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_money();
  void clear_has_money();
  void set_has_win_money();
  void clear_has_win_money();
  void set_has_bet_money();
  void clear_has_bet_money();
  void set_has_tax();
  void clear_has_tax();
  void set_has_curtime();
  void clear_has_curtime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 is_android_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 banker_id_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 win_money_;
  ::google::protobuf::int32 bet_money_;
  ::google::protobuf::int32 tax_;
  ::google::protobuf::int32 curtime_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_QueryOxConfigData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_QueryOxConfigData) */ {
 public:
  SD_QueryOxConfigData();
  virtual ~SD_QueryOxConfigData();

  SD_QueryOxConfigData(const SD_QueryOxConfigData& from);

  inline SD_QueryOxConfigData& operator=(const SD_QueryOxConfigData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_QueryOxConfigData& default_instance();

  static inline const SD_QueryOxConfigData* internal_default_instance() {
    return reinterpret_cast<const SD_QueryOxConfigData*>(
               &_SD_QueryOxConfigData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(SD_QueryOxConfigData* other);

  // implements Message ----------------------------------------------

  inline SD_QueryOxConfigData* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_QueryOxConfigData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_QueryOxConfigData& from);
  void MergeFrom(const SD_QueryOxConfigData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_QueryOxConfigData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_QueryOxConfigData_MsgID MsgID;
  static const MsgID ID =
    SD_QueryOxConfigData_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_QueryOxConfigData_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_QueryOxConfigData_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_QueryOxConfigData_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_QueryOxConfigData_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_QueryOxConfigData_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_QueryOxConfigData_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_QueryOxConfigData_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 cur_time = 1;
  bool has_cur_time() const;
  void clear_cur_time();
  static const int kCurTimeFieldNumber = 1;
  ::google::protobuf::int64 cur_time() const;
  void set_cur_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SD_QueryOxConfigData)
 private:
  void set_has_cur_time();
  void clear_has_cur_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 cur_time_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_OxConfigData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_OxConfigData) */ {
 public:
  DS_OxConfigData();
  virtual ~DS_OxConfigData();

  DS_OxConfigData(const DS_OxConfigData& from);

  inline DS_OxConfigData& operator=(const DS_OxConfigData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_OxConfigData& default_instance();

  static inline const DS_OxConfigData* internal_default_instance() {
    return reinterpret_cast<const DS_OxConfigData*>(
               &_DS_OxConfigData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(DS_OxConfigData* other);

  // implements Message ----------------------------------------------

  inline DS_OxConfigData* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_OxConfigData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_OxConfigData& from);
  void MergeFrom(const DS_OxConfigData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_OxConfigData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_OxConfigData_MsgID MsgID;
  static const MsgID ID =
    DS_OxConfigData_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_OxConfigData_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_OxConfigData_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_OxConfigData_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_OxConfigData_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_OxConfigData_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_OxConfigData_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_OxConfigData_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string BasicChip = 16;
  bool has_basicchip() const;
  void clear_basicchip();
  static const int kBasicChipFieldNumber = 16;
  const ::std::string& basicchip() const;
  void set_basicchip(const ::std::string& value);
  #if LANG_CXX11
  void set_basicchip(::std::string&& value);
  #endif
  void set_basicchip(const char* value);
  void set_basicchip(const char* value, size_t size);
  ::std::string* mutable_basicchip();
  ::std::string* release_basicchip();
  void set_allocated_basicchip(::std::string* basicchip);

  // optional int32 FreeTime = 1;
  bool has_freetime() const;
  void clear_freetime();
  static const int kFreeTimeFieldNumber = 1;
  ::google::protobuf::int32 freetime() const;
  void set_freetime(::google::protobuf::int32 value);

  // optional int32 BetTime = 2;
  bool has_bettime() const;
  void clear_bettime();
  static const int kBetTimeFieldNumber = 2;
  ::google::protobuf::int32 bettime() const;
  void set_bettime(::google::protobuf::int32 value);

  // optional int32 EndTime = 3;
  bool has_endtime() const;
  void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  ::google::protobuf::int32 endtime() const;
  void set_endtime(::google::protobuf::int32 value);

  // optional int32 MustWinCoeff = 4;
  bool has_mustwincoeff() const;
  void clear_mustwincoeff();
  static const int kMustWinCoeffFieldNumber = 4;
  ::google::protobuf::int32 mustwincoeff() const;
  void set_mustwincoeff(::google::protobuf::int32 value);

  // optional int64 BankerMoneyLimit = 5;
  bool has_bankermoneylimit() const;
  void clear_bankermoneylimit();
  static const int kBankerMoneyLimitFieldNumber = 5;
  ::google::protobuf::int64 bankermoneylimit() const;
  void set_bankermoneylimit(::google::protobuf::int64 value);

  // optional int32 SystemBankerSwitch = 6;
  bool has_systembankerswitch() const;
  void clear_systembankerswitch();
  static const int kSystemBankerSwitchFieldNumber = 6;
  ::google::protobuf::int32 systembankerswitch() const;
  void set_systembankerswitch(::google::protobuf::int32 value);

  // optional int32 BankerCount = 7;
  bool has_bankercount() const;
  void clear_bankercount();
  static const int kBankerCountFieldNumber = 7;
  ::google::protobuf::int32 bankercount() const;
  void set_bankercount(::google::protobuf::int32 value);

  // optional int64 RobotBankerInitUid = 8;
  bool has_robotbankerinituid() const;
  void clear_robotbankerinituid();
  static const int kRobotBankerInitUidFieldNumber = 8;
  ::google::protobuf::int64 robotbankerinituid() const;
  void set_robotbankerinituid(::google::protobuf::int64 value);

  // optional int64 RobotBankerInitMoney = 9;
  bool has_robotbankerinitmoney() const;
  void clear_robotbankerinitmoney();
  static const int kRobotBankerInitMoneyFieldNumber = 9;
  ::google::protobuf::int64 robotbankerinitmoney() const;
  void set_robotbankerinitmoney(::google::protobuf::int64 value);

  // optional int64 BetRobotInitUid = 11;
  bool has_betrobotinituid() const;
  void clear_betrobotinituid();
  static const int kBetRobotInitUidFieldNumber = 11;
  ::google::protobuf::int64 betrobotinituid() const;
  void set_betrobotinituid(::google::protobuf::int64 value);

  // optional int32 BetRobotSwitch = 10;
  bool has_betrobotswitch() const;
  void clear_betrobotswitch();
  static const int kBetRobotSwitchFieldNumber = 10;
  ::google::protobuf::int32 betrobotswitch() const;
  void set_betrobotswitch(::google::protobuf::int32 value);

  // optional int32 BetRobotNumControl = 13;
  bool has_betrobotnumcontrol() const;
  void clear_betrobotnumcontrol();
  static const int kBetRobotNumControlFieldNumber = 13;
  ::google::protobuf::int32 betrobotnumcontrol() const;
  void set_betrobotnumcontrol(::google::protobuf::int32 value);

  // optional int64 BetRobotInitMoney = 12;
  bool has_betrobotinitmoney() const;
  void clear_betrobotinitmoney();
  static const int kBetRobotInitMoneyFieldNumber = 12;
  ::google::protobuf::int64 betrobotinitmoney() const;
  void set_betrobotinitmoney(::google::protobuf::int64 value);

  // optional int64 RobotBetMoneyControl = 15;
  bool has_robotbetmoneycontrol() const;
  void clear_robotbetmoneycontrol();
  static const int kRobotBetMoneyControlFieldNumber = 15;
  ::google::protobuf::int64 robotbetmoneycontrol() const;
  void set_robotbetmoneycontrol(::google::protobuf::int64 value);

  // optional int32 BetRobotTimesControl = 14;
  bool has_betrobottimescontrol() const;
  void clear_betrobottimescontrol();
  static const int kBetRobotTimesControlFieldNumber = 14;
  ::google::protobuf::int32 betrobottimescontrol() const;
  void set_betrobottimescontrol(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_OxConfigData)
 private:
  void set_has_freetime();
  void clear_has_freetime();
  void set_has_bettime();
  void clear_has_bettime();
  void set_has_endtime();
  void clear_has_endtime();
  void set_has_mustwincoeff();
  void clear_has_mustwincoeff();
  void set_has_bankermoneylimit();
  void clear_has_bankermoneylimit();
  void set_has_systembankerswitch();
  void clear_has_systembankerswitch();
  void set_has_bankercount();
  void clear_has_bankercount();
  void set_has_robotbankerinituid();
  void clear_has_robotbankerinituid();
  void set_has_robotbankerinitmoney();
  void clear_has_robotbankerinitmoney();
  void set_has_betrobotswitch();
  void clear_has_betrobotswitch();
  void set_has_betrobotinituid();
  void clear_has_betrobotinituid();
  void set_has_betrobotinitmoney();
  void clear_has_betrobotinitmoney();
  void set_has_betrobotnumcontrol();
  void clear_has_betrobotnumcontrol();
  void set_has_betrobottimescontrol();
  void clear_has_betrobottimescontrol();
  void set_has_robotbetmoneycontrol();
  void clear_has_robotbetmoneycontrol();
  void set_has_basicchip();
  void clear_has_basicchip();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr basicchip_;
  ::google::protobuf::int32 freetime_;
  ::google::protobuf::int32 bettime_;
  ::google::protobuf::int32 endtime_;
  ::google::protobuf::int32 mustwincoeff_;
  ::google::protobuf::int64 bankermoneylimit_;
  ::google::protobuf::int32 systembankerswitch_;
  ::google::protobuf::int32 bankercount_;
  ::google::protobuf::int64 robotbankerinituid_;
  ::google::protobuf::int64 robotbankerinitmoney_;
  ::google::protobuf::int64 betrobotinituid_;
  ::google::protobuf::int32 betrobotswitch_;
  ::google::protobuf::int32 betrobotnumcontrol_;
  ::google::protobuf::int64 betrobotinitmoney_;
  ::google::protobuf::int64 robotbetmoneycontrol_;
  ::google::protobuf::int32 betrobottimescontrol_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LG_PhoneQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LG_PhoneQuery) */ {
 public:
  LG_PhoneQuery();
  virtual ~LG_PhoneQuery();

  LG_PhoneQuery(const LG_PhoneQuery& from);

  inline LG_PhoneQuery& operator=(const LG_PhoneQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LG_PhoneQuery& default_instance();

  static inline const LG_PhoneQuery* internal_default_instance() {
    return reinterpret_cast<const LG_PhoneQuery*>(
               &_LG_PhoneQuery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(LG_PhoneQuery* other);

  // implements Message ----------------------------------------------

  inline LG_PhoneQuery* New() const PROTOBUF_FINAL { return New(NULL); }

  LG_PhoneQuery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LG_PhoneQuery& from);
  void MergeFrom(const LG_PhoneQuery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LG_PhoneQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LG_PhoneQuery_MsgID MsgID;
  static const MsgID ID =
    LG_PhoneQuery_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LG_PhoneQuery_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LG_PhoneQuery_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LG_PhoneQuery_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LG_PhoneQuery_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LG_PhoneQuery_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LG_PhoneQuery_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LG_PhoneQuery_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string phone = 2;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 2;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 gate_session_id = 3;
  bool has_gate_session_id() const;
  void clear_gate_session_id();
  static const int kGateSessionIdFieldNumber = 3;
  ::google::protobuf::int32 gate_session_id() const;
  void set_gate_session_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LG_PhoneQuery)
 private:
  void set_has_ret();
  void clear_has_ret();
  void set_has_phone();
  void clear_has_phone();
  void set_has_gate_session_id();
  void clear_has_gate_session_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 gate_session_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_BankSetPassword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_BankSetPassword) */ {
 public:
  SD_BankSetPassword();
  virtual ~SD_BankSetPassword();

  SD_BankSetPassword(const SD_BankSetPassword& from);

  inline SD_BankSetPassword& operator=(const SD_BankSetPassword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_BankSetPassword& default_instance();

  static inline const SD_BankSetPassword* internal_default_instance() {
    return reinterpret_cast<const SD_BankSetPassword*>(
               &_SD_BankSetPassword_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(SD_BankSetPassword* other);

  // implements Message ----------------------------------------------

  inline SD_BankSetPassword* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_BankSetPassword* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_BankSetPassword& from);
  void MergeFrom(const SD_BankSetPassword& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_BankSetPassword* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_BankSetPassword_MsgID MsgID;
  static const MsgID ID =
    SD_BankSetPassword_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_BankSetPassword_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_BankSetPassword_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_BankSetPassword_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_BankSetPassword_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_BankSetPassword_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_BankSetPassword_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_BankSetPassword_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_BankSetPassword)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_BankChangePassword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_BankChangePassword) */ {
 public:
  SD_BankChangePassword();
  virtual ~SD_BankChangePassword();

  SD_BankChangePassword(const SD_BankChangePassword& from);

  inline SD_BankChangePassword& operator=(const SD_BankChangePassword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_BankChangePassword& default_instance();

  static inline const SD_BankChangePassword* internal_default_instance() {
    return reinterpret_cast<const SD_BankChangePassword*>(
               &_SD_BankChangePassword_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(SD_BankChangePassword* other);

  // implements Message ----------------------------------------------

  inline SD_BankChangePassword* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_BankChangePassword* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_BankChangePassword& from);
  void MergeFrom(const SD_BankChangePassword& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_BankChangePassword* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_BankChangePassword_MsgID MsgID;
  static const MsgID ID =
    SD_BankChangePassword_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_BankChangePassword_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_BankChangePassword_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_BankChangePassword_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_BankChangePassword_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_BankChangePassword_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_BankChangePassword_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_BankChangePassword_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string old_password = 2;
  bool has_old_password() const;
  void clear_old_password();
  static const int kOldPasswordFieldNumber = 2;
  const ::std::string& old_password() const;
  void set_old_password(const ::std::string& value);
  #if LANG_CXX11
  void set_old_password(::std::string&& value);
  #endif
  void set_old_password(const char* value);
  void set_old_password(const char* value, size_t size);
  ::std::string* mutable_old_password();
  ::std::string* release_old_password();
  void set_allocated_old_password(::std::string* old_password);

  // optional string password = 3;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_BankChangePassword)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_old_password();
  void clear_has_old_password();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr old_password_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_BankChangePassword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_BankChangePassword) */ {
 public:
  DS_BankChangePassword();
  virtual ~DS_BankChangePassword();

  DS_BankChangePassword(const DS_BankChangePassword& from);

  inline DS_BankChangePassword& operator=(const DS_BankChangePassword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_BankChangePassword& default_instance();

  static inline const DS_BankChangePassword* internal_default_instance() {
    return reinterpret_cast<const DS_BankChangePassword*>(
               &_DS_BankChangePassword_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(DS_BankChangePassword* other);

  // implements Message ----------------------------------------------

  inline DS_BankChangePassword* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_BankChangePassword* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_BankChangePassword& from);
  void MergeFrom(const DS_BankChangePassword& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_BankChangePassword* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_BankChangePassword_MsgID MsgID;
  static const MsgID ID =
    DS_BankChangePassword_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_BankChangePassword_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_BankChangePassword_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_BankChangePassword_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_BankChangePassword_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_BankChangePassword_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_BankChangePassword_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_BankChangePassword_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_BankChangePassword)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_BankLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_BankLogin) */ {
 public:
  SD_BankLogin();
  virtual ~SD_BankLogin();

  SD_BankLogin(const SD_BankLogin& from);

  inline SD_BankLogin& operator=(const SD_BankLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_BankLogin& default_instance();

  static inline const SD_BankLogin* internal_default_instance() {
    return reinterpret_cast<const SD_BankLogin*>(
               &_SD_BankLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(SD_BankLogin* other);

  // implements Message ----------------------------------------------

  inline SD_BankLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_BankLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_BankLogin& from);
  void MergeFrom(const SD_BankLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_BankLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_BankLogin_MsgID MsgID;
  static const MsgID ID =
    SD_BankLogin_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_BankLogin_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_BankLogin_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_BankLogin_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_BankLogin_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_BankLogin_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_BankLogin_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_BankLogin_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_BankLogin)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_BankLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_BankLogin) */ {
 public:
  DS_BankLogin();
  virtual ~DS_BankLogin();

  DS_BankLogin(const DS_BankLogin& from);

  inline DS_BankLogin& operator=(const DS_BankLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_BankLogin& default_instance();

  static inline const DS_BankLogin* internal_default_instance() {
    return reinterpret_cast<const DS_BankLogin*>(
               &_DS_BankLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(DS_BankLogin* other);

  // implements Message ----------------------------------------------

  inline DS_BankLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_BankLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_BankLogin& from);
  void MergeFrom(const DS_BankLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_BankLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_BankLogin_MsgID MsgID;
  static const MsgID ID =
    DS_BankLogin_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_BankLogin_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_BankLogin_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_BankLogin_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_BankLogin_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_BankLogin_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_BankLogin_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_BankLogin_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_BankLogin)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_SaveBankStatement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_SaveBankStatement) */ {
 public:
  SD_SaveBankStatement();
  virtual ~SD_SaveBankStatement();

  SD_SaveBankStatement(const SD_SaveBankStatement& from);

  inline SD_SaveBankStatement& operator=(const SD_SaveBankStatement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_SaveBankStatement& default_instance();

  static inline const SD_SaveBankStatement* internal_default_instance() {
    return reinterpret_cast<const SD_SaveBankStatement*>(
               &_SD_SaveBankStatement_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(SD_SaveBankStatement* other);

  // implements Message ----------------------------------------------

  inline SD_SaveBankStatement* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_SaveBankStatement* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_SaveBankStatement& from);
  void MergeFrom(const SD_SaveBankStatement& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_SaveBankStatement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_SaveBankStatement_MsgID MsgID;
  static const MsgID ID =
    SD_SaveBankStatement_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_SaveBankStatement_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_SaveBankStatement_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_SaveBankStatement_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_SaveBankStatement_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_SaveBankStatement_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_SaveBankStatement_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_SaveBankStatement_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .BankStatement pb_statement = 1;
  bool has_pb_statement() const;
  void clear_pb_statement();
  static const int kPbStatementFieldNumber = 1;
  const ::BankStatement& pb_statement() const;
  ::BankStatement* mutable_pb_statement();
  ::BankStatement* release_pb_statement();
  void set_allocated_pb_statement(::BankStatement* pb_statement);

  // @@protoc_insertion_point(class_scope:SD_SaveBankStatement)
 private:
  void set_has_pb_statement();
  void clear_has_pb_statement();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::BankStatement* pb_statement_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_SaveBankStatement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_SaveBankStatement) */ {
 public:
  DS_SaveBankStatement();
  virtual ~DS_SaveBankStatement();

  DS_SaveBankStatement(const DS_SaveBankStatement& from);

  inline DS_SaveBankStatement& operator=(const DS_SaveBankStatement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_SaveBankStatement& default_instance();

  static inline const DS_SaveBankStatement* internal_default_instance() {
    return reinterpret_cast<const DS_SaveBankStatement*>(
               &_DS_SaveBankStatement_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(DS_SaveBankStatement* other);

  // implements Message ----------------------------------------------

  inline DS_SaveBankStatement* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_SaveBankStatement* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_SaveBankStatement& from);
  void MergeFrom(const DS_SaveBankStatement& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_SaveBankStatement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_SaveBankStatement_MsgID MsgID;
  static const MsgID ID =
    DS_SaveBankStatement_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_SaveBankStatement_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_SaveBankStatement_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_SaveBankStatement_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_SaveBankStatement_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_SaveBankStatement_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_SaveBankStatement_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_SaveBankStatement_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .BankStatement pb_statement = 1;
  bool has_pb_statement() const;
  void clear_pb_statement();
  static const int kPbStatementFieldNumber = 1;
  const ::BankStatement& pb_statement() const;
  ::BankStatement* mutable_pb_statement();
  ::BankStatement* release_pb_statement();
  void set_allocated_pb_statement(::BankStatement* pb_statement);

  // @@protoc_insertion_point(class_scope:DS_SaveBankStatement)
 private:
  void set_has_pb_statement();
  void clear_has_pb_statement();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::BankStatement* pb_statement_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_BankStatement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_BankStatement) */ {
 public:
  SD_BankStatement();
  virtual ~SD_BankStatement();

  SD_BankStatement(const SD_BankStatement& from);

  inline SD_BankStatement& operator=(const SD_BankStatement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_BankStatement& default_instance();

  static inline const SD_BankStatement* internal_default_instance() {
    return reinterpret_cast<const SD_BankStatement*>(
               &_SD_BankStatement_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(SD_BankStatement* other);

  // implements Message ----------------------------------------------

  inline SD_BankStatement* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_BankStatement* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_BankStatement& from);
  void MergeFrom(const SD_BankStatement& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_BankStatement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_BankStatement_MsgID MsgID;
  static const MsgID ID =
    SD_BankStatement_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_BankStatement_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_BankStatement_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_BankStatement_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_BankStatement_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_BankStatement_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_BankStatement_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_BankStatement_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 cur_serial = 2;
  bool has_cur_serial() const;
  void clear_cur_serial();
  static const int kCurSerialFieldNumber = 2;
  ::google::protobuf::int64 cur_serial() const;
  void set_cur_serial(::google::protobuf::int64 value);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_BankStatement)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_cur_serial();
  void clear_has_cur_serial();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 cur_serial_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_BankStatement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_BankStatement) */ {
 public:
  DS_BankStatement();
  virtual ~DS_BankStatement();

  DS_BankStatement(const DS_BankStatement& from);

  inline DS_BankStatement& operator=(const DS_BankStatement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_BankStatement& default_instance();

  static inline const DS_BankStatement* internal_default_instance() {
    return reinterpret_cast<const DS_BankStatement*>(
               &_DS_BankStatement_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(DS_BankStatement* other);

  // implements Message ----------------------------------------------

  inline DS_BankStatement* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_BankStatement* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_BankStatement& from);
  void MergeFrom(const DS_BankStatement& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_BankStatement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_BankStatement_MsgID MsgID;
  static const MsgID ID =
    DS_BankStatement_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_BankStatement_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_BankStatement_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_BankStatement_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_BankStatement_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_BankStatement_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_BankStatement_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_BankStatement_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .BankStatement pb_statement = 2;
  int pb_statement_size() const;
  void clear_pb_statement();
  static const int kPbStatementFieldNumber = 2;
  const ::BankStatement& pb_statement(int index) const;
  ::BankStatement* mutable_pb_statement(int index);
  ::BankStatement* add_pb_statement();
  ::google::protobuf::RepeatedPtrField< ::BankStatement >*
      mutable_pb_statement();
  const ::google::protobuf::RepeatedPtrField< ::BankStatement >&
      pb_statement() const;

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_BankStatement)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BankStatement > pb_statement_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_BankTransfer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_BankTransfer) */ {
 public:
  SD_BankTransfer();
  virtual ~SD_BankTransfer();

  SD_BankTransfer(const SD_BankTransfer& from);

  inline SD_BankTransfer& operator=(const SD_BankTransfer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_BankTransfer& default_instance();

  static inline const SD_BankTransfer* internal_default_instance() {
    return reinterpret_cast<const SD_BankTransfer*>(
               &_SD_BankTransfer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(SD_BankTransfer* other);

  // implements Message ----------------------------------------------

  inline SD_BankTransfer* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_BankTransfer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_BankTransfer& from);
  void MergeFrom(const SD_BankTransfer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_BankTransfer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_BankTransfer_MsgID MsgID;
  static const MsgID ID =
    SD_BankTransfer_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_BankTransfer_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_BankTransfer_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_BankTransfer_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_BankTransfer_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_BankTransfer_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_BankTransfer_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_BankTransfer_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string target = 3;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 3;
  const ::std::string& target() const;
  void set_target(const ::std::string& value);
  #if LANG_CXX11
  void set_target(::std::string&& value);
  #endif
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  ::std::string* mutable_target();
  ::std::string* release_target();
  void set_allocated_target(::std::string* target);

  // optional string selfname = 6;
  bool has_selfname() const;
  void clear_selfname();
  static const int kSelfnameFieldNumber = 6;
  const ::std::string& selfname() const;
  void set_selfname(const ::std::string& value);
  #if LANG_CXX11
  void set_selfname(::std::string&& value);
  #endif
  void set_selfname(const char* value);
  void set_selfname(const char* value, size_t size);
  ::std::string* mutable_selfname();
  ::std::string* release_selfname();
  void set_allocated_selfname(::std::string* selfname);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional int64 money = 4;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 4;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 bank_balance = 5;
  bool has_bank_balance() const;
  void clear_bank_balance();
  static const int kBankBalanceFieldNumber = 5;
  ::google::protobuf::int32 bank_balance() const;
  void set_bank_balance(::google::protobuf::int32 value);

  // optional int32 game_id = 7;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 7;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_BankTransfer)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_time();
  void clear_has_time();
  void set_has_target();
  void clear_has_target();
  void set_has_money();
  void clear_has_money();
  void set_has_bank_balance();
  void clear_has_bank_balance();
  void set_has_selfname();
  void clear_has_selfname();
  void set_has_game_id();
  void clear_has_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr target_;
  ::google::protobuf::internal::ArenaStringPtr selfname_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 bank_balance_;
  ::google::protobuf::int32 game_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_BankTransfer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_BankTransfer) */ {
 public:
  DS_BankTransfer();
  virtual ~DS_BankTransfer();

  DS_BankTransfer(const DS_BankTransfer& from);

  inline DS_BankTransfer& operator=(const DS_BankTransfer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_BankTransfer& default_instance();

  static inline const DS_BankTransfer* internal_default_instance() {
    return reinterpret_cast<const DS_BankTransfer*>(
               &_DS_BankTransfer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(DS_BankTransfer* other);

  // implements Message ----------------------------------------------

  inline DS_BankTransfer* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_BankTransfer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_BankTransfer& from);
  void MergeFrom(const DS_BankTransfer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_BankTransfer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_BankTransfer_MsgID MsgID;
  static const MsgID ID =
    DS_BankTransfer_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_BankTransfer_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_BankTransfer_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_BankTransfer_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_BankTransfer_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_BankTransfer_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_BankTransfer_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_BankTransfer_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .BankStatement pb_statement = 2;
  bool has_pb_statement() const;
  void clear_pb_statement();
  static const int kPbStatementFieldNumber = 2;
  const ::BankStatement& pb_statement() const;
  ::BankStatement* mutable_pb_statement();
  ::BankStatement* release_pb_statement();
  void set_allocated_pb_statement(::BankStatement* pb_statement);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 guid = 3;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int64 money = 4;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 4;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:DS_BankTransfer)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_pb_statement();
  void clear_has_pb_statement();
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::BankStatement* pb_statement_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int64 money_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_BankTransferSelf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_BankTransferSelf) */ {
 public:
  LS_BankTransferSelf();
  virtual ~LS_BankTransferSelf();

  LS_BankTransferSelf(const LS_BankTransferSelf& from);

  inline LS_BankTransferSelf& operator=(const LS_BankTransferSelf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_BankTransferSelf& default_instance();

  static inline const LS_BankTransferSelf* internal_default_instance() {
    return reinterpret_cast<const LS_BankTransferSelf*>(
               &_LS_BankTransferSelf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(LS_BankTransferSelf* other);

  // implements Message ----------------------------------------------

  inline LS_BankTransferSelf* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_BankTransferSelf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_BankTransferSelf& from);
  void MergeFrom(const LS_BankTransferSelf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_BankTransferSelf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_BankTransferSelf_MsgID MsgID;
  static const MsgID ID =
    LS_BankTransferSelf_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_BankTransferSelf_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_BankTransferSelf_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_BankTransferSelf_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_BankTransferSelf_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_BankTransferSelf_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_BankTransferSelf_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_BankTransferSelf_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string target = 3;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 3;
  const ::std::string& target() const;
  void set_target(const ::std::string& value);
  #if LANG_CXX11
  void set_target(::std::string&& value);
  #endif
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  ::std::string* mutable_target();
  ::std::string* release_target();
  void set_allocated_target(::std::string* target);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional int64 money = 4;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 4;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 bank_balance = 5;
  bool has_bank_balance() const;
  void clear_bank_balance();
  static const int kBankBalanceFieldNumber = 5;
  ::google::protobuf::int32 bank_balance() const;
  void set_bank_balance(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_BankTransferSelf)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_time();
  void clear_has_time();
  void set_has_target();
  void clear_has_target();
  void set_has_money();
  void clear_has_money();
  void set_has_bank_balance();
  void clear_has_bank_balance();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr target_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 bank_balance_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_BankTransferTarget : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_BankTransferTarget) */ {
 public:
  LS_BankTransferTarget();
  virtual ~LS_BankTransferTarget();

  LS_BankTransferTarget(const LS_BankTransferTarget& from);

  inline LS_BankTransferTarget& operator=(const LS_BankTransferTarget& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_BankTransferTarget& default_instance();

  static inline const LS_BankTransferTarget* internal_default_instance() {
    return reinterpret_cast<const LS_BankTransferTarget*>(
               &_LS_BankTransferTarget_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(LS_BankTransferTarget* other);

  // implements Message ----------------------------------------------

  inline LS_BankTransferTarget* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_BankTransferTarget* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_BankTransferTarget& from);
  void MergeFrom(const LS_BankTransferTarget& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_BankTransferTarget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_BankTransferTarget_MsgID MsgID;
  static const MsgID ID =
    LS_BankTransferTarget_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_BankTransferTarget_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_BankTransferTarget_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_BankTransferTarget_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_BankTransferTarget_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_BankTransferTarget_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_BankTransferTarget_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_BankTransferTarget_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string selfname = 1;
  bool has_selfname() const;
  void clear_selfname();
  static const int kSelfnameFieldNumber = 1;
  const ::std::string& selfname() const;
  void set_selfname(const ::std::string& value);
  #if LANG_CXX11
  void set_selfname(::std::string&& value);
  #endif
  void set_selfname(const char* value);
  void set_selfname(const char* value, size_t size);
  ::std::string* mutable_selfname();
  ::std::string* release_selfname();
  void set_allocated_selfname(::std::string* selfname);

  // optional string target = 3;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 3;
  const ::std::string& target() const;
  void set_target(const ::std::string& value);
  #if LANG_CXX11
  void set_target(::std::string&& value);
  #endif
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  ::std::string* mutable_target();
  ::std::string* release_target();
  void set_allocated_target(::std::string* target);

  // optional int64 money = 4;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 4;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_BankTransferTarget)
 private:
  void set_has_selfname();
  void clear_has_selfname();
  void set_has_time();
  void clear_has_time();
  void set_has_target();
  void clear_has_target();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr selfname_;
  ::google::protobuf::internal::ArenaStringPtr target_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 time_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S_BankTransferByGuid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:S_BankTransferByGuid) */ {
 public:
  S_BankTransferByGuid();
  virtual ~S_BankTransferByGuid();

  S_BankTransferByGuid(const S_BankTransferByGuid& from);

  inline S_BankTransferByGuid& operator=(const S_BankTransferByGuid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_BankTransferByGuid& default_instance();

  static inline const S_BankTransferByGuid* internal_default_instance() {
    return reinterpret_cast<const S_BankTransferByGuid*>(
               &_S_BankTransferByGuid_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(S_BankTransferByGuid* other);

  // implements Message ----------------------------------------------

  inline S_BankTransferByGuid* New() const PROTOBUF_FINAL { return New(NULL); }

  S_BankTransferByGuid* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S_BankTransferByGuid& from);
  void MergeFrom(const S_BankTransferByGuid& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S_BankTransferByGuid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S_BankTransferByGuid_MsgID MsgID;
  static const MsgID ID =
    S_BankTransferByGuid_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return S_BankTransferByGuid_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    S_BankTransferByGuid_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    S_BankTransferByGuid_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    S_BankTransferByGuid_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return S_BankTransferByGuid_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return S_BankTransferByGuid_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return S_BankTransferByGuid_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 target_guid = 2;
  bool has_target_guid() const;
  void clear_target_guid();
  static const int kTargetGuidFieldNumber = 2;
  ::google::protobuf::int32 target_guid() const;
  void set_target_guid(::google::protobuf::int32 value);

  // optional int64 money = 3;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 game_id = 4;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 4;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S_BankTransferByGuid)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_target_guid();
  void clear_has_target_guid();
  void set_has_money();
  void clear_has_money();
  void set_has_game_id();
  void clear_has_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 target_guid_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 game_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_BankTransferByGuid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_BankTransferByGuid) */ {
 public:
  DS_BankTransferByGuid();
  virtual ~DS_BankTransferByGuid();

  DS_BankTransferByGuid(const DS_BankTransferByGuid& from);

  inline DS_BankTransferByGuid& operator=(const DS_BankTransferByGuid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_BankTransferByGuid& default_instance();

  static inline const DS_BankTransferByGuid* internal_default_instance() {
    return reinterpret_cast<const DS_BankTransferByGuid*>(
               &_DS_BankTransferByGuid_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(DS_BankTransferByGuid* other);

  // implements Message ----------------------------------------------

  inline DS_BankTransferByGuid* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_BankTransferByGuid* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_BankTransferByGuid& from);
  void MergeFrom(const DS_BankTransferByGuid& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_BankTransferByGuid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_BankTransferByGuid_MsgID MsgID;
  static const MsgID ID =
    DS_BankTransferByGuid_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_BankTransferByGuid_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_BankTransferByGuid_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_BankTransferByGuid_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_BankTransferByGuid_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_BankTransferByGuid_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_BankTransferByGuid_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_BankTransferByGuid_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int64 money = 3;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:DS_BankTransferByGuid)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int64 money_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_BankTransferByGuid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_BankTransferByGuid) */ {
 public:
  LS_BankTransferByGuid();
  virtual ~LS_BankTransferByGuid();

  LS_BankTransferByGuid(const LS_BankTransferByGuid& from);

  inline LS_BankTransferByGuid& operator=(const LS_BankTransferByGuid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_BankTransferByGuid& default_instance();

  static inline const LS_BankTransferByGuid* internal_default_instance() {
    return reinterpret_cast<const LS_BankTransferByGuid*>(
               &_LS_BankTransferByGuid_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(LS_BankTransferByGuid* other);

  // implements Message ----------------------------------------------

  inline LS_BankTransferByGuid* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_BankTransferByGuid* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_BankTransferByGuid& from);
  void MergeFrom(const LS_BankTransferByGuid& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_BankTransferByGuid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_BankTransferByGuid_MsgID MsgID;
  static const MsgID ID =
    LS_BankTransferByGuid_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_BankTransferByGuid_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_BankTransferByGuid_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_BankTransferByGuid_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_BankTransferByGuid_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_BankTransferByGuid_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_BankTransferByGuid_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_BankTransferByGuid_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_BankTransferByGuid)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_BankLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_BankLog) */ {
 public:
  SD_BankLog();
  virtual ~SD_BankLog();

  SD_BankLog(const SD_BankLog& from);

  inline SD_BankLog& operator=(const SD_BankLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_BankLog& default_instance();

  static inline const SD_BankLog* internal_default_instance() {
    return reinterpret_cast<const SD_BankLog*>(
               &_SD_BankLog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(SD_BankLog* other);

  // implements Message ----------------------------------------------

  inline SD_BankLog* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_BankLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_BankLog& from);
  void MergeFrom(const SD_BankLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_BankLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_BankLog_MsgID MsgID;
  static const MsgID ID =
    SD_BankLog_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_BankLog_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_BankLog_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_BankLog_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_BankLog_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_BankLog_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_BankLog_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_BankLog_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string phone = 4;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 4;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional string ip = 11;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 11;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional int32 time = 1;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 opt_type = 5;
  bool has_opt_type() const;
  void clear_opt_type();
  static const int kOptTypeFieldNumber = 5;
  ::google::protobuf::int32 opt_type() const;
  void set_opt_type(::google::protobuf::int32 value);

  // optional int32 money = 6;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 6;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // optional int32 old_money = 7;
  bool has_old_money() const;
  void clear_old_money();
  static const int kOldMoneyFieldNumber = 7;
  ::google::protobuf::int32 old_money() const;
  void set_old_money(::google::protobuf::int32 value);

  // optional int32 new_money = 8;
  bool has_new_money() const;
  void clear_new_money();
  static const int kNewMoneyFieldNumber = 8;
  ::google::protobuf::int32 new_money() const;
  void set_new_money(::google::protobuf::int32 value);

  // optional int32 old_bank = 9;
  bool has_old_bank() const;
  void clear_old_bank();
  static const int kOldBankFieldNumber = 9;
  ::google::protobuf::int32 old_bank() const;
  void set_old_bank(::google::protobuf::int32 value);

  // optional int32 new_bank = 10;
  bool has_new_bank() const;
  void clear_new_bank();
  static const int kNewBankFieldNumber = 10;
  ::google::protobuf::int32 new_bank() const;
  void set_new_bank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_BankLog)
 private:
  void set_has_time();
  void clear_has_time();
  void set_has_guid();
  void clear_has_guid();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_phone();
  void clear_has_phone();
  void set_has_opt_type();
  void clear_has_opt_type();
  void set_has_money();
  void clear_has_money();
  void set_has_old_money();
  void clear_has_old_money();
  void set_has_new_money();
  void clear_has_new_money();
  void set_has_old_bank();
  void clear_has_old_bank();
  void set_has_new_bank();
  void clear_has_new_bank();
  void set_has_ip();
  void clear_has_ip();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 opt_type_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 old_money_;
  ::google::protobuf::int32 new_money_;
  ::google::protobuf::int32 old_bank_;
  ::google::protobuf::int32 new_bank_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_Do_OneSql : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_Do_OneSql) */ {
 public:
  SD_Do_OneSql();
  virtual ~SD_Do_OneSql();

  SD_Do_OneSql(const SD_Do_OneSql& from);

  inline SD_Do_OneSql& operator=(const SD_Do_OneSql& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_Do_OneSql& default_instance();

  static inline const SD_Do_OneSql* internal_default_instance() {
    return reinterpret_cast<const SD_Do_OneSql*>(
               &_SD_Do_OneSql_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(SD_Do_OneSql* other);

  // implements Message ----------------------------------------------

  inline SD_Do_OneSql* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_Do_OneSql* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_Do_OneSql& from);
  void MergeFrom(const SD_Do_OneSql& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_Do_OneSql* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_Do_OneSql_MsgID MsgID;
  static const MsgID ID =
    SD_Do_OneSql_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_Do_OneSql_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_Do_OneSql_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_Do_OneSql_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_Do_OneSql_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_Do_OneSql_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_Do_OneSql_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_Do_OneSql_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string sql = 1;
  bool has_sql() const;
  void clear_sql();
  static const int kSqlFieldNumber = 1;
  const ::std::string& sql() const;
  void set_sql(const ::std::string& value);
  #if LANG_CXX11
  void set_sql(::std::string&& value);
  #endif
  void set_sql(const char* value);
  void set_sql(const char* value, size_t size);
  ::std::string* mutable_sql();
  ::std::string* release_sql();
  void set_allocated_sql(::std::string* sql);

  // optional string db_name = 2;
  bool has_db_name() const;
  void clear_db_name();
  static const int kDbNameFieldNumber = 2;
  const ::std::string& db_name() const;
  void set_db_name(const ::std::string& value);
  #if LANG_CXX11
  void set_db_name(::std::string&& value);
  #endif
  void set_db_name(const char* value);
  void set_db_name(const char* value, size_t size);
  ::std::string* mutable_db_name();
  ::std::string* release_db_name();
  void set_allocated_db_name(::std::string* db_name);

  // @@protoc_insertion_point(class_scope:SD_Do_OneSql)
 private:
  void set_has_sql();
  void clear_has_sql();
  void set_has_db_name();
  void clear_has_db_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sql_;
  ::google::protobuf::internal::ArenaStringPtr db_name_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_SendMail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_SendMail) */ {
 public:
  SD_SendMail();
  virtual ~SD_SendMail();

  SD_SendMail(const SD_SendMail& from);

  inline SD_SendMail& operator=(const SD_SendMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_SendMail& default_instance();

  static inline const SD_SendMail* internal_default_instance() {
    return reinterpret_cast<const SD_SendMail*>(
               &_SD_SendMail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(SD_SendMail* other);

  // implements Message ----------------------------------------------

  inline SD_SendMail* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_SendMail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_SendMail& from);
  void MergeFrom(const SD_SendMail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_SendMail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_SendMail_MsgID MsgID;
  static const MsgID ID =
    SD_SendMail_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_SendMail_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_SendMail_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_SendMail_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_SendMail_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_SendMail_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_SendMail_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_SendMail_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .MailInfo pb_mail = 1;
  bool has_pb_mail() const;
  void clear_pb_mail();
  static const int kPbMailFieldNumber = 1;
  const ::MailInfo& pb_mail() const;
  ::MailInfo* mutable_pb_mail();
  ::MailInfo* release_pb_mail();
  void set_allocated_pb_mail(::MailInfo* pb_mail);

  // @@protoc_insertion_point(class_scope:SD_SendMail)
 private:
  void set_has_pb_mail();
  void clear_has_pb_mail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::MailInfo* pb_mail_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DES_SendMail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DES_SendMail) */ {
 public:
  DES_SendMail();
  virtual ~DES_SendMail();

  DES_SendMail(const DES_SendMail& from);

  inline DES_SendMail& operator=(const DES_SendMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DES_SendMail& default_instance();

  static inline const DES_SendMail* internal_default_instance() {
    return reinterpret_cast<const DES_SendMail*>(
               &_DES_SendMail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(DES_SendMail* other);

  // implements Message ----------------------------------------------

  inline DES_SendMail* New() const PROTOBUF_FINAL { return New(NULL); }

  DES_SendMail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DES_SendMail& from);
  void MergeFrom(const DES_SendMail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DES_SendMail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DES_SendMail_MsgID MsgID;
  static const MsgID ID =
    DES_SendMail_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DES_SendMail_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DES_SendMail_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DES_SendMail_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DES_SendMail_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DES_SendMail_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DES_SendMail_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DES_SendMail_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .MailInfo pb_mail = 1;
  bool has_pb_mail() const;
  void clear_pb_mail();
  static const int kPbMailFieldNumber = 1;
  const ::MailInfo& pb_mail() const;
  ::MailInfo* mutable_pb_mail();
  ::MailInfo* release_pb_mail();
  void set_allocated_pb_mail(::MailInfo* pb_mail);

  // optional int32 ret = 2;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 2;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DES_SendMail)
 private:
  void set_has_pb_mail();
  void clear_has_pb_mail();
  void set_has_ret();
  void clear_has_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::MailInfo* pb_mail_;
  ::google::protobuf::int32 ret_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_DelMail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_DelMail) */ {
 public:
  SD_DelMail();
  virtual ~SD_DelMail();

  SD_DelMail(const SD_DelMail& from);

  inline SD_DelMail& operator=(const SD_DelMail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_DelMail& default_instance();

  static inline const SD_DelMail* internal_default_instance() {
    return reinterpret_cast<const SD_DelMail*>(
               &_SD_DelMail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(SD_DelMail* other);

  // implements Message ----------------------------------------------

  inline SD_DelMail* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_DelMail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_DelMail& from);
  void MergeFrom(const SD_DelMail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_DelMail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_DelMail_MsgID MsgID;
  static const MsgID ID =
    SD_DelMail_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_DelMail_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_DelMail_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_DelMail_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_DelMail_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_DelMail_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_DelMail_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_DelMail_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string mail_id = 2;
  bool has_mail_id() const;
  void clear_mail_id();
  static const int kMailIdFieldNumber = 2;
  const ::std::string& mail_id() const;
  void set_mail_id(const ::std::string& value);
  #if LANG_CXX11
  void set_mail_id(::std::string&& value);
  #endif
  void set_mail_id(const char* value);
  void set_mail_id(const char* value, size_t size);
  ::std::string* mutable_mail_id();
  ::std::string* release_mail_id();
  void set_allocated_mail_id(::std::string* mail_id);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_DelMail)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_mail_id();
  void clear_has_mail_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr mail_id_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_ReceiveMailAttachment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_ReceiveMailAttachment) */ {
 public:
  SD_ReceiveMailAttachment();
  virtual ~SD_ReceiveMailAttachment();

  SD_ReceiveMailAttachment(const SD_ReceiveMailAttachment& from);

  inline SD_ReceiveMailAttachment& operator=(const SD_ReceiveMailAttachment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_ReceiveMailAttachment& default_instance();

  static inline const SD_ReceiveMailAttachment* internal_default_instance() {
    return reinterpret_cast<const SD_ReceiveMailAttachment*>(
               &_SD_ReceiveMailAttachment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(SD_ReceiveMailAttachment* other);

  // implements Message ----------------------------------------------

  inline SD_ReceiveMailAttachment* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_ReceiveMailAttachment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_ReceiveMailAttachment& from);
  void MergeFrom(const SD_ReceiveMailAttachment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_ReceiveMailAttachment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_ReceiveMailAttachment_MsgID MsgID;
  static const MsgID ID =
    SD_ReceiveMailAttachment_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_ReceiveMailAttachment_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_ReceiveMailAttachment_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_ReceiveMailAttachment_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_ReceiveMailAttachment_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_ReceiveMailAttachment_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_ReceiveMailAttachment_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_ReceiveMailAttachment_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string mail_id = 2;
  bool has_mail_id() const;
  void clear_mail_id();
  static const int kMailIdFieldNumber = 2;
  const ::std::string& mail_id() const;
  void set_mail_id(const ::std::string& value);
  #if LANG_CXX11
  void set_mail_id(::std::string&& value);
  #endif
  void set_mail_id(const char* value);
  void set_mail_id(const char* value, size_t size);
  ::std::string* mutable_mail_id();
  ::std::string* release_mail_id();
  void set_allocated_mail_id(::std::string* mail_id);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_ReceiveMailAttachment)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_mail_id();
  void clear_has_mail_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr mail_id_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DE_UpdateRank : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DE_UpdateRank) */ {
 public:
  DE_UpdateRank();
  virtual ~DE_UpdateRank();

  DE_UpdateRank(const DE_UpdateRank& from);

  inline DE_UpdateRank& operator=(const DE_UpdateRank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DE_UpdateRank& default_instance();

  static inline const DE_UpdateRank* internal_default_instance() {
    return reinterpret_cast<const DE_UpdateRank*>(
               &_DE_UpdateRank_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(DE_UpdateRank* other);

  // implements Message ----------------------------------------------

  inline DE_UpdateRank* New() const PROTOBUF_FINAL { return New(NULL); }

  DE_UpdateRank* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DE_UpdateRank& from);
  void MergeFrom(const DE_UpdateRank& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DE_UpdateRank* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DE_UpdateRank_MsgID MsgID;
  static const MsgID ID =
    DE_UpdateRank_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DE_UpdateRank_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DE_UpdateRank_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DE_UpdateRank_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DE_UpdateRank_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DE_UpdateRank_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DE_UpdateRank_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DE_UpdateRank_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .RankItem pb_rank = 2;
  int pb_rank_size() const;
  void clear_pb_rank();
  static const int kPbRankFieldNumber = 2;
  const ::RankItem& pb_rank(int index) const;
  ::RankItem* mutable_pb_rank(int index);
  ::RankItem* add_pb_rank();
  ::google::protobuf::RepeatedPtrField< ::RankItem >*
      mutable_pb_rank();
  const ::google::protobuf::RepeatedPtrField< ::RankItem >&
      pb_rank() const;

  // optional int32 rank_type = 1;
  bool has_rank_type() const;
  void clear_rank_type();
  static const int kRankTypeFieldNumber = 1;
  ::google::protobuf::int32 rank_type() const;
  void set_rank_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DE_UpdateRank)
 private:
  void set_has_rank_type();
  void clear_has_rank_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RankItem > pb_rank_;
  ::google::protobuf::int32 rank_type_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_UpdateEarnings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_UpdateEarnings) */ {
 public:
  SD_UpdateEarnings();
  virtual ~SD_UpdateEarnings();

  SD_UpdateEarnings(const SD_UpdateEarnings& from);

  inline SD_UpdateEarnings& operator=(const SD_UpdateEarnings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_UpdateEarnings& default_instance();

  static inline const SD_UpdateEarnings* internal_default_instance() {
    return reinterpret_cast<const SD_UpdateEarnings*>(
               &_SD_UpdateEarnings_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(SD_UpdateEarnings* other);

  // implements Message ----------------------------------------------

  inline SD_UpdateEarnings* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_UpdateEarnings* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_UpdateEarnings& from);
  void MergeFrom(const SD_UpdateEarnings& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_UpdateEarnings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_UpdateEarnings_MsgID MsgID;
  static const MsgID ID =
    SD_UpdateEarnings_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_UpdateEarnings_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_UpdateEarnings_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_UpdateEarnings_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_UpdateEarnings_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_UpdateEarnings_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_UpdateEarnings_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_UpdateEarnings_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_UpdateEarnings)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 money_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_LogMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_LogMoney) */ {
 public:
  SD_LogMoney();
  virtual ~SD_LogMoney();

  SD_LogMoney(const SD_LogMoney& from);

  inline SD_LogMoney& operator=(const SD_LogMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_LogMoney& default_instance();

  static inline const SD_LogMoney* internal_default_instance() {
    return reinterpret_cast<const SD_LogMoney*>(
               &_SD_LogMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(SD_LogMoney* other);

  // implements Message ----------------------------------------------

  inline SD_LogMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_LogMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_LogMoney& from);
  void MergeFrom(const SD_LogMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_LogMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_LogMoney_MsgID MsgID;
  static const MsgID ID =
    SD_LogMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_LogMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_LogMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_LogMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_LogMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_LogMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_LogMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_LogMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int64 old_money = 2;
  bool has_old_money() const;
  void clear_old_money();
  static const int kOldMoneyFieldNumber = 2;
  ::google::protobuf::int64 old_money() const;
  void set_old_money(::google::protobuf::int64 value);

  // optional int64 new_money = 3;
  bool has_new_money() const;
  void clear_new_money();
  static const int kNewMoneyFieldNumber = 3;
  ::google::protobuf::int64 new_money() const;
  void set_new_money(::google::protobuf::int64 value);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 opt_type = 6;
  bool has_opt_type() const;
  void clear_opt_type();
  static const int kOptTypeFieldNumber = 6;
  ::google::protobuf::int32 opt_type() const;
  void set_opt_type(::google::protobuf::int32 value);

  // optional int64 old_bank = 4;
  bool has_old_bank() const;
  void clear_old_bank();
  static const int kOldBankFieldNumber = 4;
  ::google::protobuf::int64 old_bank() const;
  void set_old_bank(::google::protobuf::int64 value);

  // optional int64 new_bank = 5;
  bool has_new_bank() const;
  void clear_new_bank();
  static const int kNewBankFieldNumber = 5;
  ::google::protobuf::int64 new_bank() const;
  void set_new_bank(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SD_LogMoney)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_old_money();
  void clear_has_old_money();
  void set_has_new_money();
  void clear_has_new_money();
  void set_has_old_bank();
  void clear_has_old_bank();
  void set_has_new_bank();
  void clear_has_new_bank();
  void set_has_opt_type();
  void clear_has_opt_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 old_money_;
  ::google::protobuf::int64 new_money_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 opt_type_;
  ::google::protobuf::int64 old_bank_;
  ::google::protobuf::int64 new_bank_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WL_RequestGameServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WL_RequestGameServerInfo) */ {
 public:
  WL_RequestGameServerInfo();
  virtual ~WL_RequestGameServerInfo();

  WL_RequestGameServerInfo(const WL_RequestGameServerInfo& from);

  inline WL_RequestGameServerInfo& operator=(const WL_RequestGameServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WL_RequestGameServerInfo& default_instance();

  static inline const WL_RequestGameServerInfo* internal_default_instance() {
    return reinterpret_cast<const WL_RequestGameServerInfo*>(
               &_WL_RequestGameServerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(WL_RequestGameServerInfo* other);

  // implements Message ----------------------------------------------

  inline WL_RequestGameServerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  WL_RequestGameServerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WL_RequestGameServerInfo& from);
  void MergeFrom(const WL_RequestGameServerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WL_RequestGameServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WL_RequestGameServerInfo_MsgID MsgID;
  static const MsgID ID =
    WL_RequestGameServerInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return WL_RequestGameServerInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    WL_RequestGameServerInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    WL_RequestGameServerInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    WL_RequestGameServerInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return WL_RequestGameServerInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return WL_RequestGameServerInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return WL_RequestGameServerInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WL_RequestGameServerInfo)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WebGameServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WebGameServerInfo) */ {
 public:
  WebGameServerInfo();
  virtual ~WebGameServerInfo();

  WebGameServerInfo(const WebGameServerInfo& from);

  inline WebGameServerInfo& operator=(const WebGameServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebGameServerInfo& default_instance();

  static inline const WebGameServerInfo* internal_default_instance() {
    return reinterpret_cast<const WebGameServerInfo*>(
               &_WebGameServerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(WebGameServerInfo* other);

  // implements Message ----------------------------------------------

  inline WebGameServerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  WebGameServerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WebGameServerInfo& from);
  void MergeFrom(const WebGameServerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WebGameServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ip = 4;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 4;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional int32 cpu = 1;
  bool has_cpu() const;
  void clear_cpu();
  static const int kCpuFieldNumber = 1;
  ::google::protobuf::int32 cpu() const;
  void set_cpu(::google::protobuf::int32 value);

  // optional int32 memory = 2;
  bool has_memory() const;
  void clear_memory();
  static const int kMemoryFieldNumber = 2;
  ::google::protobuf::int32 memory() const;
  void set_memory(::google::protobuf::int32 value);

  // optional int32 status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 port = 5;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 5;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // optional int32 first_game_type = 6;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 6;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional int32 second_game_type = 7;
  bool has_second_game_type() const;
  void clear_second_game_type();
  static const int kSecondGameTypeFieldNumber = 7;
  ::google::protobuf::int32 second_game_type() const;
  void set_second_game_type(::google::protobuf::int32 value);

  // optional int32 player_online_count = 8;
  bool has_player_online_count() const;
  void clear_player_online_count();
  static const int kPlayerOnlineCountFieldNumber = 8;
  ::google::protobuf::int32 player_online_count() const;
  void set_player_online_count(::google::protobuf::int32 value);

  // optional int32 robot_online_count = 9;
  bool has_robot_online_count() const;
  void clear_robot_online_count();
  static const int kRobotOnlineCountFieldNumber = 9;
  ::google::protobuf::int32 robot_online_count() const;
  void set_robot_online_count(::google::protobuf::int32 value);

  // optional int32 niuniu_banker_times = 10;
  bool has_niuniu_banker_times() const;
  void clear_niuniu_banker_times();
  static const int kNiuniuBankerTimesFieldNumber = 10;
  ::google::protobuf::int32 niuniu_banker_times() const;
  void set_niuniu_banker_times(::google::protobuf::int32 value);

  // optional int32 android_online_count = 11;
  bool has_android_online_count() const;
  void clear_android_online_count();
  static const int kAndroidOnlineCountFieldNumber = 11;
  ::google::protobuf::int32 android_online_count() const;
  void set_android_online_count(::google::protobuf::int32 value);

  // optional int32 ios_online_count = 12;
  bool has_ios_online_count() const;
  void clear_ios_online_count();
  static const int kIosOnlineCountFieldNumber = 12;
  ::google::protobuf::int32 ios_online_count() const;
  void set_ios_online_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WebGameServerInfo)
 private:
  void set_has_cpu();
  void clear_has_cpu();
  void set_has_memory();
  void clear_has_memory();
  void set_has_status();
  void clear_has_status();
  void set_has_ip();
  void clear_has_ip();
  void set_has_port();
  void clear_has_port();
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_second_game_type();
  void clear_has_second_game_type();
  void set_has_player_online_count();
  void clear_has_player_online_count();
  void set_has_robot_online_count();
  void clear_has_robot_online_count();
  void set_has_niuniu_banker_times();
  void clear_has_niuniu_banker_times();
  void set_has_android_online_count();
  void clear_has_android_online_count();
  void set_has_ios_online_count();
  void clear_has_ios_online_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 cpu_;
  ::google::protobuf::int32 memory_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 first_game_type_;
  ::google::protobuf::int32 second_game_type_;
  ::google::protobuf::int32 player_online_count_;
  ::google::protobuf::int32 robot_online_count_;
  ::google::protobuf::int32 niuniu_banker_times_;
  ::google::protobuf::int32 android_online_count_;
  ::google::protobuf::int32 ios_online_count_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LW_ResponseGameServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LW_ResponseGameServerInfo) */ {
 public:
  LW_ResponseGameServerInfo();
  virtual ~LW_ResponseGameServerInfo();

  LW_ResponseGameServerInfo(const LW_ResponseGameServerInfo& from);

  inline LW_ResponseGameServerInfo& operator=(const LW_ResponseGameServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LW_ResponseGameServerInfo& default_instance();

  static inline const LW_ResponseGameServerInfo* internal_default_instance() {
    return reinterpret_cast<const LW_ResponseGameServerInfo*>(
               &_LW_ResponseGameServerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(LW_ResponseGameServerInfo* other);

  // implements Message ----------------------------------------------

  inline LW_ResponseGameServerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  LW_ResponseGameServerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LW_ResponseGameServerInfo& from);
  void MergeFrom(const LW_ResponseGameServerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LW_ResponseGameServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LW_ResponseGameServerInfo_MsgID MsgID;
  static const MsgID ID =
    LW_ResponseGameServerInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LW_ResponseGameServerInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LW_ResponseGameServerInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LW_ResponseGameServerInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LW_ResponseGameServerInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LW_ResponseGameServerInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LW_ResponseGameServerInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LW_ResponseGameServerInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .WebGameServerInfo info_list = 1;
  int info_list_size() const;
  void clear_info_list();
  static const int kInfoListFieldNumber = 1;
  const ::WebGameServerInfo& info_list(int index) const;
  ::WebGameServerInfo* mutable_info_list(int index);
  ::WebGameServerInfo* add_info_list();
  ::google::protobuf::RepeatedPtrField< ::WebGameServerInfo >*
      mutable_info_list();
  const ::google::protobuf::RepeatedPtrField< ::WebGameServerInfo >&
      info_list() const;

  // optional int32 android_online_top = 2;
  bool has_android_online_top() const;
  void clear_android_online_top();
  static const int kAndroidOnlineTopFieldNumber = 2;
  ::google::protobuf::int32 android_online_top() const;
  void set_android_online_top(::google::protobuf::int32 value);

  // optional int32 ios_online_top = 3;
  bool has_ios_online_top() const;
  void clear_ios_online_top();
  static const int kIosOnlineTopFieldNumber = 3;
  ::google::protobuf::int32 ios_online_top() const;
  void set_ios_online_top(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LW_ResponseGameServerInfo)
 private:
  void set_has_android_online_top();
  void clear_has_android_online_top();
  void set_has_ios_online_top();
  void clear_has_ios_online_top();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WebGameServerInfo > info_list_;
  ::google::protobuf::int32 android_online_top_;
  ::google::protobuf::int32 ios_online_top_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SL_WebGameServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SL_WebGameServerInfo) */ {
 public:
  SL_WebGameServerInfo();
  virtual ~SL_WebGameServerInfo();

  SL_WebGameServerInfo(const SL_WebGameServerInfo& from);

  inline SL_WebGameServerInfo& operator=(const SL_WebGameServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SL_WebGameServerInfo& default_instance();

  static inline const SL_WebGameServerInfo* internal_default_instance() {
    return reinterpret_cast<const SL_WebGameServerInfo*>(
               &_SL_WebGameServerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(SL_WebGameServerInfo* other);

  // implements Message ----------------------------------------------

  inline SL_WebGameServerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SL_WebGameServerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SL_WebGameServerInfo& from);
  void MergeFrom(const SL_WebGameServerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SL_WebGameServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SL_WebGameServerInfo_MsgID MsgID;
  static const MsgID ID =
    SL_WebGameServerInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SL_WebGameServerInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SL_WebGameServerInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SL_WebGameServerInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SL_WebGameServerInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SL_WebGameServerInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SL_WebGameServerInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SL_WebGameServerInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .WebGameServerInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::WebGameServerInfo& info() const;
  ::WebGameServerInfo* mutable_info();
  ::WebGameServerInfo* release_info();
  void set_allocated_info(::WebGameServerInfo* info);

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SL_WebGameServerInfo)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::WebGameServerInfo* info_;
  ::google::protobuf::int32 id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WL_GMMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WL_GMMessage) */ {
 public:
  WL_GMMessage();
  virtual ~WL_GMMessage();

  WL_GMMessage(const WL_GMMessage& from);

  inline WL_GMMessage& operator=(const WL_GMMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WL_GMMessage& default_instance();

  static inline const WL_GMMessage* internal_default_instance() {
    return reinterpret_cast<const WL_GMMessage*>(
               &_WL_GMMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(WL_GMMessage* other);

  // implements Message ----------------------------------------------

  inline WL_GMMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  WL_GMMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WL_GMMessage& from);
  void MergeFrom(const WL_GMMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WL_GMMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WL_GMMessage_MsgID MsgID;
  static const MsgID ID =
    WL_GMMessage_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return WL_GMMessage_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    WL_GMMessage_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    WL_GMMessage_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    WL_GMMessage_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return WL_GMMessage_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return WL_GMMessage_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return WL_GMMessage_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string GmCommand = 1;
  bool has_gmcommand() const;
  void clear_gmcommand();
  static const int kGmCommandFieldNumber = 1;
  const ::std::string& gmcommand() const;
  void set_gmcommand(const ::std::string& value);
  #if LANG_CXX11
  void set_gmcommand(::std::string&& value);
  #endif
  void set_gmcommand(const char* value);
  void set_gmcommand(const char* value, size_t size);
  ::std::string* mutable_gmcommand();
  ::std::string* release_gmcommand();
  void set_allocated_gmcommand(::std::string* gmcommand);

  // optional string data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:WL_GMMessage)
 private:
  void set_has_gmcommand();
  void clear_has_gmcommand();
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr gmcommand_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LW_GMMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LW_GMMessage) */ {
 public:
  LW_GMMessage();
  virtual ~LW_GMMessage();

  LW_GMMessage(const LW_GMMessage& from);

  inline LW_GMMessage& operator=(const LW_GMMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LW_GMMessage& default_instance();

  static inline const LW_GMMessage* internal_default_instance() {
    return reinterpret_cast<const LW_GMMessage*>(
               &_LW_GMMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(LW_GMMessage* other);

  // implements Message ----------------------------------------------

  inline LW_GMMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  LW_GMMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LW_GMMessage& from);
  void MergeFrom(const LW_GMMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LW_GMMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LW_GMMessage_MsgID MsgID;
  static const MsgID ID =
    LW_GMMessage_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LW_GMMessage_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LW_GMMessage_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LW_GMMessage_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LW_GMMessage_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LW_GMMessage_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LW_GMMessage_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LW_GMMessage_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LW_GMMessage)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_NewNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_NewNotice) */ {
 public:
  LD_NewNotice();
  virtual ~LD_NewNotice();

  LD_NewNotice(const LD_NewNotice& from);

  inline LD_NewNotice& operator=(const LD_NewNotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_NewNotice& default_instance();

  static inline const LD_NewNotice* internal_default_instance() {
    return reinterpret_cast<const LD_NewNotice*>(
               &_LD_NewNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(LD_NewNotice* other);

  // implements Message ----------------------------------------------

  inline LD_NewNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_NewNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_NewNotice& from);
  void MergeFrom(const LD_NewNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_NewNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_NewNotice_MsgID MsgID;
  static const MsgID ID =
    LD_NewNotice_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_NewNotice_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_NewNotice_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_NewNotice_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_NewNotice_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_NewNotice_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_NewNotice_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_NewNotice_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string content = 4;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 4;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional string author = 5;
  bool has_author() const;
  void clear_author();
  static const int kAuthorFieldNumber = 5;
  const ::std::string& author() const;
  void set_author(const ::std::string& value);
  #if LANG_CXX11
  void set_author(::std::string&& value);
  #endif
  void set_author(const char* value);
  void set_author(const char* value, size_t size);
  ::std::string* mutable_author();
  ::std::string* release_author();
  void set_allocated_author(::std::string* author);

  // optional string start_time = 6;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  const ::std::string& start_time() const;
  void set_start_time(const ::std::string& value);
  #if LANG_CXX11
  void set_start_time(::std::string&& value);
  #endif
  void set_start_time(const char* value);
  void set_start_time(const char* value, size_t size);
  ::std::string* mutable_start_time();
  ::std::string* release_start_time();
  void set_allocated_start_time(::std::string* start_time);

  // optional string end_time = 7;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 7;
  const ::std::string& end_time() const;
  void set_end_time(const ::std::string& value);
  #if LANG_CXX11
  void set_end_time(::std::string&& value);
  #endif
  void set_end_time(const char* value);
  void set_end_time(const char* value, size_t size);
  ::std::string* mutable_end_time();
  ::std::string* release_end_time();
  void set_allocated_end_time(::std::string* end_time);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 retID = 8;
  bool has_retid() const;
  void clear_retid();
  static const int kRetIDFieldNumber = 8;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // optional int32 number = 9;
  bool has_number() const;
  void clear_number();
  static const int kNumberFieldNumber = 9;
  ::google::protobuf::int32 number() const;
  void set_number(::google::protobuf::int32 value);

  // optional int32 interval_time = 10;
  bool has_interval_time() const;
  void clear_interval_time();
  static const int kIntervalTimeFieldNumber = 10;
  ::google::protobuf::int32 interval_time() const;
  void set_interval_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_NewNotice)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_type();
  void clear_has_type();
  void set_has_name();
  void clear_has_name();
  void set_has_content();
  void clear_has_content();
  void set_has_author();
  void clear_has_author();
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_end_time();
  void clear_has_end_time();
  void set_has_retid();
  void clear_has_retid();
  void set_has_number();
  void clear_has_number();
  void set_has_interval_time();
  void clear_has_interval_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr author_;
  ::google::protobuf::internal::ArenaStringPtr start_time_;
  ::google::protobuf::internal::ArenaStringPtr end_time_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 retid_;
  ::google::protobuf::int32 number_;
  ::google::protobuf::int32 interval_time_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_NewNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DL_NewNotice) */ {
 public:
  DL_NewNotice();
  virtual ~DL_NewNotice();

  DL_NewNotice(const DL_NewNotice& from);

  inline DL_NewNotice& operator=(const DL_NewNotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_NewNotice& default_instance();

  static inline const DL_NewNotice* internal_default_instance() {
    return reinterpret_cast<const DL_NewNotice*>(
               &_DL_NewNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(DL_NewNotice* other);

  // implements Message ----------------------------------------------

  inline DL_NewNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_NewNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_NewNotice& from);
  void MergeFrom(const DL_NewNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_NewNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DL_NewNotice_MsgID MsgID;
  static const MsgID ID =
    DL_NewNotice_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DL_NewNotice_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DL_NewNotice_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DL_NewNotice_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DL_NewNotice_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DL_NewNotice_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DL_NewNotice_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DL_NewNotice_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string name = 5;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string content = 6;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 6;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional string author = 7;
  bool has_author() const;
  void clear_author();
  static const int kAuthorFieldNumber = 7;
  const ::std::string& author() const;
  void set_author(const ::std::string& value);
  #if LANG_CXX11
  void set_author(::std::string&& value);
  #endif
  void set_author(const char* value);
  void set_author(const char* value, size_t size);
  ::std::string* mutable_author();
  ::std::string* release_author();
  void set_allocated_author(::std::string* author);

  // optional int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 guid = 3;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 start_time = 8;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 8;
  ::google::protobuf::int32 start_time() const;
  void set_start_time(::google::protobuf::int32 value);

  // optional int32 end_time = 9;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 9;
  ::google::protobuf::int32 end_time() const;
  void set_end_time(::google::protobuf::int32 value);

  // optional int32 retID = 10;
  bool has_retid() const;
  void clear_retid();
  static const int kRetIDFieldNumber = 10;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // optional int32 number = 11;
  bool has_number() const;
  void clear_number();
  static const int kNumberFieldNumber = 11;
  ::google::protobuf::int32 number() const;
  void set_number(::google::protobuf::int32 value);

  // optional int32 interval_time = 12;
  bool has_interval_time() const;
  void clear_interval_time();
  static const int kIntervalTimeFieldNumber = 12;
  ::google::protobuf::int32 interval_time() const;
  void set_interval_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DL_NewNotice)
 private:
  void set_has_ret();
  void clear_has_ret();
  void set_has_id();
  void clear_has_id();
  void set_has_guid();
  void clear_has_guid();
  void set_has_type();
  void clear_has_type();
  void set_has_name();
  void clear_has_name();
  void set_has_content();
  void clear_has_content();
  void set_has_author();
  void clear_has_author();
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_end_time();
  void clear_has_end_time();
  void set_has_retid();
  void clear_has_retid();
  void set_has_number();
  void clear_has_number();
  void set_has_interval_time();
  void clear_has_interval_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr author_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 start_time_;
  ::google::protobuf::int32 end_time_;
  ::google::protobuf::int32 retid_;
  ::google::protobuf::int32 number_;
  ::google::protobuf::int32 interval_time_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_NewNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_NewNotice) */ {
 public:
  LS_NewNotice();
  virtual ~LS_NewNotice();

  LS_NewNotice(const LS_NewNotice& from);

  inline LS_NewNotice& operator=(const LS_NewNotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_NewNotice& default_instance();

  static inline const LS_NewNotice* internal_default_instance() {
    return reinterpret_cast<const LS_NewNotice*>(
               &_LS_NewNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(LS_NewNotice* other);

  // implements Message ----------------------------------------------

  inline LS_NewNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_NewNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_NewNotice& from);
  void MergeFrom(const LS_NewNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_NewNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_NewNotice_MsgID MsgID;
  static const MsgID ID =
    LS_NewNotice_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_NewNotice_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_NewNotice_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_NewNotice_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_NewNotice_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_NewNotice_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_NewNotice_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_NewNotice_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string content = 6;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 6;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 start_time = 2;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  ::google::protobuf::int32 start_time() const;
  void set_start_time(::google::protobuf::int32 value);

  // optional int32 end_time = 3;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  ::google::protobuf::int32 end_time() const;
  void set_end_time(::google::protobuf::int32 value);

  // optional int32 msg_type = 4;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 4;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // optional int32 is_read = 5;
  bool has_is_read() const;
  void clear_is_read();
  static const int kIsReadFieldNumber = 5;
  ::google::protobuf::int32 is_read() const;
  void set_is_read(::google::protobuf::int32 value);

  // optional int32 retID = 7;
  bool has_retid() const;
  void clear_retid();
  static const int kRetIDFieldNumber = 7;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // optional int32 number = 8;
  bool has_number() const;
  void clear_number();
  static const int kNumberFieldNumber = 8;
  ::google::protobuf::int32 number() const;
  void set_number(::google::protobuf::int32 value);

  // optional int32 interval_time = 9;
  bool has_interval_time() const;
  void clear_interval_time();
  static const int kIntervalTimeFieldNumber = 9;
  ::google::protobuf::int32 interval_time() const;
  void set_interval_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_NewNotice)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_end_time();
  void clear_has_end_time();
  void set_has_msg_type();
  void clear_has_msg_type();
  void set_has_is_read();
  void clear_has_is_read();
  void set_has_content();
  void clear_has_content();
  void set_has_retid();
  void clear_has_retid();
  void set_has_number();
  void clear_has_number();
  void set_has_interval_time();
  void clear_has_interval_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 start_time_;
  ::google::protobuf::int32 end_time_;
  ::google::protobuf::int32 msg_type_;
  ::google::protobuf::int32 is_read_;
  ::google::protobuf::int32 retid_;
  ::google::protobuf::int32 number_;
  ::google::protobuf::int32 interval_time_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_DelMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_DelMessage) */ {
 public:
  LS_DelMessage();
  virtual ~LS_DelMessage();

  LS_DelMessage(const LS_DelMessage& from);

  inline LS_DelMessage& operator=(const LS_DelMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_DelMessage& default_instance();

  static inline const LS_DelMessage* internal_default_instance() {
    return reinterpret_cast<const LS_DelMessage*>(
               &_LS_DelMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(LS_DelMessage* other);

  // implements Message ----------------------------------------------

  inline LS_DelMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_DelMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_DelMessage& from);
  void MergeFrom(const LS_DelMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_DelMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_DelMessage_MsgID MsgID;
  static const MsgID ID =
    LS_DelMessage_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_DelMessage_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_DelMessage_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_DelMessage_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_DelMessage_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_DelMessage_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_DelMessage_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_DelMessage_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 msg_type = 1;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // optional int32 msg_id = 2;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  ::google::protobuf::int32 msg_id() const;
  void set_msg_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_DelMessage)
 private:
  void set_has_msg_type();
  void clear_has_msg_type();
  void set_has_msg_id();
  void clear_has_msg_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 msg_type_;
  ::google::protobuf::int32 msg_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LG_NewNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LG_NewNotice) */ {
 public:
  LG_NewNotice();
  virtual ~LG_NewNotice();

  LG_NewNotice(const LG_NewNotice& from);

  inline LG_NewNotice& operator=(const LG_NewNotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LG_NewNotice& default_instance();

  static inline const LG_NewNotice* internal_default_instance() {
    return reinterpret_cast<const LG_NewNotice*>(
               &_LG_NewNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    106;

  void Swap(LG_NewNotice* other);

  // implements Message ----------------------------------------------

  inline LG_NewNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  LG_NewNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LG_NewNotice& from);
  void MergeFrom(const LG_NewNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LG_NewNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LG_NewNotice_MsgID MsgID;
  static const MsgID ID =
    LG_NewNotice_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LG_NewNotice_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LG_NewNotice_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LG_NewNotice_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LG_NewNotice_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LG_NewNotice_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LG_NewNotice_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LG_NewNotice_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string content = 8;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 8;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 gateid = 2;
  bool has_gateid() const;
  void clear_gateid();
  static const int kGateidFieldNumber = 2;
  ::google::protobuf::int32 gateid() const;
  void set_gateid(::google::protobuf::int32 value);

  // optional int32 sessionid = 3;
  bool has_sessionid() const;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 3;
  ::google::protobuf::int32 sessionid() const;
  void set_sessionid(::google::protobuf::int32 value);

  // optional int32 start_time = 4;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  ::google::protobuf::int32 start_time() const;
  void set_start_time(::google::protobuf::int32 value);

  // optional int32 end_time = 5;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  ::google::protobuf::int32 end_time() const;
  void set_end_time(::google::protobuf::int32 value);

  // optional int32 msg_type = 6;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 6;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // optional int32 is_read = 7;
  bool has_is_read() const;
  void clear_is_read();
  static const int kIsReadFieldNumber = 7;
  ::google::protobuf::int32 is_read() const;
  void set_is_read(::google::protobuf::int32 value);

  // optional int32 retID = 9;
  bool has_retid() const;
  void clear_retid();
  static const int kRetIDFieldNumber = 9;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // optional int32 guid = 10;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 10;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LG_NewNotice)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_gateid();
  void clear_has_gateid();
  void set_has_sessionid();
  void clear_has_sessionid();
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_end_time();
  void clear_has_end_time();
  void set_has_msg_type();
  void clear_has_msg_type();
  void set_has_is_read();
  void clear_has_is_read();
  void set_has_content();
  void clear_has_content();
  void set_has_retid();
  void clear_has_retid();
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 gateid_;
  ::google::protobuf::int32 sessionid_;
  ::google::protobuf::int32 start_time_;
  ::google::protobuf::int32 end_time_;
  ::google::protobuf::int32 msg_type_;
  ::google::protobuf::int32 is_read_;
  ::google::protobuf::int32 retid_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LG_DelNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LG_DelNotice) */ {
 public:
  LG_DelNotice();
  virtual ~LG_DelNotice();

  LG_DelNotice(const LG_DelNotice& from);

  inline LG_DelNotice& operator=(const LG_DelNotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LG_DelNotice& default_instance();

  static inline const LG_DelNotice* internal_default_instance() {
    return reinterpret_cast<const LG_DelNotice*>(
               &_LG_DelNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    107;

  void Swap(LG_DelNotice* other);

  // implements Message ----------------------------------------------

  inline LG_DelNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  LG_DelNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LG_DelNotice& from);
  void MergeFrom(const LG_DelNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LG_DelNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LG_DelNotice_MsgID MsgID;
  static const MsgID ID =
    LG_DelNotice_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LG_DelNotice_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LG_DelNotice_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LG_DelNotice_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LG_DelNotice_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LG_DelNotice_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LG_DelNotice_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LG_DelNotice_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 msg_id = 2;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  ::google::protobuf::int32 msg_id() const;
  void set_msg_id(::google::protobuf::int32 value);

  // optional int32 msg_type = 3;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 3;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // optional int32 retID = 4;
  bool has_retid() const;
  void clear_retid();
  static const int kRetIDFieldNumber = 4;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LG_DelNotice)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_msg_id();
  void clear_has_msg_id();
  void set_has_msg_type();
  void clear_has_msg_type();
  void set_has_retid();
  void clear_has_retid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 msg_id_;
  ::google::protobuf::int32 msg_type_;
  ::google::protobuf::int32 retid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GL_NewNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GL_NewNotice) */ {
 public:
  GL_NewNotice();
  virtual ~GL_NewNotice();

  GL_NewNotice(const GL_NewNotice& from);

  inline GL_NewNotice& operator=(const GL_NewNotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GL_NewNotice& default_instance();

  static inline const GL_NewNotice* internal_default_instance() {
    return reinterpret_cast<const GL_NewNotice*>(
               &_GL_NewNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    108;

  void Swap(GL_NewNotice* other);

  // implements Message ----------------------------------------------

  inline GL_NewNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  GL_NewNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GL_NewNotice& from);
  void MergeFrom(const GL_NewNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GL_NewNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GL_NewNotice_MsgID MsgID;
  static const MsgID ID =
    GL_NewNotice_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return GL_NewNotice_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    GL_NewNotice_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    GL_NewNotice_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    GL_NewNotice_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return GL_NewNotice_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return GL_NewNotice_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return GL_NewNotice_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 retID = 2;
  bool has_retid() const;
  void clear_retid();
  static const int kRetIDFieldNumber = 2;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GL_NewNotice)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_retid();
  void clear_has_retid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 retid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LG_FeedBackUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LG_FeedBackUpdate) */ {
 public:
  LG_FeedBackUpdate();
  virtual ~LG_FeedBackUpdate();

  LG_FeedBackUpdate(const LG_FeedBackUpdate& from);

  inline LG_FeedBackUpdate& operator=(const LG_FeedBackUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LG_FeedBackUpdate& default_instance();

  static inline const LG_FeedBackUpdate* internal_default_instance() {
    return reinterpret_cast<const LG_FeedBackUpdate*>(
               &_LG_FeedBackUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(LG_FeedBackUpdate* other);

  // implements Message ----------------------------------------------

  inline LG_FeedBackUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  LG_FeedBackUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LG_FeedBackUpdate& from);
  void MergeFrom(const LG_FeedBackUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LG_FeedBackUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LG_FeedBackUpdate_MsgID MsgID;
  static const MsgID ID =
    LG_FeedBackUpdate_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LG_FeedBackUpdate_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LG_FeedBackUpdate_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LG_FeedBackUpdate_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LG_FeedBackUpdate_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LG_FeedBackUpdate_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LG_FeedBackUpdate_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LG_FeedBackUpdate_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 UpdateTime = 3;
  bool has_updatetime() const;
  void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 3;
  ::google::protobuf::int32 updatetime() const;
  void set_updatetime(::google::protobuf::int32 value);

  // optional int32 feedbackid = 4;
  bool has_feedbackid() const;
  void clear_feedbackid();
  static const int kFeedbackidFieldNumber = 4;
  ::google::protobuf::int32 feedbackid() const;
  void set_feedbackid(::google::protobuf::int32 value);

  // optional int32 retid = 5;
  bool has_retid() const;
  void clear_retid();
  static const int kRetidFieldNumber = 5;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LG_FeedBackUpdate)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_type();
  void clear_has_type();
  void set_has_updatetime();
  void clear_has_updatetime();
  void set_has_feedbackid();
  void clear_has_feedbackid();
  void set_has_retid();
  void clear_has_retid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 updatetime_;
  ::google::protobuf::int32 feedbackid_;
  ::google::protobuf::int32 retid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_DelMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_DelMessage) */ {
 public:
  LD_DelMessage();
  virtual ~LD_DelMessage();

  LD_DelMessage(const LD_DelMessage& from);

  inline LD_DelMessage& operator=(const LD_DelMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_DelMessage& default_instance();

  static inline const LD_DelMessage* internal_default_instance() {
    return reinterpret_cast<const LD_DelMessage*>(
               &_LD_DelMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    110;

  void Swap(LD_DelMessage* other);

  // implements Message ----------------------------------------------

  inline LD_DelMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_DelMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_DelMessage& from);
  void MergeFrom(const LD_DelMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_DelMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_DelMessage_MsgID MsgID;
  static const MsgID ID =
    LD_DelMessage_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_DelMessage_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_DelMessage_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_DelMessage_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_DelMessage_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_DelMessage_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_DelMessage_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_DelMessage_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 msg_type = 1;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // optional int32 msg_id = 2;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  ::google::protobuf::int32 msg_id() const;
  void set_msg_id(::google::protobuf::int32 value);

  // optional int32 retid = 3;
  bool has_retid() const;
  void clear_retid();
  static const int kRetidFieldNumber = 3;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_DelMessage)
 private:
  void set_has_msg_type();
  void clear_has_msg_type();
  void set_has_msg_id();
  void clear_has_msg_id();
  void set_has_retid();
  void clear_has_retid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 msg_type_;
  ::google::protobuf::int32 msg_id_;
  ::google::protobuf::int32 retid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_DelMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DL_DelMessage) */ {
 public:
  DL_DelMessage();
  virtual ~DL_DelMessage();

  DL_DelMessage(const DL_DelMessage& from);

  inline DL_DelMessage& operator=(const DL_DelMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_DelMessage& default_instance();

  static inline const DL_DelMessage* internal_default_instance() {
    return reinterpret_cast<const DL_DelMessage*>(
               &_DL_DelMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(DL_DelMessage* other);

  // implements Message ----------------------------------------------

  inline DL_DelMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_DelMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_DelMessage& from);
  void MergeFrom(const DL_DelMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_DelMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DL_DelMessage_MsgID MsgID;
  static const MsgID ID =
    DL_DelMessage_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DL_DelMessage_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DL_DelMessage_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DL_DelMessage_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DL_DelMessage_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DL_DelMessage_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DL_DelMessage_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DL_DelMessage_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 msg_type = 1;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // optional int32 msg_id = 2;
  bool has_msg_id() const;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  ::google::protobuf::int32 msg_id() const;
  void set_msg_id(::google::protobuf::int32 value);

  // optional int32 retid = 3;
  bool has_retid() const;
  void clear_retid();
  static const int kRetidFieldNumber = 3;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // optional int32 guid = 4;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 4;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 ret = 5;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 5;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DL_DelMessage)
 private:
  void set_has_msg_type();
  void clear_has_msg_type();
  void set_has_msg_id();
  void clear_has_msg_id();
  void set_has_retid();
  void clear_has_retid();
  void set_has_guid();
  void clear_has_guid();
  void set_has_ret();
  void clear_has_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 msg_type_;
  ::google::protobuf::int32 msg_id_;
  ::google::protobuf::int32 retid_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 ret_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SL_Log_Money : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SL_Log_Money) */ {
 public:
  SL_Log_Money();
  virtual ~SL_Log_Money();

  SL_Log_Money(const SL_Log_Money& from);

  inline SL_Log_Money& operator=(const SL_Log_Money& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SL_Log_Money& default_instance();

  static inline const SL_Log_Money* internal_default_instance() {
    return reinterpret_cast<const SL_Log_Money*>(
               &_SL_Log_Money_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(SL_Log_Money* other);

  // implements Message ----------------------------------------------

  inline SL_Log_Money* New() const PROTOBUF_FINAL { return New(NULL); }

  SL_Log_Money* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SL_Log_Money& from);
  void MergeFrom(const SL_Log_Money& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SL_Log_Money* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SL_Log_Money_MsgID MsgID;
  static const MsgID ID =
    SL_Log_Money_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SL_Log_Money_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SL_Log_Money_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SL_Log_Money_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SL_Log_Money_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SL_Log_Money_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SL_Log_Money_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SL_Log_Money_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string game_name = 4;
  bool has_game_name() const;
  void clear_game_name();
  static const int kGameNameFieldNumber = 4;
  const ::std::string& game_name() const;
  void set_game_name(const ::std::string& value);
  #if LANG_CXX11
  void set_game_name(::std::string&& value);
  #endif
  void set_game_name(const char* value);
  void set_game_name(const char* value, size_t size);
  ::std::string* mutable_game_name();
  ::std::string* release_game_name();
  void set_allocated_game_name(::std::string* game_name);

  // optional string phone_type = 5;
  bool has_phone_type() const;
  void clear_phone_type();
  static const int kPhoneTypeFieldNumber = 5;
  const ::std::string& phone_type() const;
  void set_phone_type(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_type(::std::string&& value);
  #endif
  void set_phone_type(const char* value);
  void set_phone_type(const char* value, size_t size);
  ::std::string* mutable_phone_type();
  ::std::string* release_phone_type();
  void set_allocated_phone_type(::std::string* phone_type);

  // optional string ip = 10;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 10;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string id = 11;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 11;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string channel_id = 12;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 12;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int64 old_money = 6;
  bool has_old_money() const;
  void clear_old_money();
  static const int kOldMoneyFieldNumber = 6;
  ::google::protobuf::int64 old_money() const;
  void set_old_money(::google::protobuf::int64 value);

  // optional int64 new_money = 7;
  bool has_new_money() const;
  void clear_new_money();
  static const int kNewMoneyFieldNumber = 7;
  ::google::protobuf::int64 new_money() const;
  void set_new_money(::google::protobuf::int64 value);

  // optional int64 tax = 8;
  bool has_tax() const;
  void clear_tax();
  static const int kTaxFieldNumber = 8;
  ::google::protobuf::int64 tax() const;
  void set_tax(::google::protobuf::int64 value);

  // optional int64 change_money = 9;
  bool has_change_money() const;
  void clear_change_money();
  static const int kChangeMoneyFieldNumber = 9;
  ::google::protobuf::int64 change_money() const;
  void set_change_money(::google::protobuf::int64 value);

  // optional int32 gameid = 3;
  bool has_gameid() const;
  void clear_gameid();
  static const int kGameidFieldNumber = 3;
  ::google::protobuf::int32 gameid() const;
  void set_gameid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SL_Log_Money)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_type();
  void clear_has_type();
  void set_has_gameid();
  void clear_has_gameid();
  void set_has_game_name();
  void clear_has_game_name();
  void set_has_phone_type();
  void clear_has_phone_type();
  void set_has_old_money();
  void clear_has_old_money();
  void set_has_new_money();
  void clear_has_new_money();
  void set_has_tax();
  void clear_has_tax();
  void set_has_change_money();
  void clear_has_change_money();
  void set_has_ip();
  void clear_has_ip();
  void set_has_id();
  void clear_has_id();
  void set_has_channel_id();
  void clear_has_channel_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr game_name_;
  ::google::protobuf::internal::ArenaStringPtr phone_type_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 old_money_;
  ::google::protobuf::int64 new_money_;
  ::google::protobuf::int64 tax_;
  ::google::protobuf::int64 change_money_;
  ::google::protobuf::int32 gameid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SL_Log_Game : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SL_Log_Game) */ {
 public:
  SL_Log_Game();
  virtual ~SL_Log_Game();

  SL_Log_Game(const SL_Log_Game& from);

  inline SL_Log_Game& operator=(const SL_Log_Game& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SL_Log_Game& default_instance();

  static inline const SL_Log_Game* internal_default_instance() {
    return reinterpret_cast<const SL_Log_Game*>(
               &_SL_Log_Game_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(SL_Log_Game* other);

  // implements Message ----------------------------------------------

  inline SL_Log_Game* New() const PROTOBUF_FINAL { return New(NULL); }

  SL_Log_Game* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SL_Log_Game& from);
  void MergeFrom(const SL_Log_Game& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SL_Log_Game* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SL_Log_Game_MsgID MsgID;
  static const MsgID ID =
    SL_Log_Game_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SL_Log_Game_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SL_Log_Game_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SL_Log_Game_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SL_Log_Game_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SL_Log_Game_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SL_Log_Game_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SL_Log_Game_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string playid = 1;
  bool has_playid() const;
  void clear_playid();
  static const int kPlayidFieldNumber = 1;
  const ::std::string& playid() const;
  void set_playid(const ::std::string& value);
  #if LANG_CXX11
  void set_playid(::std::string&& value);
  #endif
  void set_playid(const char* value);
  void set_playid(const char* value, size_t size);
  ::std::string* mutable_playid();
  ::std::string* release_playid();
  void set_allocated_playid(::std::string* playid);

  // optional string type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // optional string log = 3;
  bool has_log() const;
  void clear_log();
  static const int kLogFieldNumber = 3;
  const ::std::string& log() const;
  void set_log(const ::std::string& value);
  #if LANG_CXX11
  void set_log(::std::string&& value);
  #endif
  void set_log(const char* value);
  void set_log(const char* value, size_t size);
  ::std::string* mutable_log();
  ::std::string* release_log();
  void set_allocated_log(::std::string* log);

  // optional int32 starttime = 4;
  bool has_starttime() const;
  void clear_starttime();
  static const int kStarttimeFieldNumber = 4;
  ::google::protobuf::int32 starttime() const;
  void set_starttime(::google::protobuf::int32 value);

  // optional int32 endtime = 5;
  bool has_endtime() const;
  void clear_endtime();
  static const int kEndtimeFieldNumber = 5;
  ::google::protobuf::int32 endtime() const;
  void set_endtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SL_Log_Game)
 private:
  void set_has_playid();
  void clear_has_playid();
  void set_has_type();
  void clear_has_type();
  void set_has_log();
  void clear_has_log();
  void set_has_starttime();
  void clear_has_starttime();
  void set_has_endtime();
  void clear_has_endtime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr playid_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr log_;
  ::google::protobuf::int32 starttime_;
  ::google::protobuf::int32 endtime_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WF_CashFalse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WF_CashFalse) */ {
 public:
  WF_CashFalse();
  virtual ~WF_CashFalse();

  WF_CashFalse(const WF_CashFalse& from);

  inline WF_CashFalse& operator=(const WF_CashFalse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WF_CashFalse& default_instance();

  static inline const WF_CashFalse* internal_default_instance() {
    return reinterpret_cast<const WF_CashFalse*>(
               &_WF_CashFalse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    114;

  void Swap(WF_CashFalse* other);

  // implements Message ----------------------------------------------

  inline WF_CashFalse* New() const PROTOBUF_FINAL { return New(NULL); }

  WF_CashFalse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WF_CashFalse& from);
  void MergeFrom(const WF_CashFalse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WF_CashFalse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WF_CashFalse_MsgID MsgID;
  static const MsgID ID =
    WF_CashFalse_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return WF_CashFalse_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    WF_CashFalse_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    WF_CashFalse_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    WF_CashFalse_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return WF_CashFalse_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return WF_CashFalse_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return WF_CashFalse_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 order_id = 1;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 1;
  ::google::protobuf::int32 order_id() const;
  void set_order_id(::google::protobuf::int32 value);

  // optional int32 del = 2;
  bool has_del() const;
  void clear_del();
  static const int kDelFieldNumber = 2;
  ::google::protobuf::int32 del() const;
  void set_del(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WF_CashFalse)
 private:
  void set_has_order_id();
  void clear_has_order_id();
  void set_has_del();
  void clear_has_del();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 order_id_;
  ::google::protobuf::int32 del_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LW_CashFalse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LW_CashFalse) */ {
 public:
  LW_CashFalse();
  virtual ~LW_CashFalse();

  LW_CashFalse(const LW_CashFalse& from);

  inline LW_CashFalse& operator=(const LW_CashFalse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LW_CashFalse& default_instance();

  static inline const LW_CashFalse* internal_default_instance() {
    return reinterpret_cast<const LW_CashFalse*>(
               &_LW_CashFalse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    115;

  void Swap(LW_CashFalse* other);

  // implements Message ----------------------------------------------

  inline LW_CashFalse* New() const PROTOBUF_FINAL { return New(NULL); }

  LW_CashFalse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LW_CashFalse& from);
  void MergeFrom(const LW_CashFalse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LW_CashFalse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LW_CashFalse_MsgID MsgID;
  static const MsgID ID =
    LW_CashFalse_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LW_CashFalse_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LW_CashFalse_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LW_CashFalse_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LW_CashFalse_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LW_CashFalse_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LW_CashFalse_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LW_CashFalse_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LW_CashFalse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_CashFalse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_CashFalse) */ {
 public:
  LD_CashFalse();
  virtual ~LD_CashFalse();

  LD_CashFalse(const LD_CashFalse& from);

  inline LD_CashFalse& operator=(const LD_CashFalse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_CashFalse& default_instance();

  static inline const LD_CashFalse* internal_default_instance() {
    return reinterpret_cast<const LD_CashFalse*>(
               &_LD_CashFalse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    116;

  void Swap(LD_CashFalse* other);

  // implements Message ----------------------------------------------

  inline LD_CashFalse* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_CashFalse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_CashFalse& from);
  void MergeFrom(const LD_CashFalse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_CashFalse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_CashFalse_MsgID MsgID;
  static const MsgID ID =
    LD_CashFalse_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_CashFalse_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_CashFalse_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_CashFalse_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_CashFalse_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_CashFalse_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_CashFalse_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_CashFalse_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // optional int32 order_id = 2;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  ::google::protobuf::int32 order_id() const;
  void set_order_id(::google::protobuf::int32 value);

  // optional int32 login_id = 3;
  bool has_login_id() const;
  void clear_login_id();
  static const int kLoginIdFieldNumber = 3;
  ::google::protobuf::int32 login_id() const;
  void set_login_id(::google::protobuf::int32 value);

  // optional int32 del = 4;
  bool has_del() const;
  void clear_del();
  static const int kDelFieldNumber = 4;
  ::google::protobuf::int32 del() const;
  void set_del(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_CashFalse)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_order_id();
  void clear_has_order_id();
  void set_has_login_id();
  void clear_has_login_id();
  void set_has_del();
  void clear_has_del();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 web_id_;
  ::google::protobuf::int32 order_id_;
  ::google::protobuf::int32 login_id_;
  ::google::protobuf::int32 del_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_CashFalseInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DL_CashFalseInfo) */ {
 public:
  DL_CashFalseInfo();
  virtual ~DL_CashFalseInfo();

  DL_CashFalseInfo(const DL_CashFalseInfo& from);

  inline DL_CashFalseInfo& operator=(const DL_CashFalseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_CashFalseInfo& default_instance();

  static inline const DL_CashFalseInfo* internal_default_instance() {
    return reinterpret_cast<const DL_CashFalseInfo*>(
               &_DL_CashFalseInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    117;

  void Swap(DL_CashFalseInfo* other);

  // implements Message ----------------------------------------------

  inline DL_CashFalseInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_CashFalseInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_CashFalseInfo& from);
  void MergeFrom(const DL_CashFalseInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_CashFalseInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DL_CashFalseInfo_MsgID MsgID;
  static const MsgID ID =
    DL_CashFalseInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DL_CashFalseInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DL_CashFalseInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DL_CashFalseInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DL_CashFalseInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DL_CashFalseInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DL_CashFalseInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DL_CashFalseInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CashFalse info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::CashFalse& info() const;
  ::CashFalse* mutable_info();
  ::CashFalse* release_info();
  void set_allocated_info(::CashFalse* info);

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // optional int32 login_id = 3;
  bool has_login_id() const;
  void clear_login_id();
  static const int kLoginIdFieldNumber = 3;
  ::google::protobuf::int32 login_id() const;
  void set_login_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DL_CashFalseInfo)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_info();
  void clear_has_info();
  void set_has_login_id();
  void clear_has_login_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CashFalse* info_;
  ::google::protobuf::int32 web_id_;
  ::google::protobuf::int32 login_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_CashDeal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_CashDeal) */ {
 public:
  LD_CashDeal();
  virtual ~LD_CashDeal();

  LD_CashDeal(const LD_CashDeal& from);

  inline LD_CashDeal& operator=(const LD_CashDeal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_CashDeal& default_instance();

  static inline const LD_CashDeal* internal_default_instance() {
    return reinterpret_cast<const LD_CashDeal*>(
               &_LD_CashDeal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    118;

  void Swap(LD_CashDeal* other);

  // implements Message ----------------------------------------------

  inline LD_CashDeal* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_CashDeal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_CashDeal& from);
  void MergeFrom(const LD_CashDeal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_CashDeal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_CashDeal_MsgID MsgID;
  static const MsgID ID =
    LD_CashDeal_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_CashDeal_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_CashDeal_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_CashDeal_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_CashDeal_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_CashDeal_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_CashDeal_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_CashDeal_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CashFalse info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::CashFalse& info() const;
  ::CashFalse* mutable_info();
  ::CashFalse* release_info();
  void set_allocated_info(::CashFalse* info);

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // optional int32 login_id = 3;
  bool has_login_id() const;
  void clear_login_id();
  static const int kLoginIdFieldNumber = 3;
  ::google::protobuf::int32 login_id() const;
  void set_login_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_CashDeal)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_info();
  void clear_has_info();
  void set_has_login_id();
  void clear_has_login_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CashFalse* info_;
  ::google::protobuf::int32 web_id_;
  ::google::protobuf::int32 login_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_CashReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DL_CashReply) */ {
 public:
  DL_CashReply();
  virtual ~DL_CashReply();

  DL_CashReply(const DL_CashReply& from);

  inline DL_CashReply& operator=(const DL_CashReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_CashReply& default_instance();

  static inline const DL_CashReply* internal_default_instance() {
    return reinterpret_cast<const DL_CashReply*>(
               &_DL_CashReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    119;

  void Swap(DL_CashReply* other);

  // implements Message ----------------------------------------------

  inline DL_CashReply* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_CashReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_CashReply& from);
  void MergeFrom(const DL_CashReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_CashReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DL_CashReply_MsgID MsgID;
  static const MsgID ID =
    DL_CashReply_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DL_CashReply_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DL_CashReply_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DL_CashReply_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DL_CashReply_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DL_CashReply_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DL_CashReply_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DL_CashReply_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DL_CashReply)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 web_id_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_CashDeal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_CashDeal) */ {
 public:
  LS_CashDeal();
  virtual ~LS_CashDeal();

  LS_CashDeal(const LS_CashDeal& from);

  inline LS_CashDeal& operator=(const LS_CashDeal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_CashDeal& default_instance();

  static inline const LS_CashDeal* internal_default_instance() {
    return reinterpret_cast<const LS_CashDeal*>(
               &_LS_CashDeal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    120;

  void Swap(LS_CashDeal* other);

  // implements Message ----------------------------------------------

  inline LS_CashDeal* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_CashDeal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_CashDeal& from);
  void MergeFrom(const LS_CashDeal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_CashDeal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_CashDeal_MsgID MsgID;
  static const MsgID ID =
    LS_CashDeal_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_CashDeal_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_CashDeal_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_CashDeal_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_CashDeal_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_CashDeal_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_CashDeal_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_CashDeal_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CashFalse info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::CashFalse& info() const;
  ::CashFalse* mutable_info();
  ::CashFalse* release_info();
  void set_allocated_info(::CashFalse* info);

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // optional int32 server_id = 3;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 3;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // optional int32 login_id = 4;
  bool has_login_id() const;
  void clear_login_id();
  static const int kLoginIdFieldNumber = 4;
  ::google::protobuf::int32 login_id() const;
  void set_login_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_CashDeal)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_info();
  void clear_has_info();
  void set_has_server_id();
  void clear_has_server_id();
  void set_has_login_id();
  void clear_has_login_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CashFalse* info_;
  ::google::protobuf::int32 web_id_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 login_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SL_CashReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SL_CashReply) */ {
 public:
  SL_CashReply();
  virtual ~SL_CashReply();

  SL_CashReply(const SL_CashReply& from);

  inline SL_CashReply& operator=(const SL_CashReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SL_CashReply& default_instance();

  static inline const SL_CashReply* internal_default_instance() {
    return reinterpret_cast<const SL_CashReply*>(
               &_SL_CashReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    121;

  void Swap(SL_CashReply* other);

  // implements Message ----------------------------------------------

  inline SL_CashReply* New() const PROTOBUF_FINAL { return New(NULL); }

  SL_CashReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SL_CashReply& from);
  void MergeFrom(const SL_CashReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SL_CashReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SL_CashReply_MsgID MsgID;
  static const MsgID ID =
    SL_CashReply_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SL_CashReply_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SL_CashReply_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SL_CashReply_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SL_CashReply_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SL_CashReply_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SL_CashReply_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SL_CashReply_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CashFalse info = 5;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 5;
  const ::CashFalse& info() const;
  ::CashFalse* mutable_info();
  ::CashFalse* release_info();
  void set_allocated_info(::CashFalse* info);

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 server_id = 3;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 3;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // optional int32 order_id = 4;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 4;
  ::google::protobuf::int32 order_id() const;
  void set_order_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SL_CashReply)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_result();
  void clear_has_result();
  void set_has_server_id();
  void clear_has_server_id();
  void set_has_order_id();
  void clear_has_order_id();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CashFalse* info_;
  ::google::protobuf::int32 web_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 order_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_CashReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_CashReply) */ {
 public:
  LD_CashReply();
  virtual ~LD_CashReply();

  LD_CashReply(const LD_CashReply& from);

  inline LD_CashReply& operator=(const LD_CashReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_CashReply& default_instance();

  static inline const LD_CashReply* internal_default_instance() {
    return reinterpret_cast<const LD_CashReply*>(
               &_LD_CashReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    122;

  void Swap(LD_CashReply* other);

  // implements Message ----------------------------------------------

  inline LD_CashReply* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_CashReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_CashReply& from);
  void MergeFrom(const LD_CashReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_CashReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_CashReply_MsgID MsgID;
  static const MsgID ID =
    LD_CashReply_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_CashReply_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_CashReply_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_CashReply_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_CashReply_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_CashReply_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_CashReply_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_CashReply_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 order_id = 3;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 3;
  ::google::protobuf::int32 order_id() const;
  void set_order_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_CashReply)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_result();
  void clear_has_result();
  void set_has_order_id();
  void clear_has_order_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 web_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 order_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_CashMoneyType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_CashMoneyType) */ {
 public:
  SD_CashMoneyType();
  virtual ~SD_CashMoneyType();

  SD_CashMoneyType(const SD_CashMoneyType& from);

  inline SD_CashMoneyType& operator=(const SD_CashMoneyType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_CashMoneyType& default_instance();

  static inline const SD_CashMoneyType* internal_default_instance() {
    return reinterpret_cast<const SD_CashMoneyType*>(
               &_SD_CashMoneyType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    123;

  void Swap(SD_CashMoneyType* other);

  // implements Message ----------------------------------------------

  inline SD_CashMoneyType* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_CashMoneyType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_CashMoneyType& from);
  void MergeFrom(const SD_CashMoneyType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_CashMoneyType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_CashMoneyType_MsgID MsgID;
  static const MsgID ID =
    SD_CashMoneyType_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_CashMoneyType_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_CashMoneyType_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_CashMoneyType_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_CashMoneyType_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_CashMoneyType_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_CashMoneyType_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_CashMoneyType_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_CashMoneyType)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_CashMoneyType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_CashMoneyType) */ {
 public:
  DS_CashMoneyType();
  virtual ~DS_CashMoneyType();

  DS_CashMoneyType(const DS_CashMoneyType& from);

  inline DS_CashMoneyType& operator=(const DS_CashMoneyType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_CashMoneyType& default_instance();

  static inline const DS_CashMoneyType* internal_default_instance() {
    return reinterpret_cast<const DS_CashMoneyType*>(
               &_DS_CashMoneyType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    124;

  void Swap(DS_CashMoneyType* other);

  // implements Message ----------------------------------------------

  inline DS_CashMoneyType* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_CashMoneyType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_CashMoneyType& from);
  void MergeFrom(const DS_CashMoneyType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_CashMoneyType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_CashMoneyType_MsgID MsgID;
  static const MsgID ID =
    DS_CashMoneyType_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_CashMoneyType_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_CashMoneyType_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_CashMoneyType_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_CashMoneyType_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_CashMoneyType_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_CashMoneyType_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_CashMoneyType_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CashMoneyType pb_cash_info = 2;
  int pb_cash_info_size() const;
  void clear_pb_cash_info();
  static const int kPbCashInfoFieldNumber = 2;
  const ::CashMoneyType& pb_cash_info(int index) const;
  ::CashMoneyType* mutable_pb_cash_info(int index);
  ::CashMoneyType* add_pb_cash_info();
  ::google::protobuf::RepeatedPtrField< ::CashMoneyType >*
      mutable_pb_cash_info();
  const ::google::protobuf::RepeatedPtrField< ::CashMoneyType >&
      pb_cash_info() const;

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_CashMoneyType)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CashMoneyType > pb_cash_info_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_CashMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_CashMoney) */ {
 public:
  SD_CashMoney();
  virtual ~SD_CashMoney();

  SD_CashMoney(const SD_CashMoney& from);

  inline SD_CashMoney& operator=(const SD_CashMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_CashMoney& default_instance();

  static inline const SD_CashMoney* internal_default_instance() {
    return reinterpret_cast<const SD_CashMoney*>(
               &_SD_CashMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    125;

  void Swap(SD_CashMoney* other);

  // implements Message ----------------------------------------------

  inline SD_CashMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_CashMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_CashMoney& from);
  void MergeFrom(const SD_CashMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_CashMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_CashMoney_MsgID MsgID;
  static const MsgID ID =
    SD_CashMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_CashMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_CashMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_CashMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_CashMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_CashMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_CashMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_CashMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string phone = 6;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 6;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional string phone_type = 7;
  bool has_phone_type() const;
  void clear_phone_type();
  static const int kPhoneTypeFieldNumber = 7;
  const ::std::string& phone_type() const;
  void set_phone_type(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_type(::std::string&& value);
  #endif
  void set_phone_type(const char* value);
  void set_phone_type(const char* value, size_t size);
  ::std::string* mutable_phone_type();
  ::std::string* release_phone_type();
  void set_allocated_phone_type(::std::string* phone_type);

  // optional string ip = 8;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 8;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string bag_id = 9;
  bool has_bag_id() const;
  void clear_bag_id();
  static const int kBagIdFieldNumber = 9;
  const ::std::string& bag_id() const;
  void set_bag_id(const ::std::string& value);
  #if LANG_CXX11
  void set_bag_id(::std::string&& value);
  #endif
  void set_bag_id(const char* value);
  void set_bag_id(const char* value, size_t size);
  ::std::string* mutable_bag_id();
  ::std::string* release_bag_id();
  void set_allocated_bag_id(::std::string* bag_id);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 money = 3;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // optional int32 coins = 4;
  bool has_coins() const;
  void clear_coins();
  static const int kCoinsFieldNumber = 4;
  ::google::protobuf::int32 coins() const;
  void set_coins(::google::protobuf::int32 value);

  // optional int32 pay_money = 5;
  bool has_pay_money() const;
  void clear_pay_money();
  static const int kPayMoneyFieldNumber = 5;
  ::google::protobuf::int32 pay_money() const;
  void set_pay_money(::google::protobuf::int32 value);

  // optional int64 bef_money = 10;
  bool has_bef_money() const;
  void clear_bef_money();
  static const int kBefMoneyFieldNumber = 10;
  ::google::protobuf::int64 bef_money() const;
  void set_bef_money(::google::protobuf::int64 value);

  // optional int64 aft_money = 11;
  bool has_aft_money() const;
  void clear_aft_money();
  static const int kAftMoneyFieldNumber = 11;
  ::google::protobuf::int64 aft_money() const;
  void set_aft_money(::google::protobuf::int64 value);

  // optional int64 bef_bank = 12;
  bool has_bef_bank() const;
  void clear_bef_bank();
  static const int kBefBankFieldNumber = 12;
  ::google::protobuf::int64 bef_bank() const;
  void set_bef_bank(::google::protobuf::int64 value);

  // optional int64 aft_bank = 13;
  bool has_aft_bank() const;
  void clear_aft_bank();
  static const int kAftBankFieldNumber = 13;
  ::google::protobuf::int64 aft_bank() const;
  void set_aft_bank(::google::protobuf::int64 value);

  // optional int32 cash_type = 14;
  bool has_cash_type() const;
  void clear_cash_type();
  static const int kCashTypeFieldNumber = 14;
  ::google::protobuf::int32 cash_type() const;
  void set_cash_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_CashMoney)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();
  void set_has_coins();
  void clear_has_coins();
  void set_has_pay_money();
  void clear_has_pay_money();
  void set_has_phone();
  void clear_has_phone();
  void set_has_phone_type();
  void clear_has_phone_type();
  void set_has_ip();
  void clear_has_ip();
  void set_has_bag_id();
  void clear_has_bag_id();
  void set_has_bef_money();
  void clear_has_bef_money();
  void set_has_aft_money();
  void clear_has_aft_money();
  void set_has_bef_bank();
  void clear_has_bef_bank();
  void set_has_aft_bank();
  void clear_has_aft_bank();
  void set_has_cash_type();
  void clear_has_cash_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr phone_type_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr bag_id_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 coins_;
  ::google::protobuf::int32 pay_money_;
  ::google::protobuf::int64 bef_money_;
  ::google::protobuf::int64 aft_money_;
  ::google::protobuf::int64 bef_bank_;
  ::google::protobuf::int64 aft_bank_;
  ::google::protobuf::int32 cash_type_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_CashMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_CashMoney) */ {
 public:
  DS_CashMoney();
  virtual ~DS_CashMoney();

  DS_CashMoney(const DS_CashMoney& from);

  inline DS_CashMoney& operator=(const DS_CashMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_CashMoney& default_instance();

  static inline const DS_CashMoney* internal_default_instance() {
    return reinterpret_cast<const DS_CashMoney*>(
               &_DS_CashMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    126;

  void Swap(DS_CashMoney* other);

  // implements Message ----------------------------------------------

  inline DS_CashMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_CashMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_CashMoney& from);
  void MergeFrom(const DS_CashMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_CashMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_CashMoney_MsgID MsgID;
  static const MsgID ID =
    DS_CashMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_CashMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_CashMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_CashMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_CashMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_CashMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_CashMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_CashMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 coins = 2;
  bool has_coins() const;
  void clear_coins();
  static const int kCoinsFieldNumber = 2;
  ::google::protobuf::int32 coins() const;
  void set_coins(::google::protobuf::int32 value);

  // optional int32 result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_CashMoney)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_coins();
  void clear_has_coins();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 coins_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WF_Recharge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WF_Recharge) */ {
 public:
  WF_Recharge();
  virtual ~WF_Recharge();

  WF_Recharge(const WF_Recharge& from);

  inline WF_Recharge& operator=(const WF_Recharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WF_Recharge& default_instance();

  static inline const WF_Recharge* internal_default_instance() {
    return reinterpret_cast<const WF_Recharge*>(
               &_WF_Recharge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    127;

  void Swap(WF_Recharge* other);

  // implements Message ----------------------------------------------

  inline WF_Recharge* New() const PROTOBUF_FINAL { return New(NULL); }

  WF_Recharge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WF_Recharge& from);
  void MergeFrom(const WF_Recharge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WF_Recharge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WF_Recharge_MsgID MsgID;
  static const MsgID ID =
    WF_Recharge_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return WF_Recharge_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    WF_Recharge_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    WF_Recharge_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    WF_Recharge_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return WF_Recharge_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return WF_Recharge_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return WF_Recharge_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 order_id = 2;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  ::google::protobuf::int32 order_id() const;
  void set_order_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WF_Recharge)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_order_id();
  void clear_has_order_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 order_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FW_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FW_Result) */ {
 public:
  FW_Result();
  virtual ~FW_Result();

  FW_Result(const FW_Result& from);

  inline FW_Result& operator=(const FW_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FW_Result& default_instance();

  static inline const FW_Result* internal_default_instance() {
    return reinterpret_cast<const FW_Result*>(
               &_FW_Result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    128;

  void Swap(FW_Result* other);

  // implements Message ----------------------------------------------

  inline FW_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  FW_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FW_Result& from);
  void MergeFrom(const FW_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FW_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FW_Result_MsgID MsgID;
  static const MsgID ID =
    FW_Result_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return FW_Result_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    FW_Result_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    FW_Result_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    FW_Result_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return FW_Result_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return FW_Result_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return FW_Result_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FW_Result)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FD_ChangMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FD_ChangMoney) */ {
 public:
  FD_ChangMoney();
  virtual ~FD_ChangMoney();

  FD_ChangMoney(const FD_ChangMoney& from);

  inline FD_ChangMoney& operator=(const FD_ChangMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FD_ChangMoney& default_instance();

  static inline const FD_ChangMoney* internal_default_instance() {
    return reinterpret_cast<const FD_ChangMoney*>(
               &_FD_ChangMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    129;

  void Swap(FD_ChangMoney* other);

  // implements Message ----------------------------------------------

  inline FD_ChangMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  FD_ChangMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FD_ChangMoney& from);
  void MergeFrom(const FD_ChangMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FD_ChangMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FD_ChangMoney_MsgID MsgID;
  static const MsgID ID =
    FD_ChangMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return FD_ChangMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    FD_ChangMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    FD_ChangMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    FD_ChangMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return FD_ChangMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return FD_ChangMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return FD_ChangMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // optional int32 order_id = 2;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  ::google::protobuf::int32 order_id() const;
  void set_order_id(::google::protobuf::int32 value);

  // optional int32 type_id = 3;
  bool has_type_id() const;
  void clear_type_id();
  static const int kTypeIdFieldNumber = 3;
  ::google::protobuf::int32 type_id() const;
  void set_type_id(::google::protobuf::int32 value);

  // optional int32 other_oper = 4;
  bool has_other_oper() const;
  void clear_other_oper();
  static const int kOtherOperFieldNumber = 4;
  ::google::protobuf::int32 other_oper() const;
  void set_other_oper(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FD_ChangMoney)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_order_id();
  void clear_has_order_id();
  void set_has_type_id();
  void clear_has_type_id();
  void set_has_other_oper();
  void clear_has_other_oper();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 web_id_;
  ::google::protobuf::int32 order_id_;
  ::google::protobuf::int32 type_id_;
  ::google::protobuf::int32 other_oper_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DF_Reply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DF_Reply) */ {
 public:
  DF_Reply();
  virtual ~DF_Reply();

  DF_Reply(const DF_Reply& from);

  inline DF_Reply& operator=(const DF_Reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DF_Reply& default_instance();

  static inline const DF_Reply* internal_default_instance() {
    return reinterpret_cast<const DF_Reply*>(
               &_DF_Reply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    130;

  void Swap(DF_Reply* other);

  // implements Message ----------------------------------------------

  inline DF_Reply* New() const PROTOBUF_FINAL { return New(NULL); }

  DF_Reply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DF_Reply& from);
  void MergeFrom(const DF_Reply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DF_Reply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DF_Reply_MsgID MsgID;
  static const MsgID ID =
    DF_Reply_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DF_Reply_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DF_Reply_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DF_Reply_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DF_Reply_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DF_Reply_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DF_Reply_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DF_Reply_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DF_Reply)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 web_id_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddMoneyInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AddMoneyInfo) */ {
 public:
  AddMoneyInfo();
  virtual ~AddMoneyInfo();

  AddMoneyInfo(const AddMoneyInfo& from);

  inline AddMoneyInfo& operator=(const AddMoneyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddMoneyInfo& default_instance();

  static inline const AddMoneyInfo* internal_default_instance() {
    return reinterpret_cast<const AddMoneyInfo*>(
               &_AddMoneyInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    131;

  void Swap(AddMoneyInfo* other);

  // implements Message ----------------------------------------------

  inline AddMoneyInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AddMoneyInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddMoneyInfo& from);
  void MergeFrom(const AddMoneyInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddMoneyInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 type_id = 3;
  bool has_type_id() const;
  void clear_type_id();
  static const int kTypeIdFieldNumber = 3;
  ::google::protobuf::int32 type_id() const;
  void set_type_id(::google::protobuf::int32 value);

  // optional int64 gold = 4;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 4;
  ::google::protobuf::int64 gold() const;
  void set_gold(::google::protobuf::int64 value);

  // optional int32 order_id = 5;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 5;
  ::google::protobuf::int32 order_id() const;
  void set_order_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AddMoneyInfo)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_type_id();
  void clear_has_type_id();
  void set_has_gold();
  void clear_has_gold();
  void set_has_order_id();
  void clear_has_order_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 type_id_;
  ::google::protobuf::int64 gold_;
  ::google::protobuf::int32 order_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FD_ChangMoneyDeal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FD_ChangMoneyDeal) */ {
 public:
  FD_ChangMoneyDeal();
  virtual ~FD_ChangMoneyDeal();

  FD_ChangMoneyDeal(const FD_ChangMoneyDeal& from);

  inline FD_ChangMoneyDeal& operator=(const FD_ChangMoneyDeal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FD_ChangMoneyDeal& default_instance();

  static inline const FD_ChangMoneyDeal* internal_default_instance() {
    return reinterpret_cast<const FD_ChangMoneyDeal*>(
               &_FD_ChangMoneyDeal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    132;

  void Swap(FD_ChangMoneyDeal* other);

  // implements Message ----------------------------------------------

  inline FD_ChangMoneyDeal* New() const PROTOBUF_FINAL { return New(NULL); }

  FD_ChangMoneyDeal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FD_ChangMoneyDeal& from);
  void MergeFrom(const FD_ChangMoneyDeal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FD_ChangMoneyDeal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FD_ChangMoneyDeal_MsgID MsgID;
  static const MsgID ID =
    FD_ChangMoneyDeal_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return FD_ChangMoneyDeal_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    FD_ChangMoneyDeal_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    FD_ChangMoneyDeal_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    FD_ChangMoneyDeal_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return FD_ChangMoneyDeal_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return FD_ChangMoneyDeal_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return FD_ChangMoneyDeal_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .AddMoneyInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::AddMoneyInfo& info() const;
  ::AddMoneyInfo* mutable_info();
  ::AddMoneyInfo* release_info();
  void set_allocated_info(::AddMoneyInfo* info);

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FD_ChangMoneyDeal)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::AddMoneyInfo* info_;
  ::google::protobuf::int32 web_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DF_ChangMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DF_ChangMoney) */ {
 public:
  DF_ChangMoney();
  virtual ~DF_ChangMoney();

  DF_ChangMoney(const DF_ChangMoney& from);

  inline DF_ChangMoney& operator=(const DF_ChangMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DF_ChangMoney& default_instance();

  static inline const DF_ChangMoney* internal_default_instance() {
    return reinterpret_cast<const DF_ChangMoney*>(
               &_DF_ChangMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    133;

  void Swap(DF_ChangMoney* other);

  // implements Message ----------------------------------------------

  inline DF_ChangMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  DF_ChangMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DF_ChangMoney& from);
  void MergeFrom(const DF_ChangMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DF_ChangMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DF_ChangMoney_MsgID MsgID;
  static const MsgID ID =
    DF_ChangMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DF_ChangMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DF_ChangMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DF_ChangMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DF_ChangMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DF_ChangMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DF_ChangMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DF_ChangMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .AddMoneyInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::AddMoneyInfo& info() const;
  ::AddMoneyInfo* mutable_info();
  ::AddMoneyInfo* release_info();
  void set_allocated_info(::AddMoneyInfo* info);

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DF_ChangMoney)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::AddMoneyInfo* info_;
  ::google::protobuf::int32 web_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FS_ChangMoneyDeal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FS_ChangMoneyDeal) */ {
 public:
  FS_ChangMoneyDeal();
  virtual ~FS_ChangMoneyDeal();

  FS_ChangMoneyDeal(const FS_ChangMoneyDeal& from);

  inline FS_ChangMoneyDeal& operator=(const FS_ChangMoneyDeal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FS_ChangMoneyDeal& default_instance();

  static inline const FS_ChangMoneyDeal* internal_default_instance() {
    return reinterpret_cast<const FS_ChangMoneyDeal*>(
               &_FS_ChangMoneyDeal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    134;

  void Swap(FS_ChangMoneyDeal* other);

  // implements Message ----------------------------------------------

  inline FS_ChangMoneyDeal* New() const PROTOBUF_FINAL { return New(NULL); }

  FS_ChangMoneyDeal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FS_ChangMoneyDeal& from);
  void MergeFrom(const FS_ChangMoneyDeal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FS_ChangMoneyDeal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FS_ChangMoneyDeal_MsgID MsgID;
  static const MsgID ID =
    FS_ChangMoneyDeal_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return FS_ChangMoneyDeal_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    FS_ChangMoneyDeal_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    FS_ChangMoneyDeal_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    FS_ChangMoneyDeal_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return FS_ChangMoneyDeal_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return FS_ChangMoneyDeal_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return FS_ChangMoneyDeal_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .AddMoneyInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::AddMoneyInfo& info() const;
  ::AddMoneyInfo* mutable_info();
  ::AddMoneyInfo* release_info();
  void set_allocated_info(::AddMoneyInfo* info);

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FS_ChangMoneyDeal)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::AddMoneyInfo* info_;
  ::google::protobuf::int32 web_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_ChangMoneyReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_ChangMoneyReply) */ {
 public:
  SD_ChangMoneyReply();
  virtual ~SD_ChangMoneyReply();

  SD_ChangMoneyReply(const SD_ChangMoneyReply& from);

  inline SD_ChangMoneyReply& operator=(const SD_ChangMoneyReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_ChangMoneyReply& default_instance();

  static inline const SD_ChangMoneyReply* internal_default_instance() {
    return reinterpret_cast<const SD_ChangMoneyReply*>(
               &_SD_ChangMoneyReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    135;

  void Swap(SD_ChangMoneyReply* other);

  // implements Message ----------------------------------------------

  inline SD_ChangMoneyReply* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_ChangMoneyReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_ChangMoneyReply& from);
  void MergeFrom(const SD_ChangMoneyReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_ChangMoneyReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_ChangMoneyReply_MsgID MsgID;
  static const MsgID ID =
    SD_ChangMoneyReply_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_ChangMoneyReply_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_ChangMoneyReply_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_ChangMoneyReply_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_ChangMoneyReply_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_ChangMoneyReply_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_ChangMoneyReply_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_ChangMoneyReply_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .AddMoneyInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::AddMoneyInfo& info() const;
  ::AddMoneyInfo* mutable_info();
  ::AddMoneyInfo* release_info();
  void set_allocated_info(::AddMoneyInfo* info);

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // optional int32 result = 8;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 8;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int64 befor_bank = 6;
  bool has_befor_bank() const;
  void clear_befor_bank();
  static const int kBeforBankFieldNumber = 6;
  ::google::protobuf::int64 befor_bank() const;
  void set_befor_bank(::google::protobuf::int64 value);

  // optional int64 after_bank = 7;
  bool has_after_bank() const;
  void clear_after_bank();
  static const int kAfterBankFieldNumber = 7;
  ::google::protobuf::int64 after_bank() const;
  void set_after_bank(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SD_ChangMoneyReply)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_info();
  void clear_has_info();
  void set_has_befor_bank();
  void clear_has_befor_bank();
  void set_has_after_bank();
  void clear_has_after_bank();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::AddMoneyInfo* info_;
  ::google::protobuf::int32 web_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int64 befor_bank_;
  ::google::protobuf::int64 after_bank_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_BandAlipay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_BandAlipay) */ {
 public:
  SD_BandAlipay();
  virtual ~SD_BandAlipay();

  SD_BandAlipay(const SD_BandAlipay& from);

  inline SD_BandAlipay& operator=(const SD_BandAlipay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_BandAlipay& default_instance();

  static inline const SD_BandAlipay* internal_default_instance() {
    return reinterpret_cast<const SD_BandAlipay*>(
               &_SD_BandAlipay_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    136;

  void Swap(SD_BandAlipay* other);

  // implements Message ----------------------------------------------

  inline SD_BandAlipay* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_BandAlipay* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_BandAlipay& from);
  void MergeFrom(const SD_BandAlipay& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_BandAlipay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_BandAlipay_MsgID MsgID;
  static const MsgID ID =
    SD_BandAlipay_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_BandAlipay_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_BandAlipay_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_BandAlipay_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_BandAlipay_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_BandAlipay_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_BandAlipay_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_BandAlipay_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string alipay_account = 2;
  bool has_alipay_account() const;
  void clear_alipay_account();
  static const int kAlipayAccountFieldNumber = 2;
  const ::std::string& alipay_account() const;
  void set_alipay_account(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account(::std::string&& value);
  #endif
  void set_alipay_account(const char* value);
  void set_alipay_account(const char* value, size_t size);
  ::std::string* mutable_alipay_account();
  ::std::string* release_alipay_account();
  void set_allocated_alipay_account(::std::string* alipay_account);

  // optional string alipay_name = 3;
  bool has_alipay_name() const;
  void clear_alipay_name();
  static const int kAlipayNameFieldNumber = 3;
  const ::std::string& alipay_name() const;
  void set_alipay_name(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name(::std::string&& value);
  #endif
  void set_alipay_name(const char* value);
  void set_alipay_name(const char* value, size_t size);
  ::std::string* mutable_alipay_name();
  ::std::string* release_alipay_name();
  void set_allocated_alipay_name(::std::string* alipay_name);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_BandAlipay)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_alipay_account();
  void clear_has_alipay_account();
  void set_has_alipay_name();
  void clear_has_alipay_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_BandAlipay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_BandAlipay) */ {
 public:
  DS_BandAlipay();
  virtual ~DS_BandAlipay();

  DS_BandAlipay(const DS_BandAlipay& from);

  inline DS_BandAlipay& operator=(const DS_BandAlipay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_BandAlipay& default_instance();

  static inline const DS_BandAlipay* internal_default_instance() {
    return reinterpret_cast<const DS_BandAlipay*>(
               &_DS_BandAlipay_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    137;

  void Swap(DS_BandAlipay* other);

  // implements Message ----------------------------------------------

  inline DS_BandAlipay* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_BandAlipay* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_BandAlipay& from);
  void MergeFrom(const DS_BandAlipay& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_BandAlipay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_BandAlipay_MsgID MsgID;
  static const MsgID ID =
    DS_BandAlipay_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_BandAlipay_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_BandAlipay_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_BandAlipay_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_BandAlipay_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_BandAlipay_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_BandAlipay_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_BandAlipay_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string alipay_account = 2;
  bool has_alipay_account() const;
  void clear_alipay_account();
  static const int kAlipayAccountFieldNumber = 2;
  const ::std::string& alipay_account() const;
  void set_alipay_account(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account(::std::string&& value);
  #endif
  void set_alipay_account(const char* value);
  void set_alipay_account(const char* value, size_t size);
  ::std::string* mutable_alipay_account();
  ::std::string* release_alipay_account();
  void set_allocated_alipay_account(::std::string* alipay_account);

  // optional string alipay_name = 3;
  bool has_alipay_name() const;
  void clear_alipay_name();
  static const int kAlipayNameFieldNumber = 3;
  const ::std::string& alipay_name() const;
  void set_alipay_name(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name(::std::string&& value);
  #endif
  void set_alipay_name(const char* value);
  void set_alipay_name(const char* value, size_t size);
  ::std::string* mutable_alipay_name();
  ::std::string* release_alipay_name();
  void set_allocated_alipay_name(::std::string* alipay_name);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 result = 4;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_BandAlipay)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_alipay_account();
  void clear_has_alipay_account();
  void set_has_alipay_name();
  void clear_has_alipay_name();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_BandAlipayNum : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_BandAlipayNum) */ {
 public:
  DS_BandAlipayNum();
  virtual ~DS_BandAlipayNum();

  DS_BandAlipayNum(const DS_BandAlipayNum& from);

  inline DS_BandAlipayNum& operator=(const DS_BandAlipayNum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_BandAlipayNum& default_instance();

  static inline const DS_BandAlipayNum* internal_default_instance() {
    return reinterpret_cast<const DS_BandAlipayNum*>(
               &_DS_BandAlipayNum_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    138;

  void Swap(DS_BandAlipayNum* other);

  // implements Message ----------------------------------------------

  inline DS_BandAlipayNum* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_BandAlipayNum* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_BandAlipayNum& from);
  void MergeFrom(const DS_BandAlipayNum& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_BandAlipayNum* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_BandAlipayNum_MsgID MsgID;
  static const MsgID ID =
    DS_BandAlipayNum_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_BandAlipayNum_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_BandAlipayNum_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_BandAlipayNum_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_BandAlipayNum_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_BandAlipayNum_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_BandAlipayNum_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_BandAlipayNum_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 band_num = 2;
  bool has_band_num() const;
  void clear_band_num();
  static const int kBandNumFieldNumber = 2;
  ::google::protobuf::int32 band_num() const;
  void set_band_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_BandAlipayNum)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_band_num();
  void clear_has_band_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 band_num_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WL_ChangeTax : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WL_ChangeTax) */ {
 public:
  WL_ChangeTax();
  virtual ~WL_ChangeTax();

  WL_ChangeTax(const WL_ChangeTax& from);

  inline WL_ChangeTax& operator=(const WL_ChangeTax& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WL_ChangeTax& default_instance();

  static inline const WL_ChangeTax* internal_default_instance() {
    return reinterpret_cast<const WL_ChangeTax*>(
               &_WL_ChangeTax_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    139;

  void Swap(WL_ChangeTax* other);

  // implements Message ----------------------------------------------

  inline WL_ChangeTax* New() const PROTOBUF_FINAL { return New(NULL); }

  WL_ChangeTax* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WL_ChangeTax& from);
  void MergeFrom(const WL_ChangeTax& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WL_ChangeTax* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WL_ChangeTax_MsgID MsgID;
  static const MsgID ID =
    WL_ChangeTax_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return WL_ChangeTax_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    WL_ChangeTax_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    WL_ChangeTax_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    WL_ChangeTax_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return WL_ChangeTax_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return WL_ChangeTax_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return WL_ChangeTax_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 tax = 2;
  bool has_tax() const;
  void clear_tax();
  static const int kTaxFieldNumber = 2;
  ::google::protobuf::int32 tax() const;
  void set_tax(::google::protobuf::int32 value);

  // optional int32 is_enable = 3;
  bool has_is_enable() const;
  void clear_is_enable();
  static const int kIsEnableFieldNumber = 3;
  ::google::protobuf::int32 is_enable() const;
  void set_is_enable(::google::protobuf::int32 value);

  // optional int32 is_show = 4;
  bool has_is_show() const;
  void clear_is_show();
  static const int kIsShowFieldNumber = 4;
  ::google::protobuf::int32 is_show() const;
  void set_is_show(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WL_ChangeTax)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_tax();
  void clear_has_tax();
  void set_has_is_enable();
  void clear_has_is_enable();
  void set_has_is_show();
  void clear_has_is_show();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 tax_;
  ::google::protobuf::int32 is_enable_;
  ::google::protobuf::int32 is_show_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_ChangeTax : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_ChangeTax) */ {
 public:
  LS_ChangeTax();
  virtual ~LS_ChangeTax();

  LS_ChangeTax(const LS_ChangeTax& from);

  inline LS_ChangeTax& operator=(const LS_ChangeTax& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_ChangeTax& default_instance();

  static inline const LS_ChangeTax* internal_default_instance() {
    return reinterpret_cast<const LS_ChangeTax*>(
               &_LS_ChangeTax_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    140;

  void Swap(LS_ChangeTax* other);

  // implements Message ----------------------------------------------

  inline LS_ChangeTax* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_ChangeTax* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_ChangeTax& from);
  void MergeFrom(const LS_ChangeTax& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_ChangeTax* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_ChangeTax_MsgID MsgID;
  static const MsgID ID =
    LS_ChangeTax_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_ChangeTax_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_ChangeTax_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_ChangeTax_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_ChangeTax_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_ChangeTax_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_ChangeTax_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_ChangeTax_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 webid = 1;
  bool has_webid() const;
  void clear_webid();
  static const int kWebidFieldNumber = 1;
  ::google::protobuf::int32 webid() const;
  void set_webid(::google::protobuf::int32 value);

  // optional int32 tax = 2;
  bool has_tax() const;
  void clear_tax();
  static const int kTaxFieldNumber = 2;
  ::google::protobuf::int32 tax() const;
  void set_tax(::google::protobuf::int32 value);

  // optional int32 is_enable = 3;
  bool has_is_enable() const;
  void clear_is_enable();
  static const int kIsEnableFieldNumber = 3;
  ::google::protobuf::int32 is_enable() const;
  void set_is_enable(::google::protobuf::int32 value);

  // optional int32 is_show = 4;
  bool has_is_show() const;
  void clear_is_show();
  static const int kIsShowFieldNumber = 4;
  ::google::protobuf::int32 is_show() const;
  void set_is_show(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_ChangeTax)
 private:
  void set_has_webid();
  void clear_has_webid();
  void set_has_tax();
  void clear_has_tax();
  void set_has_is_enable();
  void clear_has_is_enable();
  void set_has_is_show();
  void clear_has_is_show();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 webid_;
  ::google::protobuf::int32 tax_;
  ::google::protobuf::int32 is_enable_;
  ::google::protobuf::int32 is_show_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SL_ChangeTax : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SL_ChangeTax) */ {
 public:
  SL_ChangeTax();
  virtual ~SL_ChangeTax();

  SL_ChangeTax(const SL_ChangeTax& from);

  inline SL_ChangeTax& operator=(const SL_ChangeTax& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SL_ChangeTax& default_instance();

  static inline const SL_ChangeTax* internal_default_instance() {
    return reinterpret_cast<const SL_ChangeTax*>(
               &_SL_ChangeTax_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    141;

  void Swap(SL_ChangeTax* other);

  // implements Message ----------------------------------------------

  inline SL_ChangeTax* New() const PROTOBUF_FINAL { return New(NULL); }

  SL_ChangeTax* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SL_ChangeTax& from);
  void MergeFrom(const SL_ChangeTax& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SL_ChangeTax* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SL_ChangeTax_MsgID MsgID;
  static const MsgID ID =
    SL_ChangeTax_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SL_ChangeTax_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SL_ChangeTax_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SL_ChangeTax_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SL_ChangeTax_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SL_ChangeTax_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SL_ChangeTax_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SL_ChangeTax_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 webid = 1;
  bool has_webid() const;
  void clear_webid();
  static const int kWebidFieldNumber = 1;
  ::google::protobuf::int32 webid() const;
  void set_webid(::google::protobuf::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SL_ChangeTax)
 private:
  void set_has_webid();
  void clear_has_webid();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 webid_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LW_ChangeTax : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LW_ChangeTax) */ {
 public:
  LW_ChangeTax();
  virtual ~LW_ChangeTax();

  LW_ChangeTax(const LW_ChangeTax& from);

  inline LW_ChangeTax& operator=(const LW_ChangeTax& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LW_ChangeTax& default_instance();

  static inline const LW_ChangeTax* internal_default_instance() {
    return reinterpret_cast<const LW_ChangeTax*>(
               &_LW_ChangeTax_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    142;

  void Swap(LW_ChangeTax* other);

  // implements Message ----------------------------------------------

  inline LW_ChangeTax* New() const PROTOBUF_FINAL { return New(NULL); }

  LW_ChangeTax* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LW_ChangeTax& from);
  void MergeFrom(const LW_ChangeTax& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LW_ChangeTax* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LW_ChangeTax_MsgID MsgID;
  static const MsgID ID =
    LW_ChangeTax_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LW_ChangeTax_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LW_ChangeTax_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LW_ChangeTax_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LW_ChangeTax_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LW_ChangeTax_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LW_ChangeTax_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LW_ChangeTax_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LW_ChangeTax)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WF_ChangeGameCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WF_ChangeGameCfg) */ {
 public:
  WF_ChangeGameCfg();
  virtual ~WF_ChangeGameCfg();

  WF_ChangeGameCfg(const WF_ChangeGameCfg& from);

  inline WF_ChangeGameCfg& operator=(const WF_ChangeGameCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WF_ChangeGameCfg& default_instance();

  static inline const WF_ChangeGameCfg* internal_default_instance() {
    return reinterpret_cast<const WF_ChangeGameCfg*>(
               &_WF_ChangeGameCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    143;

  void Swap(WF_ChangeGameCfg* other);

  // implements Message ----------------------------------------------

  inline WF_ChangeGameCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  WF_ChangeGameCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WF_ChangeGameCfg& from);
  void MergeFrom(const WF_ChangeGameCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WF_ChangeGameCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WF_ChangeGameCfg_MsgID MsgID;
  static const MsgID ID =
    WF_ChangeGameCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return WF_ChangeGameCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    WF_ChangeGameCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    WF_ChangeGameCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    WF_ChangeGameCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return WF_ChangeGameCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return WF_ChangeGameCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return WF_ChangeGameCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WF_ChangeGameCfg)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FS_ChangeGameCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FS_ChangeGameCfg) */ {
 public:
  FS_ChangeGameCfg();
  virtual ~FS_ChangeGameCfg();

  FS_ChangeGameCfg(const FS_ChangeGameCfg& from);

  inline FS_ChangeGameCfg& operator=(const FS_ChangeGameCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FS_ChangeGameCfg& default_instance();

  static inline const FS_ChangeGameCfg* internal_default_instance() {
    return reinterpret_cast<const FS_ChangeGameCfg*>(
               &_FS_ChangeGameCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    144;

  void Swap(FS_ChangeGameCfg* other);

  // implements Message ----------------------------------------------

  inline FS_ChangeGameCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  FS_ChangeGameCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FS_ChangeGameCfg& from);
  void MergeFrom(const FS_ChangeGameCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FS_ChangeGameCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FS_ChangeGameCfg_MsgID MsgID;
  static const MsgID ID =
    FS_ChangeGameCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return FS_ChangeGameCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    FS_ChangeGameCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    FS_ChangeGameCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    FS_ChangeGameCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return FS_ChangeGameCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return FS_ChangeGameCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return FS_ChangeGameCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string room_list = 2;
  bool has_room_list() const;
  void clear_room_list();
  static const int kRoomListFieldNumber = 2;
  const ::std::string& room_list() const;
  void set_room_list(const ::std::string& value);
  #if LANG_CXX11
  void set_room_list(::std::string&& value);
  #endif
  void set_room_list(const char* value);
  void set_room_list(const char* value, size_t size);
  ::std::string* mutable_room_list();
  ::std::string* release_room_list();
  void set_allocated_room_list(::std::string* room_list);

  // optional string room_lua_cfg = 3;
  bool has_room_lua_cfg() const;
  void clear_room_lua_cfg();
  static const int kRoomLuaCfgFieldNumber = 3;
  const ::std::string& room_lua_cfg() const;
  void set_room_lua_cfg(const ::std::string& value);
  #if LANG_CXX11
  void set_room_lua_cfg(::std::string&& value);
  #endif
  void set_room_lua_cfg(const char* value);
  void set_room_lua_cfg(const char* value, size_t size);
  ::std::string* mutable_room_lua_cfg();
  ::std::string* release_room_lua_cfg();
  void set_allocated_room_lua_cfg(::std::string* room_lua_cfg);

  // optional int32 webid = 1;
  bool has_webid() const;
  void clear_webid();
  static const int kWebidFieldNumber = 1;
  ::google::protobuf::int32 webid() const;
  void set_webid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FS_ChangeGameCfg)
 private:
  void set_has_webid();
  void clear_has_webid();
  void set_has_room_list();
  void clear_has_room_list();
  void set_has_room_lua_cfg();
  void clear_has_room_lua_cfg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr room_list_;
  ::google::protobuf::internal::ArenaStringPtr room_lua_cfg_;
  ::google::protobuf::int32 webid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SF_ChangeGameCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SF_ChangeGameCfg) */ {
 public:
  SF_ChangeGameCfg();
  virtual ~SF_ChangeGameCfg();

  SF_ChangeGameCfg(const SF_ChangeGameCfg& from);

  inline SF_ChangeGameCfg& operator=(const SF_ChangeGameCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SF_ChangeGameCfg& default_instance();

  static inline const SF_ChangeGameCfg* internal_default_instance() {
    return reinterpret_cast<const SF_ChangeGameCfg*>(
               &_SF_ChangeGameCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    145;

  void Swap(SF_ChangeGameCfg* other);

  // implements Message ----------------------------------------------

  inline SF_ChangeGameCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  SF_ChangeGameCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SF_ChangeGameCfg& from);
  void MergeFrom(const SF_ChangeGameCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SF_ChangeGameCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SF_ChangeGameCfg_MsgID MsgID;
  static const MsgID ID =
    SF_ChangeGameCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SF_ChangeGameCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SF_ChangeGameCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SF_ChangeGameCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SF_ChangeGameCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SF_ChangeGameCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SF_ChangeGameCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SF_ChangeGameCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .GameClientRoomListCfg pb_cfg = 3;
  bool has_pb_cfg() const;
  void clear_pb_cfg();
  static const int kPbCfgFieldNumber = 3;
  const ::GameClientRoomListCfg& pb_cfg() const;
  ::GameClientRoomListCfg* mutable_pb_cfg();
  ::GameClientRoomListCfg* release_pb_cfg();
  void set_allocated_pb_cfg(::GameClientRoomListCfg* pb_cfg);

  // optional int32 webid = 1;
  bool has_webid() const;
  void clear_webid();
  static const int kWebidFieldNumber = 1;
  ::google::protobuf::int32 webid() const;
  void set_webid(::google::protobuf::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SF_ChangeGameCfg)
 private:
  void set_has_webid();
  void clear_has_webid();
  void set_has_result();
  void clear_has_result();
  void set_has_pb_cfg();
  void clear_has_pb_cfg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::GameClientRoomListCfg* pb_cfg_;
  ::google::protobuf::int32 webid_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FW_ChangeGameCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FW_ChangeGameCfg) */ {
 public:
  FW_ChangeGameCfg();
  virtual ~FW_ChangeGameCfg();

  FW_ChangeGameCfg(const FW_ChangeGameCfg& from);

  inline FW_ChangeGameCfg& operator=(const FW_ChangeGameCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FW_ChangeGameCfg& default_instance();

  static inline const FW_ChangeGameCfg* internal_default_instance() {
    return reinterpret_cast<const FW_ChangeGameCfg*>(
               &_FW_ChangeGameCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    146;

  void Swap(FW_ChangeGameCfg* other);

  // implements Message ----------------------------------------------

  inline FW_ChangeGameCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  FW_ChangeGameCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FW_ChangeGameCfg& from);
  void MergeFrom(const FW_ChangeGameCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FW_ChangeGameCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FW_ChangeGameCfg_MsgID MsgID;
  static const MsgID ID =
    FW_ChangeGameCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return FW_ChangeGameCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    FW_ChangeGameCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    FW_ChangeGameCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    FW_ChangeGameCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return FW_ChangeGameCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return FW_ChangeGameCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return FW_ChangeGameCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FW_ChangeGameCfg)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LG_AddNewGameServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LG_AddNewGameServer) */ {
 public:
  LG_AddNewGameServer();
  virtual ~LG_AddNewGameServer();

  LG_AddNewGameServer(const LG_AddNewGameServer& from);

  inline LG_AddNewGameServer& operator=(const LG_AddNewGameServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LG_AddNewGameServer& default_instance();

  static inline const LG_AddNewGameServer* internal_default_instance() {
    return reinterpret_cast<const LG_AddNewGameServer*>(
               &_LG_AddNewGameServer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    147;

  void Swap(LG_AddNewGameServer* other);

  // implements Message ----------------------------------------------

  inline LG_AddNewGameServer* New() const PROTOBUF_FINAL { return New(NULL); }

  LG_AddNewGameServer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LG_AddNewGameServer& from);
  void MergeFrom(const LG_AddNewGameServer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LG_AddNewGameServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LG_AddNewGameServer_MsgID MsgID;
  static const MsgID ID =
    LG_AddNewGameServer_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LG_AddNewGameServer_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LG_AddNewGameServer_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LG_AddNewGameServer_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LG_AddNewGameServer_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LG_AddNewGameServer_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LG_AddNewGameServer_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LG_AddNewGameServer_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string ip = 1;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional int32 port = 2;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // optional int32 retID = 3;
  bool has_retid() const;
  void clear_retid();
  static const int kRetIDFieldNumber = 3;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LG_AddNewGameServer)
 private:
  void set_has_ip();
  void clear_has_ip();
  void set_has_port();
  void clear_has_port();
  void set_has_retid();
  void clear_has_retid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 retid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DBGameConfigMgr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBGameConfigMgr) */ {
 public:
  DBGameConfigMgr();
  virtual ~DBGameConfigMgr();

  DBGameConfigMgr(const DBGameConfigMgr& from);

  inline DBGameConfigMgr& operator=(const DBGameConfigMgr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBGameConfigMgr& default_instance();

  static inline const DBGameConfigMgr* internal_default_instance() {
    return reinterpret_cast<const DBGameConfigMgr*>(
               &_DBGameConfigMgr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    148;

  void Swap(DBGameConfigMgr* other);

  // implements Message ----------------------------------------------

  inline DBGameConfigMgr* New() const PROTOBUF_FINAL { return New(NULL); }

  DBGameConfigMgr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DBGameConfigMgr& from);
  void MergeFrom(const DBGameConfigMgr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DBGameConfigMgr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DBGameConfig pb_cfg = 1;
  int pb_cfg_size() const;
  void clear_pb_cfg();
  static const int kPbCfgFieldNumber = 1;
  const ::DBGameConfig& pb_cfg(int index) const;
  ::DBGameConfig* mutable_pb_cfg(int index);
  ::DBGameConfig* add_pb_cfg();
  ::google::protobuf::RepeatedPtrField< ::DBGameConfig >*
      mutable_pb_cfg();
  const ::google::protobuf::RepeatedPtrField< ::DBGameConfig >&
      pb_cfg() const;

  // @@protoc_insertion_point(class_scope:DBGameConfigMgr)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::DBGameConfig > pb_cfg_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DBGameConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DBGameConfig) */ {
 public:
  DBGameConfig();
  virtual ~DBGameConfig();

  DBGameConfig(const DBGameConfig& from);

  inline DBGameConfig& operator=(const DBGameConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBGameConfig& default_instance();

  static inline const DBGameConfig* internal_default_instance() {
    return reinterpret_cast<const DBGameConfig*>(
               &_DBGameConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    149;

  void Swap(DBGameConfig* other);

  // implements Message ----------------------------------------------

  inline DBGameConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  DBGameConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DBGameConfig& from);
  void MergeFrom(const DBGameConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DBGameConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string cfg_name = 1;
  bool has_cfg_name() const;
  void clear_cfg_name();
  static const int kCfgNameFieldNumber = 1;
  const ::std::string& cfg_name() const;
  void set_cfg_name(const ::std::string& value);
  #if LANG_CXX11
  void set_cfg_name(::std::string&& value);
  #endif
  void set_cfg_name(const char* value);
  void set_cfg_name(const char* value, size_t size);
  ::std::string* mutable_cfg_name();
  ::std::string* release_cfg_name();
  void set_allocated_cfg_name(::std::string* cfg_name);

  // optional string ip = 4;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 4;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string game_name = 9;
  bool has_game_name() const;
  void clear_game_name();
  static const int kGameNameFieldNumber = 9;
  const ::std::string& game_name() const;
  void set_game_name(const ::std::string& value);
  #if LANG_CXX11
  void set_game_name(::std::string&& value);
  #endif
  void set_game_name(const char* value);
  void set_game_name(const char* value, size_t size);
  ::std::string* mutable_game_name();
  ::std::string* release_game_name();
  void set_allocated_game_name(::std::string* game_name);

  // optional string game_log = 10;
  bool has_game_log() const;
  void clear_game_log();
  static const int kGameLogFieldNumber = 10;
  const ::std::string& game_log() const;
  void set_game_log(const ::std::string& value);
  #if LANG_CXX11
  void set_game_log(::std::string&& value);
  #endif
  void set_game_log(const char* value);
  void set_game_log(const char* value, size_t size);
  ::std::string* mutable_game_log();
  ::std::string* release_game_log();
  void set_allocated_game_log(::std::string* game_log);

  // optional string data_path = 13;
  bool has_data_path() const;
  void clear_data_path();
  static const int kDataPathFieldNumber = 13;
  const ::std::string& data_path() const;
  void set_data_path(const ::std::string& value);
  #if LANG_CXX11
  void set_data_path(::std::string&& value);
  #endif
  void set_data_path(const char* value);
  void set_data_path(const char* value, size_t size);
  ::std::string* mutable_data_path();
  ::std::string* release_data_path();
  void set_allocated_data_path(::std::string* data_path);

  // optional string room_list = 14;
  bool has_room_list() const;
  void clear_room_list();
  static const int kRoomListFieldNumber = 14;
  const ::std::string& room_list() const;
  void set_room_list(const ::std::string& value);
  #if LANG_CXX11
  void set_room_list(::std::string&& value);
  #endif
  void set_room_list(const char* value);
  void set_room_list(const char* value, size_t size);
  ::std::string* mutable_room_list();
  ::std::string* release_room_list();
  void set_allocated_room_list(::std::string* room_list);

  // optional string room_lua_cfg = 15;
  bool has_room_lua_cfg() const;
  void clear_room_lua_cfg();
  static const int kRoomLuaCfgFieldNumber = 15;
  const ::std::string& room_lua_cfg() const;
  void set_room_lua_cfg(const ::std::string& value);
  #if LANG_CXX11
  void set_room_lua_cfg(::std::string&& value);
  #endif
  void set_room_lua_cfg(const char* value);
  void set_room_lua_cfg(const char* value, size_t size);
  ::std::string* mutable_room_lua_cfg();
  ::std::string* release_room_lua_cfg();
  void set_allocated_room_lua_cfg(::std::string* room_lua_cfg);

  // optional int32 is_open = 2;
  bool has_is_open() const;
  void clear_is_open();
  static const int kIsOpenFieldNumber = 2;
  ::google::protobuf::int32 is_open() const;
  void set_is_open(::google::protobuf::int32 value);

  // optional int32 using_login_validatebox = 3;
  bool has_using_login_validatebox() const;
  void clear_using_login_validatebox();
  static const int kUsingLoginValidateboxFieldNumber = 3;
  ::google::protobuf::int32 using_login_validatebox() const;
  void set_using_login_validatebox(::google::protobuf::int32 value);

  // optional int32 port = 5;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 5;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // optional int32 game_id = 6;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 6;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // optional int32 first_game_type = 7;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 7;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional int32 second_game_type = 8;
  bool has_second_game_type() const;
  void clear_second_game_type();
  static const int kSecondGameTypeFieldNumber = 8;
  ::google::protobuf::int32 second_game_type() const;
  void set_second_game_type(::google::protobuf::int32 value);

  // optional int32 default_lobby = 11;
  bool has_default_lobby() const;
  void clear_default_lobby();
  static const int kDefaultLobbyFieldNumber = 11;
  ::google::protobuf::int32 default_lobby() const;
  void set_default_lobby(::google::protobuf::int32 value);

  // optional int32 player_limit = 12;
  bool has_player_limit() const;
  void clear_player_limit();
  static const int kPlayerLimitFieldNumber = 12;
  ::google::protobuf::int32 player_limit() const;
  void set_player_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DBGameConfig)
 private:
  void set_has_cfg_name();
  void clear_has_cfg_name();
  void set_has_is_open();
  void clear_has_is_open();
  void set_has_using_login_validatebox();
  void clear_has_using_login_validatebox();
  void set_has_ip();
  void clear_has_ip();
  void set_has_port();
  void clear_has_port();
  void set_has_game_id();
  void clear_has_game_id();
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_second_game_type();
  void clear_has_second_game_type();
  void set_has_game_name();
  void clear_has_game_name();
  void set_has_game_log();
  void clear_has_game_log();
  void set_has_default_lobby();
  void clear_has_default_lobby();
  void set_has_player_limit();
  void clear_has_player_limit();
  void set_has_data_path();
  void clear_has_data_path();
  void set_has_room_list();
  void clear_has_room_list();
  void set_has_room_lua_cfg();
  void clear_has_room_lua_cfg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cfg_name_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr game_name_;
  ::google::protobuf::internal::ArenaStringPtr game_log_;
  ::google::protobuf::internal::ArenaStringPtr data_path_;
  ::google::protobuf::internal::ArenaStringPtr room_list_;
  ::google::protobuf::internal::ArenaStringPtr room_lua_cfg_;
  ::google::protobuf::int32 is_open_;
  ::google::protobuf::int32 using_login_validatebox_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 game_id_;
  ::google::protobuf::int32 first_game_type_;
  ::google::protobuf::int32 second_game_type_;
  ::google::protobuf::int32 default_lobby_;
  ::google::protobuf::int32 player_limit_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_ServerConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_ServerConfig) */ {
 public:
  SD_ServerConfig();
  virtual ~SD_ServerConfig();

  SD_ServerConfig(const SD_ServerConfig& from);

  inline SD_ServerConfig& operator=(const SD_ServerConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_ServerConfig& default_instance();

  static inline const SD_ServerConfig* internal_default_instance() {
    return reinterpret_cast<const SD_ServerConfig*>(
               &_SD_ServerConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    150;

  void Swap(SD_ServerConfig* other);

  // implements Message ----------------------------------------------

  inline SD_ServerConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_ServerConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_ServerConfig& from);
  void MergeFrom(const SD_ServerConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_ServerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_ServerConfig_MsgID MsgID;
  static const MsgID ID =
    SD_ServerConfig_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_ServerConfig_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_ServerConfig_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_ServerConfig_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_ServerConfig_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_ServerConfig_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_ServerConfig_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_ServerConfig_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 gamer_id = 1;
  bool has_gamer_id() const;
  void clear_gamer_id();
  static const int kGamerIdFieldNumber = 1;
  ::google::protobuf::int32 gamer_id() const;
  void set_gamer_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_ServerConfig)
 private:
  void set_has_gamer_id();
  void clear_has_gamer_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 gamer_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_ServerConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_ServerConfig) */ {
 public:
  DS_ServerConfig();
  virtual ~DS_ServerConfig();

  DS_ServerConfig(const DS_ServerConfig& from);

  inline DS_ServerConfig& operator=(const DS_ServerConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_ServerConfig& default_instance();

  static inline const DS_ServerConfig* internal_default_instance() {
    return reinterpret_cast<const DS_ServerConfig*>(
               &_DS_ServerConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    151;

  void Swap(DS_ServerConfig* other);

  // implements Message ----------------------------------------------

  inline DS_ServerConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_ServerConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_ServerConfig& from);
  void MergeFrom(const DS_ServerConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_ServerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_ServerConfig_MsgID MsgID;
  static const MsgID ID =
    DS_ServerConfig_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_ServerConfig_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_ServerConfig_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_ServerConfig_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_ServerConfig_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_ServerConfig_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_ServerConfig_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_ServerConfig_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .DBGameConfig cfg = 1;
  bool has_cfg() const;
  void clear_cfg();
  static const int kCfgFieldNumber = 1;
  const ::DBGameConfig& cfg() const;
  ::DBGameConfig* mutable_cfg();
  ::DBGameConfig* release_cfg();
  void set_allocated_cfg(::DBGameConfig* cfg);

  // @@protoc_insertion_point(class_scope:DS_ServerConfig)
 private:
  void set_has_cfg();
  void clear_has_cfg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::DBGameConfig* cfg_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_ServerConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DL_ServerConfig) */ {
 public:
  DL_ServerConfig();
  virtual ~DL_ServerConfig();

  DL_ServerConfig(const DL_ServerConfig& from);

  inline DL_ServerConfig& operator=(const DL_ServerConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_ServerConfig& default_instance();

  static inline const DL_ServerConfig* internal_default_instance() {
    return reinterpret_cast<const DL_ServerConfig*>(
               &_DL_ServerConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    152;

  void Swap(DL_ServerConfig* other);

  // implements Message ----------------------------------------------

  inline DL_ServerConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_ServerConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_ServerConfig& from);
  void MergeFrom(const DL_ServerConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_ServerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DL_ServerConfig_MsgID MsgID;
  static const MsgID ID =
    DL_ServerConfig_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DL_ServerConfig_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DL_ServerConfig_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DL_ServerConfig_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DL_ServerConfig_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DL_ServerConfig_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DL_ServerConfig_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DL_ServerConfig_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .DBGameConfig cfg = 1;
  bool has_cfg() const;
  void clear_cfg();
  static const int kCfgFieldNumber = 1;
  const ::DBGameConfig& cfg() const;
  ::DBGameConfig* mutable_cfg();
  ::DBGameConfig* release_cfg();
  void set_allocated_cfg(::DBGameConfig* cfg);

  // @@protoc_insertion_point(class_scope:DL_ServerConfig)
 private:
  void set_has_cfg();
  void clear_has_cfg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::DBGameConfig* cfg_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WL_ChangeMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WL_ChangeMoney) */ {
 public:
  WL_ChangeMoney();
  virtual ~WL_ChangeMoney();

  WL_ChangeMoney(const WL_ChangeMoney& from);

  inline WL_ChangeMoney& operator=(const WL_ChangeMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WL_ChangeMoney& default_instance();

  static inline const WL_ChangeMoney* internal_default_instance() {
    return reinterpret_cast<const WL_ChangeMoney*>(
               &_WL_ChangeMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    153;

  void Swap(WL_ChangeMoney* other);

  // implements Message ----------------------------------------------

  inline WL_ChangeMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  WL_ChangeMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WL_ChangeMoney& from);
  void MergeFrom(const WL_ChangeMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WL_ChangeMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WL_ChangeMoney_MsgID MsgID;
  static const MsgID ID =
    WL_ChangeMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return WL_ChangeMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    WL_ChangeMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    WL_ChangeMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    WL_ChangeMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return WL_ChangeMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return WL_ChangeMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return WL_ChangeMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string GmCommand = 2;
  bool has_gmcommand() const;
  void clear_gmcommand();
  static const int kGmCommandFieldNumber = 2;
  const ::std::string& gmcommand() const;
  void set_gmcommand(const ::std::string& value);
  #if LANG_CXX11
  void set_gmcommand(::std::string&& value);
  #endif
  void set_gmcommand(const char* value);
  void set_gmcommand(const char* value, size_t size);
  ::std::string* mutable_gmcommand();
  ::std::string* release_gmcommand();
  void set_allocated_gmcommand(::std::string* gmcommand);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WL_ChangeMoney)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_gmcommand();
  void clear_has_gmcommand();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr gmcommand_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_ChangeMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_ChangeMoney) */ {
 public:
  LS_ChangeMoney();
  virtual ~LS_ChangeMoney();

  LS_ChangeMoney(const LS_ChangeMoney& from);

  inline LS_ChangeMoney& operator=(const LS_ChangeMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_ChangeMoney& default_instance();

  static inline const LS_ChangeMoney* internal_default_instance() {
    return reinterpret_cast<const LS_ChangeMoney*>(
               &_LS_ChangeMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    154;

  void Swap(LS_ChangeMoney* other);

  // implements Message ----------------------------------------------

  inline LS_ChangeMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_ChangeMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_ChangeMoney& from);
  void MergeFrom(const LS_ChangeMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_ChangeMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_ChangeMoney_MsgID MsgID;
  static const MsgID ID =
    LS_ChangeMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_ChangeMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_ChangeMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_ChangeMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_ChangeMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_ChangeMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_ChangeMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_ChangeMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string GmCommand = 3;
  bool has_gmcommand() const;
  void clear_gmcommand();
  static const int kGmCommandFieldNumber = 3;
  const ::std::string& gmcommand() const;
  void set_gmcommand(const ::std::string& value);
  #if LANG_CXX11
  void set_gmcommand(::std::string&& value);
  #endif
  void set_gmcommand(const char* value);
  void set_gmcommand(const char* value, size_t size);
  ::std::string* mutable_gmcommand();
  ::std::string* release_gmcommand();
  void set_allocated_gmcommand(::std::string* gmcommand);

  // optional int32 webid = 1;
  bool has_webid() const;
  void clear_webid();
  static const int kWebidFieldNumber = 1;
  ::google::protobuf::int32 webid() const;
  void set_webid(::google::protobuf::int32 value);

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_ChangeMoney)
 private:
  void set_has_webid();
  void clear_has_webid();
  void set_has_guid();
  void clear_has_guid();
  void set_has_gmcommand();
  void clear_has_gmcommand();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr gmcommand_;
  ::google::protobuf::int32 webid_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SL_ChangeMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SL_ChangeMoney) */ {
 public:
  SL_ChangeMoney();
  virtual ~SL_ChangeMoney();

  SL_ChangeMoney(const SL_ChangeMoney& from);

  inline SL_ChangeMoney& operator=(const SL_ChangeMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SL_ChangeMoney& default_instance();

  static inline const SL_ChangeMoney* internal_default_instance() {
    return reinterpret_cast<const SL_ChangeMoney*>(
               &_SL_ChangeMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    155;

  void Swap(SL_ChangeMoney* other);

  // implements Message ----------------------------------------------

  inline SL_ChangeMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  SL_ChangeMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SL_ChangeMoney& from);
  void MergeFrom(const SL_ChangeMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SL_ChangeMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SL_ChangeMoney_MsgID MsgID;
  static const MsgID ID =
    SL_ChangeMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SL_ChangeMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SL_ChangeMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SL_ChangeMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SL_ChangeMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SL_ChangeMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SL_ChangeMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SL_ChangeMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 webid = 1;
  bool has_webid() const;
  void clear_webid();
  static const int kWebidFieldNumber = 1;
  ::google::protobuf::int32 webid() const;
  void set_webid(::google::protobuf::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SL_ChangeMoney)
 private:
  void set_has_webid();
  void clear_has_webid();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 webid_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LW_ChangeMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LW_ChangeMoney) */ {
 public:
  LW_ChangeMoney();
  virtual ~LW_ChangeMoney();

  LW_ChangeMoney(const LW_ChangeMoney& from);

  inline LW_ChangeMoney& operator=(const LW_ChangeMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LW_ChangeMoney& default_instance();

  static inline const LW_ChangeMoney* internal_default_instance() {
    return reinterpret_cast<const LW_ChangeMoney*>(
               &_LW_ChangeMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    156;

  void Swap(LW_ChangeMoney* other);

  // implements Message ----------------------------------------------

  inline LW_ChangeMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  LW_ChangeMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LW_ChangeMoney& from);
  void MergeFrom(const LW_ChangeMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LW_ChangeMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LW_ChangeMoney_MsgID MsgID;
  static const MsgID ID =
    LW_ChangeMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LW_ChangeMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LW_ChangeMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LW_ChangeMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LW_ChangeMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LW_ChangeMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LW_ChangeMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LW_ChangeMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LW_ChangeMoney)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_OfflineChangeMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_OfflineChangeMoney) */ {
 public:
  LD_OfflineChangeMoney();
  virtual ~LD_OfflineChangeMoney();

  LD_OfflineChangeMoney(const LD_OfflineChangeMoney& from);

  inline LD_OfflineChangeMoney& operator=(const LD_OfflineChangeMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_OfflineChangeMoney& default_instance();

  static inline const LD_OfflineChangeMoney* internal_default_instance() {
    return reinterpret_cast<const LD_OfflineChangeMoney*>(
               &_LD_OfflineChangeMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    157;

  void Swap(LD_OfflineChangeMoney* other);

  // implements Message ----------------------------------------------

  inline LD_OfflineChangeMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_OfflineChangeMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_OfflineChangeMoney& from);
  void MergeFrom(const LD_OfflineChangeMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_OfflineChangeMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_OfflineChangeMoney_MsgID MsgID;
  static const MsgID ID =
    LD_OfflineChangeMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_OfflineChangeMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_OfflineChangeMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_OfflineChangeMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_OfflineChangeMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_OfflineChangeMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_OfflineChangeMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_OfflineChangeMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string GmCommand = 2;
  bool has_gmcommand() const;
  void clear_gmcommand();
  static const int kGmCommandFieldNumber = 2;
  const ::std::string& gmcommand() const;
  void set_gmcommand(const ::std::string& value);
  #if LANG_CXX11
  void set_gmcommand(::std::string&& value);
  #endif
  void set_gmcommand(const char* value);
  void set_gmcommand(const char* value, size_t size);
  ::std::string* mutable_gmcommand();
  ::std::string* release_gmcommand();
  void set_allocated_gmcommand(::std::string* gmcommand);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_OfflineChangeMoney)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_gmcommand();
  void clear_has_gmcommand();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr gmcommand_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GL_GetServerCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GL_GetServerCfg) */ {
 public:
  GL_GetServerCfg();
  virtual ~GL_GetServerCfg();

  GL_GetServerCfg(const GL_GetServerCfg& from);

  inline GL_GetServerCfg& operator=(const GL_GetServerCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GL_GetServerCfg& default_instance();

  static inline const GL_GetServerCfg* internal_default_instance() {
    return reinterpret_cast<const GL_GetServerCfg*>(
               &_GL_GetServerCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    158;

  void Swap(GL_GetServerCfg* other);

  // implements Message ----------------------------------------------

  inline GL_GetServerCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  GL_GetServerCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GL_GetServerCfg& from);
  void MergeFrom(const GL_GetServerCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GL_GetServerCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GL_GetServerCfg_MsgID MsgID;
  static const MsgID ID =
    GL_GetServerCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return GL_GetServerCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    GL_GetServerCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    GL_GetServerCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    GL_GetServerCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return GL_GetServerCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return GL_GetServerCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return GL_GetServerCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GL_GetServerCfg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_GetServerCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_GetServerCfg) */ {
 public:
  LD_GetServerCfg();
  virtual ~LD_GetServerCfg();

  LD_GetServerCfg(const LD_GetServerCfg& from);

  inline LD_GetServerCfg& operator=(const LD_GetServerCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_GetServerCfg& default_instance();

  static inline const LD_GetServerCfg* internal_default_instance() {
    return reinterpret_cast<const LD_GetServerCfg*>(
               &_LD_GetServerCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    159;

  void Swap(LD_GetServerCfg* other);

  // implements Message ----------------------------------------------

  inline LD_GetServerCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_GetServerCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_GetServerCfg& from);
  void MergeFrom(const LD_GetServerCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_GetServerCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_GetServerCfg_MsgID MsgID;
  static const MsgID ID =
    LD_GetServerCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_GetServerCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_GetServerCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_GetServerCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_GetServerCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_GetServerCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_GetServerCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_GetServerCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 gid = 1;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 1;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_GetServerCfg)
 private:
  void set_has_gid();
  void clear_has_gid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 gid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_DBGameConfigMgr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DL_DBGameConfigMgr) */ {
 public:
  DL_DBGameConfigMgr();
  virtual ~DL_DBGameConfigMgr();

  DL_DBGameConfigMgr(const DL_DBGameConfigMgr& from);

  inline DL_DBGameConfigMgr& operator=(const DL_DBGameConfigMgr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_DBGameConfigMgr& default_instance();

  static inline const DL_DBGameConfigMgr* internal_default_instance() {
    return reinterpret_cast<const DL_DBGameConfigMgr*>(
               &_DL_DBGameConfigMgr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    160;

  void Swap(DL_DBGameConfigMgr* other);

  // implements Message ----------------------------------------------

  inline DL_DBGameConfigMgr* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_DBGameConfigMgr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_DBGameConfigMgr& from);
  void MergeFrom(const DL_DBGameConfigMgr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_DBGameConfigMgr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DL_DBGameConfigMgr_MsgID MsgID;
  static const MsgID ID =
    DL_DBGameConfigMgr_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DL_DBGameConfigMgr_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DL_DBGameConfigMgr_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DL_DBGameConfigMgr_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DL_DBGameConfigMgr_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DL_DBGameConfigMgr_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DL_DBGameConfigMgr_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DL_DBGameConfigMgr_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .DBGameConfigMgr pb_cfg_mgr = 2;
  bool has_pb_cfg_mgr() const;
  void clear_pb_cfg_mgr();
  static const int kPbCfgMgrFieldNumber = 2;
  const ::DBGameConfigMgr& pb_cfg_mgr() const;
  ::DBGameConfigMgr* mutable_pb_cfg_mgr();
  ::DBGameConfigMgr* release_pb_cfg_mgr();
  void set_allocated_pb_cfg_mgr(::DBGameConfigMgr* pb_cfg_mgr);

  // optional int32 gid = 1;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 1;
  ::google::protobuf::int32 gid() const;
  void set_gid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DL_DBGameConfigMgr)
 private:
  void set_has_gid();
  void clear_has_gid();
  void set_has_pb_cfg_mgr();
  void clear_has_pb_cfg_mgr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::DBGameConfigMgr* pb_cfg_mgr_;
  ::google::protobuf::int32 gid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LG_DBGameConfigMgr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LG_DBGameConfigMgr) */ {
 public:
  LG_DBGameConfigMgr();
  virtual ~LG_DBGameConfigMgr();

  LG_DBGameConfigMgr(const LG_DBGameConfigMgr& from);

  inline LG_DBGameConfigMgr& operator=(const LG_DBGameConfigMgr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LG_DBGameConfigMgr& default_instance();

  static inline const LG_DBGameConfigMgr* internal_default_instance() {
    return reinterpret_cast<const LG_DBGameConfigMgr*>(
               &_LG_DBGameConfigMgr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    161;

  void Swap(LG_DBGameConfigMgr* other);

  // implements Message ----------------------------------------------

  inline LG_DBGameConfigMgr* New() const PROTOBUF_FINAL { return New(NULL); }

  LG_DBGameConfigMgr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LG_DBGameConfigMgr& from);
  void MergeFrom(const LG_DBGameConfigMgr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LG_DBGameConfigMgr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LG_DBGameConfigMgr_MsgID MsgID;
  static const MsgID ID =
    LG_DBGameConfigMgr_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LG_DBGameConfigMgr_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LG_DBGameConfigMgr_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LG_DBGameConfigMgr_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LG_DBGameConfigMgr_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LG_DBGameConfigMgr_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LG_DBGameConfigMgr_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LG_DBGameConfigMgr_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .DBGameConfigMgr pb_cfg_mgr = 1;
  bool has_pb_cfg_mgr() const;
  void clear_pb_cfg_mgr();
  static const int kPbCfgMgrFieldNumber = 1;
  const ::DBGameConfigMgr& pb_cfg_mgr() const;
  ::DBGameConfigMgr* mutable_pb_cfg_mgr();
  ::DBGameConfigMgr* release_pb_cfg_mgr();
  void set_allocated_pb_cfg_mgr(::DBGameConfigMgr* pb_cfg_mgr);

  // @@protoc_insertion_point(class_scope:LG_DBGameConfigMgr)
 private:
  void set_has_pb_cfg_mgr();
  void clear_has_pb_cfg_mgr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::DBGameConfigMgr* pb_cfg_mgr_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SL_Channel_Invite_Tax : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SL_Channel_Invite_Tax) */ {
 public:
  SL_Channel_Invite_Tax();
  virtual ~SL_Channel_Invite_Tax();

  SL_Channel_Invite_Tax(const SL_Channel_Invite_Tax& from);

  inline SL_Channel_Invite_Tax& operator=(const SL_Channel_Invite_Tax& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SL_Channel_Invite_Tax& default_instance();

  static inline const SL_Channel_Invite_Tax* internal_default_instance() {
    return reinterpret_cast<const SL_Channel_Invite_Tax*>(
               &_SL_Channel_Invite_Tax_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    162;

  void Swap(SL_Channel_Invite_Tax* other);

  // implements Message ----------------------------------------------

  inline SL_Channel_Invite_Tax* New() const PROTOBUF_FINAL { return New(NULL); }

  SL_Channel_Invite_Tax* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SL_Channel_Invite_Tax& from);
  void MergeFrom(const SL_Channel_Invite_Tax& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SL_Channel_Invite_Tax* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SL_Channel_Invite_Tax_MsgID MsgID;
  static const MsgID ID =
    SL_Channel_Invite_Tax_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SL_Channel_Invite_Tax_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SL_Channel_Invite_Tax_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SL_Channel_Invite_Tax_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SL_Channel_Invite_Tax_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SL_Channel_Invite_Tax_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SL_Channel_Invite_Tax_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SL_Channel_Invite_Tax_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string channel_id = 1;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  const ::std::string& channel_id() const;
  void set_channel_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_id(::std::string&& value);
  #endif
  void set_channel_id(const char* value);
  void set_channel_id(const char* value, size_t size);
  ::std::string* mutable_channel_id();
  ::std::string* release_channel_id();
  void set_allocated_channel_id(::std::string* channel_id);

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 guid_invite = 3;
  bool has_guid_invite() const;
  void clear_guid_invite();
  static const int kGuidInviteFieldNumber = 3;
  ::google::protobuf::int32 guid_invite() const;
  void set_guid_invite(::google::protobuf::int32 value);

  // optional int32 val = 4;
  bool has_val() const;
  void clear_val();
  static const int kValFieldNumber = 4;
  ::google::protobuf::int32 val() const;
  void set_val(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SL_Channel_Invite_Tax)
 private:
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_guid();
  void clear_has_guid();
  void set_has_guid_invite();
  void clear_has_guid_invite();
  void set_has_val();
  void clear_has_val();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr channel_id_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 guid_invite_;
  ::google::protobuf::int32 val_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WL_BroadcastClientUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WL_BroadcastClientUpdate) */ {
 public:
  WL_BroadcastClientUpdate();
  virtual ~WL_BroadcastClientUpdate();

  WL_BroadcastClientUpdate(const WL_BroadcastClientUpdate& from);

  inline WL_BroadcastClientUpdate& operator=(const WL_BroadcastClientUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WL_BroadcastClientUpdate& default_instance();

  static inline const WL_BroadcastClientUpdate* internal_default_instance() {
    return reinterpret_cast<const WL_BroadcastClientUpdate*>(
               &_WL_BroadcastClientUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    163;

  void Swap(WL_BroadcastClientUpdate* other);

  // implements Message ----------------------------------------------

  inline WL_BroadcastClientUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  WL_BroadcastClientUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WL_BroadcastClientUpdate& from);
  void MergeFrom(const WL_BroadcastClientUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WL_BroadcastClientUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WL_BroadcastClientUpdate_MsgID MsgID;
  static const MsgID ID =
    WL_BroadcastClientUpdate_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return WL_BroadcastClientUpdate_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    WL_BroadcastClientUpdate_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    WL_BroadcastClientUpdate_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    WL_BroadcastClientUpdate_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return WL_BroadcastClientUpdate_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return WL_BroadcastClientUpdate_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return WL_BroadcastClientUpdate_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string GmCommand = 1;
  bool has_gmcommand() const;
  void clear_gmcommand();
  static const int kGmCommandFieldNumber = 1;
  const ::std::string& gmcommand() const;
  void set_gmcommand(const ::std::string& value);
  #if LANG_CXX11
  void set_gmcommand(::std::string&& value);
  #endif
  void set_gmcommand(const char* value);
  void set_gmcommand(const char* value, size_t size);
  ::std::string* mutable_gmcommand();
  ::std::string* release_gmcommand();
  void set_allocated_gmcommand(::std::string* gmcommand);

  // @@protoc_insertion_point(class_scope:WL_BroadcastClientUpdate)
 private:
  void set_has_gmcommand();
  void clear_has_gmcommand();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr gmcommand_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LW_ClientUpdateResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LW_ClientUpdateResult) */ {
 public:
  LW_ClientUpdateResult();
  virtual ~LW_ClientUpdateResult();

  LW_ClientUpdateResult(const LW_ClientUpdateResult& from);

  inline LW_ClientUpdateResult& operator=(const LW_ClientUpdateResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LW_ClientUpdateResult& default_instance();

  static inline const LW_ClientUpdateResult* internal_default_instance() {
    return reinterpret_cast<const LW_ClientUpdateResult*>(
               &_LW_ClientUpdateResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    164;

  void Swap(LW_ClientUpdateResult* other);

  // implements Message ----------------------------------------------

  inline LW_ClientUpdateResult* New() const PROTOBUF_FINAL { return New(NULL); }

  LW_ClientUpdateResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LW_ClientUpdateResult& from);
  void MergeFrom(const LW_ClientUpdateResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LW_ClientUpdateResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LW_ClientUpdateResult_MsgID MsgID;
  static const MsgID ID =
    LW_ClientUpdateResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LW_ClientUpdateResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LW_ClientUpdateResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LW_ClientUpdateResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LW_ClientUpdateResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LW_ClientUpdateResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LW_ClientUpdateResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LW_ClientUpdateResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LW_ClientUpdateResult)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WL_LuaCmdPlayerResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WL_LuaCmdPlayerResult) */ {
 public:
  WL_LuaCmdPlayerResult();
  virtual ~WL_LuaCmdPlayerResult();

  WL_LuaCmdPlayerResult(const WL_LuaCmdPlayerResult& from);

  inline WL_LuaCmdPlayerResult& operator=(const WL_LuaCmdPlayerResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WL_LuaCmdPlayerResult& default_instance();

  static inline const WL_LuaCmdPlayerResult* internal_default_instance() {
    return reinterpret_cast<const WL_LuaCmdPlayerResult*>(
               &_WL_LuaCmdPlayerResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    165;

  void Swap(WL_LuaCmdPlayerResult* other);

  // implements Message ----------------------------------------------

  inline WL_LuaCmdPlayerResult* New() const PROTOBUF_FINAL { return New(NULL); }

  WL_LuaCmdPlayerResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WL_LuaCmdPlayerResult& from);
  void MergeFrom(const WL_LuaCmdPlayerResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WL_LuaCmdPlayerResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WL_LuaCmdPlayerResult_MsgID MsgID;
  static const MsgID ID =
    WL_LuaCmdPlayerResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return WL_LuaCmdPlayerResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    WL_LuaCmdPlayerResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    WL_LuaCmdPlayerResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    WL_LuaCmdPlayerResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return WL_LuaCmdPlayerResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return WL_LuaCmdPlayerResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return WL_LuaCmdPlayerResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string cmd = 2;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  const ::std::string& cmd() const;
  void set_cmd(const ::std::string& value);
  #if LANG_CXX11
  void set_cmd(::std::string&& value);
  #endif
  void set_cmd(const char* value);
  void set_cmd(const char* value, size_t size);
  ::std::string* mutable_cmd();
  ::std::string* release_cmd();
  void set_allocated_cmd(::std::string* cmd);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WL_LuaCmdPlayerResult)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_cmd();
  void clear_has_cmd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cmd_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LW_LuaCmdPlayerResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LW_LuaCmdPlayerResult) */ {
 public:
  LW_LuaCmdPlayerResult();
  virtual ~LW_LuaCmdPlayerResult();

  LW_LuaCmdPlayerResult(const LW_LuaCmdPlayerResult& from);

  inline LW_LuaCmdPlayerResult& operator=(const LW_LuaCmdPlayerResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LW_LuaCmdPlayerResult& default_instance();

  static inline const LW_LuaCmdPlayerResult* internal_default_instance() {
    return reinterpret_cast<const LW_LuaCmdPlayerResult*>(
               &_LW_LuaCmdPlayerResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    166;

  void Swap(LW_LuaCmdPlayerResult* other);

  // implements Message ----------------------------------------------

  inline LW_LuaCmdPlayerResult* New() const PROTOBUF_FINAL { return New(NULL); }

  LW_LuaCmdPlayerResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LW_LuaCmdPlayerResult& from);
  void MergeFrom(const LW_LuaCmdPlayerResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LW_LuaCmdPlayerResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LW_LuaCmdPlayerResult_MsgID MsgID;
  static const MsgID ID =
    LW_LuaCmdPlayerResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LW_LuaCmdPlayerResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LW_LuaCmdPlayerResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LW_LuaCmdPlayerResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LW_LuaCmdPlayerResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LW_LuaCmdPlayerResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LW_LuaCmdPlayerResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LW_LuaCmdPlayerResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LW_LuaCmdPlayerResult)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_LuaCmdPlayerResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_LuaCmdPlayerResult) */ {
 public:
  LS_LuaCmdPlayerResult();
  virtual ~LS_LuaCmdPlayerResult();

  LS_LuaCmdPlayerResult(const LS_LuaCmdPlayerResult& from);

  inline LS_LuaCmdPlayerResult& operator=(const LS_LuaCmdPlayerResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_LuaCmdPlayerResult& default_instance();

  static inline const LS_LuaCmdPlayerResult* internal_default_instance() {
    return reinterpret_cast<const LS_LuaCmdPlayerResult*>(
               &_LS_LuaCmdPlayerResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    167;

  void Swap(LS_LuaCmdPlayerResult* other);

  // implements Message ----------------------------------------------

  inline LS_LuaCmdPlayerResult* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_LuaCmdPlayerResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_LuaCmdPlayerResult& from);
  void MergeFrom(const LS_LuaCmdPlayerResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_LuaCmdPlayerResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_LuaCmdPlayerResult_MsgID MsgID;
  static const MsgID ID =
    LS_LuaCmdPlayerResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_LuaCmdPlayerResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_LuaCmdPlayerResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_LuaCmdPlayerResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_LuaCmdPlayerResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_LuaCmdPlayerResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_LuaCmdPlayerResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_LuaCmdPlayerResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string cmd = 2;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  const ::std::string& cmd() const;
  void set_cmd(const ::std::string& value);
  #if LANG_CXX11
  void set_cmd(::std::string&& value);
  #endif
  void set_cmd(const char* value);
  void set_cmd(const char* value, size_t size);
  ::std::string* mutable_cmd();
  ::std::string* release_cmd();
  void set_allocated_cmd(::std::string* cmd);

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_LuaCmdPlayerResult)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_cmd();
  void clear_has_cmd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cmd_;
  ::google::protobuf::int32 web_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SL_LuaCmdPlayerResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SL_LuaCmdPlayerResult) */ {
 public:
  SL_LuaCmdPlayerResult();
  virtual ~SL_LuaCmdPlayerResult();

  SL_LuaCmdPlayerResult(const SL_LuaCmdPlayerResult& from);

  inline SL_LuaCmdPlayerResult& operator=(const SL_LuaCmdPlayerResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SL_LuaCmdPlayerResult& default_instance();

  static inline const SL_LuaCmdPlayerResult* internal_default_instance() {
    return reinterpret_cast<const SL_LuaCmdPlayerResult*>(
               &_SL_LuaCmdPlayerResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    168;

  void Swap(SL_LuaCmdPlayerResult* other);

  // implements Message ----------------------------------------------

  inline SL_LuaCmdPlayerResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SL_LuaCmdPlayerResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SL_LuaCmdPlayerResult& from);
  void MergeFrom(const SL_LuaCmdPlayerResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SL_LuaCmdPlayerResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SL_LuaCmdPlayerResult_MsgID MsgID;
  static const MsgID ID =
    SL_LuaCmdPlayerResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SL_LuaCmdPlayerResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SL_LuaCmdPlayerResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SL_LuaCmdPlayerResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SL_LuaCmdPlayerResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SL_LuaCmdPlayerResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SL_LuaCmdPlayerResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SL_LuaCmdPlayerResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SL_LuaCmdPlayerResult)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 web_id_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_LuaCmdPlayerResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_LuaCmdPlayerResult) */ {
 public:
  LD_LuaCmdPlayerResult();
  virtual ~LD_LuaCmdPlayerResult();

  LD_LuaCmdPlayerResult(const LD_LuaCmdPlayerResult& from);

  inline LD_LuaCmdPlayerResult& operator=(const LD_LuaCmdPlayerResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_LuaCmdPlayerResult& default_instance();

  static inline const LD_LuaCmdPlayerResult* internal_default_instance() {
    return reinterpret_cast<const LD_LuaCmdPlayerResult*>(
               &_LD_LuaCmdPlayerResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    169;

  void Swap(LD_LuaCmdPlayerResult* other);

  // implements Message ----------------------------------------------

  inline LD_LuaCmdPlayerResult* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_LuaCmdPlayerResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_LuaCmdPlayerResult& from);
  void MergeFrom(const LD_LuaCmdPlayerResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_LuaCmdPlayerResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_LuaCmdPlayerResult_MsgID MsgID;
  static const MsgID ID =
    LD_LuaCmdPlayerResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_LuaCmdPlayerResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_LuaCmdPlayerResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_LuaCmdPlayerResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_LuaCmdPlayerResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_LuaCmdPlayerResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_LuaCmdPlayerResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_LuaCmdPlayerResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string cmd = 2;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  const ::std::string& cmd() const;
  void set_cmd(const ::std::string& value);
  #if LANG_CXX11
  void set_cmd(::std::string&& value);
  #endif
  void set_cmd(const char* value);
  void set_cmd(const char* value, size_t size);
  ::std::string* mutable_cmd();
  ::std::string* release_cmd();
  void set_allocated_cmd(::std::string* cmd);

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_LuaCmdPlayerResult)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_cmd();
  void clear_has_cmd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cmd_;
  ::google::protobuf::int32 web_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_LuaCmdPlayerResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DL_LuaCmdPlayerResult) */ {
 public:
  DL_LuaCmdPlayerResult();
  virtual ~DL_LuaCmdPlayerResult();

  DL_LuaCmdPlayerResult(const DL_LuaCmdPlayerResult& from);

  inline DL_LuaCmdPlayerResult& operator=(const DL_LuaCmdPlayerResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_LuaCmdPlayerResult& default_instance();

  static inline const DL_LuaCmdPlayerResult* internal_default_instance() {
    return reinterpret_cast<const DL_LuaCmdPlayerResult*>(
               &_DL_LuaCmdPlayerResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    170;

  void Swap(DL_LuaCmdPlayerResult* other);

  // implements Message ----------------------------------------------

  inline DL_LuaCmdPlayerResult* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_LuaCmdPlayerResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_LuaCmdPlayerResult& from);
  void MergeFrom(const DL_LuaCmdPlayerResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_LuaCmdPlayerResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DL_LuaCmdPlayerResult_MsgID MsgID;
  static const MsgID ID =
    DL_LuaCmdPlayerResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DL_LuaCmdPlayerResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DL_LuaCmdPlayerResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DL_LuaCmdPlayerResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DL_LuaCmdPlayerResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DL_LuaCmdPlayerResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DL_LuaCmdPlayerResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DL_LuaCmdPlayerResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 web_id = 1;
  bool has_web_id() const;
  void clear_web_id();
  static const int kWebIdFieldNumber = 1;
  ::google::protobuf::int32 web_id() const;
  void set_web_id(::google::protobuf::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DL_LuaCmdPlayerResult)
 private:
  void set_has_web_id();
  void clear_has_web_id();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 web_id_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_AgentsTransfer_finish : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_AgentsTransfer_finish) */ {
 public:
  LD_AgentsTransfer_finish();
  virtual ~LD_AgentsTransfer_finish();

  LD_AgentsTransfer_finish(const LD_AgentsTransfer_finish& from);

  inline LD_AgentsTransfer_finish& operator=(const LD_AgentsTransfer_finish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_AgentsTransfer_finish& default_instance();

  static inline const LD_AgentsTransfer_finish* internal_default_instance() {
    return reinterpret_cast<const LD_AgentsTransfer_finish*>(
               &_LD_AgentsTransfer_finish_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    171;

  void Swap(LD_AgentsTransfer_finish* other);

  // implements Message ----------------------------------------------

  inline LD_AgentsTransfer_finish* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_AgentsTransfer_finish* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_AgentsTransfer_finish& from);
  void MergeFrom(const LD_AgentsTransfer_finish& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_AgentsTransfer_finish* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_AgentsTransfer_finish_MsgID MsgID;
  static const MsgID ID =
    LD_AgentsTransfer_finish_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_AgentsTransfer_finish_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_AgentsTransfer_finish_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_AgentsTransfer_finish_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_AgentsTransfer_finish_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_AgentsTransfer_finish_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_AgentsTransfer_finish_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_AgentsTransfer_finish_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .AgentsTransferData pb_result = 1;
  bool has_pb_result() const;
  void clear_pb_result();
  static const int kPbResultFieldNumber = 1;
  const ::AgentsTransferData& pb_result() const;
  ::AgentsTransferData* mutable_pb_result();
  ::AgentsTransferData* release_pb_result();
  void set_allocated_pb_result(::AgentsTransferData* pb_result);

  // optional int64 a_oldmoney = 3;
  bool has_a_oldmoney() const;
  void clear_a_oldmoney();
  static const int kAOldmoneyFieldNumber = 3;
  ::google::protobuf::int64 a_oldmoney() const;
  void set_a_oldmoney(::google::protobuf::int64 value);

  // optional int64 a_newmoney = 4;
  bool has_a_newmoney() const;
  void clear_a_newmoney();
  static const int kANewmoneyFieldNumber = 4;
  ::google::protobuf::int64 a_newmoney() const;
  void set_a_newmoney(::google::protobuf::int64 value);

  // optional int64 p_oldmoney = 5;
  bool has_p_oldmoney() const;
  void clear_p_oldmoney();
  static const int kPOldmoneyFieldNumber = 5;
  ::google::protobuf::int64 p_oldmoney() const;
  void set_p_oldmoney(::google::protobuf::int64 value);

  // optional int64 p_newmoney = 6;
  bool has_p_newmoney() const;
  void clear_p_newmoney();
  static const int kPNewmoneyFieldNumber = 6;
  ::google::protobuf::int64 p_newmoney() const;
  void set_p_newmoney(::google::protobuf::int64 value);

  // optional int32 retid = 2;
  bool has_retid() const;
  void clear_retid();
  static const int kRetidFieldNumber = 2;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_AgentsTransfer_finish)
 private:
  void set_has_pb_result();
  void clear_has_pb_result();
  void set_has_retid();
  void clear_has_retid();
  void set_has_a_oldmoney();
  void clear_has_a_oldmoney();
  void set_has_a_newmoney();
  void clear_has_a_newmoney();
  void set_has_p_oldmoney();
  void clear_has_p_oldmoney();
  void set_has_p_newmoney();
  void clear_has_p_newmoney();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::AgentsTransferData* pb_result_;
  ::google::protobuf::int64 a_oldmoney_;
  ::google::protobuf::int64 a_newmoney_;
  ::google::protobuf::int64 p_oldmoney_;
  ::google::protobuf::int64 p_newmoney_;
  ::google::protobuf::int32 retid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_CC_ChangeMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_CC_ChangeMoney) */ {
 public:
  LS_CC_ChangeMoney();
  virtual ~LS_CC_ChangeMoney();

  LS_CC_ChangeMoney(const LS_CC_ChangeMoney& from);

  inline LS_CC_ChangeMoney& operator=(const LS_CC_ChangeMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_CC_ChangeMoney& default_instance();

  static inline const LS_CC_ChangeMoney* internal_default_instance() {
    return reinterpret_cast<const LS_CC_ChangeMoney*>(
               &_LS_CC_ChangeMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    172;

  void Swap(LS_CC_ChangeMoney* other);

  // implements Message ----------------------------------------------

  inline LS_CC_ChangeMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_CC_ChangeMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_CC_ChangeMoney& from);
  void MergeFrom(const LS_CC_ChangeMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_CC_ChangeMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_CC_ChangeMoney_MsgID MsgID;
  static const MsgID ID =
    LS_CC_ChangeMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_CC_ChangeMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_CC_ChangeMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_CC_ChangeMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_CC_ChangeMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_CC_ChangeMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_CC_ChangeMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_CC_ChangeMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string keyid = 3;
  bool has_keyid() const;
  void clear_keyid();
  static const int kKeyidFieldNumber = 3;
  const ::std::string& keyid() const;
  void set_keyid(const ::std::string& value);
  #if LANG_CXX11
  void set_keyid(::std::string&& value);
  #endif
  void set_keyid(const char* value);
  void set_keyid(const char* value, size_t size);
  ::std::string* mutable_keyid();
  ::std::string* release_keyid();
  void set_allocated_keyid(::std::string* keyid);

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 retid = 4;
  bool has_retid() const;
  void clear_retid();
  static const int kRetidFieldNumber = 4;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // optional int32 login_id = 5;
  bool has_login_id() const;
  void clear_login_id();
  static const int kLoginIdFieldNumber = 5;
  ::google::protobuf::int32 login_id() const;
  void set_login_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_CC_ChangeMoney)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();
  void set_has_keyid();
  void clear_has_keyid();
  void set_has_retid();
  void clear_has_retid();
  void set_has_login_id();
  void clear_has_login_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr keyid_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 retid_;
  ::google::protobuf::int32 login_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SL_CC_ChangeMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SL_CC_ChangeMoney) */ {
 public:
  SL_CC_ChangeMoney();
  virtual ~SL_CC_ChangeMoney();

  SL_CC_ChangeMoney(const SL_CC_ChangeMoney& from);

  inline SL_CC_ChangeMoney& operator=(const SL_CC_ChangeMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SL_CC_ChangeMoney& default_instance();

  static inline const SL_CC_ChangeMoney* internal_default_instance() {
    return reinterpret_cast<const SL_CC_ChangeMoney*>(
               &_SL_CC_ChangeMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    173;

  void Swap(SL_CC_ChangeMoney* other);

  // implements Message ----------------------------------------------

  inline SL_CC_ChangeMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  SL_CC_ChangeMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SL_CC_ChangeMoney& from);
  void MergeFrom(const SL_CC_ChangeMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SL_CC_ChangeMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SL_CC_ChangeMoney_MsgID MsgID;
  static const MsgID ID =
    SL_CC_ChangeMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SL_CC_ChangeMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SL_CC_ChangeMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SL_CC_ChangeMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SL_CC_ChangeMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SL_CC_ChangeMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SL_CC_ChangeMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SL_CC_ChangeMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string keyid = 3;
  bool has_keyid() const;
  void clear_keyid();
  static const int kKeyidFieldNumber = 3;
  const ::std::string& keyid() const;
  void set_keyid(const ::std::string& value);
  #if LANG_CXX11
  void set_keyid(::std::string&& value);
  #endif
  void set_keyid(const char* value);
  void set_keyid(const char* value, size_t size);
  ::std::string* mutable_keyid();
  ::std::string* release_keyid();
  void set_allocated_keyid(::std::string* keyid);

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 retid = 4;
  bool has_retid() const;
  void clear_retid();
  static const int kRetidFieldNumber = 4;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // optional int64 oldmoney = 6;
  bool has_oldmoney() const;
  void clear_oldmoney();
  static const int kOldmoneyFieldNumber = 6;
  ::google::protobuf::int64 oldmoney() const;
  void set_oldmoney(::google::protobuf::int64 value);

  // optional int64 newmoney = 7;
  bool has_newmoney() const;
  void clear_newmoney();
  static const int kNewmoneyFieldNumber = 7;
  ::google::protobuf::int64 newmoney() const;
  void set_newmoney(::google::protobuf::int64 value);

  // optional int32 retcode = 5;
  bool has_retcode() const;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SL_CC_ChangeMoney)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();
  void set_has_keyid();
  void clear_has_keyid();
  void set_has_retid();
  void clear_has_retid();
  void set_has_retcode();
  void clear_has_retcode();
  void set_has_oldmoney();
  void clear_has_oldmoney();
  void set_has_newmoney();
  void clear_has_newmoney();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr keyid_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 retid_;
  ::google::protobuf::int64 oldmoney_;
  ::google::protobuf::int64 newmoney_;
  ::google::protobuf::int32 retcode_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_CC_ChangeMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_CC_ChangeMoney) */ {
 public:
  LD_CC_ChangeMoney();
  virtual ~LD_CC_ChangeMoney();

  LD_CC_ChangeMoney(const LD_CC_ChangeMoney& from);

  inline LD_CC_ChangeMoney& operator=(const LD_CC_ChangeMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_CC_ChangeMoney& default_instance();

  static inline const LD_CC_ChangeMoney* internal_default_instance() {
    return reinterpret_cast<const LD_CC_ChangeMoney*>(
               &_LD_CC_ChangeMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    174;

  void Swap(LD_CC_ChangeMoney* other);

  // implements Message ----------------------------------------------

  inline LD_CC_ChangeMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_CC_ChangeMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_CC_ChangeMoney& from);
  void MergeFrom(const LD_CC_ChangeMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_CC_ChangeMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_CC_ChangeMoney_MsgID MsgID;
  static const MsgID ID =
    LD_CC_ChangeMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_CC_ChangeMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_CC_ChangeMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_CC_ChangeMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_CC_ChangeMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_CC_ChangeMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_CC_ChangeMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_CC_ChangeMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string keyid = 3;
  bool has_keyid() const;
  void clear_keyid();
  static const int kKeyidFieldNumber = 3;
  const ::std::string& keyid() const;
  void set_keyid(const ::std::string& value);
  #if LANG_CXX11
  void set_keyid(::std::string&& value);
  #endif
  void set_keyid(const char* value);
  void set_keyid(const char* value, size_t size);
  ::std::string* mutable_keyid();
  ::std::string* release_keyid();
  void set_allocated_keyid(::std::string* keyid);

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 retid = 4;
  bool has_retid() const;
  void clear_retid();
  static const int kRetidFieldNumber = 4;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // optional int32 login_id = 5;
  bool has_login_id() const;
  void clear_login_id();
  static const int kLoginIdFieldNumber = 5;
  ::google::protobuf::int32 login_id() const;
  void set_login_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_CC_ChangeMoney)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();
  void set_has_keyid();
  void clear_has_keyid();
  void set_has_retid();
  void clear_has_retid();
  void set_has_login_id();
  void clear_has_login_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr keyid_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 retid_;
  ::google::protobuf::int32 login_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_CC_ChangeMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DL_CC_ChangeMoney) */ {
 public:
  DL_CC_ChangeMoney();
  virtual ~DL_CC_ChangeMoney();

  DL_CC_ChangeMoney(const DL_CC_ChangeMoney& from);

  inline DL_CC_ChangeMoney& operator=(const DL_CC_ChangeMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_CC_ChangeMoney& default_instance();

  static inline const DL_CC_ChangeMoney* internal_default_instance() {
    return reinterpret_cast<const DL_CC_ChangeMoney*>(
               &_DL_CC_ChangeMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    175;

  void Swap(DL_CC_ChangeMoney* other);

  // implements Message ----------------------------------------------

  inline DL_CC_ChangeMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_CC_ChangeMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_CC_ChangeMoney& from);
  void MergeFrom(const DL_CC_ChangeMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_CC_ChangeMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DL_CC_ChangeMoney_MsgID MsgID;
  static const MsgID ID =
    DL_CC_ChangeMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DL_CC_ChangeMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DL_CC_ChangeMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DL_CC_ChangeMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DL_CC_ChangeMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DL_CC_ChangeMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DL_CC_ChangeMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DL_CC_ChangeMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string keyid = 3;
  bool has_keyid() const;
  void clear_keyid();
  static const int kKeyidFieldNumber = 3;
  const ::std::string& keyid() const;
  void set_keyid(const ::std::string& value);
  #if LANG_CXX11
  void set_keyid(::std::string&& value);
  #endif
  void set_keyid(const char* value);
  void set_keyid(const char* value, size_t size);
  ::std::string* mutable_keyid();
  ::std::string* release_keyid();
  void set_allocated_keyid(::std::string* keyid);

  // optional int64 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int64 money() const;
  void set_money(::google::protobuf::int64 value);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 retid = 4;
  bool has_retid() const;
  void clear_retid();
  static const int kRetidFieldNumber = 4;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // optional int64 oldmoney = 6;
  bool has_oldmoney() const;
  void clear_oldmoney();
  static const int kOldmoneyFieldNumber = 6;
  ::google::protobuf::int64 oldmoney() const;
  void set_oldmoney(::google::protobuf::int64 value);

  // optional int64 newmoney = 7;
  bool has_newmoney() const;
  void clear_newmoney();
  static const int kNewmoneyFieldNumber = 7;
  ::google::protobuf::int64 newmoney() const;
  void set_newmoney(::google::protobuf::int64 value);

  // optional int32 retcode = 5;
  bool has_retcode() const;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DL_CC_ChangeMoney)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();
  void set_has_keyid();
  void clear_has_keyid();
  void set_has_retid();
  void clear_has_retid();
  void set_has_retcode();
  void clear_has_retcode();
  void set_has_oldmoney();
  void clear_has_oldmoney();
  void set_has_newmoney();
  void clear_has_newmoney();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr keyid_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 retid_;
  ::google::protobuf::int64 oldmoney_;
  ::google::protobuf::int64 newmoney_;
  ::google::protobuf::int32 retcode_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_DO_SQL : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_DO_SQL) */ {
 public:
  LD_DO_SQL();
  virtual ~LD_DO_SQL();

  LD_DO_SQL(const LD_DO_SQL& from);

  inline LD_DO_SQL& operator=(const LD_DO_SQL& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_DO_SQL& default_instance();

  static inline const LD_DO_SQL* internal_default_instance() {
    return reinterpret_cast<const LD_DO_SQL*>(
               &_LD_DO_SQL_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    176;

  void Swap(LD_DO_SQL* other);

  // implements Message ----------------------------------------------

  inline LD_DO_SQL* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_DO_SQL* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_DO_SQL& from);
  void MergeFrom(const LD_DO_SQL& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_DO_SQL* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_DO_SQL_MsgID MsgID;
  static const MsgID ID =
    LD_DO_SQL_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_DO_SQL_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_DO_SQL_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_DO_SQL_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_DO_SQL_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_DO_SQL_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_DO_SQL_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_DO_SQL_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string sql = 1;
  bool has_sql() const;
  void clear_sql();
  static const int kSqlFieldNumber = 1;
  const ::std::string& sql() const;
  void set_sql(const ::std::string& value);
  #if LANG_CXX11
  void set_sql(::std::string&& value);
  #endif
  void set_sql(const char* value);
  void set_sql(const char* value, size_t size);
  ::std::string* mutable_sql();
  ::std::string* release_sql();
  void set_allocated_sql(::std::string* sql);

  // optional string keyid = 3;
  bool has_keyid() const;
  void clear_keyid();
  static const int kKeyidFieldNumber = 3;
  const ::std::string& keyid() const;
  void set_keyid(const ::std::string& value);
  #if LANG_CXX11
  void set_keyid(::std::string&& value);
  #endif
  void set_keyid(const char* value);
  void set_keyid(const char* value, size_t size);
  ::std::string* mutable_keyid();
  ::std::string* release_keyid();
  void set_allocated_keyid(::std::string* keyid);

  // optional string database = 4;
  bool has_database() const;
  void clear_database();
  static const int kDatabaseFieldNumber = 4;
  const ::std::string& database() const;
  void set_database(const ::std::string& value);
  #if LANG_CXX11
  void set_database(::std::string&& value);
  #endif
  void set_database(const char* value);
  void set_database(const char* value, size_t size);
  ::std::string* mutable_database();
  ::std::string* release_database();
  void set_allocated_database(::std::string* database);

  // optional int32 retid = 2;
  bool has_retid() const;
  void clear_retid();
  static const int kRetidFieldNumber = 2;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_DO_SQL)
 private:
  void set_has_sql();
  void clear_has_sql();
  void set_has_retid();
  void clear_has_retid();
  void set_has_keyid();
  void clear_has_keyid();
  void set_has_database();
  void clear_has_database();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sql_;
  ::google::protobuf::internal::ArenaStringPtr keyid_;
  ::google::protobuf::internal::ArenaStringPtr database_;
  ::google::protobuf::int32 retid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_DO_SQL : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DL_DO_SQL) */ {
 public:
  DL_DO_SQL();
  virtual ~DL_DO_SQL();

  DL_DO_SQL(const DL_DO_SQL& from);

  inline DL_DO_SQL& operator=(const DL_DO_SQL& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_DO_SQL& default_instance();

  static inline const DL_DO_SQL* internal_default_instance() {
    return reinterpret_cast<const DL_DO_SQL*>(
               &_DL_DO_SQL_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    177;

  void Swap(DL_DO_SQL* other);

  // implements Message ----------------------------------------------

  inline DL_DO_SQL* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_DO_SQL* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_DO_SQL& from);
  void MergeFrom(const DL_DO_SQL& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_DO_SQL* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DL_DO_SQL_MsgID MsgID;
  static const MsgID ID =
    DL_DO_SQL_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DL_DO_SQL_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DL_DO_SQL_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DL_DO_SQL_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DL_DO_SQL_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DL_DO_SQL_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DL_DO_SQL_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DL_DO_SQL_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string retData = 2;
  bool has_retdata() const;
  void clear_retdata();
  static const int kRetDataFieldNumber = 2;
  const ::std::string& retdata() const;
  void set_retdata(const ::std::string& value);
  #if LANG_CXX11
  void set_retdata(::std::string&& value);
  #endif
  void set_retdata(const char* value);
  void set_retdata(const char* value, size_t size);
  ::std::string* mutable_retdata();
  ::std::string* release_retdata();
  void set_allocated_retdata(::std::string* retdata);

  // optional string keyid = 3;
  bool has_keyid() const;
  void clear_keyid();
  static const int kKeyidFieldNumber = 3;
  const ::std::string& keyid() const;
  void set_keyid(const ::std::string& value);
  #if LANG_CXX11
  void set_keyid(::std::string&& value);
  #endif
  void set_keyid(const char* value);
  void set_keyid(const char* value, size_t size);
  ::std::string* mutable_keyid();
  ::std::string* release_keyid();
  void set_allocated_keyid(::std::string* keyid);

  // optional int32 retCode = 1;
  bool has_retcode() const;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // optional int32 retid = 4;
  bool has_retid() const;
  void clear_retid();
  static const int kRetidFieldNumber = 4;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DL_DO_SQL)
 private:
  void set_has_retcode();
  void clear_has_retcode();
  void set_has_retdata();
  void clear_has_retdata();
  void set_has_keyid();
  void clear_has_keyid();
  void set_has_retid();
  void clear_has_retid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr retdata_;
  ::google::protobuf::internal::ArenaStringPtr keyid_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 retid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SL_Log_Robot_Money : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SL_Log_Robot_Money) */ {
 public:
  SL_Log_Robot_Money();
  virtual ~SL_Log_Robot_Money();

  SL_Log_Robot_Money(const SL_Log_Robot_Money& from);

  inline SL_Log_Robot_Money& operator=(const SL_Log_Robot_Money& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SL_Log_Robot_Money& default_instance();

  static inline const SL_Log_Robot_Money* internal_default_instance() {
    return reinterpret_cast<const SL_Log_Robot_Money*>(
               &_SL_Log_Robot_Money_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    178;

  void Swap(SL_Log_Robot_Money* other);

  // implements Message ----------------------------------------------

  inline SL_Log_Robot_Money* New() const PROTOBUF_FINAL { return New(NULL); }

  SL_Log_Robot_Money* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SL_Log_Robot_Money& from);
  void MergeFrom(const SL_Log_Robot_Money& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SL_Log_Robot_Money* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SL_Log_Robot_Money_MsgID MsgID;
  static const MsgID ID =
    SL_Log_Robot_Money_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SL_Log_Robot_Money_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SL_Log_Robot_Money_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SL_Log_Robot_Money_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SL_Log_Robot_Money_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SL_Log_Robot_Money_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SL_Log_Robot_Money_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SL_Log_Robot_Money_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string game_name = 5;
  bool has_game_name() const;
  void clear_game_name();
  static const int kGameNameFieldNumber = 5;
  const ::std::string& game_name() const;
  void set_game_name(const ::std::string& value);
  #if LANG_CXX11
  void set_game_name(::std::string&& value);
  #endif
  void set_game_name(const char* value);
  void set_game_name(const char* value, size_t size);
  ::std::string* mutable_game_name();
  ::std::string* release_game_name();
  void set_allocated_game_name(::std::string* game_name);

  // optional string id = 10;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 10;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 isbanker = 2;
  bool has_isbanker() const;
  void clear_isbanker();
  static const int kIsbankerFieldNumber = 2;
  ::google::protobuf::int32 isbanker() const;
  void set_isbanker(::google::protobuf::int32 value);

  // optional int32 winorlose = 3;
  bool has_winorlose() const;
  void clear_winorlose();
  static const int kWinorloseFieldNumber = 3;
  ::google::protobuf::int32 winorlose() const;
  void set_winorlose(::google::protobuf::int32 value);

  // optional int32 gameid = 4;
  bool has_gameid() const;
  void clear_gameid();
  static const int kGameidFieldNumber = 4;
  ::google::protobuf::int32 gameid() const;
  void set_gameid(::google::protobuf::int32 value);

  // optional int64 old_money = 6;
  bool has_old_money() const;
  void clear_old_money();
  static const int kOldMoneyFieldNumber = 6;
  ::google::protobuf::int64 old_money() const;
  void set_old_money(::google::protobuf::int64 value);

  // optional int64 new_money = 7;
  bool has_new_money() const;
  void clear_new_money();
  static const int kNewMoneyFieldNumber = 7;
  ::google::protobuf::int64 new_money() const;
  void set_new_money(::google::protobuf::int64 value);

  // optional int64 tax = 8;
  bool has_tax() const;
  void clear_tax();
  static const int kTaxFieldNumber = 8;
  ::google::protobuf::int64 tax() const;
  void set_tax(::google::protobuf::int64 value);

  // optional int64 money_change = 9;
  bool has_money_change() const;
  void clear_money_change();
  static const int kMoneyChangeFieldNumber = 9;
  ::google::protobuf::int64 money_change() const;
  void set_money_change(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:SL_Log_Robot_Money)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_isbanker();
  void clear_has_isbanker();
  void set_has_winorlose();
  void clear_has_winorlose();
  void set_has_gameid();
  void clear_has_gameid();
  void set_has_game_name();
  void clear_has_game_name();
  void set_has_old_money();
  void clear_has_old_money();
  void set_has_new_money();
  void clear_has_new_money();
  void set_has_tax();
  void clear_has_tax();
  void set_has_money_change();
  void clear_has_money_change();
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr game_name_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 isbanker_;
  ::google::protobuf::int32 winorlose_;
  ::google::protobuf::int32 gameid_;
  ::google::protobuf::int64 old_money_;
  ::google::protobuf::int64 new_money_;
  ::google::protobuf::int64 tax_;
  ::google::protobuf::int64 money_change_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WF_GetCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WF_GetCfg) */ {
 public:
  WF_GetCfg();
  virtual ~WF_GetCfg();

  WF_GetCfg(const WF_GetCfg& from);

  inline WF_GetCfg& operator=(const WF_GetCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WF_GetCfg& default_instance();

  static inline const WF_GetCfg* internal_default_instance() {
    return reinterpret_cast<const WF_GetCfg*>(
               &_WF_GetCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    179;

  void Swap(WF_GetCfg* other);

  // implements Message ----------------------------------------------

  inline WF_GetCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  WF_GetCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WF_GetCfg& from);
  void MergeFrom(const WF_GetCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WF_GetCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WF_GetCfg_MsgID MsgID;
  static const MsgID ID =
    WF_GetCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return WF_GetCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    WF_GetCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    WF_GetCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    WF_GetCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return WF_GetCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return WF_GetCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return WF_GetCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:WF_GetCfg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FW_GetCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FW_GetCfg) */ {
 public:
  FW_GetCfg();
  virtual ~FW_GetCfg();

  FW_GetCfg(const FW_GetCfg& from);

  inline FW_GetCfg& operator=(const FW_GetCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FW_GetCfg& default_instance();

  static inline const FW_GetCfg* internal_default_instance() {
    return reinterpret_cast<const FW_GetCfg*>(
               &_FW_GetCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    180;

  void Swap(FW_GetCfg* other);

  // implements Message ----------------------------------------------

  inline FW_GetCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  FW_GetCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FW_GetCfg& from);
  void MergeFrom(const FW_GetCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FW_GetCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FW_GetCfg_MsgID MsgID;
  static const MsgID ID =
    FW_GetCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return FW_GetCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    FW_GetCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    FW_GetCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    FW_GetCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return FW_GetCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return FW_GetCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return FW_GetCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string php_sign = 1;
  bool has_php_sign() const;
  void clear_php_sign();
  static const int kPhpSignFieldNumber = 1;
  const ::std::string& php_sign() const;
  void set_php_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_php_sign(::std::string&& value);
  #endif
  void set_php_sign(const char* value);
  void set_php_sign(const char* value, size_t size);
  ::std::string* mutable_php_sign();
  ::std::string* release_php_sign();
  void set_allocated_php_sign(::std::string* php_sign);

  // @@protoc_insertion_point(class_scope:FW_GetCfg)
 private:
  void set_has_php_sign();
  void clear_has_php_sign();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr php_sign_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FG_GameServerCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FG_GameServerCfg) */ {
 public:
  FG_GameServerCfg();
  virtual ~FG_GameServerCfg();

  FG_GameServerCfg(const FG_GameServerCfg& from);

  inline FG_GameServerCfg& operator=(const FG_GameServerCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FG_GameServerCfg& default_instance();

  static inline const FG_GameServerCfg* internal_default_instance() {
    return reinterpret_cast<const FG_GameServerCfg*>(
               &_FG_GameServerCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    181;

  void Swap(FG_GameServerCfg* other);

  // implements Message ----------------------------------------------

  inline FG_GameServerCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  FG_GameServerCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FG_GameServerCfg& from);
  void MergeFrom(const FG_GameServerCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FG_GameServerCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FG_GameServerCfg_MsgID MsgID;
  static const MsgID ID =
    FG_GameServerCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return FG_GameServerCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    FG_GameServerCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    FG_GameServerCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    FG_GameServerCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return FG_GameServerCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return FG_GameServerCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return FG_GameServerCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .GameClientRoomListCfg pb_cfg = 1;
  bool has_pb_cfg() const;
  void clear_pb_cfg();
  static const int kPbCfgFieldNumber = 1;
  const ::GameClientRoomListCfg& pb_cfg() const;
  ::GameClientRoomListCfg* mutable_pb_cfg();
  ::GameClientRoomListCfg* release_pb_cfg();
  void set_allocated_pb_cfg(::GameClientRoomListCfg* pb_cfg);

  // @@protoc_insertion_point(class_scope:FG_GameServerCfg)
 private:
  void set_has_pb_cfg();
  void clear_has_pb_cfg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::GameClientRoomListCfg* pb_cfg_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_AlipayEdit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_AlipayEdit) */ {
 public:
  LD_AlipayEdit();
  virtual ~LD_AlipayEdit();

  LD_AlipayEdit(const LD_AlipayEdit& from);

  inline LD_AlipayEdit& operator=(const LD_AlipayEdit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_AlipayEdit& default_instance();

  static inline const LD_AlipayEdit* internal_default_instance() {
    return reinterpret_cast<const LD_AlipayEdit*>(
               &_LD_AlipayEdit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    182;

  void Swap(LD_AlipayEdit* other);

  // implements Message ----------------------------------------------

  inline LD_AlipayEdit* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_AlipayEdit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_AlipayEdit& from);
  void MergeFrom(const LD_AlipayEdit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_AlipayEdit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_AlipayEdit_MsgID MsgID;
  static const MsgID ID =
    LD_AlipayEdit_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_AlipayEdit_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_AlipayEdit_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_AlipayEdit_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_AlipayEdit_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_AlipayEdit_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_AlipayEdit_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_AlipayEdit_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string alipay_name = 2;
  bool has_alipay_name() const;
  void clear_alipay_name();
  static const int kAlipayNameFieldNumber = 2;
  const ::std::string& alipay_name() const;
  void set_alipay_name(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name(::std::string&& value);
  #endif
  void set_alipay_name(const char* value);
  void set_alipay_name(const char* value, size_t size);
  ::std::string* mutable_alipay_name();
  ::std::string* release_alipay_name();
  void set_allocated_alipay_name(::std::string* alipay_name);

  // optional string alipay_name_y = 3;
  bool has_alipay_name_y() const;
  void clear_alipay_name_y();
  static const int kAlipayNameYFieldNumber = 3;
  const ::std::string& alipay_name_y() const;
  void set_alipay_name_y(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name_y(::std::string&& value);
  #endif
  void set_alipay_name_y(const char* value);
  void set_alipay_name_y(const char* value, size_t size);
  ::std::string* mutable_alipay_name_y();
  ::std::string* release_alipay_name_y();
  void set_allocated_alipay_name_y(::std::string* alipay_name_y);

  // optional string alipay_account = 4;
  bool has_alipay_account() const;
  void clear_alipay_account();
  static const int kAlipayAccountFieldNumber = 4;
  const ::std::string& alipay_account() const;
  void set_alipay_account(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account(::std::string&& value);
  #endif
  void set_alipay_account(const char* value);
  void set_alipay_account(const char* value, size_t size);
  ::std::string* mutable_alipay_account();
  ::std::string* release_alipay_account();
  void set_allocated_alipay_account(::std::string* alipay_account);

  // optional string alipay_account_y = 5;
  bool has_alipay_account_y() const;
  void clear_alipay_account_y();
  static const int kAlipayAccountYFieldNumber = 5;
  const ::std::string& alipay_account_y() const;
  void set_alipay_account_y(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account_y(::std::string&& value);
  #endif
  void set_alipay_account_y(const char* value);
  void set_alipay_account_y(const char* value, size_t size);
  ::std::string* mutable_alipay_account_y();
  ::std::string* release_alipay_account_y();
  void set_allocated_alipay_account_y(::std::string* alipay_account_y);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 retid = 6;
  bool has_retid() const;
  void clear_retid();
  static const int kRetidFieldNumber = 6;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_AlipayEdit)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_alipay_name();
  void clear_has_alipay_name();
  void set_has_alipay_name_y();
  void clear_has_alipay_name_y();
  void set_has_alipay_account();
  void clear_has_alipay_account();
  void set_has_alipay_account_y();
  void clear_has_alipay_account_y();
  void set_has_retid();
  void clear_has_retid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_y_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_y_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 retid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_AlipayEdit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DL_AlipayEdit) */ {
 public:
  DL_AlipayEdit();
  virtual ~DL_AlipayEdit();

  DL_AlipayEdit(const DL_AlipayEdit& from);

  inline DL_AlipayEdit& operator=(const DL_AlipayEdit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_AlipayEdit& default_instance();

  static inline const DL_AlipayEdit* internal_default_instance() {
    return reinterpret_cast<const DL_AlipayEdit*>(
               &_DL_AlipayEdit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    183;

  void Swap(DL_AlipayEdit* other);

  // implements Message ----------------------------------------------

  inline DL_AlipayEdit* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_AlipayEdit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_AlipayEdit& from);
  void MergeFrom(const DL_AlipayEdit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_AlipayEdit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DL_AlipayEdit_MsgID MsgID;
  static const MsgID ID =
    DL_AlipayEdit_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DL_AlipayEdit_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DL_AlipayEdit_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DL_AlipayEdit_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DL_AlipayEdit_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DL_AlipayEdit_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DL_AlipayEdit_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DL_AlipayEdit_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 EditNum = 2;
  bool has_editnum() const;
  void clear_editnum();
  static const int kEditNumFieldNumber = 2;
  ::google::protobuf::int32 editnum() const;
  void set_editnum(::google::protobuf::int32 value);

  // optional int32 retid = 3;
  bool has_retid() const;
  void clear_retid();
  static const int kRetidFieldNumber = 3;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DL_AlipayEdit)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_editnum();
  void clear_has_editnum();
  void set_has_retid();
  void clear_has_retid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 editnum_;
  ::google::protobuf::int32 retid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_AlipayEdit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_AlipayEdit) */ {
 public:
  LS_AlipayEdit();
  virtual ~LS_AlipayEdit();

  LS_AlipayEdit(const LS_AlipayEdit& from);

  inline LS_AlipayEdit& operator=(const LS_AlipayEdit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_AlipayEdit& default_instance();

  static inline const LS_AlipayEdit* internal_default_instance() {
    return reinterpret_cast<const LS_AlipayEdit*>(
               &_LS_AlipayEdit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    184;

  void Swap(LS_AlipayEdit* other);

  // implements Message ----------------------------------------------

  inline LS_AlipayEdit* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_AlipayEdit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_AlipayEdit& from);
  void MergeFrom(const LS_AlipayEdit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_AlipayEdit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_AlipayEdit_MsgID MsgID;
  static const MsgID ID =
    LS_AlipayEdit_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_AlipayEdit_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_AlipayEdit_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_AlipayEdit_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_AlipayEdit_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_AlipayEdit_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_AlipayEdit_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_AlipayEdit_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string alipay_name = 2;
  bool has_alipay_name() const;
  void clear_alipay_name();
  static const int kAlipayNameFieldNumber = 2;
  const ::std::string& alipay_name() const;
  void set_alipay_name(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name(::std::string&& value);
  #endif
  void set_alipay_name(const char* value);
  void set_alipay_name(const char* value, size_t size);
  ::std::string* mutable_alipay_name();
  ::std::string* release_alipay_name();
  void set_allocated_alipay_name(::std::string* alipay_name);

  // optional string alipay_name_y = 3;
  bool has_alipay_name_y() const;
  void clear_alipay_name_y();
  static const int kAlipayNameYFieldNumber = 3;
  const ::std::string& alipay_name_y() const;
  void set_alipay_name_y(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_name_y(::std::string&& value);
  #endif
  void set_alipay_name_y(const char* value);
  void set_alipay_name_y(const char* value, size_t size);
  ::std::string* mutable_alipay_name_y();
  ::std::string* release_alipay_name_y();
  void set_allocated_alipay_name_y(::std::string* alipay_name_y);

  // optional string alipay_account = 4;
  bool has_alipay_account() const;
  void clear_alipay_account();
  static const int kAlipayAccountFieldNumber = 4;
  const ::std::string& alipay_account() const;
  void set_alipay_account(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account(::std::string&& value);
  #endif
  void set_alipay_account(const char* value);
  void set_alipay_account(const char* value, size_t size);
  ::std::string* mutable_alipay_account();
  ::std::string* release_alipay_account();
  void set_allocated_alipay_account(::std::string* alipay_account);

  // optional string alipay_account_y = 5;
  bool has_alipay_account_y() const;
  void clear_alipay_account_y();
  static const int kAlipayAccountYFieldNumber = 5;
  const ::std::string& alipay_account_y() const;
  void set_alipay_account_y(const ::std::string& value);
  #if LANG_CXX11
  void set_alipay_account_y(::std::string&& value);
  #endif
  void set_alipay_account_y(const char* value);
  void set_alipay_account_y(const char* value, size_t size);
  ::std::string* mutable_alipay_account_y();
  ::std::string* release_alipay_account_y();
  void set_allocated_alipay_account_y(::std::string* alipay_account_y);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_AlipayEdit)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_alipay_name();
  void clear_has_alipay_name();
  void set_has_alipay_name_y();
  void clear_has_alipay_name_y();
  void set_has_alipay_account();
  void clear_has_alipay_account();
  void set_has_alipay_account_y();
  void clear_has_alipay_account_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_;
  ::google::protobuf::internal::ArenaStringPtr alipay_name_y_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_;
  ::google::protobuf::internal::ArenaStringPtr alipay_account_y_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SL_AddMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SL_AddMoney) */ {
 public:
  SL_AddMoney();
  virtual ~SL_AddMoney();

  SL_AddMoney(const SL_AddMoney& from);

  inline SL_AddMoney& operator=(const SL_AddMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SL_AddMoney& default_instance();

  static inline const SL_AddMoney* internal_default_instance() {
    return reinterpret_cast<const SL_AddMoney*>(
               &_SL_AddMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    185;

  void Swap(SL_AddMoney* other);

  // implements Message ----------------------------------------------

  inline SL_AddMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  SL_AddMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SL_AddMoney& from);
  void MergeFrom(const SL_AddMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SL_AddMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SL_AddMoney_MsgID MsgID;
  static const MsgID ID =
    SL_AddMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SL_AddMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SL_AddMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SL_AddMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SL_AddMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SL_AddMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SL_AddMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SL_AddMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // optional int32 add_type = 3;
  bool has_add_type() const;
  void clear_add_type();
  static const int kAddTypeFieldNumber = 3;
  ::google::protobuf::int32 add_type() const;
  void set_add_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SL_AddMoney)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();
  void set_has_add_type();
  void clear_has_add_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 add_type_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_AddMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DL_AddMoney) */ {
 public:
  DL_AddMoney();
  virtual ~DL_AddMoney();

  DL_AddMoney(const DL_AddMoney& from);

  inline DL_AddMoney& operator=(const DL_AddMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_AddMoney& default_instance();

  static inline const DL_AddMoney* internal_default_instance() {
    return reinterpret_cast<const DL_AddMoney*>(
               &_DL_AddMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    186;

  void Swap(DL_AddMoney* other);

  // implements Message ----------------------------------------------

  inline DL_AddMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_AddMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_AddMoney& from);
  void MergeFrom(const DL_AddMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_AddMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DL_AddMoney_MsgID MsgID;
  static const MsgID ID =
    DL_AddMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DL_AddMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DL_AddMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DL_AddMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DL_AddMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DL_AddMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DL_AddMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DL_AddMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // optional int32 add_type = 3;
  bool has_add_type() const;
  void clear_add_type();
  static const int kAddTypeFieldNumber = 3;
  ::google::protobuf::int32 add_type() const;
  void set_add_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DL_AddMoney)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();
  void set_has_add_type();
  void clear_has_add_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 add_type_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_AddMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_AddMoney) */ {
 public:
  LS_AddMoney();
  virtual ~LS_AddMoney();

  LS_AddMoney(const LS_AddMoney& from);

  inline LS_AddMoney& operator=(const LS_AddMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_AddMoney& default_instance();

  static inline const LS_AddMoney* internal_default_instance() {
    return reinterpret_cast<const LS_AddMoney*>(
               &_LS_AddMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    187;

  void Swap(LS_AddMoney* other);

  // implements Message ----------------------------------------------

  inline LS_AddMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_AddMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_AddMoney& from);
  void MergeFrom(const LS_AddMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_AddMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_AddMoney_MsgID MsgID;
  static const MsgID ID =
    LS_AddMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_AddMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_AddMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_AddMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_AddMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_AddMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_AddMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_AddMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // optional int32 add_type = 3;
  bool has_add_type() const;
  void clear_add_type();
  static const int kAddTypeFieldNumber = 3;
  ::google::protobuf::int32 add_type() const;
  void set_add_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_AddMoney)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();
  void set_has_add_type();
  void clear_has_add_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 add_type_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LD_AddMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LD_AddMoney) */ {
 public:
  LD_AddMoney();
  virtual ~LD_AddMoney();

  LD_AddMoney(const LD_AddMoney& from);

  inline LD_AddMoney& operator=(const LD_AddMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_AddMoney& default_instance();

  static inline const LD_AddMoney* internal_default_instance() {
    return reinterpret_cast<const LD_AddMoney*>(
               &_LD_AddMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    188;

  void Swap(LD_AddMoney* other);

  // implements Message ----------------------------------------------

  inline LD_AddMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_AddMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_AddMoney& from);
  void MergeFrom(const LD_AddMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_AddMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LD_AddMoney_MsgID MsgID;
  static const MsgID ID =
    LD_AddMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LD_AddMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LD_AddMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LD_AddMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LD_AddMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LD_AddMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LD_AddMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LD_AddMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 money = 2;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 2;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // optional int32 add_type = 3;
  bool has_add_type() const;
  void clear_add_type();
  static const int kAddTypeFieldNumber = 3;
  ::google::protobuf::int32 add_type() const;
  void set_add_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LD_AddMoney)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_money();
  void clear_has_money();
  void set_has_add_type();
  void clear_has_add_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 add_type_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_FreezeAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_FreezeAccount) */ {
 public:
  LS_FreezeAccount();
  virtual ~LS_FreezeAccount();

  LS_FreezeAccount(const LS_FreezeAccount& from);

  inline LS_FreezeAccount& operator=(const LS_FreezeAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_FreezeAccount& default_instance();

  static inline const LS_FreezeAccount* internal_default_instance() {
    return reinterpret_cast<const LS_FreezeAccount*>(
               &_LS_FreezeAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    189;

  void Swap(LS_FreezeAccount* other);

  // implements Message ----------------------------------------------

  inline LS_FreezeAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_FreezeAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_FreezeAccount& from);
  void MergeFrom(const LS_FreezeAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_FreezeAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_FreezeAccount_MsgID MsgID;
  static const MsgID ID =
    LS_FreezeAccount_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_FreezeAccount_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_FreezeAccount_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_FreezeAccount_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_FreezeAccount_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_FreezeAccount_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_FreezeAccount_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_FreezeAccount_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 retid = 3;
  bool has_retid() const;
  void clear_retid();
  static const int kRetidFieldNumber = 3;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // optional int32 login_id = 4;
  bool has_login_id() const;
  void clear_login_id();
  static const int kLoginIdFieldNumber = 4;
  ::google::protobuf::int32 login_id() const;
  void set_login_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_FreezeAccount)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_status();
  void clear_has_status();
  void set_has_retid();
  void clear_has_retid();
  void set_has_login_id();
  void clear_has_login_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 retid_;
  ::google::protobuf::int32 login_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SL_FreezeAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SL_FreezeAccount) */ {
 public:
  SL_FreezeAccount();
  virtual ~SL_FreezeAccount();

  SL_FreezeAccount(const SL_FreezeAccount& from);

  inline SL_FreezeAccount& operator=(const SL_FreezeAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SL_FreezeAccount& default_instance();

  static inline const SL_FreezeAccount* internal_default_instance() {
    return reinterpret_cast<const SL_FreezeAccount*>(
               &_SL_FreezeAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    190;

  void Swap(SL_FreezeAccount* other);

  // implements Message ----------------------------------------------

  inline SL_FreezeAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  SL_FreezeAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SL_FreezeAccount& from);
  void MergeFrom(const SL_FreezeAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SL_FreezeAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SL_FreezeAccount_MsgID MsgID;
  static const MsgID ID =
    SL_FreezeAccount_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SL_FreezeAccount_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SL_FreezeAccount_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SL_FreezeAccount_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SL_FreezeAccount_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SL_FreezeAccount_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SL_FreezeAccount_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SL_FreezeAccount_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 retid = 3;
  bool has_retid() const;
  void clear_retid();
  static const int kRetidFieldNumber = 3;
  ::google::protobuf::int32 retid() const;
  void set_retid(::google::protobuf::int32 value);

  // optional int32 ret = 4;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 4;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SL_FreezeAccount)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_status();
  void clear_has_status();
  void set_has_retid();
  void clear_has_retid();
  void set_has_ret();
  void clear_has_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 retid_;
  ::google::protobuf::int32 ret_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WS_MaintainUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WS_MaintainUpdate) */ {
 public:
  WS_MaintainUpdate();
  virtual ~WS_MaintainUpdate();

  WS_MaintainUpdate(const WS_MaintainUpdate& from);

  inline WS_MaintainUpdate& operator=(const WS_MaintainUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WS_MaintainUpdate& default_instance();

  static inline const WS_MaintainUpdate* internal_default_instance() {
    return reinterpret_cast<const WS_MaintainUpdate*>(
               &_WS_MaintainUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    191;

  void Swap(WS_MaintainUpdate* other);

  // implements Message ----------------------------------------------

  inline WS_MaintainUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  WS_MaintainUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WS_MaintainUpdate& from);
  void MergeFrom(const WS_MaintainUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WS_MaintainUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WS_MaintainUpdate_MsgID MsgID;
  static const MsgID ID =
    WS_MaintainUpdate_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return WS_MaintainUpdate_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    WS_MaintainUpdate_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    WS_MaintainUpdate_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    WS_MaintainUpdate_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return WS_MaintainUpdate_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return WS_MaintainUpdate_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return WS_MaintainUpdate_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 id_index = 1;
  bool has_id_index() const;
  void clear_id_index();
  static const int kIdIndexFieldNumber = 1;
  ::google::protobuf::int32 id_index() const;
  void set_id_index(::google::protobuf::int32 value);

  // optional int32 first_game_type = 2;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 2;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional int32 switchopen = 3;
  bool has_switchopen() const;
  void clear_switchopen();
  static const int kSwitchopenFieldNumber = 3;
  ::google::protobuf::int32 switchopen() const;
  void set_switchopen(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WS_MaintainUpdate)
 private:
  void set_has_id_index();
  void clear_has_id_index();
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_switchopen();
  void clear_has_switchopen();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_index_;
  ::google::protobuf::int32 first_game_type_;
  ::google::protobuf::int32 switchopen_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SW_MaintainResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SW_MaintainResult) */ {
 public:
  SW_MaintainResult();
  virtual ~SW_MaintainResult();

  SW_MaintainResult(const SW_MaintainResult& from);

  inline SW_MaintainResult& operator=(const SW_MaintainResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SW_MaintainResult& default_instance();

  static inline const SW_MaintainResult* internal_default_instance() {
    return reinterpret_cast<const SW_MaintainResult*>(
               &_SW_MaintainResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    192;

  void Swap(SW_MaintainResult* other);

  // implements Message ----------------------------------------------

  inline SW_MaintainResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SW_MaintainResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SW_MaintainResult& from);
  void MergeFrom(const SW_MaintainResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SW_MaintainResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SW_MaintainResult_MsgID MsgID;
  static const MsgID ID =
    SW_MaintainResult_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SW_MaintainResult_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SW_MaintainResult_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SW_MaintainResult_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SW_MaintainResult_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SW_MaintainResult_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SW_MaintainResult_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SW_MaintainResult_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SW_MaintainResult)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_QueryMaintain : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_QueryMaintain) */ {
 public:
  CS_QueryMaintain();
  virtual ~CS_QueryMaintain();

  CS_QueryMaintain(const CS_QueryMaintain& from);

  inline CS_QueryMaintain& operator=(const CS_QueryMaintain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_QueryMaintain& default_instance();

  static inline const CS_QueryMaintain* internal_default_instance() {
    return reinterpret_cast<const CS_QueryMaintain*>(
               &_CS_QueryMaintain_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    193;

  void Swap(CS_QueryMaintain* other);

  // implements Message ----------------------------------------------

  inline CS_QueryMaintain* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_QueryMaintain* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_QueryMaintain& from);
  void MergeFrom(const CS_QueryMaintain& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_QueryMaintain* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CS_QueryMaintain_MsgID MsgID;
  static const MsgID ID =
    CS_QueryMaintain_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return CS_QueryMaintain_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    CS_QueryMaintain_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    CS_QueryMaintain_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    CS_QueryMaintain_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return CS_QueryMaintain_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return CS_QueryMaintain_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return CS_QueryMaintain_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 maintaintype = 1;
  bool has_maintaintype() const;
  void clear_maintaintype();
  static const int kMaintaintypeFieldNumber = 1;
  ::google::protobuf::int32 maintaintype() const;
  void set_maintaintype(::google::protobuf::int32 value);

  // optional int32 switchopen = 2;
  bool has_switchopen() const;
  void clear_switchopen();
  static const int kSwitchopenFieldNumber = 2;
  ::google::protobuf::int32 switchopen() const;
  void set_switchopen(::google::protobuf::int32 value);

  // optional int32 first_game_type = 3;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 3;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CS_QueryMaintain)
 private:
  void set_has_maintaintype();
  void clear_has_maintaintype();
  void set_has_switchopen();
  void clear_has_switchopen();
  void set_has_first_game_type();
  void clear_has_first_game_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 maintaintype_;
  ::google::protobuf::int32 switchopen_;
  ::google::protobuf::int32 first_game_type_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GF_PlayerIn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GF_PlayerIn) */ {
 public:
  GF_PlayerIn();
  virtual ~GF_PlayerIn();

  GF_PlayerIn(const GF_PlayerIn& from);

  inline GF_PlayerIn& operator=(const GF_PlayerIn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GF_PlayerIn& default_instance();

  static inline const GF_PlayerIn* internal_default_instance() {
    return reinterpret_cast<const GF_PlayerIn*>(
               &_GF_PlayerIn_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    194;

  void Swap(GF_PlayerIn* other);

  // implements Message ----------------------------------------------

  inline GF_PlayerIn* New() const PROTOBUF_FINAL { return New(NULL); }

  GF_PlayerIn* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GF_PlayerIn& from);
  void MergeFrom(const GF_PlayerIn& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GF_PlayerIn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GF_PlayerIn_MsgID MsgID;
  static const MsgID ID =
    GF_PlayerIn_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return GF_PlayerIn_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    GF_PlayerIn_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    GF_PlayerIn_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    GF_PlayerIn_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return GF_PlayerIn_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return GF_PlayerIn_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return GF_PlayerIn_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GF_PlayerIn)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GF_PlayerOut : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GF_PlayerOut) */ {
 public:
  GF_PlayerOut();
  virtual ~GF_PlayerOut();

  GF_PlayerOut(const GF_PlayerOut& from);

  inline GF_PlayerOut& operator=(const GF_PlayerOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GF_PlayerOut& default_instance();

  static inline const GF_PlayerOut* internal_default_instance() {
    return reinterpret_cast<const GF_PlayerOut*>(
               &_GF_PlayerOut_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    195;

  void Swap(GF_PlayerOut* other);

  // implements Message ----------------------------------------------

  inline GF_PlayerOut* New() const PROTOBUF_FINAL { return New(NULL); }

  GF_PlayerOut* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GF_PlayerOut& from);
  void MergeFrom(const GF_PlayerOut& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GF_PlayerOut* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GF_PlayerOut_MsgID MsgID;
  static const MsgID ID =
    GF_PlayerOut_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return GF_PlayerOut_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    GF_PlayerOut_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    GF_PlayerOut_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    GF_PlayerOut_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return GF_PlayerOut_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return GF_PlayerOut_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return GF_PlayerOut_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GF_PlayerOut)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WF_ChangeRobotCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WF_ChangeRobotCfg) */ {
 public:
  WF_ChangeRobotCfg();
  virtual ~WF_ChangeRobotCfg();

  WF_ChangeRobotCfg(const WF_ChangeRobotCfg& from);

  inline WF_ChangeRobotCfg& operator=(const WF_ChangeRobotCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WF_ChangeRobotCfg& default_instance();

  static inline const WF_ChangeRobotCfg* internal_default_instance() {
    return reinterpret_cast<const WF_ChangeRobotCfg*>(
               &_WF_ChangeRobotCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    196;

  void Swap(WF_ChangeRobotCfg* other);

  // implements Message ----------------------------------------------

  inline WF_ChangeRobotCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  WF_ChangeRobotCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WF_ChangeRobotCfg& from);
  void MergeFrom(const WF_ChangeRobotCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WF_ChangeRobotCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WF_ChangeRobotCfg_MsgID MsgID;
  static const MsgID ID =
    WF_ChangeRobotCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return WF_ChangeRobotCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    WF_ChangeRobotCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    WF_ChangeRobotCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    WF_ChangeRobotCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return WF_ChangeRobotCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return WF_ChangeRobotCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return WF_ChangeRobotCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string cfg_param = 2;
  bool has_cfg_param() const;
  void clear_cfg_param();
  static const int kCfgParamFieldNumber = 2;
  const ::std::string& cfg_param() const;
  void set_cfg_param(const ::std::string& value);
  #if LANG_CXX11
  void set_cfg_param(::std::string&& value);
  #endif
  void set_cfg_param(const char* value);
  void set_cfg_param(const char* value, size_t size);
  ::std::string* mutable_cfg_param();
  ::std::string* release_cfg_param();
  void set_allocated_cfg_param(::std::string* cfg_param);

  // optional int32 game_id = 1;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WF_ChangeRobotCfg)
 private:
  void set_has_game_id();
  void clear_has_game_id();
  void set_has_cfg_param();
  void clear_has_cfg_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cfg_param_;
  ::google::protobuf::int32 game_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FW_ChangeRobotCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FW_ChangeRobotCfg) */ {
 public:
  FW_ChangeRobotCfg();
  virtual ~FW_ChangeRobotCfg();

  FW_ChangeRobotCfg(const FW_ChangeRobotCfg& from);

  inline FW_ChangeRobotCfg& operator=(const FW_ChangeRobotCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FW_ChangeRobotCfg& default_instance();

  static inline const FW_ChangeRobotCfg* internal_default_instance() {
    return reinterpret_cast<const FW_ChangeRobotCfg*>(
               &_FW_ChangeRobotCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    197;

  void Swap(FW_ChangeRobotCfg* other);

  // implements Message ----------------------------------------------

  inline FW_ChangeRobotCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  FW_ChangeRobotCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FW_ChangeRobotCfg& from);
  void MergeFrom(const FW_ChangeRobotCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FW_ChangeRobotCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FW_ChangeRobotCfg_MsgID MsgID;
  static const MsgID ID =
    FW_ChangeRobotCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return FW_ChangeRobotCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    FW_ChangeRobotCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    FW_ChangeRobotCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    FW_ChangeRobotCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return FW_ChangeRobotCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return FW_ChangeRobotCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return FW_ChangeRobotCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FW_ChangeRobotCfg)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FS_ChangeRobotCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FS_ChangeRobotCfg) */ {
 public:
  FS_ChangeRobotCfg();
  virtual ~FS_ChangeRobotCfg();

  FS_ChangeRobotCfg(const FS_ChangeRobotCfg& from);

  inline FS_ChangeRobotCfg& operator=(const FS_ChangeRobotCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FS_ChangeRobotCfg& default_instance();

  static inline const FS_ChangeRobotCfg* internal_default_instance() {
    return reinterpret_cast<const FS_ChangeRobotCfg*>(
               &_FS_ChangeRobotCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    198;

  void Swap(FS_ChangeRobotCfg* other);

  // implements Message ----------------------------------------------

  inline FS_ChangeRobotCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  FS_ChangeRobotCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FS_ChangeRobotCfg& from);
  void MergeFrom(const FS_ChangeRobotCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FS_ChangeRobotCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FS_ChangeRobotCfg_MsgID MsgID;
  static const MsgID ID =
    FS_ChangeRobotCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return FS_ChangeRobotCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    FS_ChangeRobotCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    FS_ChangeRobotCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    FS_ChangeRobotCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return FS_ChangeRobotCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return FS_ChangeRobotCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return FS_ChangeRobotCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string cfg_param = 1;
  bool has_cfg_param() const;
  void clear_cfg_param();
  static const int kCfgParamFieldNumber = 1;
  const ::std::string& cfg_param() const;
  void set_cfg_param(const ::std::string& value);
  #if LANG_CXX11
  void set_cfg_param(::std::string&& value);
  #endif
  void set_cfg_param(const char* value);
  void set_cfg_param(const char* value, size_t size);
  ::std::string* mutable_cfg_param();
  ::std::string* release_cfg_param();
  void set_allocated_cfg_param(::std::string* cfg_param);

  // @@protoc_insertion_point(class_scope:FS_ChangeRobotCfg)
 private:
  void set_has_cfg_param();
  void clear_has_cfg_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cfg_param_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_QueryRobotCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_QueryRobotCfg) */ {
 public:
  SD_QueryRobotCfg();
  virtual ~SD_QueryRobotCfg();

  SD_QueryRobotCfg(const SD_QueryRobotCfg& from);

  inline SD_QueryRobotCfg& operator=(const SD_QueryRobotCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_QueryRobotCfg& default_instance();

  static inline const SD_QueryRobotCfg* internal_default_instance() {
    return reinterpret_cast<const SD_QueryRobotCfg*>(
               &_SD_QueryRobotCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    199;

  void Swap(SD_QueryRobotCfg* other);

  // implements Message ----------------------------------------------

  inline SD_QueryRobotCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_QueryRobotCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_QueryRobotCfg& from);
  void MergeFrom(const SD_QueryRobotCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_QueryRobotCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_QueryRobotCfg_MsgID MsgID;
  static const MsgID ID =
    SD_QueryRobotCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_QueryRobotCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_QueryRobotCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_QueryRobotCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_QueryRobotCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_QueryRobotCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_QueryRobotCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_QueryRobotCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 game_id = 1;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_QueryRobotCfg)
 private:
  void set_has_game_id();
  void clear_has_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 game_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_QueryRobotCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_QueryRobotCfg) */ {
 public:
  DS_QueryRobotCfg();
  virtual ~DS_QueryRobotCfg();

  DS_QueryRobotCfg(const DS_QueryRobotCfg& from);

  inline DS_QueryRobotCfg& operator=(const DS_QueryRobotCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_QueryRobotCfg& default_instance();

  static inline const DS_QueryRobotCfg* internal_default_instance() {
    return reinterpret_cast<const DS_QueryRobotCfg*>(
               &_DS_QueryRobotCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    200;

  void Swap(DS_QueryRobotCfg* other);

  // implements Message ----------------------------------------------

  inline DS_QueryRobotCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_QueryRobotCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_QueryRobotCfg& from);
  void MergeFrom(const DS_QueryRobotCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_QueryRobotCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_QueryRobotCfg_MsgID MsgID;
  static const MsgID ID =
    DS_QueryRobotCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_QueryRobotCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_QueryRobotCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_QueryRobotCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_QueryRobotCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_QueryRobotCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_QueryRobotCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_QueryRobotCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 game_id = 1;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // optional int32 use_robot = 2;
  bool has_use_robot() const;
  void clear_use_robot();
  static const int kUseRobotFieldNumber = 2;
  ::google::protobuf::int32 use_robot() const;
  void set_use_robot(::google::protobuf::int32 value);

  // optional int32 storage = 3;
  bool has_storage() const;
  void clear_storage();
  static const int kStorageFieldNumber = 3;
  ::google::protobuf::int32 storage() const;
  void set_storage(::google::protobuf::int32 value);

  // optional int32 robot_level = 4;
  bool has_robot_level() const;
  void clear_robot_level();
  static const int kRobotLevelFieldNumber = 4;
  ::google::protobuf::int32 robot_level() const;
  void set_robot_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_QueryRobotCfg)
 private:
  void set_has_game_id();
  void clear_has_game_id();
  void set_has_use_robot();
  void clear_has_use_robot();
  void set_has_storage();
  void clear_has_storage();
  void set_has_robot_level();
  void clear_has_robot_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 game_id_;
  ::google::protobuf::int32 use_robot_;
  ::google::protobuf::int32 storage_;
  ::google::protobuf::int32 robot_level_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_Save_Storage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_Save_Storage) */ {
 public:
  SD_Save_Storage();
  virtual ~SD_Save_Storage();

  SD_Save_Storage(const SD_Save_Storage& from);

  inline SD_Save_Storage& operator=(const SD_Save_Storage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_Save_Storage& default_instance();

  static inline const SD_Save_Storage* internal_default_instance() {
    return reinterpret_cast<const SD_Save_Storage*>(
               &_SD_Save_Storage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    201;

  void Swap(SD_Save_Storage* other);

  // implements Message ----------------------------------------------

  inline SD_Save_Storage* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_Save_Storage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_Save_Storage& from);
  void MergeFrom(const SD_Save_Storage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_Save_Storage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_Save_Storage_MsgID MsgID;
  static const MsgID ID =
    SD_Save_Storage_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_Save_Storage_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_Save_Storage_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_Save_Storage_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_Save_Storage_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_Save_Storage_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_Save_Storage_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_Save_Storage_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 game_id = 1;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // optional int32 storage = 2;
  bool has_storage() const;
  void clear_storage();
  static const int kStorageFieldNumber = 2;
  ::google::protobuf::int32 storage() const;
  void set_storage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_Save_Storage)
 private:
  void set_has_game_id();
  void clear_has_game_id();
  void set_has_storage();
  void clear_has_storage();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 game_id_;
  ::google::protobuf::int32 storage_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_Agent_CashMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_Agent_CashMoney) */ {
 public:
  SD_Agent_CashMoney();
  virtual ~SD_Agent_CashMoney();

  SD_Agent_CashMoney(const SD_Agent_CashMoney& from);

  inline SD_Agent_CashMoney& operator=(const SD_Agent_CashMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_Agent_CashMoney& default_instance();

  static inline const SD_Agent_CashMoney* internal_default_instance() {
    return reinterpret_cast<const SD_Agent_CashMoney*>(
               &_SD_Agent_CashMoney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    202;

  void Swap(SD_Agent_CashMoney* other);

  // implements Message ----------------------------------------------

  inline SD_Agent_CashMoney* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_Agent_CashMoney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_Agent_CashMoney& from);
  void MergeFrom(const SD_Agent_CashMoney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_Agent_CashMoney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_Agent_CashMoney_MsgID MsgID;
  static const MsgID ID =
    SD_Agent_CashMoney_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_Agent_CashMoney_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_Agent_CashMoney_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_Agent_CashMoney_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_Agent_CashMoney_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_Agent_CashMoney_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_Agent_CashMoney_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_Agent_CashMoney_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string phone = 6;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 6;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional string phone_type = 7;
  bool has_phone_type() const;
  void clear_phone_type();
  static const int kPhoneTypeFieldNumber = 7;
  const ::std::string& phone_type() const;
  void set_phone_type(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_type(::std::string&& value);
  #endif
  void set_phone_type(const char* value);
  void set_phone_type(const char* value, size_t size);
  ::std::string* mutable_phone_type();
  ::std::string* release_phone_type();
  void set_allocated_phone_type(::std::string* phone_type);

  // optional string ip = 8;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 8;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string bag_id = 9;
  bool has_bag_id() const;
  void clear_bag_id();
  static const int kBagIdFieldNumber = 9;
  const ::std::string& bag_id() const;
  void set_bag_id(const ::std::string& value);
  #if LANG_CXX11
  void set_bag_id(::std::string&& value);
  #endif
  void set_bag_id(const char* value);
  void set_bag_id(const char* value, size_t size);
  ::std::string* mutable_bag_id();
  ::std::string* release_bag_id();
  void set_allocated_bag_id(::std::string* bag_id);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 agent_id = 2;
  bool has_agent_id() const;
  void clear_agent_id();
  static const int kAgentIdFieldNumber = 2;
  ::google::protobuf::int32 agent_id() const;
  void set_agent_id(::google::protobuf::int32 value);

  // optional int32 money = 3;
  bool has_money() const;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // optional int32 coins = 4;
  bool has_coins() const;
  void clear_coins();
  static const int kCoinsFieldNumber = 4;
  ::google::protobuf::int32 coins() const;
  void set_coins(::google::protobuf::int32 value);

  // optional int64 bef_money = 10;
  bool has_bef_money() const;
  void clear_bef_money();
  static const int kBefMoneyFieldNumber = 10;
  ::google::protobuf::int64 bef_money() const;
  void set_bef_money(::google::protobuf::int64 value);

  // optional int64 aft_money = 11;
  bool has_aft_money() const;
  void clear_aft_money();
  static const int kAftMoneyFieldNumber = 11;
  ::google::protobuf::int64 aft_money() const;
  void set_aft_money(::google::protobuf::int64 value);

  // optional int64 bef_bank = 12;
  bool has_bef_bank() const;
  void clear_bef_bank();
  static const int kBefBankFieldNumber = 12;
  ::google::protobuf::int64 bef_bank() const;
  void set_bef_bank(::google::protobuf::int64 value);

  // optional int64 aft_bank = 13;
  bool has_aft_bank() const;
  void clear_aft_bank();
  static const int kAftBankFieldNumber = 13;
  ::google::protobuf::int64 aft_bank() const;
  void set_aft_bank(::google::protobuf::int64 value);

  // optional int32 pay_money = 5;
  bool has_pay_money() const;
  void clear_pay_money();
  static const int kPayMoneyFieldNumber = 5;
  ::google::protobuf::int32 pay_money() const;
  void set_pay_money(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_Agent_CashMoney)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_agent_id();
  void clear_has_agent_id();
  void set_has_money();
  void clear_has_money();
  void set_has_coins();
  void clear_has_coins();
  void set_has_pay_money();
  void clear_has_pay_money();
  void set_has_phone();
  void clear_has_phone();
  void set_has_phone_type();
  void clear_has_phone_type();
  void set_has_ip();
  void clear_has_ip();
  void set_has_bag_id();
  void clear_has_bag_id();
  void set_has_bef_money();
  void clear_has_bef_money();
  void set_has_aft_money();
  void clear_has_aft_money();
  void set_has_bef_bank();
  void clear_has_bef_bank();
  void set_has_aft_bank();
  void clear_has_aft_bank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr phone_type_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr bag_id_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 agent_id_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 coins_;
  ::google::protobuf::int64 bef_money_;
  ::google::protobuf::int64 aft_money_;
  ::google::protobuf::int64 bef_bank_;
  ::google::protobuf::int64 aft_bank_;
  ::google::protobuf::int32 pay_money_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_UpdateGameTotalTax : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_UpdateGameTotalTax) */ {
 public:
  SD_UpdateGameTotalTax();
  virtual ~SD_UpdateGameTotalTax();

  SD_UpdateGameTotalTax(const SD_UpdateGameTotalTax& from);

  inline SD_UpdateGameTotalTax& operator=(const SD_UpdateGameTotalTax& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_UpdateGameTotalTax& default_instance();

  static inline const SD_UpdateGameTotalTax* internal_default_instance() {
    return reinterpret_cast<const SD_UpdateGameTotalTax*>(
               &_SD_UpdateGameTotalTax_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    203;

  void Swap(SD_UpdateGameTotalTax* other);

  // implements Message ----------------------------------------------

  inline SD_UpdateGameTotalTax* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_UpdateGameTotalTax* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_UpdateGameTotalTax& from);
  void MergeFrom(const SD_UpdateGameTotalTax& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_UpdateGameTotalTax* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_UpdateGameTotalTax_MsgID MsgID;
  static const MsgID ID =
    SD_UpdateGameTotalTax_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_UpdateGameTotalTax_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_UpdateGameTotalTax_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_UpdateGameTotalTax_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_UpdateGameTotalTax_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_UpdateGameTotalTax_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_UpdateGameTotalTax_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_UpdateGameTotalTax_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 game_id = 1;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // optional int32 first_game_type = 2;
  bool has_first_game_type() const;
  void clear_first_game_type();
  static const int kFirstGameTypeFieldNumber = 2;
  ::google::protobuf::int32 first_game_type() const;
  void set_first_game_type(::google::protobuf::int32 value);

  // optional int32 second_game_type = 3;
  bool has_second_game_type() const;
  void clear_second_game_type();
  static const int kSecondGameTypeFieldNumber = 3;
  ::google::protobuf::int32 second_game_type() const;
  void set_second_game_type(::google::protobuf::int32 value);

  // optional int32 tax_add = 4;
  bool has_tax_add() const;
  void clear_tax_add();
  static const int kTaxAddFieldNumber = 4;
  ::google::protobuf::int32 tax_add() const;
  void set_tax_add(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_UpdateGameTotalTax)
 private:
  void set_has_game_id();
  void clear_has_game_id();
  void set_has_first_game_type();
  void clear_has_first_game_type();
  void set_has_second_game_type();
  void clear_has_second_game_type();
  void set_has_tax_add();
  void clear_has_tax_add();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 game_id_;
  ::google::protobuf::int32 first_game_type_;
  ::google::protobuf::int32 second_game_type_;
  ::google::protobuf::int32 tax_add_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WF_Cash_false : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WF_Cash_false) */ {
 public:
  WF_Cash_false();
  virtual ~WF_Cash_false();

  WF_Cash_false(const WF_Cash_false& from);

  inline WF_Cash_false& operator=(const WF_Cash_false& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WF_Cash_false& default_instance();

  static inline const WF_Cash_false* internal_default_instance() {
    return reinterpret_cast<const WF_Cash_false*>(
               &_WF_Cash_false_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    204;

  void Swap(WF_Cash_false* other);

  // implements Message ----------------------------------------------

  inline WF_Cash_false* New() const PROTOBUF_FINAL { return New(NULL); }

  WF_Cash_false* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WF_Cash_false& from);
  void MergeFrom(const WF_Cash_false& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WF_Cash_false* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WF_Cash_false_MsgID MsgID;
  static const MsgID ID =
    WF_Cash_false_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return WF_Cash_false_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    WF_Cash_false_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    WF_Cash_false_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    WF_Cash_false_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return WF_Cash_false_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return WF_Cash_false_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return WF_Cash_false_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 order_id = 2;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  ::google::protobuf::int32 order_id() const;
  void set_order_id(::google::protobuf::int32 value);

  // optional int32 reason = 3;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  ::google::protobuf::int32 reason() const;
  void set_reason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WF_Cash_false)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_order_id();
  void clear_has_order_id();
  void set_has_reason();
  void clear_has_reason();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 order_id_;
  ::google::protobuf::int32 reason_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FS_Black_List : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FS_Black_List) */ {
 public:
  FS_Black_List();
  virtual ~FS_Black_List();

  FS_Black_List(const FS_Black_List& from);

  inline FS_Black_List& operator=(const FS_Black_List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FS_Black_List& default_instance();

  static inline const FS_Black_List* internal_default_instance() {
    return reinterpret_cast<const FS_Black_List*>(
               &_FS_Black_List_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    205;

  void Swap(FS_Black_List* other);

  // implements Message ----------------------------------------------

  inline FS_Black_List* New() const PROTOBUF_FINAL { return New(NULL); }

  FS_Black_List* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FS_Black_List& from);
  void MergeFrom(const FS_Black_List& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FS_Black_List* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FS_Black_List_MsgID MsgID;
  static const MsgID ID =
    FS_Black_List_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return FS_Black_List_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    FS_Black_List_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    FS_Black_List_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    FS_Black_List_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return FS_Black_List_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return FS_Black_List_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return FS_Black_List_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 black_list = 1;
  int black_list_size() const;
  void clear_black_list();
  static const int kBlackListFieldNumber = 1;
  ::google::protobuf::int32 black_list(int index) const;
  void set_black_list(int index, ::google::protobuf::int32 value);
  void add_black_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      black_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_black_list();

  // repeated string game_list = 2;
  int game_list_size() const;
  void clear_game_list();
  static const int kGameListFieldNumber = 2;
  const ::std::string& game_list(int index) const;
  ::std::string* mutable_game_list(int index);
  void set_game_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_game_list(int index, ::std::string&& value);
  #endif
  void set_game_list(int index, const char* value);
  void set_game_list(int index, const char* value, size_t size);
  ::std::string* add_game_list();
  void add_game_list(const ::std::string& value);
  #if LANG_CXX11
  void add_game_list(::std::string&& value);
  #endif
  void add_game_list(const char* value);
  void add_game_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& game_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_game_list();

  // @@protoc_insertion_point(class_scope:FS_Black_List)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > black_list_;
  ::google::protobuf::RepeatedPtrField< ::std::string> game_list_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_BindBankCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_BindBankCard) */ {
 public:
  SD_BindBankCard();
  virtual ~SD_BindBankCard();

  SD_BindBankCard(const SD_BindBankCard& from);

  inline SD_BindBankCard& operator=(const SD_BindBankCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_BindBankCard& default_instance();

  static inline const SD_BindBankCard* internal_default_instance() {
    return reinterpret_cast<const SD_BindBankCard*>(
               &_SD_BindBankCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    206;

  void Swap(SD_BindBankCard* other);

  // implements Message ----------------------------------------------

  inline SD_BindBankCard* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_BindBankCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_BindBankCard& from);
  void MergeFrom(const SD_BindBankCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_BindBankCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_BindBankCard_MsgID MsgID;
  static const MsgID ID =
    SD_BindBankCard_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_BindBankCard_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_BindBankCard_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_BindBankCard_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_BindBankCard_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_BindBankCard_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_BindBankCard_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_BindBankCard_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .BankCardInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::BankCardInfo& info() const;
  ::BankCardInfo* mutable_info();
  ::BankCardInfo* release_info();
  void set_allocated_info(::BankCardInfo* info);

  // @@protoc_insertion_point(class_scope:SD_BindBankCard)
 private:
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::BankCardInfo* info_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_BindBankCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_BindBankCard) */ {
 public:
  DS_BindBankCard();
  virtual ~DS_BindBankCard();

  DS_BindBankCard(const DS_BindBankCard& from);

  inline DS_BindBankCard& operator=(const DS_BindBankCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_BindBankCard& default_instance();

  static inline const DS_BindBankCard* internal_default_instance() {
    return reinterpret_cast<const DS_BindBankCard*>(
               &_DS_BindBankCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    207;

  void Swap(DS_BindBankCard* other);

  // implements Message ----------------------------------------------

  inline DS_BindBankCard* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_BindBankCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_BindBankCard& from);
  void MergeFrom(const DS_BindBankCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_BindBankCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_BindBankCard_MsgID MsgID;
  static const MsgID ID =
    DS_BindBankCard_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_BindBankCard_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_BindBankCard_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_BindBankCard_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_BindBankCard_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_BindBankCard_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_BindBankCard_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_BindBankCard_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_BindBankCard)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_GetBankCardInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_GetBankCardInfo) */ {
 public:
  SD_GetBankCardInfo();
  virtual ~SD_GetBankCardInfo();

  SD_GetBankCardInfo(const SD_GetBankCardInfo& from);

  inline SD_GetBankCardInfo& operator=(const SD_GetBankCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_GetBankCardInfo& default_instance();

  static inline const SD_GetBankCardInfo* internal_default_instance() {
    return reinterpret_cast<const SD_GetBankCardInfo*>(
               &_SD_GetBankCardInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    208;

  void Swap(SD_GetBankCardInfo* other);

  // implements Message ----------------------------------------------

  inline SD_GetBankCardInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_GetBankCardInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_GetBankCardInfo& from);
  void MergeFrom(const SD_GetBankCardInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_GetBankCardInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_GetBankCardInfo_MsgID MsgID;
  static const MsgID ID =
    SD_GetBankCardInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_GetBankCardInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_GetBankCardInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_GetBankCardInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_GetBankCardInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_GetBankCardInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_GetBankCardInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_GetBankCardInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_GetBankCardInfo)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_GetBankCardInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_GetBankCardInfo) */ {
 public:
  DS_GetBankCardInfo();
  virtual ~DS_GetBankCardInfo();

  DS_GetBankCardInfo(const DS_GetBankCardInfo& from);

  inline DS_GetBankCardInfo& operator=(const DS_GetBankCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_GetBankCardInfo& default_instance();

  static inline const DS_GetBankCardInfo* internal_default_instance() {
    return reinterpret_cast<const DS_GetBankCardInfo*>(
               &_DS_GetBankCardInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    209;

  void Swap(DS_GetBankCardInfo* other);

  // implements Message ----------------------------------------------

  inline DS_GetBankCardInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_GetBankCardInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_GetBankCardInfo& from);
  void MergeFrom(const DS_GetBankCardInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_GetBankCardInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_GetBankCardInfo_MsgID MsgID;
  static const MsgID ID =
    DS_GetBankCardInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_GetBankCardInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_GetBankCardInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_GetBankCardInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_GetBankCardInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_GetBankCardInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_GetBankCardInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_GetBankCardInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .BankCardInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::BankCardInfo& info() const;
  ::BankCardInfo* mutable_info();
  ::BankCardInfo* release_info();
  void set_allocated_info(::BankCardInfo* info);

  // @@protoc_insertion_point(class_scope:DS_GetBankCardInfo)
 private:
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::BankCardInfo* info_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientChannelInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClientChannelInfo) */ {
 public:
  ClientChannelInfo();
  virtual ~ClientChannelInfo();

  ClientChannelInfo(const ClientChannelInfo& from);

  inline ClientChannelInfo& operator=(const ClientChannelInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientChannelInfo& default_instance();

  static inline const ClientChannelInfo* internal_default_instance() {
    return reinterpret_cast<const ClientChannelInfo*>(
               &_ClientChannelInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    210;

  void Swap(ClientChannelInfo* other);

  // implements Message ----------------------------------------------

  inline ClientChannelInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientChannelInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientChannelInfo& from);
  void MergeFrom(const ClientChannelInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientChannelInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 open_server_list = 2;
  int open_server_list_size() const;
  void clear_open_server_list();
  static const int kOpenServerListFieldNumber = 2;
  ::google::protobuf::int32 open_server_list(int index) const;
  void set_open_server_list(int index, ::google::protobuf::int32 value);
  void add_open_server_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      open_server_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_open_server_list();

  // optional string channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::std::string& channel() const;
  void set_channel(const ::std::string& value);
  #if LANG_CXX11
  void set_channel(::std::string&& value);
  #endif
  void set_channel(const char* value);
  void set_channel(const char* value, size_t size);
  ::std::string* mutable_channel();
  ::std::string* release_channel();
  void set_allocated_channel(::std::string* channel);

  // @@protoc_insertion_point(class_scope:ClientChannelInfo)
 private:
  void set_has_channel();
  void clear_has_channel();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > open_server_list_;
  ::google::protobuf::internal::ArenaStringPtr channel_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FG_ClientChannelInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FG_ClientChannelInfo) */ {
 public:
  FG_ClientChannelInfo();
  virtual ~FG_ClientChannelInfo();

  FG_ClientChannelInfo(const FG_ClientChannelInfo& from);

  inline FG_ClientChannelInfo& operator=(const FG_ClientChannelInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FG_ClientChannelInfo& default_instance();

  static inline const FG_ClientChannelInfo* internal_default_instance() {
    return reinterpret_cast<const FG_ClientChannelInfo*>(
               &_FG_ClientChannelInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    211;

  void Swap(FG_ClientChannelInfo* other);

  // implements Message ----------------------------------------------

  inline FG_ClientChannelInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FG_ClientChannelInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FG_ClientChannelInfo& from);
  void MergeFrom(const FG_ClientChannelInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FG_ClientChannelInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FG_ClientChannelInfo_MsgID MsgID;
  static const MsgID ID =
    FG_ClientChannelInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return FG_ClientChannelInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    FG_ClientChannelInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    FG_ClientChannelInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    FG_ClientChannelInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return FG_ClientChannelInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return FG_ClientChannelInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return FG_ClientChannelInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .ClientChannelInfo info = 1;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::ClientChannelInfo& info(int index) const;
  ::ClientChannelInfo* mutable_info(int index);
  ::ClientChannelInfo* add_info();
  ::google::protobuf::RepeatedPtrField< ::ClientChannelInfo >*
      mutable_info();
  const ::google::protobuf::RepeatedPtrField< ::ClientChannelInfo >&
      info() const;

  // @@protoc_insertion_point(class_scope:FG_ClientChannelInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ClientChannelInfo > info_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WL_LuaGameCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WL_LuaGameCmd) */ {
 public:
  WL_LuaGameCmd();
  virtual ~WL_LuaGameCmd();

  WL_LuaGameCmd(const WL_LuaGameCmd& from);

  inline WL_LuaGameCmd& operator=(const WL_LuaGameCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WL_LuaGameCmd& default_instance();

  static inline const WL_LuaGameCmd* internal_default_instance() {
    return reinterpret_cast<const WL_LuaGameCmd*>(
               &_WL_LuaGameCmd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    212;

  void Swap(WL_LuaGameCmd* other);

  // implements Message ----------------------------------------------

  inline WL_LuaGameCmd* New() const PROTOBUF_FINAL { return New(NULL); }

  WL_LuaGameCmd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WL_LuaGameCmd& from);
  void MergeFrom(const WL_LuaGameCmd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WL_LuaGameCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WL_LuaGameCmd_MsgID MsgID;
  static const MsgID ID =
    WL_LuaGameCmd_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return WL_LuaGameCmd_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    WL_LuaGameCmd_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    WL_LuaGameCmd_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    WL_LuaGameCmd_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return WL_LuaGameCmd_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return WL_LuaGameCmd_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return WL_LuaGameCmd_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string cmd = 2;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  const ::std::string& cmd() const;
  void set_cmd(const ::std::string& value);
  #if LANG_CXX11
  void set_cmd(::std::string&& value);
  #endif
  void set_cmd(const char* value);
  void set_cmd(const char* value, size_t size);
  ::std::string* mutable_cmd();
  ::std::string* release_cmd();
  void set_allocated_cmd(::std::string* cmd);

  // optional string param = 3;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 3;
  const ::std::string& param() const;
  void set_param(const ::std::string& value);
  #if LANG_CXX11
  void set_param(::std::string&& value);
  #endif
  void set_param(const char* value);
  void set_param(const char* value, size_t size);
  ::std::string* mutable_param();
  ::std::string* release_param();
  void set_allocated_param(::std::string* param);

  // optional int32 gameid = 1;
  bool has_gameid() const;
  void clear_gameid();
  static const int kGameidFieldNumber = 1;
  ::google::protobuf::int32 gameid() const;
  void set_gameid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WL_LuaGameCmd)
 private:
  void set_has_gameid();
  void clear_has_gameid();
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cmd_;
  ::google::protobuf::internal::ArenaStringPtr param_;
  ::google::protobuf::int32 gameid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LW_LuaGameCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LW_LuaGameCmd) */ {
 public:
  LW_LuaGameCmd();
  virtual ~LW_LuaGameCmd();

  LW_LuaGameCmd(const LW_LuaGameCmd& from);

  inline LW_LuaGameCmd& operator=(const LW_LuaGameCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LW_LuaGameCmd& default_instance();

  static inline const LW_LuaGameCmd* internal_default_instance() {
    return reinterpret_cast<const LW_LuaGameCmd*>(
               &_LW_LuaGameCmd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    213;

  void Swap(LW_LuaGameCmd* other);

  // implements Message ----------------------------------------------

  inline LW_LuaGameCmd* New() const PROTOBUF_FINAL { return New(NULL); }

  LW_LuaGameCmd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LW_LuaGameCmd& from);
  void MergeFrom(const LW_LuaGameCmd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LW_LuaGameCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LW_LuaGameCmd_MsgID MsgID;
  static const MsgID ID =
    LW_LuaGameCmd_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LW_LuaGameCmd_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LW_LuaGameCmd_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LW_LuaGameCmd_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LW_LuaGameCmd_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LW_LuaGameCmd_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LW_LuaGameCmd_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LW_LuaGameCmd_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string param = 2;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 2;
  const ::std::string& param() const;
  void set_param(const ::std::string& value);
  #if LANG_CXX11
  void set_param(::std::string&& value);
  #endif
  void set_param(const char* value);
  void set_param(const char* value, size_t size);
  ::std::string* mutable_param();
  ::std::string* release_param();
  void set_allocated_param(::std::string* param);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LW_LuaGameCmd)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_param();
  void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr param_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LS_LuaGameCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LS_LuaGameCmd) */ {
 public:
  LS_LuaGameCmd();
  virtual ~LS_LuaGameCmd();

  LS_LuaGameCmd(const LS_LuaGameCmd& from);

  inline LS_LuaGameCmd& operator=(const LS_LuaGameCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LS_LuaGameCmd& default_instance();

  static inline const LS_LuaGameCmd* internal_default_instance() {
    return reinterpret_cast<const LS_LuaGameCmd*>(
               &_LS_LuaGameCmd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    214;

  void Swap(LS_LuaGameCmd* other);

  // implements Message ----------------------------------------------

  inline LS_LuaGameCmd* New() const PROTOBUF_FINAL { return New(NULL); }

  LS_LuaGameCmd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LS_LuaGameCmd& from);
  void MergeFrom(const LS_LuaGameCmd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LS_LuaGameCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LS_LuaGameCmd_MsgID MsgID;
  static const MsgID ID =
    LS_LuaGameCmd_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return LS_LuaGameCmd_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    LS_LuaGameCmd_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    LS_LuaGameCmd_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    LS_LuaGameCmd_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return LS_LuaGameCmd_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return LS_LuaGameCmd_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return LS_LuaGameCmd_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  const ::std::string& cmd() const;
  void set_cmd(const ::std::string& value);
  #if LANG_CXX11
  void set_cmd(::std::string&& value);
  #endif
  void set_cmd(const char* value);
  void set_cmd(const char* value, size_t size);
  ::std::string* mutable_cmd();
  ::std::string* release_cmd();
  void set_allocated_cmd(::std::string* cmd);

  // optional string param = 2;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 2;
  const ::std::string& param() const;
  void set_param(const ::std::string& value);
  #if LANG_CXX11
  void set_param(::std::string&& value);
  #endif
  void set_param(const char* value);
  void set_param(const char* value, size_t size);
  ::std::string* mutable_param();
  ::std::string* release_param();
  void set_allocated_param(::std::string* param);

  // optional int32 webid = 3;
  bool has_webid() const;
  void clear_webid();
  static const int kWebidFieldNumber = 3;
  ::google::protobuf::int32 webid() const;
  void set_webid(::google::protobuf::int32 value);

  // optional int32 gameid = 4;
  bool has_gameid() const;
  void clear_gameid();
  static const int kGameidFieldNumber = 4;
  ::google::protobuf::int32 gameid() const;
  void set_gameid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LS_LuaGameCmd)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_param();
  void clear_has_param();
  void set_has_webid();
  void clear_has_webid();
  void set_has_gameid();
  void clear_has_gameid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cmd_;
  ::google::protobuf::internal::ArenaStringPtr param_;
  ::google::protobuf::int32 webid_;
  ::google::protobuf::int32 gameid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SL_LuaGameCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SL_LuaGameCmd) */ {
 public:
  SL_LuaGameCmd();
  virtual ~SL_LuaGameCmd();

  SL_LuaGameCmd(const SL_LuaGameCmd& from);

  inline SL_LuaGameCmd& operator=(const SL_LuaGameCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SL_LuaGameCmd& default_instance();

  static inline const SL_LuaGameCmd* internal_default_instance() {
    return reinterpret_cast<const SL_LuaGameCmd*>(
               &_SL_LuaGameCmd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    215;

  void Swap(SL_LuaGameCmd* other);

  // implements Message ----------------------------------------------

  inline SL_LuaGameCmd* New() const PROTOBUF_FINAL { return New(NULL); }

  SL_LuaGameCmd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SL_LuaGameCmd& from);
  void MergeFrom(const SL_LuaGameCmd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SL_LuaGameCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SL_LuaGameCmd_MsgID MsgID;
  static const MsgID ID =
    SL_LuaGameCmd_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SL_LuaGameCmd_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SL_LuaGameCmd_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SL_LuaGameCmd_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SL_LuaGameCmd_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SL_LuaGameCmd_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SL_LuaGameCmd_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SL_LuaGameCmd_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string param = 2;
  bool has_param() const;
  void clear_param();
  static const int kParamFieldNumber = 2;
  const ::std::string& param() const;
  void set_param(const ::std::string& value);
  #if LANG_CXX11
  void set_param(::std::string&& value);
  #endif
  void set_param(const char* value);
  void set_param(const char* value, size_t size);
  ::std::string* mutable_param();
  ::std::string* release_param();
  void set_allocated_param(::std::string* param);

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional int32 webid = 3;
  bool has_webid() const;
  void clear_webid();
  static const int kWebidFieldNumber = 3;
  ::google::protobuf::int32 webid() const;
  void set_webid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SL_LuaGameCmd)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_param();
  void clear_has_param();
  void set_has_webid();
  void clear_has_webid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr param_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 webid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BrnnChiCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BrnnChiCfg) */ {
 public:
  BrnnChiCfg();
  virtual ~BrnnChiCfg();

  BrnnChiCfg(const BrnnChiCfg& from);

  inline BrnnChiCfg& operator=(const BrnnChiCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BrnnChiCfg& default_instance();

  static inline const BrnnChiCfg* internal_default_instance() {
    return reinterpret_cast<const BrnnChiCfg*>(
               &_BrnnChiCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    216;

  void Swap(BrnnChiCfg* other);

  // implements Message ----------------------------------------------

  inline BrnnChiCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  BrnnChiCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BrnnChiCfg& from);
  void MergeFrom(const BrnnChiCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BrnnChiCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 beginr = 1;
  bool has_beginr() const;
  void clear_beginr();
  static const int kBeginrFieldNumber = 1;
  ::google::protobuf::int32 beginr() const;
  void set_beginr(::google::protobuf::int32 value);

  // optional int32 endr = 2;
  bool has_endr() const;
  void clear_endr();
  static const int kEndrFieldNumber = 2;
  ::google::protobuf::int32 endr() const;
  void set_endr(::google::protobuf::int32 value);

  // optional int32 prob = 3;
  bool has_prob() const;
  void clear_prob();
  static const int kProbFieldNumber = 3;
  ::google::protobuf::int32 prob() const;
  void set_prob(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BrnnChiCfg)
 private:
  void set_has_beginr();
  void clear_has_beginr();
  void set_has_endr();
  void clear_has_endr();
  void set_has_prob();
  void clear_has_prob();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 beginr_;
  ::google::protobuf::int32 endr_;
  ::google::protobuf::int32 prob_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_QueryBrnnChiCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_QueryBrnnChiCfg) */ {
 public:
  SD_QueryBrnnChiCfg();
  virtual ~SD_QueryBrnnChiCfg();

  SD_QueryBrnnChiCfg(const SD_QueryBrnnChiCfg& from);

  inline SD_QueryBrnnChiCfg& operator=(const SD_QueryBrnnChiCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_QueryBrnnChiCfg& default_instance();

  static inline const SD_QueryBrnnChiCfg* internal_default_instance() {
    return reinterpret_cast<const SD_QueryBrnnChiCfg*>(
               &_SD_QueryBrnnChiCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    217;

  void Swap(SD_QueryBrnnChiCfg* other);

  // implements Message ----------------------------------------------

  inline SD_QueryBrnnChiCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_QueryBrnnChiCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_QueryBrnnChiCfg& from);
  void MergeFrom(const SD_QueryBrnnChiCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_QueryBrnnChiCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_QueryBrnnChiCfg_MsgID MsgID;
  static const MsgID ID =
    SD_QueryBrnnChiCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_QueryBrnnChiCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_QueryBrnnChiCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_QueryBrnnChiCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_QueryBrnnChiCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_QueryBrnnChiCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_QueryBrnnChiCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_QueryBrnnChiCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 game_id = 1;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_QueryBrnnChiCfg)
 private:
  void set_has_game_id();
  void clear_has_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 game_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_QueryBrnnChiCfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_QueryBrnnChiCfg) */ {
 public:
  DS_QueryBrnnChiCfg();
  virtual ~DS_QueryBrnnChiCfg();

  DS_QueryBrnnChiCfg(const DS_QueryBrnnChiCfg& from);

  inline DS_QueryBrnnChiCfg& operator=(const DS_QueryBrnnChiCfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_QueryBrnnChiCfg& default_instance();

  static inline const DS_QueryBrnnChiCfg* internal_default_instance() {
    return reinterpret_cast<const DS_QueryBrnnChiCfg*>(
               &_DS_QueryBrnnChiCfg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    218;

  void Swap(DS_QueryBrnnChiCfg* other);

  // implements Message ----------------------------------------------

  inline DS_QueryBrnnChiCfg* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_QueryBrnnChiCfg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_QueryBrnnChiCfg& from);
  void MergeFrom(const DS_QueryBrnnChiCfg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_QueryBrnnChiCfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_QueryBrnnChiCfg_MsgID MsgID;
  static const MsgID ID =
    DS_QueryBrnnChiCfg_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_QueryBrnnChiCfg_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_QueryBrnnChiCfg_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_QueryBrnnChiCfg_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_QueryBrnnChiCfg_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_QueryBrnnChiCfg_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_QueryBrnnChiCfg_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_QueryBrnnChiCfg_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .BrnnChiCfg pb_brnn_chi_cfg = 2;
  int pb_brnn_chi_cfg_size() const;
  void clear_pb_brnn_chi_cfg();
  static const int kPbBrnnChiCfgFieldNumber = 2;
  const ::BrnnChiCfg& pb_brnn_chi_cfg(int index) const;
  ::BrnnChiCfg* mutable_pb_brnn_chi_cfg(int index);
  ::BrnnChiCfg* add_pb_brnn_chi_cfg();
  ::google::protobuf::RepeatedPtrField< ::BrnnChiCfg >*
      mutable_pb_brnn_chi_cfg();
  const ::google::protobuf::RepeatedPtrField< ::BrnnChiCfg >&
      pb_brnn_chi_cfg() const;

  // optional int32 game_id = 1;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_QueryBrnnChiCfg)
 private:
  void set_has_game_id();
  void clear_has_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BrnnChiCfg > pb_brnn_chi_cfg_;
  ::google::protobuf::int32 game_id_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerPromotion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerPromotion) */ {
 public:
  PlayerPromotion();
  virtual ~PlayerPromotion();

  PlayerPromotion(const PlayerPromotion& from);

  inline PlayerPromotion& operator=(const PlayerPromotion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerPromotion& default_instance();

  static inline const PlayerPromotion* internal_default_instance() {
    return reinterpret_cast<const PlayerPromotion*>(
               &_PlayerPromotion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    219;

  void Swap(PlayerPromotion* other);

  // implements Message ----------------------------------------------

  inline PlayerPromotion* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerPromotion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerPromotion& from);
  void MergeFrom(const PlayerPromotion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerPromotion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tid = 1;
  bool has_tid() const;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // optional int32 profit = 2;
  bool has_profit() const;
  void clear_profit();
  static const int kProfitFieldNumber = 2;
  ::google::protobuf::int32 profit() const;
  void set_profit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerPromotion)
 private:
  void set_has_tid();
  void clear_has_tid();
  void set_has_profit();
  void clear_has_profit();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 profit_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_QueryPlayerPromotion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_QueryPlayerPromotion) */ {
 public:
  SD_QueryPlayerPromotion();
  virtual ~SD_QueryPlayerPromotion();

  SD_QueryPlayerPromotion(const SD_QueryPlayerPromotion& from);

  inline SD_QueryPlayerPromotion& operator=(const SD_QueryPlayerPromotion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_QueryPlayerPromotion& default_instance();

  static inline const SD_QueryPlayerPromotion* internal_default_instance() {
    return reinterpret_cast<const SD_QueryPlayerPromotion*>(
               &_SD_QueryPlayerPromotion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    220;

  void Swap(SD_QueryPlayerPromotion* other);

  // implements Message ----------------------------------------------

  inline SD_QueryPlayerPromotion* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_QueryPlayerPromotion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_QueryPlayerPromotion& from);
  void MergeFrom(const SD_QueryPlayerPromotion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_QueryPlayerPromotion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_QueryPlayerPromotion_MsgID MsgID;
  static const MsgID ID =
    SD_QueryPlayerPromotion_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_QueryPlayerPromotion_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_QueryPlayerPromotion_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_QueryPlayerPromotion_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_QueryPlayerPromotion_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_QueryPlayerPromotion_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_QueryPlayerPromotion_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_QueryPlayerPromotion_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 game_id = 1;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_QueryPlayerPromotion)
 private:
  void set_has_game_id();
  void clear_has_game_id();
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 game_id_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_QueryPlayerPromotion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_QueryPlayerPromotion) */ {
 public:
  DS_QueryPlayerPromotion();
  virtual ~DS_QueryPlayerPromotion();

  DS_QueryPlayerPromotion(const DS_QueryPlayerPromotion& from);

  inline DS_QueryPlayerPromotion& operator=(const DS_QueryPlayerPromotion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_QueryPlayerPromotion& default_instance();

  static inline const DS_QueryPlayerPromotion* internal_default_instance() {
    return reinterpret_cast<const DS_QueryPlayerPromotion*>(
               &_DS_QueryPlayerPromotion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    221;

  void Swap(DS_QueryPlayerPromotion* other);

  // implements Message ----------------------------------------------

  inline DS_QueryPlayerPromotion* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_QueryPlayerPromotion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_QueryPlayerPromotion& from);
  void MergeFrom(const DS_QueryPlayerPromotion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_QueryPlayerPromotion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_QueryPlayerPromotion_MsgID MsgID;
  static const MsgID ID =
    DS_QueryPlayerPromotion_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_QueryPlayerPromotion_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_QueryPlayerPromotion_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_QueryPlayerPromotion_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_QueryPlayerPromotion_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_QueryPlayerPromotion_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_QueryPlayerPromotion_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_QueryPlayerPromotion_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .PlayerPromotion pb_playerpromotion = 3;
  int pb_playerpromotion_size() const;
  void clear_pb_playerpromotion();
  static const int kPbPlayerpromotionFieldNumber = 3;
  const ::PlayerPromotion& pb_playerpromotion(int index) const;
  ::PlayerPromotion* mutable_pb_playerpromotion(int index);
  ::PlayerPromotion* add_pb_playerpromotion();
  ::google::protobuf::RepeatedPtrField< ::PlayerPromotion >*
      mutable_pb_playerpromotion();
  const ::google::protobuf::RepeatedPtrField< ::PlayerPromotion >&
      pb_playerpromotion() const;

  // optional int32 game_id = 1;
  bool has_game_id() const;
  void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  ::google::protobuf::int32 game_id() const;
  void set_game_id(::google::protobuf::int32 value);

  // optional int32 guid = 2;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_QueryPlayerPromotion)
 private:
  void set_has_game_id();
  void clear_has_game_id();
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PlayerPromotion > pb_playerpromotion_;
  ::google::protobuf::int32 game_id_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_NotifyPhpServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_NotifyPhpServer) */ {
 public:
  SD_NotifyPhpServer();
  virtual ~SD_NotifyPhpServer();

  SD_NotifyPhpServer(const SD_NotifyPhpServer& from);

  inline SD_NotifyPhpServer& operator=(const SD_NotifyPhpServer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_NotifyPhpServer& default_instance();

  static inline const SD_NotifyPhpServer* internal_default_instance() {
    return reinterpret_cast<const SD_NotifyPhpServer*>(
               &_SD_NotifyPhpServer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    222;

  void Swap(SD_NotifyPhpServer* other);

  // implements Message ----------------------------------------------

  inline SD_NotifyPhpServer* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_NotifyPhpServer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_NotifyPhpServer& from);
  void MergeFrom(const SD_NotifyPhpServer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_NotifyPhpServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_NotifyPhpServer_MsgID MsgID;
  static const MsgID ID =
    SD_NotifyPhpServer_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_NotifyPhpServer_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_NotifyPhpServer_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_NotifyPhpServer_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_NotifyPhpServer_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_NotifyPhpServer_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_NotifyPhpServer_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_NotifyPhpServer_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_NotifyPhpServer)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SD_QueryPlayerRecharge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SD_QueryPlayerRecharge) */ {
 public:
  SD_QueryPlayerRecharge();
  virtual ~SD_QueryPlayerRecharge();

  SD_QueryPlayerRecharge(const SD_QueryPlayerRecharge& from);

  inline SD_QueryPlayerRecharge& operator=(const SD_QueryPlayerRecharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SD_QueryPlayerRecharge& default_instance();

  static inline const SD_QueryPlayerRecharge* internal_default_instance() {
    return reinterpret_cast<const SD_QueryPlayerRecharge*>(
               &_SD_QueryPlayerRecharge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    223;

  void Swap(SD_QueryPlayerRecharge* other);

  // implements Message ----------------------------------------------

  inline SD_QueryPlayerRecharge* New() const PROTOBUF_FINAL { return New(NULL); }

  SD_QueryPlayerRecharge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SD_QueryPlayerRecharge& from);
  void MergeFrom(const SD_QueryPlayerRecharge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SD_QueryPlayerRecharge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SD_QueryPlayerRecharge_MsgID MsgID;
  static const MsgID ID =
    SD_QueryPlayerRecharge_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return SD_QueryPlayerRecharge_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    SD_QueryPlayerRecharge_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    SD_QueryPlayerRecharge_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    SD_QueryPlayerRecharge_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return SD_QueryPlayerRecharge_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return SD_QueryPlayerRecharge_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return SD_QueryPlayerRecharge_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SD_QueryPlayerRecharge)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DS_QueryPlayerRecharge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DS_QueryPlayerRecharge) */ {
 public:
  DS_QueryPlayerRecharge();
  virtual ~DS_QueryPlayerRecharge();

  DS_QueryPlayerRecharge(const DS_QueryPlayerRecharge& from);

  inline DS_QueryPlayerRecharge& operator=(const DS_QueryPlayerRecharge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DS_QueryPlayerRecharge& default_instance();

  static inline const DS_QueryPlayerRecharge* internal_default_instance() {
    return reinterpret_cast<const DS_QueryPlayerRecharge*>(
               &_DS_QueryPlayerRecharge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    224;

  void Swap(DS_QueryPlayerRecharge* other);

  // implements Message ----------------------------------------------

  inline DS_QueryPlayerRecharge* New() const PROTOBUF_FINAL { return New(NULL); }

  DS_QueryPlayerRecharge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DS_QueryPlayerRecharge& from);
  void MergeFrom(const DS_QueryPlayerRecharge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DS_QueryPlayerRecharge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DS_QueryPlayerRecharge_MsgID MsgID;
  static const MsgID ID =
    DS_QueryPlayerRecharge_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DS_QueryPlayerRecharge_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DS_QueryPlayerRecharge_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DS_QueryPlayerRecharge_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DS_QueryPlayerRecharge_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DS_QueryPlayerRecharge_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DS_QueryPlayerRecharge_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DS_QueryPlayerRecharge_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 recharge = 2;
  bool has_recharge() const;
  void clear_recharge();
  static const int kRechargeFieldNumber = 2;
  ::google::protobuf::int32 recharge() const;
  void set_recharge(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DS_QueryPlayerRecharge)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_recharge();
  void clear_has_recharge();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 recharge_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GF_SavePlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GF_SavePlayerInfo) */ {
 public:
  GF_SavePlayerInfo();
  virtual ~GF_SavePlayerInfo();

  GF_SavePlayerInfo(const GF_SavePlayerInfo& from);

  inline GF_SavePlayerInfo& operator=(const GF_SavePlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GF_SavePlayerInfo& default_instance();

  static inline const GF_SavePlayerInfo* internal_default_instance() {
    return reinterpret_cast<const GF_SavePlayerInfo*>(
               &_GF_SavePlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    225;

  void Swap(GF_SavePlayerInfo* other);

  // implements Message ----------------------------------------------

  inline GF_SavePlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GF_SavePlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GF_SavePlayerInfo& from);
  void MergeFrom(const GF_SavePlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GF_SavePlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GF_SavePlayerInfo_MsgID MsgID;
  static const MsgID ID =
    GF_SavePlayerInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return GF_SavePlayerInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    GF_SavePlayerInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    GF_SavePlayerInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    GF_SavePlayerInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return GF_SavePlayerInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return GF_SavePlayerInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return GF_SavePlayerInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .PlayerInfoInMemery info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::PlayerInfoInMemery& info() const;
  ::PlayerInfoInMemery* mutable_info();
  ::PlayerInfoInMemery* release_info();
  void set_allocated_info(::PlayerInfoInMemery* info);

  // @@protoc_insertion_point(class_scope:GF_SavePlayerInfo)
 private:
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::PlayerInfoInMemery* info_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GF_GetPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GF_GetPlayerInfo) */ {
 public:
  GF_GetPlayerInfo();
  virtual ~GF_GetPlayerInfo();

  GF_GetPlayerInfo(const GF_GetPlayerInfo& from);

  inline GF_GetPlayerInfo& operator=(const GF_GetPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GF_GetPlayerInfo& default_instance();

  static inline const GF_GetPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const GF_GetPlayerInfo*>(
               &_GF_GetPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    226;

  void Swap(GF_GetPlayerInfo* other);

  // implements Message ----------------------------------------------

  inline GF_GetPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GF_GetPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GF_GetPlayerInfo& from);
  void MergeFrom(const GF_GetPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GF_GetPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GF_GetPlayerInfo_MsgID MsgID;
  static const MsgID ID =
    GF_GetPlayerInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return GF_GetPlayerInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    GF_GetPlayerInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    GF_GetPlayerInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    GF_GetPlayerInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return GF_GetPlayerInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return GF_GetPlayerInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return GF_GetPlayerInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GF_GetPlayerInfo)
 private:
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FG_GetPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FG_GetPlayerInfo) */ {
 public:
  FG_GetPlayerInfo();
  virtual ~FG_GetPlayerInfo();

  FG_GetPlayerInfo(const FG_GetPlayerInfo& from);

  inline FG_GetPlayerInfo& operator=(const FG_GetPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FG_GetPlayerInfo& default_instance();

  static inline const FG_GetPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const FG_GetPlayerInfo*>(
               &_FG_GetPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    227;

  void Swap(FG_GetPlayerInfo* other);

  // implements Message ----------------------------------------------

  inline FG_GetPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FG_GetPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FG_GetPlayerInfo& from);
  void MergeFrom(const FG_GetPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FG_GetPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FG_GetPlayerInfo_MsgID MsgID;
  static const MsgID ID =
    FG_GetPlayerInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return FG_GetPlayerInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    FG_GetPlayerInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    FG_GetPlayerInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    FG_GetPlayerInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return FG_GetPlayerInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return FG_GetPlayerInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return FG_GetPlayerInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .PlayerInfoInMemery info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::PlayerInfoInMemery& info() const;
  ::PlayerInfoInMemery* mutable_info();
  ::PlayerInfoInMemery* release_info();
  void set_allocated_info(::PlayerInfoInMemery* info);

  // @@protoc_insertion_point(class_scope:FG_GetPlayerInfo)
 private:
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::PlayerInfoInMemery* info_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DF_SavePlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DF_SavePlayerInfo) */ {
 public:
  DF_SavePlayerInfo();
  virtual ~DF_SavePlayerInfo();

  DF_SavePlayerInfo(const DF_SavePlayerInfo& from);

  inline DF_SavePlayerInfo& operator=(const DF_SavePlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DF_SavePlayerInfo& default_instance();

  static inline const DF_SavePlayerInfo* internal_default_instance() {
    return reinterpret_cast<const DF_SavePlayerInfo*>(
               &_DF_SavePlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    228;

  void Swap(DF_SavePlayerInfo* other);

  // implements Message ----------------------------------------------

  inline DF_SavePlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DF_SavePlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DF_SavePlayerInfo& from);
  void MergeFrom(const DF_SavePlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DF_SavePlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DF_SavePlayerInfo_MsgID MsgID;
  static const MsgID ID =
    DF_SavePlayerInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DF_SavePlayerInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DF_SavePlayerInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DF_SavePlayerInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DF_SavePlayerInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DF_SavePlayerInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DF_SavePlayerInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DF_SavePlayerInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .PlayerInfoInMemery info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::PlayerInfoInMemery& info() const;
  ::PlayerInfoInMemery* mutable_info();
  ::PlayerInfoInMemery* release_info();
  void set_allocated_info(::PlayerInfoInMemery* info);

  // @@protoc_insertion_point(class_scope:DF_SavePlayerInfo)
 private:
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::PlayerInfoInMemery* info_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DF_GetPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DF_GetPlayerInfo) */ {
 public:
  DF_GetPlayerInfo();
  virtual ~DF_GetPlayerInfo();

  DF_GetPlayerInfo(const DF_GetPlayerInfo& from);

  inline DF_GetPlayerInfo& operator=(const DF_GetPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DF_GetPlayerInfo& default_instance();

  static inline const DF_GetPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const DF_GetPlayerInfo*>(
               &_DF_GetPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    229;

  void Swap(DF_GetPlayerInfo* other);

  // implements Message ----------------------------------------------

  inline DF_GetPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DF_GetPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DF_GetPlayerInfo& from);
  void MergeFrom(const DF_GetPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DF_GetPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DF_GetPlayerInfo_MsgID MsgID;
  static const MsgID ID =
    DF_GetPlayerInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return DF_GetPlayerInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    DF_GetPlayerInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    DF_GetPlayerInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    DF_GetPlayerInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return DF_GetPlayerInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return DF_GetPlayerInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return DF_GetPlayerInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 gameid = 4;
  bool has_gameid() const;
  void clear_gameid();
  static const int kGameidFieldNumber = 4;
  ::google::protobuf::int32 gameid() const;
  void set_gameid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DF_GetPlayerInfo)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_account();
  void clear_has_account();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_gameid();
  void clear_has_gameid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 gameid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FD_GetPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FD_GetPlayerInfo) */ {
 public:
  FD_GetPlayerInfo();
  virtual ~FD_GetPlayerInfo();

  FD_GetPlayerInfo(const FD_GetPlayerInfo& from);

  inline FD_GetPlayerInfo& operator=(const FD_GetPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FD_GetPlayerInfo& default_instance();

  static inline const FD_GetPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const FD_GetPlayerInfo*>(
               &_FD_GetPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    230;

  void Swap(FD_GetPlayerInfo* other);

  // implements Message ----------------------------------------------

  inline FD_GetPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FD_GetPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FD_GetPlayerInfo& from);
  void MergeFrom(const FD_GetPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FD_GetPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FD_GetPlayerInfo_MsgID MsgID;
  static const MsgID ID =
    FD_GetPlayerInfo_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return FD_GetPlayerInfo_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    FD_GetPlayerInfo_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    FD_GetPlayerInfo_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    FD_GetPlayerInfo_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return FD_GetPlayerInfo_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return FD_GetPlayerInfo_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return FD_GetPlayerInfo_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional .PlayerInfoInMemery info = 5;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 5;
  const ::PlayerInfoInMemery& info() const;
  ::PlayerInfoInMemery* mutable_info();
  ::PlayerInfoInMemery* release_info();
  void set_allocated_info(::PlayerInfoInMemery* info);

  // optional int32 guid = 1;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::int32 guid() const;
  void set_guid(::google::protobuf::int32 value);

  // optional int32 gameid = 4;
  bool has_gameid() const;
  void clear_gameid();
  static const int kGameidFieldNumber = 4;
  ::google::protobuf::int32 gameid() const;
  void set_gameid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FD_GetPlayerInfo)
 private:
  void set_has_guid();
  void clear_has_guid();
  void set_has_account();
  void clear_has_account();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_gameid();
  void clear_has_gameid();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::PlayerInfoInMemery* info_;
  ::google::protobuf::int32 guid_;
  ::google::protobuf::int32 gameid_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WF_SavePlayersInfoToMySQL : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WF_SavePlayersInfoToMySQL) */ {
 public:
  WF_SavePlayersInfoToMySQL();
  virtual ~WF_SavePlayersInfoToMySQL();

  WF_SavePlayersInfoToMySQL(const WF_SavePlayersInfoToMySQL& from);

  inline WF_SavePlayersInfoToMySQL& operator=(const WF_SavePlayersInfoToMySQL& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WF_SavePlayersInfoToMySQL& default_instance();

  static inline const WF_SavePlayersInfoToMySQL* internal_default_instance() {
    return reinterpret_cast<const WF_SavePlayersInfoToMySQL*>(
               &_WF_SavePlayersInfoToMySQL_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    231;

  void Swap(WF_SavePlayersInfoToMySQL* other);

  // implements Message ----------------------------------------------

  inline WF_SavePlayersInfoToMySQL* New() const PROTOBUF_FINAL { return New(NULL); }

  WF_SavePlayersInfoToMySQL* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WF_SavePlayersInfoToMySQL& from);
  void MergeFrom(const WF_SavePlayersInfoToMySQL& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WF_SavePlayersInfoToMySQL* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WF_SavePlayersInfoToMySQL_MsgID MsgID;
  static const MsgID ID =
    WF_SavePlayersInfoToMySQL_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return WF_SavePlayersInfoToMySQL_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    WF_SavePlayersInfoToMySQL_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    WF_SavePlayersInfoToMySQL_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    WF_SavePlayersInfoToMySQL_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return WF_SavePlayersInfoToMySQL_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return WF_SavePlayersInfoToMySQL_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return WF_SavePlayersInfoToMySQL_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:WF_SavePlayersInfoToMySQL)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FW_SavePlayersInfoToMySQL : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FW_SavePlayersInfoToMySQL) */ {
 public:
  FW_SavePlayersInfoToMySQL();
  virtual ~FW_SavePlayersInfoToMySQL();

  FW_SavePlayersInfoToMySQL(const FW_SavePlayersInfoToMySQL& from);

  inline FW_SavePlayersInfoToMySQL& operator=(const FW_SavePlayersInfoToMySQL& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FW_SavePlayersInfoToMySQL& default_instance();

  static inline const FW_SavePlayersInfoToMySQL* internal_default_instance() {
    return reinterpret_cast<const FW_SavePlayersInfoToMySQL*>(
               &_FW_SavePlayersInfoToMySQL_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    232;

  void Swap(FW_SavePlayersInfoToMySQL* other);

  // implements Message ----------------------------------------------

  inline FW_SavePlayersInfoToMySQL* New() const PROTOBUF_FINAL { return New(NULL); }

  FW_SavePlayersInfoToMySQL* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FW_SavePlayersInfoToMySQL& from);
  void MergeFrom(const FW_SavePlayersInfoToMySQL& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FW_SavePlayersInfoToMySQL* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FW_SavePlayersInfoToMySQL_MsgID MsgID;
  static const MsgID ID =
    FW_SavePlayersInfoToMySQL_MsgID_ID;
  static inline bool MsgID_IsValid(int value) {
    return FW_SavePlayersInfoToMySQL_MsgID_IsValid(value);
  }
  static const MsgID MsgID_MIN =
    FW_SavePlayersInfoToMySQL_MsgID_MsgID_MIN;
  static const MsgID MsgID_MAX =
    FW_SavePlayersInfoToMySQL_MsgID_MsgID_MAX;
  static const int MsgID_ARRAYSIZE =
    FW_SavePlayersInfoToMySQL_MsgID_MsgID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgID_descriptor() {
    return FW_SavePlayersInfoToMySQL_MsgID_descriptor();
  }
  static inline const ::std::string& MsgID_Name(MsgID value) {
    return FW_SavePlayersInfoToMySQL_MsgID_Name(value);
  }
  static inline bool MsgID_Parse(const ::std::string& name,
      MsgID* value) {
    return FW_SavePlayersInfoToMySQL_MsgID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bool suc = 1;
  bool has_suc() const;
  void clear_suc();
  static const int kSucFieldNumber = 1;
  bool suc() const;
  void set_suc(bool value);

  // @@protoc_insertion_point(class_scope:FW_SavePlayersInfoToMySQL)
 private:
  void set_has_suc();
  void clear_has_suc();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool suc_;
  friend struct protobuf_server_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// S_Connect

// optional .ServerSessionFrom type = 1;
inline bool S_Connect::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S_Connect::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S_Connect::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S_Connect::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::ServerSessionFrom S_Connect::type() const {
  // @@protoc_insertion_point(field_get:S_Connect.type)
  return static_cast< ::ServerSessionFrom >(type_);
}
inline void S_Connect::set_type(::ServerSessionFrom value) {
  assert(::ServerSessionFrom_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:S_Connect.type)
}

// optional int32 server_id = 2;
inline bool S_Connect::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_Connect::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_Connect::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_Connect::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 S_Connect::server_id() const {
  // @@protoc_insertion_point(field_get:S_Connect.server_id)
  return server_id_;
}
inline void S_Connect::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:S_Connect.server_id)
}

// optional int32 first_game_type = 3;
inline bool S_Connect::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_Connect::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_Connect::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_Connect::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 S_Connect::first_game_type() const {
  // @@protoc_insertion_point(field_get:S_Connect.first_game_type)
  return first_game_type_;
}
inline void S_Connect::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:S_Connect.first_game_type)
}

// optional int32 second_game_type = 4;
inline bool S_Connect::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_Connect::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_Connect::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_Connect::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
inline ::google::protobuf::int32 S_Connect::second_game_type() const {
  // @@protoc_insertion_point(field_get:S_Connect.second_game_type)
  return second_game_type_;
}
inline void S_Connect::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:S_Connect.second_game_type)
}

// optional bool default_lobby = 5;
inline bool S_Connect::has_default_lobby() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S_Connect::set_has_default_lobby() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S_Connect::clear_has_default_lobby() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S_Connect::clear_default_lobby() {
  default_lobby_ = false;
  clear_has_default_lobby();
}
inline bool S_Connect::default_lobby() const {
  // @@protoc_insertion_point(field_get:S_Connect.default_lobby)
  return default_lobby_;
}
inline void S_Connect::set_default_lobby(bool value) {
  set_has_default_lobby();
  default_lobby_ = value;
  // @@protoc_insertion_point(field_set:S_Connect.default_lobby)
}

// optional int32 player_limit = 6;
inline bool S_Connect::has_player_limit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S_Connect::set_has_player_limit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S_Connect::clear_has_player_limit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S_Connect::clear_player_limit() {
  player_limit_ = 0;
  clear_has_player_limit();
}
inline ::google::protobuf::int32 S_Connect::player_limit() const {
  // @@protoc_insertion_point(field_get:S_Connect.player_limit)
  return player_limit_;
}
inline void S_Connect::set_player_limit(::google::protobuf::int32 value) {
  set_has_player_limit();
  player_limit_ = value;
  // @@protoc_insertion_point(field_set:S_Connect.player_limit)
}

// -------------------------------------------------------------------

// S_UpdateGamePlayerCount

// optional int32 cur_player_count = 1;
inline bool S_UpdateGamePlayerCount::has_cur_player_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_UpdateGamePlayerCount::set_has_cur_player_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_UpdateGamePlayerCount::clear_has_cur_player_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_UpdateGamePlayerCount::clear_cur_player_count() {
  cur_player_count_ = 0;
  clear_has_cur_player_count();
}
inline ::google::protobuf::int32 S_UpdateGamePlayerCount::cur_player_count() const {
  // @@protoc_insertion_point(field_get:S_UpdateGamePlayerCount.cur_player_count)
  return cur_player_count_;
}
inline void S_UpdateGamePlayerCount::set_cur_player_count(::google::protobuf::int32 value) {
  set_has_cur_player_count();
  cur_player_count_ = value;
  // @@protoc_insertion_point(field_set:S_UpdateGamePlayerCount.cur_player_count)
}

// optional int32 cur_android_count = 2;
inline bool S_UpdateGamePlayerCount::has_cur_android_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_UpdateGamePlayerCount::set_has_cur_android_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_UpdateGamePlayerCount::clear_has_cur_android_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_UpdateGamePlayerCount::clear_cur_android_count() {
  cur_android_count_ = 0;
  clear_has_cur_android_count();
}
inline ::google::protobuf::int32 S_UpdateGamePlayerCount::cur_android_count() const {
  // @@protoc_insertion_point(field_get:S_UpdateGamePlayerCount.cur_android_count)
  return cur_android_count_;
}
inline void S_UpdateGamePlayerCount::set_cur_android_count(::google::protobuf::int32 value) {
  set_has_cur_android_count();
  cur_android_count_ = value;
  // @@protoc_insertion_point(field_set:S_UpdateGamePlayerCount.cur_android_count)
}

// optional int32 cur_ios_count = 3;
inline bool S_UpdateGamePlayerCount::has_cur_ios_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_UpdateGamePlayerCount::set_has_cur_ios_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_UpdateGamePlayerCount::clear_has_cur_ios_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_UpdateGamePlayerCount::clear_cur_ios_count() {
  cur_ios_count_ = 0;
  clear_has_cur_ios_count();
}
inline ::google::protobuf::int32 S_UpdateGamePlayerCount::cur_ios_count() const {
  // @@protoc_insertion_point(field_get:S_UpdateGamePlayerCount.cur_ios_count)
  return cur_ios_count_;
}
inline void S_UpdateGamePlayerCount::set_cur_ios_count(::google::protobuf::int32 value) {
  set_has_cur_ios_count();
  cur_ios_count_ = value;
  // @@protoc_insertion_point(field_set:S_UpdateGamePlayerCount.cur_ios_count)
}

// -------------------------------------------------------------------

// S_ConnectDB

// -------------------------------------------------------------------

// S_RequestServerConfig

// optional .ServerSessionFrom type = 1;
inline bool S_RequestServerConfig::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_RequestServerConfig::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_RequestServerConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_RequestServerConfig::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::ServerSessionFrom S_RequestServerConfig::type() const {
  // @@protoc_insertion_point(field_get:S_RequestServerConfig.type)
  return static_cast< ::ServerSessionFrom >(type_);
}
inline void S_RequestServerConfig::set_type(::ServerSessionFrom value) {
  assert(::ServerSessionFrom_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:S_RequestServerConfig.type)
}

// optional int32 server_id = 2;
inline bool S_RequestServerConfig::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_RequestServerConfig::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_RequestServerConfig::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_RequestServerConfig::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 S_RequestServerConfig::server_id() const {
  // @@protoc_insertion_point(field_get:S_RequestServerConfig.server_id)
  return server_id_;
}
inline void S_RequestServerConfig::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:S_RequestServerConfig.server_id)
}

// -------------------------------------------------------------------

// S_ReplyServerConfig

// optional .ServerSessionFrom type = 1;
inline bool S_ReplyServerConfig::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S_ReplyServerConfig::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S_ReplyServerConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S_ReplyServerConfig::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::ServerSessionFrom S_ReplyServerConfig::type() const {
  // @@protoc_insertion_point(field_get:S_ReplyServerConfig.type)
  return static_cast< ::ServerSessionFrom >(type_);
}
inline void S_ReplyServerConfig::set_type(::ServerSessionFrom value) {
  assert(::ServerSessionFrom_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyServerConfig.type)
}

// optional int32 server_id = 2;
inline bool S_ReplyServerConfig::has_server_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S_ReplyServerConfig::set_has_server_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S_ReplyServerConfig::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S_ReplyServerConfig::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 S_ReplyServerConfig::server_id() const {
  // @@protoc_insertion_point(field_get:S_ReplyServerConfig.server_id)
  return server_id_;
}
inline void S_ReplyServerConfig::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyServerConfig.server_id)
}

// optional .DBServerConfig db_config = 3;
inline bool S_ReplyServerConfig::has_db_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_ReplyServerConfig::set_has_db_config() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_ReplyServerConfig::clear_has_db_config() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_ReplyServerConfig::clear_db_config() {
  if (db_config_ != NULL) db_config_->::DBServerConfig::Clear();
  clear_has_db_config();
}
inline const ::DBServerConfig& S_ReplyServerConfig::db_config() const {
  // @@protoc_insertion_point(field_get:S_ReplyServerConfig.db_config)
  return db_config_ != NULL ? *db_config_
                         : *::DBServerConfig::internal_default_instance();
}
inline ::DBServerConfig* S_ReplyServerConfig::mutable_db_config() {
  set_has_db_config();
  if (db_config_ == NULL) {
    db_config_ = new ::DBServerConfig;
  }
  // @@protoc_insertion_point(field_mutable:S_ReplyServerConfig.db_config)
  return db_config_;
}
inline ::DBServerConfig* S_ReplyServerConfig::release_db_config() {
  // @@protoc_insertion_point(field_release:S_ReplyServerConfig.db_config)
  clear_has_db_config();
  ::DBServerConfig* temp = db_config_;
  db_config_ = NULL;
  return temp;
}
inline void S_ReplyServerConfig::set_allocated_db_config(::DBServerConfig* db_config) {
  delete db_config_;
  db_config_ = db_config;
  if (db_config) {
    set_has_db_config();
  } else {
    clear_has_db_config();
  }
  // @@protoc_insertion_point(field_set_allocated:S_ReplyServerConfig.db_config)
}

// optional .LoginServerConfigInfo login_config = 4;
inline bool S_ReplyServerConfig::has_login_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_ReplyServerConfig::set_has_login_config() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_ReplyServerConfig::clear_has_login_config() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_ReplyServerConfig::clear_login_config() {
  if (login_config_ != NULL) login_config_->::LoginServerConfigInfo::Clear();
  clear_has_login_config();
}
inline const ::LoginServerConfigInfo& S_ReplyServerConfig::login_config() const {
  // @@protoc_insertion_point(field_get:S_ReplyServerConfig.login_config)
  return login_config_ != NULL ? *login_config_
                         : *::LoginServerConfigInfo::internal_default_instance();
}
inline ::LoginServerConfigInfo* S_ReplyServerConfig::mutable_login_config() {
  set_has_login_config();
  if (login_config_ == NULL) {
    login_config_ = new ::LoginServerConfigInfo;
  }
  // @@protoc_insertion_point(field_mutable:S_ReplyServerConfig.login_config)
  return login_config_;
}
inline ::LoginServerConfigInfo* S_ReplyServerConfig::release_login_config() {
  // @@protoc_insertion_point(field_release:S_ReplyServerConfig.login_config)
  clear_has_login_config();
  ::LoginServerConfigInfo* temp = login_config_;
  login_config_ = NULL;
  return temp;
}
inline void S_ReplyServerConfig::set_allocated_login_config(::LoginServerConfigInfo* login_config) {
  delete login_config_;
  login_config_ = login_config;
  if (login_config) {
    set_has_login_config();
  } else {
    clear_has_login_config();
  }
  // @@protoc_insertion_point(field_set_allocated:S_ReplyServerConfig.login_config)
}

// optional .GameServerConfigInfo game_config = 5;
inline bool S_ReplyServerConfig::has_game_config() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_ReplyServerConfig::set_has_game_config() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_ReplyServerConfig::clear_has_game_config() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_ReplyServerConfig::clear_game_config() {
  if (game_config_ != NULL) game_config_->::GameServerConfigInfo::Clear();
  clear_has_game_config();
}
inline const ::GameServerConfigInfo& S_ReplyServerConfig::game_config() const {
  // @@protoc_insertion_point(field_get:S_ReplyServerConfig.game_config)
  return game_config_ != NULL ? *game_config_
                         : *::GameServerConfigInfo::internal_default_instance();
}
inline ::GameServerConfigInfo* S_ReplyServerConfig::mutable_game_config() {
  set_has_game_config();
  if (game_config_ == NULL) {
    game_config_ = new ::GameServerConfigInfo;
  }
  // @@protoc_insertion_point(field_mutable:S_ReplyServerConfig.game_config)
  return game_config_;
}
inline ::GameServerConfigInfo* S_ReplyServerConfig::release_game_config() {
  // @@protoc_insertion_point(field_release:S_ReplyServerConfig.game_config)
  clear_has_game_config();
  ::GameServerConfigInfo* temp = game_config_;
  game_config_ = NULL;
  return temp;
}
inline void S_ReplyServerConfig::set_allocated_game_config(::GameServerConfigInfo* game_config) {
  delete game_config_;
  game_config_ = game_config;
  if (game_config) {
    set_has_game_config();
  } else {
    clear_has_game_config();
  }
  // @@protoc_insertion_point(field_set_allocated:S_ReplyServerConfig.game_config)
}

// optional .GateServerConfigInfo gate_config = 6;
inline bool S_ReplyServerConfig::has_gate_config() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S_ReplyServerConfig::set_has_gate_config() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S_ReplyServerConfig::clear_has_gate_config() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S_ReplyServerConfig::clear_gate_config() {
  if (gate_config_ != NULL) gate_config_->::GateServerConfigInfo::Clear();
  clear_has_gate_config();
}
inline const ::GateServerConfigInfo& S_ReplyServerConfig::gate_config() const {
  // @@protoc_insertion_point(field_get:S_ReplyServerConfig.gate_config)
  return gate_config_ != NULL ? *gate_config_
                         : *::GateServerConfigInfo::internal_default_instance();
}
inline ::GateServerConfigInfo* S_ReplyServerConfig::mutable_gate_config() {
  set_has_gate_config();
  if (gate_config_ == NULL) {
    gate_config_ = new ::GateServerConfigInfo;
  }
  // @@protoc_insertion_point(field_mutable:S_ReplyServerConfig.gate_config)
  return gate_config_;
}
inline ::GateServerConfigInfo* S_ReplyServerConfig::release_gate_config() {
  // @@protoc_insertion_point(field_release:S_ReplyServerConfig.gate_config)
  clear_has_gate_config();
  ::GateServerConfigInfo* temp = gate_config_;
  gate_config_ = NULL;
  return temp;
}
inline void S_ReplyServerConfig::set_allocated_gate_config(::GateServerConfigInfo* gate_config) {
  delete gate_config_;
  gate_config_ = gate_config;
  if (gate_config) {
    set_has_gate_config();
  } else {
    clear_has_gate_config();
  }
  // @@protoc_insertion_point(field_set_allocated:S_ReplyServerConfig.gate_config)
}

// repeated .GameClientRoomListCfg client_room_cfg = 7;
inline int S_ReplyServerConfig::client_room_cfg_size() const {
  return client_room_cfg_.size();
}
inline void S_ReplyServerConfig::clear_client_room_cfg() {
  client_room_cfg_.Clear();
}
inline const ::GameClientRoomListCfg& S_ReplyServerConfig::client_room_cfg(int index) const {
  // @@protoc_insertion_point(field_get:S_ReplyServerConfig.client_room_cfg)
  return client_room_cfg_.Get(index);
}
inline ::GameClientRoomListCfg* S_ReplyServerConfig::mutable_client_room_cfg(int index) {
  // @@protoc_insertion_point(field_mutable:S_ReplyServerConfig.client_room_cfg)
  return client_room_cfg_.Mutable(index);
}
inline ::GameClientRoomListCfg* S_ReplyServerConfig::add_client_room_cfg() {
  // @@protoc_insertion_point(field_add:S_ReplyServerConfig.client_room_cfg)
  return client_room_cfg_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg >*
S_ReplyServerConfig::mutable_client_room_cfg() {
  // @@protoc_insertion_point(field_mutable_list:S_ReplyServerConfig.client_room_cfg)
  return &client_room_cfg_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg >&
S_ReplyServerConfig::client_room_cfg() const {
  // @@protoc_insertion_point(field_list:S_ReplyServerConfig.client_room_cfg)
  return client_room_cfg_;
}

// -------------------------------------------------------------------

// S_NotifyGameServerStart

// optional int32 game_id = 1;
inline bool S_NotifyGameServerStart::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_NotifyGameServerStart::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_NotifyGameServerStart::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_NotifyGameServerStart::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 S_NotifyGameServerStart::game_id() const {
  // @@protoc_insertion_point(field_get:S_NotifyGameServerStart.game_id)
  return game_id_;
}
inline void S_NotifyGameServerStart::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:S_NotifyGameServerStart.game_id)
}

// -------------------------------------------------------------------

// S_RequestUpdateGameServerConfig

// optional int32 game_id = 1;
inline bool S_RequestUpdateGameServerConfig::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_RequestUpdateGameServerConfig::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_RequestUpdateGameServerConfig::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_RequestUpdateGameServerConfig::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 S_RequestUpdateGameServerConfig::game_id() const {
  // @@protoc_insertion_point(field_get:S_RequestUpdateGameServerConfig.game_id)
  return game_id_;
}
inline void S_RequestUpdateGameServerConfig::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:S_RequestUpdateGameServerConfig.game_id)
}

// -------------------------------------------------------------------

// S_ReplyUpdateGameServerConfig

// optional int32 server_id = 1;
inline bool S_ReplyUpdateGameServerConfig::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_ReplyUpdateGameServerConfig::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_ReplyUpdateGameServerConfig::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_ReplyUpdateGameServerConfig::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 S_ReplyUpdateGameServerConfig::server_id() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateGameServerConfig.server_id)
  return server_id_;
}
inline void S_ReplyUpdateGameServerConfig::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyUpdateGameServerConfig.server_id)
}

// optional int32 game_id = 2;
inline bool S_ReplyUpdateGameServerConfig::has_game_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_ReplyUpdateGameServerConfig::set_has_game_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_ReplyUpdateGameServerConfig::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_ReplyUpdateGameServerConfig::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 S_ReplyUpdateGameServerConfig::game_id() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateGameServerConfig.game_id)
  return game_id_;
}
inline void S_ReplyUpdateGameServerConfig::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyUpdateGameServerConfig.game_id)
}

// optional string ip = 3;
inline bool S_ReplyUpdateGameServerConfig::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_ReplyUpdateGameServerConfig::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_ReplyUpdateGameServerConfig::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_ReplyUpdateGameServerConfig::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& S_ReplyUpdateGameServerConfig::ip() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateGameServerConfig.ip)
  return ip_.GetNoArena();
}
inline void S_ReplyUpdateGameServerConfig::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:S_ReplyUpdateGameServerConfig.ip)
}
#if LANG_CXX11
inline void S_ReplyUpdateGameServerConfig::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:S_ReplyUpdateGameServerConfig.ip)
}
#endif
inline void S_ReplyUpdateGameServerConfig::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:S_ReplyUpdateGameServerConfig.ip)
}
inline void S_ReplyUpdateGameServerConfig::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:S_ReplyUpdateGameServerConfig.ip)
}
inline ::std::string* S_ReplyUpdateGameServerConfig::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:S_ReplyUpdateGameServerConfig.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S_ReplyUpdateGameServerConfig::release_ip() {
  // @@protoc_insertion_point(field_release:S_ReplyUpdateGameServerConfig.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S_ReplyUpdateGameServerConfig::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:S_ReplyUpdateGameServerConfig.ip)
}

// optional int32 port = 4;
inline bool S_ReplyUpdateGameServerConfig::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S_ReplyUpdateGameServerConfig::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S_ReplyUpdateGameServerConfig::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S_ReplyUpdateGameServerConfig::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 S_ReplyUpdateGameServerConfig::port() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateGameServerConfig.port)
  return port_;
}
inline void S_ReplyUpdateGameServerConfig::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyUpdateGameServerConfig.port)
}

// repeated .GameClientRoomListCfg client_room_cfg = 5;
inline int S_ReplyUpdateGameServerConfig::client_room_cfg_size() const {
  return client_room_cfg_.size();
}
inline void S_ReplyUpdateGameServerConfig::clear_client_room_cfg() {
  client_room_cfg_.Clear();
}
inline const ::GameClientRoomListCfg& S_ReplyUpdateGameServerConfig::client_room_cfg(int index) const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateGameServerConfig.client_room_cfg)
  return client_room_cfg_.Get(index);
}
inline ::GameClientRoomListCfg* S_ReplyUpdateGameServerConfig::mutable_client_room_cfg(int index) {
  // @@protoc_insertion_point(field_mutable:S_ReplyUpdateGameServerConfig.client_room_cfg)
  return client_room_cfg_.Mutable(index);
}
inline ::GameClientRoomListCfg* S_ReplyUpdateGameServerConfig::add_client_room_cfg() {
  // @@protoc_insertion_point(field_add:S_ReplyUpdateGameServerConfig.client_room_cfg)
  return client_room_cfg_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg >*
S_ReplyUpdateGameServerConfig::mutable_client_room_cfg() {
  // @@protoc_insertion_point(field_mutable_list:S_ReplyUpdateGameServerConfig.client_room_cfg)
  return &client_room_cfg_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GameClientRoomListCfg >&
S_ReplyUpdateGameServerConfig::client_room_cfg() const {
  // @@protoc_insertion_point(field_list:S_ReplyUpdateGameServerConfig.client_room_cfg)
  return client_room_cfg_;
}

// -------------------------------------------------------------------

// S_NotifyLoginServerStart

// optional int32 login_id = 1;
inline bool S_NotifyLoginServerStart::has_login_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_NotifyLoginServerStart::set_has_login_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_NotifyLoginServerStart::clear_has_login_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_NotifyLoginServerStart::clear_login_id() {
  login_id_ = 0;
  clear_has_login_id();
}
inline ::google::protobuf::int32 S_NotifyLoginServerStart::login_id() const {
  // @@protoc_insertion_point(field_get:S_NotifyLoginServerStart.login_id)
  return login_id_;
}
inline void S_NotifyLoginServerStart::set_login_id(::google::protobuf::int32 value) {
  set_has_login_id();
  login_id_ = value;
  // @@protoc_insertion_point(field_set:S_NotifyLoginServerStart.login_id)
}

// -------------------------------------------------------------------

// S_RequestUpdateLoginServerConfigByGate

// optional int32 login_id = 1;
inline bool S_RequestUpdateLoginServerConfigByGate::has_login_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_RequestUpdateLoginServerConfigByGate::set_has_login_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_RequestUpdateLoginServerConfigByGate::clear_has_login_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_RequestUpdateLoginServerConfigByGate::clear_login_id() {
  login_id_ = 0;
  clear_has_login_id();
}
inline ::google::protobuf::int32 S_RequestUpdateLoginServerConfigByGate::login_id() const {
  // @@protoc_insertion_point(field_get:S_RequestUpdateLoginServerConfigByGate.login_id)
  return login_id_;
}
inline void S_RequestUpdateLoginServerConfigByGate::set_login_id(::google::protobuf::int32 value) {
  set_has_login_id();
  login_id_ = value;
  // @@protoc_insertion_point(field_set:S_RequestUpdateLoginServerConfigByGate.login_id)
}

// -------------------------------------------------------------------

// S_ReplyUpdateLoginServerConfigByGate

// optional int32 server_id = 1;
inline bool S_ReplyUpdateLoginServerConfigByGate::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_ReplyUpdateLoginServerConfigByGate::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_ReplyUpdateLoginServerConfigByGate::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_ReplyUpdateLoginServerConfigByGate::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 S_ReplyUpdateLoginServerConfigByGate::server_id() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateLoginServerConfigByGate.server_id)
  return server_id_;
}
inline void S_ReplyUpdateLoginServerConfigByGate::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyUpdateLoginServerConfigByGate.server_id)
}

// optional int32 login_id = 2;
inline bool S_ReplyUpdateLoginServerConfigByGate::has_login_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_ReplyUpdateLoginServerConfigByGate::set_has_login_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_ReplyUpdateLoginServerConfigByGate::clear_has_login_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_ReplyUpdateLoginServerConfigByGate::clear_login_id() {
  login_id_ = 0;
  clear_has_login_id();
}
inline ::google::protobuf::int32 S_ReplyUpdateLoginServerConfigByGate::login_id() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateLoginServerConfigByGate.login_id)
  return login_id_;
}
inline void S_ReplyUpdateLoginServerConfigByGate::set_login_id(::google::protobuf::int32 value) {
  set_has_login_id();
  login_id_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyUpdateLoginServerConfigByGate.login_id)
}

// optional string ip = 3;
inline bool S_ReplyUpdateLoginServerConfigByGate::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_ReplyUpdateLoginServerConfigByGate::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_ReplyUpdateLoginServerConfigByGate::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_ReplyUpdateLoginServerConfigByGate::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& S_ReplyUpdateLoginServerConfigByGate::ip() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateLoginServerConfigByGate.ip)
  return ip_.GetNoArena();
}
inline void S_ReplyUpdateLoginServerConfigByGate::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:S_ReplyUpdateLoginServerConfigByGate.ip)
}
#if LANG_CXX11
inline void S_ReplyUpdateLoginServerConfigByGate::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:S_ReplyUpdateLoginServerConfigByGate.ip)
}
#endif
inline void S_ReplyUpdateLoginServerConfigByGate::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:S_ReplyUpdateLoginServerConfigByGate.ip)
}
inline void S_ReplyUpdateLoginServerConfigByGate::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:S_ReplyUpdateLoginServerConfigByGate.ip)
}
inline ::std::string* S_ReplyUpdateLoginServerConfigByGate::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:S_ReplyUpdateLoginServerConfigByGate.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S_ReplyUpdateLoginServerConfigByGate::release_ip() {
  // @@protoc_insertion_point(field_release:S_ReplyUpdateLoginServerConfigByGate.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S_ReplyUpdateLoginServerConfigByGate::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:S_ReplyUpdateLoginServerConfigByGate.ip)
}

// optional int32 port = 4;
inline bool S_ReplyUpdateLoginServerConfigByGate::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S_ReplyUpdateLoginServerConfigByGate::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S_ReplyUpdateLoginServerConfigByGate::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S_ReplyUpdateLoginServerConfigByGate::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 S_ReplyUpdateLoginServerConfigByGate::port() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateLoginServerConfigByGate.port)
  return port_;
}
inline void S_ReplyUpdateLoginServerConfigByGate::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyUpdateLoginServerConfigByGate.port)
}

// -------------------------------------------------------------------

// S_RequestUpdateLoginServerConfigByGame

// optional int32 login_id = 1;
inline bool S_RequestUpdateLoginServerConfigByGame::has_login_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_RequestUpdateLoginServerConfigByGame::set_has_login_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_RequestUpdateLoginServerConfigByGame::clear_has_login_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_RequestUpdateLoginServerConfigByGame::clear_login_id() {
  login_id_ = 0;
  clear_has_login_id();
}
inline ::google::protobuf::int32 S_RequestUpdateLoginServerConfigByGame::login_id() const {
  // @@protoc_insertion_point(field_get:S_RequestUpdateLoginServerConfigByGame.login_id)
  return login_id_;
}
inline void S_RequestUpdateLoginServerConfigByGame::set_login_id(::google::protobuf::int32 value) {
  set_has_login_id();
  login_id_ = value;
  // @@protoc_insertion_point(field_set:S_RequestUpdateLoginServerConfigByGame.login_id)
}

// -------------------------------------------------------------------

// S_ReplyUpdateLoginServerConfigByGame

// optional int32 server_id = 1;
inline bool S_ReplyUpdateLoginServerConfigByGame::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_ReplyUpdateLoginServerConfigByGame::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_ReplyUpdateLoginServerConfigByGame::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_ReplyUpdateLoginServerConfigByGame::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 S_ReplyUpdateLoginServerConfigByGame::server_id() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateLoginServerConfigByGame.server_id)
  return server_id_;
}
inline void S_ReplyUpdateLoginServerConfigByGame::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyUpdateLoginServerConfigByGame.server_id)
}

// optional int32 login_id = 2;
inline bool S_ReplyUpdateLoginServerConfigByGame::has_login_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_ReplyUpdateLoginServerConfigByGame::set_has_login_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_ReplyUpdateLoginServerConfigByGame::clear_has_login_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_ReplyUpdateLoginServerConfigByGame::clear_login_id() {
  login_id_ = 0;
  clear_has_login_id();
}
inline ::google::protobuf::int32 S_ReplyUpdateLoginServerConfigByGame::login_id() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateLoginServerConfigByGame.login_id)
  return login_id_;
}
inline void S_ReplyUpdateLoginServerConfigByGame::set_login_id(::google::protobuf::int32 value) {
  set_has_login_id();
  login_id_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyUpdateLoginServerConfigByGame.login_id)
}

// optional string ip = 3;
inline bool S_ReplyUpdateLoginServerConfigByGame::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_ReplyUpdateLoginServerConfigByGame::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_ReplyUpdateLoginServerConfigByGame::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_ReplyUpdateLoginServerConfigByGame::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& S_ReplyUpdateLoginServerConfigByGame::ip() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateLoginServerConfigByGame.ip)
  return ip_.GetNoArena();
}
inline void S_ReplyUpdateLoginServerConfigByGame::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:S_ReplyUpdateLoginServerConfigByGame.ip)
}
#if LANG_CXX11
inline void S_ReplyUpdateLoginServerConfigByGame::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:S_ReplyUpdateLoginServerConfigByGame.ip)
}
#endif
inline void S_ReplyUpdateLoginServerConfigByGame::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:S_ReplyUpdateLoginServerConfigByGame.ip)
}
inline void S_ReplyUpdateLoginServerConfigByGame::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:S_ReplyUpdateLoginServerConfigByGame.ip)
}
inline ::std::string* S_ReplyUpdateLoginServerConfigByGame::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:S_ReplyUpdateLoginServerConfigByGame.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S_ReplyUpdateLoginServerConfigByGame::release_ip() {
  // @@protoc_insertion_point(field_release:S_ReplyUpdateLoginServerConfigByGame.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S_ReplyUpdateLoginServerConfigByGame::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:S_ReplyUpdateLoginServerConfigByGame.ip)
}

// optional int32 port = 4;
inline bool S_ReplyUpdateLoginServerConfigByGame::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S_ReplyUpdateLoginServerConfigByGame::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S_ReplyUpdateLoginServerConfigByGame::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S_ReplyUpdateLoginServerConfigByGame::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 S_ReplyUpdateLoginServerConfigByGame::port() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateLoginServerConfigByGame.port)
  return port_;
}
inline void S_ReplyUpdateLoginServerConfigByGame::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyUpdateLoginServerConfigByGame.port)
}

// -------------------------------------------------------------------

// S_NotifyDBServerStart

// optional int32 db_id = 1;
inline bool S_NotifyDBServerStart::has_db_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_NotifyDBServerStart::set_has_db_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_NotifyDBServerStart::clear_has_db_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_NotifyDBServerStart::clear_db_id() {
  db_id_ = 0;
  clear_has_db_id();
}
inline ::google::protobuf::int32 S_NotifyDBServerStart::db_id() const {
  // @@protoc_insertion_point(field_get:S_NotifyDBServerStart.db_id)
  return db_id_;
}
inline void S_NotifyDBServerStart::set_db_id(::google::protobuf::int32 value) {
  set_has_db_id();
  db_id_ = value;
  // @@protoc_insertion_point(field_set:S_NotifyDBServerStart.db_id)
}

// -------------------------------------------------------------------

// S_RequestUpdateDBServerConfigByGame

// optional int32 db_id = 1;
inline bool S_RequestUpdateDBServerConfigByGame::has_db_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_RequestUpdateDBServerConfigByGame::set_has_db_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_RequestUpdateDBServerConfigByGame::clear_has_db_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_RequestUpdateDBServerConfigByGame::clear_db_id() {
  db_id_ = 0;
  clear_has_db_id();
}
inline ::google::protobuf::int32 S_RequestUpdateDBServerConfigByGame::db_id() const {
  // @@protoc_insertion_point(field_get:S_RequestUpdateDBServerConfigByGame.db_id)
  return db_id_;
}
inline void S_RequestUpdateDBServerConfigByGame::set_db_id(::google::protobuf::int32 value) {
  set_has_db_id();
  db_id_ = value;
  // @@protoc_insertion_point(field_set:S_RequestUpdateDBServerConfigByGame.db_id)
}

// -------------------------------------------------------------------

// S_ReplyUpdateDBServerConfigByGame

// optional int32 server_id = 1;
inline bool S_ReplyUpdateDBServerConfigByGame::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_ReplyUpdateDBServerConfigByGame::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_ReplyUpdateDBServerConfigByGame::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_ReplyUpdateDBServerConfigByGame::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 S_ReplyUpdateDBServerConfigByGame::server_id() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateDBServerConfigByGame.server_id)
  return server_id_;
}
inline void S_ReplyUpdateDBServerConfigByGame::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyUpdateDBServerConfigByGame.server_id)
}

// optional int32 db_id = 2;
inline bool S_ReplyUpdateDBServerConfigByGame::has_db_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_ReplyUpdateDBServerConfigByGame::set_has_db_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_ReplyUpdateDBServerConfigByGame::clear_has_db_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_ReplyUpdateDBServerConfigByGame::clear_db_id() {
  db_id_ = 0;
  clear_has_db_id();
}
inline ::google::protobuf::int32 S_ReplyUpdateDBServerConfigByGame::db_id() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateDBServerConfigByGame.db_id)
  return db_id_;
}
inline void S_ReplyUpdateDBServerConfigByGame::set_db_id(::google::protobuf::int32 value) {
  set_has_db_id();
  db_id_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyUpdateDBServerConfigByGame.db_id)
}

// optional string ip = 3;
inline bool S_ReplyUpdateDBServerConfigByGame::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_ReplyUpdateDBServerConfigByGame::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_ReplyUpdateDBServerConfigByGame::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_ReplyUpdateDBServerConfigByGame::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& S_ReplyUpdateDBServerConfigByGame::ip() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateDBServerConfigByGame.ip)
  return ip_.GetNoArena();
}
inline void S_ReplyUpdateDBServerConfigByGame::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:S_ReplyUpdateDBServerConfigByGame.ip)
}
#if LANG_CXX11
inline void S_ReplyUpdateDBServerConfigByGame::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:S_ReplyUpdateDBServerConfigByGame.ip)
}
#endif
inline void S_ReplyUpdateDBServerConfigByGame::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:S_ReplyUpdateDBServerConfigByGame.ip)
}
inline void S_ReplyUpdateDBServerConfigByGame::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:S_ReplyUpdateDBServerConfigByGame.ip)
}
inline ::std::string* S_ReplyUpdateDBServerConfigByGame::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:S_ReplyUpdateDBServerConfigByGame.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S_ReplyUpdateDBServerConfigByGame::release_ip() {
  // @@protoc_insertion_point(field_release:S_ReplyUpdateDBServerConfigByGame.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S_ReplyUpdateDBServerConfigByGame::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:S_ReplyUpdateDBServerConfigByGame.ip)
}

// optional int32 port = 4;
inline bool S_ReplyUpdateDBServerConfigByGame::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S_ReplyUpdateDBServerConfigByGame::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S_ReplyUpdateDBServerConfigByGame::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S_ReplyUpdateDBServerConfigByGame::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 S_ReplyUpdateDBServerConfigByGame::port() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateDBServerConfigByGame.port)
  return port_;
}
inline void S_ReplyUpdateDBServerConfigByGame::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyUpdateDBServerConfigByGame.port)
}

// -------------------------------------------------------------------

// S_RequestUpdateDBServerConfigByLogin

// optional int32 db_id = 1;
inline bool S_RequestUpdateDBServerConfigByLogin::has_db_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_RequestUpdateDBServerConfigByLogin::set_has_db_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_RequestUpdateDBServerConfigByLogin::clear_has_db_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_RequestUpdateDBServerConfigByLogin::clear_db_id() {
  db_id_ = 0;
  clear_has_db_id();
}
inline ::google::protobuf::int32 S_RequestUpdateDBServerConfigByLogin::db_id() const {
  // @@protoc_insertion_point(field_get:S_RequestUpdateDBServerConfigByLogin.db_id)
  return db_id_;
}
inline void S_RequestUpdateDBServerConfigByLogin::set_db_id(::google::protobuf::int32 value) {
  set_has_db_id();
  db_id_ = value;
  // @@protoc_insertion_point(field_set:S_RequestUpdateDBServerConfigByLogin.db_id)
}

// -------------------------------------------------------------------

// S_ReplyUpdateDBServerConfigByLogin

// optional int32 server_id = 1;
inline bool S_ReplyUpdateDBServerConfigByLogin::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_ReplyUpdateDBServerConfigByLogin::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_ReplyUpdateDBServerConfigByLogin::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_ReplyUpdateDBServerConfigByLogin::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 S_ReplyUpdateDBServerConfigByLogin::server_id() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateDBServerConfigByLogin.server_id)
  return server_id_;
}
inline void S_ReplyUpdateDBServerConfigByLogin::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyUpdateDBServerConfigByLogin.server_id)
}

// optional int32 db_id = 2;
inline bool S_ReplyUpdateDBServerConfigByLogin::has_db_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_ReplyUpdateDBServerConfigByLogin::set_has_db_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_ReplyUpdateDBServerConfigByLogin::clear_has_db_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_ReplyUpdateDBServerConfigByLogin::clear_db_id() {
  db_id_ = 0;
  clear_has_db_id();
}
inline ::google::protobuf::int32 S_ReplyUpdateDBServerConfigByLogin::db_id() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateDBServerConfigByLogin.db_id)
  return db_id_;
}
inline void S_ReplyUpdateDBServerConfigByLogin::set_db_id(::google::protobuf::int32 value) {
  set_has_db_id();
  db_id_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyUpdateDBServerConfigByLogin.db_id)
}

// optional string ip = 3;
inline bool S_ReplyUpdateDBServerConfigByLogin::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_ReplyUpdateDBServerConfigByLogin::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_ReplyUpdateDBServerConfigByLogin::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_ReplyUpdateDBServerConfigByLogin::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& S_ReplyUpdateDBServerConfigByLogin::ip() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateDBServerConfigByLogin.ip)
  return ip_.GetNoArena();
}
inline void S_ReplyUpdateDBServerConfigByLogin::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:S_ReplyUpdateDBServerConfigByLogin.ip)
}
#if LANG_CXX11
inline void S_ReplyUpdateDBServerConfigByLogin::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:S_ReplyUpdateDBServerConfigByLogin.ip)
}
#endif
inline void S_ReplyUpdateDBServerConfigByLogin::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:S_ReplyUpdateDBServerConfigByLogin.ip)
}
inline void S_ReplyUpdateDBServerConfigByLogin::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:S_ReplyUpdateDBServerConfigByLogin.ip)
}
inline ::std::string* S_ReplyUpdateDBServerConfigByLogin::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:S_ReplyUpdateDBServerConfigByLogin.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S_ReplyUpdateDBServerConfigByLogin::release_ip() {
  // @@protoc_insertion_point(field_release:S_ReplyUpdateDBServerConfigByLogin.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S_ReplyUpdateDBServerConfigByLogin::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:S_ReplyUpdateDBServerConfigByLogin.ip)
}

// optional int32 port = 4;
inline bool S_ReplyUpdateDBServerConfigByLogin::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S_ReplyUpdateDBServerConfigByLogin::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S_ReplyUpdateDBServerConfigByLogin::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S_ReplyUpdateDBServerConfigByLogin::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 S_ReplyUpdateDBServerConfigByLogin::port() const {
  // @@protoc_insertion_point(field_get:S_ReplyUpdateDBServerConfigByLogin.port)
  return port_;
}
inline void S_ReplyUpdateDBServerConfigByLogin::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:S_ReplyUpdateDBServerConfigByLogin.port)
}

// -------------------------------------------------------------------

// S_ReplyPrivateRoomConfig

// optional .PrivateRoomListConfig info_list = 1;
inline bool S_ReplyPrivateRoomConfig::has_info_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_ReplyPrivateRoomConfig::set_has_info_list() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_ReplyPrivateRoomConfig::clear_has_info_list() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_ReplyPrivateRoomConfig::clear_info_list() {
  if (info_list_ != NULL) info_list_->::PrivateRoomListConfig::Clear();
  clear_has_info_list();
}
inline const ::PrivateRoomListConfig& S_ReplyPrivateRoomConfig::info_list() const {
  // @@protoc_insertion_point(field_get:S_ReplyPrivateRoomConfig.info_list)
  return info_list_ != NULL ? *info_list_
                         : *::PrivateRoomListConfig::internal_default_instance();
}
inline ::PrivateRoomListConfig* S_ReplyPrivateRoomConfig::mutable_info_list() {
  set_has_info_list();
  if (info_list_ == NULL) {
    info_list_ = new ::PrivateRoomListConfig;
  }
  // @@protoc_insertion_point(field_mutable:S_ReplyPrivateRoomConfig.info_list)
  return info_list_;
}
inline ::PrivateRoomListConfig* S_ReplyPrivateRoomConfig::release_info_list() {
  // @@protoc_insertion_point(field_release:S_ReplyPrivateRoomConfig.info_list)
  clear_has_info_list();
  ::PrivateRoomListConfig* temp = info_list_;
  info_list_ = NULL;
  return temp;
}
inline void S_ReplyPrivateRoomConfig::set_allocated_info_list(::PrivateRoomListConfig* info_list) {
  delete info_list_;
  info_list_ = info_list;
  if (info_list) {
    set_has_info_list();
  } else {
    clear_has_info_list();
  }
  // @@protoc_insertion_point(field_set_allocated:S_ReplyPrivateRoomConfig.info_list)
}

// -------------------------------------------------------------------

// LD_RegAccount

// optional string account = 1;
inline bool LD_RegAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_RegAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_RegAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_RegAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& LD_RegAccount::account() const {
  // @@protoc_insertion_point(field_get:LD_RegAccount.account)
  return account_.GetNoArena();
}
inline void LD_RegAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_RegAccount.account)
}
#if LANG_CXX11
inline void LD_RegAccount::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_RegAccount.account)
}
#endif
inline void LD_RegAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_RegAccount.account)
}
inline void LD_RegAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_RegAccount.account)
}
inline ::std::string* LD_RegAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:LD_RegAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_RegAccount::release_account() {
  // @@protoc_insertion_point(field_release:LD_RegAccount.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_RegAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:LD_RegAccount.account)
}

// optional string password = 2;
inline bool LD_RegAccount::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_RegAccount::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_RegAccount::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_RegAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& LD_RegAccount::password() const {
  // @@protoc_insertion_point(field_get:LD_RegAccount.password)
  return password_.GetNoArena();
}
inline void LD_RegAccount::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_RegAccount.password)
}
#if LANG_CXX11
inline void LD_RegAccount::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_RegAccount.password)
}
#endif
inline void LD_RegAccount::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_RegAccount.password)
}
inline void LD_RegAccount::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_RegAccount.password)
}
inline ::std::string* LD_RegAccount::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:LD_RegAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_RegAccount::release_password() {
  // @@protoc_insertion_point(field_release:LD_RegAccount.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_RegAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:LD_RegAccount.password)
}

// optional string phone = 3;
inline bool LD_RegAccount::has_phone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LD_RegAccount::set_has_phone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LD_RegAccount::clear_has_phone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LD_RegAccount::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& LD_RegAccount::phone() const {
  // @@protoc_insertion_point(field_get:LD_RegAccount.phone)
  return phone_.GetNoArena();
}
inline void LD_RegAccount::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_RegAccount.phone)
}
#if LANG_CXX11
inline void LD_RegAccount::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_RegAccount.phone)
}
#endif
inline void LD_RegAccount::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_RegAccount.phone)
}
inline void LD_RegAccount::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_RegAccount.phone)
}
inline ::std::string* LD_RegAccount::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:LD_RegAccount.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_RegAccount::release_phone() {
  // @@protoc_insertion_point(field_release:LD_RegAccount.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_RegAccount::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:LD_RegAccount.phone)
}

// optional string phone_type = 4;
inline bool LD_RegAccount::has_phone_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LD_RegAccount::set_has_phone_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LD_RegAccount::clear_has_phone_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LD_RegAccount::clear_phone_type() {
  phone_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_type();
}
inline const ::std::string& LD_RegAccount::phone_type() const {
  // @@protoc_insertion_point(field_get:LD_RegAccount.phone_type)
  return phone_type_.GetNoArena();
}
inline void LD_RegAccount::set_phone_type(const ::std::string& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_RegAccount.phone_type)
}
#if LANG_CXX11
inline void LD_RegAccount::set_phone_type(::std::string&& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_RegAccount.phone_type)
}
#endif
inline void LD_RegAccount::set_phone_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_RegAccount.phone_type)
}
inline void LD_RegAccount::set_phone_type(const char* value, size_t size) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_RegAccount.phone_type)
}
inline ::std::string* LD_RegAccount::mutable_phone_type() {
  set_has_phone_type();
  // @@protoc_insertion_point(field_mutable:LD_RegAccount.phone_type)
  return phone_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_RegAccount::release_phone_type() {
  // @@protoc_insertion_point(field_release:LD_RegAccount.phone_type)
  clear_has_phone_type();
  return phone_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_RegAccount::set_allocated_phone_type(::std::string* phone_type) {
  if (phone_type != NULL) {
    set_has_phone_type();
  } else {
    clear_has_phone_type();
  }
  phone_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_type);
  // @@protoc_insertion_point(field_set_allocated:LD_RegAccount.phone_type)
}

// optional string version = 5;
inline bool LD_RegAccount::has_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LD_RegAccount::set_has_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LD_RegAccount::clear_has_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LD_RegAccount::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& LD_RegAccount::version() const {
  // @@protoc_insertion_point(field_get:LD_RegAccount.version)
  return version_.GetNoArena();
}
inline void LD_RegAccount::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_RegAccount.version)
}
#if LANG_CXX11
inline void LD_RegAccount::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_RegAccount.version)
}
#endif
inline void LD_RegAccount::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_RegAccount.version)
}
inline void LD_RegAccount::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_RegAccount.version)
}
inline ::std::string* LD_RegAccount::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:LD_RegAccount.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_RegAccount::release_version() {
  // @@protoc_insertion_point(field_release:LD_RegAccount.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_RegAccount::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:LD_RegAccount.version)
}

// optional string channel_id = 6;
inline bool LD_RegAccount::has_channel_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LD_RegAccount::set_has_channel_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LD_RegAccount::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LD_RegAccount::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& LD_RegAccount::channel_id() const {
  // @@protoc_insertion_point(field_get:LD_RegAccount.channel_id)
  return channel_id_.GetNoArena();
}
inline void LD_RegAccount::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_RegAccount.channel_id)
}
#if LANG_CXX11
inline void LD_RegAccount::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_RegAccount.channel_id)
}
#endif
inline void LD_RegAccount::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_RegAccount.channel_id)
}
inline void LD_RegAccount::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_RegAccount.channel_id)
}
inline ::std::string* LD_RegAccount::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:LD_RegAccount.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_RegAccount::release_channel_id() {
  // @@protoc_insertion_point(field_release:LD_RegAccount.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_RegAccount::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:LD_RegAccount.channel_id)
}

// optional string package_name = 7;
inline bool LD_RegAccount::has_package_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LD_RegAccount::set_has_package_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LD_RegAccount::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LD_RegAccount::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& LD_RegAccount::package_name() const {
  // @@protoc_insertion_point(field_get:LD_RegAccount.package_name)
  return package_name_.GetNoArena();
}
inline void LD_RegAccount::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_RegAccount.package_name)
}
#if LANG_CXX11
inline void LD_RegAccount::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_RegAccount.package_name)
}
#endif
inline void LD_RegAccount::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_RegAccount.package_name)
}
inline void LD_RegAccount::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_RegAccount.package_name)
}
inline ::std::string* LD_RegAccount::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:LD_RegAccount.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_RegAccount::release_package_name() {
  // @@protoc_insertion_point(field_release:LD_RegAccount.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_RegAccount::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:LD_RegAccount.package_name)
}

// optional string imei = 8;
inline bool LD_RegAccount::has_imei() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LD_RegAccount::set_has_imei() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LD_RegAccount::clear_has_imei() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LD_RegAccount::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
inline const ::std::string& LD_RegAccount::imei() const {
  // @@protoc_insertion_point(field_get:LD_RegAccount.imei)
  return imei_.GetNoArena();
}
inline void LD_RegAccount::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_RegAccount.imei)
}
#if LANG_CXX11
inline void LD_RegAccount::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_RegAccount.imei)
}
#endif
inline void LD_RegAccount::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_RegAccount.imei)
}
inline void LD_RegAccount::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_RegAccount.imei)
}
inline ::std::string* LD_RegAccount::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:LD_RegAccount.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_RegAccount::release_imei() {
  // @@protoc_insertion_point(field_release:LD_RegAccount.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_RegAccount::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:LD_RegAccount.imei)
}

// optional string ip = 9;
inline bool LD_RegAccount::has_ip() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LD_RegAccount::set_has_ip() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LD_RegAccount::clear_has_ip() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LD_RegAccount::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& LD_RegAccount::ip() const {
  // @@protoc_insertion_point(field_get:LD_RegAccount.ip)
  return ip_.GetNoArena();
}
inline void LD_RegAccount::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_RegAccount.ip)
}
#if LANG_CXX11
inline void LD_RegAccount::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_RegAccount.ip)
}
#endif
inline void LD_RegAccount::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_RegAccount.ip)
}
inline void LD_RegAccount::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_RegAccount.ip)
}
inline ::std::string* LD_RegAccount::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:LD_RegAccount.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_RegAccount::release_ip() {
  // @@protoc_insertion_point(field_release:LD_RegAccount.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_RegAccount::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:LD_RegAccount.ip)
}

// optional string ip_area = 10;
inline bool LD_RegAccount::has_ip_area() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LD_RegAccount::set_has_ip_area() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LD_RegAccount::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LD_RegAccount::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
inline const ::std::string& LD_RegAccount::ip_area() const {
  // @@protoc_insertion_point(field_get:LD_RegAccount.ip_area)
  return ip_area_.GetNoArena();
}
inline void LD_RegAccount::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_RegAccount.ip_area)
}
#if LANG_CXX11
inline void LD_RegAccount::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_RegAccount.ip_area)
}
#endif
inline void LD_RegAccount::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_RegAccount.ip_area)
}
inline void LD_RegAccount::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_RegAccount.ip_area)
}
inline ::std::string* LD_RegAccount::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:LD_RegAccount.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_RegAccount::release_ip_area() {
  // @@protoc_insertion_point(field_release:LD_RegAccount.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_RegAccount::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:LD_RegAccount.ip_area)
}

// optional int32 session_id = 11;
inline bool LD_RegAccount::has_session_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LD_RegAccount::set_has_session_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LD_RegAccount::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LD_RegAccount::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 LD_RegAccount::session_id() const {
  // @@protoc_insertion_point(field_get:LD_RegAccount.session_id)
  return session_id_;
}
inline void LD_RegAccount::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:LD_RegAccount.session_id)
}

// optional int32 gate_id = 12;
inline bool LD_RegAccount::has_gate_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LD_RegAccount::set_has_gate_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LD_RegAccount::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LD_RegAccount::clear_gate_id() {
  gate_id_ = 0;
  clear_has_gate_id();
}
inline ::google::protobuf::int32 LD_RegAccount::gate_id() const {
  // @@protoc_insertion_point(field_get:LD_RegAccount.gate_id)
  return gate_id_;
}
inline void LD_RegAccount::set_gate_id(::google::protobuf::int32 value) {
  set_has_gate_id();
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:LD_RegAccount.gate_id)
}

// optional int32 android_uid = 13;
inline bool LD_RegAccount::has_android_uid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LD_RegAccount::set_has_android_uid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LD_RegAccount::clear_has_android_uid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LD_RegAccount::clear_android_uid() {
  android_uid_ = 0;
  clear_has_android_uid();
}
inline ::google::protobuf::int32 LD_RegAccount::android_uid() const {
  // @@protoc_insertion_point(field_get:LD_RegAccount.android_uid)
  return android_uid_;
}
inline void LD_RegAccount::set_android_uid(::google::protobuf::int32 value) {
  set_has_android_uid();
  android_uid_ = value;
  // @@protoc_insertion_point(field_set:LD_RegAccount.android_uid)
}

// optional int32 android_pid = 14;
inline bool LD_RegAccount::has_android_pid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void LD_RegAccount::set_has_android_pid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void LD_RegAccount::clear_has_android_pid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void LD_RegAccount::clear_android_pid() {
  android_pid_ = 0;
  clear_has_android_pid();
}
inline ::google::protobuf::int32 LD_RegAccount::android_pid() const {
  // @@protoc_insertion_point(field_get:LD_RegAccount.android_pid)
  return android_pid_;
}
inline void LD_RegAccount::set_android_pid(::google::protobuf::int32 value) {
  set_has_android_pid();
  android_pid_ = value;
  // @@protoc_insertion_point(field_set:LD_RegAccount.android_pid)
}

// -------------------------------------------------------------------

// DL_RegAccount

// optional int32 ret = 1;
inline bool DL_RegAccount::has_ret() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DL_RegAccount::set_has_ret() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DL_RegAccount::clear_has_ret() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DL_RegAccount::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DL_RegAccount::ret() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.ret)
  return ret_;
}
inline void DL_RegAccount::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:DL_RegAccount.ret)
}

// optional string account = 2;
inline bool DL_RegAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DL_RegAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DL_RegAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DL_RegAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& DL_RegAccount::account() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.account)
  return account_.GetNoArena();
}
inline void DL_RegAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount.account)
}
#if LANG_CXX11
inline void DL_RegAccount::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount.account)
}
#endif
inline void DL_RegAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount.account)
}
inline void DL_RegAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount.account)
}
inline ::std::string* DL_RegAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount::release_account() {
  // @@protoc_insertion_point(field_release:DL_RegAccount.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount.account)
}

// optional bool is_guest = 3;
inline bool DL_RegAccount::has_is_guest() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DL_RegAccount::set_has_is_guest() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DL_RegAccount::clear_has_is_guest() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DL_RegAccount::clear_is_guest() {
  is_guest_ = false;
  clear_has_is_guest();
}
inline bool DL_RegAccount::is_guest() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.is_guest)
  return is_guest_;
}
inline void DL_RegAccount::set_is_guest(bool value) {
  set_has_is_guest();
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:DL_RegAccount.is_guest)
}

// optional int32 session_id = 4;
inline bool DL_RegAccount::has_session_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DL_RegAccount::set_has_session_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DL_RegAccount::clear_has_session_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DL_RegAccount::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 DL_RegAccount::session_id() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.session_id)
  return session_id_;
}
inline void DL_RegAccount::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:DL_RegAccount.session_id)
}

// optional int32 gate_id = 5;
inline bool DL_RegAccount::has_gate_id() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void DL_RegAccount::set_has_gate_id() {
  _has_bits_[0] |= 0x00004000u;
}
inline void DL_RegAccount::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void DL_RegAccount::clear_gate_id() {
  gate_id_ = 0;
  clear_has_gate_id();
}
inline ::google::protobuf::int32 DL_RegAccount::gate_id() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.gate_id)
  return gate_id_;
}
inline void DL_RegAccount::set_gate_id(::google::protobuf::int32 value) {
  set_has_gate_id();
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:DL_RegAccount.gate_id)
}

// optional int32 guid = 6;
inline bool DL_RegAccount::has_guid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void DL_RegAccount::set_has_guid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void DL_RegAccount::clear_has_guid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void DL_RegAccount::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DL_RegAccount::guid() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.guid)
  return guid_;
}
inline void DL_RegAccount::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DL_RegAccount.guid)
}

// optional string nickname = 7;
inline bool DL_RegAccount::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DL_RegAccount::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DL_RegAccount::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DL_RegAccount::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& DL_RegAccount::nickname() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.nickname)
  return nickname_.GetNoArena();
}
inline void DL_RegAccount::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount.nickname)
}
#if LANG_CXX11
inline void DL_RegAccount::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount.nickname)
}
#endif
inline void DL_RegAccount::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount.nickname)
}
inline void DL_RegAccount::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount.nickname)
}
inline ::std::string* DL_RegAccount::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount::release_nickname() {
  // @@protoc_insertion_point(field_release:DL_RegAccount.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount.nickname)
}

// optional string password = 8;
inline bool DL_RegAccount::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DL_RegAccount::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DL_RegAccount::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DL_RegAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& DL_RegAccount::password() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.password)
  return password_.GetNoArena();
}
inline void DL_RegAccount::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount.password)
}
#if LANG_CXX11
inline void DL_RegAccount::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount.password)
}
#endif
inline void DL_RegAccount::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount.password)
}
inline void DL_RegAccount::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount.password)
}
inline ::std::string* DL_RegAccount::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount::release_password() {
  // @@protoc_insertion_point(field_release:DL_RegAccount.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount.password)
}

// optional string phone = 9;
inline bool DL_RegAccount::has_phone() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DL_RegAccount::set_has_phone() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DL_RegAccount::clear_has_phone() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DL_RegAccount::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& DL_RegAccount::phone() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.phone)
  return phone_.GetNoArena();
}
inline void DL_RegAccount::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount.phone)
}
#if LANG_CXX11
inline void DL_RegAccount::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount.phone)
}
#endif
inline void DL_RegAccount::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount.phone)
}
inline void DL_RegAccount::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount.phone)
}
inline ::std::string* DL_RegAccount::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount::release_phone() {
  // @@protoc_insertion_point(field_release:DL_RegAccount.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount.phone)
}

// optional string phone_type = 10;
inline bool DL_RegAccount::has_phone_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DL_RegAccount::set_has_phone_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DL_RegAccount::clear_has_phone_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DL_RegAccount::clear_phone_type() {
  phone_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_type();
}
inline const ::std::string& DL_RegAccount::phone_type() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.phone_type)
  return phone_type_.GetNoArena();
}
inline void DL_RegAccount::set_phone_type(const ::std::string& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount.phone_type)
}
#if LANG_CXX11
inline void DL_RegAccount::set_phone_type(::std::string&& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount.phone_type)
}
#endif
inline void DL_RegAccount::set_phone_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount.phone_type)
}
inline void DL_RegAccount::set_phone_type(const char* value, size_t size) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount.phone_type)
}
inline ::std::string* DL_RegAccount::mutable_phone_type() {
  set_has_phone_type();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount.phone_type)
  return phone_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount::release_phone_type() {
  // @@protoc_insertion_point(field_release:DL_RegAccount.phone_type)
  clear_has_phone_type();
  return phone_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount::set_allocated_phone_type(::std::string* phone_type) {
  if (phone_type != NULL) {
    set_has_phone_type();
  } else {
    clear_has_phone_type();
  }
  phone_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_type);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount.phone_type)
}

// optional string version = 11;
inline bool DL_RegAccount::has_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DL_RegAccount::set_has_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DL_RegAccount::clear_has_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DL_RegAccount::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& DL_RegAccount::version() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.version)
  return version_.GetNoArena();
}
inline void DL_RegAccount::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount.version)
}
#if LANG_CXX11
inline void DL_RegAccount::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount.version)
}
#endif
inline void DL_RegAccount::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount.version)
}
inline void DL_RegAccount::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount.version)
}
inline ::std::string* DL_RegAccount::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount::release_version() {
  // @@protoc_insertion_point(field_release:DL_RegAccount.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount.version)
}

// optional string channel_id = 12;
inline bool DL_RegAccount::has_channel_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DL_RegAccount::set_has_channel_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DL_RegAccount::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DL_RegAccount::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& DL_RegAccount::channel_id() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.channel_id)
  return channel_id_.GetNoArena();
}
inline void DL_RegAccount::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount.channel_id)
}
#if LANG_CXX11
inline void DL_RegAccount::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount.channel_id)
}
#endif
inline void DL_RegAccount::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount.channel_id)
}
inline void DL_RegAccount::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount.channel_id)
}
inline ::std::string* DL_RegAccount::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount::release_channel_id() {
  // @@protoc_insertion_point(field_release:DL_RegAccount.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount.channel_id)
}

// optional string package_name = 13;
inline bool DL_RegAccount::has_package_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DL_RegAccount::set_has_package_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DL_RegAccount::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DL_RegAccount::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& DL_RegAccount::package_name() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.package_name)
  return package_name_.GetNoArena();
}
inline void DL_RegAccount::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount.package_name)
}
#if LANG_CXX11
inline void DL_RegAccount::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount.package_name)
}
#endif
inline void DL_RegAccount::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount.package_name)
}
inline void DL_RegAccount::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount.package_name)
}
inline ::std::string* DL_RegAccount::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount::release_package_name() {
  // @@protoc_insertion_point(field_release:DL_RegAccount.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount.package_name)
}

// optional string imei = 14;
inline bool DL_RegAccount::has_imei() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DL_RegAccount::set_has_imei() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DL_RegAccount::clear_has_imei() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DL_RegAccount::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
inline const ::std::string& DL_RegAccount::imei() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.imei)
  return imei_.GetNoArena();
}
inline void DL_RegAccount::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount.imei)
}
#if LANG_CXX11
inline void DL_RegAccount::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount.imei)
}
#endif
inline void DL_RegAccount::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount.imei)
}
inline void DL_RegAccount::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount.imei)
}
inline ::std::string* DL_RegAccount::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount::release_imei() {
  // @@protoc_insertion_point(field_release:DL_RegAccount.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount.imei)
}

// optional string ip = 15;
inline bool DL_RegAccount::has_ip() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DL_RegAccount::set_has_ip() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DL_RegAccount::clear_has_ip() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DL_RegAccount::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& DL_RegAccount::ip() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.ip)
  return ip_.GetNoArena();
}
inline void DL_RegAccount::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount.ip)
}
#if LANG_CXX11
inline void DL_RegAccount::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount.ip)
}
#endif
inline void DL_RegAccount::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount.ip)
}
inline void DL_RegAccount::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount.ip)
}
inline ::std::string* DL_RegAccount::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount::release_ip() {
  // @@protoc_insertion_point(field_release:DL_RegAccount.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount.ip)
}

// optional string ip_area = 16;
inline bool DL_RegAccount::has_ip_area() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DL_RegAccount::set_has_ip_area() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DL_RegAccount::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DL_RegAccount::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
inline const ::std::string& DL_RegAccount::ip_area() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount.ip_area)
  return ip_area_.GetNoArena();
}
inline void DL_RegAccount::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount.ip_area)
}
#if LANG_CXX11
inline void DL_RegAccount::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount.ip_area)
}
#endif
inline void DL_RegAccount::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount.ip_area)
}
inline void DL_RegAccount::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount.ip_area)
}
inline ::std::string* DL_RegAccount::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount::release_ip_area() {
  // @@protoc_insertion_point(field_release:DL_RegAccount.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount.ip_area)
}

// -------------------------------------------------------------------

// DL_RegAccount2

// optional .GuestAccount guest_account_result = 1;
inline bool DL_RegAccount2::has_guest_account_result() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DL_RegAccount2::set_has_guest_account_result() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DL_RegAccount2::clear_has_guest_account_result() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DL_RegAccount2::clear_guest_account_result() {
  if (guest_account_result_ != NULL) guest_account_result_->::GuestAccount::Clear();
  clear_has_guest_account_result();
}
inline const ::GuestAccount& DL_RegAccount2::guest_account_result() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount2.guest_account_result)
  return guest_account_result_ != NULL ? *guest_account_result_
                         : *::GuestAccount::internal_default_instance();
}
inline ::GuestAccount* DL_RegAccount2::mutable_guest_account_result() {
  set_has_guest_account_result();
  if (guest_account_result_ == NULL) {
    guest_account_result_ = new ::GuestAccount;
  }
  // @@protoc_insertion_point(field_mutable:DL_RegAccount2.guest_account_result)
  return guest_account_result_;
}
inline ::GuestAccount* DL_RegAccount2::release_guest_account_result() {
  // @@protoc_insertion_point(field_release:DL_RegAccount2.guest_account_result)
  clear_has_guest_account_result();
  ::GuestAccount* temp = guest_account_result_;
  guest_account_result_ = NULL;
  return temp;
}
inline void DL_RegAccount2::set_allocated_guest_account_result(::GuestAccount* guest_account_result) {
  delete guest_account_result_;
  guest_account_result_ = guest_account_result;
  if (guest_account_result) {
    set_has_guest_account_result();
  } else {
    clear_has_guest_account_result();
  }
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount2.guest_account_result)
}

// optional int32 session_id = 2;
inline bool DL_RegAccount2::has_session_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DL_RegAccount2::set_has_session_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DL_RegAccount2::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DL_RegAccount2::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 DL_RegAccount2::session_id() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount2.session_id)
  return session_id_;
}
inline void DL_RegAccount2::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:DL_RegAccount2.session_id)
}

// optional int32 gate_id = 3;
inline bool DL_RegAccount2::has_gate_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DL_RegAccount2::set_has_gate_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DL_RegAccount2::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DL_RegAccount2::clear_gate_id() {
  gate_id_ = 0;
  clear_has_gate_id();
}
inline ::google::protobuf::int32 DL_RegAccount2::gate_id() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount2.gate_id)
  return gate_id_;
}
inline void DL_RegAccount2::set_gate_id(::google::protobuf::int32 value) {
  set_has_gate_id();
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:DL_RegAccount2.gate_id)
}

// optional string phone = 9;
inline bool DL_RegAccount2::has_phone() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DL_RegAccount2::set_has_phone() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DL_RegAccount2::clear_has_phone() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DL_RegAccount2::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& DL_RegAccount2::phone() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount2.phone)
  return phone_.GetNoArena();
}
inline void DL_RegAccount2::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount2.phone)
}
#if LANG_CXX11
inline void DL_RegAccount2::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount2.phone)
}
#endif
inline void DL_RegAccount2::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount2.phone)
}
inline void DL_RegAccount2::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount2.phone)
}
inline ::std::string* DL_RegAccount2::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount2.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount2::release_phone() {
  // @@protoc_insertion_point(field_release:DL_RegAccount2.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount2::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount2.phone)
}

// optional string phone_type = 10;
inline bool DL_RegAccount2::has_phone_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DL_RegAccount2::set_has_phone_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DL_RegAccount2::clear_has_phone_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DL_RegAccount2::clear_phone_type() {
  phone_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_type();
}
inline const ::std::string& DL_RegAccount2::phone_type() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount2.phone_type)
  return phone_type_.GetNoArena();
}
inline void DL_RegAccount2::set_phone_type(const ::std::string& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount2.phone_type)
}
#if LANG_CXX11
inline void DL_RegAccount2::set_phone_type(::std::string&& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount2.phone_type)
}
#endif
inline void DL_RegAccount2::set_phone_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount2.phone_type)
}
inline void DL_RegAccount2::set_phone_type(const char* value, size_t size) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount2.phone_type)
}
inline ::std::string* DL_RegAccount2::mutable_phone_type() {
  set_has_phone_type();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount2.phone_type)
  return phone_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount2::release_phone_type() {
  // @@protoc_insertion_point(field_release:DL_RegAccount2.phone_type)
  clear_has_phone_type();
  return phone_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount2::set_allocated_phone_type(::std::string* phone_type) {
  if (phone_type != NULL) {
    set_has_phone_type();
  } else {
    clear_has_phone_type();
  }
  phone_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_type);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount2.phone_type)
}

// optional string version = 11;
inline bool DL_RegAccount2::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DL_RegAccount2::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DL_RegAccount2::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DL_RegAccount2::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& DL_RegAccount2::version() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount2.version)
  return version_.GetNoArena();
}
inline void DL_RegAccount2::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount2.version)
}
#if LANG_CXX11
inline void DL_RegAccount2::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount2.version)
}
#endif
inline void DL_RegAccount2::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount2.version)
}
inline void DL_RegAccount2::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount2.version)
}
inline ::std::string* DL_RegAccount2::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount2.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount2::release_version() {
  // @@protoc_insertion_point(field_release:DL_RegAccount2.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount2::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount2.version)
}

// optional string channel_id = 12;
inline bool DL_RegAccount2::has_channel_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DL_RegAccount2::set_has_channel_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DL_RegAccount2::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DL_RegAccount2::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& DL_RegAccount2::channel_id() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount2.channel_id)
  return channel_id_.GetNoArena();
}
inline void DL_RegAccount2::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount2.channel_id)
}
#if LANG_CXX11
inline void DL_RegAccount2::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount2.channel_id)
}
#endif
inline void DL_RegAccount2::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount2.channel_id)
}
inline void DL_RegAccount2::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount2.channel_id)
}
inline ::std::string* DL_RegAccount2::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount2.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount2::release_channel_id() {
  // @@protoc_insertion_point(field_release:DL_RegAccount2.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount2::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount2.channel_id)
}

// optional string package_name = 13;
inline bool DL_RegAccount2::has_package_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DL_RegAccount2::set_has_package_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DL_RegAccount2::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DL_RegAccount2::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& DL_RegAccount2::package_name() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount2.package_name)
  return package_name_.GetNoArena();
}
inline void DL_RegAccount2::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount2.package_name)
}
#if LANG_CXX11
inline void DL_RegAccount2::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount2.package_name)
}
#endif
inline void DL_RegAccount2::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount2.package_name)
}
inline void DL_RegAccount2::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount2.package_name)
}
inline ::std::string* DL_RegAccount2::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount2.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount2::release_package_name() {
  // @@protoc_insertion_point(field_release:DL_RegAccount2.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount2::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount2.package_name)
}

// optional string imei = 14;
inline bool DL_RegAccount2::has_imei() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DL_RegAccount2::set_has_imei() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DL_RegAccount2::clear_has_imei() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DL_RegAccount2::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
inline const ::std::string& DL_RegAccount2::imei() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount2.imei)
  return imei_.GetNoArena();
}
inline void DL_RegAccount2::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount2.imei)
}
#if LANG_CXX11
inline void DL_RegAccount2::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount2.imei)
}
#endif
inline void DL_RegAccount2::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount2.imei)
}
inline void DL_RegAccount2::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount2.imei)
}
inline ::std::string* DL_RegAccount2::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount2.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount2::release_imei() {
  // @@protoc_insertion_point(field_release:DL_RegAccount2.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount2::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount2.imei)
}

// optional string ip = 15;
inline bool DL_RegAccount2::has_ip() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DL_RegAccount2::set_has_ip() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DL_RegAccount2::clear_has_ip() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DL_RegAccount2::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& DL_RegAccount2::ip() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount2.ip)
  return ip_.GetNoArena();
}
inline void DL_RegAccount2::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount2.ip)
}
#if LANG_CXX11
inline void DL_RegAccount2::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount2.ip)
}
#endif
inline void DL_RegAccount2::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount2.ip)
}
inline void DL_RegAccount2::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount2.ip)
}
inline ::std::string* DL_RegAccount2::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount2.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount2::release_ip() {
  // @@protoc_insertion_point(field_release:DL_RegAccount2.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount2::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount2.ip)
}

// optional string ip_area = 16;
inline bool DL_RegAccount2::has_ip_area() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DL_RegAccount2::set_has_ip_area() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DL_RegAccount2::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DL_RegAccount2::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
inline const ::std::string& DL_RegAccount2::ip_area() const {
  // @@protoc_insertion_point(field_get:DL_RegAccount2.ip_area)
  return ip_area_.GetNoArena();
}
inline void DL_RegAccount2::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_RegAccount2.ip_area)
}
#if LANG_CXX11
inline void DL_RegAccount2::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_RegAccount2.ip_area)
}
#endif
inline void DL_RegAccount2::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_RegAccount2.ip_area)
}
inline void DL_RegAccount2::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_RegAccount2.ip_area)
}
inline ::std::string* DL_RegAccount2::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:DL_RegAccount2.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_RegAccount2::release_ip_area() {
  // @@protoc_insertion_point(field_release:DL_RegAccount2.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_RegAccount2::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:DL_RegAccount2.ip_area)
}

// -------------------------------------------------------------------

// SD_OnlineAccount

// optional int32 guid = 1;
inline bool SD_OnlineAccount::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_OnlineAccount::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_OnlineAccount::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_OnlineAccount::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_OnlineAccount::guid() const {
  // @@protoc_insertion_point(field_get:SD_OnlineAccount.guid)
  return guid_;
}
inline void SD_OnlineAccount::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_OnlineAccount.guid)
}

// optional int32 first_game_type = 2;
inline bool SD_OnlineAccount::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_OnlineAccount::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_OnlineAccount::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_OnlineAccount::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 SD_OnlineAccount::first_game_type() const {
  // @@protoc_insertion_point(field_get:SD_OnlineAccount.first_game_type)
  return first_game_type_;
}
inline void SD_OnlineAccount::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:SD_OnlineAccount.first_game_type)
}

// optional int32 second_game_type = 3;
inline bool SD_OnlineAccount::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_OnlineAccount::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_OnlineAccount::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_OnlineAccount::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
inline ::google::protobuf::int32 SD_OnlineAccount::second_game_type() const {
  // @@protoc_insertion_point(field_get:SD_OnlineAccount.second_game_type)
  return second_game_type_;
}
inline void SD_OnlineAccount::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:SD_OnlineAccount.second_game_type)
}

// optional int32 gamer_id = 4;
inline bool SD_OnlineAccount::has_gamer_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SD_OnlineAccount::set_has_gamer_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SD_OnlineAccount::clear_has_gamer_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SD_OnlineAccount::clear_gamer_id() {
  gamer_id_ = 0;
  clear_has_gamer_id();
}
inline ::google::protobuf::int32 SD_OnlineAccount::gamer_id() const {
  // @@protoc_insertion_point(field_get:SD_OnlineAccount.gamer_id)
  return gamer_id_;
}
inline void SD_OnlineAccount::set_gamer_id(::google::protobuf::int32 value) {
  set_has_gamer_id();
  gamer_id_ = value;
  // @@protoc_insertion_point(field_set:SD_OnlineAccount.gamer_id)
}

// optional int32 in_game = 5;
inline bool SD_OnlineAccount::has_in_game() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SD_OnlineAccount::set_has_in_game() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SD_OnlineAccount::clear_has_in_game() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SD_OnlineAccount::clear_in_game() {
  in_game_ = 0;
  clear_has_in_game();
}
inline ::google::protobuf::int32 SD_OnlineAccount::in_game() const {
  // @@protoc_insertion_point(field_get:SD_OnlineAccount.in_game)
  return in_game_;
}
inline void SD_OnlineAccount::set_in_game(::google::protobuf::int32 value) {
  set_has_in_game();
  in_game_ = value;
  // @@protoc_insertion_point(field_set:SD_OnlineAccount.in_game)
}

// -------------------------------------------------------------------

// LD_PhoneQuery

// optional string phone = 1;
inline bool LD_PhoneQuery::has_phone() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_PhoneQuery::set_has_phone() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_PhoneQuery::clear_has_phone() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_PhoneQuery::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& LD_PhoneQuery::phone() const {
  // @@protoc_insertion_point(field_get:LD_PhoneQuery.phone)
  return phone_.GetNoArena();
}
inline void LD_PhoneQuery::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_PhoneQuery.phone)
}
#if LANG_CXX11
inline void LD_PhoneQuery::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_PhoneQuery.phone)
}
#endif
inline void LD_PhoneQuery::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_PhoneQuery.phone)
}
inline void LD_PhoneQuery::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_PhoneQuery.phone)
}
inline ::std::string* LD_PhoneQuery::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:LD_PhoneQuery.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_PhoneQuery::release_phone() {
  // @@protoc_insertion_point(field_release:LD_PhoneQuery.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_PhoneQuery::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:LD_PhoneQuery.phone)
}

// optional int32 gate_session_id = 2;
inline bool LD_PhoneQuery::has_gate_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_PhoneQuery::set_has_gate_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_PhoneQuery::clear_has_gate_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_PhoneQuery::clear_gate_session_id() {
  gate_session_id_ = 0;
  clear_has_gate_session_id();
}
inline ::google::protobuf::int32 LD_PhoneQuery::gate_session_id() const {
  // @@protoc_insertion_point(field_get:LD_PhoneQuery.gate_session_id)
  return gate_session_id_;
}
inline void LD_PhoneQuery::set_gate_session_id(::google::protobuf::int32 value) {
  set_has_gate_session_id();
  gate_session_id_ = value;
  // @@protoc_insertion_point(field_set:LD_PhoneQuery.gate_session_id)
}

// -------------------------------------------------------------------

// DL_PhoneQuery

// optional int32 ret = 1;
inline bool DL_PhoneQuery::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DL_PhoneQuery::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DL_PhoneQuery::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DL_PhoneQuery::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DL_PhoneQuery::ret() const {
  // @@protoc_insertion_point(field_get:DL_PhoneQuery.ret)
  return ret_;
}
inline void DL_PhoneQuery::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:DL_PhoneQuery.ret)
}

// optional string phone = 2;
inline bool DL_PhoneQuery::has_phone() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DL_PhoneQuery::set_has_phone() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DL_PhoneQuery::clear_has_phone() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DL_PhoneQuery::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& DL_PhoneQuery::phone() const {
  // @@protoc_insertion_point(field_get:DL_PhoneQuery.phone)
  return phone_.GetNoArena();
}
inline void DL_PhoneQuery::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_PhoneQuery.phone)
}
#if LANG_CXX11
inline void DL_PhoneQuery::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_PhoneQuery.phone)
}
#endif
inline void DL_PhoneQuery::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_PhoneQuery.phone)
}
inline void DL_PhoneQuery::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_PhoneQuery.phone)
}
inline ::std::string* DL_PhoneQuery::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:DL_PhoneQuery.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_PhoneQuery::release_phone() {
  // @@protoc_insertion_point(field_release:DL_PhoneQuery.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_PhoneQuery::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:DL_PhoneQuery.phone)
}

// optional int32 gate_session_id = 3;
inline bool DL_PhoneQuery::has_gate_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DL_PhoneQuery::set_has_gate_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DL_PhoneQuery::clear_has_gate_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DL_PhoneQuery::clear_gate_session_id() {
  gate_session_id_ = 0;
  clear_has_gate_session_id();
}
inline ::google::protobuf::int32 DL_PhoneQuery::gate_session_id() const {
  // @@protoc_insertion_point(field_get:DL_PhoneQuery.gate_session_id)
  return gate_session_id_;
}
inline void DL_PhoneQuery::set_gate_session_id(::google::protobuf::int32 value) {
  set_has_gate_session_id();
  gate_session_id_ = value;
  // @@protoc_insertion_point(field_set:DL_PhoneQuery.gate_session_id)
}

// -------------------------------------------------------------------

// S_Heartbeat

// -------------------------------------------------------------------

// S_Logout

// optional string account = 1;
inline bool S_Logout::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_Logout::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_Logout::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_Logout::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& S_Logout::account() const {
  // @@protoc_insertion_point(field_get:S_Logout.account)
  return account_.GetNoArena();
}
inline void S_Logout::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:S_Logout.account)
}
#if LANG_CXX11
inline void S_Logout::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:S_Logout.account)
}
#endif
inline void S_Logout::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:S_Logout.account)
}
inline void S_Logout::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:S_Logout.account)
}
inline ::std::string* S_Logout::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:S_Logout.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S_Logout::release_account() {
  // @@protoc_insertion_point(field_release:S_Logout.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S_Logout::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:S_Logout.account)
}

// optional int32 guid = 2;
inline bool S_Logout::has_guid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void S_Logout::set_has_guid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void S_Logout::clear_has_guid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void S_Logout::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 S_Logout::guid() const {
  // @@protoc_insertion_point(field_get:S_Logout.guid)
  return guid_;
}
inline void S_Logout::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:S_Logout.guid)
}

// optional int32 session_id = 3;
inline bool S_Logout::has_session_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void S_Logout::set_has_session_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void S_Logout::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void S_Logout::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 S_Logout::session_id() const {
  // @@protoc_insertion_point(field_get:S_Logout.session_id)
  return session_id_;
}
inline void S_Logout::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:S_Logout.session_id)
}

// optional int32 gate_id = 4;
inline bool S_Logout::has_gate_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void S_Logout::set_has_gate_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void S_Logout::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void S_Logout::clear_gate_id() {
  gate_id_ = 0;
  clear_has_gate_id();
}
inline ::google::protobuf::int32 S_Logout::gate_id() const {
  // @@protoc_insertion_point(field_get:S_Logout.gate_id)
  return gate_id_;
}
inline void S_Logout::set_gate_id(::google::protobuf::int32 value) {
  set_has_gate_id();
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:S_Logout.gate_id)
}

// optional int32 login_time = 5;
inline bool S_Logout::has_login_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void S_Logout::set_has_login_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void S_Logout::clear_has_login_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void S_Logout::clear_login_time() {
  login_time_ = 0;
  clear_has_login_time();
}
inline ::google::protobuf::int32 S_Logout::login_time() const {
  // @@protoc_insertion_point(field_get:S_Logout.login_time)
  return login_time_;
}
inline void S_Logout::set_login_time(::google::protobuf::int32 value) {
  set_has_login_time();
  login_time_ = value;
  // @@protoc_insertion_point(field_set:S_Logout.login_time)
}

// optional int32 logout_time = 6;
inline bool S_Logout::has_logout_time() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void S_Logout::set_has_logout_time() {
  _has_bits_[0] |= 0x00001000u;
}
inline void S_Logout::clear_has_logout_time() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void S_Logout::clear_logout_time() {
  logout_time_ = 0;
  clear_has_logout_time();
}
inline ::google::protobuf::int32 S_Logout::logout_time() const {
  // @@protoc_insertion_point(field_get:S_Logout.logout_time)
  return logout_time_;
}
inline void S_Logout::set_logout_time(::google::protobuf::int32 value) {
  set_has_logout_time();
  logout_time_ = value;
  // @@protoc_insertion_point(field_set:S_Logout.logout_time)
}

// optional bool is_offline = 7;
inline bool S_Logout::has_is_offline() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void S_Logout::set_has_is_offline() {
  _has_bits_[0] |= 0x00002000u;
}
inline void S_Logout::clear_has_is_offline() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void S_Logout::clear_is_offline() {
  is_offline_ = false;
  clear_has_is_offline();
}
inline bool S_Logout::is_offline() const {
  // @@protoc_insertion_point(field_get:S_Logout.is_offline)
  return is_offline_;
}
inline void S_Logout::set_is_offline(bool value) {
  set_has_is_offline();
  is_offline_ = value;
  // @@protoc_insertion_point(field_set:S_Logout.is_offline)
}

// optional string phone = 8;
inline bool S_Logout::has_phone() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_Logout::set_has_phone() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_Logout::clear_has_phone() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_Logout::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& S_Logout::phone() const {
  // @@protoc_insertion_point(field_get:S_Logout.phone)
  return phone_.GetNoArena();
}
inline void S_Logout::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:S_Logout.phone)
}
#if LANG_CXX11
inline void S_Logout::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:S_Logout.phone)
}
#endif
inline void S_Logout::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:S_Logout.phone)
}
inline void S_Logout::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:S_Logout.phone)
}
inline ::std::string* S_Logout::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:S_Logout.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S_Logout::release_phone() {
  // @@protoc_insertion_point(field_release:S_Logout.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S_Logout::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:S_Logout.phone)
}

// optional string phone_type = 9;
inline bool S_Logout::has_phone_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_Logout::set_has_phone_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_Logout::clear_has_phone_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_Logout::clear_phone_type() {
  phone_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_type();
}
inline const ::std::string& S_Logout::phone_type() const {
  // @@protoc_insertion_point(field_get:S_Logout.phone_type)
  return phone_type_.GetNoArena();
}
inline void S_Logout::set_phone_type(const ::std::string& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:S_Logout.phone_type)
}
#if LANG_CXX11
inline void S_Logout::set_phone_type(::std::string&& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:S_Logout.phone_type)
}
#endif
inline void S_Logout::set_phone_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:S_Logout.phone_type)
}
inline void S_Logout::set_phone_type(const char* value, size_t size) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:S_Logout.phone_type)
}
inline ::std::string* S_Logout::mutable_phone_type() {
  set_has_phone_type();
  // @@protoc_insertion_point(field_mutable:S_Logout.phone_type)
  return phone_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S_Logout::release_phone_type() {
  // @@protoc_insertion_point(field_release:S_Logout.phone_type)
  clear_has_phone_type();
  return phone_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S_Logout::set_allocated_phone_type(::std::string* phone_type) {
  if (phone_type != NULL) {
    set_has_phone_type();
  } else {
    clear_has_phone_type();
  }
  phone_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_type);
  // @@protoc_insertion_point(field_set_allocated:S_Logout.phone_type)
}

// optional string version = 10;
inline bool S_Logout::has_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S_Logout::set_has_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S_Logout::clear_has_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S_Logout::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& S_Logout::version() const {
  // @@protoc_insertion_point(field_get:S_Logout.version)
  return version_.GetNoArena();
}
inline void S_Logout::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:S_Logout.version)
}
#if LANG_CXX11
inline void S_Logout::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:S_Logout.version)
}
#endif
inline void S_Logout::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:S_Logout.version)
}
inline void S_Logout::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:S_Logout.version)
}
inline ::std::string* S_Logout::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:S_Logout.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S_Logout::release_version() {
  // @@protoc_insertion_point(field_release:S_Logout.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S_Logout::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:S_Logout.version)
}

// optional string channel_id = 11;
inline bool S_Logout::has_channel_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S_Logout::set_has_channel_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S_Logout::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S_Logout::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& S_Logout::channel_id() const {
  // @@protoc_insertion_point(field_get:S_Logout.channel_id)
  return channel_id_.GetNoArena();
}
inline void S_Logout::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:S_Logout.channel_id)
}
#if LANG_CXX11
inline void S_Logout::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:S_Logout.channel_id)
}
#endif
inline void S_Logout::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:S_Logout.channel_id)
}
inline void S_Logout::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:S_Logout.channel_id)
}
inline ::std::string* S_Logout::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:S_Logout.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S_Logout::release_channel_id() {
  // @@protoc_insertion_point(field_release:S_Logout.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S_Logout::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:S_Logout.channel_id)
}

// optional string package_name = 12;
inline bool S_Logout::has_package_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S_Logout::set_has_package_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S_Logout::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S_Logout::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& S_Logout::package_name() const {
  // @@protoc_insertion_point(field_get:S_Logout.package_name)
  return package_name_.GetNoArena();
}
inline void S_Logout::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:S_Logout.package_name)
}
#if LANG_CXX11
inline void S_Logout::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:S_Logout.package_name)
}
#endif
inline void S_Logout::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:S_Logout.package_name)
}
inline void S_Logout::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:S_Logout.package_name)
}
inline ::std::string* S_Logout::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:S_Logout.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S_Logout::release_package_name() {
  // @@protoc_insertion_point(field_release:S_Logout.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S_Logout::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:S_Logout.package_name)
}

// optional string imei = 13;
inline bool S_Logout::has_imei() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S_Logout::set_has_imei() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S_Logout::clear_has_imei() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S_Logout::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
inline const ::std::string& S_Logout::imei() const {
  // @@protoc_insertion_point(field_get:S_Logout.imei)
  return imei_.GetNoArena();
}
inline void S_Logout::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:S_Logout.imei)
}
#if LANG_CXX11
inline void S_Logout::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:S_Logout.imei)
}
#endif
inline void S_Logout::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:S_Logout.imei)
}
inline void S_Logout::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:S_Logout.imei)
}
inline ::std::string* S_Logout::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:S_Logout.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S_Logout::release_imei() {
  // @@protoc_insertion_point(field_release:S_Logout.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S_Logout::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:S_Logout.imei)
}

// optional string ip = 14;
inline bool S_Logout::has_ip() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void S_Logout::set_has_ip() {
  _has_bits_[0] |= 0x00000080u;
}
inline void S_Logout::clear_has_ip() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void S_Logout::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& S_Logout::ip() const {
  // @@protoc_insertion_point(field_get:S_Logout.ip)
  return ip_.GetNoArena();
}
inline void S_Logout::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:S_Logout.ip)
}
#if LANG_CXX11
inline void S_Logout::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:S_Logout.ip)
}
#endif
inline void S_Logout::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:S_Logout.ip)
}
inline void S_Logout::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:S_Logout.ip)
}
inline ::std::string* S_Logout::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:S_Logout.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S_Logout::release_ip() {
  // @@protoc_insertion_point(field_release:S_Logout.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S_Logout::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:S_Logout.ip)
}

// optional int32 user_data = 15;
inline bool S_Logout::has_user_data() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void S_Logout::set_has_user_data() {
  _has_bits_[0] |= 0x00004000u;
}
inline void S_Logout::clear_has_user_data() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void S_Logout::clear_user_data() {
  user_data_ = 0;
  clear_has_user_data();
}
inline ::google::protobuf::int32 S_Logout::user_data() const {
  // @@protoc_insertion_point(field_get:S_Logout.user_data)
  return user_data_;
}
inline void S_Logout::set_user_data(::google::protobuf::int32 value) {
  set_has_user_data();
  user_data_ = value;
  // @@protoc_insertion_point(field_set:S_Logout.user_data)
}

// -------------------------------------------------------------------

// LD_VerifyAccount

// optional .VerifyAccount verify_account = 1;
inline bool LD_VerifyAccount::has_verify_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_VerifyAccount::set_has_verify_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_VerifyAccount::clear_has_verify_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_VerifyAccount::clear_verify_account() {
  if (verify_account_ != NULL) verify_account_->::VerifyAccount::Clear();
  clear_has_verify_account();
}
inline const ::VerifyAccount& LD_VerifyAccount::verify_account() const {
  // @@protoc_insertion_point(field_get:LD_VerifyAccount.verify_account)
  return verify_account_ != NULL ? *verify_account_
                         : *::VerifyAccount::internal_default_instance();
}
inline ::VerifyAccount* LD_VerifyAccount::mutable_verify_account() {
  set_has_verify_account();
  if (verify_account_ == NULL) {
    verify_account_ = new ::VerifyAccount;
  }
  // @@protoc_insertion_point(field_mutable:LD_VerifyAccount.verify_account)
  return verify_account_;
}
inline ::VerifyAccount* LD_VerifyAccount::release_verify_account() {
  // @@protoc_insertion_point(field_release:LD_VerifyAccount.verify_account)
  clear_has_verify_account();
  ::VerifyAccount* temp = verify_account_;
  verify_account_ = NULL;
  return temp;
}
inline void LD_VerifyAccount::set_allocated_verify_account(::VerifyAccount* verify_account) {
  delete verify_account_;
  verify_account_ = verify_account;
  if (verify_account) {
    set_has_verify_account();
  } else {
    clear_has_verify_account();
  }
  // @@protoc_insertion_point(field_set_allocated:LD_VerifyAccount.verify_account)
}

// optional int32 session_id = 2;
inline bool LD_VerifyAccount::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_VerifyAccount::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_VerifyAccount::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_VerifyAccount::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 LD_VerifyAccount::session_id() const {
  // @@protoc_insertion_point(field_get:LD_VerifyAccount.session_id)
  return session_id_;
}
inline void LD_VerifyAccount::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:LD_VerifyAccount.session_id)
}

// optional int32 gate_id = 3;
inline bool LD_VerifyAccount::has_gate_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LD_VerifyAccount::set_has_gate_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LD_VerifyAccount::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LD_VerifyAccount::clear_gate_id() {
  gate_id_ = 0;
  clear_has_gate_id();
}
inline ::google::protobuf::int32 LD_VerifyAccount::gate_id() const {
  // @@protoc_insertion_point(field_get:LD_VerifyAccount.gate_id)
  return gate_id_;
}
inline void LD_VerifyAccount::set_gate_id(::google::protobuf::int32 value) {
  set_has_gate_id();
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:LD_VerifyAccount.gate_id)
}

// -------------------------------------------------------------------

// DL_VerifyAccountResult

// optional .VerifyAccountResult verify_account_result = 1;
inline bool DL_VerifyAccountResult::has_verify_account_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DL_VerifyAccountResult::set_has_verify_account_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DL_VerifyAccountResult::clear_has_verify_account_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DL_VerifyAccountResult::clear_verify_account_result() {
  if (verify_account_result_ != NULL) verify_account_result_->::VerifyAccountResult::Clear();
  clear_has_verify_account_result();
}
inline const ::VerifyAccountResult& DL_VerifyAccountResult::verify_account_result() const {
  // @@protoc_insertion_point(field_get:DL_VerifyAccountResult.verify_account_result)
  return verify_account_result_ != NULL ? *verify_account_result_
                         : *::VerifyAccountResult::internal_default_instance();
}
inline ::VerifyAccountResult* DL_VerifyAccountResult::mutable_verify_account_result() {
  set_has_verify_account_result();
  if (verify_account_result_ == NULL) {
    verify_account_result_ = new ::VerifyAccountResult;
  }
  // @@protoc_insertion_point(field_mutable:DL_VerifyAccountResult.verify_account_result)
  return verify_account_result_;
}
inline ::VerifyAccountResult* DL_VerifyAccountResult::release_verify_account_result() {
  // @@protoc_insertion_point(field_release:DL_VerifyAccountResult.verify_account_result)
  clear_has_verify_account_result();
  ::VerifyAccountResult* temp = verify_account_result_;
  verify_account_result_ = NULL;
  return temp;
}
inline void DL_VerifyAccountResult::set_allocated_verify_account_result(::VerifyAccountResult* verify_account_result) {
  delete verify_account_result_;
  verify_account_result_ = verify_account_result;
  if (verify_account_result) {
    set_has_verify_account_result();
  } else {
    clear_has_verify_account_result();
  }
  // @@protoc_insertion_point(field_set_allocated:DL_VerifyAccountResult.verify_account_result)
}

// optional int32 session_id = 2;
inline bool DL_VerifyAccountResult::has_session_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DL_VerifyAccountResult::set_has_session_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DL_VerifyAccountResult::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DL_VerifyAccountResult::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 DL_VerifyAccountResult::session_id() const {
  // @@protoc_insertion_point(field_get:DL_VerifyAccountResult.session_id)
  return session_id_;
}
inline void DL_VerifyAccountResult::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:DL_VerifyAccountResult.session_id)
}

// optional int32 gate_id = 3;
inline bool DL_VerifyAccountResult::has_gate_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DL_VerifyAccountResult::set_has_gate_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DL_VerifyAccountResult::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DL_VerifyAccountResult::clear_gate_id() {
  gate_id_ = 0;
  clear_has_gate_id();
}
inline ::google::protobuf::int32 DL_VerifyAccountResult::gate_id() const {
  // @@protoc_insertion_point(field_get:DL_VerifyAccountResult.gate_id)
  return gate_id_;
}
inline void DL_VerifyAccountResult::set_gate_id(::google::protobuf::int32 value) {
  set_has_gate_id();
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:DL_VerifyAccountResult.gate_id)
}

// optional string account = 4;
inline bool DL_VerifyAccountResult::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DL_VerifyAccountResult::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DL_VerifyAccountResult::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DL_VerifyAccountResult::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& DL_VerifyAccountResult::account() const {
  // @@protoc_insertion_point(field_get:DL_VerifyAccountResult.account)
  return account_.GetNoArena();
}
inline void DL_VerifyAccountResult::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_VerifyAccountResult.account)
}
#if LANG_CXX11
inline void DL_VerifyAccountResult::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_VerifyAccountResult.account)
}
#endif
inline void DL_VerifyAccountResult::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_VerifyAccountResult.account)
}
inline void DL_VerifyAccountResult::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_VerifyAccountResult.account)
}
inline ::std::string* DL_VerifyAccountResult::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:DL_VerifyAccountResult.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_VerifyAccountResult::release_account() {
  // @@protoc_insertion_point(field_release:DL_VerifyAccountResult.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_VerifyAccountResult::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:DL_VerifyAccountResult.account)
}

// optional string password = 5;
inline bool DL_VerifyAccountResult::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DL_VerifyAccountResult::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DL_VerifyAccountResult::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DL_VerifyAccountResult::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& DL_VerifyAccountResult::password() const {
  // @@protoc_insertion_point(field_get:DL_VerifyAccountResult.password)
  return password_.GetNoArena();
}
inline void DL_VerifyAccountResult::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_VerifyAccountResult.password)
}
#if LANG_CXX11
inline void DL_VerifyAccountResult::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_VerifyAccountResult.password)
}
#endif
inline void DL_VerifyAccountResult::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_VerifyAccountResult.password)
}
inline void DL_VerifyAccountResult::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_VerifyAccountResult.password)
}
inline ::std::string* DL_VerifyAccountResult::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:DL_VerifyAccountResult.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_VerifyAccountResult::release_password() {
  // @@protoc_insertion_point(field_release:DL_VerifyAccountResult.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_VerifyAccountResult::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:DL_VerifyAccountResult.password)
}

// -------------------------------------------------------------------

// LD_SmsLogin

// optional string account = 1;
inline bool LD_SmsLogin::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_SmsLogin::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_SmsLogin::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_SmsLogin::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& LD_SmsLogin::account() const {
  // @@protoc_insertion_point(field_get:LD_SmsLogin.account)
  return account_.GetNoArena();
}
inline void LD_SmsLogin::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_SmsLogin.account)
}
#if LANG_CXX11
inline void LD_SmsLogin::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_SmsLogin.account)
}
#endif
inline void LD_SmsLogin::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_SmsLogin.account)
}
inline void LD_SmsLogin::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_SmsLogin.account)
}
inline ::std::string* LD_SmsLogin::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:LD_SmsLogin.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_SmsLogin::release_account() {
  // @@protoc_insertion_point(field_release:LD_SmsLogin.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_SmsLogin::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:LD_SmsLogin.account)
}

// optional int32 session_id = 2;
inline bool LD_SmsLogin::has_session_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LD_SmsLogin::set_has_session_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LD_SmsLogin::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LD_SmsLogin::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 LD_SmsLogin::session_id() const {
  // @@protoc_insertion_point(field_get:LD_SmsLogin.session_id)
  return session_id_;
}
inline void LD_SmsLogin::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:LD_SmsLogin.session_id)
}

// optional string phone = 3;
inline bool LD_SmsLogin::has_phone() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_SmsLogin::set_has_phone() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_SmsLogin::clear_has_phone() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_SmsLogin::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& LD_SmsLogin::phone() const {
  // @@protoc_insertion_point(field_get:LD_SmsLogin.phone)
  return phone_.GetNoArena();
}
inline void LD_SmsLogin::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_SmsLogin.phone)
}
#if LANG_CXX11
inline void LD_SmsLogin::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_SmsLogin.phone)
}
#endif
inline void LD_SmsLogin::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_SmsLogin.phone)
}
inline void LD_SmsLogin::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_SmsLogin.phone)
}
inline ::std::string* LD_SmsLogin::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:LD_SmsLogin.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_SmsLogin::release_phone() {
  // @@protoc_insertion_point(field_release:LD_SmsLogin.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_SmsLogin::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:LD_SmsLogin.phone)
}

// optional string phone_type = 4;
inline bool LD_SmsLogin::has_phone_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LD_SmsLogin::set_has_phone_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LD_SmsLogin::clear_has_phone_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LD_SmsLogin::clear_phone_type() {
  phone_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_type();
}
inline const ::std::string& LD_SmsLogin::phone_type() const {
  // @@protoc_insertion_point(field_get:LD_SmsLogin.phone_type)
  return phone_type_.GetNoArena();
}
inline void LD_SmsLogin::set_phone_type(const ::std::string& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_SmsLogin.phone_type)
}
#if LANG_CXX11
inline void LD_SmsLogin::set_phone_type(::std::string&& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_SmsLogin.phone_type)
}
#endif
inline void LD_SmsLogin::set_phone_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_SmsLogin.phone_type)
}
inline void LD_SmsLogin::set_phone_type(const char* value, size_t size) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_SmsLogin.phone_type)
}
inline ::std::string* LD_SmsLogin::mutable_phone_type() {
  set_has_phone_type();
  // @@protoc_insertion_point(field_mutable:LD_SmsLogin.phone_type)
  return phone_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_SmsLogin::release_phone_type() {
  // @@protoc_insertion_point(field_release:LD_SmsLogin.phone_type)
  clear_has_phone_type();
  return phone_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_SmsLogin::set_allocated_phone_type(::std::string* phone_type) {
  if (phone_type != NULL) {
    set_has_phone_type();
  } else {
    clear_has_phone_type();
  }
  phone_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_type);
  // @@protoc_insertion_point(field_set_allocated:LD_SmsLogin.phone_type)
}

// optional string version = 5;
inline bool LD_SmsLogin::has_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LD_SmsLogin::set_has_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LD_SmsLogin::clear_has_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LD_SmsLogin::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& LD_SmsLogin::version() const {
  // @@protoc_insertion_point(field_get:LD_SmsLogin.version)
  return version_.GetNoArena();
}
inline void LD_SmsLogin::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_SmsLogin.version)
}
#if LANG_CXX11
inline void LD_SmsLogin::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_SmsLogin.version)
}
#endif
inline void LD_SmsLogin::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_SmsLogin.version)
}
inline void LD_SmsLogin::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_SmsLogin.version)
}
inline ::std::string* LD_SmsLogin::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:LD_SmsLogin.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_SmsLogin::release_version() {
  // @@protoc_insertion_point(field_release:LD_SmsLogin.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_SmsLogin::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:LD_SmsLogin.version)
}

// optional string channel_id = 6;
inline bool LD_SmsLogin::has_channel_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LD_SmsLogin::set_has_channel_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LD_SmsLogin::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LD_SmsLogin::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& LD_SmsLogin::channel_id() const {
  // @@protoc_insertion_point(field_get:LD_SmsLogin.channel_id)
  return channel_id_.GetNoArena();
}
inline void LD_SmsLogin::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_SmsLogin.channel_id)
}
#if LANG_CXX11
inline void LD_SmsLogin::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_SmsLogin.channel_id)
}
#endif
inline void LD_SmsLogin::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_SmsLogin.channel_id)
}
inline void LD_SmsLogin::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_SmsLogin.channel_id)
}
inline ::std::string* LD_SmsLogin::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:LD_SmsLogin.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_SmsLogin::release_channel_id() {
  // @@protoc_insertion_point(field_release:LD_SmsLogin.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_SmsLogin::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:LD_SmsLogin.channel_id)
}

// optional string package_name = 7;
inline bool LD_SmsLogin::has_package_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LD_SmsLogin::set_has_package_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LD_SmsLogin::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LD_SmsLogin::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& LD_SmsLogin::package_name() const {
  // @@protoc_insertion_point(field_get:LD_SmsLogin.package_name)
  return package_name_.GetNoArena();
}
inline void LD_SmsLogin::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_SmsLogin.package_name)
}
#if LANG_CXX11
inline void LD_SmsLogin::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_SmsLogin.package_name)
}
#endif
inline void LD_SmsLogin::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_SmsLogin.package_name)
}
inline void LD_SmsLogin::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_SmsLogin.package_name)
}
inline ::std::string* LD_SmsLogin::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:LD_SmsLogin.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_SmsLogin::release_package_name() {
  // @@protoc_insertion_point(field_release:LD_SmsLogin.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_SmsLogin::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:LD_SmsLogin.package_name)
}

// optional string imei = 8;
inline bool LD_SmsLogin::has_imei() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LD_SmsLogin::set_has_imei() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LD_SmsLogin::clear_has_imei() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LD_SmsLogin::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
inline const ::std::string& LD_SmsLogin::imei() const {
  // @@protoc_insertion_point(field_get:LD_SmsLogin.imei)
  return imei_.GetNoArena();
}
inline void LD_SmsLogin::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_SmsLogin.imei)
}
#if LANG_CXX11
inline void LD_SmsLogin::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_SmsLogin.imei)
}
#endif
inline void LD_SmsLogin::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_SmsLogin.imei)
}
inline void LD_SmsLogin::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_SmsLogin.imei)
}
inline ::std::string* LD_SmsLogin::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:LD_SmsLogin.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_SmsLogin::release_imei() {
  // @@protoc_insertion_point(field_release:LD_SmsLogin.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_SmsLogin::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:LD_SmsLogin.imei)
}

// optional string ip = 9;
inline bool LD_SmsLogin::has_ip() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LD_SmsLogin::set_has_ip() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LD_SmsLogin::clear_has_ip() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LD_SmsLogin::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& LD_SmsLogin::ip() const {
  // @@protoc_insertion_point(field_get:LD_SmsLogin.ip)
  return ip_.GetNoArena();
}
inline void LD_SmsLogin::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_SmsLogin.ip)
}
#if LANG_CXX11
inline void LD_SmsLogin::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_SmsLogin.ip)
}
#endif
inline void LD_SmsLogin::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_SmsLogin.ip)
}
inline void LD_SmsLogin::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_SmsLogin.ip)
}
inline ::std::string* LD_SmsLogin::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:LD_SmsLogin.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_SmsLogin::release_ip() {
  // @@protoc_insertion_point(field_release:LD_SmsLogin.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_SmsLogin::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:LD_SmsLogin.ip)
}

// optional int32 gate_id = 10;
inline bool LD_SmsLogin::has_gate_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LD_SmsLogin::set_has_gate_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LD_SmsLogin::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LD_SmsLogin::clear_gate_id() {
  gate_id_ = 0;
  clear_has_gate_id();
}
inline ::google::protobuf::int32 LD_SmsLogin::gate_id() const {
  // @@protoc_insertion_point(field_get:LD_SmsLogin.gate_id)
  return gate_id_;
}
inline void LD_SmsLogin::set_gate_id(::google::protobuf::int32 value) {
  set_has_gate_id();
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:LD_SmsLogin.gate_id)
}

// optional string ip_area = 11;
inline bool LD_SmsLogin::has_ip_area() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LD_SmsLogin::set_has_ip_area() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LD_SmsLogin::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LD_SmsLogin::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
inline const ::std::string& LD_SmsLogin::ip_area() const {
  // @@protoc_insertion_point(field_get:LD_SmsLogin.ip_area)
  return ip_area_.GetNoArena();
}
inline void LD_SmsLogin::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_SmsLogin.ip_area)
}
#if LANG_CXX11
inline void LD_SmsLogin::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_SmsLogin.ip_area)
}
#endif
inline void LD_SmsLogin::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_SmsLogin.ip_area)
}
inline void LD_SmsLogin::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_SmsLogin.ip_area)
}
inline ::std::string* LD_SmsLogin::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:LD_SmsLogin.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_SmsLogin::release_ip_area() {
  // @@protoc_insertion_point(field_release:LD_SmsLogin.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_SmsLogin::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:LD_SmsLogin.ip_area)
}

// -------------------------------------------------------------------

// LS_LoginNotify

// optional .PlayerLoginInfo player_login_info = 1;
inline bool LS_LoginNotify::has_player_login_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_LoginNotify::set_has_player_login_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_LoginNotify::clear_has_player_login_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_LoginNotify::clear_player_login_info() {
  if (player_login_info_ != NULL) player_login_info_->::PlayerLoginInfo::Clear();
  clear_has_player_login_info();
}
inline const ::PlayerLoginInfo& LS_LoginNotify::player_login_info() const {
  // @@protoc_insertion_point(field_get:LS_LoginNotify.player_login_info)
  return player_login_info_ != NULL ? *player_login_info_
                         : *::PlayerLoginInfo::internal_default_instance();
}
inline ::PlayerLoginInfo* LS_LoginNotify::mutable_player_login_info() {
  set_has_player_login_info();
  if (player_login_info_ == NULL) {
    player_login_info_ = new ::PlayerLoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:LS_LoginNotify.player_login_info)
  return player_login_info_;
}
inline ::PlayerLoginInfo* LS_LoginNotify::release_player_login_info() {
  // @@protoc_insertion_point(field_release:LS_LoginNotify.player_login_info)
  clear_has_player_login_info();
  ::PlayerLoginInfo* temp = player_login_info_;
  player_login_info_ = NULL;
  return temp;
}
inline void LS_LoginNotify::set_allocated_player_login_info(::PlayerLoginInfo* player_login_info) {
  delete player_login_info_;
  player_login_info_ = player_login_info;
  if (player_login_info) {
    set_has_player_login_info();
  } else {
    clear_has_player_login_info();
  }
  // @@protoc_insertion_point(field_set_allocated:LS_LoginNotify.player_login_info)
}

// optional string password = 2;
inline bool LS_LoginNotify::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_LoginNotify::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_LoginNotify::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_LoginNotify::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& LS_LoginNotify::password() const {
  // @@protoc_insertion_point(field_get:LS_LoginNotify.password)
  return password_.GetNoArena();
}
inline void LS_LoginNotify::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LS_LoginNotify.password)
}
#if LANG_CXX11
inline void LS_LoginNotify::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LS_LoginNotify.password)
}
#endif
inline void LS_LoginNotify::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LS_LoginNotify.password)
}
inline void LS_LoginNotify::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LS_LoginNotify.password)
}
inline ::std::string* LS_LoginNotify::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:LS_LoginNotify.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LS_LoginNotify::release_password() {
  // @@protoc_insertion_point(field_release:LS_LoginNotify.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LS_LoginNotify::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:LS_LoginNotify.password)
}

// -------------------------------------------------------------------

// LS_LoginNotifyAgain

// optional int32 guid = 1;
inline bool LS_LoginNotifyAgain::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_LoginNotifyAgain::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_LoginNotifyAgain::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_LoginNotifyAgain::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LS_LoginNotifyAgain::guid() const {
  // @@protoc_insertion_point(field_get:LS_LoginNotifyAgain.guid)
  return guid_;
}
inline void LS_LoginNotifyAgain::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LS_LoginNotifyAgain.guid)
}

// optional string password = 2;
inline bool LS_LoginNotifyAgain::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_LoginNotifyAgain::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_LoginNotifyAgain::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_LoginNotifyAgain::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& LS_LoginNotifyAgain::password() const {
  // @@protoc_insertion_point(field_get:LS_LoginNotifyAgain.password)
  return password_.GetNoArena();
}
inline void LS_LoginNotifyAgain::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LS_LoginNotifyAgain.password)
}
#if LANG_CXX11
inline void LS_LoginNotifyAgain::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LS_LoginNotifyAgain.password)
}
#endif
inline void LS_LoginNotifyAgain::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LS_LoginNotifyAgain.password)
}
inline void LS_LoginNotifyAgain::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LS_LoginNotifyAgain.password)
}
inline ::std::string* LS_LoginNotifyAgain::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:LS_LoginNotifyAgain.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LS_LoginNotifyAgain::release_password() {
  // @@protoc_insertion_point(field_release:LS_LoginNotifyAgain.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LS_LoginNotifyAgain::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:LS_LoginNotifyAgain.password)
}

// -------------------------------------------------------------------

// LG_KickClient

// optional int32 session_id = 1;
inline bool LG_KickClient::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LG_KickClient::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LG_KickClient::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LG_KickClient::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 LG_KickClient::session_id() const {
  // @@protoc_insertion_point(field_get:LG_KickClient.session_id)
  return session_id_;
}
inline void LG_KickClient::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:LG_KickClient.session_id)
}

// optional int32 gate_id = 2;
inline bool LG_KickClient::has_gate_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LG_KickClient::set_has_gate_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LG_KickClient::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LG_KickClient::clear_gate_id() {
  gate_id_ = 0;
  clear_has_gate_id();
}
inline ::google::protobuf::int32 LG_KickClient::gate_id() const {
  // @@protoc_insertion_point(field_get:LG_KickClient.gate_id)
  return gate_id_;
}
inline void LG_KickClient::set_gate_id(::google::protobuf::int32 value) {
  set_has_gate_id();
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:LG_KickClient.gate_id)
}

// optional string reply_account = 3;
inline bool LG_KickClient::has_reply_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LG_KickClient::set_has_reply_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LG_KickClient::clear_has_reply_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LG_KickClient::clear_reply_account() {
  reply_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reply_account();
}
inline const ::std::string& LG_KickClient::reply_account() const {
  // @@protoc_insertion_point(field_get:LG_KickClient.reply_account)
  return reply_account_.GetNoArena();
}
inline void LG_KickClient::set_reply_account(const ::std::string& value) {
  set_has_reply_account();
  reply_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LG_KickClient.reply_account)
}
#if LANG_CXX11
inline void LG_KickClient::set_reply_account(::std::string&& value) {
  set_has_reply_account();
  reply_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LG_KickClient.reply_account)
}
#endif
inline void LG_KickClient::set_reply_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reply_account();
  reply_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LG_KickClient.reply_account)
}
inline void LG_KickClient::set_reply_account(const char* value, size_t size) {
  set_has_reply_account();
  reply_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LG_KickClient.reply_account)
}
inline ::std::string* LG_KickClient::mutable_reply_account() {
  set_has_reply_account();
  // @@protoc_insertion_point(field_mutable:LG_KickClient.reply_account)
  return reply_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LG_KickClient::release_reply_account() {
  // @@protoc_insertion_point(field_release:LG_KickClient.reply_account)
  clear_has_reply_account();
  return reply_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LG_KickClient::set_allocated_reply_account(::std::string* reply_account) {
  if (reply_account != NULL) {
    set_has_reply_account();
  } else {
    clear_has_reply_account();
  }
  reply_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reply_account);
  // @@protoc_insertion_point(field_set_allocated:LG_KickClient.reply_account)
}

// optional int32 user_data = 4;
inline bool LG_KickClient::has_user_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LG_KickClient::set_has_user_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LG_KickClient::clear_has_user_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LG_KickClient::clear_user_data() {
  user_data_ = 0;
  clear_has_user_data();
}
inline ::google::protobuf::int32 LG_KickClient::user_data() const {
  // @@protoc_insertion_point(field_get:LG_KickClient.user_data)
  return user_data_;
}
inline void LG_KickClient::set_user_data(::google::protobuf::int32 value) {
  set_has_user_data();
  user_data_ = value;
  // @@protoc_insertion_point(field_set:LG_KickClient.user_data)
}

// -------------------------------------------------------------------

// L_KickClient

// optional string reply_account = 1;
inline bool L_KickClient::has_reply_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void L_KickClient::set_has_reply_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void L_KickClient::clear_has_reply_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void L_KickClient::clear_reply_account() {
  reply_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reply_account();
}
inline const ::std::string& L_KickClient::reply_account() const {
  // @@protoc_insertion_point(field_get:L_KickClient.reply_account)
  return reply_account_.GetNoArena();
}
inline void L_KickClient::set_reply_account(const ::std::string& value) {
  set_has_reply_account();
  reply_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:L_KickClient.reply_account)
}
#if LANG_CXX11
inline void L_KickClient::set_reply_account(::std::string&& value) {
  set_has_reply_account();
  reply_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:L_KickClient.reply_account)
}
#endif
inline void L_KickClient::set_reply_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reply_account();
  reply_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:L_KickClient.reply_account)
}
inline void L_KickClient::set_reply_account(const char* value, size_t size) {
  set_has_reply_account();
  reply_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:L_KickClient.reply_account)
}
inline ::std::string* L_KickClient::mutable_reply_account() {
  set_has_reply_account();
  // @@protoc_insertion_point(field_mutable:L_KickClient.reply_account)
  return reply_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* L_KickClient::release_reply_account() {
  // @@protoc_insertion_point(field_release:L_KickClient.reply_account)
  clear_has_reply_account();
  return reply_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void L_KickClient::set_allocated_reply_account(::std::string* reply_account) {
  if (reply_account != NULL) {
    set_has_reply_account();
  } else {
    clear_has_reply_account();
  }
  reply_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reply_account);
  // @@protoc_insertion_point(field_set_allocated:L_KickClient.reply_account)
}

// optional int32 user_data = 2;
inline bool L_KickClient::has_user_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void L_KickClient::set_has_user_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void L_KickClient::clear_has_user_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void L_KickClient::clear_user_data() {
  user_data_ = 0;
  clear_has_user_data();
}
inline ::google::protobuf::int32 L_KickClient::user_data() const {
  // @@protoc_insertion_point(field_get:L_KickClient.user_data)
  return user_data_;
}
inline void L_KickClient::set_user_data(::google::protobuf::int32 value) {
  set_has_user_data();
  user_data_ = value;
  // @@protoc_insertion_point(field_set:L_KickClient.user_data)
}

// -------------------------------------------------------------------

// SD_ResetAccount

// optional int32 guid = 1;
inline bool SD_ResetAccount::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SD_ResetAccount::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SD_ResetAccount::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SD_ResetAccount::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_ResetAccount::guid() const {
  // @@protoc_insertion_point(field_get:SD_ResetAccount.guid)
  return guid_;
}
inline void SD_ResetAccount::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_ResetAccount.guid)
}

// optional string account = 2;
inline bool SD_ResetAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_ResetAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_ResetAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_ResetAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& SD_ResetAccount::account() const {
  // @@protoc_insertion_point(field_get:SD_ResetAccount.account)
  return account_.GetNoArena();
}
inline void SD_ResetAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_ResetAccount.account)
}
#if LANG_CXX11
inline void SD_ResetAccount::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_ResetAccount.account)
}
#endif
inline void SD_ResetAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_ResetAccount.account)
}
inline void SD_ResetAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_ResetAccount.account)
}
inline ::std::string* SD_ResetAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:SD_ResetAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_ResetAccount::release_account() {
  // @@protoc_insertion_point(field_release:SD_ResetAccount.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_ResetAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:SD_ResetAccount.account)
}

// optional string password = 3;
inline bool SD_ResetAccount::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_ResetAccount::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_ResetAccount::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_ResetAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& SD_ResetAccount::password() const {
  // @@protoc_insertion_point(field_get:SD_ResetAccount.password)
  return password_.GetNoArena();
}
inline void SD_ResetAccount::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_ResetAccount.password)
}
#if LANG_CXX11
inline void SD_ResetAccount::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_ResetAccount.password)
}
#endif
inline void SD_ResetAccount::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_ResetAccount.password)
}
inline void SD_ResetAccount::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_ResetAccount.password)
}
inline ::std::string* SD_ResetAccount::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:SD_ResetAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_ResetAccount::release_password() {
  // @@protoc_insertion_point(field_release:SD_ResetAccount.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_ResetAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:SD_ResetAccount.password)
}

// optional string nickname = 4;
inline bool SD_ResetAccount::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_ResetAccount::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_ResetAccount::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_ResetAccount::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& SD_ResetAccount::nickname() const {
  // @@protoc_insertion_point(field_get:SD_ResetAccount.nickname)
  return nickname_.GetNoArena();
}
inline void SD_ResetAccount::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_ResetAccount.nickname)
}
#if LANG_CXX11
inline void SD_ResetAccount::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_ResetAccount.nickname)
}
#endif
inline void SD_ResetAccount::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_ResetAccount.nickname)
}
inline void SD_ResetAccount::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_ResetAccount.nickname)
}
inline ::std::string* SD_ResetAccount::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:SD_ResetAccount.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_ResetAccount::release_nickname() {
  // @@protoc_insertion_point(field_release:SD_ResetAccount.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_ResetAccount::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:SD_ResetAccount.nickname)
}

// -------------------------------------------------------------------

// DS_ResetAccount

// optional int32 guid = 1;
inline bool DS_ResetAccount::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DS_ResetAccount::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DS_ResetAccount::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DS_ResetAccount::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_ResetAccount::guid() const {
  // @@protoc_insertion_point(field_get:DS_ResetAccount.guid)
  return guid_;
}
inline void DS_ResetAccount::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_ResetAccount.guid)
}

// optional int32 ret = 2;
inline bool DS_ResetAccount::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DS_ResetAccount::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DS_ResetAccount::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DS_ResetAccount::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DS_ResetAccount::ret() const {
  // @@protoc_insertion_point(field_get:DS_ResetAccount.ret)
  return ret_;
}
inline void DS_ResetAccount::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:DS_ResetAccount.ret)
}

// optional string account = 3;
inline bool DS_ResetAccount::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_ResetAccount::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_ResetAccount::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_ResetAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& DS_ResetAccount::account() const {
  // @@protoc_insertion_point(field_get:DS_ResetAccount.account)
  return account_.GetNoArena();
}
inline void DS_ResetAccount::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DS_ResetAccount.account)
}
#if LANG_CXX11
inline void DS_ResetAccount::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DS_ResetAccount.account)
}
#endif
inline void DS_ResetAccount::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DS_ResetAccount.account)
}
inline void DS_ResetAccount::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DS_ResetAccount.account)
}
inline ::std::string* DS_ResetAccount::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:DS_ResetAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DS_ResetAccount::release_account() {
  // @@protoc_insertion_point(field_release:DS_ResetAccount.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DS_ResetAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:DS_ResetAccount.account)
}

// optional string nickname = 4;
inline bool DS_ResetAccount::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_ResetAccount::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_ResetAccount::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_ResetAccount::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& DS_ResetAccount::nickname() const {
  // @@protoc_insertion_point(field_get:DS_ResetAccount.nickname)
  return nickname_.GetNoArena();
}
inline void DS_ResetAccount::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DS_ResetAccount.nickname)
}
#if LANG_CXX11
inline void DS_ResetAccount::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DS_ResetAccount.nickname)
}
#endif
inline void DS_ResetAccount::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DS_ResetAccount.nickname)
}
inline void DS_ResetAccount::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DS_ResetAccount.nickname)
}
inline ::std::string* DS_ResetAccount::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:DS_ResetAccount.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DS_ResetAccount::release_nickname() {
  // @@protoc_insertion_point(field_release:DS_ResetAccount.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DS_ResetAccount::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:DS_ResetAccount.nickname)
}

// -------------------------------------------------------------------

// SD_SetPassword

// optional int32 guid = 1;
inline bool SD_SetPassword::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_SetPassword::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_SetPassword::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_SetPassword::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_SetPassword::guid() const {
  // @@protoc_insertion_point(field_get:SD_SetPassword.guid)
  return guid_;
}
inline void SD_SetPassword::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_SetPassword.guid)
}

// optional string old_password = 2;
inline bool SD_SetPassword::has_old_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_SetPassword::set_has_old_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_SetPassword::clear_has_old_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_SetPassword::clear_old_password() {
  old_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_old_password();
}
inline const ::std::string& SD_SetPassword::old_password() const {
  // @@protoc_insertion_point(field_get:SD_SetPassword.old_password)
  return old_password_.GetNoArena();
}
inline void SD_SetPassword::set_old_password(const ::std::string& value) {
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_SetPassword.old_password)
}
#if LANG_CXX11
inline void SD_SetPassword::set_old_password(::std::string&& value) {
  set_has_old_password();
  old_password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_SetPassword.old_password)
}
#endif
inline void SD_SetPassword::set_old_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_SetPassword.old_password)
}
inline void SD_SetPassword::set_old_password(const char* value, size_t size) {
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_SetPassword.old_password)
}
inline ::std::string* SD_SetPassword::mutable_old_password() {
  set_has_old_password();
  // @@protoc_insertion_point(field_mutable:SD_SetPassword.old_password)
  return old_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_SetPassword::release_old_password() {
  // @@protoc_insertion_point(field_release:SD_SetPassword.old_password)
  clear_has_old_password();
  return old_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_SetPassword::set_allocated_old_password(::std::string* old_password) {
  if (old_password != NULL) {
    set_has_old_password();
  } else {
    clear_has_old_password();
  }
  old_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), old_password);
  // @@protoc_insertion_point(field_set_allocated:SD_SetPassword.old_password)
}

// optional string password = 3;
inline bool SD_SetPassword::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_SetPassword::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_SetPassword::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_SetPassword::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& SD_SetPassword::password() const {
  // @@protoc_insertion_point(field_get:SD_SetPassword.password)
  return password_.GetNoArena();
}
inline void SD_SetPassword::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_SetPassword.password)
}
#if LANG_CXX11
inline void SD_SetPassword::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_SetPassword.password)
}
#endif
inline void SD_SetPassword::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_SetPassword.password)
}
inline void SD_SetPassword::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_SetPassword.password)
}
inline ::std::string* SD_SetPassword::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:SD_SetPassword.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_SetPassword::release_password() {
  // @@protoc_insertion_point(field_release:SD_SetPassword.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_SetPassword::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:SD_SetPassword.password)
}

// -------------------------------------------------------------------

// DS_SetPassword

// optional int32 guid = 1;
inline bool DS_SetPassword::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_SetPassword::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_SetPassword::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_SetPassword::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_SetPassword::guid() const {
  // @@protoc_insertion_point(field_get:DS_SetPassword.guid)
  return guid_;
}
inline void DS_SetPassword::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_SetPassword.guid)
}

// optional int32 ret = 2;
inline bool DS_SetPassword::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_SetPassword::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_SetPassword::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_SetPassword::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DS_SetPassword::ret() const {
  // @@protoc_insertion_point(field_get:DS_SetPassword.ret)
  return ret_;
}
inline void DS_SetPassword::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:DS_SetPassword.ret)
}

// -------------------------------------------------------------------

// SD_SetNickname

// optional int32 guid = 1;
inline bool SD_SetNickname::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_SetNickname::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_SetNickname::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_SetNickname::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_SetNickname::guid() const {
  // @@protoc_insertion_point(field_get:SD_SetNickname.guid)
  return guid_;
}
inline void SD_SetNickname::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_SetNickname.guid)
}

// optional string nickname = 2;
inline bool SD_SetNickname::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_SetNickname::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_SetNickname::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_SetNickname::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& SD_SetNickname::nickname() const {
  // @@protoc_insertion_point(field_get:SD_SetNickname.nickname)
  return nickname_.GetNoArena();
}
inline void SD_SetNickname::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_SetNickname.nickname)
}
#if LANG_CXX11
inline void SD_SetNickname::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_SetNickname.nickname)
}
#endif
inline void SD_SetNickname::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_SetNickname.nickname)
}
inline void SD_SetNickname::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_SetNickname.nickname)
}
inline ::std::string* SD_SetNickname::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:SD_SetNickname.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_SetNickname::release_nickname() {
  // @@protoc_insertion_point(field_release:SD_SetNickname.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_SetNickname::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:SD_SetNickname.nickname)
}

// -------------------------------------------------------------------

// DS_SetNickname

// optional int32 guid = 1;
inline bool DS_SetNickname::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_SetNickname::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_SetNickname::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_SetNickname::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_SetNickname::guid() const {
  // @@protoc_insertion_point(field_get:DS_SetNickname.guid)
  return guid_;
}
inline void DS_SetNickname::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_SetNickname.guid)
}

// optional string nickname = 2;
inline bool DS_SetNickname::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_SetNickname::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_SetNickname::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_SetNickname::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& DS_SetNickname::nickname() const {
  // @@protoc_insertion_point(field_get:DS_SetNickname.nickname)
  return nickname_.GetNoArena();
}
inline void DS_SetNickname::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DS_SetNickname.nickname)
}
#if LANG_CXX11
inline void DS_SetNickname::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DS_SetNickname.nickname)
}
#endif
inline void DS_SetNickname::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DS_SetNickname.nickname)
}
inline void DS_SetNickname::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DS_SetNickname.nickname)
}
inline ::std::string* DS_SetNickname::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:DS_SetNickname.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DS_SetNickname::release_nickname() {
  // @@protoc_insertion_point(field_release:DS_SetNickname.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DS_SetNickname::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:DS_SetNickname.nickname)
}

// optional int32 ret = 3;
inline bool DS_SetNickname::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DS_SetNickname::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DS_SetNickname::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DS_SetNickname::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DS_SetNickname::ret() const {
  // @@protoc_insertion_point(field_get:DS_SetNickname.ret)
  return ret_;
}
inline void DS_SetNickname::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:DS_SetNickname.ret)
}

// -------------------------------------------------------------------

// SD_SetPasswordBySms

// optional int32 guid = 1;
inline bool SD_SetPasswordBySms::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_SetPasswordBySms::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_SetPasswordBySms::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_SetPasswordBySms::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_SetPasswordBySms::guid() const {
  // @@protoc_insertion_point(field_get:SD_SetPasswordBySms.guid)
  return guid_;
}
inline void SD_SetPasswordBySms::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_SetPasswordBySms.guid)
}

// optional string password = 2;
inline bool SD_SetPasswordBySms::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_SetPasswordBySms::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_SetPasswordBySms::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_SetPasswordBySms::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& SD_SetPasswordBySms::password() const {
  // @@protoc_insertion_point(field_get:SD_SetPasswordBySms.password)
  return password_.GetNoArena();
}
inline void SD_SetPasswordBySms::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_SetPasswordBySms.password)
}
#if LANG_CXX11
inline void SD_SetPasswordBySms::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_SetPasswordBySms.password)
}
#endif
inline void SD_SetPasswordBySms::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_SetPasswordBySms.password)
}
inline void SD_SetPasswordBySms::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_SetPasswordBySms.password)
}
inline ::std::string* SD_SetPasswordBySms::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:SD_SetPasswordBySms.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_SetPasswordBySms::release_password() {
  // @@protoc_insertion_point(field_release:SD_SetPasswordBySms.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_SetPasswordBySms::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:SD_SetPasswordBySms.password)
}

// -------------------------------------------------------------------

// SD_QueryPlayerData

// optional int32 guid = 1;
inline bool SD_QueryPlayerData::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_QueryPlayerData::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_QueryPlayerData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_QueryPlayerData::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_QueryPlayerData::guid() const {
  // @@protoc_insertion_point(field_get:SD_QueryPlayerData.guid)
  return guid_;
}
inline void SD_QueryPlayerData::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_QueryPlayerData.guid)
}

// optional string account = 2;
inline bool SD_QueryPlayerData::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_QueryPlayerData::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_QueryPlayerData::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_QueryPlayerData::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& SD_QueryPlayerData::account() const {
  // @@protoc_insertion_point(field_get:SD_QueryPlayerData.account)
  return account_.GetNoArena();
}
inline void SD_QueryPlayerData::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_QueryPlayerData.account)
}
#if LANG_CXX11
inline void SD_QueryPlayerData::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_QueryPlayerData.account)
}
#endif
inline void SD_QueryPlayerData::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_QueryPlayerData.account)
}
inline void SD_QueryPlayerData::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_QueryPlayerData.account)
}
inline ::std::string* SD_QueryPlayerData::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:SD_QueryPlayerData.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_QueryPlayerData::release_account() {
  // @@protoc_insertion_point(field_release:SD_QueryPlayerData.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_QueryPlayerData::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:SD_QueryPlayerData.account)
}

// optional string nickname = 3;
inline bool SD_QueryPlayerData::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_QueryPlayerData::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_QueryPlayerData::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_QueryPlayerData::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& SD_QueryPlayerData::nickname() const {
  // @@protoc_insertion_point(field_get:SD_QueryPlayerData.nickname)
  return nickname_.GetNoArena();
}
inline void SD_QueryPlayerData::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_QueryPlayerData.nickname)
}
#if LANG_CXX11
inline void SD_QueryPlayerData::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_QueryPlayerData.nickname)
}
#endif
inline void SD_QueryPlayerData::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_QueryPlayerData.nickname)
}
inline void SD_QueryPlayerData::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_QueryPlayerData.nickname)
}
inline ::std::string* SD_QueryPlayerData::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:SD_QueryPlayerData.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_QueryPlayerData::release_nickname() {
  // @@protoc_insertion_point(field_release:SD_QueryPlayerData.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_QueryPlayerData::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:SD_QueryPlayerData.nickname)
}

// -------------------------------------------------------------------

// DS_LoadPlayerData

// optional int32 guid = 1;
inline bool DS_LoadPlayerData::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DS_LoadPlayerData::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DS_LoadPlayerData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DS_LoadPlayerData::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_LoadPlayerData::guid() const {
  // @@protoc_insertion_point(field_get:DS_LoadPlayerData.guid)
  return guid_;
}
inline void DS_LoadPlayerData::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_LoadPlayerData.guid)
}

// optional int32 info_type = 2;
inline bool DS_LoadPlayerData::has_info_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DS_LoadPlayerData::set_has_info_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DS_LoadPlayerData::clear_has_info_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DS_LoadPlayerData::clear_info_type() {
  info_type_ = 0;
  clear_has_info_type();
}
inline ::google::protobuf::int32 DS_LoadPlayerData::info_type() const {
  // @@protoc_insertion_point(field_get:DS_LoadPlayerData.info_type)
  return info_type_;
}
inline void DS_LoadPlayerData::set_info_type(::google::protobuf::int32 value) {
  set_has_info_type();
  info_type_ = value;
  // @@protoc_insertion_point(field_set:DS_LoadPlayerData.info_type)
}

// optional .PlayerBaseInfo pb_base_info = 3;
inline bool DS_LoadPlayerData::has_pb_base_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_LoadPlayerData::set_has_pb_base_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_LoadPlayerData::clear_has_pb_base_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_LoadPlayerData::clear_pb_base_info() {
  if (pb_base_info_ != NULL) pb_base_info_->::PlayerBaseInfo::Clear();
  clear_has_pb_base_info();
}
inline const ::PlayerBaseInfo& DS_LoadPlayerData::pb_base_info() const {
  // @@protoc_insertion_point(field_get:DS_LoadPlayerData.pb_base_info)
  return pb_base_info_ != NULL ? *pb_base_info_
                         : *::PlayerBaseInfo::internal_default_instance();
}
inline ::PlayerBaseInfo* DS_LoadPlayerData::mutable_pb_base_info() {
  set_has_pb_base_info();
  if (pb_base_info_ == NULL) {
    pb_base_info_ = new ::PlayerBaseInfo;
  }
  // @@protoc_insertion_point(field_mutable:DS_LoadPlayerData.pb_base_info)
  return pb_base_info_;
}
inline ::PlayerBaseInfo* DS_LoadPlayerData::release_pb_base_info() {
  // @@protoc_insertion_point(field_release:DS_LoadPlayerData.pb_base_info)
  clear_has_pb_base_info();
  ::PlayerBaseInfo* temp = pb_base_info_;
  pb_base_info_ = NULL;
  return temp;
}
inline void DS_LoadPlayerData::set_allocated_pb_base_info(::PlayerBaseInfo* pb_base_info) {
  delete pb_base_info_;
  pb_base_info_ = pb_base_info;
  if (pb_base_info) {
    set_has_pb_base_info();
  } else {
    clear_has_pb_base_info();
  }
  // @@protoc_insertion_point(field_set_allocated:DS_LoadPlayerData.pb_base_info)
}

// optional .ItemBagInfo pb_item_bag = 4;
inline bool DS_LoadPlayerData::has_pb_item_bag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_LoadPlayerData::set_has_pb_item_bag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_LoadPlayerData::clear_has_pb_item_bag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_LoadPlayerData::clear_pb_item_bag() {
  if (pb_item_bag_ != NULL) pb_item_bag_->::ItemBagInfo::Clear();
  clear_has_pb_item_bag();
}
inline const ::ItemBagInfo& DS_LoadPlayerData::pb_item_bag() const {
  // @@protoc_insertion_point(field_get:DS_LoadPlayerData.pb_item_bag)
  return pb_item_bag_ != NULL ? *pb_item_bag_
                         : *::ItemBagInfo::internal_default_instance();
}
inline ::ItemBagInfo* DS_LoadPlayerData::mutable_pb_item_bag() {
  set_has_pb_item_bag();
  if (pb_item_bag_ == NULL) {
    pb_item_bag_ = new ::ItemBagInfo;
  }
  // @@protoc_insertion_point(field_mutable:DS_LoadPlayerData.pb_item_bag)
  return pb_item_bag_;
}
inline ::ItemBagInfo* DS_LoadPlayerData::release_pb_item_bag() {
  // @@protoc_insertion_point(field_release:DS_LoadPlayerData.pb_item_bag)
  clear_has_pb_item_bag();
  ::ItemBagInfo* temp = pb_item_bag_;
  pb_item_bag_ = NULL;
  return temp;
}
inline void DS_LoadPlayerData::set_allocated_pb_item_bag(::ItemBagInfo* pb_item_bag) {
  delete pb_item_bag_;
  pb_item_bag_ = pb_item_bag;
  if (pb_item_bag) {
    set_has_pb_item_bag();
  } else {
    clear_has_pb_item_bag();
  }
  // @@protoc_insertion_point(field_set_allocated:DS_LoadPlayerData.pb_item_bag)
}

// optional .MailListInfo pb_mail_list = 5;
inline bool DS_LoadPlayerData::has_pb_mail_list() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DS_LoadPlayerData::set_has_pb_mail_list() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DS_LoadPlayerData::clear_has_pb_mail_list() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DS_LoadPlayerData::clear_pb_mail_list() {
  if (pb_mail_list_ != NULL) pb_mail_list_->::MailListInfo::Clear();
  clear_has_pb_mail_list();
}
inline const ::MailListInfo& DS_LoadPlayerData::pb_mail_list() const {
  // @@protoc_insertion_point(field_get:DS_LoadPlayerData.pb_mail_list)
  return pb_mail_list_ != NULL ? *pb_mail_list_
                         : *::MailListInfo::internal_default_instance();
}
inline ::MailListInfo* DS_LoadPlayerData::mutable_pb_mail_list() {
  set_has_pb_mail_list();
  if (pb_mail_list_ == NULL) {
    pb_mail_list_ = new ::MailListInfo;
  }
  // @@protoc_insertion_point(field_mutable:DS_LoadPlayerData.pb_mail_list)
  return pb_mail_list_;
}
inline ::MailListInfo* DS_LoadPlayerData::release_pb_mail_list() {
  // @@protoc_insertion_point(field_release:DS_LoadPlayerData.pb_mail_list)
  clear_has_pb_mail_list();
  ::MailListInfo* temp = pb_mail_list_;
  pb_mail_list_ = NULL;
  return temp;
}
inline void DS_LoadPlayerData::set_allocated_pb_mail_list(::MailListInfo* pb_mail_list) {
  delete pb_mail_list_;
  pb_mail_list_ = pb_mail_list;
  if (pb_mail_list) {
    set_has_pb_mail_list();
  } else {
    clear_has_pb_mail_list();
  }
  // @@protoc_insertion_point(field_set_allocated:DS_LoadPlayerData.pb_mail_list)
}

// -------------------------------------------------------------------

// SD_SavePlayerData

// optional int32 guid = 1;
inline bool SD_SavePlayerData::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_SavePlayerData::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_SavePlayerData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_SavePlayerData::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_SavePlayerData::guid() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerData.guid)
  return guid_;
}
inline void SD_SavePlayerData::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_SavePlayerData.guid)
}

// optional .PlayerBaseInfo pb_base_info = 2;
inline bool SD_SavePlayerData::has_pb_base_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_SavePlayerData::set_has_pb_base_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_SavePlayerData::clear_has_pb_base_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_SavePlayerData::clear_pb_base_info() {
  if (pb_base_info_ != NULL) pb_base_info_->::PlayerBaseInfo::Clear();
  clear_has_pb_base_info();
}
inline const ::PlayerBaseInfo& SD_SavePlayerData::pb_base_info() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerData.pb_base_info)
  return pb_base_info_ != NULL ? *pb_base_info_
                         : *::PlayerBaseInfo::internal_default_instance();
}
inline ::PlayerBaseInfo* SD_SavePlayerData::mutable_pb_base_info() {
  set_has_pb_base_info();
  if (pb_base_info_ == NULL) {
    pb_base_info_ = new ::PlayerBaseInfo;
  }
  // @@protoc_insertion_point(field_mutable:SD_SavePlayerData.pb_base_info)
  return pb_base_info_;
}
inline ::PlayerBaseInfo* SD_SavePlayerData::release_pb_base_info() {
  // @@protoc_insertion_point(field_release:SD_SavePlayerData.pb_base_info)
  clear_has_pb_base_info();
  ::PlayerBaseInfo* temp = pb_base_info_;
  pb_base_info_ = NULL;
  return temp;
}
inline void SD_SavePlayerData::set_allocated_pb_base_info(::PlayerBaseInfo* pb_base_info) {
  delete pb_base_info_;
  pb_base_info_ = pb_base_info;
  if (pb_base_info) {
    set_has_pb_base_info();
  } else {
    clear_has_pb_base_info();
  }
  // @@protoc_insertion_point(field_set_allocated:SD_SavePlayerData.pb_base_info)
}

// -------------------------------------------------------------------

// SS_ChangeGame

// optional int32 guid = 1;
inline bool SS_ChangeGame::has_guid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SS_ChangeGame::set_has_guid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SS_ChangeGame::clear_has_guid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SS_ChangeGame::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SS_ChangeGame::guid() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.guid)
  return guid_;
}
inline void SS_ChangeGame::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.guid)
}

// optional int32 session_id = 2;
inline bool SS_ChangeGame::has_session_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SS_ChangeGame::set_has_session_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SS_ChangeGame::clear_has_session_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SS_ChangeGame::clear_session_id() {
  session_id_ = 0;
  clear_has_session_id();
}
inline ::google::protobuf::int32 SS_ChangeGame::session_id() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.session_id)
  return session_id_;
}
inline void SS_ChangeGame::set_session_id(::google::protobuf::int32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.session_id)
}

// optional int32 gate_id = 3;
inline bool SS_ChangeGame::has_gate_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SS_ChangeGame::set_has_gate_id() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SS_ChangeGame::clear_has_gate_id() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SS_ChangeGame::clear_gate_id() {
  gate_id_ = 0;
  clear_has_gate_id();
}
inline ::google::protobuf::int32 SS_ChangeGame::gate_id() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.gate_id)
  return gate_id_;
}
inline void SS_ChangeGame::set_gate_id(::google::protobuf::int32 value) {
  set_has_gate_id();
  gate_id_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.gate_id)
}

// optional string account = 4;
inline bool SS_ChangeGame::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SS_ChangeGame::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SS_ChangeGame::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SS_ChangeGame::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& SS_ChangeGame::account() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.account)
  return account_.GetNoArena();
}
inline void SS_ChangeGame::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SS_ChangeGame.account)
}
#if LANG_CXX11
inline void SS_ChangeGame::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SS_ChangeGame.account)
}
#endif
inline void SS_ChangeGame::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SS_ChangeGame.account)
}
inline void SS_ChangeGame::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SS_ChangeGame.account)
}
inline ::std::string* SS_ChangeGame::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:SS_ChangeGame.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SS_ChangeGame::release_account() {
  // @@protoc_insertion_point(field_release:SS_ChangeGame.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SS_ChangeGame::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:SS_ChangeGame.account)
}

// optional string nickname = 5;
inline bool SS_ChangeGame::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SS_ChangeGame::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SS_ChangeGame::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SS_ChangeGame::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& SS_ChangeGame::nickname() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.nickname)
  return nickname_.GetNoArena();
}
inline void SS_ChangeGame::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SS_ChangeGame.nickname)
}
#if LANG_CXX11
inline void SS_ChangeGame::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SS_ChangeGame.nickname)
}
#endif
inline void SS_ChangeGame::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SS_ChangeGame.nickname)
}
inline void SS_ChangeGame::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SS_ChangeGame.nickname)
}
inline ::std::string* SS_ChangeGame::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:SS_ChangeGame.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SS_ChangeGame::release_nickname() {
  // @@protoc_insertion_point(field_release:SS_ChangeGame.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SS_ChangeGame::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:SS_ChangeGame.nickname)
}

// optional int32 vip = 6;
inline bool SS_ChangeGame::has_vip() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SS_ChangeGame::set_has_vip() {
  _has_bits_[0] |= 0x00040000u;
}
inline void SS_ChangeGame::clear_has_vip() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void SS_ChangeGame::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 SS_ChangeGame::vip() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.vip)
  return vip_;
}
inline void SS_ChangeGame::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.vip)
}

// optional int32 login_time = 7;
inline bool SS_ChangeGame::has_login_time() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SS_ChangeGame::set_has_login_time() {
  _has_bits_[0] |= 0x00080000u;
}
inline void SS_ChangeGame::clear_has_login_time() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void SS_ChangeGame::clear_login_time() {
  login_time_ = 0;
  clear_has_login_time();
}
inline ::google::protobuf::int32 SS_ChangeGame::login_time() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.login_time)
  return login_time_;
}
inline void SS_ChangeGame::set_login_time(::google::protobuf::int32 value) {
  set_has_login_time();
  login_time_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.login_time)
}

// optional int32 logout_time = 8;
inline bool SS_ChangeGame::has_logout_time() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SS_ChangeGame::set_has_logout_time() {
  _has_bits_[0] |= 0x00100000u;
}
inline void SS_ChangeGame::clear_has_logout_time() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void SS_ChangeGame::clear_logout_time() {
  logout_time_ = 0;
  clear_has_logout_time();
}
inline ::google::protobuf::int32 SS_ChangeGame::logout_time() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.logout_time)
  return logout_time_;
}
inline void SS_ChangeGame::set_logout_time(::google::protobuf::int32 value) {
  set_has_logout_time();
  logout_time_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.logout_time)
}

// optional bool bank_password = 9;
inline bool SS_ChangeGame::has_bank_password() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void SS_ChangeGame::set_has_bank_password() {
  _has_bits_[0] |= 0x01000000u;
}
inline void SS_ChangeGame::clear_has_bank_password() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void SS_ChangeGame::clear_bank_password() {
  bank_password_ = false;
  clear_has_bank_password();
}
inline bool SS_ChangeGame::bank_password() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.bank_password)
  return bank_password_;
}
inline void SS_ChangeGame::set_bank_password(bool value) {
  set_has_bank_password();
  bank_password_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.bank_password)
}

// optional bool bank_login = 10;
inline bool SS_ChangeGame::has_bank_login() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void SS_ChangeGame::set_has_bank_login() {
  _has_bits_[0] |= 0x02000000u;
}
inline void SS_ChangeGame::clear_has_bank_login() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void SS_ChangeGame::clear_bank_login() {
  bank_login_ = false;
  clear_has_bank_login();
}
inline bool SS_ChangeGame::bank_login() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.bank_login)
  return bank_login_;
}
inline void SS_ChangeGame::set_bank_login(bool value) {
  set_has_bank_login();
  bank_login_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.bank_login)
}

// optional bool is_guest = 11;
inline bool SS_ChangeGame::has_is_guest() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void SS_ChangeGame::set_has_is_guest() {
  _has_bits_[0] |= 0x04000000u;
}
inline void SS_ChangeGame::clear_has_is_guest() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void SS_ChangeGame::clear_is_guest() {
  is_guest_ = false;
  clear_has_is_guest();
}
inline bool SS_ChangeGame::is_guest() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.is_guest)
  return is_guest_;
}
inline void SS_ChangeGame::set_is_guest(bool value) {
  set_has_is_guest();
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.is_guest)
}

// optional int32 online_award_start_time = 12;
inline bool SS_ChangeGame::has_online_award_start_time() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void SS_ChangeGame::set_has_online_award_start_time() {
  _has_bits_[0] |= 0x00200000u;
}
inline void SS_ChangeGame::clear_has_online_award_start_time() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void SS_ChangeGame::clear_online_award_start_time() {
  online_award_start_time_ = 0;
  clear_has_online_award_start_time();
}
inline ::google::protobuf::int32 SS_ChangeGame::online_award_start_time() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.online_award_start_time)
  return online_award_start_time_;
}
inline void SS_ChangeGame::set_online_award_start_time(::google::protobuf::int32 value) {
  set_has_online_award_start_time();
  online_award_start_time_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.online_award_start_time)
}

// optional int32 game_id = 13;
inline bool SS_ChangeGame::has_game_id() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void SS_ChangeGame::set_has_game_id() {
  _has_bits_[0] |= 0x00400000u;
}
inline void SS_ChangeGame::clear_has_game_id() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void SS_ChangeGame::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 SS_ChangeGame::game_id() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.game_id)
  return game_id_;
}
inline void SS_ChangeGame::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.game_id)
}

// optional int32 first_game_type = 14;
inline bool SS_ChangeGame::has_first_game_type() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void SS_ChangeGame::set_has_first_game_type() {
  _has_bits_[0] |= 0x00800000u;
}
inline void SS_ChangeGame::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void SS_ChangeGame::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 SS_ChangeGame::first_game_type() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.first_game_type)
  return first_game_type_;
}
inline void SS_ChangeGame::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.first_game_type)
}

// optional int32 second_game_type = 15;
inline bool SS_ChangeGame::has_second_game_type() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void SS_ChangeGame::set_has_second_game_type() {
  _has_bits_[0] |= 0x10000000u;
}
inline void SS_ChangeGame::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void SS_ChangeGame::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
inline ::google::protobuf::int32 SS_ChangeGame::second_game_type() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.second_game_type)
  return second_game_type_;
}
inline void SS_ChangeGame::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.second_game_type)
}

// optional string phone = 16;
inline bool SS_ChangeGame::has_phone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SS_ChangeGame::set_has_phone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SS_ChangeGame::clear_has_phone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SS_ChangeGame::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& SS_ChangeGame::phone() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.phone)
  return phone_.GetNoArena();
}
inline void SS_ChangeGame::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SS_ChangeGame.phone)
}
#if LANG_CXX11
inline void SS_ChangeGame::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SS_ChangeGame.phone)
}
#endif
inline void SS_ChangeGame::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SS_ChangeGame.phone)
}
inline void SS_ChangeGame::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SS_ChangeGame.phone)
}
inline ::std::string* SS_ChangeGame::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:SS_ChangeGame.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SS_ChangeGame::release_phone() {
  // @@protoc_insertion_point(field_release:SS_ChangeGame.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SS_ChangeGame::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:SS_ChangeGame.phone)
}

// optional string phone_type = 17;
inline bool SS_ChangeGame::has_phone_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SS_ChangeGame::set_has_phone_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SS_ChangeGame::clear_has_phone_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SS_ChangeGame::clear_phone_type() {
  phone_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_type();
}
inline const ::std::string& SS_ChangeGame::phone_type() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.phone_type)
  return phone_type_.GetNoArena();
}
inline void SS_ChangeGame::set_phone_type(const ::std::string& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SS_ChangeGame.phone_type)
}
#if LANG_CXX11
inline void SS_ChangeGame::set_phone_type(::std::string&& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SS_ChangeGame.phone_type)
}
#endif
inline void SS_ChangeGame::set_phone_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SS_ChangeGame.phone_type)
}
inline void SS_ChangeGame::set_phone_type(const char* value, size_t size) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SS_ChangeGame.phone_type)
}
inline ::std::string* SS_ChangeGame::mutable_phone_type() {
  set_has_phone_type();
  // @@protoc_insertion_point(field_mutable:SS_ChangeGame.phone_type)
  return phone_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SS_ChangeGame::release_phone_type() {
  // @@protoc_insertion_point(field_release:SS_ChangeGame.phone_type)
  clear_has_phone_type();
  return phone_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SS_ChangeGame::set_allocated_phone_type(::std::string* phone_type) {
  if (phone_type != NULL) {
    set_has_phone_type();
  } else {
    clear_has_phone_type();
  }
  phone_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_type);
  // @@protoc_insertion_point(field_set_allocated:SS_ChangeGame.phone_type)
}

// optional string version = 18;
inline bool SS_ChangeGame::has_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SS_ChangeGame::set_has_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SS_ChangeGame::clear_has_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SS_ChangeGame::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& SS_ChangeGame::version() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.version)
  return version_.GetNoArena();
}
inline void SS_ChangeGame::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SS_ChangeGame.version)
}
#if LANG_CXX11
inline void SS_ChangeGame::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SS_ChangeGame.version)
}
#endif
inline void SS_ChangeGame::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SS_ChangeGame.version)
}
inline void SS_ChangeGame::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SS_ChangeGame.version)
}
inline ::std::string* SS_ChangeGame::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:SS_ChangeGame.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SS_ChangeGame::release_version() {
  // @@protoc_insertion_point(field_release:SS_ChangeGame.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SS_ChangeGame::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:SS_ChangeGame.version)
}

// optional string channel_id = 19;
inline bool SS_ChangeGame::has_channel_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SS_ChangeGame::set_has_channel_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SS_ChangeGame::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SS_ChangeGame::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& SS_ChangeGame::channel_id() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.channel_id)
  return channel_id_.GetNoArena();
}
inline void SS_ChangeGame::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SS_ChangeGame.channel_id)
}
#if LANG_CXX11
inline void SS_ChangeGame::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SS_ChangeGame.channel_id)
}
#endif
inline void SS_ChangeGame::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SS_ChangeGame.channel_id)
}
inline void SS_ChangeGame::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SS_ChangeGame.channel_id)
}
inline ::std::string* SS_ChangeGame::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:SS_ChangeGame.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SS_ChangeGame::release_channel_id() {
  // @@protoc_insertion_point(field_release:SS_ChangeGame.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SS_ChangeGame::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:SS_ChangeGame.channel_id)
}

// optional string package_name = 20;
inline bool SS_ChangeGame::has_package_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SS_ChangeGame::set_has_package_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SS_ChangeGame::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SS_ChangeGame::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& SS_ChangeGame::package_name() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.package_name)
  return package_name_.GetNoArena();
}
inline void SS_ChangeGame::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SS_ChangeGame.package_name)
}
#if LANG_CXX11
inline void SS_ChangeGame::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SS_ChangeGame.package_name)
}
#endif
inline void SS_ChangeGame::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SS_ChangeGame.package_name)
}
inline void SS_ChangeGame::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SS_ChangeGame.package_name)
}
inline ::std::string* SS_ChangeGame::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:SS_ChangeGame.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SS_ChangeGame::release_package_name() {
  // @@protoc_insertion_point(field_release:SS_ChangeGame.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SS_ChangeGame::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:SS_ChangeGame.package_name)
}

// optional string imei = 21;
inline bool SS_ChangeGame::has_imei() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SS_ChangeGame::set_has_imei() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SS_ChangeGame::clear_has_imei() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SS_ChangeGame::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
inline const ::std::string& SS_ChangeGame::imei() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.imei)
  return imei_.GetNoArena();
}
inline void SS_ChangeGame::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SS_ChangeGame.imei)
}
#if LANG_CXX11
inline void SS_ChangeGame::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SS_ChangeGame.imei)
}
#endif
inline void SS_ChangeGame::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SS_ChangeGame.imei)
}
inline void SS_ChangeGame::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SS_ChangeGame.imei)
}
inline ::std::string* SS_ChangeGame::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:SS_ChangeGame.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SS_ChangeGame::release_imei() {
  // @@protoc_insertion_point(field_release:SS_ChangeGame.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SS_ChangeGame::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:SS_ChangeGame.imei)
}

// optional string ip = 22;
inline bool SS_ChangeGame::has_ip() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SS_ChangeGame::set_has_ip() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SS_ChangeGame::clear_has_ip() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SS_ChangeGame::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& SS_ChangeGame::ip() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.ip)
  return ip_.GetNoArena();
}
inline void SS_ChangeGame::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SS_ChangeGame.ip)
}
#if LANG_CXX11
inline void SS_ChangeGame::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SS_ChangeGame.ip)
}
#endif
inline void SS_ChangeGame::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SS_ChangeGame.ip)
}
inline void SS_ChangeGame::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SS_ChangeGame.ip)
}
inline ::std::string* SS_ChangeGame::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:SS_ChangeGame.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SS_ChangeGame::release_ip() {
  // @@protoc_insertion_point(field_release:SS_ChangeGame.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SS_ChangeGame::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:SS_ChangeGame.ip)
}

// optional string ip_area = 23;
inline bool SS_ChangeGame::has_ip_area() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SS_ChangeGame::set_has_ip_area() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SS_ChangeGame::clear_has_ip_area() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SS_ChangeGame::clear_ip_area() {
  ip_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip_area();
}
inline const ::std::string& SS_ChangeGame::ip_area() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.ip_area)
  return ip_area_.GetNoArena();
}
inline void SS_ChangeGame::set_ip_area(const ::std::string& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SS_ChangeGame.ip_area)
}
#if LANG_CXX11
inline void SS_ChangeGame::set_ip_area(::std::string&& value) {
  set_has_ip_area();
  ip_area_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SS_ChangeGame.ip_area)
}
#endif
inline void SS_ChangeGame::set_ip_area(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SS_ChangeGame.ip_area)
}
inline void SS_ChangeGame::set_ip_area(const char* value, size_t size) {
  set_has_ip_area();
  ip_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SS_ChangeGame.ip_area)
}
inline ::std::string* SS_ChangeGame::mutable_ip_area() {
  set_has_ip_area();
  // @@protoc_insertion_point(field_mutable:SS_ChangeGame.ip_area)
  return ip_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SS_ChangeGame::release_ip_area() {
  // @@protoc_insertion_point(field_release:SS_ChangeGame.ip_area)
  clear_has_ip_area();
  return ip_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SS_ChangeGame::set_allocated_ip_area(::std::string* ip_area) {
  if (ip_area != NULL) {
    set_has_ip_area();
  } else {
    clear_has_ip_area();
  }
  ip_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_area);
  // @@protoc_insertion_point(field_set_allocated:SS_ChangeGame.ip_area)
}

// optional int32 risk = 24;
inline bool SS_ChangeGame::has_risk() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void SS_ChangeGame::set_has_risk() {
  _has_bits_[0] |= 0x20000000u;
}
inline void SS_ChangeGame::clear_has_risk() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void SS_ChangeGame::clear_risk() {
  risk_ = 0;
  clear_has_risk();
}
inline ::google::protobuf::int32 SS_ChangeGame::risk() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.risk)
  return risk_;
}
inline void SS_ChangeGame::set_risk(::google::protobuf::int32 value) {
  set_has_risk();
  risk_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.risk)
}

// optional string create_channel_id = 25;
inline bool SS_ChangeGame::has_create_channel_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SS_ChangeGame::set_has_create_channel_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SS_ChangeGame::clear_has_create_channel_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SS_ChangeGame::clear_create_channel_id() {
  create_channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_create_channel_id();
}
inline const ::std::string& SS_ChangeGame::create_channel_id() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.create_channel_id)
  return create_channel_id_.GetNoArena();
}
inline void SS_ChangeGame::set_create_channel_id(const ::std::string& value) {
  set_has_create_channel_id();
  create_channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SS_ChangeGame.create_channel_id)
}
#if LANG_CXX11
inline void SS_ChangeGame::set_create_channel_id(::std::string&& value) {
  set_has_create_channel_id();
  create_channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SS_ChangeGame.create_channel_id)
}
#endif
inline void SS_ChangeGame::set_create_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_create_channel_id();
  create_channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SS_ChangeGame.create_channel_id)
}
inline void SS_ChangeGame::set_create_channel_id(const char* value, size_t size) {
  set_has_create_channel_id();
  create_channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SS_ChangeGame.create_channel_id)
}
inline ::std::string* SS_ChangeGame::mutable_create_channel_id() {
  set_has_create_channel_id();
  // @@protoc_insertion_point(field_mutable:SS_ChangeGame.create_channel_id)
  return create_channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SS_ChangeGame::release_create_channel_id() {
  // @@protoc_insertion_point(field_release:SS_ChangeGame.create_channel_id)
  clear_has_create_channel_id();
  return create_channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SS_ChangeGame::set_allocated_create_channel_id(::std::string* create_channel_id) {
  if (create_channel_id != NULL) {
    set_has_create_channel_id();
  } else {
    clear_has_create_channel_id();
  }
  create_channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), create_channel_id);
  // @@protoc_insertion_point(field_set_allocated:SS_ChangeGame.create_channel_id)
}

// optional bool enable_transfer = 26;
inline bool SS_ChangeGame::has_enable_transfer() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void SS_ChangeGame::set_has_enable_transfer() {
  _has_bits_[0] |= 0x08000000u;
}
inline void SS_ChangeGame::clear_has_enable_transfer() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void SS_ChangeGame::clear_enable_transfer() {
  enable_transfer_ = false;
  clear_has_enable_transfer();
}
inline bool SS_ChangeGame::enable_transfer() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.enable_transfer)
  return enable_transfer_;
}
inline void SS_ChangeGame::set_enable_transfer(bool value) {
  set_has_enable_transfer();
  enable_transfer_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.enable_transfer)
}

// optional int32 inviter_guid = 27;
inline bool SS_ChangeGame::has_inviter_guid() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void SS_ChangeGame::set_has_inviter_guid() {
  _has_bits_[0] |= 0x40000000u;
}
inline void SS_ChangeGame::clear_has_inviter_guid() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void SS_ChangeGame::clear_inviter_guid() {
  inviter_guid_ = 0;
  clear_has_inviter_guid();
}
inline ::google::protobuf::int32 SS_ChangeGame::inviter_guid() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.inviter_guid)
  return inviter_guid_;
}
inline void SS_ChangeGame::set_inviter_guid(::google::protobuf::int32 value) {
  set_has_inviter_guid();
  inviter_guid_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.inviter_guid)
}

// optional string invite_code = 28;
inline bool SS_ChangeGame::has_invite_code() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SS_ChangeGame::set_has_invite_code() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SS_ChangeGame::clear_has_invite_code() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SS_ChangeGame::clear_invite_code() {
  invite_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invite_code();
}
inline const ::std::string& SS_ChangeGame::invite_code() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.invite_code)
  return invite_code_.GetNoArena();
}
inline void SS_ChangeGame::set_invite_code(const ::std::string& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SS_ChangeGame.invite_code)
}
#if LANG_CXX11
inline void SS_ChangeGame::set_invite_code(::std::string&& value) {
  set_has_invite_code();
  invite_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SS_ChangeGame.invite_code)
}
#endif
inline void SS_ChangeGame::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SS_ChangeGame.invite_code)
}
inline void SS_ChangeGame::set_invite_code(const char* value, size_t size) {
  set_has_invite_code();
  invite_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SS_ChangeGame.invite_code)
}
inline ::std::string* SS_ChangeGame::mutable_invite_code() {
  set_has_invite_code();
  // @@protoc_insertion_point(field_mutable:SS_ChangeGame.invite_code)
  return invite_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SS_ChangeGame::release_invite_code() {
  // @@protoc_insertion_point(field_release:SS_ChangeGame.invite_code)
  clear_has_invite_code();
  return invite_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SS_ChangeGame::set_allocated_invite_code(::std::string* invite_code) {
  if (invite_code != NULL) {
    set_has_invite_code();
  } else {
    clear_has_invite_code();
  }
  invite_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invite_code);
  // @@protoc_insertion_point(field_set_allocated:SS_ChangeGame.invite_code)
}

// optional .PlayerBaseInfo pb_base_info = 29;
inline bool SS_ChangeGame::has_pb_base_info() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SS_ChangeGame::set_has_pb_base_info() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SS_ChangeGame::clear_has_pb_base_info() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SS_ChangeGame::clear_pb_base_info() {
  if (pb_base_info_ != NULL) pb_base_info_->::PlayerBaseInfo::Clear();
  clear_has_pb_base_info();
}
inline const ::PlayerBaseInfo& SS_ChangeGame::pb_base_info() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.pb_base_info)
  return pb_base_info_ != NULL ? *pb_base_info_
                         : *::PlayerBaseInfo::internal_default_instance();
}
inline ::PlayerBaseInfo* SS_ChangeGame::mutable_pb_base_info() {
  set_has_pb_base_info();
  if (pb_base_info_ == NULL) {
    pb_base_info_ = new ::PlayerBaseInfo;
  }
  // @@protoc_insertion_point(field_mutable:SS_ChangeGame.pb_base_info)
  return pb_base_info_;
}
inline ::PlayerBaseInfo* SS_ChangeGame::release_pb_base_info() {
  // @@protoc_insertion_point(field_release:SS_ChangeGame.pb_base_info)
  clear_has_pb_base_info();
  ::PlayerBaseInfo* temp = pb_base_info_;
  pb_base_info_ = NULL;
  return temp;
}
inline void SS_ChangeGame::set_allocated_pb_base_info(::PlayerBaseInfo* pb_base_info) {
  delete pb_base_info_;
  pb_base_info_ = pb_base_info;
  if (pb_base_info) {
    set_has_pb_base_info();
  } else {
    clear_has_pb_base_info();
  }
  // @@protoc_insertion_point(field_set_allocated:SS_ChangeGame.pb_base_info)
}

// optional int32 private_room_opt = 30;
inline bool SS_ChangeGame::has_private_room_opt() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void SS_ChangeGame::set_has_private_room_opt() {
  _has_bits_[0] |= 0x80000000u;
}
inline void SS_ChangeGame::clear_has_private_room_opt() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void SS_ChangeGame::clear_private_room_opt() {
  private_room_opt_ = 0;
  clear_has_private_room_opt();
}
inline ::google::protobuf::int32 SS_ChangeGame::private_room_opt() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.private_room_opt)
  return private_room_opt_;
}
inline void SS_ChangeGame::set_private_room_opt(::google::protobuf::int32 value) {
  set_has_private_room_opt();
  private_room_opt_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.private_room_opt)
}

// optional int32 owner_guid = 31;
inline bool SS_ChangeGame::has_owner_guid() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void SS_ChangeGame::set_has_owner_guid() {
  _has_bits_[1] |= 0x00000001u;
}
inline void SS_ChangeGame::clear_has_owner_guid() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void SS_ChangeGame::clear_owner_guid() {
  owner_guid_ = 0;
  clear_has_owner_guid();
}
inline ::google::protobuf::int32 SS_ChangeGame::owner_guid() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.owner_guid)
  return owner_guid_;
}
inline void SS_ChangeGame::set_owner_guid(::google::protobuf::int32 value) {
  set_has_owner_guid();
  owner_guid_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.owner_guid)
}

// optional int32 private_room_chair_count = 32;
inline bool SS_ChangeGame::has_private_room_chair_count() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void SS_ChangeGame::set_has_private_room_chair_count() {
  _has_bits_[1] |= 0x00000002u;
}
inline void SS_ChangeGame::clear_has_private_room_chair_count() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void SS_ChangeGame::clear_private_room_chair_count() {
  private_room_chair_count_ = 0;
  clear_has_private_room_chair_count();
}
inline ::google::protobuf::int32 SS_ChangeGame::private_room_chair_count() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.private_room_chair_count)
  return private_room_chair_count_;
}
inline void SS_ChangeGame::set_private_room_chair_count(::google::protobuf::int32 value) {
  set_has_private_room_chair_count();
  private_room_chair_count_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.private_room_chair_count)
}

// optional int32 private_room_score_type = 33;
inline bool SS_ChangeGame::has_private_room_score_type() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void SS_ChangeGame::set_has_private_room_score_type() {
  _has_bits_[1] |= 0x00000004u;
}
inline void SS_ChangeGame::clear_has_private_room_score_type() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void SS_ChangeGame::clear_private_room_score_type() {
  private_room_score_type_ = 0;
  clear_has_private_room_score_type();
}
inline ::google::protobuf::int32 SS_ChangeGame::private_room_score_type() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.private_room_score_type)
  return private_room_score_type_;
}
inline void SS_ChangeGame::set_private_room_score_type(::google::protobuf::int32 value) {
  set_has_private_room_score_type();
  private_room_score_type_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.private_room_score_type)
}

// optional string alipay_account = 34;
inline bool SS_ChangeGame::has_alipay_account() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SS_ChangeGame::set_has_alipay_account() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SS_ChangeGame::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SS_ChangeGame::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
inline const ::std::string& SS_ChangeGame::alipay_account() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.alipay_account)
  return alipay_account_.GetNoArena();
}
inline void SS_ChangeGame::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SS_ChangeGame.alipay_account)
}
#if LANG_CXX11
inline void SS_ChangeGame::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SS_ChangeGame.alipay_account)
}
#endif
inline void SS_ChangeGame::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SS_ChangeGame.alipay_account)
}
inline void SS_ChangeGame::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SS_ChangeGame.alipay_account)
}
inline ::std::string* SS_ChangeGame::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:SS_ChangeGame.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SS_ChangeGame::release_alipay_account() {
  // @@protoc_insertion_point(field_release:SS_ChangeGame.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SS_ChangeGame::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:SS_ChangeGame.alipay_account)
}

// optional string alipay_name = 35;
inline bool SS_ChangeGame::has_alipay_name() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SS_ChangeGame::set_has_alipay_name() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SS_ChangeGame::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SS_ChangeGame::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
inline const ::std::string& SS_ChangeGame::alipay_name() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.alipay_name)
  return alipay_name_.GetNoArena();
}
inline void SS_ChangeGame::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SS_ChangeGame.alipay_name)
}
#if LANG_CXX11
inline void SS_ChangeGame::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SS_ChangeGame.alipay_name)
}
#endif
inline void SS_ChangeGame::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SS_ChangeGame.alipay_name)
}
inline void SS_ChangeGame::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SS_ChangeGame.alipay_name)
}
inline ::std::string* SS_ChangeGame::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:SS_ChangeGame.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SS_ChangeGame::release_alipay_name() {
  // @@protoc_insertion_point(field_release:SS_ChangeGame.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SS_ChangeGame::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:SS_ChangeGame.alipay_name)
}

// optional int32 change_alipay_num = 36;
inline bool SS_ChangeGame::has_change_alipay_num() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void SS_ChangeGame::set_has_change_alipay_num() {
  _has_bits_[1] |= 0x00000008u;
}
inline void SS_ChangeGame::clear_has_change_alipay_num() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void SS_ChangeGame::clear_change_alipay_num() {
  change_alipay_num_ = 0;
  clear_has_change_alipay_num();
}
inline ::google::protobuf::int32 SS_ChangeGame::change_alipay_num() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.change_alipay_num)
  return change_alipay_num_;
}
inline void SS_ChangeGame::set_change_alipay_num(::google::protobuf::int32 value) {
  set_has_change_alipay_num();
  change_alipay_num_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.change_alipay_num)
}

// optional int32 ddz_dapai_times = 37;
inline bool SS_ChangeGame::has_ddz_dapai_times() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void SS_ChangeGame::set_has_ddz_dapai_times() {
  _has_bits_[1] |= 0x00000010u;
}
inline void SS_ChangeGame::clear_has_ddz_dapai_times() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void SS_ChangeGame::clear_ddz_dapai_times() {
  ddz_dapai_times_ = 0;
  clear_has_ddz_dapai_times();
}
inline ::google::protobuf::int32 SS_ChangeGame::ddz_dapai_times() const {
  // @@protoc_insertion_point(field_get:SS_ChangeGame.ddz_dapai_times)
  return ddz_dapai_times_;
}
inline void SS_ChangeGame::set_ddz_dapai_times(::google::protobuf::int32 value) {
  set_has_ddz_dapai_times();
  ddz_dapai_times_ = value;
  // @@protoc_insertion_point(field_set:SS_ChangeGame.ddz_dapai_times)
}

// -------------------------------------------------------------------

// LS_ChangeGameResult

// optional int32 guid = 1;
inline bool LS_ChangeGameResult::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_ChangeGameResult::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_ChangeGameResult::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_ChangeGameResult::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LS_ChangeGameResult::guid() const {
  // @@protoc_insertion_point(field_get:LS_ChangeGameResult.guid)
  return guid_;
}
inline void LS_ChangeGameResult::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LS_ChangeGameResult.guid)
}

// optional bool success = 2;
inline bool LS_ChangeGameResult::has_success() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LS_ChangeGameResult::set_has_success() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LS_ChangeGameResult::clear_has_success() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LS_ChangeGameResult::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool LS_ChangeGameResult::success() const {
  // @@protoc_insertion_point(field_get:LS_ChangeGameResult.success)
  return success_;
}
inline void LS_ChangeGameResult::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:LS_ChangeGameResult.success)
}

// optional .SS_ChangeGame change_msg = 3;
inline bool LS_ChangeGameResult::has_change_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_ChangeGameResult::set_has_change_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_ChangeGameResult::clear_has_change_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_ChangeGameResult::clear_change_msg() {
  if (change_msg_ != NULL) change_msg_->::SS_ChangeGame::Clear();
  clear_has_change_msg();
}
inline const ::SS_ChangeGame& LS_ChangeGameResult::change_msg() const {
  // @@protoc_insertion_point(field_get:LS_ChangeGameResult.change_msg)
  return change_msg_ != NULL ? *change_msg_
                         : *::SS_ChangeGame::internal_default_instance();
}
inline ::SS_ChangeGame* LS_ChangeGameResult::mutable_change_msg() {
  set_has_change_msg();
  if (change_msg_ == NULL) {
    change_msg_ = new ::SS_ChangeGame;
  }
  // @@protoc_insertion_point(field_mutable:LS_ChangeGameResult.change_msg)
  return change_msg_;
}
inline ::SS_ChangeGame* LS_ChangeGameResult::release_change_msg() {
  // @@protoc_insertion_point(field_release:LS_ChangeGameResult.change_msg)
  clear_has_change_msg();
  ::SS_ChangeGame* temp = change_msg_;
  change_msg_ = NULL;
  return temp;
}
inline void LS_ChangeGameResult::set_allocated_change_msg(::SS_ChangeGame* change_msg) {
  delete change_msg_;
  change_msg_ = change_msg;
  if (change_msg) {
    set_has_change_msg();
  } else {
    clear_has_change_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:LS_ChangeGameResult.change_msg)
}

// optional int32 game_id = 4;
inline bool LS_ChangeGameResult::has_game_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LS_ChangeGameResult::set_has_game_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LS_ChangeGameResult::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LS_ChangeGameResult::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 LS_ChangeGameResult::game_id() const {
  // @@protoc_insertion_point(field_get:LS_ChangeGameResult.game_id)
  return game_id_;
}
inline void LS_ChangeGameResult::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:LS_ChangeGameResult.game_id)
}

// -------------------------------------------------------------------

// SD_SavePlayerMoney

// optional int32 guid = 1;
inline bool SD_SavePlayerMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_SavePlayerMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_SavePlayerMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_SavePlayerMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_SavePlayerMoney::guid() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerMoney.guid)
  return guid_;
}
inline void SD_SavePlayerMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_SavePlayerMoney.guid)
}

// optional int64 money = 2;
inline bool SD_SavePlayerMoney::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_SavePlayerMoney::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_SavePlayerMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_SavePlayerMoney::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SD_SavePlayerMoney::money() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerMoney.money)
  return money_;
}
inline void SD_SavePlayerMoney::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SD_SavePlayerMoney.money)
}

// -------------------------------------------------------------------

// SD_SavePlayerBank

// optional int32 guid = 1;
inline bool SD_SavePlayerBank::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_SavePlayerBank::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_SavePlayerBank::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_SavePlayerBank::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_SavePlayerBank::guid() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerBank.guid)
  return guid_;
}
inline void SD_SavePlayerBank::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_SavePlayerBank.guid)
}

// optional int64 bank = 2;
inline bool SD_SavePlayerBank::has_bank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_SavePlayerBank::set_has_bank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_SavePlayerBank::clear_has_bank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_SavePlayerBank::clear_bank() {
  bank_ = GOOGLE_LONGLONG(0);
  clear_has_bank();
}
inline ::google::protobuf::int64 SD_SavePlayerBank::bank() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerBank.bank)
  return bank_;
}
inline void SD_SavePlayerBank::set_bank(::google::protobuf::int64 value) {
  set_has_bank();
  bank_ = value;
  // @@protoc_insertion_point(field_set:SD_SavePlayerBank.bank)
}

// -------------------------------------------------------------------

// SL_ChangeGameResult

// optional int32 guid = 1;
inline bool SL_ChangeGameResult::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SL_ChangeGameResult::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SL_ChangeGameResult::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SL_ChangeGameResult::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SL_ChangeGameResult::guid() const {
  // @@protoc_insertion_point(field_get:SL_ChangeGameResult.guid)
  return guid_;
}
inline void SL_ChangeGameResult::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SL_ChangeGameResult.guid)
}

// optional bool success = 2;
inline bool SL_ChangeGameResult::has_success() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SL_ChangeGameResult::set_has_success() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SL_ChangeGameResult::clear_has_success() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SL_ChangeGameResult::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool SL_ChangeGameResult::success() const {
  // @@protoc_insertion_point(field_get:SL_ChangeGameResult.success)
  return success_;
}
inline void SL_ChangeGameResult::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:SL_ChangeGameResult.success)
}

// optional .SS_ChangeGame change_msg = 3;
inline bool SL_ChangeGameResult::has_change_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SL_ChangeGameResult::set_has_change_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SL_ChangeGameResult::clear_has_change_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SL_ChangeGameResult::clear_change_msg() {
  if (change_msg_ != NULL) change_msg_->::SS_ChangeGame::Clear();
  clear_has_change_msg();
}
inline const ::SS_ChangeGame& SL_ChangeGameResult::change_msg() const {
  // @@protoc_insertion_point(field_get:SL_ChangeGameResult.change_msg)
  return change_msg_ != NULL ? *change_msg_
                         : *::SS_ChangeGame::internal_default_instance();
}
inline ::SS_ChangeGame* SL_ChangeGameResult::mutable_change_msg() {
  set_has_change_msg();
  if (change_msg_ == NULL) {
    change_msg_ = new ::SS_ChangeGame;
  }
  // @@protoc_insertion_point(field_mutable:SL_ChangeGameResult.change_msg)
  return change_msg_;
}
inline ::SS_ChangeGame* SL_ChangeGameResult::release_change_msg() {
  // @@protoc_insertion_point(field_release:SL_ChangeGameResult.change_msg)
  clear_has_change_msg();
  ::SS_ChangeGame* temp = change_msg_;
  change_msg_ = NULL;
  return temp;
}
inline void SL_ChangeGameResult::set_allocated_change_msg(::SS_ChangeGame* change_msg) {
  delete change_msg_;
  change_msg_ = change_msg;
  if (change_msg) {
    set_has_change_msg();
  } else {
    clear_has_change_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:SL_ChangeGameResult.change_msg)
}

// optional int32 game_id = 4;
inline bool SL_ChangeGameResult::has_game_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SL_ChangeGameResult::set_has_game_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SL_ChangeGameResult::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SL_ChangeGameResult::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 SL_ChangeGameResult::game_id() const {
  // @@protoc_insertion_point(field_get:SL_ChangeGameResult.game_id)
  return game_id_;
}
inline void SL_ChangeGameResult::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SL_ChangeGameResult.game_id)
}

// -------------------------------------------------------------------

// SS_JoinPrivateRoom

// optional int32 owner_guid = 1;
inline bool SS_JoinPrivateRoom::has_owner_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SS_JoinPrivateRoom::set_has_owner_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SS_JoinPrivateRoom::clear_has_owner_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SS_JoinPrivateRoom::clear_owner_guid() {
  owner_guid_ = 0;
  clear_has_owner_guid();
}
inline ::google::protobuf::int32 SS_JoinPrivateRoom::owner_guid() const {
  // @@protoc_insertion_point(field_get:SS_JoinPrivateRoom.owner_guid)
  return owner_guid_;
}
inline void SS_JoinPrivateRoom::set_owner_guid(::google::protobuf::int32 value) {
  set_has_owner_guid();
  owner_guid_ = value;
  // @@protoc_insertion_point(field_set:SS_JoinPrivateRoom.owner_guid)
}

// optional int32 owner_game_id = 2;
inline bool SS_JoinPrivateRoom::has_owner_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SS_JoinPrivateRoom::set_has_owner_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SS_JoinPrivateRoom::clear_has_owner_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SS_JoinPrivateRoom::clear_owner_game_id() {
  owner_game_id_ = 0;
  clear_has_owner_game_id();
}
inline ::google::protobuf::int32 SS_JoinPrivateRoom::owner_game_id() const {
  // @@protoc_insertion_point(field_get:SS_JoinPrivateRoom.owner_game_id)
  return owner_game_id_;
}
inline void SS_JoinPrivateRoom::set_owner_game_id(::google::protobuf::int32 value) {
  set_has_owner_game_id();
  owner_game_id_ = value;
  // @@protoc_insertion_point(field_set:SS_JoinPrivateRoom.owner_game_id)
}

// optional int32 first_game_type = 3;
inline bool SS_JoinPrivateRoom::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SS_JoinPrivateRoom::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SS_JoinPrivateRoom::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SS_JoinPrivateRoom::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 SS_JoinPrivateRoom::first_game_type() const {
  // @@protoc_insertion_point(field_get:SS_JoinPrivateRoom.first_game_type)
  return first_game_type_;
}
inline void SS_JoinPrivateRoom::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:SS_JoinPrivateRoom.first_game_type)
}

// optional int32 second_game_type = 4;
inline bool SS_JoinPrivateRoom::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SS_JoinPrivateRoom::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SS_JoinPrivateRoom::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SS_JoinPrivateRoom::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
inline ::google::protobuf::int32 SS_JoinPrivateRoom::second_game_type() const {
  // @@protoc_insertion_point(field_get:SS_JoinPrivateRoom.second_game_type)
  return second_game_type_;
}
inline void SS_JoinPrivateRoom::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:SS_JoinPrivateRoom.second_game_type)
}

// optional int32 private_room_score_type = 5;
inline bool SS_JoinPrivateRoom::has_private_room_score_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SS_JoinPrivateRoom::set_has_private_room_score_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SS_JoinPrivateRoom::clear_has_private_room_score_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SS_JoinPrivateRoom::clear_private_room_score_type() {
  private_room_score_type_ = 0;
  clear_has_private_room_score_type();
}
inline ::google::protobuf::int32 SS_JoinPrivateRoom::private_room_score_type() const {
  // @@protoc_insertion_point(field_get:SS_JoinPrivateRoom.private_room_score_type)
  return private_room_score_type_;
}
inline void SS_JoinPrivateRoom::set_private_room_score_type(::google::protobuf::int32 value) {
  set_has_private_room_score_type();
  private_room_score_type_ = value;
  // @@protoc_insertion_point(field_set:SS_JoinPrivateRoom.private_room_score_type)
}

// optional int32 guid = 6;
inline bool SS_JoinPrivateRoom::has_guid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SS_JoinPrivateRoom::set_has_guid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SS_JoinPrivateRoom::clear_has_guid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SS_JoinPrivateRoom::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SS_JoinPrivateRoom::guid() const {
  // @@protoc_insertion_point(field_get:SS_JoinPrivateRoom.guid)
  return guid_;
}
inline void SS_JoinPrivateRoom::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SS_JoinPrivateRoom.guid)
}

// optional int32 game_id = 7;
inline bool SS_JoinPrivateRoom::has_game_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SS_JoinPrivateRoom::set_has_game_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SS_JoinPrivateRoom::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SS_JoinPrivateRoom::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 SS_JoinPrivateRoom::game_id() const {
  // @@protoc_insertion_point(field_get:SS_JoinPrivateRoom.game_id)
  return game_id_;
}
inline void SS_JoinPrivateRoom::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SS_JoinPrivateRoom.game_id)
}

// -------------------------------------------------------------------

// SD_PrivateRoomLog

// optional int32 room_id = 1;
inline bool SD_PrivateRoomLog::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_PrivateRoomLog::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_PrivateRoomLog::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_PrivateRoomLog::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 SD_PrivateRoomLog::room_id() const {
  // @@protoc_insertion_point(field_get:SD_PrivateRoomLog.room_id)
  return room_id_;
}
inline void SD_PrivateRoomLog::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SD_PrivateRoomLog.room_id)
}

// optional int32 owner_guid = 2;
inline bool SD_PrivateRoomLog::has_owner_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_PrivateRoomLog::set_has_owner_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_PrivateRoomLog::clear_has_owner_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_PrivateRoomLog::clear_owner_guid() {
  owner_guid_ = 0;
  clear_has_owner_guid();
}
inline ::google::protobuf::int32 SD_PrivateRoomLog::owner_guid() const {
  // @@protoc_insertion_point(field_get:SD_PrivateRoomLog.owner_guid)
  return owner_guid_;
}
inline void SD_PrivateRoomLog::set_owner_guid(::google::protobuf::int32 value) {
  set_has_owner_guid();
  owner_guid_ = value;
  // @@protoc_insertion_point(field_set:SD_PrivateRoomLog.owner_guid)
}

// optional int32 first_game_type = 3;
inline bool SD_PrivateRoomLog::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_PrivateRoomLog::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_PrivateRoomLog::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_PrivateRoomLog::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 SD_PrivateRoomLog::first_game_type() const {
  // @@protoc_insertion_point(field_get:SD_PrivateRoomLog.first_game_type)
  return first_game_type_;
}
inline void SD_PrivateRoomLog::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:SD_PrivateRoomLog.first_game_type)
}

// optional int32 chair_max = 4;
inline bool SD_PrivateRoomLog::has_chair_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SD_PrivateRoomLog::set_has_chair_max() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SD_PrivateRoomLog::clear_has_chair_max() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SD_PrivateRoomLog::clear_chair_max() {
  chair_max_ = 0;
  clear_has_chair_max();
}
inline ::google::protobuf::int32 SD_PrivateRoomLog::chair_max() const {
  // @@protoc_insertion_point(field_get:SD_PrivateRoomLog.chair_max)
  return chair_max_;
}
inline void SD_PrivateRoomLog::set_chair_max(::google::protobuf::int32 value) {
  set_has_chair_max();
  chair_max_ = value;
  // @@protoc_insertion_point(field_set:SD_PrivateRoomLog.chair_max)
}

// optional int32 chair_count = 5;
inline bool SD_PrivateRoomLog::has_chair_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SD_PrivateRoomLog::set_has_chair_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SD_PrivateRoomLog::clear_has_chair_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SD_PrivateRoomLog::clear_chair_count() {
  chair_count_ = 0;
  clear_has_chair_count();
}
inline ::google::protobuf::int32 SD_PrivateRoomLog::chair_count() const {
  // @@protoc_insertion_point(field_get:SD_PrivateRoomLog.chair_count)
  return chair_count_;
}
inline void SD_PrivateRoomLog::set_chair_count(::google::protobuf::int32 value) {
  set_has_chair_count();
  chair_count_ = value;
  // @@protoc_insertion_point(field_set:SD_PrivateRoomLog.chair_count)
}

// optional int32 cell_money = 6;
inline bool SD_PrivateRoomLog::has_cell_money() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SD_PrivateRoomLog::set_has_cell_money() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SD_PrivateRoomLog::clear_has_cell_money() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SD_PrivateRoomLog::clear_cell_money() {
  cell_money_ = 0;
  clear_has_cell_money();
}
inline ::google::protobuf::int32 SD_PrivateRoomLog::cell_money() const {
  // @@protoc_insertion_point(field_get:SD_PrivateRoomLog.cell_money)
  return cell_money_;
}
inline void SD_PrivateRoomLog::set_cell_money(::google::protobuf::int32 value) {
  set_has_cell_money();
  cell_money_ = value;
  // @@protoc_insertion_point(field_set:SD_PrivateRoomLog.cell_money)
}

// optional int32 room_cost = 7;
inline bool SD_PrivateRoomLog::has_room_cost() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SD_PrivateRoomLog::set_has_room_cost() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SD_PrivateRoomLog::clear_has_room_cost() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SD_PrivateRoomLog::clear_room_cost() {
  room_cost_ = 0;
  clear_has_room_cost();
}
inline ::google::protobuf::int32 SD_PrivateRoomLog::room_cost() const {
  // @@protoc_insertion_point(field_get:SD_PrivateRoomLog.room_cost)
  return room_cost_;
}
inline void SD_PrivateRoomLog::set_room_cost(::google::protobuf::int32 value) {
  set_has_room_cost();
  room_cost_ = value;
  // @@protoc_insertion_point(field_set:SD_PrivateRoomLog.room_cost)
}

// optional int32 money_limit = 8;
inline bool SD_PrivateRoomLog::has_money_limit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SD_PrivateRoomLog::set_has_money_limit() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SD_PrivateRoomLog::clear_has_money_limit() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SD_PrivateRoomLog::clear_money_limit() {
  money_limit_ = 0;
  clear_has_money_limit();
}
inline ::google::protobuf::int32 SD_PrivateRoomLog::money_limit() const {
  // @@protoc_insertion_point(field_get:SD_PrivateRoomLog.money_limit)
  return money_limit_;
}
inline void SD_PrivateRoomLog::set_money_limit(::google::protobuf::int32 value) {
  set_has_money_limit();
  money_limit_ = value;
  // @@protoc_insertion_point(field_set:SD_PrivateRoomLog.money_limit)
}

// optional int32 room_state = 9;
inline bool SD_PrivateRoomLog::has_room_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SD_PrivateRoomLog::set_has_room_state() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SD_PrivateRoomLog::clear_has_room_state() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SD_PrivateRoomLog::clear_room_state() {
  room_state_ = 0;
  clear_has_room_state();
}
inline ::google::protobuf::int32 SD_PrivateRoomLog::room_state() const {
  // @@protoc_insertion_point(field_get:SD_PrivateRoomLog.room_state)
  return room_state_;
}
inline void SD_PrivateRoomLog::set_room_state(::google::protobuf::int32 value) {
  set_has_room_state();
  room_state_ = value;
  // @@protoc_insertion_point(field_set:SD_PrivateRoomLog.room_state)
}

// -------------------------------------------------------------------

// SD_FilishPrivateRoomLog

// optional int32 room_id = 1;
inline bool SD_FilishPrivateRoomLog::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_FilishPrivateRoomLog::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_FilishPrivateRoomLog::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_FilishPrivateRoomLog::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 SD_FilishPrivateRoomLog::room_id() const {
  // @@protoc_insertion_point(field_get:SD_FilishPrivateRoomLog.room_id)
  return room_id_;
}
inline void SD_FilishPrivateRoomLog::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SD_FilishPrivateRoomLog.room_id)
}

// optional int32 room_state = 2;
inline bool SD_FilishPrivateRoomLog::has_room_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_FilishPrivateRoomLog::set_has_room_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_FilishPrivateRoomLog::clear_has_room_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_FilishPrivateRoomLog::clear_room_state() {
  room_state_ = 0;
  clear_has_room_state();
}
inline ::google::protobuf::int32 SD_FilishPrivateRoomLog::room_state() const {
  // @@protoc_insertion_point(field_get:SD_FilishPrivateRoomLog.room_state)
  return room_state_;
}
inline void SD_FilishPrivateRoomLog::set_room_state(::google::protobuf::int32 value) {
  set_has_room_state();
  room_state_ = value;
  // @@protoc_insertion_point(field_set:SD_FilishPrivateRoomLog.room_state)
}

// -------------------------------------------------------------------

// SD_StartPrivateRoomLog

// optional int32 room_id = 1;
inline bool SD_StartPrivateRoomLog::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_StartPrivateRoomLog::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_StartPrivateRoomLog::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_StartPrivateRoomLog::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 SD_StartPrivateRoomLog::room_id() const {
  // @@protoc_insertion_point(field_get:SD_StartPrivateRoomLog.room_id)
  return room_id_;
}
inline void SD_StartPrivateRoomLog::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SD_StartPrivateRoomLog.room_id)
}

// repeated int32 player_guid = 2;
inline int SD_StartPrivateRoomLog::player_guid_size() const {
  return player_guid_.size();
}
inline void SD_StartPrivateRoomLog::clear_player_guid() {
  player_guid_.Clear();
}
inline ::google::protobuf::int32 SD_StartPrivateRoomLog::player_guid(int index) const {
  // @@protoc_insertion_point(field_get:SD_StartPrivateRoomLog.player_guid)
  return player_guid_.Get(index);
}
inline void SD_StartPrivateRoomLog::set_player_guid(int index, ::google::protobuf::int32 value) {
  player_guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:SD_StartPrivateRoomLog.player_guid)
}
inline void SD_StartPrivateRoomLog::add_player_guid(::google::protobuf::int32 value) {
  player_guid_.Add(value);
  // @@protoc_insertion_point(field_add:SD_StartPrivateRoomLog.player_guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SD_StartPrivateRoomLog::player_guid() const {
  // @@protoc_insertion_point(field_list:SD_StartPrivateRoomLog.player_guid)
  return player_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SD_StartPrivateRoomLog::mutable_player_guid() {
  // @@protoc_insertion_point(field_mutable_list:SD_StartPrivateRoomLog.player_guid)
  return &player_guid_;
}

// -------------------------------------------------------------------

// SD_LoadAndroidData

// optional int32 opt_type = 1;
inline bool SD_LoadAndroidData::has_opt_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_LoadAndroidData::set_has_opt_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_LoadAndroidData::clear_has_opt_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_LoadAndroidData::clear_opt_type() {
  opt_type_ = 0;
  clear_has_opt_type();
}
inline ::google::protobuf::int32 SD_LoadAndroidData::opt_type() const {
  // @@protoc_insertion_point(field_get:SD_LoadAndroidData.opt_type)
  return opt_type_;
}
inline void SD_LoadAndroidData::set_opt_type(::google::protobuf::int32 value) {
  set_has_opt_type();
  opt_type_ = value;
  // @@protoc_insertion_point(field_set:SD_LoadAndroidData.opt_type)
}

// optional int32 room_id = 2;
inline bool SD_LoadAndroidData::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_LoadAndroidData::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_LoadAndroidData::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_LoadAndroidData::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 SD_LoadAndroidData::room_id() const {
  // @@protoc_insertion_point(field_get:SD_LoadAndroidData.room_id)
  return room_id_;
}
inline void SD_LoadAndroidData::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:SD_LoadAndroidData.room_id)
}

// optional int32 guid = 3;
inline bool SD_LoadAndroidData::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_LoadAndroidData::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_LoadAndroidData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_LoadAndroidData::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_LoadAndroidData::guid() const {
  // @@protoc_insertion_point(field_get:SD_LoadAndroidData.guid)
  return guid_;
}
inline void SD_LoadAndroidData::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_LoadAndroidData.guid)
}

// optional int32 count = 4;
inline bool SD_LoadAndroidData::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SD_LoadAndroidData::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SD_LoadAndroidData::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SD_LoadAndroidData::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 SD_LoadAndroidData::count() const {
  // @@protoc_insertion_point(field_get:SD_LoadAndroidData.count)
  return count_;
}
inline void SD_LoadAndroidData::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:SD_LoadAndroidData.count)
}

// -------------------------------------------------------------------

// DS_LoadAndroidData

// optional int32 opt_type = 1;
inline bool DS_LoadAndroidData::has_opt_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_LoadAndroidData::set_has_opt_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_LoadAndroidData::clear_has_opt_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_LoadAndroidData::clear_opt_type() {
  opt_type_ = 0;
  clear_has_opt_type();
}
inline ::google::protobuf::int32 DS_LoadAndroidData::opt_type() const {
  // @@protoc_insertion_point(field_get:DS_LoadAndroidData.opt_type)
  return opt_type_;
}
inline void DS_LoadAndroidData::set_opt_type(::google::protobuf::int32 value) {
  set_has_opt_type();
  opt_type_ = value;
  // @@protoc_insertion_point(field_set:DS_LoadAndroidData.opt_type)
}

// optional int32 room_id = 2;
inline bool DS_LoadAndroidData::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_LoadAndroidData::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_LoadAndroidData::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_LoadAndroidData::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 DS_LoadAndroidData::room_id() const {
  // @@protoc_insertion_point(field_get:DS_LoadAndroidData.room_id)
  return room_id_;
}
inline void DS_LoadAndroidData::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:DS_LoadAndroidData.room_id)
}

// repeated .AndroidInfo android_list = 3;
inline int DS_LoadAndroidData::android_list_size() const {
  return android_list_.size();
}
inline void DS_LoadAndroidData::clear_android_list() {
  android_list_.Clear();
}
inline const ::AndroidInfo& DS_LoadAndroidData::android_list(int index) const {
  // @@protoc_insertion_point(field_get:DS_LoadAndroidData.android_list)
  return android_list_.Get(index);
}
inline ::AndroidInfo* DS_LoadAndroidData::mutable_android_list(int index) {
  // @@protoc_insertion_point(field_mutable:DS_LoadAndroidData.android_list)
  return android_list_.Mutable(index);
}
inline ::AndroidInfo* DS_LoadAndroidData::add_android_list() {
  // @@protoc_insertion_point(field_add:DS_LoadAndroidData.android_list)
  return android_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::AndroidInfo >*
DS_LoadAndroidData::mutable_android_list() {
  // @@protoc_insertion_point(field_mutable_list:DS_LoadAndroidData.android_list)
  return &android_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::AndroidInfo >&
DS_LoadAndroidData::android_list() const {
  // @@protoc_insertion_point(field_list:DS_LoadAndroidData.android_list)
  return android_list_;
}

// -------------------------------------------------------------------

// Msg_Data

// repeated .Msg_DataInfo pb_msg_data_info = 1;
inline int Msg_Data::pb_msg_data_info_size() const {
  return pb_msg_data_info_.size();
}
inline void Msg_Data::clear_pb_msg_data_info() {
  pb_msg_data_info_.Clear();
}
inline const ::Msg_DataInfo& Msg_Data::pb_msg_data_info(int index) const {
  // @@protoc_insertion_point(field_get:Msg_Data.pb_msg_data_info)
  return pb_msg_data_info_.Get(index);
}
inline ::Msg_DataInfo* Msg_Data::mutable_pb_msg_data_info(int index) {
  // @@protoc_insertion_point(field_mutable:Msg_Data.pb_msg_data_info)
  return pb_msg_data_info_.Mutable(index);
}
inline ::Msg_DataInfo* Msg_Data::add_pb_msg_data_info() {
  // @@protoc_insertion_point(field_add:Msg_Data.pb_msg_data_info)
  return pb_msg_data_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >*
Msg_Data::mutable_pb_msg_data_info() {
  // @@protoc_insertion_point(field_mutable_list:Msg_Data.pb_msg_data_info)
  return &pb_msg_data_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Msg_DataInfo >&
Msg_Data::pb_msg_data_info() const {
  // @@protoc_insertion_point(field_list:Msg_Data.pb_msg_data_info)
  return pb_msg_data_info_;
}

// -------------------------------------------------------------------

// DS_QueryPlayerMsgData

// optional int32 guid = 1;
inline bool DS_QueryPlayerMsgData::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_QueryPlayerMsgData::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_QueryPlayerMsgData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_QueryPlayerMsgData::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_QueryPlayerMsgData::guid() const {
  // @@protoc_insertion_point(field_get:DS_QueryPlayerMsgData.guid)
  return guid_;
}
inline void DS_QueryPlayerMsgData::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_QueryPlayerMsgData.guid)
}

// optional .Msg_Data pb_msg_data = 2;
inline bool DS_QueryPlayerMsgData::has_pb_msg_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_QueryPlayerMsgData::set_has_pb_msg_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_QueryPlayerMsgData::clear_has_pb_msg_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_QueryPlayerMsgData::clear_pb_msg_data() {
  if (pb_msg_data_ != NULL) pb_msg_data_->::Msg_Data::Clear();
  clear_has_pb_msg_data();
}
inline const ::Msg_Data& DS_QueryPlayerMsgData::pb_msg_data() const {
  // @@protoc_insertion_point(field_get:DS_QueryPlayerMsgData.pb_msg_data)
  return pb_msg_data_ != NULL ? *pb_msg_data_
                         : *::Msg_Data::internal_default_instance();
}
inline ::Msg_Data* DS_QueryPlayerMsgData::mutable_pb_msg_data() {
  set_has_pb_msg_data();
  if (pb_msg_data_ == NULL) {
    pb_msg_data_ = new ::Msg_Data;
  }
  // @@protoc_insertion_point(field_mutable:DS_QueryPlayerMsgData.pb_msg_data)
  return pb_msg_data_;
}
inline ::Msg_Data* DS_QueryPlayerMsgData::release_pb_msg_data() {
  // @@protoc_insertion_point(field_release:DS_QueryPlayerMsgData.pb_msg_data)
  clear_has_pb_msg_data();
  ::Msg_Data* temp = pb_msg_data_;
  pb_msg_data_ = NULL;
  return temp;
}
inline void DS_QueryPlayerMsgData::set_allocated_pb_msg_data(::Msg_Data* pb_msg_data) {
  delete pb_msg_data_;
  pb_msg_data_ = pb_msg_data;
  if (pb_msg_data) {
    set_has_pb_msg_data();
  } else {
    clear_has_pb_msg_data();
  }
  // @@protoc_insertion_point(field_set_allocated:DS_QueryPlayerMsgData.pb_msg_data)
}

// optional bool first = 3;
inline bool DS_QueryPlayerMsgData::has_first() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DS_QueryPlayerMsgData::set_has_first() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DS_QueryPlayerMsgData::clear_has_first() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DS_QueryPlayerMsgData::clear_first() {
  first_ = false;
  clear_has_first();
}
inline bool DS_QueryPlayerMsgData::first() const {
  // @@protoc_insertion_point(field_get:DS_QueryPlayerMsgData.first)
  return first_;
}
inline void DS_QueryPlayerMsgData::set_first(bool value) {
  set_has_first();
  first_ = value;
  // @@protoc_insertion_point(field_set:DS_QueryPlayerMsgData.first)
}

// -------------------------------------------------------------------

// SD_QueryPlayerMsgData

// optional int32 guid = 1;
inline bool SD_QueryPlayerMsgData::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_QueryPlayerMsgData::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_QueryPlayerMsgData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_QueryPlayerMsgData::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_QueryPlayerMsgData::guid() const {
  // @@protoc_insertion_point(field_get:SD_QueryPlayerMsgData.guid)
  return guid_;
}
inline void SD_QueryPlayerMsgData::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_QueryPlayerMsgData.guid)
}

// -------------------------------------------------------------------

// SD_SetMsgReadFlag

// optional int32 guid = 1;
inline bool SD_SetMsgReadFlag::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_SetMsgReadFlag::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_SetMsgReadFlag::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_SetMsgReadFlag::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_SetMsgReadFlag::guid() const {
  // @@protoc_insertion_point(field_get:SD_SetMsgReadFlag.guid)
  return guid_;
}
inline void SD_SetMsgReadFlag::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_SetMsgReadFlag.guid)
}

// optional int32 id = 2;
inline bool SD_SetMsgReadFlag::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_SetMsgReadFlag::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_SetMsgReadFlag::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_SetMsgReadFlag::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SD_SetMsgReadFlag::id() const {
  // @@protoc_insertion_point(field_get:SD_SetMsgReadFlag.id)
  return id_;
}
inline void SD_SetMsgReadFlag::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:SD_SetMsgReadFlag.id)
}

// optional int32 msg_type = 3;
inline bool SD_SetMsgReadFlag::has_msg_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_SetMsgReadFlag::set_has_msg_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_SetMsgReadFlag::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_SetMsgReadFlag::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::google::protobuf::int32 SD_SetMsgReadFlag::msg_type() const {
  // @@protoc_insertion_point(field_get:SD_SetMsgReadFlag.msg_type)
  return msg_type_;
}
inline void SD_SetMsgReadFlag::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:SD_SetMsgReadFlag.msg_type)
}

// -------------------------------------------------------------------

// Marquee_Data

// repeated .Marquee pb_msg_data_info = 1;
inline int Marquee_Data::pb_msg_data_info_size() const {
  return pb_msg_data_info_.size();
}
inline void Marquee_Data::clear_pb_msg_data_info() {
  pb_msg_data_info_.Clear();
}
inline const ::Marquee& Marquee_Data::pb_msg_data_info(int index) const {
  // @@protoc_insertion_point(field_get:Marquee_Data.pb_msg_data_info)
  return pb_msg_data_info_.Get(index);
}
inline ::Marquee* Marquee_Data::mutable_pb_msg_data_info(int index) {
  // @@protoc_insertion_point(field_mutable:Marquee_Data.pb_msg_data_info)
  return pb_msg_data_info_.Mutable(index);
}
inline ::Marquee* Marquee_Data::add_pb_msg_data_info() {
  // @@protoc_insertion_point(field_add:Marquee_Data.pb_msg_data_info)
  return pb_msg_data_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Marquee >*
Marquee_Data::mutable_pb_msg_data_info() {
  // @@protoc_insertion_point(field_mutable_list:Marquee_Data.pb_msg_data_info)
  return &pb_msg_data_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Marquee >&
Marquee_Data::pb_msg_data_info() const {
  // @@protoc_insertion_point(field_list:Marquee_Data.pb_msg_data_info)
  return pb_msg_data_info_;
}

// -------------------------------------------------------------------

// DS_QueryPlayerMarquee

// optional int32 guid = 1;
inline bool DS_QueryPlayerMarquee::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_QueryPlayerMarquee::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_QueryPlayerMarquee::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_QueryPlayerMarquee::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_QueryPlayerMarquee::guid() const {
  // @@protoc_insertion_point(field_get:DS_QueryPlayerMarquee.guid)
  return guid_;
}
inline void DS_QueryPlayerMarquee::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_QueryPlayerMarquee.guid)
}

// optional .Marquee_Data pb_msg_data = 2;
inline bool DS_QueryPlayerMarquee::has_pb_msg_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_QueryPlayerMarquee::set_has_pb_msg_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_QueryPlayerMarquee::clear_has_pb_msg_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_QueryPlayerMarquee::clear_pb_msg_data() {
  if (pb_msg_data_ != NULL) pb_msg_data_->::Marquee_Data::Clear();
  clear_has_pb_msg_data();
}
inline const ::Marquee_Data& DS_QueryPlayerMarquee::pb_msg_data() const {
  // @@protoc_insertion_point(field_get:DS_QueryPlayerMarquee.pb_msg_data)
  return pb_msg_data_ != NULL ? *pb_msg_data_
                         : *::Marquee_Data::internal_default_instance();
}
inline ::Marquee_Data* DS_QueryPlayerMarquee::mutable_pb_msg_data() {
  set_has_pb_msg_data();
  if (pb_msg_data_ == NULL) {
    pb_msg_data_ = new ::Marquee_Data;
  }
  // @@protoc_insertion_point(field_mutable:DS_QueryPlayerMarquee.pb_msg_data)
  return pb_msg_data_;
}
inline ::Marquee_Data* DS_QueryPlayerMarquee::release_pb_msg_data() {
  // @@protoc_insertion_point(field_release:DS_QueryPlayerMarquee.pb_msg_data)
  clear_has_pb_msg_data();
  ::Marquee_Data* temp = pb_msg_data_;
  pb_msg_data_ = NULL;
  return temp;
}
inline void DS_QueryPlayerMarquee::set_allocated_pb_msg_data(::Marquee_Data* pb_msg_data) {
  delete pb_msg_data_;
  pb_msg_data_ = pb_msg_data;
  if (pb_msg_data) {
    set_has_pb_msg_data();
  } else {
    clear_has_pb_msg_data();
  }
  // @@protoc_insertion_point(field_set_allocated:DS_QueryPlayerMarquee.pb_msg_data)
}

// optional bool first = 3;
inline bool DS_QueryPlayerMarquee::has_first() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DS_QueryPlayerMarquee::set_has_first() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DS_QueryPlayerMarquee::clear_has_first() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DS_QueryPlayerMarquee::clear_first() {
  first_ = false;
  clear_has_first();
}
inline bool DS_QueryPlayerMarquee::first() const {
  // @@protoc_insertion_point(field_get:DS_QueryPlayerMarquee.first)
  return first_;
}
inline void DS_QueryPlayerMarquee::set_first(bool value) {
  set_has_first();
  first_ = value;
  // @@protoc_insertion_point(field_set:DS_QueryPlayerMarquee.first)
}

// -------------------------------------------------------------------

// SD_QueryPlayerMarquee

// optional int32 guid = 1;
inline bool SD_QueryPlayerMarquee::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_QueryPlayerMarquee::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_QueryPlayerMarquee::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_QueryPlayerMarquee::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_QueryPlayerMarquee::guid() const {
  // @@protoc_insertion_point(field_get:SD_QueryPlayerMarquee.guid)
  return guid_;
}
inline void SD_QueryPlayerMarquee::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_QueryPlayerMarquee.guid)
}

// -------------------------------------------------------------------

// DS_QueryPlayerInviteReward

// optional int32 guid = 1;
inline bool DS_QueryPlayerInviteReward::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_QueryPlayerInviteReward::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_QueryPlayerInviteReward::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_QueryPlayerInviteReward::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_QueryPlayerInviteReward::guid() const {
  // @@protoc_insertion_point(field_get:DS_QueryPlayerInviteReward.guid)
  return guid_;
}
inline void DS_QueryPlayerInviteReward::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_QueryPlayerInviteReward.guid)
}

// optional int32 reward = 2;
inline bool DS_QueryPlayerInviteReward::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_QueryPlayerInviteReward::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_QueryPlayerInviteReward::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_QueryPlayerInviteReward::clear_reward() {
  reward_ = 0;
  clear_has_reward();
}
inline ::google::protobuf::int32 DS_QueryPlayerInviteReward::reward() const {
  // @@protoc_insertion_point(field_get:DS_QueryPlayerInviteReward.reward)
  return reward_;
}
inline void DS_QueryPlayerInviteReward::set_reward(::google::protobuf::int32 value) {
  set_has_reward();
  reward_ = value;
  // @@protoc_insertion_point(field_set:DS_QueryPlayerInviteReward.reward)
}

// -------------------------------------------------------------------

// SD_QueryPlayerInviteReward

// optional int32 guid = 1;
inline bool SD_QueryPlayerInviteReward::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_QueryPlayerInviteReward::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_QueryPlayerInviteReward::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_QueryPlayerInviteReward::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_QueryPlayerInviteReward::guid() const {
  // @@protoc_insertion_point(field_get:SD_QueryPlayerInviteReward.guid)
  return guid_;
}
inline void SD_QueryPlayerInviteReward::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_QueryPlayerInviteReward.guid)
}

// -------------------------------------------------------------------

// DBChannelInviteConfig

// optional string channel_id = 1;
inline bool DBChannelInviteConfig::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBChannelInviteConfig::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBChannelInviteConfig::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBChannelInviteConfig::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& DBChannelInviteConfig::channel_id() const {
  // @@protoc_insertion_point(field_get:DBChannelInviteConfig.channel_id)
  return channel_id_.GetNoArena();
}
inline void DBChannelInviteConfig::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBChannelInviteConfig.channel_id)
}
#if LANG_CXX11
inline void DBChannelInviteConfig::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DBChannelInviteConfig.channel_id)
}
#endif
inline void DBChannelInviteConfig::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBChannelInviteConfig.channel_id)
}
inline void DBChannelInviteConfig::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBChannelInviteConfig.channel_id)
}
inline ::std::string* DBChannelInviteConfig::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:DBChannelInviteConfig.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBChannelInviteConfig::release_channel_id() {
  // @@protoc_insertion_point(field_release:DBChannelInviteConfig.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBChannelInviteConfig::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:DBChannelInviteConfig.channel_id)
}

// optional int32 is_invite_open = 2;
inline bool DBChannelInviteConfig::has_is_invite_open() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBChannelInviteConfig::set_has_is_invite_open() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBChannelInviteConfig::clear_has_is_invite_open() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBChannelInviteConfig::clear_is_invite_open() {
  is_invite_open_ = 0;
  clear_has_is_invite_open();
}
inline ::google::protobuf::int32 DBChannelInviteConfig::is_invite_open() const {
  // @@protoc_insertion_point(field_get:DBChannelInviteConfig.is_invite_open)
  return is_invite_open_;
}
inline void DBChannelInviteConfig::set_is_invite_open(::google::protobuf::int32 value) {
  set_has_is_invite_open();
  is_invite_open_ = value;
  // @@protoc_insertion_point(field_set:DBChannelInviteConfig.is_invite_open)
}

// optional int32 tax_rate = 3;
inline bool DBChannelInviteConfig::has_tax_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBChannelInviteConfig::set_has_tax_rate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBChannelInviteConfig::clear_has_tax_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBChannelInviteConfig::clear_tax_rate() {
  tax_rate_ = 0;
  clear_has_tax_rate();
}
inline ::google::protobuf::int32 DBChannelInviteConfig::tax_rate() const {
  // @@protoc_insertion_point(field_get:DBChannelInviteConfig.tax_rate)
  return tax_rate_;
}
inline void DBChannelInviteConfig::set_tax_rate(::google::protobuf::int32 value) {
  set_has_tax_rate();
  tax_rate_ = value;
  // @@protoc_insertion_point(field_set:DBChannelInviteConfig.tax_rate)
}

// -------------------------------------------------------------------

// DS_QueryChannelInviteCfg

// repeated .DBChannelInviteConfig cfg = 1;
inline int DS_QueryChannelInviteCfg::cfg_size() const {
  return cfg_.size();
}
inline void DS_QueryChannelInviteCfg::clear_cfg() {
  cfg_.Clear();
}
inline const ::DBChannelInviteConfig& DS_QueryChannelInviteCfg::cfg(int index) const {
  // @@protoc_insertion_point(field_get:DS_QueryChannelInviteCfg.cfg)
  return cfg_.Get(index);
}
inline ::DBChannelInviteConfig* DS_QueryChannelInviteCfg::mutable_cfg(int index) {
  // @@protoc_insertion_point(field_mutable:DS_QueryChannelInviteCfg.cfg)
  return cfg_.Mutable(index);
}
inline ::DBChannelInviteConfig* DS_QueryChannelInviteCfg::add_cfg() {
  // @@protoc_insertion_point(field_add:DS_QueryChannelInviteCfg.cfg)
  return cfg_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DBChannelInviteConfig >*
DS_QueryChannelInviteCfg::mutable_cfg() {
  // @@protoc_insertion_point(field_mutable_list:DS_QueryChannelInviteCfg.cfg)
  return &cfg_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DBChannelInviteConfig >&
DS_QueryChannelInviteCfg::cfg() const {
  // @@protoc_insertion_point(field_list:DS_QueryChannelInviteCfg.cfg)
  return cfg_;
}

// -------------------------------------------------------------------

// SD_QueryChannelInviteCfg

// -------------------------------------------------------------------

// SD_SavePlayerOxData

// optional int32 guid = 1;
inline bool SD_SavePlayerOxData::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_SavePlayerOxData::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_SavePlayerOxData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_SavePlayerOxData::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_SavePlayerOxData::guid() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerOxData.guid)
  return guid_;
}
inline void SD_SavePlayerOxData::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_SavePlayerOxData.guid)
}

// optional int32 is_android = 2;
inline bool SD_SavePlayerOxData::has_is_android() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_SavePlayerOxData::set_has_is_android() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_SavePlayerOxData::clear_has_is_android() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_SavePlayerOxData::clear_is_android() {
  is_android_ = 0;
  clear_has_is_android();
}
inline ::google::protobuf::int32 SD_SavePlayerOxData::is_android() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerOxData.is_android)
  return is_android_;
}
inline void SD_SavePlayerOxData::set_is_android(::google::protobuf::int32 value) {
  set_has_is_android();
  is_android_ = value;
  // @@protoc_insertion_point(field_set:SD_SavePlayerOxData.is_android)
}

// optional int32 table_id = 3;
inline bool SD_SavePlayerOxData::has_table_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SD_SavePlayerOxData::set_has_table_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SD_SavePlayerOxData::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SD_SavePlayerOxData::clear_table_id() {
  table_id_ = 0;
  clear_has_table_id();
}
inline ::google::protobuf::int32 SD_SavePlayerOxData::table_id() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerOxData.table_id)
  return table_id_;
}
inline void SD_SavePlayerOxData::set_table_id(::google::protobuf::int32 value) {
  set_has_table_id();
  table_id_ = value;
  // @@protoc_insertion_point(field_set:SD_SavePlayerOxData.table_id)
}

// optional int32 banker_id = 4;
inline bool SD_SavePlayerOxData::has_banker_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SD_SavePlayerOxData::set_has_banker_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SD_SavePlayerOxData::clear_has_banker_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SD_SavePlayerOxData::clear_banker_id() {
  banker_id_ = 0;
  clear_has_banker_id();
}
inline ::google::protobuf::int32 SD_SavePlayerOxData::banker_id() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerOxData.banker_id)
  return banker_id_;
}
inline void SD_SavePlayerOxData::set_banker_id(::google::protobuf::int32 value) {
  set_has_banker_id();
  banker_id_ = value;
  // @@protoc_insertion_point(field_set:SD_SavePlayerOxData.banker_id)
}

// optional string nickname = 5;
inline bool SD_SavePlayerOxData::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_SavePlayerOxData::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_SavePlayerOxData::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_SavePlayerOxData::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& SD_SavePlayerOxData::nickname() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerOxData.nickname)
  return nickname_.GetNoArena();
}
inline void SD_SavePlayerOxData::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_SavePlayerOxData.nickname)
}
#if LANG_CXX11
inline void SD_SavePlayerOxData::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_SavePlayerOxData.nickname)
}
#endif
inline void SD_SavePlayerOxData::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_SavePlayerOxData.nickname)
}
inline void SD_SavePlayerOxData::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_SavePlayerOxData.nickname)
}
inline ::std::string* SD_SavePlayerOxData::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:SD_SavePlayerOxData.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_SavePlayerOxData::release_nickname() {
  // @@protoc_insertion_point(field_release:SD_SavePlayerOxData.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_SavePlayerOxData::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:SD_SavePlayerOxData.nickname)
}

// optional int32 money = 6;
inline bool SD_SavePlayerOxData::has_money() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SD_SavePlayerOxData::set_has_money() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SD_SavePlayerOxData::clear_has_money() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SD_SavePlayerOxData::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 SD_SavePlayerOxData::money() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerOxData.money)
  return money_;
}
inline void SD_SavePlayerOxData::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SD_SavePlayerOxData.money)
}

// optional int32 win_money = 7;
inline bool SD_SavePlayerOxData::has_win_money() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SD_SavePlayerOxData::set_has_win_money() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SD_SavePlayerOxData::clear_has_win_money() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SD_SavePlayerOxData::clear_win_money() {
  win_money_ = 0;
  clear_has_win_money();
}
inline ::google::protobuf::int32 SD_SavePlayerOxData::win_money() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerOxData.win_money)
  return win_money_;
}
inline void SD_SavePlayerOxData::set_win_money(::google::protobuf::int32 value) {
  set_has_win_money();
  win_money_ = value;
  // @@protoc_insertion_point(field_set:SD_SavePlayerOxData.win_money)
}

// optional int32 bet_money = 8;
inline bool SD_SavePlayerOxData::has_bet_money() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SD_SavePlayerOxData::set_has_bet_money() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SD_SavePlayerOxData::clear_has_bet_money() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SD_SavePlayerOxData::clear_bet_money() {
  bet_money_ = 0;
  clear_has_bet_money();
}
inline ::google::protobuf::int32 SD_SavePlayerOxData::bet_money() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerOxData.bet_money)
  return bet_money_;
}
inline void SD_SavePlayerOxData::set_bet_money(::google::protobuf::int32 value) {
  set_has_bet_money();
  bet_money_ = value;
  // @@protoc_insertion_point(field_set:SD_SavePlayerOxData.bet_money)
}

// optional int32 tax = 9;
inline bool SD_SavePlayerOxData::has_tax() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SD_SavePlayerOxData::set_has_tax() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SD_SavePlayerOxData::clear_has_tax() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SD_SavePlayerOxData::clear_tax() {
  tax_ = 0;
  clear_has_tax();
}
inline ::google::protobuf::int32 SD_SavePlayerOxData::tax() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerOxData.tax)
  return tax_;
}
inline void SD_SavePlayerOxData::set_tax(::google::protobuf::int32 value) {
  set_has_tax();
  tax_ = value;
  // @@protoc_insertion_point(field_set:SD_SavePlayerOxData.tax)
}

// optional int32 curtime = 10;
inline bool SD_SavePlayerOxData::has_curtime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SD_SavePlayerOxData::set_has_curtime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SD_SavePlayerOxData::clear_has_curtime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SD_SavePlayerOxData::clear_curtime() {
  curtime_ = 0;
  clear_has_curtime();
}
inline ::google::protobuf::int32 SD_SavePlayerOxData::curtime() const {
  // @@protoc_insertion_point(field_get:SD_SavePlayerOxData.curtime)
  return curtime_;
}
inline void SD_SavePlayerOxData::set_curtime(::google::protobuf::int32 value) {
  set_has_curtime();
  curtime_ = value;
  // @@protoc_insertion_point(field_set:SD_SavePlayerOxData.curtime)
}

// -------------------------------------------------------------------

// SD_QueryOxConfigData

// optional int64 cur_time = 1;
inline bool SD_QueryOxConfigData::has_cur_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_QueryOxConfigData::set_has_cur_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_QueryOxConfigData::clear_has_cur_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_QueryOxConfigData::clear_cur_time() {
  cur_time_ = GOOGLE_LONGLONG(0);
  clear_has_cur_time();
}
inline ::google::protobuf::int64 SD_QueryOxConfigData::cur_time() const {
  // @@protoc_insertion_point(field_get:SD_QueryOxConfigData.cur_time)
  return cur_time_;
}
inline void SD_QueryOxConfigData::set_cur_time(::google::protobuf::int64 value) {
  set_has_cur_time();
  cur_time_ = value;
  // @@protoc_insertion_point(field_set:SD_QueryOxConfigData.cur_time)
}

// -------------------------------------------------------------------

// DS_OxConfigData

// optional int32 FreeTime = 1;
inline bool DS_OxConfigData::has_freetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_OxConfigData::set_has_freetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_OxConfigData::clear_has_freetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_OxConfigData::clear_freetime() {
  freetime_ = 0;
  clear_has_freetime();
}
inline ::google::protobuf::int32 DS_OxConfigData::freetime() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.FreeTime)
  return freetime_;
}
inline void DS_OxConfigData::set_freetime(::google::protobuf::int32 value) {
  set_has_freetime();
  freetime_ = value;
  // @@protoc_insertion_point(field_set:DS_OxConfigData.FreeTime)
}

// optional int32 BetTime = 2;
inline bool DS_OxConfigData::has_bettime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DS_OxConfigData::set_has_bettime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DS_OxConfigData::clear_has_bettime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DS_OxConfigData::clear_bettime() {
  bettime_ = 0;
  clear_has_bettime();
}
inline ::google::protobuf::int32 DS_OxConfigData::bettime() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.BetTime)
  return bettime_;
}
inline void DS_OxConfigData::set_bettime(::google::protobuf::int32 value) {
  set_has_bettime();
  bettime_ = value;
  // @@protoc_insertion_point(field_set:DS_OxConfigData.BetTime)
}

// optional int32 EndTime = 3;
inline bool DS_OxConfigData::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DS_OxConfigData::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DS_OxConfigData::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DS_OxConfigData::clear_endtime() {
  endtime_ = 0;
  clear_has_endtime();
}
inline ::google::protobuf::int32 DS_OxConfigData::endtime() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.EndTime)
  return endtime_;
}
inline void DS_OxConfigData::set_endtime(::google::protobuf::int32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:DS_OxConfigData.EndTime)
}

// optional int32 MustWinCoeff = 4;
inline bool DS_OxConfigData::has_mustwincoeff() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DS_OxConfigData::set_has_mustwincoeff() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DS_OxConfigData::clear_has_mustwincoeff() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DS_OxConfigData::clear_mustwincoeff() {
  mustwincoeff_ = 0;
  clear_has_mustwincoeff();
}
inline ::google::protobuf::int32 DS_OxConfigData::mustwincoeff() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.MustWinCoeff)
  return mustwincoeff_;
}
inline void DS_OxConfigData::set_mustwincoeff(::google::protobuf::int32 value) {
  set_has_mustwincoeff();
  mustwincoeff_ = value;
  // @@protoc_insertion_point(field_set:DS_OxConfigData.MustWinCoeff)
}

// optional int64 BankerMoneyLimit = 5;
inline bool DS_OxConfigData::has_bankermoneylimit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DS_OxConfigData::set_has_bankermoneylimit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DS_OxConfigData::clear_has_bankermoneylimit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DS_OxConfigData::clear_bankermoneylimit() {
  bankermoneylimit_ = GOOGLE_LONGLONG(0);
  clear_has_bankermoneylimit();
}
inline ::google::protobuf::int64 DS_OxConfigData::bankermoneylimit() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.BankerMoneyLimit)
  return bankermoneylimit_;
}
inline void DS_OxConfigData::set_bankermoneylimit(::google::protobuf::int64 value) {
  set_has_bankermoneylimit();
  bankermoneylimit_ = value;
  // @@protoc_insertion_point(field_set:DS_OxConfigData.BankerMoneyLimit)
}

// optional int32 SystemBankerSwitch = 6;
inline bool DS_OxConfigData::has_systembankerswitch() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DS_OxConfigData::set_has_systembankerswitch() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DS_OxConfigData::clear_has_systembankerswitch() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DS_OxConfigData::clear_systembankerswitch() {
  systembankerswitch_ = 0;
  clear_has_systembankerswitch();
}
inline ::google::protobuf::int32 DS_OxConfigData::systembankerswitch() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.SystemBankerSwitch)
  return systembankerswitch_;
}
inline void DS_OxConfigData::set_systembankerswitch(::google::protobuf::int32 value) {
  set_has_systembankerswitch();
  systembankerswitch_ = value;
  // @@protoc_insertion_point(field_set:DS_OxConfigData.SystemBankerSwitch)
}

// optional int32 BankerCount = 7;
inline bool DS_OxConfigData::has_bankercount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DS_OxConfigData::set_has_bankercount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DS_OxConfigData::clear_has_bankercount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DS_OxConfigData::clear_bankercount() {
  bankercount_ = 0;
  clear_has_bankercount();
}
inline ::google::protobuf::int32 DS_OxConfigData::bankercount() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.BankerCount)
  return bankercount_;
}
inline void DS_OxConfigData::set_bankercount(::google::protobuf::int32 value) {
  set_has_bankercount();
  bankercount_ = value;
  // @@protoc_insertion_point(field_set:DS_OxConfigData.BankerCount)
}

// optional int64 RobotBankerInitUid = 8;
inline bool DS_OxConfigData::has_robotbankerinituid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DS_OxConfigData::set_has_robotbankerinituid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DS_OxConfigData::clear_has_robotbankerinituid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DS_OxConfigData::clear_robotbankerinituid() {
  robotbankerinituid_ = GOOGLE_LONGLONG(0);
  clear_has_robotbankerinituid();
}
inline ::google::protobuf::int64 DS_OxConfigData::robotbankerinituid() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.RobotBankerInitUid)
  return robotbankerinituid_;
}
inline void DS_OxConfigData::set_robotbankerinituid(::google::protobuf::int64 value) {
  set_has_robotbankerinituid();
  robotbankerinituid_ = value;
  // @@protoc_insertion_point(field_set:DS_OxConfigData.RobotBankerInitUid)
}

// optional int64 RobotBankerInitMoney = 9;
inline bool DS_OxConfigData::has_robotbankerinitmoney() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DS_OxConfigData::set_has_robotbankerinitmoney() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DS_OxConfigData::clear_has_robotbankerinitmoney() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DS_OxConfigData::clear_robotbankerinitmoney() {
  robotbankerinitmoney_ = GOOGLE_LONGLONG(0);
  clear_has_robotbankerinitmoney();
}
inline ::google::protobuf::int64 DS_OxConfigData::robotbankerinitmoney() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.RobotBankerInitMoney)
  return robotbankerinitmoney_;
}
inline void DS_OxConfigData::set_robotbankerinitmoney(::google::protobuf::int64 value) {
  set_has_robotbankerinitmoney();
  robotbankerinitmoney_ = value;
  // @@protoc_insertion_point(field_set:DS_OxConfigData.RobotBankerInitMoney)
}

// optional int32 BetRobotSwitch = 10;
inline bool DS_OxConfigData::has_betrobotswitch() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DS_OxConfigData::set_has_betrobotswitch() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DS_OxConfigData::clear_has_betrobotswitch() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DS_OxConfigData::clear_betrobotswitch() {
  betrobotswitch_ = 0;
  clear_has_betrobotswitch();
}
inline ::google::protobuf::int32 DS_OxConfigData::betrobotswitch() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.BetRobotSwitch)
  return betrobotswitch_;
}
inline void DS_OxConfigData::set_betrobotswitch(::google::protobuf::int32 value) {
  set_has_betrobotswitch();
  betrobotswitch_ = value;
  // @@protoc_insertion_point(field_set:DS_OxConfigData.BetRobotSwitch)
}

// optional int64 BetRobotInitUid = 11;
inline bool DS_OxConfigData::has_betrobotinituid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DS_OxConfigData::set_has_betrobotinituid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DS_OxConfigData::clear_has_betrobotinituid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DS_OxConfigData::clear_betrobotinituid() {
  betrobotinituid_ = GOOGLE_LONGLONG(0);
  clear_has_betrobotinituid();
}
inline ::google::protobuf::int64 DS_OxConfigData::betrobotinituid() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.BetRobotInitUid)
  return betrobotinituid_;
}
inline void DS_OxConfigData::set_betrobotinituid(::google::protobuf::int64 value) {
  set_has_betrobotinituid();
  betrobotinituid_ = value;
  // @@protoc_insertion_point(field_set:DS_OxConfigData.BetRobotInitUid)
}

// optional int64 BetRobotInitMoney = 12;
inline bool DS_OxConfigData::has_betrobotinitmoney() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DS_OxConfigData::set_has_betrobotinitmoney() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DS_OxConfigData::clear_has_betrobotinitmoney() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DS_OxConfigData::clear_betrobotinitmoney() {
  betrobotinitmoney_ = GOOGLE_LONGLONG(0);
  clear_has_betrobotinitmoney();
}
inline ::google::protobuf::int64 DS_OxConfigData::betrobotinitmoney() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.BetRobotInitMoney)
  return betrobotinitmoney_;
}
inline void DS_OxConfigData::set_betrobotinitmoney(::google::protobuf::int64 value) {
  set_has_betrobotinitmoney();
  betrobotinitmoney_ = value;
  // @@protoc_insertion_point(field_set:DS_OxConfigData.BetRobotInitMoney)
}

// optional int32 BetRobotNumControl = 13;
inline bool DS_OxConfigData::has_betrobotnumcontrol() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DS_OxConfigData::set_has_betrobotnumcontrol() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DS_OxConfigData::clear_has_betrobotnumcontrol() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DS_OxConfigData::clear_betrobotnumcontrol() {
  betrobotnumcontrol_ = 0;
  clear_has_betrobotnumcontrol();
}
inline ::google::protobuf::int32 DS_OxConfigData::betrobotnumcontrol() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.BetRobotNumControl)
  return betrobotnumcontrol_;
}
inline void DS_OxConfigData::set_betrobotnumcontrol(::google::protobuf::int32 value) {
  set_has_betrobotnumcontrol();
  betrobotnumcontrol_ = value;
  // @@protoc_insertion_point(field_set:DS_OxConfigData.BetRobotNumControl)
}

// optional int32 BetRobotTimesControl = 14;
inline bool DS_OxConfigData::has_betrobottimescontrol() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void DS_OxConfigData::set_has_betrobottimescontrol() {
  _has_bits_[0] |= 0x00008000u;
}
inline void DS_OxConfigData::clear_has_betrobottimescontrol() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void DS_OxConfigData::clear_betrobottimescontrol() {
  betrobottimescontrol_ = 0;
  clear_has_betrobottimescontrol();
}
inline ::google::protobuf::int32 DS_OxConfigData::betrobottimescontrol() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.BetRobotTimesControl)
  return betrobottimescontrol_;
}
inline void DS_OxConfigData::set_betrobottimescontrol(::google::protobuf::int32 value) {
  set_has_betrobottimescontrol();
  betrobottimescontrol_ = value;
  // @@protoc_insertion_point(field_set:DS_OxConfigData.BetRobotTimesControl)
}

// optional int64 RobotBetMoneyControl = 15;
inline bool DS_OxConfigData::has_robotbetmoneycontrol() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void DS_OxConfigData::set_has_robotbetmoneycontrol() {
  _has_bits_[0] |= 0x00004000u;
}
inline void DS_OxConfigData::clear_has_robotbetmoneycontrol() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void DS_OxConfigData::clear_robotbetmoneycontrol() {
  robotbetmoneycontrol_ = GOOGLE_LONGLONG(0);
  clear_has_robotbetmoneycontrol();
}
inline ::google::protobuf::int64 DS_OxConfigData::robotbetmoneycontrol() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.RobotBetMoneyControl)
  return robotbetmoneycontrol_;
}
inline void DS_OxConfigData::set_robotbetmoneycontrol(::google::protobuf::int64 value) {
  set_has_robotbetmoneycontrol();
  robotbetmoneycontrol_ = value;
  // @@protoc_insertion_point(field_set:DS_OxConfigData.RobotBetMoneyControl)
}

// optional string BasicChip = 16;
inline bool DS_OxConfigData::has_basicchip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_OxConfigData::set_has_basicchip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_OxConfigData::clear_has_basicchip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_OxConfigData::clear_basicchip() {
  basicchip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_basicchip();
}
inline const ::std::string& DS_OxConfigData::basicchip() const {
  // @@protoc_insertion_point(field_get:DS_OxConfigData.BasicChip)
  return basicchip_.GetNoArena();
}
inline void DS_OxConfigData::set_basicchip(const ::std::string& value) {
  set_has_basicchip();
  basicchip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DS_OxConfigData.BasicChip)
}
#if LANG_CXX11
inline void DS_OxConfigData::set_basicchip(::std::string&& value) {
  set_has_basicchip();
  basicchip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DS_OxConfigData.BasicChip)
}
#endif
inline void DS_OxConfigData::set_basicchip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_basicchip();
  basicchip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DS_OxConfigData.BasicChip)
}
inline void DS_OxConfigData::set_basicchip(const char* value, size_t size) {
  set_has_basicchip();
  basicchip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DS_OxConfigData.BasicChip)
}
inline ::std::string* DS_OxConfigData::mutable_basicchip() {
  set_has_basicchip();
  // @@protoc_insertion_point(field_mutable:DS_OxConfigData.BasicChip)
  return basicchip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DS_OxConfigData::release_basicchip() {
  // @@protoc_insertion_point(field_release:DS_OxConfigData.BasicChip)
  clear_has_basicchip();
  return basicchip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DS_OxConfigData::set_allocated_basicchip(::std::string* basicchip) {
  if (basicchip != NULL) {
    set_has_basicchip();
  } else {
    clear_has_basicchip();
  }
  basicchip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), basicchip);
  // @@protoc_insertion_point(field_set_allocated:DS_OxConfigData.BasicChip)
}

// -------------------------------------------------------------------

// LG_PhoneQuery

// optional int32 ret = 1;
inline bool LG_PhoneQuery::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LG_PhoneQuery::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LG_PhoneQuery::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LG_PhoneQuery::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 LG_PhoneQuery::ret() const {
  // @@protoc_insertion_point(field_get:LG_PhoneQuery.ret)
  return ret_;
}
inline void LG_PhoneQuery::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:LG_PhoneQuery.ret)
}

// optional string phone = 2;
inline bool LG_PhoneQuery::has_phone() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LG_PhoneQuery::set_has_phone() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LG_PhoneQuery::clear_has_phone() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LG_PhoneQuery::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& LG_PhoneQuery::phone() const {
  // @@protoc_insertion_point(field_get:LG_PhoneQuery.phone)
  return phone_.GetNoArena();
}
inline void LG_PhoneQuery::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LG_PhoneQuery.phone)
}
#if LANG_CXX11
inline void LG_PhoneQuery::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LG_PhoneQuery.phone)
}
#endif
inline void LG_PhoneQuery::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LG_PhoneQuery.phone)
}
inline void LG_PhoneQuery::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LG_PhoneQuery.phone)
}
inline ::std::string* LG_PhoneQuery::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:LG_PhoneQuery.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LG_PhoneQuery::release_phone() {
  // @@protoc_insertion_point(field_release:LG_PhoneQuery.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LG_PhoneQuery::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:LG_PhoneQuery.phone)
}

// optional int32 gate_session_id = 3;
inline bool LG_PhoneQuery::has_gate_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LG_PhoneQuery::set_has_gate_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LG_PhoneQuery::clear_has_gate_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LG_PhoneQuery::clear_gate_session_id() {
  gate_session_id_ = 0;
  clear_has_gate_session_id();
}
inline ::google::protobuf::int32 LG_PhoneQuery::gate_session_id() const {
  // @@protoc_insertion_point(field_get:LG_PhoneQuery.gate_session_id)
  return gate_session_id_;
}
inline void LG_PhoneQuery::set_gate_session_id(::google::protobuf::int32 value) {
  set_has_gate_session_id();
  gate_session_id_ = value;
  // @@protoc_insertion_point(field_set:LG_PhoneQuery.gate_session_id)
}

// -------------------------------------------------------------------

// SD_BankSetPassword

// optional int32 guid = 1;
inline bool SD_BankSetPassword::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_BankSetPassword::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_BankSetPassword::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_BankSetPassword::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_BankSetPassword::guid() const {
  // @@protoc_insertion_point(field_get:SD_BankSetPassword.guid)
  return guid_;
}
inline void SD_BankSetPassword::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_BankSetPassword.guid)
}

// optional string password = 2;
inline bool SD_BankSetPassword::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_BankSetPassword::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_BankSetPassword::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_BankSetPassword::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& SD_BankSetPassword::password() const {
  // @@protoc_insertion_point(field_get:SD_BankSetPassword.password)
  return password_.GetNoArena();
}
inline void SD_BankSetPassword::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_BankSetPassword.password)
}
#if LANG_CXX11
inline void SD_BankSetPassword::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_BankSetPassword.password)
}
#endif
inline void SD_BankSetPassword::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_BankSetPassword.password)
}
inline void SD_BankSetPassword::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_BankSetPassword.password)
}
inline ::std::string* SD_BankSetPassword::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:SD_BankSetPassword.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_BankSetPassword::release_password() {
  // @@protoc_insertion_point(field_release:SD_BankSetPassword.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_BankSetPassword::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:SD_BankSetPassword.password)
}

// -------------------------------------------------------------------

// SD_BankChangePassword

// optional int32 guid = 1;
inline bool SD_BankChangePassword::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_BankChangePassword::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_BankChangePassword::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_BankChangePassword::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_BankChangePassword::guid() const {
  // @@protoc_insertion_point(field_get:SD_BankChangePassword.guid)
  return guid_;
}
inline void SD_BankChangePassword::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_BankChangePassword.guid)
}

// optional string old_password = 2;
inline bool SD_BankChangePassword::has_old_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_BankChangePassword::set_has_old_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_BankChangePassword::clear_has_old_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_BankChangePassword::clear_old_password() {
  old_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_old_password();
}
inline const ::std::string& SD_BankChangePassword::old_password() const {
  // @@protoc_insertion_point(field_get:SD_BankChangePassword.old_password)
  return old_password_.GetNoArena();
}
inline void SD_BankChangePassword::set_old_password(const ::std::string& value) {
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_BankChangePassword.old_password)
}
#if LANG_CXX11
inline void SD_BankChangePassword::set_old_password(::std::string&& value) {
  set_has_old_password();
  old_password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_BankChangePassword.old_password)
}
#endif
inline void SD_BankChangePassword::set_old_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_BankChangePassword.old_password)
}
inline void SD_BankChangePassword::set_old_password(const char* value, size_t size) {
  set_has_old_password();
  old_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_BankChangePassword.old_password)
}
inline ::std::string* SD_BankChangePassword::mutable_old_password() {
  set_has_old_password();
  // @@protoc_insertion_point(field_mutable:SD_BankChangePassword.old_password)
  return old_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_BankChangePassword::release_old_password() {
  // @@protoc_insertion_point(field_release:SD_BankChangePassword.old_password)
  clear_has_old_password();
  return old_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_BankChangePassword::set_allocated_old_password(::std::string* old_password) {
  if (old_password != NULL) {
    set_has_old_password();
  } else {
    clear_has_old_password();
  }
  old_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), old_password);
  // @@protoc_insertion_point(field_set_allocated:SD_BankChangePassword.old_password)
}

// optional string password = 3;
inline bool SD_BankChangePassword::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_BankChangePassword::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_BankChangePassword::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_BankChangePassword::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& SD_BankChangePassword::password() const {
  // @@protoc_insertion_point(field_get:SD_BankChangePassword.password)
  return password_.GetNoArena();
}
inline void SD_BankChangePassword::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_BankChangePassword.password)
}
#if LANG_CXX11
inline void SD_BankChangePassword::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_BankChangePassword.password)
}
#endif
inline void SD_BankChangePassword::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_BankChangePassword.password)
}
inline void SD_BankChangePassword::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_BankChangePassword.password)
}
inline ::std::string* SD_BankChangePassword::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:SD_BankChangePassword.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_BankChangePassword::release_password() {
  // @@protoc_insertion_point(field_release:SD_BankChangePassword.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_BankChangePassword::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:SD_BankChangePassword.password)
}

// -------------------------------------------------------------------

// DS_BankChangePassword

// optional int32 guid = 1;
inline bool DS_BankChangePassword::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_BankChangePassword::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_BankChangePassword::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_BankChangePassword::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_BankChangePassword::guid() const {
  // @@protoc_insertion_point(field_get:DS_BankChangePassword.guid)
  return guid_;
}
inline void DS_BankChangePassword::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_BankChangePassword.guid)
}

// optional int32 result = 2;
inline bool DS_BankChangePassword::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_BankChangePassword::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_BankChangePassword::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_BankChangePassword::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DS_BankChangePassword::result() const {
  // @@protoc_insertion_point(field_get:DS_BankChangePassword.result)
  return result_;
}
inline void DS_BankChangePassword::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DS_BankChangePassword.result)
}

// -------------------------------------------------------------------

// SD_BankLogin

// optional int32 guid = 1;
inline bool SD_BankLogin::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_BankLogin::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_BankLogin::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_BankLogin::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_BankLogin::guid() const {
  // @@protoc_insertion_point(field_get:SD_BankLogin.guid)
  return guid_;
}
inline void SD_BankLogin::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_BankLogin.guid)
}

// optional string password = 2;
inline bool SD_BankLogin::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_BankLogin::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_BankLogin::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_BankLogin::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& SD_BankLogin::password() const {
  // @@protoc_insertion_point(field_get:SD_BankLogin.password)
  return password_.GetNoArena();
}
inline void SD_BankLogin::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_BankLogin.password)
}
#if LANG_CXX11
inline void SD_BankLogin::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_BankLogin.password)
}
#endif
inline void SD_BankLogin::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_BankLogin.password)
}
inline void SD_BankLogin::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_BankLogin.password)
}
inline ::std::string* SD_BankLogin::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:SD_BankLogin.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_BankLogin::release_password() {
  // @@protoc_insertion_point(field_release:SD_BankLogin.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_BankLogin::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:SD_BankLogin.password)
}

// -------------------------------------------------------------------

// DS_BankLogin

// optional int32 guid = 1;
inline bool DS_BankLogin::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_BankLogin::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_BankLogin::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_BankLogin::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_BankLogin::guid() const {
  // @@protoc_insertion_point(field_get:DS_BankLogin.guid)
  return guid_;
}
inline void DS_BankLogin::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_BankLogin.guid)
}

// optional int32 result = 2;
inline bool DS_BankLogin::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_BankLogin::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_BankLogin::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_BankLogin::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DS_BankLogin::result() const {
  // @@protoc_insertion_point(field_get:DS_BankLogin.result)
  return result_;
}
inline void DS_BankLogin::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DS_BankLogin.result)
}

// -------------------------------------------------------------------

// SD_SaveBankStatement

// optional .BankStatement pb_statement = 1;
inline bool SD_SaveBankStatement::has_pb_statement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_SaveBankStatement::set_has_pb_statement() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_SaveBankStatement::clear_has_pb_statement() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_SaveBankStatement::clear_pb_statement() {
  if (pb_statement_ != NULL) pb_statement_->::BankStatement::Clear();
  clear_has_pb_statement();
}
inline const ::BankStatement& SD_SaveBankStatement::pb_statement() const {
  // @@protoc_insertion_point(field_get:SD_SaveBankStatement.pb_statement)
  return pb_statement_ != NULL ? *pb_statement_
                         : *::BankStatement::internal_default_instance();
}
inline ::BankStatement* SD_SaveBankStatement::mutable_pb_statement() {
  set_has_pb_statement();
  if (pb_statement_ == NULL) {
    pb_statement_ = new ::BankStatement;
  }
  // @@protoc_insertion_point(field_mutable:SD_SaveBankStatement.pb_statement)
  return pb_statement_;
}
inline ::BankStatement* SD_SaveBankStatement::release_pb_statement() {
  // @@protoc_insertion_point(field_release:SD_SaveBankStatement.pb_statement)
  clear_has_pb_statement();
  ::BankStatement* temp = pb_statement_;
  pb_statement_ = NULL;
  return temp;
}
inline void SD_SaveBankStatement::set_allocated_pb_statement(::BankStatement* pb_statement) {
  delete pb_statement_;
  pb_statement_ = pb_statement;
  if (pb_statement) {
    set_has_pb_statement();
  } else {
    clear_has_pb_statement();
  }
  // @@protoc_insertion_point(field_set_allocated:SD_SaveBankStatement.pb_statement)
}

// -------------------------------------------------------------------

// DS_SaveBankStatement

// optional .BankStatement pb_statement = 1;
inline bool DS_SaveBankStatement::has_pb_statement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_SaveBankStatement::set_has_pb_statement() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_SaveBankStatement::clear_has_pb_statement() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_SaveBankStatement::clear_pb_statement() {
  if (pb_statement_ != NULL) pb_statement_->::BankStatement::Clear();
  clear_has_pb_statement();
}
inline const ::BankStatement& DS_SaveBankStatement::pb_statement() const {
  // @@protoc_insertion_point(field_get:DS_SaveBankStatement.pb_statement)
  return pb_statement_ != NULL ? *pb_statement_
                         : *::BankStatement::internal_default_instance();
}
inline ::BankStatement* DS_SaveBankStatement::mutable_pb_statement() {
  set_has_pb_statement();
  if (pb_statement_ == NULL) {
    pb_statement_ = new ::BankStatement;
  }
  // @@protoc_insertion_point(field_mutable:DS_SaveBankStatement.pb_statement)
  return pb_statement_;
}
inline ::BankStatement* DS_SaveBankStatement::release_pb_statement() {
  // @@protoc_insertion_point(field_release:DS_SaveBankStatement.pb_statement)
  clear_has_pb_statement();
  ::BankStatement* temp = pb_statement_;
  pb_statement_ = NULL;
  return temp;
}
inline void DS_SaveBankStatement::set_allocated_pb_statement(::BankStatement* pb_statement) {
  delete pb_statement_;
  pb_statement_ = pb_statement;
  if (pb_statement) {
    set_has_pb_statement();
  } else {
    clear_has_pb_statement();
  }
  // @@protoc_insertion_point(field_set_allocated:DS_SaveBankStatement.pb_statement)
}

// -------------------------------------------------------------------

// SD_BankStatement

// optional int32 guid = 1;
inline bool SD_BankStatement::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_BankStatement::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_BankStatement::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_BankStatement::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_BankStatement::guid() const {
  // @@protoc_insertion_point(field_get:SD_BankStatement.guid)
  return guid_;
}
inline void SD_BankStatement::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_BankStatement.guid)
}

// optional int64 cur_serial = 2;
inline bool SD_BankStatement::has_cur_serial() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_BankStatement::set_has_cur_serial() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_BankStatement::clear_has_cur_serial() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_BankStatement::clear_cur_serial() {
  cur_serial_ = GOOGLE_LONGLONG(0);
  clear_has_cur_serial();
}
inline ::google::protobuf::int64 SD_BankStatement::cur_serial() const {
  // @@protoc_insertion_point(field_get:SD_BankStatement.cur_serial)
  return cur_serial_;
}
inline void SD_BankStatement::set_cur_serial(::google::protobuf::int64 value) {
  set_has_cur_serial();
  cur_serial_ = value;
  // @@protoc_insertion_point(field_set:SD_BankStatement.cur_serial)
}

// -------------------------------------------------------------------

// DS_BankStatement

// optional int32 guid = 1;
inline bool DS_BankStatement::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_BankStatement::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_BankStatement::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_BankStatement::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_BankStatement::guid() const {
  // @@protoc_insertion_point(field_get:DS_BankStatement.guid)
  return guid_;
}
inline void DS_BankStatement::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_BankStatement.guid)
}

// repeated .BankStatement pb_statement = 2;
inline int DS_BankStatement::pb_statement_size() const {
  return pb_statement_.size();
}
inline void DS_BankStatement::clear_pb_statement() {
  pb_statement_.Clear();
}
inline const ::BankStatement& DS_BankStatement::pb_statement(int index) const {
  // @@protoc_insertion_point(field_get:DS_BankStatement.pb_statement)
  return pb_statement_.Get(index);
}
inline ::BankStatement* DS_BankStatement::mutable_pb_statement(int index) {
  // @@protoc_insertion_point(field_mutable:DS_BankStatement.pb_statement)
  return pb_statement_.Mutable(index);
}
inline ::BankStatement* DS_BankStatement::add_pb_statement() {
  // @@protoc_insertion_point(field_add:DS_BankStatement.pb_statement)
  return pb_statement_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BankStatement >*
DS_BankStatement::mutable_pb_statement() {
  // @@protoc_insertion_point(field_mutable_list:DS_BankStatement.pb_statement)
  return &pb_statement_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BankStatement >&
DS_BankStatement::pb_statement() const {
  // @@protoc_insertion_point(field_list:DS_BankStatement.pb_statement)
  return pb_statement_;
}

// -------------------------------------------------------------------

// SD_BankTransfer

// optional int32 guid = 1;
inline bool SD_BankTransfer::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_BankTransfer::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_BankTransfer::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_BankTransfer::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_BankTransfer::guid() const {
  // @@protoc_insertion_point(field_get:SD_BankTransfer.guid)
  return guid_;
}
inline void SD_BankTransfer::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_BankTransfer.guid)
}

// optional int32 time = 2;
inline bool SD_BankTransfer::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SD_BankTransfer::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SD_BankTransfer::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SD_BankTransfer::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 SD_BankTransfer::time() const {
  // @@protoc_insertion_point(field_get:SD_BankTransfer.time)
  return time_;
}
inline void SD_BankTransfer::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:SD_BankTransfer.time)
}

// optional string target = 3;
inline bool SD_BankTransfer::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_BankTransfer::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_BankTransfer::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_BankTransfer::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target();
}
inline const ::std::string& SD_BankTransfer::target() const {
  // @@protoc_insertion_point(field_get:SD_BankTransfer.target)
  return target_.GetNoArena();
}
inline void SD_BankTransfer::set_target(const ::std::string& value) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_BankTransfer.target)
}
#if LANG_CXX11
inline void SD_BankTransfer::set_target(::std::string&& value) {
  set_has_target();
  target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_BankTransfer.target)
}
#endif
inline void SD_BankTransfer::set_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_BankTransfer.target)
}
inline void SD_BankTransfer::set_target(const char* value, size_t size) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_BankTransfer.target)
}
inline ::std::string* SD_BankTransfer::mutable_target() {
  set_has_target();
  // @@protoc_insertion_point(field_mutable:SD_BankTransfer.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_BankTransfer::release_target() {
  // @@protoc_insertion_point(field_release:SD_BankTransfer.target)
  clear_has_target();
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_BankTransfer::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    set_has_target();
  } else {
    clear_has_target();
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:SD_BankTransfer.target)
}

// optional int64 money = 4;
inline bool SD_BankTransfer::has_money() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SD_BankTransfer::set_has_money() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SD_BankTransfer::clear_has_money() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SD_BankTransfer::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SD_BankTransfer::money() const {
  // @@protoc_insertion_point(field_get:SD_BankTransfer.money)
  return money_;
}
inline void SD_BankTransfer::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SD_BankTransfer.money)
}

// optional int32 bank_balance = 5;
inline bool SD_BankTransfer::has_bank_balance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SD_BankTransfer::set_has_bank_balance() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SD_BankTransfer::clear_has_bank_balance() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SD_BankTransfer::clear_bank_balance() {
  bank_balance_ = 0;
  clear_has_bank_balance();
}
inline ::google::protobuf::int32 SD_BankTransfer::bank_balance() const {
  // @@protoc_insertion_point(field_get:SD_BankTransfer.bank_balance)
  return bank_balance_;
}
inline void SD_BankTransfer::set_bank_balance(::google::protobuf::int32 value) {
  set_has_bank_balance();
  bank_balance_ = value;
  // @@protoc_insertion_point(field_set:SD_BankTransfer.bank_balance)
}

// optional string selfname = 6;
inline bool SD_BankTransfer::has_selfname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_BankTransfer::set_has_selfname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_BankTransfer::clear_has_selfname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_BankTransfer::clear_selfname() {
  selfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_selfname();
}
inline const ::std::string& SD_BankTransfer::selfname() const {
  // @@protoc_insertion_point(field_get:SD_BankTransfer.selfname)
  return selfname_.GetNoArena();
}
inline void SD_BankTransfer::set_selfname(const ::std::string& value) {
  set_has_selfname();
  selfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_BankTransfer.selfname)
}
#if LANG_CXX11
inline void SD_BankTransfer::set_selfname(::std::string&& value) {
  set_has_selfname();
  selfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_BankTransfer.selfname)
}
#endif
inline void SD_BankTransfer::set_selfname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_selfname();
  selfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_BankTransfer.selfname)
}
inline void SD_BankTransfer::set_selfname(const char* value, size_t size) {
  set_has_selfname();
  selfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_BankTransfer.selfname)
}
inline ::std::string* SD_BankTransfer::mutable_selfname() {
  set_has_selfname();
  // @@protoc_insertion_point(field_mutable:SD_BankTransfer.selfname)
  return selfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_BankTransfer::release_selfname() {
  // @@protoc_insertion_point(field_release:SD_BankTransfer.selfname)
  clear_has_selfname();
  return selfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_BankTransfer::set_allocated_selfname(::std::string* selfname) {
  if (selfname != NULL) {
    set_has_selfname();
  } else {
    clear_has_selfname();
  }
  selfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), selfname);
  // @@protoc_insertion_point(field_set_allocated:SD_BankTransfer.selfname)
}

// optional int32 game_id = 7;
inline bool SD_BankTransfer::has_game_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SD_BankTransfer::set_has_game_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SD_BankTransfer::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SD_BankTransfer::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 SD_BankTransfer::game_id() const {
  // @@protoc_insertion_point(field_get:SD_BankTransfer.game_id)
  return game_id_;
}
inline void SD_BankTransfer::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SD_BankTransfer.game_id)
}

// -------------------------------------------------------------------

// DS_BankTransfer

// optional int32 result = 1;
inline bool DS_BankTransfer::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_BankTransfer::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_BankTransfer::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_BankTransfer::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DS_BankTransfer::result() const {
  // @@protoc_insertion_point(field_get:DS_BankTransfer.result)
  return result_;
}
inline void DS_BankTransfer::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DS_BankTransfer.result)
}

// optional .BankStatement pb_statement = 2;
inline bool DS_BankTransfer::has_pb_statement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_BankTransfer::set_has_pb_statement() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_BankTransfer::clear_has_pb_statement() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_BankTransfer::clear_pb_statement() {
  if (pb_statement_ != NULL) pb_statement_->::BankStatement::Clear();
  clear_has_pb_statement();
}
inline const ::BankStatement& DS_BankTransfer::pb_statement() const {
  // @@protoc_insertion_point(field_get:DS_BankTransfer.pb_statement)
  return pb_statement_ != NULL ? *pb_statement_
                         : *::BankStatement::internal_default_instance();
}
inline ::BankStatement* DS_BankTransfer::mutable_pb_statement() {
  set_has_pb_statement();
  if (pb_statement_ == NULL) {
    pb_statement_ = new ::BankStatement;
  }
  // @@protoc_insertion_point(field_mutable:DS_BankTransfer.pb_statement)
  return pb_statement_;
}
inline ::BankStatement* DS_BankTransfer::release_pb_statement() {
  // @@protoc_insertion_point(field_release:DS_BankTransfer.pb_statement)
  clear_has_pb_statement();
  ::BankStatement* temp = pb_statement_;
  pb_statement_ = NULL;
  return temp;
}
inline void DS_BankTransfer::set_allocated_pb_statement(::BankStatement* pb_statement) {
  delete pb_statement_;
  pb_statement_ = pb_statement;
  if (pb_statement) {
    set_has_pb_statement();
  } else {
    clear_has_pb_statement();
  }
  // @@protoc_insertion_point(field_set_allocated:DS_BankTransfer.pb_statement)
}

// optional int32 guid = 3;
inline bool DS_BankTransfer::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DS_BankTransfer::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DS_BankTransfer::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DS_BankTransfer::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_BankTransfer::guid() const {
  // @@protoc_insertion_point(field_get:DS_BankTransfer.guid)
  return guid_;
}
inline void DS_BankTransfer::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_BankTransfer.guid)
}

// optional int64 money = 4;
inline bool DS_BankTransfer::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DS_BankTransfer::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DS_BankTransfer::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DS_BankTransfer::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 DS_BankTransfer::money() const {
  // @@protoc_insertion_point(field_get:DS_BankTransfer.money)
  return money_;
}
inline void DS_BankTransfer::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:DS_BankTransfer.money)
}

// -------------------------------------------------------------------

// LS_BankTransferSelf

// optional int32 guid = 1;
inline bool LS_BankTransferSelf::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_BankTransferSelf::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_BankTransferSelf::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_BankTransferSelf::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LS_BankTransferSelf::guid() const {
  // @@protoc_insertion_point(field_get:LS_BankTransferSelf.guid)
  return guid_;
}
inline void LS_BankTransferSelf::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LS_BankTransferSelf.guid)
}

// optional int32 time = 2;
inline bool LS_BankTransferSelf::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LS_BankTransferSelf::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LS_BankTransferSelf::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LS_BankTransferSelf::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 LS_BankTransferSelf::time() const {
  // @@protoc_insertion_point(field_get:LS_BankTransferSelf.time)
  return time_;
}
inline void LS_BankTransferSelf::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:LS_BankTransferSelf.time)
}

// optional string target = 3;
inline bool LS_BankTransferSelf::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_BankTransferSelf::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_BankTransferSelf::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_BankTransferSelf::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target();
}
inline const ::std::string& LS_BankTransferSelf::target() const {
  // @@protoc_insertion_point(field_get:LS_BankTransferSelf.target)
  return target_.GetNoArena();
}
inline void LS_BankTransferSelf::set_target(const ::std::string& value) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LS_BankTransferSelf.target)
}
#if LANG_CXX11
inline void LS_BankTransferSelf::set_target(::std::string&& value) {
  set_has_target();
  target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LS_BankTransferSelf.target)
}
#endif
inline void LS_BankTransferSelf::set_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LS_BankTransferSelf.target)
}
inline void LS_BankTransferSelf::set_target(const char* value, size_t size) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LS_BankTransferSelf.target)
}
inline ::std::string* LS_BankTransferSelf::mutable_target() {
  set_has_target();
  // @@protoc_insertion_point(field_mutable:LS_BankTransferSelf.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LS_BankTransferSelf::release_target() {
  // @@protoc_insertion_point(field_release:LS_BankTransferSelf.target)
  clear_has_target();
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LS_BankTransferSelf::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    set_has_target();
  } else {
    clear_has_target();
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:LS_BankTransferSelf.target)
}

// optional int64 money = 4;
inline bool LS_BankTransferSelf::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LS_BankTransferSelf::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LS_BankTransferSelf::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LS_BankTransferSelf::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 LS_BankTransferSelf::money() const {
  // @@protoc_insertion_point(field_get:LS_BankTransferSelf.money)
  return money_;
}
inline void LS_BankTransferSelf::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:LS_BankTransferSelf.money)
}

// optional int32 bank_balance = 5;
inline bool LS_BankTransferSelf::has_bank_balance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LS_BankTransferSelf::set_has_bank_balance() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LS_BankTransferSelf::clear_has_bank_balance() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LS_BankTransferSelf::clear_bank_balance() {
  bank_balance_ = 0;
  clear_has_bank_balance();
}
inline ::google::protobuf::int32 LS_BankTransferSelf::bank_balance() const {
  // @@protoc_insertion_point(field_get:LS_BankTransferSelf.bank_balance)
  return bank_balance_;
}
inline void LS_BankTransferSelf::set_bank_balance(::google::protobuf::int32 value) {
  set_has_bank_balance();
  bank_balance_ = value;
  // @@protoc_insertion_point(field_set:LS_BankTransferSelf.bank_balance)
}

// -------------------------------------------------------------------

// LS_BankTransferTarget

// optional string selfname = 1;
inline bool LS_BankTransferTarget::has_selfname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_BankTransferTarget::set_has_selfname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_BankTransferTarget::clear_has_selfname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_BankTransferTarget::clear_selfname() {
  selfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_selfname();
}
inline const ::std::string& LS_BankTransferTarget::selfname() const {
  // @@protoc_insertion_point(field_get:LS_BankTransferTarget.selfname)
  return selfname_.GetNoArena();
}
inline void LS_BankTransferTarget::set_selfname(const ::std::string& value) {
  set_has_selfname();
  selfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LS_BankTransferTarget.selfname)
}
#if LANG_CXX11
inline void LS_BankTransferTarget::set_selfname(::std::string&& value) {
  set_has_selfname();
  selfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LS_BankTransferTarget.selfname)
}
#endif
inline void LS_BankTransferTarget::set_selfname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_selfname();
  selfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LS_BankTransferTarget.selfname)
}
inline void LS_BankTransferTarget::set_selfname(const char* value, size_t size) {
  set_has_selfname();
  selfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LS_BankTransferTarget.selfname)
}
inline ::std::string* LS_BankTransferTarget::mutable_selfname() {
  set_has_selfname();
  // @@protoc_insertion_point(field_mutable:LS_BankTransferTarget.selfname)
  return selfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LS_BankTransferTarget::release_selfname() {
  // @@protoc_insertion_point(field_release:LS_BankTransferTarget.selfname)
  clear_has_selfname();
  return selfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LS_BankTransferTarget::set_allocated_selfname(::std::string* selfname) {
  if (selfname != NULL) {
    set_has_selfname();
  } else {
    clear_has_selfname();
  }
  selfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), selfname);
  // @@protoc_insertion_point(field_set_allocated:LS_BankTransferTarget.selfname)
}

// optional int32 time = 2;
inline bool LS_BankTransferTarget::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LS_BankTransferTarget::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LS_BankTransferTarget::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LS_BankTransferTarget::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 LS_BankTransferTarget::time() const {
  // @@protoc_insertion_point(field_get:LS_BankTransferTarget.time)
  return time_;
}
inline void LS_BankTransferTarget::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:LS_BankTransferTarget.time)
}

// optional string target = 3;
inline bool LS_BankTransferTarget::has_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_BankTransferTarget::set_has_target() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_BankTransferTarget::clear_has_target() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_BankTransferTarget::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target();
}
inline const ::std::string& LS_BankTransferTarget::target() const {
  // @@protoc_insertion_point(field_get:LS_BankTransferTarget.target)
  return target_.GetNoArena();
}
inline void LS_BankTransferTarget::set_target(const ::std::string& value) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LS_BankTransferTarget.target)
}
#if LANG_CXX11
inline void LS_BankTransferTarget::set_target(::std::string&& value) {
  set_has_target();
  target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LS_BankTransferTarget.target)
}
#endif
inline void LS_BankTransferTarget::set_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LS_BankTransferTarget.target)
}
inline void LS_BankTransferTarget::set_target(const char* value, size_t size) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LS_BankTransferTarget.target)
}
inline ::std::string* LS_BankTransferTarget::mutable_target() {
  set_has_target();
  // @@protoc_insertion_point(field_mutable:LS_BankTransferTarget.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LS_BankTransferTarget::release_target() {
  // @@protoc_insertion_point(field_release:LS_BankTransferTarget.target)
  clear_has_target();
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LS_BankTransferTarget::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    set_has_target();
  } else {
    clear_has_target();
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:LS_BankTransferTarget.target)
}

// optional int64 money = 4;
inline bool LS_BankTransferTarget::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LS_BankTransferTarget::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LS_BankTransferTarget::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LS_BankTransferTarget::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 LS_BankTransferTarget::money() const {
  // @@protoc_insertion_point(field_get:LS_BankTransferTarget.money)
  return money_;
}
inline void LS_BankTransferTarget::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:LS_BankTransferTarget.money)
}

// -------------------------------------------------------------------

// S_BankTransferByGuid

// optional int32 guid = 1;
inline bool S_BankTransferByGuid::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_BankTransferByGuid::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_BankTransferByGuid::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_BankTransferByGuid::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 S_BankTransferByGuid::guid() const {
  // @@protoc_insertion_point(field_get:S_BankTransferByGuid.guid)
  return guid_;
}
inline void S_BankTransferByGuid::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:S_BankTransferByGuid.guid)
}

// optional int32 target_guid = 2;
inline bool S_BankTransferByGuid::has_target_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_BankTransferByGuid::set_has_target_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_BankTransferByGuid::clear_has_target_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_BankTransferByGuid::clear_target_guid() {
  target_guid_ = 0;
  clear_has_target_guid();
}
inline ::google::protobuf::int32 S_BankTransferByGuid::target_guid() const {
  // @@protoc_insertion_point(field_get:S_BankTransferByGuid.target_guid)
  return target_guid_;
}
inline void S_BankTransferByGuid::set_target_guid(::google::protobuf::int32 value) {
  set_has_target_guid();
  target_guid_ = value;
  // @@protoc_insertion_point(field_set:S_BankTransferByGuid.target_guid)
}

// optional int64 money = 3;
inline bool S_BankTransferByGuid::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_BankTransferByGuid::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_BankTransferByGuid::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_BankTransferByGuid::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 S_BankTransferByGuid::money() const {
  // @@protoc_insertion_point(field_get:S_BankTransferByGuid.money)
  return money_;
}
inline void S_BankTransferByGuid::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:S_BankTransferByGuid.money)
}

// optional int32 game_id = 4;
inline bool S_BankTransferByGuid::has_game_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S_BankTransferByGuid::set_has_game_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S_BankTransferByGuid::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S_BankTransferByGuid::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 S_BankTransferByGuid::game_id() const {
  // @@protoc_insertion_point(field_get:S_BankTransferByGuid.game_id)
  return game_id_;
}
inline void S_BankTransferByGuid::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:S_BankTransferByGuid.game_id)
}

// -------------------------------------------------------------------

// DS_BankTransferByGuid

// optional int32 result = 1;
inline bool DS_BankTransferByGuid::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_BankTransferByGuid::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_BankTransferByGuid::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_BankTransferByGuid::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DS_BankTransferByGuid::result() const {
  // @@protoc_insertion_point(field_get:DS_BankTransferByGuid.result)
  return result_;
}
inline void DS_BankTransferByGuid::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DS_BankTransferByGuid.result)
}

// optional int32 guid = 2;
inline bool DS_BankTransferByGuid::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_BankTransferByGuid::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_BankTransferByGuid::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_BankTransferByGuid::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_BankTransferByGuid::guid() const {
  // @@protoc_insertion_point(field_get:DS_BankTransferByGuid.guid)
  return guid_;
}
inline void DS_BankTransferByGuid::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_BankTransferByGuid.guid)
}

// optional int64 money = 3;
inline bool DS_BankTransferByGuid::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DS_BankTransferByGuid::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DS_BankTransferByGuid::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DS_BankTransferByGuid::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 DS_BankTransferByGuid::money() const {
  // @@protoc_insertion_point(field_get:DS_BankTransferByGuid.money)
  return money_;
}
inline void DS_BankTransferByGuid::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:DS_BankTransferByGuid.money)
}

// -------------------------------------------------------------------

// LS_BankTransferByGuid

// optional int32 guid = 1;
inline bool LS_BankTransferByGuid::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_BankTransferByGuid::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_BankTransferByGuid::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_BankTransferByGuid::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LS_BankTransferByGuid::guid() const {
  // @@protoc_insertion_point(field_get:LS_BankTransferByGuid.guid)
  return guid_;
}
inline void LS_BankTransferByGuid::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LS_BankTransferByGuid.guid)
}

// optional int64 money = 2;
inline bool LS_BankTransferByGuid::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_BankTransferByGuid::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_BankTransferByGuid::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_BankTransferByGuid::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 LS_BankTransferByGuid::money() const {
  // @@protoc_insertion_point(field_get:LS_BankTransferByGuid.money)
  return money_;
}
inline void LS_BankTransferByGuid::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:LS_BankTransferByGuid.money)
}

// -------------------------------------------------------------------

// SD_BankLog

// optional int32 time = 1;
inline bool SD_BankLog::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SD_BankLog::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SD_BankLog::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SD_BankLog::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 SD_BankLog::time() const {
  // @@protoc_insertion_point(field_get:SD_BankLog.time)
  return time_;
}
inline void SD_BankLog::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:SD_BankLog.time)
}

// optional int32 guid = 2;
inline bool SD_BankLog::has_guid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SD_BankLog::set_has_guid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SD_BankLog::clear_has_guid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SD_BankLog::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_BankLog::guid() const {
  // @@protoc_insertion_point(field_get:SD_BankLog.guid)
  return guid_;
}
inline void SD_BankLog::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_BankLog.guid)
}

// optional string nickname = 3;
inline bool SD_BankLog::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_BankLog::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_BankLog::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_BankLog::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& SD_BankLog::nickname() const {
  // @@protoc_insertion_point(field_get:SD_BankLog.nickname)
  return nickname_.GetNoArena();
}
inline void SD_BankLog::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_BankLog.nickname)
}
#if LANG_CXX11
inline void SD_BankLog::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_BankLog.nickname)
}
#endif
inline void SD_BankLog::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_BankLog.nickname)
}
inline void SD_BankLog::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_BankLog.nickname)
}
inline ::std::string* SD_BankLog::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:SD_BankLog.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_BankLog::release_nickname() {
  // @@protoc_insertion_point(field_release:SD_BankLog.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_BankLog::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:SD_BankLog.nickname)
}

// optional string phone = 4;
inline bool SD_BankLog::has_phone() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_BankLog::set_has_phone() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_BankLog::clear_has_phone() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_BankLog::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& SD_BankLog::phone() const {
  // @@protoc_insertion_point(field_get:SD_BankLog.phone)
  return phone_.GetNoArena();
}
inline void SD_BankLog::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_BankLog.phone)
}
#if LANG_CXX11
inline void SD_BankLog::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_BankLog.phone)
}
#endif
inline void SD_BankLog::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_BankLog.phone)
}
inline void SD_BankLog::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_BankLog.phone)
}
inline ::std::string* SD_BankLog::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:SD_BankLog.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_BankLog::release_phone() {
  // @@protoc_insertion_point(field_release:SD_BankLog.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_BankLog::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:SD_BankLog.phone)
}

// optional int32 opt_type = 5;
inline bool SD_BankLog::has_opt_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SD_BankLog::set_has_opt_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SD_BankLog::clear_has_opt_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SD_BankLog::clear_opt_type() {
  opt_type_ = 0;
  clear_has_opt_type();
}
inline ::google::protobuf::int32 SD_BankLog::opt_type() const {
  // @@protoc_insertion_point(field_get:SD_BankLog.opt_type)
  return opt_type_;
}
inline void SD_BankLog::set_opt_type(::google::protobuf::int32 value) {
  set_has_opt_type();
  opt_type_ = value;
  // @@protoc_insertion_point(field_set:SD_BankLog.opt_type)
}

// optional int32 money = 6;
inline bool SD_BankLog::has_money() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SD_BankLog::set_has_money() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SD_BankLog::clear_has_money() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SD_BankLog::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 SD_BankLog::money() const {
  // @@protoc_insertion_point(field_get:SD_BankLog.money)
  return money_;
}
inline void SD_BankLog::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SD_BankLog.money)
}

// optional int32 old_money = 7;
inline bool SD_BankLog::has_old_money() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SD_BankLog::set_has_old_money() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SD_BankLog::clear_has_old_money() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SD_BankLog::clear_old_money() {
  old_money_ = 0;
  clear_has_old_money();
}
inline ::google::protobuf::int32 SD_BankLog::old_money() const {
  // @@protoc_insertion_point(field_get:SD_BankLog.old_money)
  return old_money_;
}
inline void SD_BankLog::set_old_money(::google::protobuf::int32 value) {
  set_has_old_money();
  old_money_ = value;
  // @@protoc_insertion_point(field_set:SD_BankLog.old_money)
}

// optional int32 new_money = 8;
inline bool SD_BankLog::has_new_money() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SD_BankLog::set_has_new_money() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SD_BankLog::clear_has_new_money() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SD_BankLog::clear_new_money() {
  new_money_ = 0;
  clear_has_new_money();
}
inline ::google::protobuf::int32 SD_BankLog::new_money() const {
  // @@protoc_insertion_point(field_get:SD_BankLog.new_money)
  return new_money_;
}
inline void SD_BankLog::set_new_money(::google::protobuf::int32 value) {
  set_has_new_money();
  new_money_ = value;
  // @@protoc_insertion_point(field_set:SD_BankLog.new_money)
}

// optional int32 old_bank = 9;
inline bool SD_BankLog::has_old_bank() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SD_BankLog::set_has_old_bank() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SD_BankLog::clear_has_old_bank() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SD_BankLog::clear_old_bank() {
  old_bank_ = 0;
  clear_has_old_bank();
}
inline ::google::protobuf::int32 SD_BankLog::old_bank() const {
  // @@protoc_insertion_point(field_get:SD_BankLog.old_bank)
  return old_bank_;
}
inline void SD_BankLog::set_old_bank(::google::protobuf::int32 value) {
  set_has_old_bank();
  old_bank_ = value;
  // @@protoc_insertion_point(field_set:SD_BankLog.old_bank)
}

// optional int32 new_bank = 10;
inline bool SD_BankLog::has_new_bank() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SD_BankLog::set_has_new_bank() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SD_BankLog::clear_has_new_bank() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SD_BankLog::clear_new_bank() {
  new_bank_ = 0;
  clear_has_new_bank();
}
inline ::google::protobuf::int32 SD_BankLog::new_bank() const {
  // @@protoc_insertion_point(field_get:SD_BankLog.new_bank)
  return new_bank_;
}
inline void SD_BankLog::set_new_bank(::google::protobuf::int32 value) {
  set_has_new_bank();
  new_bank_ = value;
  // @@protoc_insertion_point(field_set:SD_BankLog.new_bank)
}

// optional string ip = 11;
inline bool SD_BankLog::has_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_BankLog::set_has_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_BankLog::clear_has_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_BankLog::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& SD_BankLog::ip() const {
  // @@protoc_insertion_point(field_get:SD_BankLog.ip)
  return ip_.GetNoArena();
}
inline void SD_BankLog::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_BankLog.ip)
}
#if LANG_CXX11
inline void SD_BankLog::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_BankLog.ip)
}
#endif
inline void SD_BankLog::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_BankLog.ip)
}
inline void SD_BankLog::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_BankLog.ip)
}
inline ::std::string* SD_BankLog::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:SD_BankLog.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_BankLog::release_ip() {
  // @@protoc_insertion_point(field_release:SD_BankLog.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_BankLog::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:SD_BankLog.ip)
}

// -------------------------------------------------------------------

// SD_Do_OneSql

// optional string sql = 1;
inline bool SD_Do_OneSql::has_sql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_Do_OneSql::set_has_sql() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_Do_OneSql::clear_has_sql() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_Do_OneSql::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sql();
}
inline const ::std::string& SD_Do_OneSql::sql() const {
  // @@protoc_insertion_point(field_get:SD_Do_OneSql.sql)
  return sql_.GetNoArena();
}
inline void SD_Do_OneSql::set_sql(const ::std::string& value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_Do_OneSql.sql)
}
#if LANG_CXX11
inline void SD_Do_OneSql::set_sql(::std::string&& value) {
  set_has_sql();
  sql_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_Do_OneSql.sql)
}
#endif
inline void SD_Do_OneSql::set_sql(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_Do_OneSql.sql)
}
inline void SD_Do_OneSql::set_sql(const char* value, size_t size) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_Do_OneSql.sql)
}
inline ::std::string* SD_Do_OneSql::mutable_sql() {
  set_has_sql();
  // @@protoc_insertion_point(field_mutable:SD_Do_OneSql.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_Do_OneSql::release_sql() {
  // @@protoc_insertion_point(field_release:SD_Do_OneSql.sql)
  clear_has_sql();
  return sql_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_Do_OneSql::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    set_has_sql();
  } else {
    clear_has_sql();
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:SD_Do_OneSql.sql)
}

// optional string db_name = 2;
inline bool SD_Do_OneSql::has_db_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_Do_OneSql::set_has_db_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_Do_OneSql::clear_has_db_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_Do_OneSql::clear_db_name() {
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_db_name();
}
inline const ::std::string& SD_Do_OneSql::db_name() const {
  // @@protoc_insertion_point(field_get:SD_Do_OneSql.db_name)
  return db_name_.GetNoArena();
}
inline void SD_Do_OneSql::set_db_name(const ::std::string& value) {
  set_has_db_name();
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_Do_OneSql.db_name)
}
#if LANG_CXX11
inline void SD_Do_OneSql::set_db_name(::std::string&& value) {
  set_has_db_name();
  db_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_Do_OneSql.db_name)
}
#endif
inline void SD_Do_OneSql::set_db_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_db_name();
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_Do_OneSql.db_name)
}
inline void SD_Do_OneSql::set_db_name(const char* value, size_t size) {
  set_has_db_name();
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_Do_OneSql.db_name)
}
inline ::std::string* SD_Do_OneSql::mutable_db_name() {
  set_has_db_name();
  // @@protoc_insertion_point(field_mutable:SD_Do_OneSql.db_name)
  return db_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_Do_OneSql::release_db_name() {
  // @@protoc_insertion_point(field_release:SD_Do_OneSql.db_name)
  clear_has_db_name();
  return db_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_Do_OneSql::set_allocated_db_name(::std::string* db_name) {
  if (db_name != NULL) {
    set_has_db_name();
  } else {
    clear_has_db_name();
  }
  db_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_name);
  // @@protoc_insertion_point(field_set_allocated:SD_Do_OneSql.db_name)
}

// -------------------------------------------------------------------

// SD_SendMail

// optional .MailInfo pb_mail = 1;
inline bool SD_SendMail::has_pb_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_SendMail::set_has_pb_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_SendMail::clear_has_pb_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_SendMail::clear_pb_mail() {
  if (pb_mail_ != NULL) pb_mail_->::MailInfo::Clear();
  clear_has_pb_mail();
}
inline const ::MailInfo& SD_SendMail::pb_mail() const {
  // @@protoc_insertion_point(field_get:SD_SendMail.pb_mail)
  return pb_mail_ != NULL ? *pb_mail_
                         : *::MailInfo::internal_default_instance();
}
inline ::MailInfo* SD_SendMail::mutable_pb_mail() {
  set_has_pb_mail();
  if (pb_mail_ == NULL) {
    pb_mail_ = new ::MailInfo;
  }
  // @@protoc_insertion_point(field_mutable:SD_SendMail.pb_mail)
  return pb_mail_;
}
inline ::MailInfo* SD_SendMail::release_pb_mail() {
  // @@protoc_insertion_point(field_release:SD_SendMail.pb_mail)
  clear_has_pb_mail();
  ::MailInfo* temp = pb_mail_;
  pb_mail_ = NULL;
  return temp;
}
inline void SD_SendMail::set_allocated_pb_mail(::MailInfo* pb_mail) {
  delete pb_mail_;
  pb_mail_ = pb_mail;
  if (pb_mail) {
    set_has_pb_mail();
  } else {
    clear_has_pb_mail();
  }
  // @@protoc_insertion_point(field_set_allocated:SD_SendMail.pb_mail)
}

// -------------------------------------------------------------------

// DES_SendMail

// optional .MailInfo pb_mail = 1;
inline bool DES_SendMail::has_pb_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DES_SendMail::set_has_pb_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DES_SendMail::clear_has_pb_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DES_SendMail::clear_pb_mail() {
  if (pb_mail_ != NULL) pb_mail_->::MailInfo::Clear();
  clear_has_pb_mail();
}
inline const ::MailInfo& DES_SendMail::pb_mail() const {
  // @@protoc_insertion_point(field_get:DES_SendMail.pb_mail)
  return pb_mail_ != NULL ? *pb_mail_
                         : *::MailInfo::internal_default_instance();
}
inline ::MailInfo* DES_SendMail::mutable_pb_mail() {
  set_has_pb_mail();
  if (pb_mail_ == NULL) {
    pb_mail_ = new ::MailInfo;
  }
  // @@protoc_insertion_point(field_mutable:DES_SendMail.pb_mail)
  return pb_mail_;
}
inline ::MailInfo* DES_SendMail::release_pb_mail() {
  // @@protoc_insertion_point(field_release:DES_SendMail.pb_mail)
  clear_has_pb_mail();
  ::MailInfo* temp = pb_mail_;
  pb_mail_ = NULL;
  return temp;
}
inline void DES_SendMail::set_allocated_pb_mail(::MailInfo* pb_mail) {
  delete pb_mail_;
  pb_mail_ = pb_mail;
  if (pb_mail) {
    set_has_pb_mail();
  } else {
    clear_has_pb_mail();
  }
  // @@protoc_insertion_point(field_set_allocated:DES_SendMail.pb_mail)
}

// optional int32 ret = 2;
inline bool DES_SendMail::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DES_SendMail::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DES_SendMail::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DES_SendMail::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DES_SendMail::ret() const {
  // @@protoc_insertion_point(field_get:DES_SendMail.ret)
  return ret_;
}
inline void DES_SendMail::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:DES_SendMail.ret)
}

// -------------------------------------------------------------------

// SD_DelMail

// optional int32 guid = 1;
inline bool SD_DelMail::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_DelMail::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_DelMail::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_DelMail::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_DelMail::guid() const {
  // @@protoc_insertion_point(field_get:SD_DelMail.guid)
  return guid_;
}
inline void SD_DelMail::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_DelMail.guid)
}

// optional string mail_id = 2;
inline bool SD_DelMail::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_DelMail::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_DelMail::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_DelMail::clear_mail_id() {
  mail_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mail_id();
}
inline const ::std::string& SD_DelMail::mail_id() const {
  // @@protoc_insertion_point(field_get:SD_DelMail.mail_id)
  return mail_id_.GetNoArena();
}
inline void SD_DelMail::set_mail_id(const ::std::string& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_DelMail.mail_id)
}
#if LANG_CXX11
inline void SD_DelMail::set_mail_id(::std::string&& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_DelMail.mail_id)
}
#endif
inline void SD_DelMail::set_mail_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_DelMail.mail_id)
}
inline void SD_DelMail::set_mail_id(const char* value, size_t size) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_DelMail.mail_id)
}
inline ::std::string* SD_DelMail::mutable_mail_id() {
  set_has_mail_id();
  // @@protoc_insertion_point(field_mutable:SD_DelMail.mail_id)
  return mail_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_DelMail::release_mail_id() {
  // @@protoc_insertion_point(field_release:SD_DelMail.mail_id)
  clear_has_mail_id();
  return mail_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_DelMail::set_allocated_mail_id(::std::string* mail_id) {
  if (mail_id != NULL) {
    set_has_mail_id();
  } else {
    clear_has_mail_id();
  }
  mail_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_id);
  // @@protoc_insertion_point(field_set_allocated:SD_DelMail.mail_id)
}

// -------------------------------------------------------------------

// SD_ReceiveMailAttachment

// optional int32 guid = 1;
inline bool SD_ReceiveMailAttachment::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_ReceiveMailAttachment::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_ReceiveMailAttachment::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_ReceiveMailAttachment::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_ReceiveMailAttachment::guid() const {
  // @@protoc_insertion_point(field_get:SD_ReceiveMailAttachment.guid)
  return guid_;
}
inline void SD_ReceiveMailAttachment::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_ReceiveMailAttachment.guid)
}

// optional string mail_id = 2;
inline bool SD_ReceiveMailAttachment::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_ReceiveMailAttachment::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_ReceiveMailAttachment::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_ReceiveMailAttachment::clear_mail_id() {
  mail_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mail_id();
}
inline const ::std::string& SD_ReceiveMailAttachment::mail_id() const {
  // @@protoc_insertion_point(field_get:SD_ReceiveMailAttachment.mail_id)
  return mail_id_.GetNoArena();
}
inline void SD_ReceiveMailAttachment::set_mail_id(const ::std::string& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_ReceiveMailAttachment.mail_id)
}
#if LANG_CXX11
inline void SD_ReceiveMailAttachment::set_mail_id(::std::string&& value) {
  set_has_mail_id();
  mail_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_ReceiveMailAttachment.mail_id)
}
#endif
inline void SD_ReceiveMailAttachment::set_mail_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_ReceiveMailAttachment.mail_id)
}
inline void SD_ReceiveMailAttachment::set_mail_id(const char* value, size_t size) {
  set_has_mail_id();
  mail_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_ReceiveMailAttachment.mail_id)
}
inline ::std::string* SD_ReceiveMailAttachment::mutable_mail_id() {
  set_has_mail_id();
  // @@protoc_insertion_point(field_mutable:SD_ReceiveMailAttachment.mail_id)
  return mail_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_ReceiveMailAttachment::release_mail_id() {
  // @@protoc_insertion_point(field_release:SD_ReceiveMailAttachment.mail_id)
  clear_has_mail_id();
  return mail_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_ReceiveMailAttachment::set_allocated_mail_id(::std::string* mail_id) {
  if (mail_id != NULL) {
    set_has_mail_id();
  } else {
    clear_has_mail_id();
  }
  mail_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_id);
  // @@protoc_insertion_point(field_set_allocated:SD_ReceiveMailAttachment.mail_id)
}

// -------------------------------------------------------------------

// DE_UpdateRank

// optional int32 rank_type = 1;
inline bool DE_UpdateRank::has_rank_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DE_UpdateRank::set_has_rank_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DE_UpdateRank::clear_has_rank_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DE_UpdateRank::clear_rank_type() {
  rank_type_ = 0;
  clear_has_rank_type();
}
inline ::google::protobuf::int32 DE_UpdateRank::rank_type() const {
  // @@protoc_insertion_point(field_get:DE_UpdateRank.rank_type)
  return rank_type_;
}
inline void DE_UpdateRank::set_rank_type(::google::protobuf::int32 value) {
  set_has_rank_type();
  rank_type_ = value;
  // @@protoc_insertion_point(field_set:DE_UpdateRank.rank_type)
}

// repeated .RankItem pb_rank = 2;
inline int DE_UpdateRank::pb_rank_size() const {
  return pb_rank_.size();
}
inline void DE_UpdateRank::clear_pb_rank() {
  pb_rank_.Clear();
}
inline const ::RankItem& DE_UpdateRank::pb_rank(int index) const {
  // @@protoc_insertion_point(field_get:DE_UpdateRank.pb_rank)
  return pb_rank_.Get(index);
}
inline ::RankItem* DE_UpdateRank::mutable_pb_rank(int index) {
  // @@protoc_insertion_point(field_mutable:DE_UpdateRank.pb_rank)
  return pb_rank_.Mutable(index);
}
inline ::RankItem* DE_UpdateRank::add_pb_rank() {
  // @@protoc_insertion_point(field_add:DE_UpdateRank.pb_rank)
  return pb_rank_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RankItem >*
DE_UpdateRank::mutable_pb_rank() {
  // @@protoc_insertion_point(field_mutable_list:DE_UpdateRank.pb_rank)
  return &pb_rank_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RankItem >&
DE_UpdateRank::pb_rank() const {
  // @@protoc_insertion_point(field_list:DE_UpdateRank.pb_rank)
  return pb_rank_;
}

// -------------------------------------------------------------------

// SD_UpdateEarnings

// optional int32 guid = 1;
inline bool SD_UpdateEarnings::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_UpdateEarnings::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_UpdateEarnings::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_UpdateEarnings::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_UpdateEarnings::guid() const {
  // @@protoc_insertion_point(field_get:SD_UpdateEarnings.guid)
  return guid_;
}
inline void SD_UpdateEarnings::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_UpdateEarnings.guid)
}

// optional int32 money = 2;
inline bool SD_UpdateEarnings::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_UpdateEarnings::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_UpdateEarnings::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_UpdateEarnings::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 SD_UpdateEarnings::money() const {
  // @@protoc_insertion_point(field_get:SD_UpdateEarnings.money)
  return money_;
}
inline void SD_UpdateEarnings::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SD_UpdateEarnings.money)
}

// -------------------------------------------------------------------

// SD_LogMoney

// optional int32 guid = 1;
inline bool SD_LogMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_LogMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_LogMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_LogMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_LogMoney::guid() const {
  // @@protoc_insertion_point(field_get:SD_LogMoney.guid)
  return guid_;
}
inline void SD_LogMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_LogMoney.guid)
}

// optional int64 old_money = 2;
inline bool SD_LogMoney::has_old_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_LogMoney::set_has_old_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_LogMoney::clear_has_old_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_LogMoney::clear_old_money() {
  old_money_ = GOOGLE_LONGLONG(0);
  clear_has_old_money();
}
inline ::google::protobuf::int64 SD_LogMoney::old_money() const {
  // @@protoc_insertion_point(field_get:SD_LogMoney.old_money)
  return old_money_;
}
inline void SD_LogMoney::set_old_money(::google::protobuf::int64 value) {
  set_has_old_money();
  old_money_ = value;
  // @@protoc_insertion_point(field_set:SD_LogMoney.old_money)
}

// optional int64 new_money = 3;
inline bool SD_LogMoney::has_new_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_LogMoney::set_has_new_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_LogMoney::clear_has_new_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_LogMoney::clear_new_money() {
  new_money_ = GOOGLE_LONGLONG(0);
  clear_has_new_money();
}
inline ::google::protobuf::int64 SD_LogMoney::new_money() const {
  // @@protoc_insertion_point(field_get:SD_LogMoney.new_money)
  return new_money_;
}
inline void SD_LogMoney::set_new_money(::google::protobuf::int64 value) {
  set_has_new_money();
  new_money_ = value;
  // @@protoc_insertion_point(field_set:SD_LogMoney.new_money)
}

// optional int64 old_bank = 4;
inline bool SD_LogMoney::has_old_bank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SD_LogMoney::set_has_old_bank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SD_LogMoney::clear_has_old_bank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SD_LogMoney::clear_old_bank() {
  old_bank_ = GOOGLE_LONGLONG(0);
  clear_has_old_bank();
}
inline ::google::protobuf::int64 SD_LogMoney::old_bank() const {
  // @@protoc_insertion_point(field_get:SD_LogMoney.old_bank)
  return old_bank_;
}
inline void SD_LogMoney::set_old_bank(::google::protobuf::int64 value) {
  set_has_old_bank();
  old_bank_ = value;
  // @@protoc_insertion_point(field_set:SD_LogMoney.old_bank)
}

// optional int64 new_bank = 5;
inline bool SD_LogMoney::has_new_bank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SD_LogMoney::set_has_new_bank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SD_LogMoney::clear_has_new_bank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SD_LogMoney::clear_new_bank() {
  new_bank_ = GOOGLE_LONGLONG(0);
  clear_has_new_bank();
}
inline ::google::protobuf::int64 SD_LogMoney::new_bank() const {
  // @@protoc_insertion_point(field_get:SD_LogMoney.new_bank)
  return new_bank_;
}
inline void SD_LogMoney::set_new_bank(::google::protobuf::int64 value) {
  set_has_new_bank();
  new_bank_ = value;
  // @@protoc_insertion_point(field_set:SD_LogMoney.new_bank)
}

// optional int32 opt_type = 6;
inline bool SD_LogMoney::has_opt_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SD_LogMoney::set_has_opt_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SD_LogMoney::clear_has_opt_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SD_LogMoney::clear_opt_type() {
  opt_type_ = 0;
  clear_has_opt_type();
}
inline ::google::protobuf::int32 SD_LogMoney::opt_type() const {
  // @@protoc_insertion_point(field_get:SD_LogMoney.opt_type)
  return opt_type_;
}
inline void SD_LogMoney::set_opt_type(::google::protobuf::int32 value) {
  set_has_opt_type();
  opt_type_ = value;
  // @@protoc_insertion_point(field_set:SD_LogMoney.opt_type)
}

// -------------------------------------------------------------------

// WL_RequestGameServerInfo

// optional int32 id = 1;
inline bool WL_RequestGameServerInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WL_RequestGameServerInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WL_RequestGameServerInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WL_RequestGameServerInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WL_RequestGameServerInfo::id() const {
  // @@protoc_insertion_point(field_get:WL_RequestGameServerInfo.id)
  return id_;
}
inline void WL_RequestGameServerInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:WL_RequestGameServerInfo.id)
}

// -------------------------------------------------------------------

// WebGameServerInfo

// optional int32 cpu = 1;
inline bool WebGameServerInfo::has_cpu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebGameServerInfo::set_has_cpu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebGameServerInfo::clear_has_cpu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebGameServerInfo::clear_cpu() {
  cpu_ = 0;
  clear_has_cpu();
}
inline ::google::protobuf::int32 WebGameServerInfo::cpu() const {
  // @@protoc_insertion_point(field_get:WebGameServerInfo.cpu)
  return cpu_;
}
inline void WebGameServerInfo::set_cpu(::google::protobuf::int32 value) {
  set_has_cpu();
  cpu_ = value;
  // @@protoc_insertion_point(field_set:WebGameServerInfo.cpu)
}

// optional int32 memory = 2;
inline bool WebGameServerInfo::has_memory() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebGameServerInfo::set_has_memory() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebGameServerInfo::clear_has_memory() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebGameServerInfo::clear_memory() {
  memory_ = 0;
  clear_has_memory();
}
inline ::google::protobuf::int32 WebGameServerInfo::memory() const {
  // @@protoc_insertion_point(field_get:WebGameServerInfo.memory)
  return memory_;
}
inline void WebGameServerInfo::set_memory(::google::protobuf::int32 value) {
  set_has_memory();
  memory_ = value;
  // @@protoc_insertion_point(field_set:WebGameServerInfo.memory)
}

// optional int32 status = 3;
inline bool WebGameServerInfo::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WebGameServerInfo::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WebGameServerInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WebGameServerInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 WebGameServerInfo::status() const {
  // @@protoc_insertion_point(field_get:WebGameServerInfo.status)
  return status_;
}
inline void WebGameServerInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:WebGameServerInfo.status)
}

// optional string ip = 4;
inline bool WebGameServerInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebGameServerInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebGameServerInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebGameServerInfo::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& WebGameServerInfo::ip() const {
  // @@protoc_insertion_point(field_get:WebGameServerInfo.ip)
  return ip_.GetNoArena();
}
inline void WebGameServerInfo::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WebGameServerInfo.ip)
}
#if LANG_CXX11
inline void WebGameServerInfo::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WebGameServerInfo.ip)
}
#endif
inline void WebGameServerInfo::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WebGameServerInfo.ip)
}
inline void WebGameServerInfo::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WebGameServerInfo.ip)
}
inline ::std::string* WebGameServerInfo::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:WebGameServerInfo.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WebGameServerInfo::release_ip() {
  // @@protoc_insertion_point(field_release:WebGameServerInfo.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WebGameServerInfo::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:WebGameServerInfo.ip)
}

// optional int32 port = 5;
inline bool WebGameServerInfo::has_port() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebGameServerInfo::set_has_port() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebGameServerInfo::clear_has_port() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebGameServerInfo::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 WebGameServerInfo::port() const {
  // @@protoc_insertion_point(field_get:WebGameServerInfo.port)
  return port_;
}
inline void WebGameServerInfo::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:WebGameServerInfo.port)
}

// optional int32 first_game_type = 6;
inline bool WebGameServerInfo::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebGameServerInfo::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebGameServerInfo::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebGameServerInfo::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 WebGameServerInfo::first_game_type() const {
  // @@protoc_insertion_point(field_get:WebGameServerInfo.first_game_type)
  return first_game_type_;
}
inline void WebGameServerInfo::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:WebGameServerInfo.first_game_type)
}

// optional int32 second_game_type = 7;
inline bool WebGameServerInfo::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WebGameServerInfo::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WebGameServerInfo::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WebGameServerInfo::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
inline ::google::protobuf::int32 WebGameServerInfo::second_game_type() const {
  // @@protoc_insertion_point(field_get:WebGameServerInfo.second_game_type)
  return second_game_type_;
}
inline void WebGameServerInfo::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:WebGameServerInfo.second_game_type)
}

// optional int32 player_online_count = 8;
inline bool WebGameServerInfo::has_player_online_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WebGameServerInfo::set_has_player_online_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WebGameServerInfo::clear_has_player_online_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WebGameServerInfo::clear_player_online_count() {
  player_online_count_ = 0;
  clear_has_player_online_count();
}
inline ::google::protobuf::int32 WebGameServerInfo::player_online_count() const {
  // @@protoc_insertion_point(field_get:WebGameServerInfo.player_online_count)
  return player_online_count_;
}
inline void WebGameServerInfo::set_player_online_count(::google::protobuf::int32 value) {
  set_has_player_online_count();
  player_online_count_ = value;
  // @@protoc_insertion_point(field_set:WebGameServerInfo.player_online_count)
}

// optional int32 robot_online_count = 9;
inline bool WebGameServerInfo::has_robot_online_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WebGameServerInfo::set_has_robot_online_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WebGameServerInfo::clear_has_robot_online_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WebGameServerInfo::clear_robot_online_count() {
  robot_online_count_ = 0;
  clear_has_robot_online_count();
}
inline ::google::protobuf::int32 WebGameServerInfo::robot_online_count() const {
  // @@protoc_insertion_point(field_get:WebGameServerInfo.robot_online_count)
  return robot_online_count_;
}
inline void WebGameServerInfo::set_robot_online_count(::google::protobuf::int32 value) {
  set_has_robot_online_count();
  robot_online_count_ = value;
  // @@protoc_insertion_point(field_set:WebGameServerInfo.robot_online_count)
}

// optional int32 niuniu_banker_times = 10;
inline bool WebGameServerInfo::has_niuniu_banker_times() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void WebGameServerInfo::set_has_niuniu_banker_times() {
  _has_bits_[0] |= 0x00000200u;
}
inline void WebGameServerInfo::clear_has_niuniu_banker_times() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void WebGameServerInfo::clear_niuniu_banker_times() {
  niuniu_banker_times_ = 0;
  clear_has_niuniu_banker_times();
}
inline ::google::protobuf::int32 WebGameServerInfo::niuniu_banker_times() const {
  // @@protoc_insertion_point(field_get:WebGameServerInfo.niuniu_banker_times)
  return niuniu_banker_times_;
}
inline void WebGameServerInfo::set_niuniu_banker_times(::google::protobuf::int32 value) {
  set_has_niuniu_banker_times();
  niuniu_banker_times_ = value;
  // @@protoc_insertion_point(field_set:WebGameServerInfo.niuniu_banker_times)
}

// optional int32 android_online_count = 11;
inline bool WebGameServerInfo::has_android_online_count() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void WebGameServerInfo::set_has_android_online_count() {
  _has_bits_[0] |= 0x00000400u;
}
inline void WebGameServerInfo::clear_has_android_online_count() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void WebGameServerInfo::clear_android_online_count() {
  android_online_count_ = 0;
  clear_has_android_online_count();
}
inline ::google::protobuf::int32 WebGameServerInfo::android_online_count() const {
  // @@protoc_insertion_point(field_get:WebGameServerInfo.android_online_count)
  return android_online_count_;
}
inline void WebGameServerInfo::set_android_online_count(::google::protobuf::int32 value) {
  set_has_android_online_count();
  android_online_count_ = value;
  // @@protoc_insertion_point(field_set:WebGameServerInfo.android_online_count)
}

// optional int32 ios_online_count = 12;
inline bool WebGameServerInfo::has_ios_online_count() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void WebGameServerInfo::set_has_ios_online_count() {
  _has_bits_[0] |= 0x00000800u;
}
inline void WebGameServerInfo::clear_has_ios_online_count() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void WebGameServerInfo::clear_ios_online_count() {
  ios_online_count_ = 0;
  clear_has_ios_online_count();
}
inline ::google::protobuf::int32 WebGameServerInfo::ios_online_count() const {
  // @@protoc_insertion_point(field_get:WebGameServerInfo.ios_online_count)
  return ios_online_count_;
}
inline void WebGameServerInfo::set_ios_online_count(::google::protobuf::int32 value) {
  set_has_ios_online_count();
  ios_online_count_ = value;
  // @@protoc_insertion_point(field_set:WebGameServerInfo.ios_online_count)
}

// -------------------------------------------------------------------

// LW_ResponseGameServerInfo

// repeated .WebGameServerInfo info_list = 1;
inline int LW_ResponseGameServerInfo::info_list_size() const {
  return info_list_.size();
}
inline void LW_ResponseGameServerInfo::clear_info_list() {
  info_list_.Clear();
}
inline const ::WebGameServerInfo& LW_ResponseGameServerInfo::info_list(int index) const {
  // @@protoc_insertion_point(field_get:LW_ResponseGameServerInfo.info_list)
  return info_list_.Get(index);
}
inline ::WebGameServerInfo* LW_ResponseGameServerInfo::mutable_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:LW_ResponseGameServerInfo.info_list)
  return info_list_.Mutable(index);
}
inline ::WebGameServerInfo* LW_ResponseGameServerInfo::add_info_list() {
  // @@protoc_insertion_point(field_add:LW_ResponseGameServerInfo.info_list)
  return info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::WebGameServerInfo >*
LW_ResponseGameServerInfo::mutable_info_list() {
  // @@protoc_insertion_point(field_mutable_list:LW_ResponseGameServerInfo.info_list)
  return &info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::WebGameServerInfo >&
LW_ResponseGameServerInfo::info_list() const {
  // @@protoc_insertion_point(field_list:LW_ResponseGameServerInfo.info_list)
  return info_list_;
}

// optional int32 android_online_top = 2;
inline bool LW_ResponseGameServerInfo::has_android_online_top() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LW_ResponseGameServerInfo::set_has_android_online_top() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LW_ResponseGameServerInfo::clear_has_android_online_top() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LW_ResponseGameServerInfo::clear_android_online_top() {
  android_online_top_ = 0;
  clear_has_android_online_top();
}
inline ::google::protobuf::int32 LW_ResponseGameServerInfo::android_online_top() const {
  // @@protoc_insertion_point(field_get:LW_ResponseGameServerInfo.android_online_top)
  return android_online_top_;
}
inline void LW_ResponseGameServerInfo::set_android_online_top(::google::protobuf::int32 value) {
  set_has_android_online_top();
  android_online_top_ = value;
  // @@protoc_insertion_point(field_set:LW_ResponseGameServerInfo.android_online_top)
}

// optional int32 ios_online_top = 3;
inline bool LW_ResponseGameServerInfo::has_ios_online_top() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LW_ResponseGameServerInfo::set_has_ios_online_top() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LW_ResponseGameServerInfo::clear_has_ios_online_top() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LW_ResponseGameServerInfo::clear_ios_online_top() {
  ios_online_top_ = 0;
  clear_has_ios_online_top();
}
inline ::google::protobuf::int32 LW_ResponseGameServerInfo::ios_online_top() const {
  // @@protoc_insertion_point(field_get:LW_ResponseGameServerInfo.ios_online_top)
  return ios_online_top_;
}
inline void LW_ResponseGameServerInfo::set_ios_online_top(::google::protobuf::int32 value) {
  set_has_ios_online_top();
  ios_online_top_ = value;
  // @@protoc_insertion_point(field_set:LW_ResponseGameServerInfo.ios_online_top)
}

// -------------------------------------------------------------------

// SL_WebGameServerInfo

// optional int32 id = 1;
inline bool SL_WebGameServerInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SL_WebGameServerInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SL_WebGameServerInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SL_WebGameServerInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SL_WebGameServerInfo::id() const {
  // @@protoc_insertion_point(field_get:SL_WebGameServerInfo.id)
  return id_;
}
inline void SL_WebGameServerInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:SL_WebGameServerInfo.id)
}

// optional .WebGameServerInfo info = 2;
inline bool SL_WebGameServerInfo::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SL_WebGameServerInfo::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SL_WebGameServerInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SL_WebGameServerInfo::clear_info() {
  if (info_ != NULL) info_->::WebGameServerInfo::Clear();
  clear_has_info();
}
inline const ::WebGameServerInfo& SL_WebGameServerInfo::info() const {
  // @@protoc_insertion_point(field_get:SL_WebGameServerInfo.info)
  return info_ != NULL ? *info_
                         : *::WebGameServerInfo::internal_default_instance();
}
inline ::WebGameServerInfo* SL_WebGameServerInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::WebGameServerInfo;
  }
  // @@protoc_insertion_point(field_mutable:SL_WebGameServerInfo.info)
  return info_;
}
inline ::WebGameServerInfo* SL_WebGameServerInfo::release_info() {
  // @@protoc_insertion_point(field_release:SL_WebGameServerInfo.info)
  clear_has_info();
  ::WebGameServerInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void SL_WebGameServerInfo::set_allocated_info(::WebGameServerInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:SL_WebGameServerInfo.info)
}

// -------------------------------------------------------------------

// WL_GMMessage

// optional string GmCommand = 1;
inline bool WL_GMMessage::has_gmcommand() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WL_GMMessage::set_has_gmcommand() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WL_GMMessage::clear_has_gmcommand() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WL_GMMessage::clear_gmcommand() {
  gmcommand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gmcommand();
}
inline const ::std::string& WL_GMMessage::gmcommand() const {
  // @@protoc_insertion_point(field_get:WL_GMMessage.GmCommand)
  return gmcommand_.GetNoArena();
}
inline void WL_GMMessage::set_gmcommand(const ::std::string& value) {
  set_has_gmcommand();
  gmcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WL_GMMessage.GmCommand)
}
#if LANG_CXX11
inline void WL_GMMessage::set_gmcommand(::std::string&& value) {
  set_has_gmcommand();
  gmcommand_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WL_GMMessage.GmCommand)
}
#endif
inline void WL_GMMessage::set_gmcommand(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gmcommand();
  gmcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WL_GMMessage.GmCommand)
}
inline void WL_GMMessage::set_gmcommand(const char* value, size_t size) {
  set_has_gmcommand();
  gmcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WL_GMMessage.GmCommand)
}
inline ::std::string* WL_GMMessage::mutable_gmcommand() {
  set_has_gmcommand();
  // @@protoc_insertion_point(field_mutable:WL_GMMessage.GmCommand)
  return gmcommand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WL_GMMessage::release_gmcommand() {
  // @@protoc_insertion_point(field_release:WL_GMMessage.GmCommand)
  clear_has_gmcommand();
  return gmcommand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WL_GMMessage::set_allocated_gmcommand(::std::string* gmcommand) {
  if (gmcommand != NULL) {
    set_has_gmcommand();
  } else {
    clear_has_gmcommand();
  }
  gmcommand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gmcommand);
  // @@protoc_insertion_point(field_set_allocated:WL_GMMessage.GmCommand)
}

// optional string data = 2;
inline bool WL_GMMessage::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WL_GMMessage::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WL_GMMessage::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WL_GMMessage::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& WL_GMMessage::data() const {
  // @@protoc_insertion_point(field_get:WL_GMMessage.data)
  return data_.GetNoArena();
}
inline void WL_GMMessage::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WL_GMMessage.data)
}
#if LANG_CXX11
inline void WL_GMMessage::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WL_GMMessage.data)
}
#endif
inline void WL_GMMessage::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WL_GMMessage.data)
}
inline void WL_GMMessage::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WL_GMMessage.data)
}
inline ::std::string* WL_GMMessage::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:WL_GMMessage.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WL_GMMessage::release_data() {
  // @@protoc_insertion_point(field_release:WL_GMMessage.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WL_GMMessage::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:WL_GMMessage.data)
}

// -------------------------------------------------------------------

// LW_GMMessage

// optional int32 result = 1;
inline bool LW_GMMessage::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LW_GMMessage::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LW_GMMessage::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LW_GMMessage::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 LW_GMMessage::result() const {
  // @@protoc_insertion_point(field_get:LW_GMMessage.result)
  return result_;
}
inline void LW_GMMessage::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:LW_GMMessage.result)
}

// -------------------------------------------------------------------

// LD_NewNotice

// optional int32 guid = 1;
inline bool LD_NewNotice::has_guid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LD_NewNotice::set_has_guid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LD_NewNotice::clear_has_guid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LD_NewNotice::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LD_NewNotice::guid() const {
  // @@protoc_insertion_point(field_get:LD_NewNotice.guid)
  return guid_;
}
inline void LD_NewNotice::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LD_NewNotice.guid)
}

// optional int32 type = 2;
inline bool LD_NewNotice::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LD_NewNotice::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LD_NewNotice::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LD_NewNotice::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 LD_NewNotice::type() const {
  // @@protoc_insertion_point(field_get:LD_NewNotice.type)
  return type_;
}
inline void LD_NewNotice::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:LD_NewNotice.type)
}

// optional string name = 3;
inline bool LD_NewNotice::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_NewNotice::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_NewNotice::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_NewNotice::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& LD_NewNotice::name() const {
  // @@protoc_insertion_point(field_get:LD_NewNotice.name)
  return name_.GetNoArena();
}
inline void LD_NewNotice::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_NewNotice.name)
}
#if LANG_CXX11
inline void LD_NewNotice::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_NewNotice.name)
}
#endif
inline void LD_NewNotice::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_NewNotice.name)
}
inline void LD_NewNotice::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_NewNotice.name)
}
inline ::std::string* LD_NewNotice::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:LD_NewNotice.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_NewNotice::release_name() {
  // @@protoc_insertion_point(field_release:LD_NewNotice.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_NewNotice::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:LD_NewNotice.name)
}

// optional string content = 4;
inline bool LD_NewNotice::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_NewNotice::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_NewNotice::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_NewNotice::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& LD_NewNotice::content() const {
  // @@protoc_insertion_point(field_get:LD_NewNotice.content)
  return content_.GetNoArena();
}
inline void LD_NewNotice::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_NewNotice.content)
}
#if LANG_CXX11
inline void LD_NewNotice::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_NewNotice.content)
}
#endif
inline void LD_NewNotice::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_NewNotice.content)
}
inline void LD_NewNotice::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_NewNotice.content)
}
inline ::std::string* LD_NewNotice::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:LD_NewNotice.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_NewNotice::release_content() {
  // @@protoc_insertion_point(field_release:LD_NewNotice.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_NewNotice::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:LD_NewNotice.content)
}

// optional string author = 5;
inline bool LD_NewNotice::has_author() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LD_NewNotice::set_has_author() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LD_NewNotice::clear_has_author() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LD_NewNotice::clear_author() {
  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_author();
}
inline const ::std::string& LD_NewNotice::author() const {
  // @@protoc_insertion_point(field_get:LD_NewNotice.author)
  return author_.GetNoArena();
}
inline void LD_NewNotice::set_author(const ::std::string& value) {
  set_has_author();
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_NewNotice.author)
}
#if LANG_CXX11
inline void LD_NewNotice::set_author(::std::string&& value) {
  set_has_author();
  author_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_NewNotice.author)
}
#endif
inline void LD_NewNotice::set_author(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_author();
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_NewNotice.author)
}
inline void LD_NewNotice::set_author(const char* value, size_t size) {
  set_has_author();
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_NewNotice.author)
}
inline ::std::string* LD_NewNotice::mutable_author() {
  set_has_author();
  // @@protoc_insertion_point(field_mutable:LD_NewNotice.author)
  return author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_NewNotice::release_author() {
  // @@protoc_insertion_point(field_release:LD_NewNotice.author)
  clear_has_author();
  return author_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_NewNotice::set_allocated_author(::std::string* author) {
  if (author != NULL) {
    set_has_author();
  } else {
    clear_has_author();
  }
  author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), author);
  // @@protoc_insertion_point(field_set_allocated:LD_NewNotice.author)
}

// optional string start_time = 6;
inline bool LD_NewNotice::has_start_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LD_NewNotice::set_has_start_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LD_NewNotice::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LD_NewNotice::clear_start_time() {
  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_start_time();
}
inline const ::std::string& LD_NewNotice::start_time() const {
  // @@protoc_insertion_point(field_get:LD_NewNotice.start_time)
  return start_time_.GetNoArena();
}
inline void LD_NewNotice::set_start_time(const ::std::string& value) {
  set_has_start_time();
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_NewNotice.start_time)
}
#if LANG_CXX11
inline void LD_NewNotice::set_start_time(::std::string&& value) {
  set_has_start_time();
  start_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_NewNotice.start_time)
}
#endif
inline void LD_NewNotice::set_start_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_start_time();
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_NewNotice.start_time)
}
inline void LD_NewNotice::set_start_time(const char* value, size_t size) {
  set_has_start_time();
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_NewNotice.start_time)
}
inline ::std::string* LD_NewNotice::mutable_start_time() {
  set_has_start_time();
  // @@protoc_insertion_point(field_mutable:LD_NewNotice.start_time)
  return start_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_NewNotice::release_start_time() {
  // @@protoc_insertion_point(field_release:LD_NewNotice.start_time)
  clear_has_start_time();
  return start_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_NewNotice::set_allocated_start_time(::std::string* start_time) {
  if (start_time != NULL) {
    set_has_start_time();
  } else {
    clear_has_start_time();
  }
  start_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start_time);
  // @@protoc_insertion_point(field_set_allocated:LD_NewNotice.start_time)
}

// optional string end_time = 7;
inline bool LD_NewNotice::has_end_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LD_NewNotice::set_has_end_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LD_NewNotice::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LD_NewNotice::clear_end_time() {
  end_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_end_time();
}
inline const ::std::string& LD_NewNotice::end_time() const {
  // @@protoc_insertion_point(field_get:LD_NewNotice.end_time)
  return end_time_.GetNoArena();
}
inline void LD_NewNotice::set_end_time(const ::std::string& value) {
  set_has_end_time();
  end_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_NewNotice.end_time)
}
#if LANG_CXX11
inline void LD_NewNotice::set_end_time(::std::string&& value) {
  set_has_end_time();
  end_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_NewNotice.end_time)
}
#endif
inline void LD_NewNotice::set_end_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_end_time();
  end_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_NewNotice.end_time)
}
inline void LD_NewNotice::set_end_time(const char* value, size_t size) {
  set_has_end_time();
  end_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_NewNotice.end_time)
}
inline ::std::string* LD_NewNotice::mutable_end_time() {
  set_has_end_time();
  // @@protoc_insertion_point(field_mutable:LD_NewNotice.end_time)
  return end_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_NewNotice::release_end_time() {
  // @@protoc_insertion_point(field_release:LD_NewNotice.end_time)
  clear_has_end_time();
  return end_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_NewNotice::set_allocated_end_time(::std::string* end_time) {
  if (end_time != NULL) {
    set_has_end_time();
  } else {
    clear_has_end_time();
  }
  end_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end_time);
  // @@protoc_insertion_point(field_set_allocated:LD_NewNotice.end_time)
}

// optional int32 retID = 8;
inline bool LD_NewNotice::has_retid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LD_NewNotice::set_has_retid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LD_NewNotice::clear_has_retid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LD_NewNotice::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 LD_NewNotice::retid() const {
  // @@protoc_insertion_point(field_get:LD_NewNotice.retID)
  return retid_;
}
inline void LD_NewNotice::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:LD_NewNotice.retID)
}

// optional int32 number = 9;
inline bool LD_NewNotice::has_number() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LD_NewNotice::set_has_number() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LD_NewNotice::clear_has_number() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LD_NewNotice::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 LD_NewNotice::number() const {
  // @@protoc_insertion_point(field_get:LD_NewNotice.number)
  return number_;
}
inline void LD_NewNotice::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:LD_NewNotice.number)
}

// optional int32 interval_time = 10;
inline bool LD_NewNotice::has_interval_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LD_NewNotice::set_has_interval_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LD_NewNotice::clear_has_interval_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LD_NewNotice::clear_interval_time() {
  interval_time_ = 0;
  clear_has_interval_time();
}
inline ::google::protobuf::int32 LD_NewNotice::interval_time() const {
  // @@protoc_insertion_point(field_get:LD_NewNotice.interval_time)
  return interval_time_;
}
inline void LD_NewNotice::set_interval_time(::google::protobuf::int32 value) {
  set_has_interval_time();
  interval_time_ = value;
  // @@protoc_insertion_point(field_set:LD_NewNotice.interval_time)
}

// -------------------------------------------------------------------

// DL_NewNotice

// optional int32 ret = 1;
inline bool DL_NewNotice::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DL_NewNotice::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DL_NewNotice::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DL_NewNotice::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DL_NewNotice::ret() const {
  // @@protoc_insertion_point(field_get:DL_NewNotice.ret)
  return ret_;
}
inline void DL_NewNotice::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:DL_NewNotice.ret)
}

// optional int32 id = 2;
inline bool DL_NewNotice::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DL_NewNotice::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DL_NewNotice::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DL_NewNotice::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DL_NewNotice::id() const {
  // @@protoc_insertion_point(field_get:DL_NewNotice.id)
  return id_;
}
inline void DL_NewNotice::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:DL_NewNotice.id)
}

// optional int32 guid = 3;
inline bool DL_NewNotice::has_guid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DL_NewNotice::set_has_guid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DL_NewNotice::clear_has_guid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DL_NewNotice::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DL_NewNotice::guid() const {
  // @@protoc_insertion_point(field_get:DL_NewNotice.guid)
  return guid_;
}
inline void DL_NewNotice::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DL_NewNotice.guid)
}

// optional int32 type = 4;
inline bool DL_NewNotice::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DL_NewNotice::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DL_NewNotice::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DL_NewNotice::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 DL_NewNotice::type() const {
  // @@protoc_insertion_point(field_get:DL_NewNotice.type)
  return type_;
}
inline void DL_NewNotice::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:DL_NewNotice.type)
}

// optional string name = 5;
inline bool DL_NewNotice::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DL_NewNotice::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DL_NewNotice::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DL_NewNotice::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& DL_NewNotice::name() const {
  // @@protoc_insertion_point(field_get:DL_NewNotice.name)
  return name_.GetNoArena();
}
inline void DL_NewNotice::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_NewNotice.name)
}
#if LANG_CXX11
inline void DL_NewNotice::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_NewNotice.name)
}
#endif
inline void DL_NewNotice::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_NewNotice.name)
}
inline void DL_NewNotice::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_NewNotice.name)
}
inline ::std::string* DL_NewNotice::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:DL_NewNotice.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_NewNotice::release_name() {
  // @@protoc_insertion_point(field_release:DL_NewNotice.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_NewNotice::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DL_NewNotice.name)
}

// optional string content = 6;
inline bool DL_NewNotice::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DL_NewNotice::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DL_NewNotice::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DL_NewNotice::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& DL_NewNotice::content() const {
  // @@protoc_insertion_point(field_get:DL_NewNotice.content)
  return content_.GetNoArena();
}
inline void DL_NewNotice::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_NewNotice.content)
}
#if LANG_CXX11
inline void DL_NewNotice::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_NewNotice.content)
}
#endif
inline void DL_NewNotice::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_NewNotice.content)
}
inline void DL_NewNotice::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_NewNotice.content)
}
inline ::std::string* DL_NewNotice::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:DL_NewNotice.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_NewNotice::release_content() {
  // @@protoc_insertion_point(field_release:DL_NewNotice.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_NewNotice::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:DL_NewNotice.content)
}

// optional string author = 7;
inline bool DL_NewNotice::has_author() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DL_NewNotice::set_has_author() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DL_NewNotice::clear_has_author() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DL_NewNotice::clear_author() {
  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_author();
}
inline const ::std::string& DL_NewNotice::author() const {
  // @@protoc_insertion_point(field_get:DL_NewNotice.author)
  return author_.GetNoArena();
}
inline void DL_NewNotice::set_author(const ::std::string& value) {
  set_has_author();
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_NewNotice.author)
}
#if LANG_CXX11
inline void DL_NewNotice::set_author(::std::string&& value) {
  set_has_author();
  author_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_NewNotice.author)
}
#endif
inline void DL_NewNotice::set_author(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_author();
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_NewNotice.author)
}
inline void DL_NewNotice::set_author(const char* value, size_t size) {
  set_has_author();
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_NewNotice.author)
}
inline ::std::string* DL_NewNotice::mutable_author() {
  set_has_author();
  // @@protoc_insertion_point(field_mutable:DL_NewNotice.author)
  return author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_NewNotice::release_author() {
  // @@protoc_insertion_point(field_release:DL_NewNotice.author)
  clear_has_author();
  return author_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_NewNotice::set_allocated_author(::std::string* author) {
  if (author != NULL) {
    set_has_author();
  } else {
    clear_has_author();
  }
  author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), author);
  // @@protoc_insertion_point(field_set_allocated:DL_NewNotice.author)
}

// optional int32 start_time = 8;
inline bool DL_NewNotice::has_start_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DL_NewNotice::set_has_start_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DL_NewNotice::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DL_NewNotice::clear_start_time() {
  start_time_ = 0;
  clear_has_start_time();
}
inline ::google::protobuf::int32 DL_NewNotice::start_time() const {
  // @@protoc_insertion_point(field_get:DL_NewNotice.start_time)
  return start_time_;
}
inline void DL_NewNotice::set_start_time(::google::protobuf::int32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:DL_NewNotice.start_time)
}

// optional int32 end_time = 9;
inline bool DL_NewNotice::has_end_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DL_NewNotice::set_has_end_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DL_NewNotice::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DL_NewNotice::clear_end_time() {
  end_time_ = 0;
  clear_has_end_time();
}
inline ::google::protobuf::int32 DL_NewNotice::end_time() const {
  // @@protoc_insertion_point(field_get:DL_NewNotice.end_time)
  return end_time_;
}
inline void DL_NewNotice::set_end_time(::google::protobuf::int32 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:DL_NewNotice.end_time)
}

// optional int32 retID = 10;
inline bool DL_NewNotice::has_retid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DL_NewNotice::set_has_retid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DL_NewNotice::clear_has_retid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DL_NewNotice::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 DL_NewNotice::retid() const {
  // @@protoc_insertion_point(field_get:DL_NewNotice.retID)
  return retid_;
}
inline void DL_NewNotice::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:DL_NewNotice.retID)
}

// optional int32 number = 11;
inline bool DL_NewNotice::has_number() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DL_NewNotice::set_has_number() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DL_NewNotice::clear_has_number() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DL_NewNotice::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 DL_NewNotice::number() const {
  // @@protoc_insertion_point(field_get:DL_NewNotice.number)
  return number_;
}
inline void DL_NewNotice::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:DL_NewNotice.number)
}

// optional int32 interval_time = 12;
inline bool DL_NewNotice::has_interval_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DL_NewNotice::set_has_interval_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DL_NewNotice::clear_has_interval_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DL_NewNotice::clear_interval_time() {
  interval_time_ = 0;
  clear_has_interval_time();
}
inline ::google::protobuf::int32 DL_NewNotice::interval_time() const {
  // @@protoc_insertion_point(field_get:DL_NewNotice.interval_time)
  return interval_time_;
}
inline void DL_NewNotice::set_interval_time(::google::protobuf::int32 value) {
  set_has_interval_time();
  interval_time_ = value;
  // @@protoc_insertion_point(field_set:DL_NewNotice.interval_time)
}

// -------------------------------------------------------------------

// LS_NewNotice

// optional int32 id = 1;
inline bool LS_NewNotice::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_NewNotice::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_NewNotice::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_NewNotice::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 LS_NewNotice::id() const {
  // @@protoc_insertion_point(field_get:LS_NewNotice.id)
  return id_;
}
inline void LS_NewNotice::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:LS_NewNotice.id)
}

// optional int32 start_time = 2;
inline bool LS_NewNotice::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LS_NewNotice::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LS_NewNotice::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LS_NewNotice::clear_start_time() {
  start_time_ = 0;
  clear_has_start_time();
}
inline ::google::protobuf::int32 LS_NewNotice::start_time() const {
  // @@protoc_insertion_point(field_get:LS_NewNotice.start_time)
  return start_time_;
}
inline void LS_NewNotice::set_start_time(::google::protobuf::int32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:LS_NewNotice.start_time)
}

// optional int32 end_time = 3;
inline bool LS_NewNotice::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LS_NewNotice::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LS_NewNotice::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LS_NewNotice::clear_end_time() {
  end_time_ = 0;
  clear_has_end_time();
}
inline ::google::protobuf::int32 LS_NewNotice::end_time() const {
  // @@protoc_insertion_point(field_get:LS_NewNotice.end_time)
  return end_time_;
}
inline void LS_NewNotice::set_end_time(::google::protobuf::int32 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:LS_NewNotice.end_time)
}

// optional int32 msg_type = 4;
inline bool LS_NewNotice::has_msg_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LS_NewNotice::set_has_msg_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LS_NewNotice::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LS_NewNotice::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::google::protobuf::int32 LS_NewNotice::msg_type() const {
  // @@protoc_insertion_point(field_get:LS_NewNotice.msg_type)
  return msg_type_;
}
inline void LS_NewNotice::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:LS_NewNotice.msg_type)
}

// optional int32 is_read = 5;
inline bool LS_NewNotice::has_is_read() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LS_NewNotice::set_has_is_read() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LS_NewNotice::clear_has_is_read() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LS_NewNotice::clear_is_read() {
  is_read_ = 0;
  clear_has_is_read();
}
inline ::google::protobuf::int32 LS_NewNotice::is_read() const {
  // @@protoc_insertion_point(field_get:LS_NewNotice.is_read)
  return is_read_;
}
inline void LS_NewNotice::set_is_read(::google::protobuf::int32 value) {
  set_has_is_read();
  is_read_ = value;
  // @@protoc_insertion_point(field_set:LS_NewNotice.is_read)
}

// optional string content = 6;
inline bool LS_NewNotice::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_NewNotice::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_NewNotice::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_NewNotice::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& LS_NewNotice::content() const {
  // @@protoc_insertion_point(field_get:LS_NewNotice.content)
  return content_.GetNoArena();
}
inline void LS_NewNotice::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LS_NewNotice.content)
}
#if LANG_CXX11
inline void LS_NewNotice::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LS_NewNotice.content)
}
#endif
inline void LS_NewNotice::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LS_NewNotice.content)
}
inline void LS_NewNotice::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LS_NewNotice.content)
}
inline ::std::string* LS_NewNotice::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:LS_NewNotice.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LS_NewNotice::release_content() {
  // @@protoc_insertion_point(field_release:LS_NewNotice.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LS_NewNotice::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:LS_NewNotice.content)
}

// optional int32 retID = 7;
inline bool LS_NewNotice::has_retid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LS_NewNotice::set_has_retid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LS_NewNotice::clear_has_retid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LS_NewNotice::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 LS_NewNotice::retid() const {
  // @@protoc_insertion_point(field_get:LS_NewNotice.retID)
  return retid_;
}
inline void LS_NewNotice::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:LS_NewNotice.retID)
}

// optional int32 number = 8;
inline bool LS_NewNotice::has_number() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LS_NewNotice::set_has_number() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LS_NewNotice::clear_has_number() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LS_NewNotice::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 LS_NewNotice::number() const {
  // @@protoc_insertion_point(field_get:LS_NewNotice.number)
  return number_;
}
inline void LS_NewNotice::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:LS_NewNotice.number)
}

// optional int32 interval_time = 9;
inline bool LS_NewNotice::has_interval_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LS_NewNotice::set_has_interval_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LS_NewNotice::clear_has_interval_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LS_NewNotice::clear_interval_time() {
  interval_time_ = 0;
  clear_has_interval_time();
}
inline ::google::protobuf::int32 LS_NewNotice::interval_time() const {
  // @@protoc_insertion_point(field_get:LS_NewNotice.interval_time)
  return interval_time_;
}
inline void LS_NewNotice::set_interval_time(::google::protobuf::int32 value) {
  set_has_interval_time();
  interval_time_ = value;
  // @@protoc_insertion_point(field_set:LS_NewNotice.interval_time)
}

// -------------------------------------------------------------------

// LS_DelMessage

// optional int32 msg_type = 1;
inline bool LS_DelMessage::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_DelMessage::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_DelMessage::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_DelMessage::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::google::protobuf::int32 LS_DelMessage::msg_type() const {
  // @@protoc_insertion_point(field_get:LS_DelMessage.msg_type)
  return msg_type_;
}
inline void LS_DelMessage::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:LS_DelMessage.msg_type)
}

// optional int32 msg_id = 2;
inline bool LS_DelMessage::has_msg_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_DelMessage::set_has_msg_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_DelMessage::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_DelMessage::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
inline ::google::protobuf::int32 LS_DelMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:LS_DelMessage.msg_id)
  return msg_id_;
}
inline void LS_DelMessage::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:LS_DelMessage.msg_id)
}

// -------------------------------------------------------------------

// LG_NewNotice

// optional int32 id = 1;
inline bool LG_NewNotice::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LG_NewNotice::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LG_NewNotice::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LG_NewNotice::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 LG_NewNotice::id() const {
  // @@protoc_insertion_point(field_get:LG_NewNotice.id)
  return id_;
}
inline void LG_NewNotice::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:LG_NewNotice.id)
}

// optional int32 gateid = 2;
inline bool LG_NewNotice::has_gateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LG_NewNotice::set_has_gateid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LG_NewNotice::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LG_NewNotice::clear_gateid() {
  gateid_ = 0;
  clear_has_gateid();
}
inline ::google::protobuf::int32 LG_NewNotice::gateid() const {
  // @@protoc_insertion_point(field_get:LG_NewNotice.gateid)
  return gateid_;
}
inline void LG_NewNotice::set_gateid(::google::protobuf::int32 value) {
  set_has_gateid();
  gateid_ = value;
  // @@protoc_insertion_point(field_set:LG_NewNotice.gateid)
}

// optional int32 sessionid = 3;
inline bool LG_NewNotice::has_sessionid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LG_NewNotice::set_has_sessionid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LG_NewNotice::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LG_NewNotice::clear_sessionid() {
  sessionid_ = 0;
  clear_has_sessionid();
}
inline ::google::protobuf::int32 LG_NewNotice::sessionid() const {
  // @@protoc_insertion_point(field_get:LG_NewNotice.sessionid)
  return sessionid_;
}
inline void LG_NewNotice::set_sessionid(::google::protobuf::int32 value) {
  set_has_sessionid();
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:LG_NewNotice.sessionid)
}

// optional int32 start_time = 4;
inline bool LG_NewNotice::has_start_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LG_NewNotice::set_has_start_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LG_NewNotice::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LG_NewNotice::clear_start_time() {
  start_time_ = 0;
  clear_has_start_time();
}
inline ::google::protobuf::int32 LG_NewNotice::start_time() const {
  // @@protoc_insertion_point(field_get:LG_NewNotice.start_time)
  return start_time_;
}
inline void LG_NewNotice::set_start_time(::google::protobuf::int32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:LG_NewNotice.start_time)
}

// optional int32 end_time = 5;
inline bool LG_NewNotice::has_end_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LG_NewNotice::set_has_end_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LG_NewNotice::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LG_NewNotice::clear_end_time() {
  end_time_ = 0;
  clear_has_end_time();
}
inline ::google::protobuf::int32 LG_NewNotice::end_time() const {
  // @@protoc_insertion_point(field_get:LG_NewNotice.end_time)
  return end_time_;
}
inline void LG_NewNotice::set_end_time(::google::protobuf::int32 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:LG_NewNotice.end_time)
}

// optional int32 msg_type = 6;
inline bool LG_NewNotice::has_msg_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LG_NewNotice::set_has_msg_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LG_NewNotice::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LG_NewNotice::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::google::protobuf::int32 LG_NewNotice::msg_type() const {
  // @@protoc_insertion_point(field_get:LG_NewNotice.msg_type)
  return msg_type_;
}
inline void LG_NewNotice::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:LG_NewNotice.msg_type)
}

// optional int32 is_read = 7;
inline bool LG_NewNotice::has_is_read() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LG_NewNotice::set_has_is_read() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LG_NewNotice::clear_has_is_read() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LG_NewNotice::clear_is_read() {
  is_read_ = 0;
  clear_has_is_read();
}
inline ::google::protobuf::int32 LG_NewNotice::is_read() const {
  // @@protoc_insertion_point(field_get:LG_NewNotice.is_read)
  return is_read_;
}
inline void LG_NewNotice::set_is_read(::google::protobuf::int32 value) {
  set_has_is_read();
  is_read_ = value;
  // @@protoc_insertion_point(field_set:LG_NewNotice.is_read)
}

// optional string content = 8;
inline bool LG_NewNotice::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LG_NewNotice::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LG_NewNotice::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LG_NewNotice::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& LG_NewNotice::content() const {
  // @@protoc_insertion_point(field_get:LG_NewNotice.content)
  return content_.GetNoArena();
}
inline void LG_NewNotice::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LG_NewNotice.content)
}
#if LANG_CXX11
inline void LG_NewNotice::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LG_NewNotice.content)
}
#endif
inline void LG_NewNotice::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LG_NewNotice.content)
}
inline void LG_NewNotice::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LG_NewNotice.content)
}
inline ::std::string* LG_NewNotice::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:LG_NewNotice.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LG_NewNotice::release_content() {
  // @@protoc_insertion_point(field_release:LG_NewNotice.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LG_NewNotice::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:LG_NewNotice.content)
}

// optional int32 retID = 9;
inline bool LG_NewNotice::has_retid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LG_NewNotice::set_has_retid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LG_NewNotice::clear_has_retid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LG_NewNotice::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 LG_NewNotice::retid() const {
  // @@protoc_insertion_point(field_get:LG_NewNotice.retID)
  return retid_;
}
inline void LG_NewNotice::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:LG_NewNotice.retID)
}

// optional int32 guid = 10;
inline bool LG_NewNotice::has_guid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LG_NewNotice::set_has_guid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LG_NewNotice::clear_has_guid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LG_NewNotice::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LG_NewNotice::guid() const {
  // @@protoc_insertion_point(field_get:LG_NewNotice.guid)
  return guid_;
}
inline void LG_NewNotice::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LG_NewNotice.guid)
}

// -------------------------------------------------------------------

// LG_DelNotice

// optional int32 guid = 1;
inline bool LG_DelNotice::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LG_DelNotice::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LG_DelNotice::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LG_DelNotice::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LG_DelNotice::guid() const {
  // @@protoc_insertion_point(field_get:LG_DelNotice.guid)
  return guid_;
}
inline void LG_DelNotice::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LG_DelNotice.guid)
}

// optional int32 msg_id = 2;
inline bool LG_DelNotice::has_msg_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LG_DelNotice::set_has_msg_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LG_DelNotice::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LG_DelNotice::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
inline ::google::protobuf::int32 LG_DelNotice::msg_id() const {
  // @@protoc_insertion_point(field_get:LG_DelNotice.msg_id)
  return msg_id_;
}
inline void LG_DelNotice::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:LG_DelNotice.msg_id)
}

// optional int32 msg_type = 3;
inline bool LG_DelNotice::has_msg_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LG_DelNotice::set_has_msg_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LG_DelNotice::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LG_DelNotice::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::google::protobuf::int32 LG_DelNotice::msg_type() const {
  // @@protoc_insertion_point(field_get:LG_DelNotice.msg_type)
  return msg_type_;
}
inline void LG_DelNotice::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:LG_DelNotice.msg_type)
}

// optional int32 retID = 4;
inline bool LG_DelNotice::has_retid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LG_DelNotice::set_has_retid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LG_DelNotice::clear_has_retid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LG_DelNotice::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 LG_DelNotice::retid() const {
  // @@protoc_insertion_point(field_get:LG_DelNotice.retID)
  return retid_;
}
inline void LG_DelNotice::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:LG_DelNotice.retID)
}

// -------------------------------------------------------------------

// GL_NewNotice

// optional int32 result = 1;
inline bool GL_NewNotice::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GL_NewNotice::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GL_NewNotice::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GL_NewNotice::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GL_NewNotice::result() const {
  // @@protoc_insertion_point(field_get:GL_NewNotice.result)
  return result_;
}
inline void GL_NewNotice::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GL_NewNotice.result)
}

// optional int32 retID = 2;
inline bool GL_NewNotice::has_retid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GL_NewNotice::set_has_retid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GL_NewNotice::clear_has_retid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GL_NewNotice::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 GL_NewNotice::retid() const {
  // @@protoc_insertion_point(field_get:GL_NewNotice.retID)
  return retid_;
}
inline void GL_NewNotice::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:GL_NewNotice.retID)
}

// -------------------------------------------------------------------

// LG_FeedBackUpdate

// optional int32 guid = 1;
inline bool LG_FeedBackUpdate::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LG_FeedBackUpdate::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LG_FeedBackUpdate::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LG_FeedBackUpdate::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LG_FeedBackUpdate::guid() const {
  // @@protoc_insertion_point(field_get:LG_FeedBackUpdate.guid)
  return guid_;
}
inline void LG_FeedBackUpdate::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LG_FeedBackUpdate.guid)
}

// optional int32 type = 2;
inline bool LG_FeedBackUpdate::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LG_FeedBackUpdate::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LG_FeedBackUpdate::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LG_FeedBackUpdate::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 LG_FeedBackUpdate::type() const {
  // @@protoc_insertion_point(field_get:LG_FeedBackUpdate.type)
  return type_;
}
inline void LG_FeedBackUpdate::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:LG_FeedBackUpdate.type)
}

// optional int32 UpdateTime = 3;
inline bool LG_FeedBackUpdate::has_updatetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LG_FeedBackUpdate::set_has_updatetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LG_FeedBackUpdate::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LG_FeedBackUpdate::clear_updatetime() {
  updatetime_ = 0;
  clear_has_updatetime();
}
inline ::google::protobuf::int32 LG_FeedBackUpdate::updatetime() const {
  // @@protoc_insertion_point(field_get:LG_FeedBackUpdate.UpdateTime)
  return updatetime_;
}
inline void LG_FeedBackUpdate::set_updatetime(::google::protobuf::int32 value) {
  set_has_updatetime();
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:LG_FeedBackUpdate.UpdateTime)
}

// optional int32 feedbackid = 4;
inline bool LG_FeedBackUpdate::has_feedbackid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LG_FeedBackUpdate::set_has_feedbackid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LG_FeedBackUpdate::clear_has_feedbackid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LG_FeedBackUpdate::clear_feedbackid() {
  feedbackid_ = 0;
  clear_has_feedbackid();
}
inline ::google::protobuf::int32 LG_FeedBackUpdate::feedbackid() const {
  // @@protoc_insertion_point(field_get:LG_FeedBackUpdate.feedbackid)
  return feedbackid_;
}
inline void LG_FeedBackUpdate::set_feedbackid(::google::protobuf::int32 value) {
  set_has_feedbackid();
  feedbackid_ = value;
  // @@protoc_insertion_point(field_set:LG_FeedBackUpdate.feedbackid)
}

// optional int32 retid = 5;
inline bool LG_FeedBackUpdate::has_retid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LG_FeedBackUpdate::set_has_retid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LG_FeedBackUpdate::clear_has_retid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LG_FeedBackUpdate::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 LG_FeedBackUpdate::retid() const {
  // @@protoc_insertion_point(field_get:LG_FeedBackUpdate.retid)
  return retid_;
}
inline void LG_FeedBackUpdate::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:LG_FeedBackUpdate.retid)
}

// -------------------------------------------------------------------

// LD_DelMessage

// optional int32 msg_type = 1;
inline bool LD_DelMessage::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_DelMessage::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_DelMessage::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_DelMessage::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::google::protobuf::int32 LD_DelMessage::msg_type() const {
  // @@protoc_insertion_point(field_get:LD_DelMessage.msg_type)
  return msg_type_;
}
inline void LD_DelMessage::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:LD_DelMessage.msg_type)
}

// optional int32 msg_id = 2;
inline bool LD_DelMessage::has_msg_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_DelMessage::set_has_msg_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_DelMessage::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_DelMessage::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
inline ::google::protobuf::int32 LD_DelMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:LD_DelMessage.msg_id)
  return msg_id_;
}
inline void LD_DelMessage::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:LD_DelMessage.msg_id)
}

// optional int32 retid = 3;
inline bool LD_DelMessage::has_retid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LD_DelMessage::set_has_retid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LD_DelMessage::clear_has_retid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LD_DelMessage::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 LD_DelMessage::retid() const {
  // @@protoc_insertion_point(field_get:LD_DelMessage.retid)
  return retid_;
}
inline void LD_DelMessage::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:LD_DelMessage.retid)
}

// -------------------------------------------------------------------

// DL_DelMessage

// optional int32 msg_type = 1;
inline bool DL_DelMessage::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DL_DelMessage::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DL_DelMessage::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DL_DelMessage::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::google::protobuf::int32 DL_DelMessage::msg_type() const {
  // @@protoc_insertion_point(field_get:DL_DelMessage.msg_type)
  return msg_type_;
}
inline void DL_DelMessage::set_msg_type(::google::protobuf::int32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:DL_DelMessage.msg_type)
}

// optional int32 msg_id = 2;
inline bool DL_DelMessage::has_msg_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DL_DelMessage::set_has_msg_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DL_DelMessage::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DL_DelMessage::clear_msg_id() {
  msg_id_ = 0;
  clear_has_msg_id();
}
inline ::google::protobuf::int32 DL_DelMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:DL_DelMessage.msg_id)
  return msg_id_;
}
inline void DL_DelMessage::set_msg_id(::google::protobuf::int32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:DL_DelMessage.msg_id)
}

// optional int32 retid = 3;
inline bool DL_DelMessage::has_retid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DL_DelMessage::set_has_retid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DL_DelMessage::clear_has_retid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DL_DelMessage::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 DL_DelMessage::retid() const {
  // @@protoc_insertion_point(field_get:DL_DelMessage.retid)
  return retid_;
}
inline void DL_DelMessage::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:DL_DelMessage.retid)
}

// optional int32 guid = 4;
inline bool DL_DelMessage::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DL_DelMessage::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DL_DelMessage::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DL_DelMessage::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DL_DelMessage::guid() const {
  // @@protoc_insertion_point(field_get:DL_DelMessage.guid)
  return guid_;
}
inline void DL_DelMessage::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DL_DelMessage.guid)
}

// optional int32 ret = 5;
inline bool DL_DelMessage::has_ret() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DL_DelMessage::set_has_ret() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DL_DelMessage::clear_has_ret() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DL_DelMessage::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DL_DelMessage::ret() const {
  // @@protoc_insertion_point(field_get:DL_DelMessage.ret)
  return ret_;
}
inline void DL_DelMessage::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:DL_DelMessage.ret)
}

// -------------------------------------------------------------------

// SL_Log_Money

// optional int32 guid = 1;
inline bool SL_Log_Money::has_guid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SL_Log_Money::set_has_guid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SL_Log_Money::clear_has_guid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SL_Log_Money::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SL_Log_Money::guid() const {
  // @@protoc_insertion_point(field_get:SL_Log_Money.guid)
  return guid_;
}
inline void SL_Log_Money::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Money.guid)
}

// optional int32 type = 2;
inline bool SL_Log_Money::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SL_Log_Money::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SL_Log_Money::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SL_Log_Money::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SL_Log_Money::type() const {
  // @@protoc_insertion_point(field_get:SL_Log_Money.type)
  return type_;
}
inline void SL_Log_Money::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Money.type)
}

// optional int32 gameid = 3;
inline bool SL_Log_Money::has_gameid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SL_Log_Money::set_has_gameid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SL_Log_Money::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SL_Log_Money::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 SL_Log_Money::gameid() const {
  // @@protoc_insertion_point(field_get:SL_Log_Money.gameid)
  return gameid_;
}
inline void SL_Log_Money::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Money.gameid)
}

// optional string game_name = 4;
inline bool SL_Log_Money::has_game_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SL_Log_Money::set_has_game_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SL_Log_Money::clear_has_game_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SL_Log_Money::clear_game_name() {
  game_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_name();
}
inline const ::std::string& SL_Log_Money::game_name() const {
  // @@protoc_insertion_point(field_get:SL_Log_Money.game_name)
  return game_name_.GetNoArena();
}
inline void SL_Log_Money::set_game_name(const ::std::string& value) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SL_Log_Money.game_name)
}
#if LANG_CXX11
inline void SL_Log_Money::set_game_name(::std::string&& value) {
  set_has_game_name();
  game_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SL_Log_Money.game_name)
}
#endif
inline void SL_Log_Money::set_game_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SL_Log_Money.game_name)
}
inline void SL_Log_Money::set_game_name(const char* value, size_t size) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SL_Log_Money.game_name)
}
inline ::std::string* SL_Log_Money::mutable_game_name() {
  set_has_game_name();
  // @@protoc_insertion_point(field_mutable:SL_Log_Money.game_name)
  return game_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SL_Log_Money::release_game_name() {
  // @@protoc_insertion_point(field_release:SL_Log_Money.game_name)
  clear_has_game_name();
  return game_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SL_Log_Money::set_allocated_game_name(::std::string* game_name) {
  if (game_name != NULL) {
    set_has_game_name();
  } else {
    clear_has_game_name();
  }
  game_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_name);
  // @@protoc_insertion_point(field_set_allocated:SL_Log_Money.game_name)
}

// optional string phone_type = 5;
inline bool SL_Log_Money::has_phone_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SL_Log_Money::set_has_phone_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SL_Log_Money::clear_has_phone_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SL_Log_Money::clear_phone_type() {
  phone_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_type();
}
inline const ::std::string& SL_Log_Money::phone_type() const {
  // @@protoc_insertion_point(field_get:SL_Log_Money.phone_type)
  return phone_type_.GetNoArena();
}
inline void SL_Log_Money::set_phone_type(const ::std::string& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SL_Log_Money.phone_type)
}
#if LANG_CXX11
inline void SL_Log_Money::set_phone_type(::std::string&& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SL_Log_Money.phone_type)
}
#endif
inline void SL_Log_Money::set_phone_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SL_Log_Money.phone_type)
}
inline void SL_Log_Money::set_phone_type(const char* value, size_t size) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SL_Log_Money.phone_type)
}
inline ::std::string* SL_Log_Money::mutable_phone_type() {
  set_has_phone_type();
  // @@protoc_insertion_point(field_mutable:SL_Log_Money.phone_type)
  return phone_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SL_Log_Money::release_phone_type() {
  // @@protoc_insertion_point(field_release:SL_Log_Money.phone_type)
  clear_has_phone_type();
  return phone_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SL_Log_Money::set_allocated_phone_type(::std::string* phone_type) {
  if (phone_type != NULL) {
    set_has_phone_type();
  } else {
    clear_has_phone_type();
  }
  phone_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_type);
  // @@protoc_insertion_point(field_set_allocated:SL_Log_Money.phone_type)
}

// optional int64 old_money = 6;
inline bool SL_Log_Money::has_old_money() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SL_Log_Money::set_has_old_money() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SL_Log_Money::clear_has_old_money() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SL_Log_Money::clear_old_money() {
  old_money_ = GOOGLE_LONGLONG(0);
  clear_has_old_money();
}
inline ::google::protobuf::int64 SL_Log_Money::old_money() const {
  // @@protoc_insertion_point(field_get:SL_Log_Money.old_money)
  return old_money_;
}
inline void SL_Log_Money::set_old_money(::google::protobuf::int64 value) {
  set_has_old_money();
  old_money_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Money.old_money)
}

// optional int64 new_money = 7;
inline bool SL_Log_Money::has_new_money() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SL_Log_Money::set_has_new_money() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SL_Log_Money::clear_has_new_money() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SL_Log_Money::clear_new_money() {
  new_money_ = GOOGLE_LONGLONG(0);
  clear_has_new_money();
}
inline ::google::protobuf::int64 SL_Log_Money::new_money() const {
  // @@protoc_insertion_point(field_get:SL_Log_Money.new_money)
  return new_money_;
}
inline void SL_Log_Money::set_new_money(::google::protobuf::int64 value) {
  set_has_new_money();
  new_money_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Money.new_money)
}

// optional int64 tax = 8;
inline bool SL_Log_Money::has_tax() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SL_Log_Money::set_has_tax() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SL_Log_Money::clear_has_tax() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SL_Log_Money::clear_tax() {
  tax_ = GOOGLE_LONGLONG(0);
  clear_has_tax();
}
inline ::google::protobuf::int64 SL_Log_Money::tax() const {
  // @@protoc_insertion_point(field_get:SL_Log_Money.tax)
  return tax_;
}
inline void SL_Log_Money::set_tax(::google::protobuf::int64 value) {
  set_has_tax();
  tax_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Money.tax)
}

// optional int64 change_money = 9;
inline bool SL_Log_Money::has_change_money() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SL_Log_Money::set_has_change_money() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SL_Log_Money::clear_has_change_money() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SL_Log_Money::clear_change_money() {
  change_money_ = GOOGLE_LONGLONG(0);
  clear_has_change_money();
}
inline ::google::protobuf::int64 SL_Log_Money::change_money() const {
  // @@protoc_insertion_point(field_get:SL_Log_Money.change_money)
  return change_money_;
}
inline void SL_Log_Money::set_change_money(::google::protobuf::int64 value) {
  set_has_change_money();
  change_money_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Money.change_money)
}

// optional string ip = 10;
inline bool SL_Log_Money::has_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SL_Log_Money::set_has_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SL_Log_Money::clear_has_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SL_Log_Money::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& SL_Log_Money::ip() const {
  // @@protoc_insertion_point(field_get:SL_Log_Money.ip)
  return ip_.GetNoArena();
}
inline void SL_Log_Money::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SL_Log_Money.ip)
}
#if LANG_CXX11
inline void SL_Log_Money::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SL_Log_Money.ip)
}
#endif
inline void SL_Log_Money::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SL_Log_Money.ip)
}
inline void SL_Log_Money::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SL_Log_Money.ip)
}
inline ::std::string* SL_Log_Money::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:SL_Log_Money.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SL_Log_Money::release_ip() {
  // @@protoc_insertion_point(field_release:SL_Log_Money.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SL_Log_Money::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:SL_Log_Money.ip)
}

// optional string id = 11;
inline bool SL_Log_Money::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SL_Log_Money::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SL_Log_Money::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SL_Log_Money::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& SL_Log_Money::id() const {
  // @@protoc_insertion_point(field_get:SL_Log_Money.id)
  return id_.GetNoArena();
}
inline void SL_Log_Money::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SL_Log_Money.id)
}
#if LANG_CXX11
inline void SL_Log_Money::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SL_Log_Money.id)
}
#endif
inline void SL_Log_Money::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SL_Log_Money.id)
}
inline void SL_Log_Money::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SL_Log_Money.id)
}
inline ::std::string* SL_Log_Money::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:SL_Log_Money.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SL_Log_Money::release_id() {
  // @@protoc_insertion_point(field_release:SL_Log_Money.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SL_Log_Money::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:SL_Log_Money.id)
}

// optional string channel_id = 12;
inline bool SL_Log_Money::has_channel_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SL_Log_Money::set_has_channel_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SL_Log_Money::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SL_Log_Money::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& SL_Log_Money::channel_id() const {
  // @@protoc_insertion_point(field_get:SL_Log_Money.channel_id)
  return channel_id_.GetNoArena();
}
inline void SL_Log_Money::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SL_Log_Money.channel_id)
}
#if LANG_CXX11
inline void SL_Log_Money::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SL_Log_Money.channel_id)
}
#endif
inline void SL_Log_Money::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SL_Log_Money.channel_id)
}
inline void SL_Log_Money::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SL_Log_Money.channel_id)
}
inline ::std::string* SL_Log_Money::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:SL_Log_Money.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SL_Log_Money::release_channel_id() {
  // @@protoc_insertion_point(field_release:SL_Log_Money.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SL_Log_Money::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:SL_Log_Money.channel_id)
}

// -------------------------------------------------------------------

// SL_Log_Game

// optional string playid = 1;
inline bool SL_Log_Game::has_playid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SL_Log_Game::set_has_playid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SL_Log_Game::clear_has_playid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SL_Log_Game::clear_playid() {
  playid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_playid();
}
inline const ::std::string& SL_Log_Game::playid() const {
  // @@protoc_insertion_point(field_get:SL_Log_Game.playid)
  return playid_.GetNoArena();
}
inline void SL_Log_Game::set_playid(const ::std::string& value) {
  set_has_playid();
  playid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SL_Log_Game.playid)
}
#if LANG_CXX11
inline void SL_Log_Game::set_playid(::std::string&& value) {
  set_has_playid();
  playid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SL_Log_Game.playid)
}
#endif
inline void SL_Log_Game::set_playid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_playid();
  playid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SL_Log_Game.playid)
}
inline void SL_Log_Game::set_playid(const char* value, size_t size) {
  set_has_playid();
  playid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SL_Log_Game.playid)
}
inline ::std::string* SL_Log_Game::mutable_playid() {
  set_has_playid();
  // @@protoc_insertion_point(field_mutable:SL_Log_Game.playid)
  return playid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SL_Log_Game::release_playid() {
  // @@protoc_insertion_point(field_release:SL_Log_Game.playid)
  clear_has_playid();
  return playid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SL_Log_Game::set_allocated_playid(::std::string* playid) {
  if (playid != NULL) {
    set_has_playid();
  } else {
    clear_has_playid();
  }
  playid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playid);
  // @@protoc_insertion_point(field_set_allocated:SL_Log_Game.playid)
}

// optional string type = 2;
inline bool SL_Log_Game::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SL_Log_Game::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SL_Log_Game::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SL_Log_Game::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& SL_Log_Game::type() const {
  // @@protoc_insertion_point(field_get:SL_Log_Game.type)
  return type_.GetNoArena();
}
inline void SL_Log_Game::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SL_Log_Game.type)
}
#if LANG_CXX11
inline void SL_Log_Game::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SL_Log_Game.type)
}
#endif
inline void SL_Log_Game::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SL_Log_Game.type)
}
inline void SL_Log_Game::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SL_Log_Game.type)
}
inline ::std::string* SL_Log_Game::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:SL_Log_Game.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SL_Log_Game::release_type() {
  // @@protoc_insertion_point(field_release:SL_Log_Game.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SL_Log_Game::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:SL_Log_Game.type)
}

// optional string log = 3;
inline bool SL_Log_Game::has_log() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SL_Log_Game::set_has_log() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SL_Log_Game::clear_has_log() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SL_Log_Game::clear_log() {
  log_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_log();
}
inline const ::std::string& SL_Log_Game::log() const {
  // @@protoc_insertion_point(field_get:SL_Log_Game.log)
  return log_.GetNoArena();
}
inline void SL_Log_Game::set_log(const ::std::string& value) {
  set_has_log();
  log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SL_Log_Game.log)
}
#if LANG_CXX11
inline void SL_Log_Game::set_log(::std::string&& value) {
  set_has_log();
  log_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SL_Log_Game.log)
}
#endif
inline void SL_Log_Game::set_log(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_log();
  log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SL_Log_Game.log)
}
inline void SL_Log_Game::set_log(const char* value, size_t size) {
  set_has_log();
  log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SL_Log_Game.log)
}
inline ::std::string* SL_Log_Game::mutable_log() {
  set_has_log();
  // @@protoc_insertion_point(field_mutable:SL_Log_Game.log)
  return log_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SL_Log_Game::release_log() {
  // @@protoc_insertion_point(field_release:SL_Log_Game.log)
  clear_has_log();
  return log_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SL_Log_Game::set_allocated_log(::std::string* log) {
  if (log != NULL) {
    set_has_log();
  } else {
    clear_has_log();
  }
  log_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log);
  // @@protoc_insertion_point(field_set_allocated:SL_Log_Game.log)
}

// optional int32 starttime = 4;
inline bool SL_Log_Game::has_starttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SL_Log_Game::set_has_starttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SL_Log_Game::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SL_Log_Game::clear_starttime() {
  starttime_ = 0;
  clear_has_starttime();
}
inline ::google::protobuf::int32 SL_Log_Game::starttime() const {
  // @@protoc_insertion_point(field_get:SL_Log_Game.starttime)
  return starttime_;
}
inline void SL_Log_Game::set_starttime(::google::protobuf::int32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Game.starttime)
}

// optional int32 endtime = 5;
inline bool SL_Log_Game::has_endtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SL_Log_Game::set_has_endtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SL_Log_Game::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SL_Log_Game::clear_endtime() {
  endtime_ = 0;
  clear_has_endtime();
}
inline ::google::protobuf::int32 SL_Log_Game::endtime() const {
  // @@protoc_insertion_point(field_get:SL_Log_Game.endtime)
  return endtime_;
}
inline void SL_Log_Game::set_endtime(::google::protobuf::int32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Game.endtime)
}

// -------------------------------------------------------------------

// WF_CashFalse

// optional int32 order_id = 1;
inline bool WF_CashFalse::has_order_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WF_CashFalse::set_has_order_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WF_CashFalse::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WF_CashFalse::clear_order_id() {
  order_id_ = 0;
  clear_has_order_id();
}
inline ::google::protobuf::int32 WF_CashFalse::order_id() const {
  // @@protoc_insertion_point(field_get:WF_CashFalse.order_id)
  return order_id_;
}
inline void WF_CashFalse::set_order_id(::google::protobuf::int32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:WF_CashFalse.order_id)
}

// optional int32 del = 2;
inline bool WF_CashFalse::has_del() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WF_CashFalse::set_has_del() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WF_CashFalse::clear_has_del() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WF_CashFalse::clear_del() {
  del_ = 0;
  clear_has_del();
}
inline ::google::protobuf::int32 WF_CashFalse::del() const {
  // @@protoc_insertion_point(field_get:WF_CashFalse.del)
  return del_;
}
inline void WF_CashFalse::set_del(::google::protobuf::int32 value) {
  set_has_del();
  del_ = value;
  // @@protoc_insertion_point(field_set:WF_CashFalse.del)
}

// -------------------------------------------------------------------

// LW_CashFalse

// optional int32 result = 1;
inline bool LW_CashFalse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LW_CashFalse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LW_CashFalse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LW_CashFalse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 LW_CashFalse::result() const {
  // @@protoc_insertion_point(field_get:LW_CashFalse.result)
  return result_;
}
inline void LW_CashFalse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:LW_CashFalse.result)
}

// -------------------------------------------------------------------

// LD_CashFalse

// optional int32 web_id = 1;
inline bool LD_CashFalse::has_web_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_CashFalse::set_has_web_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_CashFalse::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_CashFalse::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 LD_CashFalse::web_id() const {
  // @@protoc_insertion_point(field_get:LD_CashFalse.web_id)
  return web_id_;
}
inline void LD_CashFalse::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:LD_CashFalse.web_id)
}

// optional int32 order_id = 2;
inline bool LD_CashFalse::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_CashFalse::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_CashFalse::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_CashFalse::clear_order_id() {
  order_id_ = 0;
  clear_has_order_id();
}
inline ::google::protobuf::int32 LD_CashFalse::order_id() const {
  // @@protoc_insertion_point(field_get:LD_CashFalse.order_id)
  return order_id_;
}
inline void LD_CashFalse::set_order_id(::google::protobuf::int32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:LD_CashFalse.order_id)
}

// optional int32 login_id = 3;
inline bool LD_CashFalse::has_login_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LD_CashFalse::set_has_login_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LD_CashFalse::clear_has_login_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LD_CashFalse::clear_login_id() {
  login_id_ = 0;
  clear_has_login_id();
}
inline ::google::protobuf::int32 LD_CashFalse::login_id() const {
  // @@protoc_insertion_point(field_get:LD_CashFalse.login_id)
  return login_id_;
}
inline void LD_CashFalse::set_login_id(::google::protobuf::int32 value) {
  set_has_login_id();
  login_id_ = value;
  // @@protoc_insertion_point(field_set:LD_CashFalse.login_id)
}

// optional int32 del = 4;
inline bool LD_CashFalse::has_del() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LD_CashFalse::set_has_del() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LD_CashFalse::clear_has_del() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LD_CashFalse::clear_del() {
  del_ = 0;
  clear_has_del();
}
inline ::google::protobuf::int32 LD_CashFalse::del() const {
  // @@protoc_insertion_point(field_get:LD_CashFalse.del)
  return del_;
}
inline void LD_CashFalse::set_del(::google::protobuf::int32 value) {
  set_has_del();
  del_ = value;
  // @@protoc_insertion_point(field_set:LD_CashFalse.del)
}

// -------------------------------------------------------------------

// DL_CashFalseInfo

// optional int32 web_id = 1;
inline bool DL_CashFalseInfo::has_web_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DL_CashFalseInfo::set_has_web_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DL_CashFalseInfo::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DL_CashFalseInfo::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 DL_CashFalseInfo::web_id() const {
  // @@protoc_insertion_point(field_get:DL_CashFalseInfo.web_id)
  return web_id_;
}
inline void DL_CashFalseInfo::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:DL_CashFalseInfo.web_id)
}

// optional .CashFalse info = 2;
inline bool DL_CashFalseInfo::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DL_CashFalseInfo::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DL_CashFalseInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DL_CashFalseInfo::clear_info() {
  if (info_ != NULL) info_->::CashFalse::Clear();
  clear_has_info();
}
inline const ::CashFalse& DL_CashFalseInfo::info() const {
  // @@protoc_insertion_point(field_get:DL_CashFalseInfo.info)
  return info_ != NULL ? *info_
                         : *::CashFalse::internal_default_instance();
}
inline ::CashFalse* DL_CashFalseInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::CashFalse;
  }
  // @@protoc_insertion_point(field_mutable:DL_CashFalseInfo.info)
  return info_;
}
inline ::CashFalse* DL_CashFalseInfo::release_info() {
  // @@protoc_insertion_point(field_release:DL_CashFalseInfo.info)
  clear_has_info();
  ::CashFalse* temp = info_;
  info_ = NULL;
  return temp;
}
inline void DL_CashFalseInfo::set_allocated_info(::CashFalse* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:DL_CashFalseInfo.info)
}

// optional int32 login_id = 3;
inline bool DL_CashFalseInfo::has_login_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DL_CashFalseInfo::set_has_login_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DL_CashFalseInfo::clear_has_login_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DL_CashFalseInfo::clear_login_id() {
  login_id_ = 0;
  clear_has_login_id();
}
inline ::google::protobuf::int32 DL_CashFalseInfo::login_id() const {
  // @@protoc_insertion_point(field_get:DL_CashFalseInfo.login_id)
  return login_id_;
}
inline void DL_CashFalseInfo::set_login_id(::google::protobuf::int32 value) {
  set_has_login_id();
  login_id_ = value;
  // @@protoc_insertion_point(field_set:DL_CashFalseInfo.login_id)
}

// -------------------------------------------------------------------

// LD_CashDeal

// optional int32 web_id = 1;
inline bool LD_CashDeal::has_web_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_CashDeal::set_has_web_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_CashDeal::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_CashDeal::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 LD_CashDeal::web_id() const {
  // @@protoc_insertion_point(field_get:LD_CashDeal.web_id)
  return web_id_;
}
inline void LD_CashDeal::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:LD_CashDeal.web_id)
}

// optional .CashFalse info = 2;
inline bool LD_CashDeal::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_CashDeal::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_CashDeal::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_CashDeal::clear_info() {
  if (info_ != NULL) info_->::CashFalse::Clear();
  clear_has_info();
}
inline const ::CashFalse& LD_CashDeal::info() const {
  // @@protoc_insertion_point(field_get:LD_CashDeal.info)
  return info_ != NULL ? *info_
                         : *::CashFalse::internal_default_instance();
}
inline ::CashFalse* LD_CashDeal::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::CashFalse;
  }
  // @@protoc_insertion_point(field_mutable:LD_CashDeal.info)
  return info_;
}
inline ::CashFalse* LD_CashDeal::release_info() {
  // @@protoc_insertion_point(field_release:LD_CashDeal.info)
  clear_has_info();
  ::CashFalse* temp = info_;
  info_ = NULL;
  return temp;
}
inline void LD_CashDeal::set_allocated_info(::CashFalse* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:LD_CashDeal.info)
}

// optional int32 login_id = 3;
inline bool LD_CashDeal::has_login_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LD_CashDeal::set_has_login_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LD_CashDeal::clear_has_login_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LD_CashDeal::clear_login_id() {
  login_id_ = 0;
  clear_has_login_id();
}
inline ::google::protobuf::int32 LD_CashDeal::login_id() const {
  // @@protoc_insertion_point(field_get:LD_CashDeal.login_id)
  return login_id_;
}
inline void LD_CashDeal::set_login_id(::google::protobuf::int32 value) {
  set_has_login_id();
  login_id_ = value;
  // @@protoc_insertion_point(field_set:LD_CashDeal.login_id)
}

// -------------------------------------------------------------------

// DL_CashReply

// optional int32 web_id = 1;
inline bool DL_CashReply::has_web_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DL_CashReply::set_has_web_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DL_CashReply::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DL_CashReply::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 DL_CashReply::web_id() const {
  // @@protoc_insertion_point(field_get:DL_CashReply.web_id)
  return web_id_;
}
inline void DL_CashReply::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:DL_CashReply.web_id)
}

// optional int32 result = 2;
inline bool DL_CashReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DL_CashReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DL_CashReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DL_CashReply::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DL_CashReply::result() const {
  // @@protoc_insertion_point(field_get:DL_CashReply.result)
  return result_;
}
inline void DL_CashReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DL_CashReply.result)
}

// -------------------------------------------------------------------

// LS_CashDeal

// optional int32 web_id = 1;
inline bool LS_CashDeal::has_web_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_CashDeal::set_has_web_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_CashDeal::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_CashDeal::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 LS_CashDeal::web_id() const {
  // @@protoc_insertion_point(field_get:LS_CashDeal.web_id)
  return web_id_;
}
inline void LS_CashDeal::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:LS_CashDeal.web_id)
}

// optional .CashFalse info = 2;
inline bool LS_CashDeal::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_CashDeal::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_CashDeal::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_CashDeal::clear_info() {
  if (info_ != NULL) info_->::CashFalse::Clear();
  clear_has_info();
}
inline const ::CashFalse& LS_CashDeal::info() const {
  // @@protoc_insertion_point(field_get:LS_CashDeal.info)
  return info_ != NULL ? *info_
                         : *::CashFalse::internal_default_instance();
}
inline ::CashFalse* LS_CashDeal::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::CashFalse;
  }
  // @@protoc_insertion_point(field_mutable:LS_CashDeal.info)
  return info_;
}
inline ::CashFalse* LS_CashDeal::release_info() {
  // @@protoc_insertion_point(field_release:LS_CashDeal.info)
  clear_has_info();
  ::CashFalse* temp = info_;
  info_ = NULL;
  return temp;
}
inline void LS_CashDeal::set_allocated_info(::CashFalse* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:LS_CashDeal.info)
}

// optional int32 server_id = 3;
inline bool LS_CashDeal::has_server_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LS_CashDeal::set_has_server_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LS_CashDeal::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LS_CashDeal::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 LS_CashDeal::server_id() const {
  // @@protoc_insertion_point(field_get:LS_CashDeal.server_id)
  return server_id_;
}
inline void LS_CashDeal::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:LS_CashDeal.server_id)
}

// optional int32 login_id = 4;
inline bool LS_CashDeal::has_login_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LS_CashDeal::set_has_login_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LS_CashDeal::clear_has_login_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LS_CashDeal::clear_login_id() {
  login_id_ = 0;
  clear_has_login_id();
}
inline ::google::protobuf::int32 LS_CashDeal::login_id() const {
  // @@protoc_insertion_point(field_get:LS_CashDeal.login_id)
  return login_id_;
}
inline void LS_CashDeal::set_login_id(::google::protobuf::int32 value) {
  set_has_login_id();
  login_id_ = value;
  // @@protoc_insertion_point(field_set:LS_CashDeal.login_id)
}

// -------------------------------------------------------------------

// SL_CashReply

// optional int32 web_id = 1;
inline bool SL_CashReply::has_web_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SL_CashReply::set_has_web_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SL_CashReply::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SL_CashReply::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 SL_CashReply::web_id() const {
  // @@protoc_insertion_point(field_get:SL_CashReply.web_id)
  return web_id_;
}
inline void SL_CashReply::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:SL_CashReply.web_id)
}

// optional int32 result = 2;
inline bool SL_CashReply::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SL_CashReply::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SL_CashReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SL_CashReply::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SL_CashReply::result() const {
  // @@protoc_insertion_point(field_get:SL_CashReply.result)
  return result_;
}
inline void SL_CashReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SL_CashReply.result)
}

// optional int32 server_id = 3;
inline bool SL_CashReply::has_server_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SL_CashReply::set_has_server_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SL_CashReply::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SL_CashReply::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 SL_CashReply::server_id() const {
  // @@protoc_insertion_point(field_get:SL_CashReply.server_id)
  return server_id_;
}
inline void SL_CashReply::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:SL_CashReply.server_id)
}

// optional int32 order_id = 4;
inline bool SL_CashReply::has_order_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SL_CashReply::set_has_order_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SL_CashReply::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SL_CashReply::clear_order_id() {
  order_id_ = 0;
  clear_has_order_id();
}
inline ::google::protobuf::int32 SL_CashReply::order_id() const {
  // @@protoc_insertion_point(field_get:SL_CashReply.order_id)
  return order_id_;
}
inline void SL_CashReply::set_order_id(::google::protobuf::int32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:SL_CashReply.order_id)
}

// optional .CashFalse info = 5;
inline bool SL_CashReply::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SL_CashReply::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SL_CashReply::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SL_CashReply::clear_info() {
  if (info_ != NULL) info_->::CashFalse::Clear();
  clear_has_info();
}
inline const ::CashFalse& SL_CashReply::info() const {
  // @@protoc_insertion_point(field_get:SL_CashReply.info)
  return info_ != NULL ? *info_
                         : *::CashFalse::internal_default_instance();
}
inline ::CashFalse* SL_CashReply::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::CashFalse;
  }
  // @@protoc_insertion_point(field_mutable:SL_CashReply.info)
  return info_;
}
inline ::CashFalse* SL_CashReply::release_info() {
  // @@protoc_insertion_point(field_release:SL_CashReply.info)
  clear_has_info();
  ::CashFalse* temp = info_;
  info_ = NULL;
  return temp;
}
inline void SL_CashReply::set_allocated_info(::CashFalse* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:SL_CashReply.info)
}

// -------------------------------------------------------------------

// LD_CashReply

// optional int32 web_id = 1;
inline bool LD_CashReply::has_web_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_CashReply::set_has_web_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_CashReply::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_CashReply::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 LD_CashReply::web_id() const {
  // @@protoc_insertion_point(field_get:LD_CashReply.web_id)
  return web_id_;
}
inline void LD_CashReply::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:LD_CashReply.web_id)
}

// optional int32 result = 2;
inline bool LD_CashReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_CashReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_CashReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_CashReply::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 LD_CashReply::result() const {
  // @@protoc_insertion_point(field_get:LD_CashReply.result)
  return result_;
}
inline void LD_CashReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:LD_CashReply.result)
}

// optional int32 order_id = 3;
inline bool LD_CashReply::has_order_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LD_CashReply::set_has_order_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LD_CashReply::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LD_CashReply::clear_order_id() {
  order_id_ = 0;
  clear_has_order_id();
}
inline ::google::protobuf::int32 LD_CashReply::order_id() const {
  // @@protoc_insertion_point(field_get:LD_CashReply.order_id)
  return order_id_;
}
inline void LD_CashReply::set_order_id(::google::protobuf::int32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:LD_CashReply.order_id)
}

// -------------------------------------------------------------------

// SD_CashMoneyType

// optional int32 guid = 1;
inline bool SD_CashMoneyType::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_CashMoneyType::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_CashMoneyType::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_CashMoneyType::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_CashMoneyType::guid() const {
  // @@protoc_insertion_point(field_get:SD_CashMoneyType.guid)
  return guid_;
}
inline void SD_CashMoneyType::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_CashMoneyType.guid)
}

// -------------------------------------------------------------------

// DS_CashMoneyType

// optional int32 guid = 1;
inline bool DS_CashMoneyType::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_CashMoneyType::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_CashMoneyType::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_CashMoneyType::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_CashMoneyType::guid() const {
  // @@protoc_insertion_point(field_get:DS_CashMoneyType.guid)
  return guid_;
}
inline void DS_CashMoneyType::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_CashMoneyType.guid)
}

// repeated .CashMoneyType pb_cash_info = 2;
inline int DS_CashMoneyType::pb_cash_info_size() const {
  return pb_cash_info_.size();
}
inline void DS_CashMoneyType::clear_pb_cash_info() {
  pb_cash_info_.Clear();
}
inline const ::CashMoneyType& DS_CashMoneyType::pb_cash_info(int index) const {
  // @@protoc_insertion_point(field_get:DS_CashMoneyType.pb_cash_info)
  return pb_cash_info_.Get(index);
}
inline ::CashMoneyType* DS_CashMoneyType::mutable_pb_cash_info(int index) {
  // @@protoc_insertion_point(field_mutable:DS_CashMoneyType.pb_cash_info)
  return pb_cash_info_.Mutable(index);
}
inline ::CashMoneyType* DS_CashMoneyType::add_pb_cash_info() {
  // @@protoc_insertion_point(field_add:DS_CashMoneyType.pb_cash_info)
  return pb_cash_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CashMoneyType >*
DS_CashMoneyType::mutable_pb_cash_info() {
  // @@protoc_insertion_point(field_mutable_list:DS_CashMoneyType.pb_cash_info)
  return &pb_cash_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CashMoneyType >&
DS_CashMoneyType::pb_cash_info() const {
  // @@protoc_insertion_point(field_list:DS_CashMoneyType.pb_cash_info)
  return pb_cash_info_;
}

// -------------------------------------------------------------------

// SD_CashMoney

// optional int32 guid = 1;
inline bool SD_CashMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SD_CashMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SD_CashMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SD_CashMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_CashMoney::guid() const {
  // @@protoc_insertion_point(field_get:SD_CashMoney.guid)
  return guid_;
}
inline void SD_CashMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_CashMoney.guid)
}

// optional int32 money = 3;
inline bool SD_CashMoney::has_money() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SD_CashMoney::set_has_money() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SD_CashMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SD_CashMoney::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 SD_CashMoney::money() const {
  // @@protoc_insertion_point(field_get:SD_CashMoney.money)
  return money_;
}
inline void SD_CashMoney::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SD_CashMoney.money)
}

// optional int32 coins = 4;
inline bool SD_CashMoney::has_coins() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SD_CashMoney::set_has_coins() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SD_CashMoney::clear_has_coins() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SD_CashMoney::clear_coins() {
  coins_ = 0;
  clear_has_coins();
}
inline ::google::protobuf::int32 SD_CashMoney::coins() const {
  // @@protoc_insertion_point(field_get:SD_CashMoney.coins)
  return coins_;
}
inline void SD_CashMoney::set_coins(::google::protobuf::int32 value) {
  set_has_coins();
  coins_ = value;
  // @@protoc_insertion_point(field_set:SD_CashMoney.coins)
}

// optional int32 pay_money = 5;
inline bool SD_CashMoney::has_pay_money() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SD_CashMoney::set_has_pay_money() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SD_CashMoney::clear_has_pay_money() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SD_CashMoney::clear_pay_money() {
  pay_money_ = 0;
  clear_has_pay_money();
}
inline ::google::protobuf::int32 SD_CashMoney::pay_money() const {
  // @@protoc_insertion_point(field_get:SD_CashMoney.pay_money)
  return pay_money_;
}
inline void SD_CashMoney::set_pay_money(::google::protobuf::int32 value) {
  set_has_pay_money();
  pay_money_ = value;
  // @@protoc_insertion_point(field_set:SD_CashMoney.pay_money)
}

// optional string phone = 6;
inline bool SD_CashMoney::has_phone() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_CashMoney::set_has_phone() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_CashMoney::clear_has_phone() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_CashMoney::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& SD_CashMoney::phone() const {
  // @@protoc_insertion_point(field_get:SD_CashMoney.phone)
  return phone_.GetNoArena();
}
inline void SD_CashMoney::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_CashMoney.phone)
}
#if LANG_CXX11
inline void SD_CashMoney::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_CashMoney.phone)
}
#endif
inline void SD_CashMoney::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_CashMoney.phone)
}
inline void SD_CashMoney::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_CashMoney.phone)
}
inline ::std::string* SD_CashMoney::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:SD_CashMoney.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_CashMoney::release_phone() {
  // @@protoc_insertion_point(field_release:SD_CashMoney.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_CashMoney::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:SD_CashMoney.phone)
}

// optional string phone_type = 7;
inline bool SD_CashMoney::has_phone_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_CashMoney::set_has_phone_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_CashMoney::clear_has_phone_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_CashMoney::clear_phone_type() {
  phone_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_type();
}
inline const ::std::string& SD_CashMoney::phone_type() const {
  // @@protoc_insertion_point(field_get:SD_CashMoney.phone_type)
  return phone_type_.GetNoArena();
}
inline void SD_CashMoney::set_phone_type(const ::std::string& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_CashMoney.phone_type)
}
#if LANG_CXX11
inline void SD_CashMoney::set_phone_type(::std::string&& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_CashMoney.phone_type)
}
#endif
inline void SD_CashMoney::set_phone_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_CashMoney.phone_type)
}
inline void SD_CashMoney::set_phone_type(const char* value, size_t size) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_CashMoney.phone_type)
}
inline ::std::string* SD_CashMoney::mutable_phone_type() {
  set_has_phone_type();
  // @@protoc_insertion_point(field_mutable:SD_CashMoney.phone_type)
  return phone_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_CashMoney::release_phone_type() {
  // @@protoc_insertion_point(field_release:SD_CashMoney.phone_type)
  clear_has_phone_type();
  return phone_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_CashMoney::set_allocated_phone_type(::std::string* phone_type) {
  if (phone_type != NULL) {
    set_has_phone_type();
  } else {
    clear_has_phone_type();
  }
  phone_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_type);
  // @@protoc_insertion_point(field_set_allocated:SD_CashMoney.phone_type)
}

// optional string ip = 8;
inline bool SD_CashMoney::has_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_CashMoney::set_has_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_CashMoney::clear_has_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_CashMoney::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& SD_CashMoney::ip() const {
  // @@protoc_insertion_point(field_get:SD_CashMoney.ip)
  return ip_.GetNoArena();
}
inline void SD_CashMoney::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_CashMoney.ip)
}
#if LANG_CXX11
inline void SD_CashMoney::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_CashMoney.ip)
}
#endif
inline void SD_CashMoney::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_CashMoney.ip)
}
inline void SD_CashMoney::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_CashMoney.ip)
}
inline ::std::string* SD_CashMoney::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:SD_CashMoney.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_CashMoney::release_ip() {
  // @@protoc_insertion_point(field_release:SD_CashMoney.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_CashMoney::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:SD_CashMoney.ip)
}

// optional string bag_id = 9;
inline bool SD_CashMoney::has_bag_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SD_CashMoney::set_has_bag_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SD_CashMoney::clear_has_bag_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SD_CashMoney::clear_bag_id() {
  bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bag_id();
}
inline const ::std::string& SD_CashMoney::bag_id() const {
  // @@protoc_insertion_point(field_get:SD_CashMoney.bag_id)
  return bag_id_.GetNoArena();
}
inline void SD_CashMoney::set_bag_id(const ::std::string& value) {
  set_has_bag_id();
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_CashMoney.bag_id)
}
#if LANG_CXX11
inline void SD_CashMoney::set_bag_id(::std::string&& value) {
  set_has_bag_id();
  bag_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_CashMoney.bag_id)
}
#endif
inline void SD_CashMoney::set_bag_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bag_id();
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_CashMoney.bag_id)
}
inline void SD_CashMoney::set_bag_id(const char* value, size_t size) {
  set_has_bag_id();
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_CashMoney.bag_id)
}
inline ::std::string* SD_CashMoney::mutable_bag_id() {
  set_has_bag_id();
  // @@protoc_insertion_point(field_mutable:SD_CashMoney.bag_id)
  return bag_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_CashMoney::release_bag_id() {
  // @@protoc_insertion_point(field_release:SD_CashMoney.bag_id)
  clear_has_bag_id();
  return bag_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_CashMoney::set_allocated_bag_id(::std::string* bag_id) {
  if (bag_id != NULL) {
    set_has_bag_id();
  } else {
    clear_has_bag_id();
  }
  bag_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bag_id);
  // @@protoc_insertion_point(field_set_allocated:SD_CashMoney.bag_id)
}

// optional int64 bef_money = 10;
inline bool SD_CashMoney::has_bef_money() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SD_CashMoney::set_has_bef_money() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SD_CashMoney::clear_has_bef_money() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SD_CashMoney::clear_bef_money() {
  bef_money_ = GOOGLE_LONGLONG(0);
  clear_has_bef_money();
}
inline ::google::protobuf::int64 SD_CashMoney::bef_money() const {
  // @@protoc_insertion_point(field_get:SD_CashMoney.bef_money)
  return bef_money_;
}
inline void SD_CashMoney::set_bef_money(::google::protobuf::int64 value) {
  set_has_bef_money();
  bef_money_ = value;
  // @@protoc_insertion_point(field_set:SD_CashMoney.bef_money)
}

// optional int64 aft_money = 11;
inline bool SD_CashMoney::has_aft_money() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SD_CashMoney::set_has_aft_money() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SD_CashMoney::clear_has_aft_money() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SD_CashMoney::clear_aft_money() {
  aft_money_ = GOOGLE_LONGLONG(0);
  clear_has_aft_money();
}
inline ::google::protobuf::int64 SD_CashMoney::aft_money() const {
  // @@protoc_insertion_point(field_get:SD_CashMoney.aft_money)
  return aft_money_;
}
inline void SD_CashMoney::set_aft_money(::google::protobuf::int64 value) {
  set_has_aft_money();
  aft_money_ = value;
  // @@protoc_insertion_point(field_set:SD_CashMoney.aft_money)
}

// optional int64 bef_bank = 12;
inline bool SD_CashMoney::has_bef_bank() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SD_CashMoney::set_has_bef_bank() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SD_CashMoney::clear_has_bef_bank() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SD_CashMoney::clear_bef_bank() {
  bef_bank_ = GOOGLE_LONGLONG(0);
  clear_has_bef_bank();
}
inline ::google::protobuf::int64 SD_CashMoney::bef_bank() const {
  // @@protoc_insertion_point(field_get:SD_CashMoney.bef_bank)
  return bef_bank_;
}
inline void SD_CashMoney::set_bef_bank(::google::protobuf::int64 value) {
  set_has_bef_bank();
  bef_bank_ = value;
  // @@protoc_insertion_point(field_set:SD_CashMoney.bef_bank)
}

// optional int64 aft_bank = 13;
inline bool SD_CashMoney::has_aft_bank() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SD_CashMoney::set_has_aft_bank() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SD_CashMoney::clear_has_aft_bank() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SD_CashMoney::clear_aft_bank() {
  aft_bank_ = GOOGLE_LONGLONG(0);
  clear_has_aft_bank();
}
inline ::google::protobuf::int64 SD_CashMoney::aft_bank() const {
  // @@protoc_insertion_point(field_get:SD_CashMoney.aft_bank)
  return aft_bank_;
}
inline void SD_CashMoney::set_aft_bank(::google::protobuf::int64 value) {
  set_has_aft_bank();
  aft_bank_ = value;
  // @@protoc_insertion_point(field_set:SD_CashMoney.aft_bank)
}

// optional int32 cash_type = 14;
inline bool SD_CashMoney::has_cash_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SD_CashMoney::set_has_cash_type() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SD_CashMoney::clear_has_cash_type() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SD_CashMoney::clear_cash_type() {
  cash_type_ = 0;
  clear_has_cash_type();
}
inline ::google::protobuf::int32 SD_CashMoney::cash_type() const {
  // @@protoc_insertion_point(field_get:SD_CashMoney.cash_type)
  return cash_type_;
}
inline void SD_CashMoney::set_cash_type(::google::protobuf::int32 value) {
  set_has_cash_type();
  cash_type_ = value;
  // @@protoc_insertion_point(field_set:SD_CashMoney.cash_type)
}

// -------------------------------------------------------------------

// DS_CashMoney

// optional int32 guid = 1;
inline bool DS_CashMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_CashMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_CashMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_CashMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_CashMoney::guid() const {
  // @@protoc_insertion_point(field_get:DS_CashMoney.guid)
  return guid_;
}
inline void DS_CashMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_CashMoney.guid)
}

// optional int32 coins = 2;
inline bool DS_CashMoney::has_coins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_CashMoney::set_has_coins() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_CashMoney::clear_has_coins() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_CashMoney::clear_coins() {
  coins_ = 0;
  clear_has_coins();
}
inline ::google::protobuf::int32 DS_CashMoney::coins() const {
  // @@protoc_insertion_point(field_get:DS_CashMoney.coins)
  return coins_;
}
inline void DS_CashMoney::set_coins(::google::protobuf::int32 value) {
  set_has_coins();
  coins_ = value;
  // @@protoc_insertion_point(field_set:DS_CashMoney.coins)
}

// optional int32 result = 3;
inline bool DS_CashMoney::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DS_CashMoney::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DS_CashMoney::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DS_CashMoney::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DS_CashMoney::result() const {
  // @@protoc_insertion_point(field_get:DS_CashMoney.result)
  return result_;
}
inline void DS_CashMoney::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DS_CashMoney.result)
}

// -------------------------------------------------------------------

// WF_Recharge

// optional int32 id = 1;
inline bool WF_Recharge::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WF_Recharge::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WF_Recharge::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WF_Recharge::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WF_Recharge::id() const {
  // @@protoc_insertion_point(field_get:WF_Recharge.id)
  return id_;
}
inline void WF_Recharge::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:WF_Recharge.id)
}

// optional int32 order_id = 2;
inline bool WF_Recharge::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WF_Recharge::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WF_Recharge::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WF_Recharge::clear_order_id() {
  order_id_ = 0;
  clear_has_order_id();
}
inline ::google::protobuf::int32 WF_Recharge::order_id() const {
  // @@protoc_insertion_point(field_get:WF_Recharge.order_id)
  return order_id_;
}
inline void WF_Recharge::set_order_id(::google::protobuf::int32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:WF_Recharge.order_id)
}

// -------------------------------------------------------------------

// FW_Result

// optional int32 result = 1;
inline bool FW_Result::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FW_Result::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FW_Result::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FW_Result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 FW_Result::result() const {
  // @@protoc_insertion_point(field_get:FW_Result.result)
  return result_;
}
inline void FW_Result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:FW_Result.result)
}

// -------------------------------------------------------------------

// FD_ChangMoney

// optional int32 web_id = 1;
inline bool FD_ChangMoney::has_web_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FD_ChangMoney::set_has_web_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FD_ChangMoney::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FD_ChangMoney::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 FD_ChangMoney::web_id() const {
  // @@protoc_insertion_point(field_get:FD_ChangMoney.web_id)
  return web_id_;
}
inline void FD_ChangMoney::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:FD_ChangMoney.web_id)
}

// optional int32 order_id = 2;
inline bool FD_ChangMoney::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FD_ChangMoney::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FD_ChangMoney::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FD_ChangMoney::clear_order_id() {
  order_id_ = 0;
  clear_has_order_id();
}
inline ::google::protobuf::int32 FD_ChangMoney::order_id() const {
  // @@protoc_insertion_point(field_get:FD_ChangMoney.order_id)
  return order_id_;
}
inline void FD_ChangMoney::set_order_id(::google::protobuf::int32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:FD_ChangMoney.order_id)
}

// optional int32 type_id = 3;
inline bool FD_ChangMoney::has_type_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FD_ChangMoney::set_has_type_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FD_ChangMoney::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FD_ChangMoney::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 FD_ChangMoney::type_id() const {
  // @@protoc_insertion_point(field_get:FD_ChangMoney.type_id)
  return type_id_;
}
inline void FD_ChangMoney::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
  // @@protoc_insertion_point(field_set:FD_ChangMoney.type_id)
}

// optional int32 other_oper = 4;
inline bool FD_ChangMoney::has_other_oper() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FD_ChangMoney::set_has_other_oper() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FD_ChangMoney::clear_has_other_oper() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FD_ChangMoney::clear_other_oper() {
  other_oper_ = 0;
  clear_has_other_oper();
}
inline ::google::protobuf::int32 FD_ChangMoney::other_oper() const {
  // @@protoc_insertion_point(field_get:FD_ChangMoney.other_oper)
  return other_oper_;
}
inline void FD_ChangMoney::set_other_oper(::google::protobuf::int32 value) {
  set_has_other_oper();
  other_oper_ = value;
  // @@protoc_insertion_point(field_set:FD_ChangMoney.other_oper)
}

// -------------------------------------------------------------------

// DF_Reply

// optional int32 web_id = 1;
inline bool DF_Reply::has_web_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DF_Reply::set_has_web_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DF_Reply::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DF_Reply::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 DF_Reply::web_id() const {
  // @@protoc_insertion_point(field_get:DF_Reply.web_id)
  return web_id_;
}
inline void DF_Reply::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:DF_Reply.web_id)
}

// optional int32 result = 2;
inline bool DF_Reply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DF_Reply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DF_Reply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DF_Reply::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DF_Reply::result() const {
  // @@protoc_insertion_point(field_get:DF_Reply.result)
  return result_;
}
inline void DF_Reply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DF_Reply.result)
}

// -------------------------------------------------------------------

// AddMoneyInfo

// optional int32 guid = 2;
inline bool AddMoneyInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddMoneyInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddMoneyInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddMoneyInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 AddMoneyInfo::guid() const {
  // @@protoc_insertion_point(field_get:AddMoneyInfo.guid)
  return guid_;
}
inline void AddMoneyInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:AddMoneyInfo.guid)
}

// optional int32 type_id = 3;
inline bool AddMoneyInfo::has_type_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddMoneyInfo::set_has_type_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddMoneyInfo::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddMoneyInfo::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 AddMoneyInfo::type_id() const {
  // @@protoc_insertion_point(field_get:AddMoneyInfo.type_id)
  return type_id_;
}
inline void AddMoneyInfo::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
  // @@protoc_insertion_point(field_set:AddMoneyInfo.type_id)
}

// optional int64 gold = 4;
inline bool AddMoneyInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddMoneyInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddMoneyInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddMoneyInfo::clear_gold() {
  gold_ = GOOGLE_LONGLONG(0);
  clear_has_gold();
}
inline ::google::protobuf::int64 AddMoneyInfo::gold() const {
  // @@protoc_insertion_point(field_get:AddMoneyInfo.gold)
  return gold_;
}
inline void AddMoneyInfo::set_gold(::google::protobuf::int64 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:AddMoneyInfo.gold)
}

// optional int32 order_id = 5;
inline bool AddMoneyInfo::has_order_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddMoneyInfo::set_has_order_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddMoneyInfo::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddMoneyInfo::clear_order_id() {
  order_id_ = 0;
  clear_has_order_id();
}
inline ::google::protobuf::int32 AddMoneyInfo::order_id() const {
  // @@protoc_insertion_point(field_get:AddMoneyInfo.order_id)
  return order_id_;
}
inline void AddMoneyInfo::set_order_id(::google::protobuf::int32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:AddMoneyInfo.order_id)
}

// -------------------------------------------------------------------

// FD_ChangMoneyDeal

// optional int32 web_id = 1;
inline bool FD_ChangMoneyDeal::has_web_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FD_ChangMoneyDeal::set_has_web_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FD_ChangMoneyDeal::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FD_ChangMoneyDeal::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 FD_ChangMoneyDeal::web_id() const {
  // @@protoc_insertion_point(field_get:FD_ChangMoneyDeal.web_id)
  return web_id_;
}
inline void FD_ChangMoneyDeal::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:FD_ChangMoneyDeal.web_id)
}

// optional .AddMoneyInfo info = 2;
inline bool FD_ChangMoneyDeal::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FD_ChangMoneyDeal::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FD_ChangMoneyDeal::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FD_ChangMoneyDeal::clear_info() {
  if (info_ != NULL) info_->::AddMoneyInfo::Clear();
  clear_has_info();
}
inline const ::AddMoneyInfo& FD_ChangMoneyDeal::info() const {
  // @@protoc_insertion_point(field_get:FD_ChangMoneyDeal.info)
  return info_ != NULL ? *info_
                         : *::AddMoneyInfo::internal_default_instance();
}
inline ::AddMoneyInfo* FD_ChangMoneyDeal::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::AddMoneyInfo;
  }
  // @@protoc_insertion_point(field_mutable:FD_ChangMoneyDeal.info)
  return info_;
}
inline ::AddMoneyInfo* FD_ChangMoneyDeal::release_info() {
  // @@protoc_insertion_point(field_release:FD_ChangMoneyDeal.info)
  clear_has_info();
  ::AddMoneyInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void FD_ChangMoneyDeal::set_allocated_info(::AddMoneyInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:FD_ChangMoneyDeal.info)
}

// -------------------------------------------------------------------

// DF_ChangMoney

// optional int32 web_id = 1;
inline bool DF_ChangMoney::has_web_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DF_ChangMoney::set_has_web_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DF_ChangMoney::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DF_ChangMoney::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 DF_ChangMoney::web_id() const {
  // @@protoc_insertion_point(field_get:DF_ChangMoney.web_id)
  return web_id_;
}
inline void DF_ChangMoney::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:DF_ChangMoney.web_id)
}

// optional .AddMoneyInfo info = 2;
inline bool DF_ChangMoney::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DF_ChangMoney::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DF_ChangMoney::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DF_ChangMoney::clear_info() {
  if (info_ != NULL) info_->::AddMoneyInfo::Clear();
  clear_has_info();
}
inline const ::AddMoneyInfo& DF_ChangMoney::info() const {
  // @@protoc_insertion_point(field_get:DF_ChangMoney.info)
  return info_ != NULL ? *info_
                         : *::AddMoneyInfo::internal_default_instance();
}
inline ::AddMoneyInfo* DF_ChangMoney::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::AddMoneyInfo;
  }
  // @@protoc_insertion_point(field_mutable:DF_ChangMoney.info)
  return info_;
}
inline ::AddMoneyInfo* DF_ChangMoney::release_info() {
  // @@protoc_insertion_point(field_release:DF_ChangMoney.info)
  clear_has_info();
  ::AddMoneyInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void DF_ChangMoney::set_allocated_info(::AddMoneyInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:DF_ChangMoney.info)
}

// -------------------------------------------------------------------

// FS_ChangMoneyDeal

// optional int32 web_id = 1;
inline bool FS_ChangMoneyDeal::has_web_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FS_ChangMoneyDeal::set_has_web_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FS_ChangMoneyDeal::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FS_ChangMoneyDeal::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 FS_ChangMoneyDeal::web_id() const {
  // @@protoc_insertion_point(field_get:FS_ChangMoneyDeal.web_id)
  return web_id_;
}
inline void FS_ChangMoneyDeal::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:FS_ChangMoneyDeal.web_id)
}

// optional .AddMoneyInfo info = 2;
inline bool FS_ChangMoneyDeal::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FS_ChangMoneyDeal::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FS_ChangMoneyDeal::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FS_ChangMoneyDeal::clear_info() {
  if (info_ != NULL) info_->::AddMoneyInfo::Clear();
  clear_has_info();
}
inline const ::AddMoneyInfo& FS_ChangMoneyDeal::info() const {
  // @@protoc_insertion_point(field_get:FS_ChangMoneyDeal.info)
  return info_ != NULL ? *info_
                         : *::AddMoneyInfo::internal_default_instance();
}
inline ::AddMoneyInfo* FS_ChangMoneyDeal::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::AddMoneyInfo;
  }
  // @@protoc_insertion_point(field_mutable:FS_ChangMoneyDeal.info)
  return info_;
}
inline ::AddMoneyInfo* FS_ChangMoneyDeal::release_info() {
  // @@protoc_insertion_point(field_release:FS_ChangMoneyDeal.info)
  clear_has_info();
  ::AddMoneyInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void FS_ChangMoneyDeal::set_allocated_info(::AddMoneyInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:FS_ChangMoneyDeal.info)
}

// -------------------------------------------------------------------

// SD_ChangMoneyReply

// optional int32 web_id = 1;
inline bool SD_ChangMoneyReply::has_web_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_ChangMoneyReply::set_has_web_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_ChangMoneyReply::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_ChangMoneyReply::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 SD_ChangMoneyReply::web_id() const {
  // @@protoc_insertion_point(field_get:SD_ChangMoneyReply.web_id)
  return web_id_;
}
inline void SD_ChangMoneyReply::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:SD_ChangMoneyReply.web_id)
}

// optional .AddMoneyInfo info = 2;
inline bool SD_ChangMoneyReply::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_ChangMoneyReply::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_ChangMoneyReply::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_ChangMoneyReply::clear_info() {
  if (info_ != NULL) info_->::AddMoneyInfo::Clear();
  clear_has_info();
}
inline const ::AddMoneyInfo& SD_ChangMoneyReply::info() const {
  // @@protoc_insertion_point(field_get:SD_ChangMoneyReply.info)
  return info_ != NULL ? *info_
                         : *::AddMoneyInfo::internal_default_instance();
}
inline ::AddMoneyInfo* SD_ChangMoneyReply::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::AddMoneyInfo;
  }
  // @@protoc_insertion_point(field_mutable:SD_ChangMoneyReply.info)
  return info_;
}
inline ::AddMoneyInfo* SD_ChangMoneyReply::release_info() {
  // @@protoc_insertion_point(field_release:SD_ChangMoneyReply.info)
  clear_has_info();
  ::AddMoneyInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void SD_ChangMoneyReply::set_allocated_info(::AddMoneyInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:SD_ChangMoneyReply.info)
}

// optional int64 befor_bank = 6;
inline bool SD_ChangMoneyReply::has_befor_bank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SD_ChangMoneyReply::set_has_befor_bank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SD_ChangMoneyReply::clear_has_befor_bank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SD_ChangMoneyReply::clear_befor_bank() {
  befor_bank_ = GOOGLE_LONGLONG(0);
  clear_has_befor_bank();
}
inline ::google::protobuf::int64 SD_ChangMoneyReply::befor_bank() const {
  // @@protoc_insertion_point(field_get:SD_ChangMoneyReply.befor_bank)
  return befor_bank_;
}
inline void SD_ChangMoneyReply::set_befor_bank(::google::protobuf::int64 value) {
  set_has_befor_bank();
  befor_bank_ = value;
  // @@protoc_insertion_point(field_set:SD_ChangMoneyReply.befor_bank)
}

// optional int64 after_bank = 7;
inline bool SD_ChangMoneyReply::has_after_bank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SD_ChangMoneyReply::set_has_after_bank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SD_ChangMoneyReply::clear_has_after_bank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SD_ChangMoneyReply::clear_after_bank() {
  after_bank_ = GOOGLE_LONGLONG(0);
  clear_has_after_bank();
}
inline ::google::protobuf::int64 SD_ChangMoneyReply::after_bank() const {
  // @@protoc_insertion_point(field_get:SD_ChangMoneyReply.after_bank)
  return after_bank_;
}
inline void SD_ChangMoneyReply::set_after_bank(::google::protobuf::int64 value) {
  set_has_after_bank();
  after_bank_ = value;
  // @@protoc_insertion_point(field_set:SD_ChangMoneyReply.after_bank)
}

// optional int32 result = 8;
inline bool SD_ChangMoneyReply::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_ChangMoneyReply::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_ChangMoneyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_ChangMoneyReply::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SD_ChangMoneyReply::result() const {
  // @@protoc_insertion_point(field_get:SD_ChangMoneyReply.result)
  return result_;
}
inline void SD_ChangMoneyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SD_ChangMoneyReply.result)
}

// -------------------------------------------------------------------

// SD_BandAlipay

// optional int32 guid = 1;
inline bool SD_BandAlipay::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_BandAlipay::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_BandAlipay::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_BandAlipay::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_BandAlipay::guid() const {
  // @@protoc_insertion_point(field_get:SD_BandAlipay.guid)
  return guid_;
}
inline void SD_BandAlipay::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_BandAlipay.guid)
}

// optional string alipay_account = 2;
inline bool SD_BandAlipay::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_BandAlipay::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_BandAlipay::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_BandAlipay::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
inline const ::std::string& SD_BandAlipay::alipay_account() const {
  // @@protoc_insertion_point(field_get:SD_BandAlipay.alipay_account)
  return alipay_account_.GetNoArena();
}
inline void SD_BandAlipay::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_BandAlipay.alipay_account)
}
#if LANG_CXX11
inline void SD_BandAlipay::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_BandAlipay.alipay_account)
}
#endif
inline void SD_BandAlipay::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_BandAlipay.alipay_account)
}
inline void SD_BandAlipay::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_BandAlipay.alipay_account)
}
inline ::std::string* SD_BandAlipay::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:SD_BandAlipay.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_BandAlipay::release_alipay_account() {
  // @@protoc_insertion_point(field_release:SD_BandAlipay.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_BandAlipay::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:SD_BandAlipay.alipay_account)
}

// optional string alipay_name = 3;
inline bool SD_BandAlipay::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_BandAlipay::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_BandAlipay::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_BandAlipay::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
inline const ::std::string& SD_BandAlipay::alipay_name() const {
  // @@protoc_insertion_point(field_get:SD_BandAlipay.alipay_name)
  return alipay_name_.GetNoArena();
}
inline void SD_BandAlipay::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_BandAlipay.alipay_name)
}
#if LANG_CXX11
inline void SD_BandAlipay::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_BandAlipay.alipay_name)
}
#endif
inline void SD_BandAlipay::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_BandAlipay.alipay_name)
}
inline void SD_BandAlipay::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_BandAlipay.alipay_name)
}
inline ::std::string* SD_BandAlipay::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:SD_BandAlipay.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_BandAlipay::release_alipay_name() {
  // @@protoc_insertion_point(field_release:SD_BandAlipay.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_BandAlipay::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:SD_BandAlipay.alipay_name)
}

// -------------------------------------------------------------------

// DS_BandAlipay

// optional int32 guid = 1;
inline bool DS_BandAlipay::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DS_BandAlipay::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DS_BandAlipay::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DS_BandAlipay::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_BandAlipay::guid() const {
  // @@protoc_insertion_point(field_get:DS_BandAlipay.guid)
  return guid_;
}
inline void DS_BandAlipay::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_BandAlipay.guid)
}

// optional string alipay_account = 2;
inline bool DS_BandAlipay::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_BandAlipay::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_BandAlipay::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_BandAlipay::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
inline const ::std::string& DS_BandAlipay::alipay_account() const {
  // @@protoc_insertion_point(field_get:DS_BandAlipay.alipay_account)
  return alipay_account_.GetNoArena();
}
inline void DS_BandAlipay::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DS_BandAlipay.alipay_account)
}
#if LANG_CXX11
inline void DS_BandAlipay::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DS_BandAlipay.alipay_account)
}
#endif
inline void DS_BandAlipay::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DS_BandAlipay.alipay_account)
}
inline void DS_BandAlipay::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DS_BandAlipay.alipay_account)
}
inline ::std::string* DS_BandAlipay::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:DS_BandAlipay.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DS_BandAlipay::release_alipay_account() {
  // @@protoc_insertion_point(field_release:DS_BandAlipay.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DS_BandAlipay::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:DS_BandAlipay.alipay_account)
}

// optional string alipay_name = 3;
inline bool DS_BandAlipay::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_BandAlipay::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_BandAlipay::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_BandAlipay::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
inline const ::std::string& DS_BandAlipay::alipay_name() const {
  // @@protoc_insertion_point(field_get:DS_BandAlipay.alipay_name)
  return alipay_name_.GetNoArena();
}
inline void DS_BandAlipay::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DS_BandAlipay.alipay_name)
}
#if LANG_CXX11
inline void DS_BandAlipay::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DS_BandAlipay.alipay_name)
}
#endif
inline void DS_BandAlipay::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DS_BandAlipay.alipay_name)
}
inline void DS_BandAlipay::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DS_BandAlipay.alipay_name)
}
inline ::std::string* DS_BandAlipay::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:DS_BandAlipay.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DS_BandAlipay::release_alipay_name() {
  // @@protoc_insertion_point(field_release:DS_BandAlipay.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DS_BandAlipay::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:DS_BandAlipay.alipay_name)
}

// optional int32 result = 4;
inline bool DS_BandAlipay::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DS_BandAlipay::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DS_BandAlipay::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DS_BandAlipay::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DS_BandAlipay::result() const {
  // @@protoc_insertion_point(field_get:DS_BandAlipay.result)
  return result_;
}
inline void DS_BandAlipay::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DS_BandAlipay.result)
}

// -------------------------------------------------------------------

// DS_BandAlipayNum

// optional int32 guid = 1;
inline bool DS_BandAlipayNum::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_BandAlipayNum::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_BandAlipayNum::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_BandAlipayNum::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_BandAlipayNum::guid() const {
  // @@protoc_insertion_point(field_get:DS_BandAlipayNum.guid)
  return guid_;
}
inline void DS_BandAlipayNum::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_BandAlipayNum.guid)
}

// optional int32 band_num = 2;
inline bool DS_BandAlipayNum::has_band_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_BandAlipayNum::set_has_band_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_BandAlipayNum::clear_has_band_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_BandAlipayNum::clear_band_num() {
  band_num_ = 0;
  clear_has_band_num();
}
inline ::google::protobuf::int32 DS_BandAlipayNum::band_num() const {
  // @@protoc_insertion_point(field_get:DS_BandAlipayNum.band_num)
  return band_num_;
}
inline void DS_BandAlipayNum::set_band_num(::google::protobuf::int32 value) {
  set_has_band_num();
  band_num_ = value;
  // @@protoc_insertion_point(field_set:DS_BandAlipayNum.band_num)
}

// -------------------------------------------------------------------

// WL_ChangeTax

// optional int32 id = 1;
inline bool WL_ChangeTax::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WL_ChangeTax::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WL_ChangeTax::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WL_ChangeTax::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WL_ChangeTax::id() const {
  // @@protoc_insertion_point(field_get:WL_ChangeTax.id)
  return id_;
}
inline void WL_ChangeTax::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:WL_ChangeTax.id)
}

// optional int32 tax = 2;
inline bool WL_ChangeTax::has_tax() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WL_ChangeTax::set_has_tax() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WL_ChangeTax::clear_has_tax() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WL_ChangeTax::clear_tax() {
  tax_ = 0;
  clear_has_tax();
}
inline ::google::protobuf::int32 WL_ChangeTax::tax() const {
  // @@protoc_insertion_point(field_get:WL_ChangeTax.tax)
  return tax_;
}
inline void WL_ChangeTax::set_tax(::google::protobuf::int32 value) {
  set_has_tax();
  tax_ = value;
  // @@protoc_insertion_point(field_set:WL_ChangeTax.tax)
}

// optional int32 is_enable = 3;
inline bool WL_ChangeTax::has_is_enable() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WL_ChangeTax::set_has_is_enable() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WL_ChangeTax::clear_has_is_enable() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WL_ChangeTax::clear_is_enable() {
  is_enable_ = 0;
  clear_has_is_enable();
}
inline ::google::protobuf::int32 WL_ChangeTax::is_enable() const {
  // @@protoc_insertion_point(field_get:WL_ChangeTax.is_enable)
  return is_enable_;
}
inline void WL_ChangeTax::set_is_enable(::google::protobuf::int32 value) {
  set_has_is_enable();
  is_enable_ = value;
  // @@protoc_insertion_point(field_set:WL_ChangeTax.is_enable)
}

// optional int32 is_show = 4;
inline bool WL_ChangeTax::has_is_show() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WL_ChangeTax::set_has_is_show() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WL_ChangeTax::clear_has_is_show() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WL_ChangeTax::clear_is_show() {
  is_show_ = 0;
  clear_has_is_show();
}
inline ::google::protobuf::int32 WL_ChangeTax::is_show() const {
  // @@protoc_insertion_point(field_get:WL_ChangeTax.is_show)
  return is_show_;
}
inline void WL_ChangeTax::set_is_show(::google::protobuf::int32 value) {
  set_has_is_show();
  is_show_ = value;
  // @@protoc_insertion_point(field_set:WL_ChangeTax.is_show)
}

// -------------------------------------------------------------------

// LS_ChangeTax

// optional int32 webid = 1;
inline bool LS_ChangeTax::has_webid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_ChangeTax::set_has_webid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_ChangeTax::clear_has_webid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_ChangeTax::clear_webid() {
  webid_ = 0;
  clear_has_webid();
}
inline ::google::protobuf::int32 LS_ChangeTax::webid() const {
  // @@protoc_insertion_point(field_get:LS_ChangeTax.webid)
  return webid_;
}
inline void LS_ChangeTax::set_webid(::google::protobuf::int32 value) {
  set_has_webid();
  webid_ = value;
  // @@protoc_insertion_point(field_set:LS_ChangeTax.webid)
}

// optional int32 tax = 2;
inline bool LS_ChangeTax::has_tax() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_ChangeTax::set_has_tax() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_ChangeTax::clear_has_tax() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_ChangeTax::clear_tax() {
  tax_ = 0;
  clear_has_tax();
}
inline ::google::protobuf::int32 LS_ChangeTax::tax() const {
  // @@protoc_insertion_point(field_get:LS_ChangeTax.tax)
  return tax_;
}
inline void LS_ChangeTax::set_tax(::google::protobuf::int32 value) {
  set_has_tax();
  tax_ = value;
  // @@protoc_insertion_point(field_set:LS_ChangeTax.tax)
}

// optional int32 is_enable = 3;
inline bool LS_ChangeTax::has_is_enable() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LS_ChangeTax::set_has_is_enable() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LS_ChangeTax::clear_has_is_enable() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LS_ChangeTax::clear_is_enable() {
  is_enable_ = 0;
  clear_has_is_enable();
}
inline ::google::protobuf::int32 LS_ChangeTax::is_enable() const {
  // @@protoc_insertion_point(field_get:LS_ChangeTax.is_enable)
  return is_enable_;
}
inline void LS_ChangeTax::set_is_enable(::google::protobuf::int32 value) {
  set_has_is_enable();
  is_enable_ = value;
  // @@protoc_insertion_point(field_set:LS_ChangeTax.is_enable)
}

// optional int32 is_show = 4;
inline bool LS_ChangeTax::has_is_show() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LS_ChangeTax::set_has_is_show() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LS_ChangeTax::clear_has_is_show() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LS_ChangeTax::clear_is_show() {
  is_show_ = 0;
  clear_has_is_show();
}
inline ::google::protobuf::int32 LS_ChangeTax::is_show() const {
  // @@protoc_insertion_point(field_get:LS_ChangeTax.is_show)
  return is_show_;
}
inline void LS_ChangeTax::set_is_show(::google::protobuf::int32 value) {
  set_has_is_show();
  is_show_ = value;
  // @@protoc_insertion_point(field_set:LS_ChangeTax.is_show)
}

// -------------------------------------------------------------------

// SL_ChangeTax

// optional int32 webid = 1;
inline bool SL_ChangeTax::has_webid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SL_ChangeTax::set_has_webid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SL_ChangeTax::clear_has_webid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SL_ChangeTax::clear_webid() {
  webid_ = 0;
  clear_has_webid();
}
inline ::google::protobuf::int32 SL_ChangeTax::webid() const {
  // @@protoc_insertion_point(field_get:SL_ChangeTax.webid)
  return webid_;
}
inline void SL_ChangeTax::set_webid(::google::protobuf::int32 value) {
  set_has_webid();
  webid_ = value;
  // @@protoc_insertion_point(field_set:SL_ChangeTax.webid)
}

// optional int32 result = 2;
inline bool SL_ChangeTax::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SL_ChangeTax::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SL_ChangeTax::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SL_ChangeTax::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SL_ChangeTax::result() const {
  // @@protoc_insertion_point(field_get:SL_ChangeTax.result)
  return result_;
}
inline void SL_ChangeTax::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SL_ChangeTax.result)
}

// -------------------------------------------------------------------

// LW_ChangeTax

// optional int32 result = 1;
inline bool LW_ChangeTax::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LW_ChangeTax::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LW_ChangeTax::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LW_ChangeTax::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 LW_ChangeTax::result() const {
  // @@protoc_insertion_point(field_get:LW_ChangeTax.result)
  return result_;
}
inline void LW_ChangeTax::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:LW_ChangeTax.result)
}

// -------------------------------------------------------------------

// WF_ChangeGameCfg

// optional int32 id = 1;
inline bool WF_ChangeGameCfg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WF_ChangeGameCfg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WF_ChangeGameCfg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WF_ChangeGameCfg::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WF_ChangeGameCfg::id() const {
  // @@protoc_insertion_point(field_get:WF_ChangeGameCfg.id)
  return id_;
}
inline void WF_ChangeGameCfg::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:WF_ChangeGameCfg.id)
}

// -------------------------------------------------------------------

// FS_ChangeGameCfg

// optional int32 webid = 1;
inline bool FS_ChangeGameCfg::has_webid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FS_ChangeGameCfg::set_has_webid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FS_ChangeGameCfg::clear_has_webid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FS_ChangeGameCfg::clear_webid() {
  webid_ = 0;
  clear_has_webid();
}
inline ::google::protobuf::int32 FS_ChangeGameCfg::webid() const {
  // @@protoc_insertion_point(field_get:FS_ChangeGameCfg.webid)
  return webid_;
}
inline void FS_ChangeGameCfg::set_webid(::google::protobuf::int32 value) {
  set_has_webid();
  webid_ = value;
  // @@protoc_insertion_point(field_set:FS_ChangeGameCfg.webid)
}

// optional string room_list = 2;
inline bool FS_ChangeGameCfg::has_room_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FS_ChangeGameCfg::set_has_room_list() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FS_ChangeGameCfg::clear_has_room_list() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FS_ChangeGameCfg::clear_room_list() {
  room_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_list();
}
inline const ::std::string& FS_ChangeGameCfg::room_list() const {
  // @@protoc_insertion_point(field_get:FS_ChangeGameCfg.room_list)
  return room_list_.GetNoArena();
}
inline void FS_ChangeGameCfg::set_room_list(const ::std::string& value) {
  set_has_room_list();
  room_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FS_ChangeGameCfg.room_list)
}
#if LANG_CXX11
inline void FS_ChangeGameCfg::set_room_list(::std::string&& value) {
  set_has_room_list();
  room_list_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FS_ChangeGameCfg.room_list)
}
#endif
inline void FS_ChangeGameCfg::set_room_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_room_list();
  room_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FS_ChangeGameCfg.room_list)
}
inline void FS_ChangeGameCfg::set_room_list(const char* value, size_t size) {
  set_has_room_list();
  room_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FS_ChangeGameCfg.room_list)
}
inline ::std::string* FS_ChangeGameCfg::mutable_room_list() {
  set_has_room_list();
  // @@protoc_insertion_point(field_mutable:FS_ChangeGameCfg.room_list)
  return room_list_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FS_ChangeGameCfg::release_room_list() {
  // @@protoc_insertion_point(field_release:FS_ChangeGameCfg.room_list)
  clear_has_room_list();
  return room_list_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FS_ChangeGameCfg::set_allocated_room_list(::std::string* room_list) {
  if (room_list != NULL) {
    set_has_room_list();
  } else {
    clear_has_room_list();
  }
  room_list_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_list);
  // @@protoc_insertion_point(field_set_allocated:FS_ChangeGameCfg.room_list)
}

// optional string room_lua_cfg = 3;
inline bool FS_ChangeGameCfg::has_room_lua_cfg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FS_ChangeGameCfg::set_has_room_lua_cfg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FS_ChangeGameCfg::clear_has_room_lua_cfg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FS_ChangeGameCfg::clear_room_lua_cfg() {
  room_lua_cfg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_lua_cfg();
}
inline const ::std::string& FS_ChangeGameCfg::room_lua_cfg() const {
  // @@protoc_insertion_point(field_get:FS_ChangeGameCfg.room_lua_cfg)
  return room_lua_cfg_.GetNoArena();
}
inline void FS_ChangeGameCfg::set_room_lua_cfg(const ::std::string& value) {
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FS_ChangeGameCfg.room_lua_cfg)
}
#if LANG_CXX11
inline void FS_ChangeGameCfg::set_room_lua_cfg(::std::string&& value) {
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FS_ChangeGameCfg.room_lua_cfg)
}
#endif
inline void FS_ChangeGameCfg::set_room_lua_cfg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FS_ChangeGameCfg.room_lua_cfg)
}
inline void FS_ChangeGameCfg::set_room_lua_cfg(const char* value, size_t size) {
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FS_ChangeGameCfg.room_lua_cfg)
}
inline ::std::string* FS_ChangeGameCfg::mutable_room_lua_cfg() {
  set_has_room_lua_cfg();
  // @@protoc_insertion_point(field_mutable:FS_ChangeGameCfg.room_lua_cfg)
  return room_lua_cfg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FS_ChangeGameCfg::release_room_lua_cfg() {
  // @@protoc_insertion_point(field_release:FS_ChangeGameCfg.room_lua_cfg)
  clear_has_room_lua_cfg();
  return room_lua_cfg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FS_ChangeGameCfg::set_allocated_room_lua_cfg(::std::string* room_lua_cfg) {
  if (room_lua_cfg != NULL) {
    set_has_room_lua_cfg();
  } else {
    clear_has_room_lua_cfg();
  }
  room_lua_cfg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_lua_cfg);
  // @@protoc_insertion_point(field_set_allocated:FS_ChangeGameCfg.room_lua_cfg)
}

// -------------------------------------------------------------------

// SF_ChangeGameCfg

// optional int32 webid = 1;
inline bool SF_ChangeGameCfg::has_webid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SF_ChangeGameCfg::set_has_webid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SF_ChangeGameCfg::clear_has_webid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SF_ChangeGameCfg::clear_webid() {
  webid_ = 0;
  clear_has_webid();
}
inline ::google::protobuf::int32 SF_ChangeGameCfg::webid() const {
  // @@protoc_insertion_point(field_get:SF_ChangeGameCfg.webid)
  return webid_;
}
inline void SF_ChangeGameCfg::set_webid(::google::protobuf::int32 value) {
  set_has_webid();
  webid_ = value;
  // @@protoc_insertion_point(field_set:SF_ChangeGameCfg.webid)
}

// optional int32 result = 2;
inline bool SF_ChangeGameCfg::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SF_ChangeGameCfg::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SF_ChangeGameCfg::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SF_ChangeGameCfg::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SF_ChangeGameCfg::result() const {
  // @@protoc_insertion_point(field_get:SF_ChangeGameCfg.result)
  return result_;
}
inline void SF_ChangeGameCfg::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SF_ChangeGameCfg.result)
}

// optional .GameClientRoomListCfg pb_cfg = 3;
inline bool SF_ChangeGameCfg::has_pb_cfg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SF_ChangeGameCfg::set_has_pb_cfg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SF_ChangeGameCfg::clear_has_pb_cfg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SF_ChangeGameCfg::clear_pb_cfg() {
  if (pb_cfg_ != NULL) pb_cfg_->::GameClientRoomListCfg::Clear();
  clear_has_pb_cfg();
}
inline const ::GameClientRoomListCfg& SF_ChangeGameCfg::pb_cfg() const {
  // @@protoc_insertion_point(field_get:SF_ChangeGameCfg.pb_cfg)
  return pb_cfg_ != NULL ? *pb_cfg_
                         : *::GameClientRoomListCfg::internal_default_instance();
}
inline ::GameClientRoomListCfg* SF_ChangeGameCfg::mutable_pb_cfg() {
  set_has_pb_cfg();
  if (pb_cfg_ == NULL) {
    pb_cfg_ = new ::GameClientRoomListCfg;
  }
  // @@protoc_insertion_point(field_mutable:SF_ChangeGameCfg.pb_cfg)
  return pb_cfg_;
}
inline ::GameClientRoomListCfg* SF_ChangeGameCfg::release_pb_cfg() {
  // @@protoc_insertion_point(field_release:SF_ChangeGameCfg.pb_cfg)
  clear_has_pb_cfg();
  ::GameClientRoomListCfg* temp = pb_cfg_;
  pb_cfg_ = NULL;
  return temp;
}
inline void SF_ChangeGameCfg::set_allocated_pb_cfg(::GameClientRoomListCfg* pb_cfg) {
  delete pb_cfg_;
  pb_cfg_ = pb_cfg;
  if (pb_cfg) {
    set_has_pb_cfg();
  } else {
    clear_has_pb_cfg();
  }
  // @@protoc_insertion_point(field_set_allocated:SF_ChangeGameCfg.pb_cfg)
}

// -------------------------------------------------------------------

// FW_ChangeGameCfg

// optional int32 result = 1;
inline bool FW_ChangeGameCfg::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FW_ChangeGameCfg::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FW_ChangeGameCfg::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FW_ChangeGameCfg::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 FW_ChangeGameCfg::result() const {
  // @@protoc_insertion_point(field_get:FW_ChangeGameCfg.result)
  return result_;
}
inline void FW_ChangeGameCfg::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:FW_ChangeGameCfg.result)
}

// -------------------------------------------------------------------

// LG_AddNewGameServer

// optional string ip = 1;
inline bool LG_AddNewGameServer::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LG_AddNewGameServer::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LG_AddNewGameServer::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LG_AddNewGameServer::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& LG_AddNewGameServer::ip() const {
  // @@protoc_insertion_point(field_get:LG_AddNewGameServer.ip)
  return ip_.GetNoArena();
}
inline void LG_AddNewGameServer::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LG_AddNewGameServer.ip)
}
#if LANG_CXX11
inline void LG_AddNewGameServer::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LG_AddNewGameServer.ip)
}
#endif
inline void LG_AddNewGameServer::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LG_AddNewGameServer.ip)
}
inline void LG_AddNewGameServer::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LG_AddNewGameServer.ip)
}
inline ::std::string* LG_AddNewGameServer::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:LG_AddNewGameServer.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LG_AddNewGameServer::release_ip() {
  // @@protoc_insertion_point(field_release:LG_AddNewGameServer.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LG_AddNewGameServer::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:LG_AddNewGameServer.ip)
}

// optional int32 port = 2;
inline bool LG_AddNewGameServer::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LG_AddNewGameServer::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LG_AddNewGameServer::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LG_AddNewGameServer::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 LG_AddNewGameServer::port() const {
  // @@protoc_insertion_point(field_get:LG_AddNewGameServer.port)
  return port_;
}
inline void LG_AddNewGameServer::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:LG_AddNewGameServer.port)
}

// optional int32 retID = 3;
inline bool LG_AddNewGameServer::has_retid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LG_AddNewGameServer::set_has_retid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LG_AddNewGameServer::clear_has_retid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LG_AddNewGameServer::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 LG_AddNewGameServer::retid() const {
  // @@protoc_insertion_point(field_get:LG_AddNewGameServer.retID)
  return retid_;
}
inline void LG_AddNewGameServer::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:LG_AddNewGameServer.retID)
}

// -------------------------------------------------------------------

// DBGameConfigMgr

// repeated .DBGameConfig pb_cfg = 1;
inline int DBGameConfigMgr::pb_cfg_size() const {
  return pb_cfg_.size();
}
inline void DBGameConfigMgr::clear_pb_cfg() {
  pb_cfg_.Clear();
}
inline const ::DBGameConfig& DBGameConfigMgr::pb_cfg(int index) const {
  // @@protoc_insertion_point(field_get:DBGameConfigMgr.pb_cfg)
  return pb_cfg_.Get(index);
}
inline ::DBGameConfig* DBGameConfigMgr::mutable_pb_cfg(int index) {
  // @@protoc_insertion_point(field_mutable:DBGameConfigMgr.pb_cfg)
  return pb_cfg_.Mutable(index);
}
inline ::DBGameConfig* DBGameConfigMgr::add_pb_cfg() {
  // @@protoc_insertion_point(field_add:DBGameConfigMgr.pb_cfg)
  return pb_cfg_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DBGameConfig >*
DBGameConfigMgr::mutable_pb_cfg() {
  // @@protoc_insertion_point(field_mutable_list:DBGameConfigMgr.pb_cfg)
  return &pb_cfg_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DBGameConfig >&
DBGameConfigMgr::pb_cfg() const {
  // @@protoc_insertion_point(field_list:DBGameConfigMgr.pb_cfg)
  return pb_cfg_;
}

// -------------------------------------------------------------------

// DBGameConfig

// optional string cfg_name = 1;
inline bool DBGameConfig::has_cfg_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBGameConfig::set_has_cfg_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBGameConfig::clear_has_cfg_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBGameConfig::clear_cfg_name() {
  cfg_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cfg_name();
}
inline const ::std::string& DBGameConfig::cfg_name() const {
  // @@protoc_insertion_point(field_get:DBGameConfig.cfg_name)
  return cfg_name_.GetNoArena();
}
inline void DBGameConfig::set_cfg_name(const ::std::string& value) {
  set_has_cfg_name();
  cfg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBGameConfig.cfg_name)
}
#if LANG_CXX11
inline void DBGameConfig::set_cfg_name(::std::string&& value) {
  set_has_cfg_name();
  cfg_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DBGameConfig.cfg_name)
}
#endif
inline void DBGameConfig::set_cfg_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cfg_name();
  cfg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBGameConfig.cfg_name)
}
inline void DBGameConfig::set_cfg_name(const char* value, size_t size) {
  set_has_cfg_name();
  cfg_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBGameConfig.cfg_name)
}
inline ::std::string* DBGameConfig::mutable_cfg_name() {
  set_has_cfg_name();
  // @@protoc_insertion_point(field_mutable:DBGameConfig.cfg_name)
  return cfg_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBGameConfig::release_cfg_name() {
  // @@protoc_insertion_point(field_release:DBGameConfig.cfg_name)
  clear_has_cfg_name();
  return cfg_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBGameConfig::set_allocated_cfg_name(::std::string* cfg_name) {
  if (cfg_name != NULL) {
    set_has_cfg_name();
  } else {
    clear_has_cfg_name();
  }
  cfg_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cfg_name);
  // @@protoc_insertion_point(field_set_allocated:DBGameConfig.cfg_name)
}

// optional int32 is_open = 2;
inline bool DBGameConfig::has_is_open() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DBGameConfig::set_has_is_open() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DBGameConfig::clear_has_is_open() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DBGameConfig::clear_is_open() {
  is_open_ = 0;
  clear_has_is_open();
}
inline ::google::protobuf::int32 DBGameConfig::is_open() const {
  // @@protoc_insertion_point(field_get:DBGameConfig.is_open)
  return is_open_;
}
inline void DBGameConfig::set_is_open(::google::protobuf::int32 value) {
  set_has_is_open();
  is_open_ = value;
  // @@protoc_insertion_point(field_set:DBGameConfig.is_open)
}

// optional int32 using_login_validatebox = 3;
inline bool DBGameConfig::has_using_login_validatebox() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DBGameConfig::set_has_using_login_validatebox() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DBGameConfig::clear_has_using_login_validatebox() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DBGameConfig::clear_using_login_validatebox() {
  using_login_validatebox_ = 0;
  clear_has_using_login_validatebox();
}
inline ::google::protobuf::int32 DBGameConfig::using_login_validatebox() const {
  // @@protoc_insertion_point(field_get:DBGameConfig.using_login_validatebox)
  return using_login_validatebox_;
}
inline void DBGameConfig::set_using_login_validatebox(::google::protobuf::int32 value) {
  set_has_using_login_validatebox();
  using_login_validatebox_ = value;
  // @@protoc_insertion_point(field_set:DBGameConfig.using_login_validatebox)
}

// optional string ip = 4;
inline bool DBGameConfig::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBGameConfig::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBGameConfig::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBGameConfig::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& DBGameConfig::ip() const {
  // @@protoc_insertion_point(field_get:DBGameConfig.ip)
  return ip_.GetNoArena();
}
inline void DBGameConfig::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBGameConfig.ip)
}
#if LANG_CXX11
inline void DBGameConfig::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DBGameConfig.ip)
}
#endif
inline void DBGameConfig::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBGameConfig.ip)
}
inline void DBGameConfig::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBGameConfig.ip)
}
inline ::std::string* DBGameConfig::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:DBGameConfig.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBGameConfig::release_ip() {
  // @@protoc_insertion_point(field_release:DBGameConfig.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBGameConfig::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:DBGameConfig.ip)
}

// optional int32 port = 5;
inline bool DBGameConfig::has_port() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DBGameConfig::set_has_port() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DBGameConfig::clear_has_port() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DBGameConfig::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 DBGameConfig::port() const {
  // @@protoc_insertion_point(field_get:DBGameConfig.port)
  return port_;
}
inline void DBGameConfig::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:DBGameConfig.port)
}

// optional int32 game_id = 6;
inline bool DBGameConfig::has_game_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DBGameConfig::set_has_game_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DBGameConfig::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DBGameConfig::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 DBGameConfig::game_id() const {
  // @@protoc_insertion_point(field_get:DBGameConfig.game_id)
  return game_id_;
}
inline void DBGameConfig::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:DBGameConfig.game_id)
}

// optional int32 first_game_type = 7;
inline bool DBGameConfig::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DBGameConfig::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DBGameConfig::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DBGameConfig::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 DBGameConfig::first_game_type() const {
  // @@protoc_insertion_point(field_get:DBGameConfig.first_game_type)
  return first_game_type_;
}
inline void DBGameConfig::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:DBGameConfig.first_game_type)
}

// optional int32 second_game_type = 8;
inline bool DBGameConfig::has_second_game_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DBGameConfig::set_has_second_game_type() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DBGameConfig::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DBGameConfig::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
inline ::google::protobuf::int32 DBGameConfig::second_game_type() const {
  // @@protoc_insertion_point(field_get:DBGameConfig.second_game_type)
  return second_game_type_;
}
inline void DBGameConfig::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:DBGameConfig.second_game_type)
}

// optional string game_name = 9;
inline bool DBGameConfig::has_game_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBGameConfig::set_has_game_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBGameConfig::clear_has_game_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBGameConfig::clear_game_name() {
  game_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_name();
}
inline const ::std::string& DBGameConfig::game_name() const {
  // @@protoc_insertion_point(field_get:DBGameConfig.game_name)
  return game_name_.GetNoArena();
}
inline void DBGameConfig::set_game_name(const ::std::string& value) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBGameConfig.game_name)
}
#if LANG_CXX11
inline void DBGameConfig::set_game_name(::std::string&& value) {
  set_has_game_name();
  game_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DBGameConfig.game_name)
}
#endif
inline void DBGameConfig::set_game_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBGameConfig.game_name)
}
inline void DBGameConfig::set_game_name(const char* value, size_t size) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBGameConfig.game_name)
}
inline ::std::string* DBGameConfig::mutable_game_name() {
  set_has_game_name();
  // @@protoc_insertion_point(field_mutable:DBGameConfig.game_name)
  return game_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBGameConfig::release_game_name() {
  // @@protoc_insertion_point(field_release:DBGameConfig.game_name)
  clear_has_game_name();
  return game_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBGameConfig::set_allocated_game_name(::std::string* game_name) {
  if (game_name != NULL) {
    set_has_game_name();
  } else {
    clear_has_game_name();
  }
  game_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_name);
  // @@protoc_insertion_point(field_set_allocated:DBGameConfig.game_name)
}

// optional string game_log = 10;
inline bool DBGameConfig::has_game_log() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DBGameConfig::set_has_game_log() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DBGameConfig::clear_has_game_log() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DBGameConfig::clear_game_log() {
  game_log_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_log();
}
inline const ::std::string& DBGameConfig::game_log() const {
  // @@protoc_insertion_point(field_get:DBGameConfig.game_log)
  return game_log_.GetNoArena();
}
inline void DBGameConfig::set_game_log(const ::std::string& value) {
  set_has_game_log();
  game_log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBGameConfig.game_log)
}
#if LANG_CXX11
inline void DBGameConfig::set_game_log(::std::string&& value) {
  set_has_game_log();
  game_log_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DBGameConfig.game_log)
}
#endif
inline void DBGameConfig::set_game_log(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_log();
  game_log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBGameConfig.game_log)
}
inline void DBGameConfig::set_game_log(const char* value, size_t size) {
  set_has_game_log();
  game_log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBGameConfig.game_log)
}
inline ::std::string* DBGameConfig::mutable_game_log() {
  set_has_game_log();
  // @@protoc_insertion_point(field_mutable:DBGameConfig.game_log)
  return game_log_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBGameConfig::release_game_log() {
  // @@protoc_insertion_point(field_release:DBGameConfig.game_log)
  clear_has_game_log();
  return game_log_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBGameConfig::set_allocated_game_log(::std::string* game_log) {
  if (game_log != NULL) {
    set_has_game_log();
  } else {
    clear_has_game_log();
  }
  game_log_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_log);
  // @@protoc_insertion_point(field_set_allocated:DBGameConfig.game_log)
}

// optional int32 default_lobby = 11;
inline bool DBGameConfig::has_default_lobby() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void DBGameConfig::set_has_default_lobby() {
  _has_bits_[0] |= 0x00002000u;
}
inline void DBGameConfig::clear_has_default_lobby() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void DBGameConfig::clear_default_lobby() {
  default_lobby_ = 0;
  clear_has_default_lobby();
}
inline ::google::protobuf::int32 DBGameConfig::default_lobby() const {
  // @@protoc_insertion_point(field_get:DBGameConfig.default_lobby)
  return default_lobby_;
}
inline void DBGameConfig::set_default_lobby(::google::protobuf::int32 value) {
  set_has_default_lobby();
  default_lobby_ = value;
  // @@protoc_insertion_point(field_set:DBGameConfig.default_lobby)
}

// optional int32 player_limit = 12;
inline bool DBGameConfig::has_player_limit() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void DBGameConfig::set_has_player_limit() {
  _has_bits_[0] |= 0x00004000u;
}
inline void DBGameConfig::clear_has_player_limit() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void DBGameConfig::clear_player_limit() {
  player_limit_ = 0;
  clear_has_player_limit();
}
inline ::google::protobuf::int32 DBGameConfig::player_limit() const {
  // @@protoc_insertion_point(field_get:DBGameConfig.player_limit)
  return player_limit_;
}
inline void DBGameConfig::set_player_limit(::google::protobuf::int32 value) {
  set_has_player_limit();
  player_limit_ = value;
  // @@protoc_insertion_point(field_set:DBGameConfig.player_limit)
}

// optional string data_path = 13;
inline bool DBGameConfig::has_data_path() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DBGameConfig::set_has_data_path() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DBGameConfig::clear_has_data_path() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DBGameConfig::clear_data_path() {
  data_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data_path();
}
inline const ::std::string& DBGameConfig::data_path() const {
  // @@protoc_insertion_point(field_get:DBGameConfig.data_path)
  return data_path_.GetNoArena();
}
inline void DBGameConfig::set_data_path(const ::std::string& value) {
  set_has_data_path();
  data_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBGameConfig.data_path)
}
#if LANG_CXX11
inline void DBGameConfig::set_data_path(::std::string&& value) {
  set_has_data_path();
  data_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DBGameConfig.data_path)
}
#endif
inline void DBGameConfig::set_data_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data_path();
  data_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBGameConfig.data_path)
}
inline void DBGameConfig::set_data_path(const char* value, size_t size) {
  set_has_data_path();
  data_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBGameConfig.data_path)
}
inline ::std::string* DBGameConfig::mutable_data_path() {
  set_has_data_path();
  // @@protoc_insertion_point(field_mutable:DBGameConfig.data_path)
  return data_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBGameConfig::release_data_path() {
  // @@protoc_insertion_point(field_release:DBGameConfig.data_path)
  clear_has_data_path();
  return data_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBGameConfig::set_allocated_data_path(::std::string* data_path) {
  if (data_path != NULL) {
    set_has_data_path();
  } else {
    clear_has_data_path();
  }
  data_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_path);
  // @@protoc_insertion_point(field_set_allocated:DBGameConfig.data_path)
}

// optional string room_list = 14;
inline bool DBGameConfig::has_room_list() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DBGameConfig::set_has_room_list() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DBGameConfig::clear_has_room_list() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DBGameConfig::clear_room_list() {
  room_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_list();
}
inline const ::std::string& DBGameConfig::room_list() const {
  // @@protoc_insertion_point(field_get:DBGameConfig.room_list)
  return room_list_.GetNoArena();
}
inline void DBGameConfig::set_room_list(const ::std::string& value) {
  set_has_room_list();
  room_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBGameConfig.room_list)
}
#if LANG_CXX11
inline void DBGameConfig::set_room_list(::std::string&& value) {
  set_has_room_list();
  room_list_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DBGameConfig.room_list)
}
#endif
inline void DBGameConfig::set_room_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_room_list();
  room_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBGameConfig.room_list)
}
inline void DBGameConfig::set_room_list(const char* value, size_t size) {
  set_has_room_list();
  room_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBGameConfig.room_list)
}
inline ::std::string* DBGameConfig::mutable_room_list() {
  set_has_room_list();
  // @@protoc_insertion_point(field_mutable:DBGameConfig.room_list)
  return room_list_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBGameConfig::release_room_list() {
  // @@protoc_insertion_point(field_release:DBGameConfig.room_list)
  clear_has_room_list();
  return room_list_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBGameConfig::set_allocated_room_list(::std::string* room_list) {
  if (room_list != NULL) {
    set_has_room_list();
  } else {
    clear_has_room_list();
  }
  room_list_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_list);
  // @@protoc_insertion_point(field_set_allocated:DBGameConfig.room_list)
}

// optional string room_lua_cfg = 15;
inline bool DBGameConfig::has_room_lua_cfg() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DBGameConfig::set_has_room_lua_cfg() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DBGameConfig::clear_has_room_lua_cfg() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DBGameConfig::clear_room_lua_cfg() {
  room_lua_cfg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_lua_cfg();
}
inline const ::std::string& DBGameConfig::room_lua_cfg() const {
  // @@protoc_insertion_point(field_get:DBGameConfig.room_lua_cfg)
  return room_lua_cfg_.GetNoArena();
}
inline void DBGameConfig::set_room_lua_cfg(const ::std::string& value) {
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBGameConfig.room_lua_cfg)
}
#if LANG_CXX11
inline void DBGameConfig::set_room_lua_cfg(::std::string&& value) {
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DBGameConfig.room_lua_cfg)
}
#endif
inline void DBGameConfig::set_room_lua_cfg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBGameConfig.room_lua_cfg)
}
inline void DBGameConfig::set_room_lua_cfg(const char* value, size_t size) {
  set_has_room_lua_cfg();
  room_lua_cfg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBGameConfig.room_lua_cfg)
}
inline ::std::string* DBGameConfig::mutable_room_lua_cfg() {
  set_has_room_lua_cfg();
  // @@protoc_insertion_point(field_mutable:DBGameConfig.room_lua_cfg)
  return room_lua_cfg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBGameConfig::release_room_lua_cfg() {
  // @@protoc_insertion_point(field_release:DBGameConfig.room_lua_cfg)
  clear_has_room_lua_cfg();
  return room_lua_cfg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBGameConfig::set_allocated_room_lua_cfg(::std::string* room_lua_cfg) {
  if (room_lua_cfg != NULL) {
    set_has_room_lua_cfg();
  } else {
    clear_has_room_lua_cfg();
  }
  room_lua_cfg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_lua_cfg);
  // @@protoc_insertion_point(field_set_allocated:DBGameConfig.room_lua_cfg)
}

// -------------------------------------------------------------------

// SD_ServerConfig

// optional int32 gamer_id = 1;
inline bool SD_ServerConfig::has_gamer_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_ServerConfig::set_has_gamer_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_ServerConfig::clear_has_gamer_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_ServerConfig::clear_gamer_id() {
  gamer_id_ = 0;
  clear_has_gamer_id();
}
inline ::google::protobuf::int32 SD_ServerConfig::gamer_id() const {
  // @@protoc_insertion_point(field_get:SD_ServerConfig.gamer_id)
  return gamer_id_;
}
inline void SD_ServerConfig::set_gamer_id(::google::protobuf::int32 value) {
  set_has_gamer_id();
  gamer_id_ = value;
  // @@protoc_insertion_point(field_set:SD_ServerConfig.gamer_id)
}

// -------------------------------------------------------------------

// DS_ServerConfig

// optional .DBGameConfig cfg = 1;
inline bool DS_ServerConfig::has_cfg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_ServerConfig::set_has_cfg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_ServerConfig::clear_has_cfg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_ServerConfig::clear_cfg() {
  if (cfg_ != NULL) cfg_->::DBGameConfig::Clear();
  clear_has_cfg();
}
inline const ::DBGameConfig& DS_ServerConfig::cfg() const {
  // @@protoc_insertion_point(field_get:DS_ServerConfig.cfg)
  return cfg_ != NULL ? *cfg_
                         : *::DBGameConfig::internal_default_instance();
}
inline ::DBGameConfig* DS_ServerConfig::mutable_cfg() {
  set_has_cfg();
  if (cfg_ == NULL) {
    cfg_ = new ::DBGameConfig;
  }
  // @@protoc_insertion_point(field_mutable:DS_ServerConfig.cfg)
  return cfg_;
}
inline ::DBGameConfig* DS_ServerConfig::release_cfg() {
  // @@protoc_insertion_point(field_release:DS_ServerConfig.cfg)
  clear_has_cfg();
  ::DBGameConfig* temp = cfg_;
  cfg_ = NULL;
  return temp;
}
inline void DS_ServerConfig::set_allocated_cfg(::DBGameConfig* cfg) {
  delete cfg_;
  cfg_ = cfg;
  if (cfg) {
    set_has_cfg();
  } else {
    clear_has_cfg();
  }
  // @@protoc_insertion_point(field_set_allocated:DS_ServerConfig.cfg)
}

// -------------------------------------------------------------------

// DL_ServerConfig

// optional .DBGameConfig cfg = 1;
inline bool DL_ServerConfig::has_cfg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DL_ServerConfig::set_has_cfg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DL_ServerConfig::clear_has_cfg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DL_ServerConfig::clear_cfg() {
  if (cfg_ != NULL) cfg_->::DBGameConfig::Clear();
  clear_has_cfg();
}
inline const ::DBGameConfig& DL_ServerConfig::cfg() const {
  // @@protoc_insertion_point(field_get:DL_ServerConfig.cfg)
  return cfg_ != NULL ? *cfg_
                         : *::DBGameConfig::internal_default_instance();
}
inline ::DBGameConfig* DL_ServerConfig::mutable_cfg() {
  set_has_cfg();
  if (cfg_ == NULL) {
    cfg_ = new ::DBGameConfig;
  }
  // @@protoc_insertion_point(field_mutable:DL_ServerConfig.cfg)
  return cfg_;
}
inline ::DBGameConfig* DL_ServerConfig::release_cfg() {
  // @@protoc_insertion_point(field_release:DL_ServerConfig.cfg)
  clear_has_cfg();
  ::DBGameConfig* temp = cfg_;
  cfg_ = NULL;
  return temp;
}
inline void DL_ServerConfig::set_allocated_cfg(::DBGameConfig* cfg) {
  delete cfg_;
  cfg_ = cfg;
  if (cfg) {
    set_has_cfg();
  } else {
    clear_has_cfg();
  }
  // @@protoc_insertion_point(field_set_allocated:DL_ServerConfig.cfg)
}

// -------------------------------------------------------------------

// WL_ChangeMoney

// optional int32 guid = 1;
inline bool WL_ChangeMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WL_ChangeMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WL_ChangeMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WL_ChangeMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 WL_ChangeMoney::guid() const {
  // @@protoc_insertion_point(field_get:WL_ChangeMoney.guid)
  return guid_;
}
inline void WL_ChangeMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:WL_ChangeMoney.guid)
}

// optional string GmCommand = 2;
inline bool WL_ChangeMoney::has_gmcommand() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WL_ChangeMoney::set_has_gmcommand() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WL_ChangeMoney::clear_has_gmcommand() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WL_ChangeMoney::clear_gmcommand() {
  gmcommand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gmcommand();
}
inline const ::std::string& WL_ChangeMoney::gmcommand() const {
  // @@protoc_insertion_point(field_get:WL_ChangeMoney.GmCommand)
  return gmcommand_.GetNoArena();
}
inline void WL_ChangeMoney::set_gmcommand(const ::std::string& value) {
  set_has_gmcommand();
  gmcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WL_ChangeMoney.GmCommand)
}
#if LANG_CXX11
inline void WL_ChangeMoney::set_gmcommand(::std::string&& value) {
  set_has_gmcommand();
  gmcommand_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WL_ChangeMoney.GmCommand)
}
#endif
inline void WL_ChangeMoney::set_gmcommand(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gmcommand();
  gmcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WL_ChangeMoney.GmCommand)
}
inline void WL_ChangeMoney::set_gmcommand(const char* value, size_t size) {
  set_has_gmcommand();
  gmcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WL_ChangeMoney.GmCommand)
}
inline ::std::string* WL_ChangeMoney::mutable_gmcommand() {
  set_has_gmcommand();
  // @@protoc_insertion_point(field_mutable:WL_ChangeMoney.GmCommand)
  return gmcommand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WL_ChangeMoney::release_gmcommand() {
  // @@protoc_insertion_point(field_release:WL_ChangeMoney.GmCommand)
  clear_has_gmcommand();
  return gmcommand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WL_ChangeMoney::set_allocated_gmcommand(::std::string* gmcommand) {
  if (gmcommand != NULL) {
    set_has_gmcommand();
  } else {
    clear_has_gmcommand();
  }
  gmcommand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gmcommand);
  // @@protoc_insertion_point(field_set_allocated:WL_ChangeMoney.GmCommand)
}

// -------------------------------------------------------------------

// LS_ChangeMoney

// optional int32 webid = 1;
inline bool LS_ChangeMoney::has_webid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_ChangeMoney::set_has_webid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_ChangeMoney::clear_has_webid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_ChangeMoney::clear_webid() {
  webid_ = 0;
  clear_has_webid();
}
inline ::google::protobuf::int32 LS_ChangeMoney::webid() const {
  // @@protoc_insertion_point(field_get:LS_ChangeMoney.webid)
  return webid_;
}
inline void LS_ChangeMoney::set_webid(::google::protobuf::int32 value) {
  set_has_webid();
  webid_ = value;
  // @@protoc_insertion_point(field_set:LS_ChangeMoney.webid)
}

// optional int32 guid = 2;
inline bool LS_ChangeMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LS_ChangeMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LS_ChangeMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LS_ChangeMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LS_ChangeMoney::guid() const {
  // @@protoc_insertion_point(field_get:LS_ChangeMoney.guid)
  return guid_;
}
inline void LS_ChangeMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LS_ChangeMoney.guid)
}

// optional string GmCommand = 3;
inline bool LS_ChangeMoney::has_gmcommand() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_ChangeMoney::set_has_gmcommand() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_ChangeMoney::clear_has_gmcommand() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_ChangeMoney::clear_gmcommand() {
  gmcommand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gmcommand();
}
inline const ::std::string& LS_ChangeMoney::gmcommand() const {
  // @@protoc_insertion_point(field_get:LS_ChangeMoney.GmCommand)
  return gmcommand_.GetNoArena();
}
inline void LS_ChangeMoney::set_gmcommand(const ::std::string& value) {
  set_has_gmcommand();
  gmcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LS_ChangeMoney.GmCommand)
}
#if LANG_CXX11
inline void LS_ChangeMoney::set_gmcommand(::std::string&& value) {
  set_has_gmcommand();
  gmcommand_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LS_ChangeMoney.GmCommand)
}
#endif
inline void LS_ChangeMoney::set_gmcommand(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gmcommand();
  gmcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LS_ChangeMoney.GmCommand)
}
inline void LS_ChangeMoney::set_gmcommand(const char* value, size_t size) {
  set_has_gmcommand();
  gmcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LS_ChangeMoney.GmCommand)
}
inline ::std::string* LS_ChangeMoney::mutable_gmcommand() {
  set_has_gmcommand();
  // @@protoc_insertion_point(field_mutable:LS_ChangeMoney.GmCommand)
  return gmcommand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LS_ChangeMoney::release_gmcommand() {
  // @@protoc_insertion_point(field_release:LS_ChangeMoney.GmCommand)
  clear_has_gmcommand();
  return gmcommand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LS_ChangeMoney::set_allocated_gmcommand(::std::string* gmcommand) {
  if (gmcommand != NULL) {
    set_has_gmcommand();
  } else {
    clear_has_gmcommand();
  }
  gmcommand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gmcommand);
  // @@protoc_insertion_point(field_set_allocated:LS_ChangeMoney.GmCommand)
}

// -------------------------------------------------------------------

// SL_ChangeMoney

// optional int32 webid = 1;
inline bool SL_ChangeMoney::has_webid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SL_ChangeMoney::set_has_webid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SL_ChangeMoney::clear_has_webid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SL_ChangeMoney::clear_webid() {
  webid_ = 0;
  clear_has_webid();
}
inline ::google::protobuf::int32 SL_ChangeMoney::webid() const {
  // @@protoc_insertion_point(field_get:SL_ChangeMoney.webid)
  return webid_;
}
inline void SL_ChangeMoney::set_webid(::google::protobuf::int32 value) {
  set_has_webid();
  webid_ = value;
  // @@protoc_insertion_point(field_set:SL_ChangeMoney.webid)
}

// optional int32 result = 2;
inline bool SL_ChangeMoney::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SL_ChangeMoney::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SL_ChangeMoney::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SL_ChangeMoney::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SL_ChangeMoney::result() const {
  // @@protoc_insertion_point(field_get:SL_ChangeMoney.result)
  return result_;
}
inline void SL_ChangeMoney::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SL_ChangeMoney.result)
}

// -------------------------------------------------------------------

// LW_ChangeMoney

// optional int32 result = 1;
inline bool LW_ChangeMoney::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LW_ChangeMoney::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LW_ChangeMoney::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LW_ChangeMoney::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 LW_ChangeMoney::result() const {
  // @@protoc_insertion_point(field_get:LW_ChangeMoney.result)
  return result_;
}
inline void LW_ChangeMoney::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:LW_ChangeMoney.result)
}

// -------------------------------------------------------------------

// LD_OfflineChangeMoney

// optional int32 guid = 1;
inline bool LD_OfflineChangeMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_OfflineChangeMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_OfflineChangeMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_OfflineChangeMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LD_OfflineChangeMoney::guid() const {
  // @@protoc_insertion_point(field_get:LD_OfflineChangeMoney.guid)
  return guid_;
}
inline void LD_OfflineChangeMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LD_OfflineChangeMoney.guid)
}

// optional string GmCommand = 2;
inline bool LD_OfflineChangeMoney::has_gmcommand() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_OfflineChangeMoney::set_has_gmcommand() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_OfflineChangeMoney::clear_has_gmcommand() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_OfflineChangeMoney::clear_gmcommand() {
  gmcommand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gmcommand();
}
inline const ::std::string& LD_OfflineChangeMoney::gmcommand() const {
  // @@protoc_insertion_point(field_get:LD_OfflineChangeMoney.GmCommand)
  return gmcommand_.GetNoArena();
}
inline void LD_OfflineChangeMoney::set_gmcommand(const ::std::string& value) {
  set_has_gmcommand();
  gmcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_OfflineChangeMoney.GmCommand)
}
#if LANG_CXX11
inline void LD_OfflineChangeMoney::set_gmcommand(::std::string&& value) {
  set_has_gmcommand();
  gmcommand_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_OfflineChangeMoney.GmCommand)
}
#endif
inline void LD_OfflineChangeMoney::set_gmcommand(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gmcommand();
  gmcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_OfflineChangeMoney.GmCommand)
}
inline void LD_OfflineChangeMoney::set_gmcommand(const char* value, size_t size) {
  set_has_gmcommand();
  gmcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_OfflineChangeMoney.GmCommand)
}
inline ::std::string* LD_OfflineChangeMoney::mutable_gmcommand() {
  set_has_gmcommand();
  // @@protoc_insertion_point(field_mutable:LD_OfflineChangeMoney.GmCommand)
  return gmcommand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_OfflineChangeMoney::release_gmcommand() {
  // @@protoc_insertion_point(field_release:LD_OfflineChangeMoney.GmCommand)
  clear_has_gmcommand();
  return gmcommand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_OfflineChangeMoney::set_allocated_gmcommand(::std::string* gmcommand) {
  if (gmcommand != NULL) {
    set_has_gmcommand();
  } else {
    clear_has_gmcommand();
  }
  gmcommand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gmcommand);
  // @@protoc_insertion_point(field_set_allocated:LD_OfflineChangeMoney.GmCommand)
}

// -------------------------------------------------------------------

// GL_GetServerCfg

// -------------------------------------------------------------------

// LD_GetServerCfg

// optional int32 gid = 1;
inline bool LD_GetServerCfg::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_GetServerCfg::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_GetServerCfg::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_GetServerCfg::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 LD_GetServerCfg::gid() const {
  // @@protoc_insertion_point(field_get:LD_GetServerCfg.gid)
  return gid_;
}
inline void LD_GetServerCfg::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:LD_GetServerCfg.gid)
}

// -------------------------------------------------------------------

// DL_DBGameConfigMgr

// optional int32 gid = 1;
inline bool DL_DBGameConfigMgr::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DL_DBGameConfigMgr::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DL_DBGameConfigMgr::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DL_DBGameConfigMgr::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 DL_DBGameConfigMgr::gid() const {
  // @@protoc_insertion_point(field_get:DL_DBGameConfigMgr.gid)
  return gid_;
}
inline void DL_DBGameConfigMgr::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:DL_DBGameConfigMgr.gid)
}

// optional .DBGameConfigMgr pb_cfg_mgr = 2;
inline bool DL_DBGameConfigMgr::has_pb_cfg_mgr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DL_DBGameConfigMgr::set_has_pb_cfg_mgr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DL_DBGameConfigMgr::clear_has_pb_cfg_mgr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DL_DBGameConfigMgr::clear_pb_cfg_mgr() {
  if (pb_cfg_mgr_ != NULL) pb_cfg_mgr_->::DBGameConfigMgr::Clear();
  clear_has_pb_cfg_mgr();
}
inline const ::DBGameConfigMgr& DL_DBGameConfigMgr::pb_cfg_mgr() const {
  // @@protoc_insertion_point(field_get:DL_DBGameConfigMgr.pb_cfg_mgr)
  return pb_cfg_mgr_ != NULL ? *pb_cfg_mgr_
                         : *::DBGameConfigMgr::internal_default_instance();
}
inline ::DBGameConfigMgr* DL_DBGameConfigMgr::mutable_pb_cfg_mgr() {
  set_has_pb_cfg_mgr();
  if (pb_cfg_mgr_ == NULL) {
    pb_cfg_mgr_ = new ::DBGameConfigMgr;
  }
  // @@protoc_insertion_point(field_mutable:DL_DBGameConfigMgr.pb_cfg_mgr)
  return pb_cfg_mgr_;
}
inline ::DBGameConfigMgr* DL_DBGameConfigMgr::release_pb_cfg_mgr() {
  // @@protoc_insertion_point(field_release:DL_DBGameConfigMgr.pb_cfg_mgr)
  clear_has_pb_cfg_mgr();
  ::DBGameConfigMgr* temp = pb_cfg_mgr_;
  pb_cfg_mgr_ = NULL;
  return temp;
}
inline void DL_DBGameConfigMgr::set_allocated_pb_cfg_mgr(::DBGameConfigMgr* pb_cfg_mgr) {
  delete pb_cfg_mgr_;
  pb_cfg_mgr_ = pb_cfg_mgr;
  if (pb_cfg_mgr) {
    set_has_pb_cfg_mgr();
  } else {
    clear_has_pb_cfg_mgr();
  }
  // @@protoc_insertion_point(field_set_allocated:DL_DBGameConfigMgr.pb_cfg_mgr)
}

// -------------------------------------------------------------------

// LG_DBGameConfigMgr

// optional .DBGameConfigMgr pb_cfg_mgr = 1;
inline bool LG_DBGameConfigMgr::has_pb_cfg_mgr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LG_DBGameConfigMgr::set_has_pb_cfg_mgr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LG_DBGameConfigMgr::clear_has_pb_cfg_mgr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LG_DBGameConfigMgr::clear_pb_cfg_mgr() {
  if (pb_cfg_mgr_ != NULL) pb_cfg_mgr_->::DBGameConfigMgr::Clear();
  clear_has_pb_cfg_mgr();
}
inline const ::DBGameConfigMgr& LG_DBGameConfigMgr::pb_cfg_mgr() const {
  // @@protoc_insertion_point(field_get:LG_DBGameConfigMgr.pb_cfg_mgr)
  return pb_cfg_mgr_ != NULL ? *pb_cfg_mgr_
                         : *::DBGameConfigMgr::internal_default_instance();
}
inline ::DBGameConfigMgr* LG_DBGameConfigMgr::mutable_pb_cfg_mgr() {
  set_has_pb_cfg_mgr();
  if (pb_cfg_mgr_ == NULL) {
    pb_cfg_mgr_ = new ::DBGameConfigMgr;
  }
  // @@protoc_insertion_point(field_mutable:LG_DBGameConfigMgr.pb_cfg_mgr)
  return pb_cfg_mgr_;
}
inline ::DBGameConfigMgr* LG_DBGameConfigMgr::release_pb_cfg_mgr() {
  // @@protoc_insertion_point(field_release:LG_DBGameConfigMgr.pb_cfg_mgr)
  clear_has_pb_cfg_mgr();
  ::DBGameConfigMgr* temp = pb_cfg_mgr_;
  pb_cfg_mgr_ = NULL;
  return temp;
}
inline void LG_DBGameConfigMgr::set_allocated_pb_cfg_mgr(::DBGameConfigMgr* pb_cfg_mgr) {
  delete pb_cfg_mgr_;
  pb_cfg_mgr_ = pb_cfg_mgr;
  if (pb_cfg_mgr) {
    set_has_pb_cfg_mgr();
  } else {
    clear_has_pb_cfg_mgr();
  }
  // @@protoc_insertion_point(field_set_allocated:LG_DBGameConfigMgr.pb_cfg_mgr)
}

// -------------------------------------------------------------------

// SL_Channel_Invite_Tax

// optional string channel_id = 1;
inline bool SL_Channel_Invite_Tax::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SL_Channel_Invite_Tax::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SL_Channel_Invite_Tax::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SL_Channel_Invite_Tax::clear_channel_id() {
  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_id();
}
inline const ::std::string& SL_Channel_Invite_Tax::channel_id() const {
  // @@protoc_insertion_point(field_get:SL_Channel_Invite_Tax.channel_id)
  return channel_id_.GetNoArena();
}
inline void SL_Channel_Invite_Tax::set_channel_id(const ::std::string& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SL_Channel_Invite_Tax.channel_id)
}
#if LANG_CXX11
inline void SL_Channel_Invite_Tax::set_channel_id(::std::string&& value) {
  set_has_channel_id();
  channel_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SL_Channel_Invite_Tax.channel_id)
}
#endif
inline void SL_Channel_Invite_Tax::set_channel_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SL_Channel_Invite_Tax.channel_id)
}
inline void SL_Channel_Invite_Tax::set_channel_id(const char* value, size_t size) {
  set_has_channel_id();
  channel_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SL_Channel_Invite_Tax.channel_id)
}
inline ::std::string* SL_Channel_Invite_Tax::mutable_channel_id() {
  set_has_channel_id();
  // @@protoc_insertion_point(field_mutable:SL_Channel_Invite_Tax.channel_id)
  return channel_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SL_Channel_Invite_Tax::release_channel_id() {
  // @@protoc_insertion_point(field_release:SL_Channel_Invite_Tax.channel_id)
  clear_has_channel_id();
  return channel_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SL_Channel_Invite_Tax::set_allocated_channel_id(::std::string* channel_id) {
  if (channel_id != NULL) {
    set_has_channel_id();
  } else {
    clear_has_channel_id();
  }
  channel_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_id);
  // @@protoc_insertion_point(field_set_allocated:SL_Channel_Invite_Tax.channel_id)
}

// optional int32 guid = 2;
inline bool SL_Channel_Invite_Tax::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SL_Channel_Invite_Tax::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SL_Channel_Invite_Tax::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SL_Channel_Invite_Tax::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SL_Channel_Invite_Tax::guid() const {
  // @@protoc_insertion_point(field_get:SL_Channel_Invite_Tax.guid)
  return guid_;
}
inline void SL_Channel_Invite_Tax::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SL_Channel_Invite_Tax.guid)
}

// optional int32 guid_invite = 3;
inline bool SL_Channel_Invite_Tax::has_guid_invite() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SL_Channel_Invite_Tax::set_has_guid_invite() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SL_Channel_Invite_Tax::clear_has_guid_invite() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SL_Channel_Invite_Tax::clear_guid_invite() {
  guid_invite_ = 0;
  clear_has_guid_invite();
}
inline ::google::protobuf::int32 SL_Channel_Invite_Tax::guid_invite() const {
  // @@protoc_insertion_point(field_get:SL_Channel_Invite_Tax.guid_invite)
  return guid_invite_;
}
inline void SL_Channel_Invite_Tax::set_guid_invite(::google::protobuf::int32 value) {
  set_has_guid_invite();
  guid_invite_ = value;
  // @@protoc_insertion_point(field_set:SL_Channel_Invite_Tax.guid_invite)
}

// optional int32 val = 4;
inline bool SL_Channel_Invite_Tax::has_val() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SL_Channel_Invite_Tax::set_has_val() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SL_Channel_Invite_Tax::clear_has_val() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SL_Channel_Invite_Tax::clear_val() {
  val_ = 0;
  clear_has_val();
}
inline ::google::protobuf::int32 SL_Channel_Invite_Tax::val() const {
  // @@protoc_insertion_point(field_get:SL_Channel_Invite_Tax.val)
  return val_;
}
inline void SL_Channel_Invite_Tax::set_val(::google::protobuf::int32 value) {
  set_has_val();
  val_ = value;
  // @@protoc_insertion_point(field_set:SL_Channel_Invite_Tax.val)
}

// -------------------------------------------------------------------

// WL_BroadcastClientUpdate

// optional string GmCommand = 1;
inline bool WL_BroadcastClientUpdate::has_gmcommand() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WL_BroadcastClientUpdate::set_has_gmcommand() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WL_BroadcastClientUpdate::clear_has_gmcommand() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WL_BroadcastClientUpdate::clear_gmcommand() {
  gmcommand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gmcommand();
}
inline const ::std::string& WL_BroadcastClientUpdate::gmcommand() const {
  // @@protoc_insertion_point(field_get:WL_BroadcastClientUpdate.GmCommand)
  return gmcommand_.GetNoArena();
}
inline void WL_BroadcastClientUpdate::set_gmcommand(const ::std::string& value) {
  set_has_gmcommand();
  gmcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WL_BroadcastClientUpdate.GmCommand)
}
#if LANG_CXX11
inline void WL_BroadcastClientUpdate::set_gmcommand(::std::string&& value) {
  set_has_gmcommand();
  gmcommand_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WL_BroadcastClientUpdate.GmCommand)
}
#endif
inline void WL_BroadcastClientUpdate::set_gmcommand(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gmcommand();
  gmcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WL_BroadcastClientUpdate.GmCommand)
}
inline void WL_BroadcastClientUpdate::set_gmcommand(const char* value, size_t size) {
  set_has_gmcommand();
  gmcommand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WL_BroadcastClientUpdate.GmCommand)
}
inline ::std::string* WL_BroadcastClientUpdate::mutable_gmcommand() {
  set_has_gmcommand();
  // @@protoc_insertion_point(field_mutable:WL_BroadcastClientUpdate.GmCommand)
  return gmcommand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WL_BroadcastClientUpdate::release_gmcommand() {
  // @@protoc_insertion_point(field_release:WL_BroadcastClientUpdate.GmCommand)
  clear_has_gmcommand();
  return gmcommand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WL_BroadcastClientUpdate::set_allocated_gmcommand(::std::string* gmcommand) {
  if (gmcommand != NULL) {
    set_has_gmcommand();
  } else {
    clear_has_gmcommand();
  }
  gmcommand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gmcommand);
  // @@protoc_insertion_point(field_set_allocated:WL_BroadcastClientUpdate.GmCommand)
}

// -------------------------------------------------------------------

// LW_ClientUpdateResult

// optional int32 result = 1;
inline bool LW_ClientUpdateResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LW_ClientUpdateResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LW_ClientUpdateResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LW_ClientUpdateResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 LW_ClientUpdateResult::result() const {
  // @@protoc_insertion_point(field_get:LW_ClientUpdateResult.result)
  return result_;
}
inline void LW_ClientUpdateResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:LW_ClientUpdateResult.result)
}

// -------------------------------------------------------------------

// WL_LuaCmdPlayerResult

// optional int32 guid = 1;
inline bool WL_LuaCmdPlayerResult::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WL_LuaCmdPlayerResult::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WL_LuaCmdPlayerResult::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WL_LuaCmdPlayerResult::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 WL_LuaCmdPlayerResult::guid() const {
  // @@protoc_insertion_point(field_get:WL_LuaCmdPlayerResult.guid)
  return guid_;
}
inline void WL_LuaCmdPlayerResult::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:WL_LuaCmdPlayerResult.guid)
}

// optional string cmd = 2;
inline bool WL_LuaCmdPlayerResult::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WL_LuaCmdPlayerResult::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WL_LuaCmdPlayerResult::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WL_LuaCmdPlayerResult::clear_cmd() {
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmd();
}
inline const ::std::string& WL_LuaCmdPlayerResult::cmd() const {
  // @@protoc_insertion_point(field_get:WL_LuaCmdPlayerResult.cmd)
  return cmd_.GetNoArena();
}
inline void WL_LuaCmdPlayerResult::set_cmd(const ::std::string& value) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WL_LuaCmdPlayerResult.cmd)
}
#if LANG_CXX11
inline void WL_LuaCmdPlayerResult::set_cmd(::std::string&& value) {
  set_has_cmd();
  cmd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WL_LuaCmdPlayerResult.cmd)
}
#endif
inline void WL_LuaCmdPlayerResult::set_cmd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WL_LuaCmdPlayerResult.cmd)
}
inline void WL_LuaCmdPlayerResult::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WL_LuaCmdPlayerResult.cmd)
}
inline ::std::string* WL_LuaCmdPlayerResult::mutable_cmd() {
  set_has_cmd();
  // @@protoc_insertion_point(field_mutable:WL_LuaCmdPlayerResult.cmd)
  return cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WL_LuaCmdPlayerResult::release_cmd() {
  // @@protoc_insertion_point(field_release:WL_LuaCmdPlayerResult.cmd)
  clear_has_cmd();
  return cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WL_LuaCmdPlayerResult::set_allocated_cmd(::std::string* cmd) {
  if (cmd != NULL) {
    set_has_cmd();
  } else {
    clear_has_cmd();
  }
  cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd);
  // @@protoc_insertion_point(field_set_allocated:WL_LuaCmdPlayerResult.cmd)
}

// -------------------------------------------------------------------

// LW_LuaCmdPlayerResult

// optional int32 result = 1;
inline bool LW_LuaCmdPlayerResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LW_LuaCmdPlayerResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LW_LuaCmdPlayerResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LW_LuaCmdPlayerResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 LW_LuaCmdPlayerResult::result() const {
  // @@protoc_insertion_point(field_get:LW_LuaCmdPlayerResult.result)
  return result_;
}
inline void LW_LuaCmdPlayerResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:LW_LuaCmdPlayerResult.result)
}

// -------------------------------------------------------------------

// LS_LuaCmdPlayerResult

// optional int32 web_id = 1;
inline bool LS_LuaCmdPlayerResult::has_web_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_LuaCmdPlayerResult::set_has_web_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_LuaCmdPlayerResult::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_LuaCmdPlayerResult::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 LS_LuaCmdPlayerResult::web_id() const {
  // @@protoc_insertion_point(field_get:LS_LuaCmdPlayerResult.web_id)
  return web_id_;
}
inline void LS_LuaCmdPlayerResult::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:LS_LuaCmdPlayerResult.web_id)
}

// optional string cmd = 2;
inline bool LS_LuaCmdPlayerResult::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_LuaCmdPlayerResult::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_LuaCmdPlayerResult::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_LuaCmdPlayerResult::clear_cmd() {
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmd();
}
inline const ::std::string& LS_LuaCmdPlayerResult::cmd() const {
  // @@protoc_insertion_point(field_get:LS_LuaCmdPlayerResult.cmd)
  return cmd_.GetNoArena();
}
inline void LS_LuaCmdPlayerResult::set_cmd(const ::std::string& value) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LS_LuaCmdPlayerResult.cmd)
}
#if LANG_CXX11
inline void LS_LuaCmdPlayerResult::set_cmd(::std::string&& value) {
  set_has_cmd();
  cmd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LS_LuaCmdPlayerResult.cmd)
}
#endif
inline void LS_LuaCmdPlayerResult::set_cmd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LS_LuaCmdPlayerResult.cmd)
}
inline void LS_LuaCmdPlayerResult::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LS_LuaCmdPlayerResult.cmd)
}
inline ::std::string* LS_LuaCmdPlayerResult::mutable_cmd() {
  set_has_cmd();
  // @@protoc_insertion_point(field_mutable:LS_LuaCmdPlayerResult.cmd)
  return cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LS_LuaCmdPlayerResult::release_cmd() {
  // @@protoc_insertion_point(field_release:LS_LuaCmdPlayerResult.cmd)
  clear_has_cmd();
  return cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LS_LuaCmdPlayerResult::set_allocated_cmd(::std::string* cmd) {
  if (cmd != NULL) {
    set_has_cmd();
  } else {
    clear_has_cmd();
  }
  cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd);
  // @@protoc_insertion_point(field_set_allocated:LS_LuaCmdPlayerResult.cmd)
}

// -------------------------------------------------------------------

// SL_LuaCmdPlayerResult

// optional int32 web_id = 1;
inline bool SL_LuaCmdPlayerResult::has_web_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SL_LuaCmdPlayerResult::set_has_web_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SL_LuaCmdPlayerResult::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SL_LuaCmdPlayerResult::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 SL_LuaCmdPlayerResult::web_id() const {
  // @@protoc_insertion_point(field_get:SL_LuaCmdPlayerResult.web_id)
  return web_id_;
}
inline void SL_LuaCmdPlayerResult::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:SL_LuaCmdPlayerResult.web_id)
}

// optional int32 result = 2;
inline bool SL_LuaCmdPlayerResult::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SL_LuaCmdPlayerResult::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SL_LuaCmdPlayerResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SL_LuaCmdPlayerResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SL_LuaCmdPlayerResult::result() const {
  // @@protoc_insertion_point(field_get:SL_LuaCmdPlayerResult.result)
  return result_;
}
inline void SL_LuaCmdPlayerResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SL_LuaCmdPlayerResult.result)
}

// -------------------------------------------------------------------

// LD_LuaCmdPlayerResult

// optional int32 web_id = 1;
inline bool LD_LuaCmdPlayerResult::has_web_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_LuaCmdPlayerResult::set_has_web_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_LuaCmdPlayerResult::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_LuaCmdPlayerResult::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 LD_LuaCmdPlayerResult::web_id() const {
  // @@protoc_insertion_point(field_get:LD_LuaCmdPlayerResult.web_id)
  return web_id_;
}
inline void LD_LuaCmdPlayerResult::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:LD_LuaCmdPlayerResult.web_id)
}

// optional string cmd = 2;
inline bool LD_LuaCmdPlayerResult::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_LuaCmdPlayerResult::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_LuaCmdPlayerResult::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_LuaCmdPlayerResult::clear_cmd() {
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmd();
}
inline const ::std::string& LD_LuaCmdPlayerResult::cmd() const {
  // @@protoc_insertion_point(field_get:LD_LuaCmdPlayerResult.cmd)
  return cmd_.GetNoArena();
}
inline void LD_LuaCmdPlayerResult::set_cmd(const ::std::string& value) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_LuaCmdPlayerResult.cmd)
}
#if LANG_CXX11
inline void LD_LuaCmdPlayerResult::set_cmd(::std::string&& value) {
  set_has_cmd();
  cmd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_LuaCmdPlayerResult.cmd)
}
#endif
inline void LD_LuaCmdPlayerResult::set_cmd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_LuaCmdPlayerResult.cmd)
}
inline void LD_LuaCmdPlayerResult::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_LuaCmdPlayerResult.cmd)
}
inline ::std::string* LD_LuaCmdPlayerResult::mutable_cmd() {
  set_has_cmd();
  // @@protoc_insertion_point(field_mutable:LD_LuaCmdPlayerResult.cmd)
  return cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_LuaCmdPlayerResult::release_cmd() {
  // @@protoc_insertion_point(field_release:LD_LuaCmdPlayerResult.cmd)
  clear_has_cmd();
  return cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_LuaCmdPlayerResult::set_allocated_cmd(::std::string* cmd) {
  if (cmd != NULL) {
    set_has_cmd();
  } else {
    clear_has_cmd();
  }
  cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd);
  // @@protoc_insertion_point(field_set_allocated:LD_LuaCmdPlayerResult.cmd)
}

// -------------------------------------------------------------------

// DL_LuaCmdPlayerResult

// optional int32 web_id = 1;
inline bool DL_LuaCmdPlayerResult::has_web_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DL_LuaCmdPlayerResult::set_has_web_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DL_LuaCmdPlayerResult::clear_has_web_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DL_LuaCmdPlayerResult::clear_web_id() {
  web_id_ = 0;
  clear_has_web_id();
}
inline ::google::protobuf::int32 DL_LuaCmdPlayerResult::web_id() const {
  // @@protoc_insertion_point(field_get:DL_LuaCmdPlayerResult.web_id)
  return web_id_;
}
inline void DL_LuaCmdPlayerResult::set_web_id(::google::protobuf::int32 value) {
  set_has_web_id();
  web_id_ = value;
  // @@protoc_insertion_point(field_set:DL_LuaCmdPlayerResult.web_id)
}

// optional int32 result = 2;
inline bool DL_LuaCmdPlayerResult::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DL_LuaCmdPlayerResult::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DL_LuaCmdPlayerResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DL_LuaCmdPlayerResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DL_LuaCmdPlayerResult::result() const {
  // @@protoc_insertion_point(field_get:DL_LuaCmdPlayerResult.result)
  return result_;
}
inline void DL_LuaCmdPlayerResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DL_LuaCmdPlayerResult.result)
}

// -------------------------------------------------------------------

// LD_AgentsTransfer_finish

// optional .AgentsTransferData pb_result = 1;
inline bool LD_AgentsTransfer_finish::has_pb_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_AgentsTransfer_finish::set_has_pb_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_AgentsTransfer_finish::clear_has_pb_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_AgentsTransfer_finish::clear_pb_result() {
  if (pb_result_ != NULL) pb_result_->::AgentsTransferData::Clear();
  clear_has_pb_result();
}
inline const ::AgentsTransferData& LD_AgentsTransfer_finish::pb_result() const {
  // @@protoc_insertion_point(field_get:LD_AgentsTransfer_finish.pb_result)
  return pb_result_ != NULL ? *pb_result_
                         : *::AgentsTransferData::internal_default_instance();
}
inline ::AgentsTransferData* LD_AgentsTransfer_finish::mutable_pb_result() {
  set_has_pb_result();
  if (pb_result_ == NULL) {
    pb_result_ = new ::AgentsTransferData;
  }
  // @@protoc_insertion_point(field_mutable:LD_AgentsTransfer_finish.pb_result)
  return pb_result_;
}
inline ::AgentsTransferData* LD_AgentsTransfer_finish::release_pb_result() {
  // @@protoc_insertion_point(field_release:LD_AgentsTransfer_finish.pb_result)
  clear_has_pb_result();
  ::AgentsTransferData* temp = pb_result_;
  pb_result_ = NULL;
  return temp;
}
inline void LD_AgentsTransfer_finish::set_allocated_pb_result(::AgentsTransferData* pb_result) {
  delete pb_result_;
  pb_result_ = pb_result;
  if (pb_result) {
    set_has_pb_result();
  } else {
    clear_has_pb_result();
  }
  // @@protoc_insertion_point(field_set_allocated:LD_AgentsTransfer_finish.pb_result)
}

// optional int32 retid = 2;
inline bool LD_AgentsTransfer_finish::has_retid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LD_AgentsTransfer_finish::set_has_retid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LD_AgentsTransfer_finish::clear_has_retid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LD_AgentsTransfer_finish::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 LD_AgentsTransfer_finish::retid() const {
  // @@protoc_insertion_point(field_get:LD_AgentsTransfer_finish.retid)
  return retid_;
}
inline void LD_AgentsTransfer_finish::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:LD_AgentsTransfer_finish.retid)
}

// optional int64 a_oldmoney = 3;
inline bool LD_AgentsTransfer_finish::has_a_oldmoney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_AgentsTransfer_finish::set_has_a_oldmoney() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_AgentsTransfer_finish::clear_has_a_oldmoney() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_AgentsTransfer_finish::clear_a_oldmoney() {
  a_oldmoney_ = GOOGLE_LONGLONG(0);
  clear_has_a_oldmoney();
}
inline ::google::protobuf::int64 LD_AgentsTransfer_finish::a_oldmoney() const {
  // @@protoc_insertion_point(field_get:LD_AgentsTransfer_finish.a_oldmoney)
  return a_oldmoney_;
}
inline void LD_AgentsTransfer_finish::set_a_oldmoney(::google::protobuf::int64 value) {
  set_has_a_oldmoney();
  a_oldmoney_ = value;
  // @@protoc_insertion_point(field_set:LD_AgentsTransfer_finish.a_oldmoney)
}

// optional int64 a_newmoney = 4;
inline bool LD_AgentsTransfer_finish::has_a_newmoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LD_AgentsTransfer_finish::set_has_a_newmoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LD_AgentsTransfer_finish::clear_has_a_newmoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LD_AgentsTransfer_finish::clear_a_newmoney() {
  a_newmoney_ = GOOGLE_LONGLONG(0);
  clear_has_a_newmoney();
}
inline ::google::protobuf::int64 LD_AgentsTransfer_finish::a_newmoney() const {
  // @@protoc_insertion_point(field_get:LD_AgentsTransfer_finish.a_newmoney)
  return a_newmoney_;
}
inline void LD_AgentsTransfer_finish::set_a_newmoney(::google::protobuf::int64 value) {
  set_has_a_newmoney();
  a_newmoney_ = value;
  // @@protoc_insertion_point(field_set:LD_AgentsTransfer_finish.a_newmoney)
}

// optional int64 p_oldmoney = 5;
inline bool LD_AgentsTransfer_finish::has_p_oldmoney() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LD_AgentsTransfer_finish::set_has_p_oldmoney() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LD_AgentsTransfer_finish::clear_has_p_oldmoney() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LD_AgentsTransfer_finish::clear_p_oldmoney() {
  p_oldmoney_ = GOOGLE_LONGLONG(0);
  clear_has_p_oldmoney();
}
inline ::google::protobuf::int64 LD_AgentsTransfer_finish::p_oldmoney() const {
  // @@protoc_insertion_point(field_get:LD_AgentsTransfer_finish.p_oldmoney)
  return p_oldmoney_;
}
inline void LD_AgentsTransfer_finish::set_p_oldmoney(::google::protobuf::int64 value) {
  set_has_p_oldmoney();
  p_oldmoney_ = value;
  // @@protoc_insertion_point(field_set:LD_AgentsTransfer_finish.p_oldmoney)
}

// optional int64 p_newmoney = 6;
inline bool LD_AgentsTransfer_finish::has_p_newmoney() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LD_AgentsTransfer_finish::set_has_p_newmoney() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LD_AgentsTransfer_finish::clear_has_p_newmoney() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LD_AgentsTransfer_finish::clear_p_newmoney() {
  p_newmoney_ = GOOGLE_LONGLONG(0);
  clear_has_p_newmoney();
}
inline ::google::protobuf::int64 LD_AgentsTransfer_finish::p_newmoney() const {
  // @@protoc_insertion_point(field_get:LD_AgentsTransfer_finish.p_newmoney)
  return p_newmoney_;
}
inline void LD_AgentsTransfer_finish::set_p_newmoney(::google::protobuf::int64 value) {
  set_has_p_newmoney();
  p_newmoney_ = value;
  // @@protoc_insertion_point(field_set:LD_AgentsTransfer_finish.p_newmoney)
}

// -------------------------------------------------------------------

// LS_CC_ChangeMoney

// optional int32 guid = 1;
inline bool LS_CC_ChangeMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LS_CC_ChangeMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LS_CC_ChangeMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LS_CC_ChangeMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LS_CC_ChangeMoney::guid() const {
  // @@protoc_insertion_point(field_get:LS_CC_ChangeMoney.guid)
  return guid_;
}
inline void LS_CC_ChangeMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LS_CC_ChangeMoney.guid)
}

// optional int64 money = 2;
inline bool LS_CC_ChangeMoney::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_CC_ChangeMoney::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_CC_ChangeMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_CC_ChangeMoney::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 LS_CC_ChangeMoney::money() const {
  // @@protoc_insertion_point(field_get:LS_CC_ChangeMoney.money)
  return money_;
}
inline void LS_CC_ChangeMoney::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:LS_CC_ChangeMoney.money)
}

// optional string keyid = 3;
inline bool LS_CC_ChangeMoney::has_keyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_CC_ChangeMoney::set_has_keyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_CC_ChangeMoney::clear_has_keyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_CC_ChangeMoney::clear_keyid() {
  keyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyid();
}
inline const ::std::string& LS_CC_ChangeMoney::keyid() const {
  // @@protoc_insertion_point(field_get:LS_CC_ChangeMoney.keyid)
  return keyid_.GetNoArena();
}
inline void LS_CC_ChangeMoney::set_keyid(const ::std::string& value) {
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LS_CC_ChangeMoney.keyid)
}
#if LANG_CXX11
inline void LS_CC_ChangeMoney::set_keyid(::std::string&& value) {
  set_has_keyid();
  keyid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LS_CC_ChangeMoney.keyid)
}
#endif
inline void LS_CC_ChangeMoney::set_keyid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LS_CC_ChangeMoney.keyid)
}
inline void LS_CC_ChangeMoney::set_keyid(const char* value, size_t size) {
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LS_CC_ChangeMoney.keyid)
}
inline ::std::string* LS_CC_ChangeMoney::mutable_keyid() {
  set_has_keyid();
  // @@protoc_insertion_point(field_mutable:LS_CC_ChangeMoney.keyid)
  return keyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LS_CC_ChangeMoney::release_keyid() {
  // @@protoc_insertion_point(field_release:LS_CC_ChangeMoney.keyid)
  clear_has_keyid();
  return keyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LS_CC_ChangeMoney::set_allocated_keyid(::std::string* keyid) {
  if (keyid != NULL) {
    set_has_keyid();
  } else {
    clear_has_keyid();
  }
  keyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyid);
  // @@protoc_insertion_point(field_set_allocated:LS_CC_ChangeMoney.keyid)
}

// optional int32 retid = 4;
inline bool LS_CC_ChangeMoney::has_retid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LS_CC_ChangeMoney::set_has_retid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LS_CC_ChangeMoney::clear_has_retid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LS_CC_ChangeMoney::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 LS_CC_ChangeMoney::retid() const {
  // @@protoc_insertion_point(field_get:LS_CC_ChangeMoney.retid)
  return retid_;
}
inline void LS_CC_ChangeMoney::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:LS_CC_ChangeMoney.retid)
}

// optional int32 login_id = 5;
inline bool LS_CC_ChangeMoney::has_login_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LS_CC_ChangeMoney::set_has_login_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LS_CC_ChangeMoney::clear_has_login_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LS_CC_ChangeMoney::clear_login_id() {
  login_id_ = 0;
  clear_has_login_id();
}
inline ::google::protobuf::int32 LS_CC_ChangeMoney::login_id() const {
  // @@protoc_insertion_point(field_get:LS_CC_ChangeMoney.login_id)
  return login_id_;
}
inline void LS_CC_ChangeMoney::set_login_id(::google::protobuf::int32 value) {
  set_has_login_id();
  login_id_ = value;
  // @@protoc_insertion_point(field_set:LS_CC_ChangeMoney.login_id)
}

// -------------------------------------------------------------------

// SL_CC_ChangeMoney

// optional int32 guid = 1;
inline bool SL_CC_ChangeMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SL_CC_ChangeMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SL_CC_ChangeMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SL_CC_ChangeMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SL_CC_ChangeMoney::guid() const {
  // @@protoc_insertion_point(field_get:SL_CC_ChangeMoney.guid)
  return guid_;
}
inline void SL_CC_ChangeMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SL_CC_ChangeMoney.guid)
}

// optional int64 money = 2;
inline bool SL_CC_ChangeMoney::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SL_CC_ChangeMoney::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SL_CC_ChangeMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SL_CC_ChangeMoney::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 SL_CC_ChangeMoney::money() const {
  // @@protoc_insertion_point(field_get:SL_CC_ChangeMoney.money)
  return money_;
}
inline void SL_CC_ChangeMoney::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SL_CC_ChangeMoney.money)
}

// optional string keyid = 3;
inline bool SL_CC_ChangeMoney::has_keyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SL_CC_ChangeMoney::set_has_keyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SL_CC_ChangeMoney::clear_has_keyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SL_CC_ChangeMoney::clear_keyid() {
  keyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyid();
}
inline const ::std::string& SL_CC_ChangeMoney::keyid() const {
  // @@protoc_insertion_point(field_get:SL_CC_ChangeMoney.keyid)
  return keyid_.GetNoArena();
}
inline void SL_CC_ChangeMoney::set_keyid(const ::std::string& value) {
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SL_CC_ChangeMoney.keyid)
}
#if LANG_CXX11
inline void SL_CC_ChangeMoney::set_keyid(::std::string&& value) {
  set_has_keyid();
  keyid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SL_CC_ChangeMoney.keyid)
}
#endif
inline void SL_CC_ChangeMoney::set_keyid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SL_CC_ChangeMoney.keyid)
}
inline void SL_CC_ChangeMoney::set_keyid(const char* value, size_t size) {
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SL_CC_ChangeMoney.keyid)
}
inline ::std::string* SL_CC_ChangeMoney::mutable_keyid() {
  set_has_keyid();
  // @@protoc_insertion_point(field_mutable:SL_CC_ChangeMoney.keyid)
  return keyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SL_CC_ChangeMoney::release_keyid() {
  // @@protoc_insertion_point(field_release:SL_CC_ChangeMoney.keyid)
  clear_has_keyid();
  return keyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SL_CC_ChangeMoney::set_allocated_keyid(::std::string* keyid) {
  if (keyid != NULL) {
    set_has_keyid();
  } else {
    clear_has_keyid();
  }
  keyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyid);
  // @@protoc_insertion_point(field_set_allocated:SL_CC_ChangeMoney.keyid)
}

// optional int32 retid = 4;
inline bool SL_CC_ChangeMoney::has_retid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SL_CC_ChangeMoney::set_has_retid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SL_CC_ChangeMoney::clear_has_retid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SL_CC_ChangeMoney::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 SL_CC_ChangeMoney::retid() const {
  // @@protoc_insertion_point(field_get:SL_CC_ChangeMoney.retid)
  return retid_;
}
inline void SL_CC_ChangeMoney::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:SL_CC_ChangeMoney.retid)
}

// optional int32 retcode = 5;
inline bool SL_CC_ChangeMoney::has_retcode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SL_CC_ChangeMoney::set_has_retcode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SL_CC_ChangeMoney::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SL_CC_ChangeMoney::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 SL_CC_ChangeMoney::retcode() const {
  // @@protoc_insertion_point(field_get:SL_CC_ChangeMoney.retcode)
  return retcode_;
}
inline void SL_CC_ChangeMoney::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:SL_CC_ChangeMoney.retcode)
}

// optional int64 oldmoney = 6;
inline bool SL_CC_ChangeMoney::has_oldmoney() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SL_CC_ChangeMoney::set_has_oldmoney() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SL_CC_ChangeMoney::clear_has_oldmoney() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SL_CC_ChangeMoney::clear_oldmoney() {
  oldmoney_ = GOOGLE_LONGLONG(0);
  clear_has_oldmoney();
}
inline ::google::protobuf::int64 SL_CC_ChangeMoney::oldmoney() const {
  // @@protoc_insertion_point(field_get:SL_CC_ChangeMoney.oldmoney)
  return oldmoney_;
}
inline void SL_CC_ChangeMoney::set_oldmoney(::google::protobuf::int64 value) {
  set_has_oldmoney();
  oldmoney_ = value;
  // @@protoc_insertion_point(field_set:SL_CC_ChangeMoney.oldmoney)
}

// optional int64 newmoney = 7;
inline bool SL_CC_ChangeMoney::has_newmoney() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SL_CC_ChangeMoney::set_has_newmoney() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SL_CC_ChangeMoney::clear_has_newmoney() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SL_CC_ChangeMoney::clear_newmoney() {
  newmoney_ = GOOGLE_LONGLONG(0);
  clear_has_newmoney();
}
inline ::google::protobuf::int64 SL_CC_ChangeMoney::newmoney() const {
  // @@protoc_insertion_point(field_get:SL_CC_ChangeMoney.newmoney)
  return newmoney_;
}
inline void SL_CC_ChangeMoney::set_newmoney(::google::protobuf::int64 value) {
  set_has_newmoney();
  newmoney_ = value;
  // @@protoc_insertion_point(field_set:SL_CC_ChangeMoney.newmoney)
}

// -------------------------------------------------------------------

// LD_CC_ChangeMoney

// optional int32 guid = 1;
inline bool LD_CC_ChangeMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LD_CC_ChangeMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LD_CC_ChangeMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LD_CC_ChangeMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LD_CC_ChangeMoney::guid() const {
  // @@protoc_insertion_point(field_get:LD_CC_ChangeMoney.guid)
  return guid_;
}
inline void LD_CC_ChangeMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LD_CC_ChangeMoney.guid)
}

// optional int64 money = 2;
inline bool LD_CC_ChangeMoney::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_CC_ChangeMoney::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_CC_ChangeMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_CC_ChangeMoney::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 LD_CC_ChangeMoney::money() const {
  // @@protoc_insertion_point(field_get:LD_CC_ChangeMoney.money)
  return money_;
}
inline void LD_CC_ChangeMoney::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:LD_CC_ChangeMoney.money)
}

// optional string keyid = 3;
inline bool LD_CC_ChangeMoney::has_keyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_CC_ChangeMoney::set_has_keyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_CC_ChangeMoney::clear_has_keyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_CC_ChangeMoney::clear_keyid() {
  keyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyid();
}
inline const ::std::string& LD_CC_ChangeMoney::keyid() const {
  // @@protoc_insertion_point(field_get:LD_CC_ChangeMoney.keyid)
  return keyid_.GetNoArena();
}
inline void LD_CC_ChangeMoney::set_keyid(const ::std::string& value) {
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_CC_ChangeMoney.keyid)
}
#if LANG_CXX11
inline void LD_CC_ChangeMoney::set_keyid(::std::string&& value) {
  set_has_keyid();
  keyid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_CC_ChangeMoney.keyid)
}
#endif
inline void LD_CC_ChangeMoney::set_keyid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_CC_ChangeMoney.keyid)
}
inline void LD_CC_ChangeMoney::set_keyid(const char* value, size_t size) {
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_CC_ChangeMoney.keyid)
}
inline ::std::string* LD_CC_ChangeMoney::mutable_keyid() {
  set_has_keyid();
  // @@protoc_insertion_point(field_mutable:LD_CC_ChangeMoney.keyid)
  return keyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_CC_ChangeMoney::release_keyid() {
  // @@protoc_insertion_point(field_release:LD_CC_ChangeMoney.keyid)
  clear_has_keyid();
  return keyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_CC_ChangeMoney::set_allocated_keyid(::std::string* keyid) {
  if (keyid != NULL) {
    set_has_keyid();
  } else {
    clear_has_keyid();
  }
  keyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyid);
  // @@protoc_insertion_point(field_set_allocated:LD_CC_ChangeMoney.keyid)
}

// optional int32 retid = 4;
inline bool LD_CC_ChangeMoney::has_retid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LD_CC_ChangeMoney::set_has_retid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LD_CC_ChangeMoney::clear_has_retid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LD_CC_ChangeMoney::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 LD_CC_ChangeMoney::retid() const {
  // @@protoc_insertion_point(field_get:LD_CC_ChangeMoney.retid)
  return retid_;
}
inline void LD_CC_ChangeMoney::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:LD_CC_ChangeMoney.retid)
}

// optional int32 login_id = 5;
inline bool LD_CC_ChangeMoney::has_login_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LD_CC_ChangeMoney::set_has_login_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LD_CC_ChangeMoney::clear_has_login_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LD_CC_ChangeMoney::clear_login_id() {
  login_id_ = 0;
  clear_has_login_id();
}
inline ::google::protobuf::int32 LD_CC_ChangeMoney::login_id() const {
  // @@protoc_insertion_point(field_get:LD_CC_ChangeMoney.login_id)
  return login_id_;
}
inline void LD_CC_ChangeMoney::set_login_id(::google::protobuf::int32 value) {
  set_has_login_id();
  login_id_ = value;
  // @@protoc_insertion_point(field_set:LD_CC_ChangeMoney.login_id)
}

// -------------------------------------------------------------------

// DL_CC_ChangeMoney

// optional int32 guid = 1;
inline bool DL_CC_ChangeMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DL_CC_ChangeMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DL_CC_ChangeMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DL_CC_ChangeMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DL_CC_ChangeMoney::guid() const {
  // @@protoc_insertion_point(field_get:DL_CC_ChangeMoney.guid)
  return guid_;
}
inline void DL_CC_ChangeMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DL_CC_ChangeMoney.guid)
}

// optional int64 money = 2;
inline bool DL_CC_ChangeMoney::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DL_CC_ChangeMoney::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DL_CC_ChangeMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DL_CC_ChangeMoney::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 DL_CC_ChangeMoney::money() const {
  // @@protoc_insertion_point(field_get:DL_CC_ChangeMoney.money)
  return money_;
}
inline void DL_CC_ChangeMoney::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:DL_CC_ChangeMoney.money)
}

// optional string keyid = 3;
inline bool DL_CC_ChangeMoney::has_keyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DL_CC_ChangeMoney::set_has_keyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DL_CC_ChangeMoney::clear_has_keyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DL_CC_ChangeMoney::clear_keyid() {
  keyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyid();
}
inline const ::std::string& DL_CC_ChangeMoney::keyid() const {
  // @@protoc_insertion_point(field_get:DL_CC_ChangeMoney.keyid)
  return keyid_.GetNoArena();
}
inline void DL_CC_ChangeMoney::set_keyid(const ::std::string& value) {
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_CC_ChangeMoney.keyid)
}
#if LANG_CXX11
inline void DL_CC_ChangeMoney::set_keyid(::std::string&& value) {
  set_has_keyid();
  keyid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_CC_ChangeMoney.keyid)
}
#endif
inline void DL_CC_ChangeMoney::set_keyid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_CC_ChangeMoney.keyid)
}
inline void DL_CC_ChangeMoney::set_keyid(const char* value, size_t size) {
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_CC_ChangeMoney.keyid)
}
inline ::std::string* DL_CC_ChangeMoney::mutable_keyid() {
  set_has_keyid();
  // @@protoc_insertion_point(field_mutable:DL_CC_ChangeMoney.keyid)
  return keyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_CC_ChangeMoney::release_keyid() {
  // @@protoc_insertion_point(field_release:DL_CC_ChangeMoney.keyid)
  clear_has_keyid();
  return keyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_CC_ChangeMoney::set_allocated_keyid(::std::string* keyid) {
  if (keyid != NULL) {
    set_has_keyid();
  } else {
    clear_has_keyid();
  }
  keyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyid);
  // @@protoc_insertion_point(field_set_allocated:DL_CC_ChangeMoney.keyid)
}

// optional int32 retid = 4;
inline bool DL_CC_ChangeMoney::has_retid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DL_CC_ChangeMoney::set_has_retid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DL_CC_ChangeMoney::clear_has_retid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DL_CC_ChangeMoney::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 DL_CC_ChangeMoney::retid() const {
  // @@protoc_insertion_point(field_get:DL_CC_ChangeMoney.retid)
  return retid_;
}
inline void DL_CC_ChangeMoney::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:DL_CC_ChangeMoney.retid)
}

// optional int32 retcode = 5;
inline bool DL_CC_ChangeMoney::has_retcode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DL_CC_ChangeMoney::set_has_retcode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DL_CC_ChangeMoney::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DL_CC_ChangeMoney::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 DL_CC_ChangeMoney::retcode() const {
  // @@protoc_insertion_point(field_get:DL_CC_ChangeMoney.retcode)
  return retcode_;
}
inline void DL_CC_ChangeMoney::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:DL_CC_ChangeMoney.retcode)
}

// optional int64 oldmoney = 6;
inline bool DL_CC_ChangeMoney::has_oldmoney() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DL_CC_ChangeMoney::set_has_oldmoney() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DL_CC_ChangeMoney::clear_has_oldmoney() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DL_CC_ChangeMoney::clear_oldmoney() {
  oldmoney_ = GOOGLE_LONGLONG(0);
  clear_has_oldmoney();
}
inline ::google::protobuf::int64 DL_CC_ChangeMoney::oldmoney() const {
  // @@protoc_insertion_point(field_get:DL_CC_ChangeMoney.oldmoney)
  return oldmoney_;
}
inline void DL_CC_ChangeMoney::set_oldmoney(::google::protobuf::int64 value) {
  set_has_oldmoney();
  oldmoney_ = value;
  // @@protoc_insertion_point(field_set:DL_CC_ChangeMoney.oldmoney)
}

// optional int64 newmoney = 7;
inline bool DL_CC_ChangeMoney::has_newmoney() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DL_CC_ChangeMoney::set_has_newmoney() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DL_CC_ChangeMoney::clear_has_newmoney() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DL_CC_ChangeMoney::clear_newmoney() {
  newmoney_ = GOOGLE_LONGLONG(0);
  clear_has_newmoney();
}
inline ::google::protobuf::int64 DL_CC_ChangeMoney::newmoney() const {
  // @@protoc_insertion_point(field_get:DL_CC_ChangeMoney.newmoney)
  return newmoney_;
}
inline void DL_CC_ChangeMoney::set_newmoney(::google::protobuf::int64 value) {
  set_has_newmoney();
  newmoney_ = value;
  // @@protoc_insertion_point(field_set:DL_CC_ChangeMoney.newmoney)
}

// -------------------------------------------------------------------

// LD_DO_SQL

// optional string sql = 1;
inline bool LD_DO_SQL::has_sql() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_DO_SQL::set_has_sql() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_DO_SQL::clear_has_sql() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_DO_SQL::clear_sql() {
  sql_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sql();
}
inline const ::std::string& LD_DO_SQL::sql() const {
  // @@protoc_insertion_point(field_get:LD_DO_SQL.sql)
  return sql_.GetNoArena();
}
inline void LD_DO_SQL::set_sql(const ::std::string& value) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_DO_SQL.sql)
}
#if LANG_CXX11
inline void LD_DO_SQL::set_sql(::std::string&& value) {
  set_has_sql();
  sql_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_DO_SQL.sql)
}
#endif
inline void LD_DO_SQL::set_sql(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_DO_SQL.sql)
}
inline void LD_DO_SQL::set_sql(const char* value, size_t size) {
  set_has_sql();
  sql_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_DO_SQL.sql)
}
inline ::std::string* LD_DO_SQL::mutable_sql() {
  set_has_sql();
  // @@protoc_insertion_point(field_mutable:LD_DO_SQL.sql)
  return sql_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_DO_SQL::release_sql() {
  // @@protoc_insertion_point(field_release:LD_DO_SQL.sql)
  clear_has_sql();
  return sql_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_DO_SQL::set_allocated_sql(::std::string* sql) {
  if (sql != NULL) {
    set_has_sql();
  } else {
    clear_has_sql();
  }
  sql_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sql);
  // @@protoc_insertion_point(field_set_allocated:LD_DO_SQL.sql)
}

// optional int32 retid = 2;
inline bool LD_DO_SQL::has_retid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LD_DO_SQL::set_has_retid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LD_DO_SQL::clear_has_retid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LD_DO_SQL::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 LD_DO_SQL::retid() const {
  // @@protoc_insertion_point(field_get:LD_DO_SQL.retid)
  return retid_;
}
inline void LD_DO_SQL::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:LD_DO_SQL.retid)
}

// optional string keyid = 3;
inline bool LD_DO_SQL::has_keyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_DO_SQL::set_has_keyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_DO_SQL::clear_has_keyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_DO_SQL::clear_keyid() {
  keyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyid();
}
inline const ::std::string& LD_DO_SQL::keyid() const {
  // @@protoc_insertion_point(field_get:LD_DO_SQL.keyid)
  return keyid_.GetNoArena();
}
inline void LD_DO_SQL::set_keyid(const ::std::string& value) {
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_DO_SQL.keyid)
}
#if LANG_CXX11
inline void LD_DO_SQL::set_keyid(::std::string&& value) {
  set_has_keyid();
  keyid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_DO_SQL.keyid)
}
#endif
inline void LD_DO_SQL::set_keyid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_DO_SQL.keyid)
}
inline void LD_DO_SQL::set_keyid(const char* value, size_t size) {
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_DO_SQL.keyid)
}
inline ::std::string* LD_DO_SQL::mutable_keyid() {
  set_has_keyid();
  // @@protoc_insertion_point(field_mutable:LD_DO_SQL.keyid)
  return keyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_DO_SQL::release_keyid() {
  // @@protoc_insertion_point(field_release:LD_DO_SQL.keyid)
  clear_has_keyid();
  return keyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_DO_SQL::set_allocated_keyid(::std::string* keyid) {
  if (keyid != NULL) {
    set_has_keyid();
  } else {
    clear_has_keyid();
  }
  keyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyid);
  // @@protoc_insertion_point(field_set_allocated:LD_DO_SQL.keyid)
}

// optional string database = 4;
inline bool LD_DO_SQL::has_database() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LD_DO_SQL::set_has_database() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LD_DO_SQL::clear_has_database() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LD_DO_SQL::clear_database() {
  database_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_database();
}
inline const ::std::string& LD_DO_SQL::database() const {
  // @@protoc_insertion_point(field_get:LD_DO_SQL.database)
  return database_.GetNoArena();
}
inline void LD_DO_SQL::set_database(const ::std::string& value) {
  set_has_database();
  database_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_DO_SQL.database)
}
#if LANG_CXX11
inline void LD_DO_SQL::set_database(::std::string&& value) {
  set_has_database();
  database_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_DO_SQL.database)
}
#endif
inline void LD_DO_SQL::set_database(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_database();
  database_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_DO_SQL.database)
}
inline void LD_DO_SQL::set_database(const char* value, size_t size) {
  set_has_database();
  database_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_DO_SQL.database)
}
inline ::std::string* LD_DO_SQL::mutable_database() {
  set_has_database();
  // @@protoc_insertion_point(field_mutable:LD_DO_SQL.database)
  return database_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_DO_SQL::release_database() {
  // @@protoc_insertion_point(field_release:LD_DO_SQL.database)
  clear_has_database();
  return database_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_DO_SQL::set_allocated_database(::std::string* database) {
  if (database != NULL) {
    set_has_database();
  } else {
    clear_has_database();
  }
  database_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), database);
  // @@protoc_insertion_point(field_set_allocated:LD_DO_SQL.database)
}

// -------------------------------------------------------------------

// DL_DO_SQL

// optional int32 retCode = 1;
inline bool DL_DO_SQL::has_retcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DL_DO_SQL::set_has_retcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DL_DO_SQL::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DL_DO_SQL::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 DL_DO_SQL::retcode() const {
  // @@protoc_insertion_point(field_get:DL_DO_SQL.retCode)
  return retcode_;
}
inline void DL_DO_SQL::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:DL_DO_SQL.retCode)
}

// optional string retData = 2;
inline bool DL_DO_SQL::has_retdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DL_DO_SQL::set_has_retdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DL_DO_SQL::clear_has_retdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DL_DO_SQL::clear_retdata() {
  retdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retdata();
}
inline const ::std::string& DL_DO_SQL::retdata() const {
  // @@protoc_insertion_point(field_get:DL_DO_SQL.retData)
  return retdata_.GetNoArena();
}
inline void DL_DO_SQL::set_retdata(const ::std::string& value) {
  set_has_retdata();
  retdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_DO_SQL.retData)
}
#if LANG_CXX11
inline void DL_DO_SQL::set_retdata(::std::string&& value) {
  set_has_retdata();
  retdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_DO_SQL.retData)
}
#endif
inline void DL_DO_SQL::set_retdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retdata();
  retdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_DO_SQL.retData)
}
inline void DL_DO_SQL::set_retdata(const char* value, size_t size) {
  set_has_retdata();
  retdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_DO_SQL.retData)
}
inline ::std::string* DL_DO_SQL::mutable_retdata() {
  set_has_retdata();
  // @@protoc_insertion_point(field_mutable:DL_DO_SQL.retData)
  return retdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_DO_SQL::release_retdata() {
  // @@protoc_insertion_point(field_release:DL_DO_SQL.retData)
  clear_has_retdata();
  return retdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_DO_SQL::set_allocated_retdata(::std::string* retdata) {
  if (retdata != NULL) {
    set_has_retdata();
  } else {
    clear_has_retdata();
  }
  retdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retdata);
  // @@protoc_insertion_point(field_set_allocated:DL_DO_SQL.retData)
}

// optional string keyid = 3;
inline bool DL_DO_SQL::has_keyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DL_DO_SQL::set_has_keyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DL_DO_SQL::clear_has_keyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DL_DO_SQL::clear_keyid() {
  keyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyid();
}
inline const ::std::string& DL_DO_SQL::keyid() const {
  // @@protoc_insertion_point(field_get:DL_DO_SQL.keyid)
  return keyid_.GetNoArena();
}
inline void DL_DO_SQL::set_keyid(const ::std::string& value) {
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DL_DO_SQL.keyid)
}
#if LANG_CXX11
inline void DL_DO_SQL::set_keyid(::std::string&& value) {
  set_has_keyid();
  keyid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DL_DO_SQL.keyid)
}
#endif
inline void DL_DO_SQL::set_keyid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DL_DO_SQL.keyid)
}
inline void DL_DO_SQL::set_keyid(const char* value, size_t size) {
  set_has_keyid();
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DL_DO_SQL.keyid)
}
inline ::std::string* DL_DO_SQL::mutable_keyid() {
  set_has_keyid();
  // @@protoc_insertion_point(field_mutable:DL_DO_SQL.keyid)
  return keyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DL_DO_SQL::release_keyid() {
  // @@protoc_insertion_point(field_release:DL_DO_SQL.keyid)
  clear_has_keyid();
  return keyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DL_DO_SQL::set_allocated_keyid(::std::string* keyid) {
  if (keyid != NULL) {
    set_has_keyid();
  } else {
    clear_has_keyid();
  }
  keyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyid);
  // @@protoc_insertion_point(field_set_allocated:DL_DO_SQL.keyid)
}

// optional int32 retid = 4;
inline bool DL_DO_SQL::has_retid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DL_DO_SQL::set_has_retid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DL_DO_SQL::clear_has_retid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DL_DO_SQL::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 DL_DO_SQL::retid() const {
  // @@protoc_insertion_point(field_get:DL_DO_SQL.retid)
  return retid_;
}
inline void DL_DO_SQL::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:DL_DO_SQL.retid)
}

// -------------------------------------------------------------------

// SL_Log_Robot_Money

// optional int32 guid = 1;
inline bool SL_Log_Robot_Money::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SL_Log_Robot_Money::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SL_Log_Robot_Money::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SL_Log_Robot_Money::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SL_Log_Robot_Money::guid() const {
  // @@protoc_insertion_point(field_get:SL_Log_Robot_Money.guid)
  return guid_;
}
inline void SL_Log_Robot_Money::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Robot_Money.guid)
}

// optional int32 isbanker = 2;
inline bool SL_Log_Robot_Money::has_isbanker() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SL_Log_Robot_Money::set_has_isbanker() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SL_Log_Robot_Money::clear_has_isbanker() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SL_Log_Robot_Money::clear_isbanker() {
  isbanker_ = 0;
  clear_has_isbanker();
}
inline ::google::protobuf::int32 SL_Log_Robot_Money::isbanker() const {
  // @@protoc_insertion_point(field_get:SL_Log_Robot_Money.isbanker)
  return isbanker_;
}
inline void SL_Log_Robot_Money::set_isbanker(::google::protobuf::int32 value) {
  set_has_isbanker();
  isbanker_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Robot_Money.isbanker)
}

// optional int32 winorlose = 3;
inline bool SL_Log_Robot_Money::has_winorlose() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SL_Log_Robot_Money::set_has_winorlose() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SL_Log_Robot_Money::clear_has_winorlose() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SL_Log_Robot_Money::clear_winorlose() {
  winorlose_ = 0;
  clear_has_winorlose();
}
inline ::google::protobuf::int32 SL_Log_Robot_Money::winorlose() const {
  // @@protoc_insertion_point(field_get:SL_Log_Robot_Money.winorlose)
  return winorlose_;
}
inline void SL_Log_Robot_Money::set_winorlose(::google::protobuf::int32 value) {
  set_has_winorlose();
  winorlose_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Robot_Money.winorlose)
}

// optional int32 gameid = 4;
inline bool SL_Log_Robot_Money::has_gameid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SL_Log_Robot_Money::set_has_gameid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SL_Log_Robot_Money::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SL_Log_Robot_Money::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 SL_Log_Robot_Money::gameid() const {
  // @@protoc_insertion_point(field_get:SL_Log_Robot_Money.gameid)
  return gameid_;
}
inline void SL_Log_Robot_Money::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Robot_Money.gameid)
}

// optional string game_name = 5;
inline bool SL_Log_Robot_Money::has_game_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SL_Log_Robot_Money::set_has_game_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SL_Log_Robot_Money::clear_has_game_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SL_Log_Robot_Money::clear_game_name() {
  game_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_name();
}
inline const ::std::string& SL_Log_Robot_Money::game_name() const {
  // @@protoc_insertion_point(field_get:SL_Log_Robot_Money.game_name)
  return game_name_.GetNoArena();
}
inline void SL_Log_Robot_Money::set_game_name(const ::std::string& value) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SL_Log_Robot_Money.game_name)
}
#if LANG_CXX11
inline void SL_Log_Robot_Money::set_game_name(::std::string&& value) {
  set_has_game_name();
  game_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SL_Log_Robot_Money.game_name)
}
#endif
inline void SL_Log_Robot_Money::set_game_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SL_Log_Robot_Money.game_name)
}
inline void SL_Log_Robot_Money::set_game_name(const char* value, size_t size) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SL_Log_Robot_Money.game_name)
}
inline ::std::string* SL_Log_Robot_Money::mutable_game_name() {
  set_has_game_name();
  // @@protoc_insertion_point(field_mutable:SL_Log_Robot_Money.game_name)
  return game_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SL_Log_Robot_Money::release_game_name() {
  // @@protoc_insertion_point(field_release:SL_Log_Robot_Money.game_name)
  clear_has_game_name();
  return game_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SL_Log_Robot_Money::set_allocated_game_name(::std::string* game_name) {
  if (game_name != NULL) {
    set_has_game_name();
  } else {
    clear_has_game_name();
  }
  game_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_name);
  // @@protoc_insertion_point(field_set_allocated:SL_Log_Robot_Money.game_name)
}

// optional int64 old_money = 6;
inline bool SL_Log_Robot_Money::has_old_money() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SL_Log_Robot_Money::set_has_old_money() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SL_Log_Robot_Money::clear_has_old_money() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SL_Log_Robot_Money::clear_old_money() {
  old_money_ = GOOGLE_LONGLONG(0);
  clear_has_old_money();
}
inline ::google::protobuf::int64 SL_Log_Robot_Money::old_money() const {
  // @@protoc_insertion_point(field_get:SL_Log_Robot_Money.old_money)
  return old_money_;
}
inline void SL_Log_Robot_Money::set_old_money(::google::protobuf::int64 value) {
  set_has_old_money();
  old_money_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Robot_Money.old_money)
}

// optional int64 new_money = 7;
inline bool SL_Log_Robot_Money::has_new_money() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SL_Log_Robot_Money::set_has_new_money() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SL_Log_Robot_Money::clear_has_new_money() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SL_Log_Robot_Money::clear_new_money() {
  new_money_ = GOOGLE_LONGLONG(0);
  clear_has_new_money();
}
inline ::google::protobuf::int64 SL_Log_Robot_Money::new_money() const {
  // @@protoc_insertion_point(field_get:SL_Log_Robot_Money.new_money)
  return new_money_;
}
inline void SL_Log_Robot_Money::set_new_money(::google::protobuf::int64 value) {
  set_has_new_money();
  new_money_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Robot_Money.new_money)
}

// optional int64 tax = 8;
inline bool SL_Log_Robot_Money::has_tax() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SL_Log_Robot_Money::set_has_tax() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SL_Log_Robot_Money::clear_has_tax() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SL_Log_Robot_Money::clear_tax() {
  tax_ = GOOGLE_LONGLONG(0);
  clear_has_tax();
}
inline ::google::protobuf::int64 SL_Log_Robot_Money::tax() const {
  // @@protoc_insertion_point(field_get:SL_Log_Robot_Money.tax)
  return tax_;
}
inline void SL_Log_Robot_Money::set_tax(::google::protobuf::int64 value) {
  set_has_tax();
  tax_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Robot_Money.tax)
}

// optional int64 money_change = 9;
inline bool SL_Log_Robot_Money::has_money_change() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SL_Log_Robot_Money::set_has_money_change() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SL_Log_Robot_Money::clear_has_money_change() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SL_Log_Robot_Money::clear_money_change() {
  money_change_ = GOOGLE_LONGLONG(0);
  clear_has_money_change();
}
inline ::google::protobuf::int64 SL_Log_Robot_Money::money_change() const {
  // @@protoc_insertion_point(field_get:SL_Log_Robot_Money.money_change)
  return money_change_;
}
inline void SL_Log_Robot_Money::set_money_change(::google::protobuf::int64 value) {
  set_has_money_change();
  money_change_ = value;
  // @@protoc_insertion_point(field_set:SL_Log_Robot_Money.money_change)
}

// optional string id = 10;
inline bool SL_Log_Robot_Money::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SL_Log_Robot_Money::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SL_Log_Robot_Money::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SL_Log_Robot_Money::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& SL_Log_Robot_Money::id() const {
  // @@protoc_insertion_point(field_get:SL_Log_Robot_Money.id)
  return id_.GetNoArena();
}
inline void SL_Log_Robot_Money::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SL_Log_Robot_Money.id)
}
#if LANG_CXX11
inline void SL_Log_Robot_Money::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SL_Log_Robot_Money.id)
}
#endif
inline void SL_Log_Robot_Money::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SL_Log_Robot_Money.id)
}
inline void SL_Log_Robot_Money::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SL_Log_Robot_Money.id)
}
inline ::std::string* SL_Log_Robot_Money::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:SL_Log_Robot_Money.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SL_Log_Robot_Money::release_id() {
  // @@protoc_insertion_point(field_release:SL_Log_Robot_Money.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SL_Log_Robot_Money::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:SL_Log_Robot_Money.id)
}

// -------------------------------------------------------------------

// WF_GetCfg

// -------------------------------------------------------------------

// FW_GetCfg

// optional string php_sign = 1;
inline bool FW_GetCfg::has_php_sign() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FW_GetCfg::set_has_php_sign() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FW_GetCfg::clear_has_php_sign() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FW_GetCfg::clear_php_sign() {
  php_sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_php_sign();
}
inline const ::std::string& FW_GetCfg::php_sign() const {
  // @@protoc_insertion_point(field_get:FW_GetCfg.php_sign)
  return php_sign_.GetNoArena();
}
inline void FW_GetCfg::set_php_sign(const ::std::string& value) {
  set_has_php_sign();
  php_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FW_GetCfg.php_sign)
}
#if LANG_CXX11
inline void FW_GetCfg::set_php_sign(::std::string&& value) {
  set_has_php_sign();
  php_sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FW_GetCfg.php_sign)
}
#endif
inline void FW_GetCfg::set_php_sign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_php_sign();
  php_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FW_GetCfg.php_sign)
}
inline void FW_GetCfg::set_php_sign(const char* value, size_t size) {
  set_has_php_sign();
  php_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FW_GetCfg.php_sign)
}
inline ::std::string* FW_GetCfg::mutable_php_sign() {
  set_has_php_sign();
  // @@protoc_insertion_point(field_mutable:FW_GetCfg.php_sign)
  return php_sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FW_GetCfg::release_php_sign() {
  // @@protoc_insertion_point(field_release:FW_GetCfg.php_sign)
  clear_has_php_sign();
  return php_sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FW_GetCfg::set_allocated_php_sign(::std::string* php_sign) {
  if (php_sign != NULL) {
    set_has_php_sign();
  } else {
    clear_has_php_sign();
  }
  php_sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), php_sign);
  // @@protoc_insertion_point(field_set_allocated:FW_GetCfg.php_sign)
}

// -------------------------------------------------------------------

// FG_GameServerCfg

// optional .GameClientRoomListCfg pb_cfg = 1;
inline bool FG_GameServerCfg::has_pb_cfg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FG_GameServerCfg::set_has_pb_cfg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FG_GameServerCfg::clear_has_pb_cfg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FG_GameServerCfg::clear_pb_cfg() {
  if (pb_cfg_ != NULL) pb_cfg_->::GameClientRoomListCfg::Clear();
  clear_has_pb_cfg();
}
inline const ::GameClientRoomListCfg& FG_GameServerCfg::pb_cfg() const {
  // @@protoc_insertion_point(field_get:FG_GameServerCfg.pb_cfg)
  return pb_cfg_ != NULL ? *pb_cfg_
                         : *::GameClientRoomListCfg::internal_default_instance();
}
inline ::GameClientRoomListCfg* FG_GameServerCfg::mutable_pb_cfg() {
  set_has_pb_cfg();
  if (pb_cfg_ == NULL) {
    pb_cfg_ = new ::GameClientRoomListCfg;
  }
  // @@protoc_insertion_point(field_mutable:FG_GameServerCfg.pb_cfg)
  return pb_cfg_;
}
inline ::GameClientRoomListCfg* FG_GameServerCfg::release_pb_cfg() {
  // @@protoc_insertion_point(field_release:FG_GameServerCfg.pb_cfg)
  clear_has_pb_cfg();
  ::GameClientRoomListCfg* temp = pb_cfg_;
  pb_cfg_ = NULL;
  return temp;
}
inline void FG_GameServerCfg::set_allocated_pb_cfg(::GameClientRoomListCfg* pb_cfg) {
  delete pb_cfg_;
  pb_cfg_ = pb_cfg;
  if (pb_cfg) {
    set_has_pb_cfg();
  } else {
    clear_has_pb_cfg();
  }
  // @@protoc_insertion_point(field_set_allocated:FG_GameServerCfg.pb_cfg)
}

// -------------------------------------------------------------------

// LD_AlipayEdit

// optional int32 guid = 1;
inline bool LD_AlipayEdit::has_guid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LD_AlipayEdit::set_has_guid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LD_AlipayEdit::clear_has_guid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LD_AlipayEdit::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LD_AlipayEdit::guid() const {
  // @@protoc_insertion_point(field_get:LD_AlipayEdit.guid)
  return guid_;
}
inline void LD_AlipayEdit::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LD_AlipayEdit.guid)
}

// optional string alipay_name = 2;
inline bool LD_AlipayEdit::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_AlipayEdit::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_AlipayEdit::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_AlipayEdit::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
inline const ::std::string& LD_AlipayEdit::alipay_name() const {
  // @@protoc_insertion_point(field_get:LD_AlipayEdit.alipay_name)
  return alipay_name_.GetNoArena();
}
inline void LD_AlipayEdit::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_AlipayEdit.alipay_name)
}
#if LANG_CXX11
inline void LD_AlipayEdit::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_AlipayEdit.alipay_name)
}
#endif
inline void LD_AlipayEdit::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_AlipayEdit.alipay_name)
}
inline void LD_AlipayEdit::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_AlipayEdit.alipay_name)
}
inline ::std::string* LD_AlipayEdit::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:LD_AlipayEdit.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_AlipayEdit::release_alipay_name() {
  // @@protoc_insertion_point(field_release:LD_AlipayEdit.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_AlipayEdit::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:LD_AlipayEdit.alipay_name)
}

// optional string alipay_name_y = 3;
inline bool LD_AlipayEdit::has_alipay_name_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_AlipayEdit::set_has_alipay_name_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_AlipayEdit::clear_has_alipay_name_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_AlipayEdit::clear_alipay_name_y() {
  alipay_name_y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name_y();
}
inline const ::std::string& LD_AlipayEdit::alipay_name_y() const {
  // @@protoc_insertion_point(field_get:LD_AlipayEdit.alipay_name_y)
  return alipay_name_y_.GetNoArena();
}
inline void LD_AlipayEdit::set_alipay_name_y(const ::std::string& value) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_AlipayEdit.alipay_name_y)
}
#if LANG_CXX11
inline void LD_AlipayEdit::set_alipay_name_y(::std::string&& value) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_AlipayEdit.alipay_name_y)
}
#endif
inline void LD_AlipayEdit::set_alipay_name_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_AlipayEdit.alipay_name_y)
}
inline void LD_AlipayEdit::set_alipay_name_y(const char* value, size_t size) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_AlipayEdit.alipay_name_y)
}
inline ::std::string* LD_AlipayEdit::mutable_alipay_name_y() {
  set_has_alipay_name_y();
  // @@protoc_insertion_point(field_mutable:LD_AlipayEdit.alipay_name_y)
  return alipay_name_y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_AlipayEdit::release_alipay_name_y() {
  // @@protoc_insertion_point(field_release:LD_AlipayEdit.alipay_name_y)
  clear_has_alipay_name_y();
  return alipay_name_y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_AlipayEdit::set_allocated_alipay_name_y(::std::string* alipay_name_y) {
  if (alipay_name_y != NULL) {
    set_has_alipay_name_y();
  } else {
    clear_has_alipay_name_y();
  }
  alipay_name_y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name_y);
  // @@protoc_insertion_point(field_set_allocated:LD_AlipayEdit.alipay_name_y)
}

// optional string alipay_account = 4;
inline bool LD_AlipayEdit::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LD_AlipayEdit::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LD_AlipayEdit::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LD_AlipayEdit::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
inline const ::std::string& LD_AlipayEdit::alipay_account() const {
  // @@protoc_insertion_point(field_get:LD_AlipayEdit.alipay_account)
  return alipay_account_.GetNoArena();
}
inline void LD_AlipayEdit::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_AlipayEdit.alipay_account)
}
#if LANG_CXX11
inline void LD_AlipayEdit::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_AlipayEdit.alipay_account)
}
#endif
inline void LD_AlipayEdit::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_AlipayEdit.alipay_account)
}
inline void LD_AlipayEdit::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_AlipayEdit.alipay_account)
}
inline ::std::string* LD_AlipayEdit::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:LD_AlipayEdit.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_AlipayEdit::release_alipay_account() {
  // @@protoc_insertion_point(field_release:LD_AlipayEdit.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_AlipayEdit::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:LD_AlipayEdit.alipay_account)
}

// optional string alipay_account_y = 5;
inline bool LD_AlipayEdit::has_alipay_account_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LD_AlipayEdit::set_has_alipay_account_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LD_AlipayEdit::clear_has_alipay_account_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LD_AlipayEdit::clear_alipay_account_y() {
  alipay_account_y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account_y();
}
inline const ::std::string& LD_AlipayEdit::alipay_account_y() const {
  // @@protoc_insertion_point(field_get:LD_AlipayEdit.alipay_account_y)
  return alipay_account_y_.GetNoArena();
}
inline void LD_AlipayEdit::set_alipay_account_y(const ::std::string& value) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LD_AlipayEdit.alipay_account_y)
}
#if LANG_CXX11
inline void LD_AlipayEdit::set_alipay_account_y(::std::string&& value) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LD_AlipayEdit.alipay_account_y)
}
#endif
inline void LD_AlipayEdit::set_alipay_account_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LD_AlipayEdit.alipay_account_y)
}
inline void LD_AlipayEdit::set_alipay_account_y(const char* value, size_t size) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LD_AlipayEdit.alipay_account_y)
}
inline ::std::string* LD_AlipayEdit::mutable_alipay_account_y() {
  set_has_alipay_account_y();
  // @@protoc_insertion_point(field_mutable:LD_AlipayEdit.alipay_account_y)
  return alipay_account_y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LD_AlipayEdit::release_alipay_account_y() {
  // @@protoc_insertion_point(field_release:LD_AlipayEdit.alipay_account_y)
  clear_has_alipay_account_y();
  return alipay_account_y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LD_AlipayEdit::set_allocated_alipay_account_y(::std::string* alipay_account_y) {
  if (alipay_account_y != NULL) {
    set_has_alipay_account_y();
  } else {
    clear_has_alipay_account_y();
  }
  alipay_account_y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account_y);
  // @@protoc_insertion_point(field_set_allocated:LD_AlipayEdit.alipay_account_y)
}

// optional int32 retid = 6;
inline bool LD_AlipayEdit::has_retid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LD_AlipayEdit::set_has_retid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LD_AlipayEdit::clear_has_retid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LD_AlipayEdit::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 LD_AlipayEdit::retid() const {
  // @@protoc_insertion_point(field_get:LD_AlipayEdit.retid)
  return retid_;
}
inline void LD_AlipayEdit::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:LD_AlipayEdit.retid)
}

// -------------------------------------------------------------------

// DL_AlipayEdit

// optional int32 guid = 1;
inline bool DL_AlipayEdit::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DL_AlipayEdit::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DL_AlipayEdit::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DL_AlipayEdit::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DL_AlipayEdit::guid() const {
  // @@protoc_insertion_point(field_get:DL_AlipayEdit.guid)
  return guid_;
}
inline void DL_AlipayEdit::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DL_AlipayEdit.guid)
}

// optional int32 EditNum = 2;
inline bool DL_AlipayEdit::has_editnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DL_AlipayEdit::set_has_editnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DL_AlipayEdit::clear_has_editnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DL_AlipayEdit::clear_editnum() {
  editnum_ = 0;
  clear_has_editnum();
}
inline ::google::protobuf::int32 DL_AlipayEdit::editnum() const {
  // @@protoc_insertion_point(field_get:DL_AlipayEdit.EditNum)
  return editnum_;
}
inline void DL_AlipayEdit::set_editnum(::google::protobuf::int32 value) {
  set_has_editnum();
  editnum_ = value;
  // @@protoc_insertion_point(field_set:DL_AlipayEdit.EditNum)
}

// optional int32 retid = 3;
inline bool DL_AlipayEdit::has_retid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DL_AlipayEdit::set_has_retid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DL_AlipayEdit::clear_has_retid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DL_AlipayEdit::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 DL_AlipayEdit::retid() const {
  // @@protoc_insertion_point(field_get:DL_AlipayEdit.retid)
  return retid_;
}
inline void DL_AlipayEdit::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:DL_AlipayEdit.retid)
}

// -------------------------------------------------------------------

// LS_AlipayEdit

// optional int32 guid = 1;
inline bool LS_AlipayEdit::has_guid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LS_AlipayEdit::set_has_guid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LS_AlipayEdit::clear_has_guid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LS_AlipayEdit::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LS_AlipayEdit::guid() const {
  // @@protoc_insertion_point(field_get:LS_AlipayEdit.guid)
  return guid_;
}
inline void LS_AlipayEdit::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LS_AlipayEdit.guid)
}

// optional string alipay_name = 2;
inline bool LS_AlipayEdit::has_alipay_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_AlipayEdit::set_has_alipay_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_AlipayEdit::clear_has_alipay_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_AlipayEdit::clear_alipay_name() {
  alipay_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name();
}
inline const ::std::string& LS_AlipayEdit::alipay_name() const {
  // @@protoc_insertion_point(field_get:LS_AlipayEdit.alipay_name)
  return alipay_name_.GetNoArena();
}
inline void LS_AlipayEdit::set_alipay_name(const ::std::string& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LS_AlipayEdit.alipay_name)
}
#if LANG_CXX11
inline void LS_AlipayEdit::set_alipay_name(::std::string&& value) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LS_AlipayEdit.alipay_name)
}
#endif
inline void LS_AlipayEdit::set_alipay_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LS_AlipayEdit.alipay_name)
}
inline void LS_AlipayEdit::set_alipay_name(const char* value, size_t size) {
  set_has_alipay_name();
  alipay_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LS_AlipayEdit.alipay_name)
}
inline ::std::string* LS_AlipayEdit::mutable_alipay_name() {
  set_has_alipay_name();
  // @@protoc_insertion_point(field_mutable:LS_AlipayEdit.alipay_name)
  return alipay_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LS_AlipayEdit::release_alipay_name() {
  // @@protoc_insertion_point(field_release:LS_AlipayEdit.alipay_name)
  clear_has_alipay_name();
  return alipay_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LS_AlipayEdit::set_allocated_alipay_name(::std::string* alipay_name) {
  if (alipay_name != NULL) {
    set_has_alipay_name();
  } else {
    clear_has_alipay_name();
  }
  alipay_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name);
  // @@protoc_insertion_point(field_set_allocated:LS_AlipayEdit.alipay_name)
}

// optional string alipay_name_y = 3;
inline bool LS_AlipayEdit::has_alipay_name_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_AlipayEdit::set_has_alipay_name_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_AlipayEdit::clear_has_alipay_name_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_AlipayEdit::clear_alipay_name_y() {
  alipay_name_y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_name_y();
}
inline const ::std::string& LS_AlipayEdit::alipay_name_y() const {
  // @@protoc_insertion_point(field_get:LS_AlipayEdit.alipay_name_y)
  return alipay_name_y_.GetNoArena();
}
inline void LS_AlipayEdit::set_alipay_name_y(const ::std::string& value) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LS_AlipayEdit.alipay_name_y)
}
#if LANG_CXX11
inline void LS_AlipayEdit::set_alipay_name_y(::std::string&& value) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LS_AlipayEdit.alipay_name_y)
}
#endif
inline void LS_AlipayEdit::set_alipay_name_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LS_AlipayEdit.alipay_name_y)
}
inline void LS_AlipayEdit::set_alipay_name_y(const char* value, size_t size) {
  set_has_alipay_name_y();
  alipay_name_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LS_AlipayEdit.alipay_name_y)
}
inline ::std::string* LS_AlipayEdit::mutable_alipay_name_y() {
  set_has_alipay_name_y();
  // @@protoc_insertion_point(field_mutable:LS_AlipayEdit.alipay_name_y)
  return alipay_name_y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LS_AlipayEdit::release_alipay_name_y() {
  // @@protoc_insertion_point(field_release:LS_AlipayEdit.alipay_name_y)
  clear_has_alipay_name_y();
  return alipay_name_y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LS_AlipayEdit::set_allocated_alipay_name_y(::std::string* alipay_name_y) {
  if (alipay_name_y != NULL) {
    set_has_alipay_name_y();
  } else {
    clear_has_alipay_name_y();
  }
  alipay_name_y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_name_y);
  // @@protoc_insertion_point(field_set_allocated:LS_AlipayEdit.alipay_name_y)
}

// optional string alipay_account = 4;
inline bool LS_AlipayEdit::has_alipay_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LS_AlipayEdit::set_has_alipay_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LS_AlipayEdit::clear_has_alipay_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LS_AlipayEdit::clear_alipay_account() {
  alipay_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account();
}
inline const ::std::string& LS_AlipayEdit::alipay_account() const {
  // @@protoc_insertion_point(field_get:LS_AlipayEdit.alipay_account)
  return alipay_account_.GetNoArena();
}
inline void LS_AlipayEdit::set_alipay_account(const ::std::string& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LS_AlipayEdit.alipay_account)
}
#if LANG_CXX11
inline void LS_AlipayEdit::set_alipay_account(::std::string&& value) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LS_AlipayEdit.alipay_account)
}
#endif
inline void LS_AlipayEdit::set_alipay_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LS_AlipayEdit.alipay_account)
}
inline void LS_AlipayEdit::set_alipay_account(const char* value, size_t size) {
  set_has_alipay_account();
  alipay_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LS_AlipayEdit.alipay_account)
}
inline ::std::string* LS_AlipayEdit::mutable_alipay_account() {
  set_has_alipay_account();
  // @@protoc_insertion_point(field_mutable:LS_AlipayEdit.alipay_account)
  return alipay_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LS_AlipayEdit::release_alipay_account() {
  // @@protoc_insertion_point(field_release:LS_AlipayEdit.alipay_account)
  clear_has_alipay_account();
  return alipay_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LS_AlipayEdit::set_allocated_alipay_account(::std::string* alipay_account) {
  if (alipay_account != NULL) {
    set_has_alipay_account();
  } else {
    clear_has_alipay_account();
  }
  alipay_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account);
  // @@protoc_insertion_point(field_set_allocated:LS_AlipayEdit.alipay_account)
}

// optional string alipay_account_y = 5;
inline bool LS_AlipayEdit::has_alipay_account_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LS_AlipayEdit::set_has_alipay_account_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LS_AlipayEdit::clear_has_alipay_account_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LS_AlipayEdit::clear_alipay_account_y() {
  alipay_account_y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alipay_account_y();
}
inline const ::std::string& LS_AlipayEdit::alipay_account_y() const {
  // @@protoc_insertion_point(field_get:LS_AlipayEdit.alipay_account_y)
  return alipay_account_y_.GetNoArena();
}
inline void LS_AlipayEdit::set_alipay_account_y(const ::std::string& value) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LS_AlipayEdit.alipay_account_y)
}
#if LANG_CXX11
inline void LS_AlipayEdit::set_alipay_account_y(::std::string&& value) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LS_AlipayEdit.alipay_account_y)
}
#endif
inline void LS_AlipayEdit::set_alipay_account_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LS_AlipayEdit.alipay_account_y)
}
inline void LS_AlipayEdit::set_alipay_account_y(const char* value, size_t size) {
  set_has_alipay_account_y();
  alipay_account_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LS_AlipayEdit.alipay_account_y)
}
inline ::std::string* LS_AlipayEdit::mutable_alipay_account_y() {
  set_has_alipay_account_y();
  // @@protoc_insertion_point(field_mutable:LS_AlipayEdit.alipay_account_y)
  return alipay_account_y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LS_AlipayEdit::release_alipay_account_y() {
  // @@protoc_insertion_point(field_release:LS_AlipayEdit.alipay_account_y)
  clear_has_alipay_account_y();
  return alipay_account_y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LS_AlipayEdit::set_allocated_alipay_account_y(::std::string* alipay_account_y) {
  if (alipay_account_y != NULL) {
    set_has_alipay_account_y();
  } else {
    clear_has_alipay_account_y();
  }
  alipay_account_y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alipay_account_y);
  // @@protoc_insertion_point(field_set_allocated:LS_AlipayEdit.alipay_account_y)
}

// -------------------------------------------------------------------

// SL_AddMoney

// optional int32 guid = 1;
inline bool SL_AddMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SL_AddMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SL_AddMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SL_AddMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SL_AddMoney::guid() const {
  // @@protoc_insertion_point(field_get:SL_AddMoney.guid)
  return guid_;
}
inline void SL_AddMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SL_AddMoney.guid)
}

// optional int32 money = 2;
inline bool SL_AddMoney::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SL_AddMoney::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SL_AddMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SL_AddMoney::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 SL_AddMoney::money() const {
  // @@protoc_insertion_point(field_get:SL_AddMoney.money)
  return money_;
}
inline void SL_AddMoney::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SL_AddMoney.money)
}

// optional int32 add_type = 3;
inline bool SL_AddMoney::has_add_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SL_AddMoney::set_has_add_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SL_AddMoney::clear_has_add_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SL_AddMoney::clear_add_type() {
  add_type_ = 0;
  clear_has_add_type();
}
inline ::google::protobuf::int32 SL_AddMoney::add_type() const {
  // @@protoc_insertion_point(field_get:SL_AddMoney.add_type)
  return add_type_;
}
inline void SL_AddMoney::set_add_type(::google::protobuf::int32 value) {
  set_has_add_type();
  add_type_ = value;
  // @@protoc_insertion_point(field_set:SL_AddMoney.add_type)
}

// -------------------------------------------------------------------

// DL_AddMoney

// optional int32 guid = 1;
inline bool DL_AddMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DL_AddMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DL_AddMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DL_AddMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DL_AddMoney::guid() const {
  // @@protoc_insertion_point(field_get:DL_AddMoney.guid)
  return guid_;
}
inline void DL_AddMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DL_AddMoney.guid)
}

// optional int32 money = 2;
inline bool DL_AddMoney::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DL_AddMoney::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DL_AddMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DL_AddMoney::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 DL_AddMoney::money() const {
  // @@protoc_insertion_point(field_get:DL_AddMoney.money)
  return money_;
}
inline void DL_AddMoney::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:DL_AddMoney.money)
}

// optional int32 add_type = 3;
inline bool DL_AddMoney::has_add_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DL_AddMoney::set_has_add_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DL_AddMoney::clear_has_add_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DL_AddMoney::clear_add_type() {
  add_type_ = 0;
  clear_has_add_type();
}
inline ::google::protobuf::int32 DL_AddMoney::add_type() const {
  // @@protoc_insertion_point(field_get:DL_AddMoney.add_type)
  return add_type_;
}
inline void DL_AddMoney::set_add_type(::google::protobuf::int32 value) {
  set_has_add_type();
  add_type_ = value;
  // @@protoc_insertion_point(field_set:DL_AddMoney.add_type)
}

// -------------------------------------------------------------------

// LS_AddMoney

// optional int32 guid = 1;
inline bool LS_AddMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_AddMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_AddMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_AddMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LS_AddMoney::guid() const {
  // @@protoc_insertion_point(field_get:LS_AddMoney.guid)
  return guid_;
}
inline void LS_AddMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LS_AddMoney.guid)
}

// optional int32 money = 2;
inline bool LS_AddMoney::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_AddMoney::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_AddMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_AddMoney::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 LS_AddMoney::money() const {
  // @@protoc_insertion_point(field_get:LS_AddMoney.money)
  return money_;
}
inline void LS_AddMoney::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:LS_AddMoney.money)
}

// optional int32 add_type = 3;
inline bool LS_AddMoney::has_add_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LS_AddMoney::set_has_add_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LS_AddMoney::clear_has_add_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LS_AddMoney::clear_add_type() {
  add_type_ = 0;
  clear_has_add_type();
}
inline ::google::protobuf::int32 LS_AddMoney::add_type() const {
  // @@protoc_insertion_point(field_get:LS_AddMoney.add_type)
  return add_type_;
}
inline void LS_AddMoney::set_add_type(::google::protobuf::int32 value) {
  set_has_add_type();
  add_type_ = value;
  // @@protoc_insertion_point(field_set:LS_AddMoney.add_type)
}

// -------------------------------------------------------------------

// LD_AddMoney

// optional int32 guid = 1;
inline bool LD_AddMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LD_AddMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LD_AddMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LD_AddMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LD_AddMoney::guid() const {
  // @@protoc_insertion_point(field_get:LD_AddMoney.guid)
  return guid_;
}
inline void LD_AddMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LD_AddMoney.guid)
}

// optional int32 money = 2;
inline bool LD_AddMoney::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LD_AddMoney::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LD_AddMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LD_AddMoney::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 LD_AddMoney::money() const {
  // @@protoc_insertion_point(field_get:LD_AddMoney.money)
  return money_;
}
inline void LD_AddMoney::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:LD_AddMoney.money)
}

// optional int32 add_type = 3;
inline bool LD_AddMoney::has_add_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LD_AddMoney::set_has_add_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LD_AddMoney::clear_has_add_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LD_AddMoney::clear_add_type() {
  add_type_ = 0;
  clear_has_add_type();
}
inline ::google::protobuf::int32 LD_AddMoney::add_type() const {
  // @@protoc_insertion_point(field_get:LD_AddMoney.add_type)
  return add_type_;
}
inline void LD_AddMoney::set_add_type(::google::protobuf::int32 value) {
  set_has_add_type();
  add_type_ = value;
  // @@protoc_insertion_point(field_set:LD_AddMoney.add_type)
}

// -------------------------------------------------------------------

// LS_FreezeAccount

// optional int32 guid = 1;
inline bool LS_FreezeAccount::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_FreezeAccount::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_FreezeAccount::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_FreezeAccount::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 LS_FreezeAccount::guid() const {
  // @@protoc_insertion_point(field_get:LS_FreezeAccount.guid)
  return guid_;
}
inline void LS_FreezeAccount::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:LS_FreezeAccount.guid)
}

// optional int32 status = 2;
inline bool LS_FreezeAccount::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_FreezeAccount::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_FreezeAccount::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_FreezeAccount::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 LS_FreezeAccount::status() const {
  // @@protoc_insertion_point(field_get:LS_FreezeAccount.status)
  return status_;
}
inline void LS_FreezeAccount::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:LS_FreezeAccount.status)
}

// optional int32 retid = 3;
inline bool LS_FreezeAccount::has_retid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LS_FreezeAccount::set_has_retid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LS_FreezeAccount::clear_has_retid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LS_FreezeAccount::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 LS_FreezeAccount::retid() const {
  // @@protoc_insertion_point(field_get:LS_FreezeAccount.retid)
  return retid_;
}
inline void LS_FreezeAccount::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:LS_FreezeAccount.retid)
}

// optional int32 login_id = 4;
inline bool LS_FreezeAccount::has_login_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LS_FreezeAccount::set_has_login_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LS_FreezeAccount::clear_has_login_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LS_FreezeAccount::clear_login_id() {
  login_id_ = 0;
  clear_has_login_id();
}
inline ::google::protobuf::int32 LS_FreezeAccount::login_id() const {
  // @@protoc_insertion_point(field_get:LS_FreezeAccount.login_id)
  return login_id_;
}
inline void LS_FreezeAccount::set_login_id(::google::protobuf::int32 value) {
  set_has_login_id();
  login_id_ = value;
  // @@protoc_insertion_point(field_set:LS_FreezeAccount.login_id)
}

// -------------------------------------------------------------------

// SL_FreezeAccount

// optional int32 guid = 1;
inline bool SL_FreezeAccount::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SL_FreezeAccount::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SL_FreezeAccount::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SL_FreezeAccount::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SL_FreezeAccount::guid() const {
  // @@protoc_insertion_point(field_get:SL_FreezeAccount.guid)
  return guid_;
}
inline void SL_FreezeAccount::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SL_FreezeAccount.guid)
}

// optional int32 status = 2;
inline bool SL_FreezeAccount::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SL_FreezeAccount::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SL_FreezeAccount::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SL_FreezeAccount::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 SL_FreezeAccount::status() const {
  // @@protoc_insertion_point(field_get:SL_FreezeAccount.status)
  return status_;
}
inline void SL_FreezeAccount::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:SL_FreezeAccount.status)
}

// optional int32 retid = 3;
inline bool SL_FreezeAccount::has_retid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SL_FreezeAccount::set_has_retid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SL_FreezeAccount::clear_has_retid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SL_FreezeAccount::clear_retid() {
  retid_ = 0;
  clear_has_retid();
}
inline ::google::protobuf::int32 SL_FreezeAccount::retid() const {
  // @@protoc_insertion_point(field_get:SL_FreezeAccount.retid)
  return retid_;
}
inline void SL_FreezeAccount::set_retid(::google::protobuf::int32 value) {
  set_has_retid();
  retid_ = value;
  // @@protoc_insertion_point(field_set:SL_FreezeAccount.retid)
}

// optional int32 ret = 4;
inline bool SL_FreezeAccount::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SL_FreezeAccount::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SL_FreezeAccount::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SL_FreezeAccount::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 SL_FreezeAccount::ret() const {
  // @@protoc_insertion_point(field_get:SL_FreezeAccount.ret)
  return ret_;
}
inline void SL_FreezeAccount::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:SL_FreezeAccount.ret)
}

// -------------------------------------------------------------------

// WS_MaintainUpdate

// optional int32 id_index = 1;
inline bool WS_MaintainUpdate::has_id_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WS_MaintainUpdate::set_has_id_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WS_MaintainUpdate::clear_has_id_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WS_MaintainUpdate::clear_id_index() {
  id_index_ = 0;
  clear_has_id_index();
}
inline ::google::protobuf::int32 WS_MaintainUpdate::id_index() const {
  // @@protoc_insertion_point(field_get:WS_MaintainUpdate.id_index)
  return id_index_;
}
inline void WS_MaintainUpdate::set_id_index(::google::protobuf::int32 value) {
  set_has_id_index();
  id_index_ = value;
  // @@protoc_insertion_point(field_set:WS_MaintainUpdate.id_index)
}

// optional int32 first_game_type = 2;
inline bool WS_MaintainUpdate::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WS_MaintainUpdate::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WS_MaintainUpdate::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WS_MaintainUpdate::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 WS_MaintainUpdate::first_game_type() const {
  // @@protoc_insertion_point(field_get:WS_MaintainUpdate.first_game_type)
  return first_game_type_;
}
inline void WS_MaintainUpdate::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:WS_MaintainUpdate.first_game_type)
}

// optional int32 switchopen = 3;
inline bool WS_MaintainUpdate::has_switchopen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WS_MaintainUpdate::set_has_switchopen() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WS_MaintainUpdate::clear_has_switchopen() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WS_MaintainUpdate::clear_switchopen() {
  switchopen_ = 0;
  clear_has_switchopen();
}
inline ::google::protobuf::int32 WS_MaintainUpdate::switchopen() const {
  // @@protoc_insertion_point(field_get:WS_MaintainUpdate.switchopen)
  return switchopen_;
}
inline void WS_MaintainUpdate::set_switchopen(::google::protobuf::int32 value) {
  set_has_switchopen();
  switchopen_ = value;
  // @@protoc_insertion_point(field_set:WS_MaintainUpdate.switchopen)
}

// -------------------------------------------------------------------

// SW_MaintainResult

// optional int32 result = 1;
inline bool SW_MaintainResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SW_MaintainResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SW_MaintainResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SW_MaintainResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SW_MaintainResult::result() const {
  // @@protoc_insertion_point(field_get:SW_MaintainResult.result)
  return result_;
}
inline void SW_MaintainResult::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SW_MaintainResult.result)
}

// -------------------------------------------------------------------

// CS_QueryMaintain

// optional int32 maintaintype = 1;
inline bool CS_QueryMaintain::has_maintaintype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_QueryMaintain::set_has_maintaintype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_QueryMaintain::clear_has_maintaintype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_QueryMaintain::clear_maintaintype() {
  maintaintype_ = 0;
  clear_has_maintaintype();
}
inline ::google::protobuf::int32 CS_QueryMaintain::maintaintype() const {
  // @@protoc_insertion_point(field_get:CS_QueryMaintain.maintaintype)
  return maintaintype_;
}
inline void CS_QueryMaintain::set_maintaintype(::google::protobuf::int32 value) {
  set_has_maintaintype();
  maintaintype_ = value;
  // @@protoc_insertion_point(field_set:CS_QueryMaintain.maintaintype)
}

// optional int32 switchopen = 2;
inline bool CS_QueryMaintain::has_switchopen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CS_QueryMaintain::set_has_switchopen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CS_QueryMaintain::clear_has_switchopen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CS_QueryMaintain::clear_switchopen() {
  switchopen_ = 0;
  clear_has_switchopen();
}
inline ::google::protobuf::int32 CS_QueryMaintain::switchopen() const {
  // @@protoc_insertion_point(field_get:CS_QueryMaintain.switchopen)
  return switchopen_;
}
inline void CS_QueryMaintain::set_switchopen(::google::protobuf::int32 value) {
  set_has_switchopen();
  switchopen_ = value;
  // @@protoc_insertion_point(field_set:CS_QueryMaintain.switchopen)
}

// optional int32 first_game_type = 3;
inline bool CS_QueryMaintain::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CS_QueryMaintain::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CS_QueryMaintain::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CS_QueryMaintain::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 CS_QueryMaintain::first_game_type() const {
  // @@protoc_insertion_point(field_get:CS_QueryMaintain.first_game_type)
  return first_game_type_;
}
inline void CS_QueryMaintain::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:CS_QueryMaintain.first_game_type)
}

// -------------------------------------------------------------------

// GF_PlayerIn

// optional int32 guid = 1;
inline bool GF_PlayerIn::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GF_PlayerIn::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GF_PlayerIn::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GF_PlayerIn::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 GF_PlayerIn::guid() const {
  // @@protoc_insertion_point(field_get:GF_PlayerIn.guid)
  return guid_;
}
inline void GF_PlayerIn::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GF_PlayerIn.guid)
}

// -------------------------------------------------------------------

// GF_PlayerOut

// optional int32 guid = 1;
inline bool GF_PlayerOut::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GF_PlayerOut::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GF_PlayerOut::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GF_PlayerOut::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 GF_PlayerOut::guid() const {
  // @@protoc_insertion_point(field_get:GF_PlayerOut.guid)
  return guid_;
}
inline void GF_PlayerOut::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GF_PlayerOut.guid)
}

// -------------------------------------------------------------------

// WF_ChangeRobotCfg

// optional int32 game_id = 1;
inline bool WF_ChangeRobotCfg::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WF_ChangeRobotCfg::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WF_ChangeRobotCfg::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WF_ChangeRobotCfg::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 WF_ChangeRobotCfg::game_id() const {
  // @@protoc_insertion_point(field_get:WF_ChangeRobotCfg.game_id)
  return game_id_;
}
inline void WF_ChangeRobotCfg::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:WF_ChangeRobotCfg.game_id)
}

// optional string cfg_param = 2;
inline bool WF_ChangeRobotCfg::has_cfg_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WF_ChangeRobotCfg::set_has_cfg_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WF_ChangeRobotCfg::clear_has_cfg_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WF_ChangeRobotCfg::clear_cfg_param() {
  cfg_param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cfg_param();
}
inline const ::std::string& WF_ChangeRobotCfg::cfg_param() const {
  // @@protoc_insertion_point(field_get:WF_ChangeRobotCfg.cfg_param)
  return cfg_param_.GetNoArena();
}
inline void WF_ChangeRobotCfg::set_cfg_param(const ::std::string& value) {
  set_has_cfg_param();
  cfg_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WF_ChangeRobotCfg.cfg_param)
}
#if LANG_CXX11
inline void WF_ChangeRobotCfg::set_cfg_param(::std::string&& value) {
  set_has_cfg_param();
  cfg_param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WF_ChangeRobotCfg.cfg_param)
}
#endif
inline void WF_ChangeRobotCfg::set_cfg_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cfg_param();
  cfg_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WF_ChangeRobotCfg.cfg_param)
}
inline void WF_ChangeRobotCfg::set_cfg_param(const char* value, size_t size) {
  set_has_cfg_param();
  cfg_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WF_ChangeRobotCfg.cfg_param)
}
inline ::std::string* WF_ChangeRobotCfg::mutable_cfg_param() {
  set_has_cfg_param();
  // @@protoc_insertion_point(field_mutable:WF_ChangeRobotCfg.cfg_param)
  return cfg_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WF_ChangeRobotCfg::release_cfg_param() {
  // @@protoc_insertion_point(field_release:WF_ChangeRobotCfg.cfg_param)
  clear_has_cfg_param();
  return cfg_param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WF_ChangeRobotCfg::set_allocated_cfg_param(::std::string* cfg_param) {
  if (cfg_param != NULL) {
    set_has_cfg_param();
  } else {
    clear_has_cfg_param();
  }
  cfg_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cfg_param);
  // @@protoc_insertion_point(field_set_allocated:WF_ChangeRobotCfg.cfg_param)
}

// -------------------------------------------------------------------

// FW_ChangeRobotCfg

// optional int32 result = 1;
inline bool FW_ChangeRobotCfg::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FW_ChangeRobotCfg::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FW_ChangeRobotCfg::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FW_ChangeRobotCfg::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 FW_ChangeRobotCfg::result() const {
  // @@protoc_insertion_point(field_get:FW_ChangeRobotCfg.result)
  return result_;
}
inline void FW_ChangeRobotCfg::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:FW_ChangeRobotCfg.result)
}

// -------------------------------------------------------------------

// FS_ChangeRobotCfg

// optional string cfg_param = 1;
inline bool FS_ChangeRobotCfg::has_cfg_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FS_ChangeRobotCfg::set_has_cfg_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FS_ChangeRobotCfg::clear_has_cfg_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FS_ChangeRobotCfg::clear_cfg_param() {
  cfg_param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cfg_param();
}
inline const ::std::string& FS_ChangeRobotCfg::cfg_param() const {
  // @@protoc_insertion_point(field_get:FS_ChangeRobotCfg.cfg_param)
  return cfg_param_.GetNoArena();
}
inline void FS_ChangeRobotCfg::set_cfg_param(const ::std::string& value) {
  set_has_cfg_param();
  cfg_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FS_ChangeRobotCfg.cfg_param)
}
#if LANG_CXX11
inline void FS_ChangeRobotCfg::set_cfg_param(::std::string&& value) {
  set_has_cfg_param();
  cfg_param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FS_ChangeRobotCfg.cfg_param)
}
#endif
inline void FS_ChangeRobotCfg::set_cfg_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cfg_param();
  cfg_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FS_ChangeRobotCfg.cfg_param)
}
inline void FS_ChangeRobotCfg::set_cfg_param(const char* value, size_t size) {
  set_has_cfg_param();
  cfg_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FS_ChangeRobotCfg.cfg_param)
}
inline ::std::string* FS_ChangeRobotCfg::mutable_cfg_param() {
  set_has_cfg_param();
  // @@protoc_insertion_point(field_mutable:FS_ChangeRobotCfg.cfg_param)
  return cfg_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FS_ChangeRobotCfg::release_cfg_param() {
  // @@protoc_insertion_point(field_release:FS_ChangeRobotCfg.cfg_param)
  clear_has_cfg_param();
  return cfg_param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FS_ChangeRobotCfg::set_allocated_cfg_param(::std::string* cfg_param) {
  if (cfg_param != NULL) {
    set_has_cfg_param();
  } else {
    clear_has_cfg_param();
  }
  cfg_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cfg_param);
  // @@protoc_insertion_point(field_set_allocated:FS_ChangeRobotCfg.cfg_param)
}

// -------------------------------------------------------------------

// SD_QueryRobotCfg

// optional int32 game_id = 1;
inline bool SD_QueryRobotCfg::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_QueryRobotCfg::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_QueryRobotCfg::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_QueryRobotCfg::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 SD_QueryRobotCfg::game_id() const {
  // @@protoc_insertion_point(field_get:SD_QueryRobotCfg.game_id)
  return game_id_;
}
inline void SD_QueryRobotCfg::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SD_QueryRobotCfg.game_id)
}

// -------------------------------------------------------------------

// DS_QueryRobotCfg

// optional int32 game_id = 1;
inline bool DS_QueryRobotCfg::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_QueryRobotCfg::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_QueryRobotCfg::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_QueryRobotCfg::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 DS_QueryRobotCfg::game_id() const {
  // @@protoc_insertion_point(field_get:DS_QueryRobotCfg.game_id)
  return game_id_;
}
inline void DS_QueryRobotCfg::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:DS_QueryRobotCfg.game_id)
}

// optional int32 use_robot = 2;
inline bool DS_QueryRobotCfg::has_use_robot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_QueryRobotCfg::set_has_use_robot() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_QueryRobotCfg::clear_has_use_robot() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_QueryRobotCfg::clear_use_robot() {
  use_robot_ = 0;
  clear_has_use_robot();
}
inline ::google::protobuf::int32 DS_QueryRobotCfg::use_robot() const {
  // @@protoc_insertion_point(field_get:DS_QueryRobotCfg.use_robot)
  return use_robot_;
}
inline void DS_QueryRobotCfg::set_use_robot(::google::protobuf::int32 value) {
  set_has_use_robot();
  use_robot_ = value;
  // @@protoc_insertion_point(field_set:DS_QueryRobotCfg.use_robot)
}

// optional int32 storage = 3;
inline bool DS_QueryRobotCfg::has_storage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DS_QueryRobotCfg::set_has_storage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DS_QueryRobotCfg::clear_has_storage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DS_QueryRobotCfg::clear_storage() {
  storage_ = 0;
  clear_has_storage();
}
inline ::google::protobuf::int32 DS_QueryRobotCfg::storage() const {
  // @@protoc_insertion_point(field_get:DS_QueryRobotCfg.storage)
  return storage_;
}
inline void DS_QueryRobotCfg::set_storage(::google::protobuf::int32 value) {
  set_has_storage();
  storage_ = value;
  // @@protoc_insertion_point(field_set:DS_QueryRobotCfg.storage)
}

// optional int32 robot_level = 4;
inline bool DS_QueryRobotCfg::has_robot_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DS_QueryRobotCfg::set_has_robot_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DS_QueryRobotCfg::clear_has_robot_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DS_QueryRobotCfg::clear_robot_level() {
  robot_level_ = 0;
  clear_has_robot_level();
}
inline ::google::protobuf::int32 DS_QueryRobotCfg::robot_level() const {
  // @@protoc_insertion_point(field_get:DS_QueryRobotCfg.robot_level)
  return robot_level_;
}
inline void DS_QueryRobotCfg::set_robot_level(::google::protobuf::int32 value) {
  set_has_robot_level();
  robot_level_ = value;
  // @@protoc_insertion_point(field_set:DS_QueryRobotCfg.robot_level)
}

// -------------------------------------------------------------------

// SD_Save_Storage

// optional int32 game_id = 1;
inline bool SD_Save_Storage::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_Save_Storage::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_Save_Storage::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_Save_Storage::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 SD_Save_Storage::game_id() const {
  // @@protoc_insertion_point(field_get:SD_Save_Storage.game_id)
  return game_id_;
}
inline void SD_Save_Storage::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SD_Save_Storage.game_id)
}

// optional int32 storage = 2;
inline bool SD_Save_Storage::has_storage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_Save_Storage::set_has_storage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_Save_Storage::clear_has_storage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_Save_Storage::clear_storage() {
  storage_ = 0;
  clear_has_storage();
}
inline ::google::protobuf::int32 SD_Save_Storage::storage() const {
  // @@protoc_insertion_point(field_get:SD_Save_Storage.storage)
  return storage_;
}
inline void SD_Save_Storage::set_storage(::google::protobuf::int32 value) {
  set_has_storage();
  storage_ = value;
  // @@protoc_insertion_point(field_set:SD_Save_Storage.storage)
}

// -------------------------------------------------------------------

// SD_Agent_CashMoney

// optional int32 guid = 1;
inline bool SD_Agent_CashMoney::has_guid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SD_Agent_CashMoney::set_has_guid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SD_Agent_CashMoney::clear_has_guid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SD_Agent_CashMoney::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_Agent_CashMoney::guid() const {
  // @@protoc_insertion_point(field_get:SD_Agent_CashMoney.guid)
  return guid_;
}
inline void SD_Agent_CashMoney::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_Agent_CashMoney.guid)
}

// optional int32 agent_id = 2;
inline bool SD_Agent_CashMoney::has_agent_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SD_Agent_CashMoney::set_has_agent_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SD_Agent_CashMoney::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SD_Agent_CashMoney::clear_agent_id() {
  agent_id_ = 0;
  clear_has_agent_id();
}
inline ::google::protobuf::int32 SD_Agent_CashMoney::agent_id() const {
  // @@protoc_insertion_point(field_get:SD_Agent_CashMoney.agent_id)
  return agent_id_;
}
inline void SD_Agent_CashMoney::set_agent_id(::google::protobuf::int32 value) {
  set_has_agent_id();
  agent_id_ = value;
  // @@protoc_insertion_point(field_set:SD_Agent_CashMoney.agent_id)
}

// optional int32 money = 3;
inline bool SD_Agent_CashMoney::has_money() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SD_Agent_CashMoney::set_has_money() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SD_Agent_CashMoney::clear_has_money() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SD_Agent_CashMoney::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 SD_Agent_CashMoney::money() const {
  // @@protoc_insertion_point(field_get:SD_Agent_CashMoney.money)
  return money_;
}
inline void SD_Agent_CashMoney::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:SD_Agent_CashMoney.money)
}

// optional int32 coins = 4;
inline bool SD_Agent_CashMoney::has_coins() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SD_Agent_CashMoney::set_has_coins() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SD_Agent_CashMoney::clear_has_coins() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SD_Agent_CashMoney::clear_coins() {
  coins_ = 0;
  clear_has_coins();
}
inline ::google::protobuf::int32 SD_Agent_CashMoney::coins() const {
  // @@protoc_insertion_point(field_get:SD_Agent_CashMoney.coins)
  return coins_;
}
inline void SD_Agent_CashMoney::set_coins(::google::protobuf::int32 value) {
  set_has_coins();
  coins_ = value;
  // @@protoc_insertion_point(field_set:SD_Agent_CashMoney.coins)
}

// optional int32 pay_money = 5;
inline bool SD_Agent_CashMoney::has_pay_money() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SD_Agent_CashMoney::set_has_pay_money() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SD_Agent_CashMoney::clear_has_pay_money() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SD_Agent_CashMoney::clear_pay_money() {
  pay_money_ = 0;
  clear_has_pay_money();
}
inline ::google::protobuf::int32 SD_Agent_CashMoney::pay_money() const {
  // @@protoc_insertion_point(field_get:SD_Agent_CashMoney.pay_money)
  return pay_money_;
}
inline void SD_Agent_CashMoney::set_pay_money(::google::protobuf::int32 value) {
  set_has_pay_money();
  pay_money_ = value;
  // @@protoc_insertion_point(field_set:SD_Agent_CashMoney.pay_money)
}

// optional string phone = 6;
inline bool SD_Agent_CashMoney::has_phone() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_Agent_CashMoney::set_has_phone() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_Agent_CashMoney::clear_has_phone() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_Agent_CashMoney::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
inline const ::std::string& SD_Agent_CashMoney::phone() const {
  // @@protoc_insertion_point(field_get:SD_Agent_CashMoney.phone)
  return phone_.GetNoArena();
}
inline void SD_Agent_CashMoney::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_Agent_CashMoney.phone)
}
#if LANG_CXX11
inline void SD_Agent_CashMoney::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_Agent_CashMoney.phone)
}
#endif
inline void SD_Agent_CashMoney::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_Agent_CashMoney.phone)
}
inline void SD_Agent_CashMoney::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_Agent_CashMoney.phone)
}
inline ::std::string* SD_Agent_CashMoney::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:SD_Agent_CashMoney.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_Agent_CashMoney::release_phone() {
  // @@protoc_insertion_point(field_release:SD_Agent_CashMoney.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_Agent_CashMoney::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:SD_Agent_CashMoney.phone)
}

// optional string phone_type = 7;
inline bool SD_Agent_CashMoney::has_phone_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_Agent_CashMoney::set_has_phone_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_Agent_CashMoney::clear_has_phone_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_Agent_CashMoney::clear_phone_type() {
  phone_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone_type();
}
inline const ::std::string& SD_Agent_CashMoney::phone_type() const {
  // @@protoc_insertion_point(field_get:SD_Agent_CashMoney.phone_type)
  return phone_type_.GetNoArena();
}
inline void SD_Agent_CashMoney::set_phone_type(const ::std::string& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_Agent_CashMoney.phone_type)
}
#if LANG_CXX11
inline void SD_Agent_CashMoney::set_phone_type(::std::string&& value) {
  set_has_phone_type();
  phone_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_Agent_CashMoney.phone_type)
}
#endif
inline void SD_Agent_CashMoney::set_phone_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_Agent_CashMoney.phone_type)
}
inline void SD_Agent_CashMoney::set_phone_type(const char* value, size_t size) {
  set_has_phone_type();
  phone_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_Agent_CashMoney.phone_type)
}
inline ::std::string* SD_Agent_CashMoney::mutable_phone_type() {
  set_has_phone_type();
  // @@protoc_insertion_point(field_mutable:SD_Agent_CashMoney.phone_type)
  return phone_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_Agent_CashMoney::release_phone_type() {
  // @@protoc_insertion_point(field_release:SD_Agent_CashMoney.phone_type)
  clear_has_phone_type();
  return phone_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_Agent_CashMoney::set_allocated_phone_type(::std::string* phone_type) {
  if (phone_type != NULL) {
    set_has_phone_type();
  } else {
    clear_has_phone_type();
  }
  phone_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_type);
  // @@protoc_insertion_point(field_set_allocated:SD_Agent_CashMoney.phone_type)
}

// optional string ip = 8;
inline bool SD_Agent_CashMoney::has_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_Agent_CashMoney::set_has_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_Agent_CashMoney::clear_has_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_Agent_CashMoney::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& SD_Agent_CashMoney::ip() const {
  // @@protoc_insertion_point(field_get:SD_Agent_CashMoney.ip)
  return ip_.GetNoArena();
}
inline void SD_Agent_CashMoney::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_Agent_CashMoney.ip)
}
#if LANG_CXX11
inline void SD_Agent_CashMoney::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_Agent_CashMoney.ip)
}
#endif
inline void SD_Agent_CashMoney::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_Agent_CashMoney.ip)
}
inline void SD_Agent_CashMoney::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_Agent_CashMoney.ip)
}
inline ::std::string* SD_Agent_CashMoney::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:SD_Agent_CashMoney.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_Agent_CashMoney::release_ip() {
  // @@protoc_insertion_point(field_release:SD_Agent_CashMoney.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_Agent_CashMoney::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:SD_Agent_CashMoney.ip)
}

// optional string bag_id = 9;
inline bool SD_Agent_CashMoney::has_bag_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SD_Agent_CashMoney::set_has_bag_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SD_Agent_CashMoney::clear_has_bag_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SD_Agent_CashMoney::clear_bag_id() {
  bag_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bag_id();
}
inline const ::std::string& SD_Agent_CashMoney::bag_id() const {
  // @@protoc_insertion_point(field_get:SD_Agent_CashMoney.bag_id)
  return bag_id_.GetNoArena();
}
inline void SD_Agent_CashMoney::set_bag_id(const ::std::string& value) {
  set_has_bag_id();
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SD_Agent_CashMoney.bag_id)
}
#if LANG_CXX11
inline void SD_Agent_CashMoney::set_bag_id(::std::string&& value) {
  set_has_bag_id();
  bag_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SD_Agent_CashMoney.bag_id)
}
#endif
inline void SD_Agent_CashMoney::set_bag_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bag_id();
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SD_Agent_CashMoney.bag_id)
}
inline void SD_Agent_CashMoney::set_bag_id(const char* value, size_t size) {
  set_has_bag_id();
  bag_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SD_Agent_CashMoney.bag_id)
}
inline ::std::string* SD_Agent_CashMoney::mutable_bag_id() {
  set_has_bag_id();
  // @@protoc_insertion_point(field_mutable:SD_Agent_CashMoney.bag_id)
  return bag_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SD_Agent_CashMoney::release_bag_id() {
  // @@protoc_insertion_point(field_release:SD_Agent_CashMoney.bag_id)
  clear_has_bag_id();
  return bag_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SD_Agent_CashMoney::set_allocated_bag_id(::std::string* bag_id) {
  if (bag_id != NULL) {
    set_has_bag_id();
  } else {
    clear_has_bag_id();
  }
  bag_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bag_id);
  // @@protoc_insertion_point(field_set_allocated:SD_Agent_CashMoney.bag_id)
}

// optional int64 bef_money = 10;
inline bool SD_Agent_CashMoney::has_bef_money() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SD_Agent_CashMoney::set_has_bef_money() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SD_Agent_CashMoney::clear_has_bef_money() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SD_Agent_CashMoney::clear_bef_money() {
  bef_money_ = GOOGLE_LONGLONG(0);
  clear_has_bef_money();
}
inline ::google::protobuf::int64 SD_Agent_CashMoney::bef_money() const {
  // @@protoc_insertion_point(field_get:SD_Agent_CashMoney.bef_money)
  return bef_money_;
}
inline void SD_Agent_CashMoney::set_bef_money(::google::protobuf::int64 value) {
  set_has_bef_money();
  bef_money_ = value;
  // @@protoc_insertion_point(field_set:SD_Agent_CashMoney.bef_money)
}

// optional int64 aft_money = 11;
inline bool SD_Agent_CashMoney::has_aft_money() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SD_Agent_CashMoney::set_has_aft_money() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SD_Agent_CashMoney::clear_has_aft_money() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SD_Agent_CashMoney::clear_aft_money() {
  aft_money_ = GOOGLE_LONGLONG(0);
  clear_has_aft_money();
}
inline ::google::protobuf::int64 SD_Agent_CashMoney::aft_money() const {
  // @@protoc_insertion_point(field_get:SD_Agent_CashMoney.aft_money)
  return aft_money_;
}
inline void SD_Agent_CashMoney::set_aft_money(::google::protobuf::int64 value) {
  set_has_aft_money();
  aft_money_ = value;
  // @@protoc_insertion_point(field_set:SD_Agent_CashMoney.aft_money)
}

// optional int64 bef_bank = 12;
inline bool SD_Agent_CashMoney::has_bef_bank() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SD_Agent_CashMoney::set_has_bef_bank() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SD_Agent_CashMoney::clear_has_bef_bank() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SD_Agent_CashMoney::clear_bef_bank() {
  bef_bank_ = GOOGLE_LONGLONG(0);
  clear_has_bef_bank();
}
inline ::google::protobuf::int64 SD_Agent_CashMoney::bef_bank() const {
  // @@protoc_insertion_point(field_get:SD_Agent_CashMoney.bef_bank)
  return bef_bank_;
}
inline void SD_Agent_CashMoney::set_bef_bank(::google::protobuf::int64 value) {
  set_has_bef_bank();
  bef_bank_ = value;
  // @@protoc_insertion_point(field_set:SD_Agent_CashMoney.bef_bank)
}

// optional int64 aft_bank = 13;
inline bool SD_Agent_CashMoney::has_aft_bank() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SD_Agent_CashMoney::set_has_aft_bank() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SD_Agent_CashMoney::clear_has_aft_bank() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SD_Agent_CashMoney::clear_aft_bank() {
  aft_bank_ = GOOGLE_LONGLONG(0);
  clear_has_aft_bank();
}
inline ::google::protobuf::int64 SD_Agent_CashMoney::aft_bank() const {
  // @@protoc_insertion_point(field_get:SD_Agent_CashMoney.aft_bank)
  return aft_bank_;
}
inline void SD_Agent_CashMoney::set_aft_bank(::google::protobuf::int64 value) {
  set_has_aft_bank();
  aft_bank_ = value;
  // @@protoc_insertion_point(field_set:SD_Agent_CashMoney.aft_bank)
}

// -------------------------------------------------------------------

// SD_UpdateGameTotalTax

// optional int32 game_id = 1;
inline bool SD_UpdateGameTotalTax::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_UpdateGameTotalTax::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_UpdateGameTotalTax::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_UpdateGameTotalTax::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 SD_UpdateGameTotalTax::game_id() const {
  // @@protoc_insertion_point(field_get:SD_UpdateGameTotalTax.game_id)
  return game_id_;
}
inline void SD_UpdateGameTotalTax::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SD_UpdateGameTotalTax.game_id)
}

// optional int32 first_game_type = 2;
inline bool SD_UpdateGameTotalTax::has_first_game_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_UpdateGameTotalTax::set_has_first_game_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_UpdateGameTotalTax::clear_has_first_game_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_UpdateGameTotalTax::clear_first_game_type() {
  first_game_type_ = 0;
  clear_has_first_game_type();
}
inline ::google::protobuf::int32 SD_UpdateGameTotalTax::first_game_type() const {
  // @@protoc_insertion_point(field_get:SD_UpdateGameTotalTax.first_game_type)
  return first_game_type_;
}
inline void SD_UpdateGameTotalTax::set_first_game_type(::google::protobuf::int32 value) {
  set_has_first_game_type();
  first_game_type_ = value;
  // @@protoc_insertion_point(field_set:SD_UpdateGameTotalTax.first_game_type)
}

// optional int32 second_game_type = 3;
inline bool SD_UpdateGameTotalTax::has_second_game_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SD_UpdateGameTotalTax::set_has_second_game_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SD_UpdateGameTotalTax::clear_has_second_game_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SD_UpdateGameTotalTax::clear_second_game_type() {
  second_game_type_ = 0;
  clear_has_second_game_type();
}
inline ::google::protobuf::int32 SD_UpdateGameTotalTax::second_game_type() const {
  // @@protoc_insertion_point(field_get:SD_UpdateGameTotalTax.second_game_type)
  return second_game_type_;
}
inline void SD_UpdateGameTotalTax::set_second_game_type(::google::protobuf::int32 value) {
  set_has_second_game_type();
  second_game_type_ = value;
  // @@protoc_insertion_point(field_set:SD_UpdateGameTotalTax.second_game_type)
}

// optional int32 tax_add = 4;
inline bool SD_UpdateGameTotalTax::has_tax_add() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SD_UpdateGameTotalTax::set_has_tax_add() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SD_UpdateGameTotalTax::clear_has_tax_add() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SD_UpdateGameTotalTax::clear_tax_add() {
  tax_add_ = 0;
  clear_has_tax_add();
}
inline ::google::protobuf::int32 SD_UpdateGameTotalTax::tax_add() const {
  // @@protoc_insertion_point(field_get:SD_UpdateGameTotalTax.tax_add)
  return tax_add_;
}
inline void SD_UpdateGameTotalTax::set_tax_add(::google::protobuf::int32 value) {
  set_has_tax_add();
  tax_add_ = value;
  // @@protoc_insertion_point(field_set:SD_UpdateGameTotalTax.tax_add)
}

// -------------------------------------------------------------------

// WF_Cash_false

// optional int32 id = 1;
inline bool WF_Cash_false::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WF_Cash_false::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WF_Cash_false::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WF_Cash_false::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WF_Cash_false::id() const {
  // @@protoc_insertion_point(field_get:WF_Cash_false.id)
  return id_;
}
inline void WF_Cash_false::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:WF_Cash_false.id)
}

// optional int32 order_id = 2;
inline bool WF_Cash_false::has_order_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WF_Cash_false::set_has_order_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WF_Cash_false::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WF_Cash_false::clear_order_id() {
  order_id_ = 0;
  clear_has_order_id();
}
inline ::google::protobuf::int32 WF_Cash_false::order_id() const {
  // @@protoc_insertion_point(field_get:WF_Cash_false.order_id)
  return order_id_;
}
inline void WF_Cash_false::set_order_id(::google::protobuf::int32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:WF_Cash_false.order_id)
}

// optional int32 reason = 3;
inline bool WF_Cash_false::has_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WF_Cash_false::set_has_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WF_Cash_false::clear_has_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WF_Cash_false::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::google::protobuf::int32 WF_Cash_false::reason() const {
  // @@protoc_insertion_point(field_get:WF_Cash_false.reason)
  return reason_;
}
inline void WF_Cash_false::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:WF_Cash_false.reason)
}

// -------------------------------------------------------------------

// FS_Black_List

// repeated int32 black_list = 1;
inline int FS_Black_List::black_list_size() const {
  return black_list_.size();
}
inline void FS_Black_List::clear_black_list() {
  black_list_.Clear();
}
inline ::google::protobuf::int32 FS_Black_List::black_list(int index) const {
  // @@protoc_insertion_point(field_get:FS_Black_List.black_list)
  return black_list_.Get(index);
}
inline void FS_Black_List::set_black_list(int index, ::google::protobuf::int32 value) {
  black_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:FS_Black_List.black_list)
}
inline void FS_Black_List::add_black_list(::google::protobuf::int32 value) {
  black_list_.Add(value);
  // @@protoc_insertion_point(field_add:FS_Black_List.black_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
FS_Black_List::black_list() const {
  // @@protoc_insertion_point(field_list:FS_Black_List.black_list)
  return black_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
FS_Black_List::mutable_black_list() {
  // @@protoc_insertion_point(field_mutable_list:FS_Black_List.black_list)
  return &black_list_;
}

// repeated string game_list = 2;
inline int FS_Black_List::game_list_size() const {
  return game_list_.size();
}
inline void FS_Black_List::clear_game_list() {
  game_list_.Clear();
}
inline const ::std::string& FS_Black_List::game_list(int index) const {
  // @@protoc_insertion_point(field_get:FS_Black_List.game_list)
  return game_list_.Get(index);
}
inline ::std::string* FS_Black_List::mutable_game_list(int index) {
  // @@protoc_insertion_point(field_mutable:FS_Black_List.game_list)
  return game_list_.Mutable(index);
}
inline void FS_Black_List::set_game_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:FS_Black_List.game_list)
  game_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void FS_Black_List::set_game_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:FS_Black_List.game_list)
  game_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void FS_Black_List::set_game_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  game_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:FS_Black_List.game_list)
}
inline void FS_Black_List::set_game_list(int index, const char* value, size_t size) {
  game_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FS_Black_List.game_list)
}
inline ::std::string* FS_Black_List::add_game_list() {
  // @@protoc_insertion_point(field_add_mutable:FS_Black_List.game_list)
  return game_list_.Add();
}
inline void FS_Black_List::add_game_list(const ::std::string& value) {
  game_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:FS_Black_List.game_list)
}
#if LANG_CXX11
inline void FS_Black_List::add_game_list(::std::string&& value) {
  game_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:FS_Black_List.game_list)
}
#endif
inline void FS_Black_List::add_game_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  game_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:FS_Black_List.game_list)
}
inline void FS_Black_List::add_game_list(const char* value, size_t size) {
  game_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:FS_Black_List.game_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FS_Black_List::game_list() const {
  // @@protoc_insertion_point(field_list:FS_Black_List.game_list)
  return game_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FS_Black_List::mutable_game_list() {
  // @@protoc_insertion_point(field_mutable_list:FS_Black_List.game_list)
  return &game_list_;
}

// -------------------------------------------------------------------

// SD_BindBankCard

// optional .BankCardInfo info = 1;
inline bool SD_BindBankCard::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_BindBankCard::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_BindBankCard::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_BindBankCard::clear_info() {
  if (info_ != NULL) info_->::BankCardInfo::Clear();
  clear_has_info();
}
inline const ::BankCardInfo& SD_BindBankCard::info() const {
  // @@protoc_insertion_point(field_get:SD_BindBankCard.info)
  return info_ != NULL ? *info_
                         : *::BankCardInfo::internal_default_instance();
}
inline ::BankCardInfo* SD_BindBankCard::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::BankCardInfo;
  }
  // @@protoc_insertion_point(field_mutable:SD_BindBankCard.info)
  return info_;
}
inline ::BankCardInfo* SD_BindBankCard::release_info() {
  // @@protoc_insertion_point(field_release:SD_BindBankCard.info)
  clear_has_info();
  ::BankCardInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void SD_BindBankCard::set_allocated_info(::BankCardInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:SD_BindBankCard.info)
}

// -------------------------------------------------------------------

// DS_BindBankCard

// optional int32 result = 1;
inline bool DS_BindBankCard::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_BindBankCard::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_BindBankCard::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_BindBankCard::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DS_BindBankCard::result() const {
  // @@protoc_insertion_point(field_get:DS_BindBankCard.result)
  return result_;
}
inline void DS_BindBankCard::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DS_BindBankCard.result)
}

// optional int32 guid = 2;
inline bool DS_BindBankCard::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_BindBankCard::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_BindBankCard::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_BindBankCard::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_BindBankCard::guid() const {
  // @@protoc_insertion_point(field_get:DS_BindBankCard.guid)
  return guid_;
}
inline void DS_BindBankCard::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_BindBankCard.guid)
}

// -------------------------------------------------------------------

// SD_GetBankCardInfo

// optional int32 guid = 1;
inline bool SD_GetBankCardInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_GetBankCardInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_GetBankCardInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_GetBankCardInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_GetBankCardInfo::guid() const {
  // @@protoc_insertion_point(field_get:SD_GetBankCardInfo.guid)
  return guid_;
}
inline void SD_GetBankCardInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_GetBankCardInfo.guid)
}

// -------------------------------------------------------------------

// DS_GetBankCardInfo

// optional .BankCardInfo info = 1;
inline bool DS_GetBankCardInfo::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_GetBankCardInfo::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_GetBankCardInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_GetBankCardInfo::clear_info() {
  if (info_ != NULL) info_->::BankCardInfo::Clear();
  clear_has_info();
}
inline const ::BankCardInfo& DS_GetBankCardInfo::info() const {
  // @@protoc_insertion_point(field_get:DS_GetBankCardInfo.info)
  return info_ != NULL ? *info_
                         : *::BankCardInfo::internal_default_instance();
}
inline ::BankCardInfo* DS_GetBankCardInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::BankCardInfo;
  }
  // @@protoc_insertion_point(field_mutable:DS_GetBankCardInfo.info)
  return info_;
}
inline ::BankCardInfo* DS_GetBankCardInfo::release_info() {
  // @@protoc_insertion_point(field_release:DS_GetBankCardInfo.info)
  clear_has_info();
  ::BankCardInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void DS_GetBankCardInfo::set_allocated_info(::BankCardInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:DS_GetBankCardInfo.info)
}

// -------------------------------------------------------------------

// ClientChannelInfo

// optional string channel = 1;
inline bool ClientChannelInfo::has_channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientChannelInfo::set_has_channel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientChannelInfo::clear_has_channel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientChannelInfo::clear_channel() {
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel();
}
inline const ::std::string& ClientChannelInfo::channel() const {
  // @@protoc_insertion_point(field_get:ClientChannelInfo.channel)
  return channel_.GetNoArena();
}
inline void ClientChannelInfo::set_channel(const ::std::string& value) {
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClientChannelInfo.channel)
}
#if LANG_CXX11
inline void ClientChannelInfo::set_channel(::std::string&& value) {
  set_has_channel();
  channel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClientChannelInfo.channel)
}
#endif
inline void ClientChannelInfo::set_channel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClientChannelInfo.channel)
}
inline void ClientChannelInfo::set_channel(const char* value, size_t size) {
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClientChannelInfo.channel)
}
inline ::std::string* ClientChannelInfo::mutable_channel() {
  set_has_channel();
  // @@protoc_insertion_point(field_mutable:ClientChannelInfo.channel)
  return channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientChannelInfo::release_channel() {
  // @@protoc_insertion_point(field_release:ClientChannelInfo.channel)
  clear_has_channel();
  return channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientChannelInfo::set_allocated_channel(::std::string* channel) {
  if (channel != NULL) {
    set_has_channel();
  } else {
    clear_has_channel();
  }
  channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel);
  // @@protoc_insertion_point(field_set_allocated:ClientChannelInfo.channel)
}

// repeated int32 open_server_list = 2;
inline int ClientChannelInfo::open_server_list_size() const {
  return open_server_list_.size();
}
inline void ClientChannelInfo::clear_open_server_list() {
  open_server_list_.Clear();
}
inline ::google::protobuf::int32 ClientChannelInfo::open_server_list(int index) const {
  // @@protoc_insertion_point(field_get:ClientChannelInfo.open_server_list)
  return open_server_list_.Get(index);
}
inline void ClientChannelInfo::set_open_server_list(int index, ::google::protobuf::int32 value) {
  open_server_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:ClientChannelInfo.open_server_list)
}
inline void ClientChannelInfo::add_open_server_list(::google::protobuf::int32 value) {
  open_server_list_.Add(value);
  // @@protoc_insertion_point(field_add:ClientChannelInfo.open_server_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientChannelInfo::open_server_list() const {
  // @@protoc_insertion_point(field_list:ClientChannelInfo.open_server_list)
  return open_server_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientChannelInfo::mutable_open_server_list() {
  // @@protoc_insertion_point(field_mutable_list:ClientChannelInfo.open_server_list)
  return &open_server_list_;
}

// -------------------------------------------------------------------

// FG_ClientChannelInfo

// repeated .ClientChannelInfo info = 1;
inline int FG_ClientChannelInfo::info_size() const {
  return info_.size();
}
inline void FG_ClientChannelInfo::clear_info() {
  info_.Clear();
}
inline const ::ClientChannelInfo& FG_ClientChannelInfo::info(int index) const {
  // @@protoc_insertion_point(field_get:FG_ClientChannelInfo.info)
  return info_.Get(index);
}
inline ::ClientChannelInfo* FG_ClientChannelInfo::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:FG_ClientChannelInfo.info)
  return info_.Mutable(index);
}
inline ::ClientChannelInfo* FG_ClientChannelInfo::add_info() {
  // @@protoc_insertion_point(field_add:FG_ClientChannelInfo.info)
  return info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ClientChannelInfo >*
FG_ClientChannelInfo::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:FG_ClientChannelInfo.info)
  return &info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ClientChannelInfo >&
FG_ClientChannelInfo::info() const {
  // @@protoc_insertion_point(field_list:FG_ClientChannelInfo.info)
  return info_;
}

// -------------------------------------------------------------------

// WL_LuaGameCmd

// optional int32 gameid = 1;
inline bool WL_LuaGameCmd::has_gameid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WL_LuaGameCmd::set_has_gameid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WL_LuaGameCmd::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WL_LuaGameCmd::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 WL_LuaGameCmd::gameid() const {
  // @@protoc_insertion_point(field_get:WL_LuaGameCmd.gameid)
  return gameid_;
}
inline void WL_LuaGameCmd::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:WL_LuaGameCmd.gameid)
}

// optional string cmd = 2;
inline bool WL_LuaGameCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WL_LuaGameCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WL_LuaGameCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WL_LuaGameCmd::clear_cmd() {
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmd();
}
inline const ::std::string& WL_LuaGameCmd::cmd() const {
  // @@protoc_insertion_point(field_get:WL_LuaGameCmd.cmd)
  return cmd_.GetNoArena();
}
inline void WL_LuaGameCmd::set_cmd(const ::std::string& value) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WL_LuaGameCmd.cmd)
}
#if LANG_CXX11
inline void WL_LuaGameCmd::set_cmd(::std::string&& value) {
  set_has_cmd();
  cmd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WL_LuaGameCmd.cmd)
}
#endif
inline void WL_LuaGameCmd::set_cmd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WL_LuaGameCmd.cmd)
}
inline void WL_LuaGameCmd::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WL_LuaGameCmd.cmd)
}
inline ::std::string* WL_LuaGameCmd::mutable_cmd() {
  set_has_cmd();
  // @@protoc_insertion_point(field_mutable:WL_LuaGameCmd.cmd)
  return cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WL_LuaGameCmd::release_cmd() {
  // @@protoc_insertion_point(field_release:WL_LuaGameCmd.cmd)
  clear_has_cmd();
  return cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WL_LuaGameCmd::set_allocated_cmd(::std::string* cmd) {
  if (cmd != NULL) {
    set_has_cmd();
  } else {
    clear_has_cmd();
  }
  cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd);
  // @@protoc_insertion_point(field_set_allocated:WL_LuaGameCmd.cmd)
}

// optional string param = 3;
inline bool WL_LuaGameCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WL_LuaGameCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WL_LuaGameCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WL_LuaGameCmd::clear_param() {
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param();
}
inline const ::std::string& WL_LuaGameCmd::param() const {
  // @@protoc_insertion_point(field_get:WL_LuaGameCmd.param)
  return param_.GetNoArena();
}
inline void WL_LuaGameCmd::set_param(const ::std::string& value) {
  set_has_param();
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WL_LuaGameCmd.param)
}
#if LANG_CXX11
inline void WL_LuaGameCmd::set_param(::std::string&& value) {
  set_has_param();
  param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WL_LuaGameCmd.param)
}
#endif
inline void WL_LuaGameCmd::set_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_param();
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WL_LuaGameCmd.param)
}
inline void WL_LuaGameCmd::set_param(const char* value, size_t size) {
  set_has_param();
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WL_LuaGameCmd.param)
}
inline ::std::string* WL_LuaGameCmd::mutable_param() {
  set_has_param();
  // @@protoc_insertion_point(field_mutable:WL_LuaGameCmd.param)
  return param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WL_LuaGameCmd::release_param() {
  // @@protoc_insertion_point(field_release:WL_LuaGameCmd.param)
  clear_has_param();
  return param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WL_LuaGameCmd::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    set_has_param();
  } else {
    clear_has_param();
  }
  param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:WL_LuaGameCmd.param)
}

// -------------------------------------------------------------------

// LW_LuaGameCmd

// optional int32 result = 1;
inline bool LW_LuaGameCmd::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LW_LuaGameCmd::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LW_LuaGameCmd::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LW_LuaGameCmd::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 LW_LuaGameCmd::result() const {
  // @@protoc_insertion_point(field_get:LW_LuaGameCmd.result)
  return result_;
}
inline void LW_LuaGameCmd::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:LW_LuaGameCmd.result)
}

// optional string param = 2;
inline bool LW_LuaGameCmd::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LW_LuaGameCmd::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LW_LuaGameCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LW_LuaGameCmd::clear_param() {
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param();
}
inline const ::std::string& LW_LuaGameCmd::param() const {
  // @@protoc_insertion_point(field_get:LW_LuaGameCmd.param)
  return param_.GetNoArena();
}
inline void LW_LuaGameCmd::set_param(const ::std::string& value) {
  set_has_param();
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LW_LuaGameCmd.param)
}
#if LANG_CXX11
inline void LW_LuaGameCmd::set_param(::std::string&& value) {
  set_has_param();
  param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LW_LuaGameCmd.param)
}
#endif
inline void LW_LuaGameCmd::set_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_param();
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LW_LuaGameCmd.param)
}
inline void LW_LuaGameCmd::set_param(const char* value, size_t size) {
  set_has_param();
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LW_LuaGameCmd.param)
}
inline ::std::string* LW_LuaGameCmd::mutable_param() {
  set_has_param();
  // @@protoc_insertion_point(field_mutable:LW_LuaGameCmd.param)
  return param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LW_LuaGameCmd::release_param() {
  // @@protoc_insertion_point(field_release:LW_LuaGameCmd.param)
  clear_has_param();
  return param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LW_LuaGameCmd::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    set_has_param();
  } else {
    clear_has_param();
  }
  param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:LW_LuaGameCmd.param)
}

// -------------------------------------------------------------------

// LS_LuaGameCmd

// optional string cmd = 1;
inline bool LS_LuaGameCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LS_LuaGameCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LS_LuaGameCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LS_LuaGameCmd::clear_cmd() {
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmd();
}
inline const ::std::string& LS_LuaGameCmd::cmd() const {
  // @@protoc_insertion_point(field_get:LS_LuaGameCmd.cmd)
  return cmd_.GetNoArena();
}
inline void LS_LuaGameCmd::set_cmd(const ::std::string& value) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LS_LuaGameCmd.cmd)
}
#if LANG_CXX11
inline void LS_LuaGameCmd::set_cmd(::std::string&& value) {
  set_has_cmd();
  cmd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LS_LuaGameCmd.cmd)
}
#endif
inline void LS_LuaGameCmd::set_cmd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LS_LuaGameCmd.cmd)
}
inline void LS_LuaGameCmd::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LS_LuaGameCmd.cmd)
}
inline ::std::string* LS_LuaGameCmd::mutable_cmd() {
  set_has_cmd();
  // @@protoc_insertion_point(field_mutable:LS_LuaGameCmd.cmd)
  return cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LS_LuaGameCmd::release_cmd() {
  // @@protoc_insertion_point(field_release:LS_LuaGameCmd.cmd)
  clear_has_cmd();
  return cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LS_LuaGameCmd::set_allocated_cmd(::std::string* cmd) {
  if (cmd != NULL) {
    set_has_cmd();
  } else {
    clear_has_cmd();
  }
  cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd);
  // @@protoc_insertion_point(field_set_allocated:LS_LuaGameCmd.cmd)
}

// optional string param = 2;
inline bool LS_LuaGameCmd::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LS_LuaGameCmd::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LS_LuaGameCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LS_LuaGameCmd::clear_param() {
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param();
}
inline const ::std::string& LS_LuaGameCmd::param() const {
  // @@protoc_insertion_point(field_get:LS_LuaGameCmd.param)
  return param_.GetNoArena();
}
inline void LS_LuaGameCmd::set_param(const ::std::string& value) {
  set_has_param();
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LS_LuaGameCmd.param)
}
#if LANG_CXX11
inline void LS_LuaGameCmd::set_param(::std::string&& value) {
  set_has_param();
  param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LS_LuaGameCmd.param)
}
#endif
inline void LS_LuaGameCmd::set_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_param();
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LS_LuaGameCmd.param)
}
inline void LS_LuaGameCmd::set_param(const char* value, size_t size) {
  set_has_param();
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LS_LuaGameCmd.param)
}
inline ::std::string* LS_LuaGameCmd::mutable_param() {
  set_has_param();
  // @@protoc_insertion_point(field_mutable:LS_LuaGameCmd.param)
  return param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LS_LuaGameCmd::release_param() {
  // @@protoc_insertion_point(field_release:LS_LuaGameCmd.param)
  clear_has_param();
  return param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LS_LuaGameCmd::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    set_has_param();
  } else {
    clear_has_param();
  }
  param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:LS_LuaGameCmd.param)
}

// optional int32 webid = 3;
inline bool LS_LuaGameCmd::has_webid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LS_LuaGameCmd::set_has_webid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LS_LuaGameCmd::clear_has_webid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LS_LuaGameCmd::clear_webid() {
  webid_ = 0;
  clear_has_webid();
}
inline ::google::protobuf::int32 LS_LuaGameCmd::webid() const {
  // @@protoc_insertion_point(field_get:LS_LuaGameCmd.webid)
  return webid_;
}
inline void LS_LuaGameCmd::set_webid(::google::protobuf::int32 value) {
  set_has_webid();
  webid_ = value;
  // @@protoc_insertion_point(field_set:LS_LuaGameCmd.webid)
}

// optional int32 gameid = 4;
inline bool LS_LuaGameCmd::has_gameid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LS_LuaGameCmd::set_has_gameid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LS_LuaGameCmd::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LS_LuaGameCmd::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 LS_LuaGameCmd::gameid() const {
  // @@protoc_insertion_point(field_get:LS_LuaGameCmd.gameid)
  return gameid_;
}
inline void LS_LuaGameCmd::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:LS_LuaGameCmd.gameid)
}

// -------------------------------------------------------------------

// SL_LuaGameCmd

// optional int32 result = 1;
inline bool SL_LuaGameCmd::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SL_LuaGameCmd::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SL_LuaGameCmd::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SL_LuaGameCmd::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SL_LuaGameCmd::result() const {
  // @@protoc_insertion_point(field_get:SL_LuaGameCmd.result)
  return result_;
}
inline void SL_LuaGameCmd::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SL_LuaGameCmd.result)
}

// optional string param = 2;
inline bool SL_LuaGameCmd::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SL_LuaGameCmd::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SL_LuaGameCmd::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SL_LuaGameCmd::clear_param() {
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param();
}
inline const ::std::string& SL_LuaGameCmd::param() const {
  // @@protoc_insertion_point(field_get:SL_LuaGameCmd.param)
  return param_.GetNoArena();
}
inline void SL_LuaGameCmd::set_param(const ::std::string& value) {
  set_has_param();
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SL_LuaGameCmd.param)
}
#if LANG_CXX11
inline void SL_LuaGameCmd::set_param(::std::string&& value) {
  set_has_param();
  param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SL_LuaGameCmd.param)
}
#endif
inline void SL_LuaGameCmd::set_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_param();
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SL_LuaGameCmd.param)
}
inline void SL_LuaGameCmd::set_param(const char* value, size_t size) {
  set_has_param();
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SL_LuaGameCmd.param)
}
inline ::std::string* SL_LuaGameCmd::mutable_param() {
  set_has_param();
  // @@protoc_insertion_point(field_mutable:SL_LuaGameCmd.param)
  return param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SL_LuaGameCmd::release_param() {
  // @@protoc_insertion_point(field_release:SL_LuaGameCmd.param)
  clear_has_param();
  return param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SL_LuaGameCmd::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    set_has_param();
  } else {
    clear_has_param();
  }
  param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:SL_LuaGameCmd.param)
}

// optional int32 webid = 3;
inline bool SL_LuaGameCmd::has_webid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SL_LuaGameCmd::set_has_webid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SL_LuaGameCmd::clear_has_webid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SL_LuaGameCmd::clear_webid() {
  webid_ = 0;
  clear_has_webid();
}
inline ::google::protobuf::int32 SL_LuaGameCmd::webid() const {
  // @@protoc_insertion_point(field_get:SL_LuaGameCmd.webid)
  return webid_;
}
inline void SL_LuaGameCmd::set_webid(::google::protobuf::int32 value) {
  set_has_webid();
  webid_ = value;
  // @@protoc_insertion_point(field_set:SL_LuaGameCmd.webid)
}

// -------------------------------------------------------------------

// BrnnChiCfg

// optional int32 beginr = 1;
inline bool BrnnChiCfg::has_beginr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BrnnChiCfg::set_has_beginr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BrnnChiCfg::clear_has_beginr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BrnnChiCfg::clear_beginr() {
  beginr_ = 0;
  clear_has_beginr();
}
inline ::google::protobuf::int32 BrnnChiCfg::beginr() const {
  // @@protoc_insertion_point(field_get:BrnnChiCfg.beginr)
  return beginr_;
}
inline void BrnnChiCfg::set_beginr(::google::protobuf::int32 value) {
  set_has_beginr();
  beginr_ = value;
  // @@protoc_insertion_point(field_set:BrnnChiCfg.beginr)
}

// optional int32 endr = 2;
inline bool BrnnChiCfg::has_endr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BrnnChiCfg::set_has_endr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BrnnChiCfg::clear_has_endr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BrnnChiCfg::clear_endr() {
  endr_ = 0;
  clear_has_endr();
}
inline ::google::protobuf::int32 BrnnChiCfg::endr() const {
  // @@protoc_insertion_point(field_get:BrnnChiCfg.endr)
  return endr_;
}
inline void BrnnChiCfg::set_endr(::google::protobuf::int32 value) {
  set_has_endr();
  endr_ = value;
  // @@protoc_insertion_point(field_set:BrnnChiCfg.endr)
}

// optional int32 prob = 3;
inline bool BrnnChiCfg::has_prob() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BrnnChiCfg::set_has_prob() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BrnnChiCfg::clear_has_prob() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BrnnChiCfg::clear_prob() {
  prob_ = 0;
  clear_has_prob();
}
inline ::google::protobuf::int32 BrnnChiCfg::prob() const {
  // @@protoc_insertion_point(field_get:BrnnChiCfg.prob)
  return prob_;
}
inline void BrnnChiCfg::set_prob(::google::protobuf::int32 value) {
  set_has_prob();
  prob_ = value;
  // @@protoc_insertion_point(field_set:BrnnChiCfg.prob)
}

// -------------------------------------------------------------------

// SD_QueryBrnnChiCfg

// optional int32 game_id = 1;
inline bool SD_QueryBrnnChiCfg::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_QueryBrnnChiCfg::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_QueryBrnnChiCfg::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_QueryBrnnChiCfg::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 SD_QueryBrnnChiCfg::game_id() const {
  // @@protoc_insertion_point(field_get:SD_QueryBrnnChiCfg.game_id)
  return game_id_;
}
inline void SD_QueryBrnnChiCfg::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SD_QueryBrnnChiCfg.game_id)
}

// -------------------------------------------------------------------

// DS_QueryBrnnChiCfg

// optional int32 game_id = 1;
inline bool DS_QueryBrnnChiCfg::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_QueryBrnnChiCfg::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_QueryBrnnChiCfg::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_QueryBrnnChiCfg::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 DS_QueryBrnnChiCfg::game_id() const {
  // @@protoc_insertion_point(field_get:DS_QueryBrnnChiCfg.game_id)
  return game_id_;
}
inline void DS_QueryBrnnChiCfg::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:DS_QueryBrnnChiCfg.game_id)
}

// repeated .BrnnChiCfg pb_brnn_chi_cfg = 2;
inline int DS_QueryBrnnChiCfg::pb_brnn_chi_cfg_size() const {
  return pb_brnn_chi_cfg_.size();
}
inline void DS_QueryBrnnChiCfg::clear_pb_brnn_chi_cfg() {
  pb_brnn_chi_cfg_.Clear();
}
inline const ::BrnnChiCfg& DS_QueryBrnnChiCfg::pb_brnn_chi_cfg(int index) const {
  // @@protoc_insertion_point(field_get:DS_QueryBrnnChiCfg.pb_brnn_chi_cfg)
  return pb_brnn_chi_cfg_.Get(index);
}
inline ::BrnnChiCfg* DS_QueryBrnnChiCfg::mutable_pb_brnn_chi_cfg(int index) {
  // @@protoc_insertion_point(field_mutable:DS_QueryBrnnChiCfg.pb_brnn_chi_cfg)
  return pb_brnn_chi_cfg_.Mutable(index);
}
inline ::BrnnChiCfg* DS_QueryBrnnChiCfg::add_pb_brnn_chi_cfg() {
  // @@protoc_insertion_point(field_add:DS_QueryBrnnChiCfg.pb_brnn_chi_cfg)
  return pb_brnn_chi_cfg_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BrnnChiCfg >*
DS_QueryBrnnChiCfg::mutable_pb_brnn_chi_cfg() {
  // @@protoc_insertion_point(field_mutable_list:DS_QueryBrnnChiCfg.pb_brnn_chi_cfg)
  return &pb_brnn_chi_cfg_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BrnnChiCfg >&
DS_QueryBrnnChiCfg::pb_brnn_chi_cfg() const {
  // @@protoc_insertion_point(field_list:DS_QueryBrnnChiCfg.pb_brnn_chi_cfg)
  return pb_brnn_chi_cfg_;
}

// -------------------------------------------------------------------

// PlayerPromotion

// optional int32 tid = 1;
inline bool PlayerPromotion::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerPromotion::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerPromotion::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerPromotion::clear_tid() {
  tid_ = 0;
  clear_has_tid();
}
inline ::google::protobuf::int32 PlayerPromotion::tid() const {
  // @@protoc_insertion_point(field_get:PlayerPromotion.tid)
  return tid_;
}
inline void PlayerPromotion::set_tid(::google::protobuf::int32 value) {
  set_has_tid();
  tid_ = value;
  // @@protoc_insertion_point(field_set:PlayerPromotion.tid)
}

// optional int32 profit = 2;
inline bool PlayerPromotion::has_profit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerPromotion::set_has_profit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerPromotion::clear_has_profit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerPromotion::clear_profit() {
  profit_ = 0;
  clear_has_profit();
}
inline ::google::protobuf::int32 PlayerPromotion::profit() const {
  // @@protoc_insertion_point(field_get:PlayerPromotion.profit)
  return profit_;
}
inline void PlayerPromotion::set_profit(::google::protobuf::int32 value) {
  set_has_profit();
  profit_ = value;
  // @@protoc_insertion_point(field_set:PlayerPromotion.profit)
}

// -------------------------------------------------------------------

// SD_QueryPlayerPromotion

// optional int32 game_id = 1;
inline bool SD_QueryPlayerPromotion::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_QueryPlayerPromotion::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_QueryPlayerPromotion::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_QueryPlayerPromotion::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 SD_QueryPlayerPromotion::game_id() const {
  // @@protoc_insertion_point(field_get:SD_QueryPlayerPromotion.game_id)
  return game_id_;
}
inline void SD_QueryPlayerPromotion::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:SD_QueryPlayerPromotion.game_id)
}

// optional int32 guid = 2;
inline bool SD_QueryPlayerPromotion::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SD_QueryPlayerPromotion::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SD_QueryPlayerPromotion::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SD_QueryPlayerPromotion::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_QueryPlayerPromotion::guid() const {
  // @@protoc_insertion_point(field_get:SD_QueryPlayerPromotion.guid)
  return guid_;
}
inline void SD_QueryPlayerPromotion::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_QueryPlayerPromotion.guid)
}

// -------------------------------------------------------------------

// DS_QueryPlayerPromotion

// optional int32 game_id = 1;
inline bool DS_QueryPlayerPromotion::has_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_QueryPlayerPromotion::set_has_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_QueryPlayerPromotion::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_QueryPlayerPromotion::clear_game_id() {
  game_id_ = 0;
  clear_has_game_id();
}
inline ::google::protobuf::int32 DS_QueryPlayerPromotion::game_id() const {
  // @@protoc_insertion_point(field_get:DS_QueryPlayerPromotion.game_id)
  return game_id_;
}
inline void DS_QueryPlayerPromotion::set_game_id(::google::protobuf::int32 value) {
  set_has_game_id();
  game_id_ = value;
  // @@protoc_insertion_point(field_set:DS_QueryPlayerPromotion.game_id)
}

// optional int32 guid = 2;
inline bool DS_QueryPlayerPromotion::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_QueryPlayerPromotion::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_QueryPlayerPromotion::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_QueryPlayerPromotion::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_QueryPlayerPromotion::guid() const {
  // @@protoc_insertion_point(field_get:DS_QueryPlayerPromotion.guid)
  return guid_;
}
inline void DS_QueryPlayerPromotion::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_QueryPlayerPromotion.guid)
}

// repeated .PlayerPromotion pb_playerpromotion = 3;
inline int DS_QueryPlayerPromotion::pb_playerpromotion_size() const {
  return pb_playerpromotion_.size();
}
inline void DS_QueryPlayerPromotion::clear_pb_playerpromotion() {
  pb_playerpromotion_.Clear();
}
inline const ::PlayerPromotion& DS_QueryPlayerPromotion::pb_playerpromotion(int index) const {
  // @@protoc_insertion_point(field_get:DS_QueryPlayerPromotion.pb_playerpromotion)
  return pb_playerpromotion_.Get(index);
}
inline ::PlayerPromotion* DS_QueryPlayerPromotion::mutable_pb_playerpromotion(int index) {
  // @@protoc_insertion_point(field_mutable:DS_QueryPlayerPromotion.pb_playerpromotion)
  return pb_playerpromotion_.Mutable(index);
}
inline ::PlayerPromotion* DS_QueryPlayerPromotion::add_pb_playerpromotion() {
  // @@protoc_insertion_point(field_add:DS_QueryPlayerPromotion.pb_playerpromotion)
  return pb_playerpromotion_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerPromotion >*
DS_QueryPlayerPromotion::mutable_pb_playerpromotion() {
  // @@protoc_insertion_point(field_mutable_list:DS_QueryPlayerPromotion.pb_playerpromotion)
  return &pb_playerpromotion_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerPromotion >&
DS_QueryPlayerPromotion::pb_playerpromotion() const {
  // @@protoc_insertion_point(field_list:DS_QueryPlayerPromotion.pb_playerpromotion)
  return pb_playerpromotion_;
}

// -------------------------------------------------------------------

// SD_NotifyPhpServer

// optional int32 guid = 1;
inline bool SD_NotifyPhpServer::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_NotifyPhpServer::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_NotifyPhpServer::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_NotifyPhpServer::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_NotifyPhpServer::guid() const {
  // @@protoc_insertion_point(field_get:SD_NotifyPhpServer.guid)
  return guid_;
}
inline void SD_NotifyPhpServer::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_NotifyPhpServer.guid)
}

// -------------------------------------------------------------------

// SD_QueryPlayerRecharge

// optional int32 guid = 1;
inline bool SD_QueryPlayerRecharge::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SD_QueryPlayerRecharge::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SD_QueryPlayerRecharge::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SD_QueryPlayerRecharge::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 SD_QueryPlayerRecharge::guid() const {
  // @@protoc_insertion_point(field_get:SD_QueryPlayerRecharge.guid)
  return guid_;
}
inline void SD_QueryPlayerRecharge::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:SD_QueryPlayerRecharge.guid)
}

// -------------------------------------------------------------------

// DS_QueryPlayerRecharge

// optional int32 guid = 1;
inline bool DS_QueryPlayerRecharge::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DS_QueryPlayerRecharge::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DS_QueryPlayerRecharge::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DS_QueryPlayerRecharge::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DS_QueryPlayerRecharge::guid() const {
  // @@protoc_insertion_point(field_get:DS_QueryPlayerRecharge.guid)
  return guid_;
}
inline void DS_QueryPlayerRecharge::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DS_QueryPlayerRecharge.guid)
}

// optional int32 recharge = 2;
inline bool DS_QueryPlayerRecharge::has_recharge() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DS_QueryPlayerRecharge::set_has_recharge() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DS_QueryPlayerRecharge::clear_has_recharge() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DS_QueryPlayerRecharge::clear_recharge() {
  recharge_ = 0;
  clear_has_recharge();
}
inline ::google::protobuf::int32 DS_QueryPlayerRecharge::recharge() const {
  // @@protoc_insertion_point(field_get:DS_QueryPlayerRecharge.recharge)
  return recharge_;
}
inline void DS_QueryPlayerRecharge::set_recharge(::google::protobuf::int32 value) {
  set_has_recharge();
  recharge_ = value;
  // @@protoc_insertion_point(field_set:DS_QueryPlayerRecharge.recharge)
}

// -------------------------------------------------------------------

// GF_SavePlayerInfo

// optional .PlayerInfoInMemery info = 1;
inline bool GF_SavePlayerInfo::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GF_SavePlayerInfo::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GF_SavePlayerInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GF_SavePlayerInfo::clear_info() {
  if (info_ != NULL) info_->::PlayerInfoInMemery::Clear();
  clear_has_info();
}
inline const ::PlayerInfoInMemery& GF_SavePlayerInfo::info() const {
  // @@protoc_insertion_point(field_get:GF_SavePlayerInfo.info)
  return info_ != NULL ? *info_
                         : *::PlayerInfoInMemery::internal_default_instance();
}
inline ::PlayerInfoInMemery* GF_SavePlayerInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::PlayerInfoInMemery;
  }
  // @@protoc_insertion_point(field_mutable:GF_SavePlayerInfo.info)
  return info_;
}
inline ::PlayerInfoInMemery* GF_SavePlayerInfo::release_info() {
  // @@protoc_insertion_point(field_release:GF_SavePlayerInfo.info)
  clear_has_info();
  ::PlayerInfoInMemery* temp = info_;
  info_ = NULL;
  return temp;
}
inline void GF_SavePlayerInfo::set_allocated_info(::PlayerInfoInMemery* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:GF_SavePlayerInfo.info)
}

// -------------------------------------------------------------------

// GF_GetPlayerInfo

// optional int32 guid = 1;
inline bool GF_GetPlayerInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GF_GetPlayerInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GF_GetPlayerInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GF_GetPlayerInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 GF_GetPlayerInfo::guid() const {
  // @@protoc_insertion_point(field_get:GF_GetPlayerInfo.guid)
  return guid_;
}
inline void GF_GetPlayerInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:GF_GetPlayerInfo.guid)
}

// -------------------------------------------------------------------

// FG_GetPlayerInfo

// optional .PlayerInfoInMemery info = 1;
inline bool FG_GetPlayerInfo::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FG_GetPlayerInfo::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FG_GetPlayerInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FG_GetPlayerInfo::clear_info() {
  if (info_ != NULL) info_->::PlayerInfoInMemery::Clear();
  clear_has_info();
}
inline const ::PlayerInfoInMemery& FG_GetPlayerInfo::info() const {
  // @@protoc_insertion_point(field_get:FG_GetPlayerInfo.info)
  return info_ != NULL ? *info_
                         : *::PlayerInfoInMemery::internal_default_instance();
}
inline ::PlayerInfoInMemery* FG_GetPlayerInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::PlayerInfoInMemery;
  }
  // @@protoc_insertion_point(field_mutable:FG_GetPlayerInfo.info)
  return info_;
}
inline ::PlayerInfoInMemery* FG_GetPlayerInfo::release_info() {
  // @@protoc_insertion_point(field_release:FG_GetPlayerInfo.info)
  clear_has_info();
  ::PlayerInfoInMemery* temp = info_;
  info_ = NULL;
  return temp;
}
inline void FG_GetPlayerInfo::set_allocated_info(::PlayerInfoInMemery* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:FG_GetPlayerInfo.info)
}

// -------------------------------------------------------------------

// DF_SavePlayerInfo

// optional .PlayerInfoInMemery info = 1;
inline bool DF_SavePlayerInfo::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DF_SavePlayerInfo::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DF_SavePlayerInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DF_SavePlayerInfo::clear_info() {
  if (info_ != NULL) info_->::PlayerInfoInMemery::Clear();
  clear_has_info();
}
inline const ::PlayerInfoInMemery& DF_SavePlayerInfo::info() const {
  // @@protoc_insertion_point(field_get:DF_SavePlayerInfo.info)
  return info_ != NULL ? *info_
                         : *::PlayerInfoInMemery::internal_default_instance();
}
inline ::PlayerInfoInMemery* DF_SavePlayerInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::PlayerInfoInMemery;
  }
  // @@protoc_insertion_point(field_mutable:DF_SavePlayerInfo.info)
  return info_;
}
inline ::PlayerInfoInMemery* DF_SavePlayerInfo::release_info() {
  // @@protoc_insertion_point(field_release:DF_SavePlayerInfo.info)
  clear_has_info();
  ::PlayerInfoInMemery* temp = info_;
  info_ = NULL;
  return temp;
}
inline void DF_SavePlayerInfo::set_allocated_info(::PlayerInfoInMemery* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:DF_SavePlayerInfo.info)
}

// -------------------------------------------------------------------

// DF_GetPlayerInfo

// optional int32 guid = 1;
inline bool DF_GetPlayerInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DF_GetPlayerInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DF_GetPlayerInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DF_GetPlayerInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 DF_GetPlayerInfo::guid() const {
  // @@protoc_insertion_point(field_get:DF_GetPlayerInfo.guid)
  return guid_;
}
inline void DF_GetPlayerInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:DF_GetPlayerInfo.guid)
}

// optional string account = 2;
inline bool DF_GetPlayerInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DF_GetPlayerInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DF_GetPlayerInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DF_GetPlayerInfo::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& DF_GetPlayerInfo::account() const {
  // @@protoc_insertion_point(field_get:DF_GetPlayerInfo.account)
  return account_.GetNoArena();
}
inline void DF_GetPlayerInfo::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DF_GetPlayerInfo.account)
}
#if LANG_CXX11
inline void DF_GetPlayerInfo::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DF_GetPlayerInfo.account)
}
#endif
inline void DF_GetPlayerInfo::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DF_GetPlayerInfo.account)
}
inline void DF_GetPlayerInfo::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DF_GetPlayerInfo.account)
}
inline ::std::string* DF_GetPlayerInfo::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:DF_GetPlayerInfo.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DF_GetPlayerInfo::release_account() {
  // @@protoc_insertion_point(field_release:DF_GetPlayerInfo.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DF_GetPlayerInfo::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:DF_GetPlayerInfo.account)
}

// optional string nickname = 3;
inline bool DF_GetPlayerInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DF_GetPlayerInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DF_GetPlayerInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DF_GetPlayerInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& DF_GetPlayerInfo::nickname() const {
  // @@protoc_insertion_point(field_get:DF_GetPlayerInfo.nickname)
  return nickname_.GetNoArena();
}
inline void DF_GetPlayerInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DF_GetPlayerInfo.nickname)
}
#if LANG_CXX11
inline void DF_GetPlayerInfo::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DF_GetPlayerInfo.nickname)
}
#endif
inline void DF_GetPlayerInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DF_GetPlayerInfo.nickname)
}
inline void DF_GetPlayerInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DF_GetPlayerInfo.nickname)
}
inline ::std::string* DF_GetPlayerInfo::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:DF_GetPlayerInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DF_GetPlayerInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:DF_GetPlayerInfo.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DF_GetPlayerInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:DF_GetPlayerInfo.nickname)
}

// optional int32 gameid = 4;
inline bool DF_GetPlayerInfo::has_gameid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DF_GetPlayerInfo::set_has_gameid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DF_GetPlayerInfo::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DF_GetPlayerInfo::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 DF_GetPlayerInfo::gameid() const {
  // @@protoc_insertion_point(field_get:DF_GetPlayerInfo.gameid)
  return gameid_;
}
inline void DF_GetPlayerInfo::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:DF_GetPlayerInfo.gameid)
}

// -------------------------------------------------------------------

// FD_GetPlayerInfo

// optional int32 guid = 1;
inline bool FD_GetPlayerInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FD_GetPlayerInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FD_GetPlayerInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FD_GetPlayerInfo::clear_guid() {
  guid_ = 0;
  clear_has_guid();
}
inline ::google::protobuf::int32 FD_GetPlayerInfo::guid() const {
  // @@protoc_insertion_point(field_get:FD_GetPlayerInfo.guid)
  return guid_;
}
inline void FD_GetPlayerInfo::set_guid(::google::protobuf::int32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:FD_GetPlayerInfo.guid)
}

// optional string account = 2;
inline bool FD_GetPlayerInfo::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FD_GetPlayerInfo::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FD_GetPlayerInfo::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FD_GetPlayerInfo::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& FD_GetPlayerInfo::account() const {
  // @@protoc_insertion_point(field_get:FD_GetPlayerInfo.account)
  return account_.GetNoArena();
}
inline void FD_GetPlayerInfo::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FD_GetPlayerInfo.account)
}
#if LANG_CXX11
inline void FD_GetPlayerInfo::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FD_GetPlayerInfo.account)
}
#endif
inline void FD_GetPlayerInfo::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FD_GetPlayerInfo.account)
}
inline void FD_GetPlayerInfo::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FD_GetPlayerInfo.account)
}
inline ::std::string* FD_GetPlayerInfo::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:FD_GetPlayerInfo.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FD_GetPlayerInfo::release_account() {
  // @@protoc_insertion_point(field_release:FD_GetPlayerInfo.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FD_GetPlayerInfo::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:FD_GetPlayerInfo.account)
}

// optional string nickname = 3;
inline bool FD_GetPlayerInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FD_GetPlayerInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FD_GetPlayerInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FD_GetPlayerInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& FD_GetPlayerInfo::nickname() const {
  // @@protoc_insertion_point(field_get:FD_GetPlayerInfo.nickname)
  return nickname_.GetNoArena();
}
inline void FD_GetPlayerInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FD_GetPlayerInfo.nickname)
}
#if LANG_CXX11
inline void FD_GetPlayerInfo::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FD_GetPlayerInfo.nickname)
}
#endif
inline void FD_GetPlayerInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FD_GetPlayerInfo.nickname)
}
inline void FD_GetPlayerInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FD_GetPlayerInfo.nickname)
}
inline ::std::string* FD_GetPlayerInfo::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:FD_GetPlayerInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FD_GetPlayerInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:FD_GetPlayerInfo.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FD_GetPlayerInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:FD_GetPlayerInfo.nickname)
}

// optional int32 gameid = 4;
inline bool FD_GetPlayerInfo::has_gameid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FD_GetPlayerInfo::set_has_gameid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FD_GetPlayerInfo::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FD_GetPlayerInfo::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 FD_GetPlayerInfo::gameid() const {
  // @@protoc_insertion_point(field_get:FD_GetPlayerInfo.gameid)
  return gameid_;
}
inline void FD_GetPlayerInfo::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:FD_GetPlayerInfo.gameid)
}

// optional .PlayerInfoInMemery info = 5;
inline bool FD_GetPlayerInfo::has_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FD_GetPlayerInfo::set_has_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FD_GetPlayerInfo::clear_has_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FD_GetPlayerInfo::clear_info() {
  if (info_ != NULL) info_->::PlayerInfoInMemery::Clear();
  clear_has_info();
}
inline const ::PlayerInfoInMemery& FD_GetPlayerInfo::info() const {
  // @@protoc_insertion_point(field_get:FD_GetPlayerInfo.info)
  return info_ != NULL ? *info_
                         : *::PlayerInfoInMemery::internal_default_instance();
}
inline ::PlayerInfoInMemery* FD_GetPlayerInfo::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::PlayerInfoInMemery;
  }
  // @@protoc_insertion_point(field_mutable:FD_GetPlayerInfo.info)
  return info_;
}
inline ::PlayerInfoInMemery* FD_GetPlayerInfo::release_info() {
  // @@protoc_insertion_point(field_release:FD_GetPlayerInfo.info)
  clear_has_info();
  ::PlayerInfoInMemery* temp = info_;
  info_ = NULL;
  return temp;
}
inline void FD_GetPlayerInfo::set_allocated_info(::PlayerInfoInMemery* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:FD_GetPlayerInfo.info)
}

// -------------------------------------------------------------------

// WF_SavePlayersInfoToMySQL

// -------------------------------------------------------------------

// FW_SavePlayersInfoToMySQL

// optional bool suc = 1;
inline bool FW_SavePlayersInfoToMySQL::has_suc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FW_SavePlayersInfoToMySQL::set_has_suc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FW_SavePlayersInfoToMySQL::clear_has_suc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FW_SavePlayersInfoToMySQL::clear_suc() {
  suc_ = false;
  clear_has_suc();
}
inline bool FW_SavePlayersInfoToMySQL::suc() const {
  // @@protoc_insertion_point(field_get:FW_SavePlayersInfoToMySQL.suc)
  return suc_;
}
inline void FW_SavePlayersInfoToMySQL::set_suc(bool value) {
  set_has_suc();
  suc_ = value;
  // @@protoc_insertion_point(field_set:FW_SavePlayersInfoToMySQL.suc)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::S_Connect_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_Connect_MsgID>() {
  return ::S_Connect_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_UpdateGamePlayerCount_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_UpdateGamePlayerCount_MsgID>() {
  return ::S_UpdateGamePlayerCount_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_ConnectDB_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_ConnectDB_MsgID>() {
  return ::S_ConnectDB_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_RequestServerConfig_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_RequestServerConfig_MsgID>() {
  return ::S_RequestServerConfig_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_ReplyServerConfig_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_ReplyServerConfig_MsgID>() {
  return ::S_ReplyServerConfig_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_NotifyGameServerStart_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_NotifyGameServerStart_MsgID>() {
  return ::S_NotifyGameServerStart_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_RequestUpdateGameServerConfig_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_RequestUpdateGameServerConfig_MsgID>() {
  return ::S_RequestUpdateGameServerConfig_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_ReplyUpdateGameServerConfig_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_ReplyUpdateGameServerConfig_MsgID>() {
  return ::S_ReplyUpdateGameServerConfig_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_NotifyLoginServerStart_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_NotifyLoginServerStart_MsgID>() {
  return ::S_NotifyLoginServerStart_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_RequestUpdateLoginServerConfigByGate_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_RequestUpdateLoginServerConfigByGate_MsgID>() {
  return ::S_RequestUpdateLoginServerConfigByGate_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_ReplyUpdateLoginServerConfigByGate_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_ReplyUpdateLoginServerConfigByGate_MsgID>() {
  return ::S_ReplyUpdateLoginServerConfigByGate_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_RequestUpdateLoginServerConfigByGame_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_RequestUpdateLoginServerConfigByGame_MsgID>() {
  return ::S_RequestUpdateLoginServerConfigByGame_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_ReplyUpdateLoginServerConfigByGame_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_ReplyUpdateLoginServerConfigByGame_MsgID>() {
  return ::S_ReplyUpdateLoginServerConfigByGame_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_NotifyDBServerStart_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_NotifyDBServerStart_MsgID>() {
  return ::S_NotifyDBServerStart_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_RequestUpdateDBServerConfigByGame_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_RequestUpdateDBServerConfigByGame_MsgID>() {
  return ::S_RequestUpdateDBServerConfigByGame_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_ReplyUpdateDBServerConfigByGame_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_ReplyUpdateDBServerConfigByGame_MsgID>() {
  return ::S_ReplyUpdateDBServerConfigByGame_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_RequestUpdateDBServerConfigByLogin_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_RequestUpdateDBServerConfigByLogin_MsgID>() {
  return ::S_RequestUpdateDBServerConfigByLogin_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_ReplyUpdateDBServerConfigByLogin_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_ReplyUpdateDBServerConfigByLogin_MsgID>() {
  return ::S_ReplyUpdateDBServerConfigByLogin_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_ReplyPrivateRoomConfig_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_ReplyPrivateRoomConfig_MsgID>() {
  return ::S_ReplyPrivateRoomConfig_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_RegAccount_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_RegAccount_MsgID>() {
  return ::LD_RegAccount_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DL_RegAccount_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DL_RegAccount_MsgID>() {
  return ::DL_RegAccount_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DL_RegAccount2_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DL_RegAccount2_MsgID>() {
  return ::DL_RegAccount2_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_OnlineAccount_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_OnlineAccount_MsgID>() {
  return ::SD_OnlineAccount_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_PhoneQuery_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_PhoneQuery_MsgID>() {
  return ::LD_PhoneQuery_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DL_PhoneQuery_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DL_PhoneQuery_MsgID>() {
  return ::DL_PhoneQuery_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_Heartbeat_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_Heartbeat_MsgID>() {
  return ::S_Heartbeat_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_Logout_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_Logout_MsgID>() {
  return ::S_Logout_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_VerifyAccount_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_VerifyAccount_MsgID>() {
  return ::LD_VerifyAccount_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DL_VerifyAccountResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DL_VerifyAccountResult_MsgID>() {
  return ::DL_VerifyAccountResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_SmsLogin_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_SmsLogin_MsgID>() {
  return ::LD_SmsLogin_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_LoginNotify_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_LoginNotify_MsgID>() {
  return ::LS_LoginNotify_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_LoginNotifyAgain_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_LoginNotifyAgain_MsgID>() {
  return ::LS_LoginNotifyAgain_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LG_KickClient_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LG_KickClient_MsgID>() {
  return ::LG_KickClient_MsgID_descriptor();
}
template <> struct is_proto_enum< ::L_KickClient_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::L_KickClient_MsgID>() {
  return ::L_KickClient_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_ResetAccount_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_ResetAccount_MsgID>() {
  return ::SD_ResetAccount_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_ResetAccount_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_ResetAccount_MsgID>() {
  return ::DS_ResetAccount_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_SetPassword_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_SetPassword_MsgID>() {
  return ::SD_SetPassword_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_SetPassword_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_SetPassword_MsgID>() {
  return ::DS_SetPassword_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_SetNickname_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_SetNickname_MsgID>() {
  return ::SD_SetNickname_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_SetNickname_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_SetNickname_MsgID>() {
  return ::DS_SetNickname_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_SetPasswordBySms_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_SetPasswordBySms_MsgID>() {
  return ::SD_SetPasswordBySms_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_QueryPlayerData_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_QueryPlayerData_MsgID>() {
  return ::SD_QueryPlayerData_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_LoadPlayerData_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_LoadPlayerData_MsgID>() {
  return ::DS_LoadPlayerData_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_SavePlayerData_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_SavePlayerData_MsgID>() {
  return ::SD_SavePlayerData_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SS_ChangeGame_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SS_ChangeGame_MsgID>() {
  return ::SS_ChangeGame_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_ChangeGameResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_ChangeGameResult_MsgID>() {
  return ::LS_ChangeGameResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_SavePlayerMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_SavePlayerMoney_MsgID>() {
  return ::SD_SavePlayerMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_SavePlayerBank_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_SavePlayerBank_MsgID>() {
  return ::SD_SavePlayerBank_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SL_ChangeGameResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SL_ChangeGameResult_MsgID>() {
  return ::SL_ChangeGameResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SS_JoinPrivateRoom_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SS_JoinPrivateRoom_MsgID>() {
  return ::SS_JoinPrivateRoom_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_PrivateRoomLog_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_PrivateRoomLog_MsgID>() {
  return ::SD_PrivateRoomLog_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_FilishPrivateRoomLog_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_FilishPrivateRoomLog_MsgID>() {
  return ::SD_FilishPrivateRoomLog_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_StartPrivateRoomLog_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_StartPrivateRoomLog_MsgID>() {
  return ::SD_StartPrivateRoomLog_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_LoadAndroidData_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_LoadAndroidData_MsgID>() {
  return ::SD_LoadAndroidData_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_LoadAndroidData_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_LoadAndroidData_MsgID>() {
  return ::DS_LoadAndroidData_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_QueryPlayerMsgData_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_QueryPlayerMsgData_MsgID>() {
  return ::DS_QueryPlayerMsgData_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_QueryPlayerMsgData_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_QueryPlayerMsgData_MsgID>() {
  return ::SD_QueryPlayerMsgData_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_SetMsgReadFlag_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_SetMsgReadFlag_MsgID>() {
  return ::SD_SetMsgReadFlag_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_QueryPlayerMarquee_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_QueryPlayerMarquee_MsgID>() {
  return ::DS_QueryPlayerMarquee_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_QueryPlayerMarquee_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_QueryPlayerMarquee_MsgID>() {
  return ::SD_QueryPlayerMarquee_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_QueryPlayerInviteReward_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_QueryPlayerInviteReward_MsgID>() {
  return ::DS_QueryPlayerInviteReward_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_QueryPlayerInviteReward_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_QueryPlayerInviteReward_MsgID>() {
  return ::SD_QueryPlayerInviteReward_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_QueryChannelInviteCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_QueryChannelInviteCfg_MsgID>() {
  return ::DS_QueryChannelInviteCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_QueryChannelInviteCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_QueryChannelInviteCfg_MsgID>() {
  return ::SD_QueryChannelInviteCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_SavePlayerOxData_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_SavePlayerOxData_MsgID>() {
  return ::SD_SavePlayerOxData_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_QueryOxConfigData_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_QueryOxConfigData_MsgID>() {
  return ::SD_QueryOxConfigData_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_OxConfigData_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_OxConfigData_MsgID>() {
  return ::DS_OxConfigData_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LG_PhoneQuery_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LG_PhoneQuery_MsgID>() {
  return ::LG_PhoneQuery_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_BankSetPassword_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_BankSetPassword_MsgID>() {
  return ::SD_BankSetPassword_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_BankChangePassword_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_BankChangePassword_MsgID>() {
  return ::SD_BankChangePassword_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_BankChangePassword_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_BankChangePassword_MsgID>() {
  return ::DS_BankChangePassword_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_BankLogin_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_BankLogin_MsgID>() {
  return ::SD_BankLogin_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_BankLogin_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_BankLogin_MsgID>() {
  return ::DS_BankLogin_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_SaveBankStatement_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_SaveBankStatement_MsgID>() {
  return ::SD_SaveBankStatement_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_SaveBankStatement_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_SaveBankStatement_MsgID>() {
  return ::DS_SaveBankStatement_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_BankStatement_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_BankStatement_MsgID>() {
  return ::SD_BankStatement_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_BankStatement_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_BankStatement_MsgID>() {
  return ::DS_BankStatement_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_BankTransfer_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_BankTransfer_MsgID>() {
  return ::SD_BankTransfer_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_BankTransfer_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_BankTransfer_MsgID>() {
  return ::DS_BankTransfer_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_BankTransferSelf_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_BankTransferSelf_MsgID>() {
  return ::LS_BankTransferSelf_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_BankTransferTarget_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_BankTransferTarget_MsgID>() {
  return ::LS_BankTransferTarget_MsgID_descriptor();
}
template <> struct is_proto_enum< ::S_BankTransferByGuid_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S_BankTransferByGuid_MsgID>() {
  return ::S_BankTransferByGuid_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_BankTransferByGuid_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_BankTransferByGuid_MsgID>() {
  return ::DS_BankTransferByGuid_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_BankTransferByGuid_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_BankTransferByGuid_MsgID>() {
  return ::LS_BankTransferByGuid_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_BankLog_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_BankLog_MsgID>() {
  return ::SD_BankLog_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_Do_OneSql_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_Do_OneSql_MsgID>() {
  return ::SD_Do_OneSql_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_SendMail_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_SendMail_MsgID>() {
  return ::SD_SendMail_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DES_SendMail_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DES_SendMail_MsgID>() {
  return ::DES_SendMail_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_DelMail_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_DelMail_MsgID>() {
  return ::SD_DelMail_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_ReceiveMailAttachment_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_ReceiveMailAttachment_MsgID>() {
  return ::SD_ReceiveMailAttachment_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DE_UpdateRank_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DE_UpdateRank_MsgID>() {
  return ::DE_UpdateRank_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_UpdateEarnings_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_UpdateEarnings_MsgID>() {
  return ::SD_UpdateEarnings_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_LogMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_LogMoney_MsgID>() {
  return ::SD_LogMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::WL_RequestGameServerInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WL_RequestGameServerInfo_MsgID>() {
  return ::WL_RequestGameServerInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LW_ResponseGameServerInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LW_ResponseGameServerInfo_MsgID>() {
  return ::LW_ResponseGameServerInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SL_WebGameServerInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SL_WebGameServerInfo_MsgID>() {
  return ::SL_WebGameServerInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::WL_GMMessage_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WL_GMMessage_MsgID>() {
  return ::WL_GMMessage_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LW_GMMessage_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LW_GMMessage_MsgID>() {
  return ::LW_GMMessage_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_NewNotice_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_NewNotice_MsgID>() {
  return ::LD_NewNotice_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DL_NewNotice_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DL_NewNotice_MsgID>() {
  return ::DL_NewNotice_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_NewNotice_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_NewNotice_MsgID>() {
  return ::LS_NewNotice_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_DelMessage_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_DelMessage_MsgID>() {
  return ::LS_DelMessage_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LG_NewNotice_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LG_NewNotice_MsgID>() {
  return ::LG_NewNotice_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LG_DelNotice_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LG_DelNotice_MsgID>() {
  return ::LG_DelNotice_MsgID_descriptor();
}
template <> struct is_proto_enum< ::GL_NewNotice_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GL_NewNotice_MsgID>() {
  return ::GL_NewNotice_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LG_FeedBackUpdate_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LG_FeedBackUpdate_MsgID>() {
  return ::LG_FeedBackUpdate_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_DelMessage_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_DelMessage_MsgID>() {
  return ::LD_DelMessage_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DL_DelMessage_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DL_DelMessage_MsgID>() {
  return ::DL_DelMessage_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SL_Log_Money_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SL_Log_Money_MsgID>() {
  return ::SL_Log_Money_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SL_Log_Game_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SL_Log_Game_MsgID>() {
  return ::SL_Log_Game_MsgID_descriptor();
}
template <> struct is_proto_enum< ::WF_CashFalse_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WF_CashFalse_MsgID>() {
  return ::WF_CashFalse_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LW_CashFalse_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LW_CashFalse_MsgID>() {
  return ::LW_CashFalse_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_CashFalse_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_CashFalse_MsgID>() {
  return ::LD_CashFalse_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DL_CashFalseInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DL_CashFalseInfo_MsgID>() {
  return ::DL_CashFalseInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_CashDeal_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_CashDeal_MsgID>() {
  return ::LD_CashDeal_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DL_CashReply_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DL_CashReply_MsgID>() {
  return ::DL_CashReply_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_CashDeal_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_CashDeal_MsgID>() {
  return ::LS_CashDeal_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SL_CashReply_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SL_CashReply_MsgID>() {
  return ::SL_CashReply_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_CashReply_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_CashReply_MsgID>() {
  return ::LD_CashReply_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_CashMoneyType_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_CashMoneyType_MsgID>() {
  return ::SD_CashMoneyType_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_CashMoneyType_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_CashMoneyType_MsgID>() {
  return ::DS_CashMoneyType_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_CashMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_CashMoney_MsgID>() {
  return ::SD_CashMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_CashMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_CashMoney_MsgID>() {
  return ::DS_CashMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::WF_Recharge_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WF_Recharge_MsgID>() {
  return ::WF_Recharge_MsgID_descriptor();
}
template <> struct is_proto_enum< ::FW_Result_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FW_Result_MsgID>() {
  return ::FW_Result_MsgID_descriptor();
}
template <> struct is_proto_enum< ::FD_ChangMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FD_ChangMoney_MsgID>() {
  return ::FD_ChangMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DF_Reply_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DF_Reply_MsgID>() {
  return ::DF_Reply_MsgID_descriptor();
}
template <> struct is_proto_enum< ::FD_ChangMoneyDeal_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FD_ChangMoneyDeal_MsgID>() {
  return ::FD_ChangMoneyDeal_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DF_ChangMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DF_ChangMoney_MsgID>() {
  return ::DF_ChangMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::FS_ChangMoneyDeal_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FS_ChangMoneyDeal_MsgID>() {
  return ::FS_ChangMoneyDeal_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_ChangMoneyReply_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_ChangMoneyReply_MsgID>() {
  return ::SD_ChangMoneyReply_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_BandAlipay_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_BandAlipay_MsgID>() {
  return ::SD_BandAlipay_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_BandAlipay_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_BandAlipay_MsgID>() {
  return ::DS_BandAlipay_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_BandAlipayNum_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_BandAlipayNum_MsgID>() {
  return ::DS_BandAlipayNum_MsgID_descriptor();
}
template <> struct is_proto_enum< ::WL_ChangeTax_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WL_ChangeTax_MsgID>() {
  return ::WL_ChangeTax_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_ChangeTax_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_ChangeTax_MsgID>() {
  return ::LS_ChangeTax_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SL_ChangeTax_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SL_ChangeTax_MsgID>() {
  return ::SL_ChangeTax_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LW_ChangeTax_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LW_ChangeTax_MsgID>() {
  return ::LW_ChangeTax_MsgID_descriptor();
}
template <> struct is_proto_enum< ::WF_ChangeGameCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WF_ChangeGameCfg_MsgID>() {
  return ::WF_ChangeGameCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::FS_ChangeGameCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FS_ChangeGameCfg_MsgID>() {
  return ::FS_ChangeGameCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SF_ChangeGameCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SF_ChangeGameCfg_MsgID>() {
  return ::SF_ChangeGameCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::FW_ChangeGameCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FW_ChangeGameCfg_MsgID>() {
  return ::FW_ChangeGameCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LG_AddNewGameServer_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LG_AddNewGameServer_MsgID>() {
  return ::LG_AddNewGameServer_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_ServerConfig_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_ServerConfig_MsgID>() {
  return ::SD_ServerConfig_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_ServerConfig_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_ServerConfig_MsgID>() {
  return ::DS_ServerConfig_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DL_ServerConfig_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DL_ServerConfig_MsgID>() {
  return ::DL_ServerConfig_MsgID_descriptor();
}
template <> struct is_proto_enum< ::WL_ChangeMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WL_ChangeMoney_MsgID>() {
  return ::WL_ChangeMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_ChangeMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_ChangeMoney_MsgID>() {
  return ::LS_ChangeMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SL_ChangeMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SL_ChangeMoney_MsgID>() {
  return ::SL_ChangeMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LW_ChangeMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LW_ChangeMoney_MsgID>() {
  return ::LW_ChangeMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_OfflineChangeMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_OfflineChangeMoney_MsgID>() {
  return ::LD_OfflineChangeMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::GL_GetServerCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GL_GetServerCfg_MsgID>() {
  return ::GL_GetServerCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_GetServerCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_GetServerCfg_MsgID>() {
  return ::LD_GetServerCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DL_DBGameConfigMgr_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DL_DBGameConfigMgr_MsgID>() {
  return ::DL_DBGameConfigMgr_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LG_DBGameConfigMgr_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LG_DBGameConfigMgr_MsgID>() {
  return ::LG_DBGameConfigMgr_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SL_Channel_Invite_Tax_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SL_Channel_Invite_Tax_MsgID>() {
  return ::SL_Channel_Invite_Tax_MsgID_descriptor();
}
template <> struct is_proto_enum< ::WL_BroadcastClientUpdate_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WL_BroadcastClientUpdate_MsgID>() {
  return ::WL_BroadcastClientUpdate_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LW_ClientUpdateResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LW_ClientUpdateResult_MsgID>() {
  return ::LW_ClientUpdateResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::WL_LuaCmdPlayerResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WL_LuaCmdPlayerResult_MsgID>() {
  return ::WL_LuaCmdPlayerResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LW_LuaCmdPlayerResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LW_LuaCmdPlayerResult_MsgID>() {
  return ::LW_LuaCmdPlayerResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_LuaCmdPlayerResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_LuaCmdPlayerResult_MsgID>() {
  return ::LS_LuaCmdPlayerResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SL_LuaCmdPlayerResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SL_LuaCmdPlayerResult_MsgID>() {
  return ::SL_LuaCmdPlayerResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_LuaCmdPlayerResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_LuaCmdPlayerResult_MsgID>() {
  return ::LD_LuaCmdPlayerResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DL_LuaCmdPlayerResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DL_LuaCmdPlayerResult_MsgID>() {
  return ::DL_LuaCmdPlayerResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_AgentsTransfer_finish_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_AgentsTransfer_finish_MsgID>() {
  return ::LD_AgentsTransfer_finish_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_CC_ChangeMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_CC_ChangeMoney_MsgID>() {
  return ::LS_CC_ChangeMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SL_CC_ChangeMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SL_CC_ChangeMoney_MsgID>() {
  return ::SL_CC_ChangeMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_CC_ChangeMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_CC_ChangeMoney_MsgID>() {
  return ::LD_CC_ChangeMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DL_CC_ChangeMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DL_CC_ChangeMoney_MsgID>() {
  return ::DL_CC_ChangeMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_DO_SQL_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_DO_SQL_MsgID>() {
  return ::LD_DO_SQL_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DL_DO_SQL_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DL_DO_SQL_MsgID>() {
  return ::DL_DO_SQL_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SL_Log_Robot_Money_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SL_Log_Robot_Money_MsgID>() {
  return ::SL_Log_Robot_Money_MsgID_descriptor();
}
template <> struct is_proto_enum< ::WF_GetCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WF_GetCfg_MsgID>() {
  return ::WF_GetCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::FW_GetCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FW_GetCfg_MsgID>() {
  return ::FW_GetCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::FG_GameServerCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FG_GameServerCfg_MsgID>() {
  return ::FG_GameServerCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_AlipayEdit_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_AlipayEdit_MsgID>() {
  return ::LD_AlipayEdit_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DL_AlipayEdit_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DL_AlipayEdit_MsgID>() {
  return ::DL_AlipayEdit_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_AlipayEdit_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_AlipayEdit_MsgID>() {
  return ::LS_AlipayEdit_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SL_AddMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SL_AddMoney_MsgID>() {
  return ::SL_AddMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DL_AddMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DL_AddMoney_MsgID>() {
  return ::DL_AddMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_AddMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_AddMoney_MsgID>() {
  return ::LS_AddMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LD_AddMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LD_AddMoney_MsgID>() {
  return ::LD_AddMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_FreezeAccount_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_FreezeAccount_MsgID>() {
  return ::LS_FreezeAccount_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SL_FreezeAccount_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SL_FreezeAccount_MsgID>() {
  return ::SL_FreezeAccount_MsgID_descriptor();
}
template <> struct is_proto_enum< ::WS_MaintainUpdate_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WS_MaintainUpdate_MsgID>() {
  return ::WS_MaintainUpdate_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SW_MaintainResult_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SW_MaintainResult_MsgID>() {
  return ::SW_MaintainResult_MsgID_descriptor();
}
template <> struct is_proto_enum< ::CS_QueryMaintain_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CS_QueryMaintain_MsgID>() {
  return ::CS_QueryMaintain_MsgID_descriptor();
}
template <> struct is_proto_enum< ::GF_PlayerIn_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GF_PlayerIn_MsgID>() {
  return ::GF_PlayerIn_MsgID_descriptor();
}
template <> struct is_proto_enum< ::GF_PlayerOut_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GF_PlayerOut_MsgID>() {
  return ::GF_PlayerOut_MsgID_descriptor();
}
template <> struct is_proto_enum< ::WF_ChangeRobotCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WF_ChangeRobotCfg_MsgID>() {
  return ::WF_ChangeRobotCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::FW_ChangeRobotCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FW_ChangeRobotCfg_MsgID>() {
  return ::FW_ChangeRobotCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::FS_ChangeRobotCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FS_ChangeRobotCfg_MsgID>() {
  return ::FS_ChangeRobotCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_QueryRobotCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_QueryRobotCfg_MsgID>() {
  return ::SD_QueryRobotCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_QueryRobotCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_QueryRobotCfg_MsgID>() {
  return ::DS_QueryRobotCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_Save_Storage_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_Save_Storage_MsgID>() {
  return ::SD_Save_Storage_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_Agent_CashMoney_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_Agent_CashMoney_MsgID>() {
  return ::SD_Agent_CashMoney_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_UpdateGameTotalTax_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_UpdateGameTotalTax_MsgID>() {
  return ::SD_UpdateGameTotalTax_MsgID_descriptor();
}
template <> struct is_proto_enum< ::WF_Cash_false_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WF_Cash_false_MsgID>() {
  return ::WF_Cash_false_MsgID_descriptor();
}
template <> struct is_proto_enum< ::FS_Black_List_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FS_Black_List_MsgID>() {
  return ::FS_Black_List_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_BindBankCard_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_BindBankCard_MsgID>() {
  return ::SD_BindBankCard_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_BindBankCard_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_BindBankCard_MsgID>() {
  return ::DS_BindBankCard_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_GetBankCardInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_GetBankCardInfo_MsgID>() {
  return ::SD_GetBankCardInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_GetBankCardInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_GetBankCardInfo_MsgID>() {
  return ::DS_GetBankCardInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::FG_ClientChannelInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FG_ClientChannelInfo_MsgID>() {
  return ::FG_ClientChannelInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::WL_LuaGameCmd_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WL_LuaGameCmd_MsgID>() {
  return ::WL_LuaGameCmd_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LW_LuaGameCmd_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LW_LuaGameCmd_MsgID>() {
  return ::LW_LuaGameCmd_MsgID_descriptor();
}
template <> struct is_proto_enum< ::LS_LuaGameCmd_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LS_LuaGameCmd_MsgID>() {
  return ::LS_LuaGameCmd_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SL_LuaGameCmd_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SL_LuaGameCmd_MsgID>() {
  return ::SL_LuaGameCmd_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_QueryBrnnChiCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_QueryBrnnChiCfg_MsgID>() {
  return ::SD_QueryBrnnChiCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_QueryBrnnChiCfg_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_QueryBrnnChiCfg_MsgID>() {
  return ::DS_QueryBrnnChiCfg_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_QueryPlayerPromotion_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_QueryPlayerPromotion_MsgID>() {
  return ::SD_QueryPlayerPromotion_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_QueryPlayerPromotion_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_QueryPlayerPromotion_MsgID>() {
  return ::DS_QueryPlayerPromotion_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_NotifyPhpServer_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_NotifyPhpServer_MsgID>() {
  return ::SD_NotifyPhpServer_MsgID_descriptor();
}
template <> struct is_proto_enum< ::SD_QueryPlayerRecharge_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SD_QueryPlayerRecharge_MsgID>() {
  return ::SD_QueryPlayerRecharge_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DS_QueryPlayerRecharge_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DS_QueryPlayerRecharge_MsgID>() {
  return ::DS_QueryPlayerRecharge_MsgID_descriptor();
}
template <> struct is_proto_enum< ::GF_SavePlayerInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GF_SavePlayerInfo_MsgID>() {
  return ::GF_SavePlayerInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::GF_GetPlayerInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GF_GetPlayerInfo_MsgID>() {
  return ::GF_GetPlayerInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::FG_GetPlayerInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FG_GetPlayerInfo_MsgID>() {
  return ::FG_GetPlayerInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DF_SavePlayerInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DF_SavePlayerInfo_MsgID>() {
  return ::DF_SavePlayerInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::DF_GetPlayerInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DF_GetPlayerInfo_MsgID>() {
  return ::DF_GetPlayerInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::FD_GetPlayerInfo_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FD_GetPlayerInfo_MsgID>() {
  return ::FD_GetPlayerInfo_MsgID_descriptor();
}
template <> struct is_proto_enum< ::WF_SavePlayersInfoToMySQL_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WF_SavePlayersInfoToMySQL_MsgID>() {
  return ::WF_SavePlayersInfoToMySQL_MsgID_descriptor();
}
template <> struct is_proto_enum< ::FW_SavePlayersInfoToMySQL_MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FW_SavePlayersInfoToMySQL_MsgID>() {
  return ::FW_SavePlayersInfoToMySQL_MsgID_descriptor();
}
template <> struct is_proto_enum< ::ServerSessionFrom> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ServerSessionFrom>() {
  return ::ServerSessionFrom_descriptor();
}
template <> struct is_proto_enum< ::Msg_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Msg_type>() {
  return ::Msg_type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_2eproto__INCLUDED
